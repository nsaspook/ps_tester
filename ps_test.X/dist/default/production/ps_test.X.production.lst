

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Apr  5 16:45:32 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
    10                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    22                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    23                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    25                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    26                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    27                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    28                           	psect	text0,global,reloc=2,class=CODE,delta=1
    29                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text2,global,reloc=2,class=CODE,delta=1
    31                           	psect	text3,global,reloc=2,class=CODE,delta=1
    32                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    59                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text32,global,reloc=2,class=CODE,delta=1
    61                           	psect	text33,global,reloc=2,class=CODE,delta=1
    62                           	psect	text34,global,reloc=2,class=CODE,delta=1
    63                           	psect	text35,global,reloc=2,class=CODE,delta=1
    64                           	psect	text36,global,reloc=2,class=CODE,delta=1
    65                           	psect	text37,global,reloc=2,class=CODE,delta=1
    66                           	psect	text38,global,reloc=2,class=CODE,delta=1
    67                           	psect	text39,global,reloc=2,class=CODE,delta=1
    68                           	psect	text40,global,reloc=2,class=CODE,delta=1
    69                           	psect	text41,global,reloc=2,class=CODE,delta=1
    70                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=3
    71                           	psect	text43,global,reloc=2,class=CODE,delta=1
    72                           	psect	text44,global,reloc=2,class=CODE,delta=1
    73                           	psect	text45,global,reloc=2,class=CODE,delta=1
    74                           	psect	text46,global,reloc=2,class=CODE,delta=1
    75                           	psect	text47,global,reloc=2,class=CODE,delta=1
    76                           	psect	text48,global,reloc=2,class=CODE,delta=1
    77                           	psect	text49,global,reloc=2,class=CODE,delta=1
    78                           	psect	text50,global,reloc=2,class=CODE,delta=1
    79                           	psect	text51,global,reloc=2,class=CODE,delta=1
    80                           	psect	text52,global,reloc=2,class=CODE,delta=1
    81                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=3
    82                           	psect	text54,global,reloc=2,class=CODE,delta=1
    83                           	psect	text55,global,reloc=2,class=CODE,delta=1
    84                           	psect	text56,global,reloc=2,class=CODE,delta=1
    85                           	psect	text57,global,reloc=2,class=CODE,delta=1
    86                           	psect	text58,global,reloc=2,class=CODE,delta=1
    87                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=3
    88                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=3
    89                           	psect	text61,global,reloc=2,class=CODE,delta=1
    90                           	psect	text62,global,reloc=2,class=CODE,delta=1
    91                           	psect	text63,global,reloc=2,class=CODE,delta=1
    92                           	psect	text64,global,reloc=2,class=CODE,delta=1
    93                           	psect	text65,global,reloc=2,class=CODE,delta=1
    94                           	psect	text66,global,reloc=2,class=CODE,delta=1
    95                           	psect	text67,global,reloc=2,class=CODE,delta=1
    96                           	psect	text68,global,reloc=2,class=CODE,delta=1
    97                           	psect	text69,global,reloc=2,class=CODE,delta=1
    98                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=3
    99                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=3
   100                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=3
   101                           	psect	text73,global,reloc=2,class=CODE,delta=1
   102                           	psect	text74,global,reloc=2,class=CODE,delta=1
   103                           	psect	text75,global,reloc=2,class=CODE,delta=1
   104                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
   105                           	psect	text77,global,reloc=2,class=CODE,delta=1
   106                           	psect	text78,global,reloc=2,class=CODE,delta=1
   107                           	psect	text79,global,reloc=2,class=CODE,delta=1
   108                           	psect	text80,global,reloc=2,class=CODE,delta=1
   109                           	psect	text81,global,reloc=2,class=CODE,delta=1
   110                           	psect	text82,global,reloc=2,class=CODE,delta=1
   111                           	psect	text83,global,reloc=2,class=CODE,delta=1
   112                           	psect	text84,global,reloc=2,class=CODE,delta=1
   113                           	psect	text85,global,reloc=2,class=CODE,delta=1
   114                           	psect	text86,global,reloc=2,class=CODE,delta=1
   115                           	psect	text87,global,reloc=2,class=CODE,delta=1
   116                           	psect	text88,global,reloc=2,class=CODE,delta=1
   117                           	psect	text89,global,reloc=2,class=CODE,delta=1
   118                           	psect	text90,global,reloc=2,class=CODE,delta=1
   119                           	psect	text91,global,reloc=2,class=CODE,delta=1
   120                           	psect	text92,global,reloc=2,class=CODE,delta=1
   121                           	psect	text93,global,reloc=2,class=CODE,delta=1
   122                           	psect	text94,global,reloc=2,class=CODE,delta=1
   123                           	psect	text95,global,reloc=2,class=CODE,delta=1
   124                           	psect	text96,global,reloc=2,class=CODE,delta=1
   125                           	psect	text97,global,reloc=2,class=CODE,delta=1
   126                           	psect	text98,global,reloc=2,class=CODE,delta=1
   127                           	psect	text99,global,reloc=2,class=CODE,delta=1
   128                           	psect	text100,global,reloc=2,class=CODE,delta=1
   129                           	psect	text101,global,reloc=2,class=CODE,delta=1
   130                           	psect	text102,global,reloc=2,class=CODE,delta=1
   131                           	psect	text103,global,reloc=2,class=CODE,delta=1
   132                           	psect	text104,global,reloc=2,class=CODE,delta=1
   133                           	psect	text105,global,reloc=2,class=CODE,delta=1
   134                           	psect	text106,global,reloc=2,class=CODE,delta=1
   135                           	psect	text107,global,reloc=2,class=CODE,delta=1
   136                           	psect	text108,global,reloc=2,class=CODE,delta=1
   137                           	psect	text109,global,reloc=2,class=CODE,delta=1
   138                           	psect	text110,global,reloc=2,class=CODE,delta=1
   139                           	psect	text111,global,reloc=2,class=CODE,delta=1
   140                           	psect	text112,global,reloc=4,class=CODE,delta=1
   141                           	psect	text113,global,reloc=2,class=CODE,delta=1
   142                           	psect	text114,global,reloc=4,class=CODE,delta=1
   143                           	psect	text115,global,reloc=2,class=CODE,delta=1
   144                           	psect	text116,global,reloc=2,class=CODE,delta=1
   145                           	psect	text117,global,reloc=2,class=CODE,delta=1
   146                           	psect	text118,global,reloc=2,class=CODE,delta=1
   147                           	psect	text119,global,reloc=2,class=CODE,delta=1
   148                           	psect	text120,global,reloc=4,class=CODE,delta=1
   149                           	psect	text121,global,reloc=2,class=CODE,delta=1
   150                           	psect	text122,global,reloc=2,class=CODE,delta=1
   151                           	psect	text123,global,reloc=2,class=CODE,delta=1
   152                           	psect	text124,global,reloc=4,class=CODE,delta=1
   153                           	psect	text125,global,reloc=2,class=CODE,delta=1
   154                           	psect	text126,global,reloc=2,class=CODE,delta=1
   155                           	psect	text127,global,reloc=2,class=CODE,delta=1
   156                           	psect	text128,global,reloc=4,class=CODE,delta=1
   157                           	psect	text129,global,reloc=4,class=CODE,delta=1
   158                           	psect	text130,global,reloc=2,class=CODE,delta=1
   159                           	psect	text131,global,reloc=2,class=CODE,delta=1
   160                           	psect	text132,global,reloc=2,class=CODE,delta=1
   161                           	psect	text133,global,reloc=4,class=CODE,delta=1
   162                           	psect	text134,global,reloc=2,class=CODE,delta=1
   163                           	psect	text135,global,reloc=2,class=CODE,delta=1
   164                           	psect	text136,global,reloc=4,class=CODE,delta=1
   165                           	psect	text137,global,reloc=2,class=CODE,delta=1
   166                           	psect	text138,global,reloc=4,class=CODE,delta=1
   167                           	psect	text139,global,reloc=2,class=CODE,delta=1
   168                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   169                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   170                           	psect	text140,global,reloc=2,class=CODE,delta=1
   171                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   172                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   173                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   174  0000                     
   175                           ; Version 2.40
   176                           ; Generated 17/11/2021 GMT
   177                           ; 
   178                           ; Copyright © 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   179                           ; All rights reserved.
   180                           ; 
   181                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   182                           ; 
   183                           ; Redistribution and use in source and binary forms, with or without modification, are
   184                           ; permitted provided that the following conditions are met:
   185                           ; 
   186                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   187                           ;        conditions and the following disclaimer.
   188                           ; 
   189                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   190                           ;        of conditions and the following disclaimer in the documentation and/or other
   191                           ;        materials provided with the distribution. Publication is not required when
   192                           ;        this file is used in an embedded application.
   193                           ; 
   194                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   195                           ;        software without specific prior written permission.
   196                           ; 
   197                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   198                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   199                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   200                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   201                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   202                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   203                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   204                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   205                           ; 
   206                           ; 
   207                           ; Code-generator required, PIC18F57K42 Definitions
   208                           ; 
   209                           ; SFR Addresses
   210  0000                     
   211                           	psect	idataCOMRAM
   212  014F1E                     __pidataCOMRAM:
   213                           	callstack 0
   214                           
   215                           ;initializer for _ps_type_ptr
   216  014F1E  B2                 	db	low _ps_type
   217  014F1F  02                 	db	high _ps_type
   218                           
   219                           	psect	idataBIGRAM
   220  01172C                     __pidataBIGRAM:
   221                           	callstack 0
   222                           
   223                           ;initializer for _port_data
   224  01172C  FF                 	db	255
   225  01172D  00                 	db	0
   226  01172E  FF                 	db	255
   227  01172F  00                 	db	0
   228  011730  FF                 	db	255
   229  011731  00                 	db	0
   230  011732  FF                 	db	255
   231  011733  00                 	db	0
   232  011734  FF                 	db	255
   233  011735  00                 	db	0
   234  011736  FF                 	db	255
   235  011737  00                 	db	0
   236  011738  FF                 	db	255
   237  011739  00                 	db	0
   238  01173A  FF                 	db	255
   239  01173B  00                 	db	0
   240  01173C  00                 	db	0
   241  01173D  00                 	db	0
   242  01173E  00                 	db	0
   243  01173F  00                 	db	0
   244  011740  00                 	db	0
   245  011741  00                 	db	0
   246  011742  00                 	db	0
   247  011743  00                 	db	0
   248  011744  00                 	db	0
   249  011745  00                 	db	0
   250  011746  00                 	db	0
   251  011747  00                 	db	0
   252  011748  00                 	db	0
   253  011749  00                 	db	0
   254  01174A  00                 	db	0
   255  01174B  00                 	db	0
   256  01174C  00                 	db	0
   257  01174D  00                 	db	0
   258  01174E  00                 	db	0
   259  01174F  00                 	db	0
   260  011750  00                 	db	0
   261  011751  00                 	db	0
   262  011752  00                 	db	0
   263  011753  00                 	db	0
   264  011754  00                 	db	0
   265  011755  00                 	db	0
   266  011756  00                 	db	0
   267  011757  00                 	db	0
   268  011758  00                 	db	0
   269  011759  00                 	db	0
   270  01175A  00                 	db	0
   271  01175B  00                 	db	0
   272  01175C  00                 	db	0
   273  01175D  00                 	db	0
   274  01175E  00                 	db	0
   275  01175F  00                 	db	0
   276  011760  00                 	db	0
   277  011761  00                 	db	0
   278  011762  00                 	db	0
   279  011763  00                 	db	0
   280  011764  00                 	db	0
   281  011765  00                 	db	0
   282  011766  00                 	db	0
   283  011767  00                 	db	0
   284  011768  00                 	db	0
   285  011769  00                 	db	0
   286  01176A  00                 	db	0
   287  01176B  00                 	db	0
   288  01176C  00                 	db	0
   289  01176D  00                 	db	0
   290  01176E  00                 	db	0
   291  01176F  00                 	db	0
   292  011770  00                 	db	0
   293  011771  00                 	db	0
   294  011772  00                 	db	0
   295  011773  00                 	db	0
   296  011774  00                 	db	0
   297  011775  00                 	db	0
   298  011776  00                 	db	0
   299  011777  00                 	db	0
   300  011778  00                 	db	0
   301  011779  00                 	db	0
   302  01177A  00                 	db	0
   303  01177B  00                 	db	0
   304  01177C  00                 	db	0
   305  01177D  00                 	db	0
   306  01177E  00                 	db	0
   307  01177F  00                 	db	0
   308  011780  00                 	db	0
   309  011781  00                 	db	0
   310  011782  00                 	db	0
   311  011783  00                 	db	0
   312  011784  00                 	db	0
   313  011785  00                 	db	0
   314  011786  00                 	db	0
   315  011787  00                 	db	0
   316  011788  00                 	db	0
   317  011789  00                 	db	0
   318  01178A  00                 	db	0
   319  01178B  00                 	db	0
   320  01178C  00                 	db	0
   321  01178D  00                 	db	0
   322  01178E  00                 	db	0
   323  01178F  00                 	db	0
   324  011790  00                 	db	0
   325  011791  00                 	db	0
   326  011792  00                 	db	0
   327  011793  00                 	db	0
   328  011794  00                 	db	0
   329  011795  00                 	db	0
   330  011796  00                 	db	0
   331  011797  00                 	db	0
   332  011798  00                 	db	0
   333  011799  00                 	db	0
   334  01179A  00                 	db	0
   335  01179B  00                 	db	0
   336  01179C  00                 	db	0
   337  01179D  00                 	db	0
   338  01179E  00                 	db	0
   339  01179F  00                 	db	0
   340  0117A0  00                 	db	0
   341  0117A1  00                 	db	0
   342  0117A2  00                 	db	0
   343  0117A3  00                 	db	0
   344  0117A4  00                 	db	0
   345  0117A5  00                 	db	0
   346  0117A6  00                 	db	0
   347  0117A7  00                 	db	0
   348  0117A8  00                 	db	0
   349  0117A9  00                 	db	0
   350  0117AA  00                 	db	0
   351  0117AB  00                 	db	0
   352  0117AC  00                 	db	0
   353  0117AD  00                 	db	0
   354  0117AE  00                 	db	0
   355  0117AF  00                 	db	0
   356  0117B0  00                 	db	0
   357  0117B1  00                 	db	0
   358  0117B2  00                 	db	0
   359  0117B3  00                 	db	0
   360  0117B4  00                 	db	0
   361  0117B5  00                 	db	0
   362  0117B6  00                 	db	0
   363  0117B7  00                 	db	0
   364  0117B8  00                 	db	0
   365  0117B9  00                 	db	0
   366  0117BA  00                 	db	0
   367  0117BB  00                 	db	0
   368  0117BC  00                 	db	0
   369  0117BD  00                 	db	0
   370  0117BE  00                 	db	0
   371  0117BF  00                 	db	0
   372  0117C0  00                 	db	0
   373  0117C1  00                 	db	0
   374  0117C2  00                 	db	0
   375  0117C3  00                 	db	0
   376  0117C4  00                 	db	0
   377  0117C5  00                 	db	0
   378  0117C6  00                 	db	0
   379  0117C7  00                 	db	0
   380  0117C8  00                 	db	0
   381  0117C9  00                 	db	0
   382  0117CA  00                 	db	0
   383  0117CB  00                 	db	0
   384  0117CC  00                 	db	0
   385  0117CD  00                 	db	0
   386  0117CE  00                 	db	0
   387  0117CF  00                 	db	0
   388  0117D0  00                 	db	0
   389  0117D1  00                 	db	0
   390  0117D2  00                 	db	0
   391  0117D3  00                 	db	0
   392  0117D4  00                 	db	0
   393  0117D5  00                 	db	0
   394  0117D6  00                 	db	0
   395  0117D7  00                 	db	0
   396  0117D8  00                 	db	0
   397  0117D9  00                 	db	0
   398  0117DA  00                 	db	0
   399  0117DB  00                 	db	0
   400  0117DC  00                 	db	0
   401  0117DD  00                 	db	0
   402  0117DE  00                 	db	0
   403  0117DF  00                 	db	0
   404  0117E0  00                 	db	0
   405  0117E1  00                 	db	0
   406  0117E2  00                 	db	0
   407  0117E3  00                 	db	0
   408  0117E4  00                 	db	0
   409  0117E5  00                 	db	0
   410  0117E6  00                 	db	0
   411  0117E7  00                 	db	0
   412  0117E8  00                 	db	0
   413  0117E9  00                 	db	0
   414  0117EA  00                 	db	0
   415  0117EB  00                 	db	0
   416  0117EC  00                 	db	0
   417  0117ED  00                 	db	0
   418  0117EE  00                 	db	0
   419  0117EF  00                 	db	0
   420  0117F0  00                 	db	0
   421  0117F1  00                 	db	0
   422  0117F2  00                 	db	0
   423  0117F3  00                 	db	0
   424  0117F4  00                 	db	0
   425  0117F5  00                 	db	0
   426  0117F6  00                 	db	0
   427  0117F7  00                 	db	0
   428  0117F8  00                 	db	0
   429  0117F9  00                 	db	0
   430  0117FA  00                 	db	0
   431  0117FB  00                 	db	0
   432  0117FC  00                 	db	0
   433  0117FD  00                 	db	0
   434  0117FE  00                 	db	0
   435  0117FF  00                 	db	0
   436  011800  00                 	db	0
   437  011801  00                 	db	0
   438  011802  00                 	db	0
   439  011803  00                 	db	0
   440  011804  00                 	db	0
   441  011805  00                 	db	0
   442  011806  00                 	db	0
   443  011807  00                 	db	0
   444  011808  00                 	db	0
   445  011809  00                 	db	0
   446  01180A  00                 	db	0
   447  01180B  00                 	db	0
   448  01180C  00                 	db	0
   449  01180D  00                 	db	0
   450  01180E  00                 	db	0
   451  01180F  00                 	db	0
   452  011810  00                 	db	0
   453  011811  00                 	db	0
   454  011812  00                 	db	0
   455  011813  00                 	db	0
   456  011814  00                 	db	0
   457  011815  00                 	db	0
   458  011816  00                 	db	0
   459  011817  00                 	db	0
   460  011818  00                 	db	0
   461  011819  00                 	db	0
   462  01181A  00                 	db	0
   463  01181B  00                 	db	0
   464  01181C  00                 	db	0
   465  01181D  00                 	db	0
   466  01181E  00                 	db	0
   467  01181F  00                 	db	0
   468  011820  00                 	db	0
   469  011821  00                 	db	0
   470  011822  00                 	db	0
   471  011823  00                 	db	0
   472  011824  00                 	db	0
   473  011825  00                 	db	0
   474  011826  00                 	db	0
   475  011827  00                 	db	0
   476  011828  00                 	db	0
   477  011829  00                 	db	0
   478  01182A  00                 	db	0
   479  01182B  00                 	db	0
   480  01182C  00                 	db	0
   481  01182D  00                 	db	0
   482  01182E  00                 	db	0
   483  01182F  00                 	db	0
   484  011830  00                 	db	0
   485  011831  00                 	db	0
   486  011832  00                 	db	0
   487  011833  00                 	db	0
   488  011834  00                 	db	0
   489  011835  00                 	db	0
   490  011836  00                 	db	0
   491  011837  00                 	db	0
   492  011838  00                 	db	0
   493  011839  00                 	db	0
   494  01183A  00                 	db	0
   495  01183B  00                 	db	0
   496  01183C  00                 	db	0
   497  01183D  00                 	db	0
   498  01183E  00                 	db	0
   499  01183F  00                 	db	0
   500  011840  00                 	db	0
   501  011841  00                 	db	0
   502  011842  00                 	db	0
   503  011843  00                 	db	0
   504  011844  00                 	db	0
   505  011845  00                 	db	0
   506  011846  00                 	db	0
   507  011847  00                 	db	0
   508  011848  00                 	db	0
   509  011849  00                 	db	0
   510  01184A  00                 	db	0
   511  01184B  00                 	db	0
   512  01184C  00                 	db	0
   513  01184D  00                 	db	0
   514  01184E  00                 	db	0
   515  01184F  00                 	db	0
   516  011850  00                 	db	0
   517  011851  00                 	db	0
   518  011852  00                 	db	0
   519  011853  00                 	db	0
   520  011854  00                 	db	0
   521  011855  00                 	db	0
   522  011856  00                 	db	0
   523  011857  00                 	db	0
   524  011858  00                 	db	0
   525  011859  00                 	db	0
   526  01185A  00                 	db	0
   527  01185B  00                 	db	0
   528  01185C  00                 	db	0
   529  01185D  00                 	db	0
   530  01185E  00                 	db	0
   531  01185F  00                 	db	0
   532  011860  00                 	db	0
   533  011861  00                 	db	0
   534  011862  00                 	db	0
   535  011863  00                 	db	0
   536  011864  00                 	db	0
   537  011865  00                 	db	0
   538  011866  00                 	db	0
   539  011867  00                 	db	0
   540  011868  00                 	db	0
   541  011869  00                 	db	0
   542  01186A  00                 	db	0
   543  01186B  00                 	db	0
   544  01186C  00                 	db	0
   545  01186D  00                 	db	0
   546  01186E  00                 	db	0
   547  01186F  00                 	db	0
   548  011870  00                 	db	0
   549  011871  00                 	db	0
   550  011872  00                 	db	0
   551  011873  00                 	db	0
   552  011874  00                 	db	0
   553  011875  00                 	db	0
   554  011876  00                 	db	0
   555  011877  00                 	db	0
   556  011878  00                 	db	0
   557  011879  00                 	db	0
   558  01187A  00                 	db	0
   559  01187B  00                 	db	0
   560  01187C  00                 	db	0
   561  01187D  00                 	db	0
   562  01187E  00                 	db	0
   563  01187F  00                 	db	0
   564  011880  00                 	db	0
   565  011881  00                 	db	0
   566  011882  00                 	db	0
   567  011883  00                 	db	0
   568  011884  00                 	db	0
   569  011885  00                 	db	0
   570  011886  00                 	db	0
   571  011887  00                 	db	0
   572  011888  00                 	db	0
   573  011889  00                 	db	0
   574  01188A  00                 	db	0
   575  01188B  00                 	db	0
   576  01188C  00                 	db	0
   577  01188D  00                 	db	0
   578  01188E  00                 	db	0
   579  01188F  00                 	db	0
   580  011890  00                 	db	0
   581  011891  00                 	db	0
   582  011892  00                 	db	0
   583  011893  00                 	db	0
   584  011894  00                 	db	0
   585  011895  00                 	db	0
   586  011896  00                 	db	0
   587  011897  00                 	db	0
   588  011898  00                 	db	0
   589  011899  00                 	db	0
   590  01189A  00                 	db	0
   591  01189B  00                 	db	0
   592  01189C  00                 	db	0
   593  01189D  00                 	db	0
   594  01189E  00                 	db	0
   595  01189F  00                 	db	0
   596  0118A0  00                 	db	0
   597  0118A1  00                 	db	0
   598  0118A2  00                 	db	0
   599  0118A3  00                 	db	0
   600  0118A4  00                 	db	0
   601  0118A5  00                 	db	0
   602  0118A6  00                 	db	0
   603  0118A7  00                 	db	0
   604  0118A8  00                 	db	0
   605  0118A9  00                 	db	0
   606  0118AA  00                 	db	0
   607  0118AB  00                 	db	0
   608  0118AC  00                 	db	0
   609  0118AD  00                 	db	0
   610  0118AE  00                 	db	0
   611  0118AF  00                 	db	0
   612  0118B0  00                 	db	0
   613  0118B1  00                 	db	0
   614  0118B2  00                 	db	0
   615  0118B3  00                 	db	0
   616  0118B4  00                 	db	0
   617  0118B5  00                 	db	0
   618  0118B6  00                 	db	0
   619  0118B7  00                 	db	0
   620  0118B8  00                 	db	0
   621  0118B9  00                 	db	0
   622  0118BA  00                 	db	0
   623  0118BB  00                 	db	0
   624  0118BC  00                 	db	0
   625  0118BD  00                 	db	0
   626  0118BE  00                 	db	0
   627  0118BF  00                 	db	0
   628  0118C0  00                 	db	0
   629  0118C1  00                 	db	0
   630  0118C2  00                 	db	0
   631  0118C3  00                 	db	0
   632  0118C4  00                 	db	0
   633  0118C5  00                 	db	0
   634  0118C6  00                 	db	0
   635  0118C7  00                 	db	0
   636  0118C8  00                 	db	0
   637  0118C9  00                 	db	0
   638  0118CA  00                 	db	0
   639  0118CB  00                 	db	0
   640  0118CC  00                 	db	0
   641  0118CD  00                 	db	0
   642  0118CE  00                 	db	0
   643  0118CF  00                 	db	0
   644  0118D0  00                 	db	0
   645  0118D1  00                 	db	0
   646  0118D2  00                 	db	0
   647  0118D3  00                 	db	0
   648  0118D4  00                 	db	0
   649  0118D5  00                 	db	0
   650  0118D6  00                 	db	0
   651  0118D7  00                 	db	0
   652  0118D8  00                 	db	0
   653  0118D9  00                 	db	0
   654  0118DA  00                 	db	0
   655  0118DB  00                 	db	0
   656  0118DC  00                 	db	0
   657  0118DD  00                 	db	0
   658  0118DE  00                 	db	0
   659  0118DF  00                 	db	0
   660  0118E0  00                 	db	0
   661  0118E1  00                 	db	0
   662  0118E2  00                 	db	0
   663  0118E3  00                 	db	0
   664  0118E4  00                 	db	0
   665  0118E5  00                 	db	0
   666  0118E6  00                 	db	0
   667  0118E7  00                 	db	0
   668  0118E8  00                 	db	0
   669  0118E9  00                 	db	0
   670  0118EA  00                 	db	0
   671  0118EB  00                 	db	0
   672  0118EC  00                 	db	0
   673  0118ED  00                 	db	0
   674  0118EE  00                 	db	0
   675  0118EF  00                 	db	0
   676  0118F0  00                 	db	0
   677  0118F1  00                 	db	0
   678  0118F2  00                 	db	0
   679  0118F3  00                 	db	0
   680  0118F4  00                 	db	0
   681  0118F5  00                 	db	0
   682  0118F6  00                 	db	0
   683  0118F7  00                 	db	0
   684  0118F8  00                 	db	0
   685  0118F9  00                 	db	0
   686  0118FA  00                 	db	0
   687  0118FB  00                 	db	0
   688  0118FC  00                 	db	0
   689  0118FD  00                 	db	0
   690  0118FE  00                 	db	0
   691  0118FF  00                 	db	0
   692  011900  00                 	db	0
   693  011901  00                 	db	0
   694  011902  00                 	db	0
   695  011903  00                 	db	0
   696  011904  00                 	db	0
   697  011905  00                 	db	0
   698  011906  00                 	db	0
   699  011907  00                 	db	0
   700  011908  00                 	db	0
   701  011909  00                 	db	0
   702  01190A  00                 	db	0
   703  01190B  00                 	db	0
   704  01190C  00                 	db	0
   705  01190D  00                 	db	0
   706  01190E  00                 	db	0
   707  01190F  00                 	db	0
   708  011910  00                 	db	0
   709  011911  00                 	db	0
   710  011912  00                 	db	0
   711  011913  00                 	db	0
   712  011914  00                 	db	0
   713  011915  00                 	db	0
   714  011916  00                 	db	0
   715  011917  00                 	db	0
   716  011918  00                 	db	0
   717  011919  00                 	db	0
   718  01191A  00                 	db	0
   719  01191B  00                 	db	0
   720  01191C  00                 	db	0
   721  01191D  00                 	db	0
   722  01191E  00                 	db	0
   723  01191F  00                 	db	0
   724  011920  00                 	db	0
   725  011921  00                 	db	0
   726  011922  00                 	db	0
   727  011923  00                 	db	0
   728  011924  00                 	db	0
   729  011925  00                 	db	0
   730  011926  00                 	db	0
   731  011927  00                 	db	0
   732  011928  00                 	db	0
   733  011929  00                 	db	0
   734  01192A  00                 	db	0
   735  01192B  00                 	db	0
   736  01192C  00                 	db	0
   737  01192D  00                 	db	0
   738  01192E  00                 	db	0
   739  01192F  00                 	db	0
   740  011930  00                 	db	0
   741  011931  00                 	db	0
   742  011932  00                 	db	0
   743  011933  00                 	db	0
   744  011934  00                 	db	0
   745  011935  00                 	db	0
   746  011936  00                 	db	0
   747  011937  00                 	db	0
   748  011938  00                 	db	0
   749  011939  00                 	db	0
   750  01193A  00                 	db	0
   751  01193B  00                 	db	0
   752  01193C  00                 	db	0
   753  01193D  00                 	db	0
   754  01193E  00                 	db	0
   755  01193F  00                 	db	0
   756  011940  00                 	db	0
   757  011941  00                 	db	0
   758  011942  00                 	db	0
   759  011943  00                 	db	0
   760  011944  00                 	db	0
   761  011945  00                 	db	0
   762  011946  00                 	db	0
   763  011947  00                 	db	0
   764  011948  00                 	db	0
   765  011949  00                 	db	0
   766  01194A  00                 	db	0
   767  01194B  00                 	db	0
   768  01194C  00                 	db	0
   769  01194D  00                 	db	0
   770  01194E  00                 	db	0
   771  01194F  00                 	db	0
   772  011950  00                 	db	0
   773  011951  00                 	db	0
   774  011952  00                 	db	0
   775  011953  00                 	db	0
   776  011954  00                 	db	0
   777  011955  00                 	db	0
   778  011956  00                 	db	0
   779  011957  00                 	db	0
   780  011958  00                 	db	0
   781  011959  00                 	db	0
   782  01195A  00                 	db	0
   783  01195B  00                 	db	0
   784  01195C  00                 	db	0
   785  01195D  00                 	db	0
   786  01195E  00                 	db	0
   787  01195F  00                 	db	0
   788  011960  00                 	db	0
   789  011961  00                 	db	0
   790  011962  00                 	db	0
   791  011963  00                 	db	0
   792  011964  00                 	db	0
   793  011965  00                 	db	0
   794  011966  00                 	db	0
   795  011967  00                 	db	0
   796  011968  00                 	db	0
   797  011969  00                 	db	0
   798  01196A  00                 	db	0
   799  01196B  00                 	db	0
   800  01196C  00                 	db	0
   801  01196D  00                 	db	0
   802  01196E  00                 	db	0
   803  01196F  00                 	db	0
   804  011970  00                 	db	0
   805  011971  00                 	db	0
   806  011972  00                 	db	0
   807  011973  00                 	db	0
   808  011974  00                 	db	0
   809  011975  00                 	db	0
   810  011976  00                 	db	0
   811  011977  00                 	db	0
   812  011978  00                 	db	0
   813  011979  00                 	db	0
   814  01197A  00                 	db	0
   815  01197B  00                 	db	0
   816  01197C  00                 	db	0
   817  01197D  00                 	db	0
   818  01197E  00                 	db	0
   819  01197F  00                 	db	0
   820  011980  00                 	db	0
   821  011981  00                 	db	0
   822  011982  00                 	db	0
   823  011983  00                 	db	0
   824  011984  00                 	db	0
   825  011985  00                 	db	0
   826  011986  00                 	db	0
   827  011987  00                 	db	0
   828  011988  00                 	db	0
   829  011989  00                 	db	0
   830  01198A  00                 	db	0
   831  01198B  00                 	db	0
   832  01198C  00                 	db	0
   833  01198D  00                 	db	0
   834  01198E  00                 	db	0
   835  01198F  00                 	db	0
   836  011990  00                 	db	0
   837  011991  00                 	db	0
   838  011992  00                 	db	0
   839  011993  00                 	db	0
   840  011994  00                 	db	0
   841  011995  00                 	db	0
   842  011996  00                 	db	0
   843  011997  00                 	db	0
   844  011998  00                 	db	0
   845  011999  00                 	db	0
   846  01199A  00                 	db	0
   847  01199B  00                 	db	0
   848  01199C  00                 	db	0
   849  01199D  00                 	db	0
   850  01199E  00                 	db	0
   851  01199F  00                 	db	0
   852  0119A0  00                 	db	0
   853  0119A1  00                 	db	0
   854  0119A2  00                 	db	0
   855  0119A3  00                 	db	0
   856  0119A4  00                 	db	0
   857  0119A5  00                 	db	0
   858  0119A6  00                 	db	0
   859  0119A7  00                 	db	0
   860  0119A8  00                 	db	0
   861  0119A9  00                 	db	0
   862  0119AA  00                 	db	0
   863  0119AB  00                 	db	0
   864  0119AC  00                 	db	0
   865  0119AD  00                 	db	0
   866  0119AE  00                 	db	0
   867  0119AF  00                 	db	0
   868  0119B0  00                 	db	0
   869  0119B1  00                 	db	0
   870  0119B2  00                 	db	0
   871  0119B3  00                 	db	0
   872  0119B4  00                 	db	0
   873  0119B5  00                 	db	0
   874  0119B6  00                 	db	0
   875  0119B7  00                 	db	0
   876  0119B8  00                 	db	0
   877  0119B9  00                 	db	0
   878  0119BA  00                 	db	0
   879  0119BB  00                 	db	0
   880  0119BC  00                 	db	0
   881  0119BD  00                 	db	0
   882  0119BE  00                 	db	0
   883  0119BF  00                 	db	0
   884  0119C0  00                 	db	0
   885  0119C1  00                 	db	0
   886  0119C2  00                 	db	0
   887  0119C3  00                 	db	0
   888  0119C4  00                 	db	0
   889  0119C5  00                 	db	0
   890  0119C6  00                 	db	0
   891  0119C7  00                 	db	0
   892  0119C8  00                 	db	0
   893  0119C9  00                 	db	0
   894  0119CA  00                 	db	0
   895  0119CB  00                 	db	0
   896  0119CC  00                 	db	0
   897  0119CD  00                 	db	0
   898  0119CE  00                 	db	0
   899  0119CF  00                 	db	0
   900  0119D0  00                 	db	0
   901  0119D1  00                 	db	0
   902  0119D2  00                 	db	0
   903  0119D3  00                 	db	0
   904  0119D4  00                 	db	0
   905  0119D5  00                 	db	0
   906  0119D6  00                 	db	0
   907  0119D7  00                 	db	0
   908  0119D8  00                 	db	0
   909  0119D9  00                 	db	0
   910  0119DA  00                 	db	0
   911  0119DB  00                 	db	0
   912  0119DC  00                 	db	0
   913  0119DD  00                 	db	0
   914  0119DE  00                 	db	0
   915  0119DF  00                 	db	0
   916  0119E0  00                 	db	0
   917  0119E1  00                 	db	0
   918  0119E2  00                 	db	0
   919  0119E3  00                 	db	0
   920  0119E4  00                 	db	0
   921  0119E5  00                 	db	0
   922  0119E6  00                 	db	0
   923  0119E7  00                 	db	0
   924  0119E8  00                 	db	0
   925  0119E9  00                 	db	0
   926  0119EA  00                 	db	0
   927  0119EB  00                 	db	0
   928  0119EC  00                 	db	0
   929  0119ED  00                 	db	0
   930  0119EE  00                 	db	0
   931  0119EF  00                 	db	0
   932  0119F0  00                 	db	0
   933  0119F1  00                 	db	0
   934  0119F2  00                 	db	0
   935  0119F3  00                 	db	0
   936  0119F4  00                 	db	0
   937  0119F5  00                 	db	0
   938  0119F6  00                 	db	0
   939  0119F7  00                 	db	0
   940  0119F8  00                 	db	0
   941  0119F9  00                 	db	0
   942  0119FA  00                 	db	0
   943  0119FB  00                 	db	0
   944  0119FC  00                 	db	0
   945  0119FD  00                 	db	0
   946  0119FE  00                 	db	0
   947  0119FF  00                 	db	0
   948  011A00  00                 	db	0
   949  011A01  00                 	db	0
   950  011A02  00                 	db	0
   951  011A03  00                 	db	0
   952  011A04  00                 	db	0
   953  011A05  00                 	db	0
   954  011A06  00                 	db	0
   955  011A07  00                 	db	0
   956  011A08  00                 	db	0
   957  011A09  00                 	db	0
   958  011A0A  00                 	db	0
   959  011A0B  00                 	db	0
   960  011A0C  00                 	db	0
   961  011A0D  00                 	db	0
   962  011A0E  00                 	db	0
   963  011A0F  00                 	db	0
   964  011A10  00                 	db	0
   965  011A11  00                 	db	0
   966  011A12  00                 	db	0
   967  011A13  00                 	db	0
   968  011A14  00                 	db	0
   969  011A15  00                 	db	0
   970  011A16  00                 	db	0
   971  011A17  00                 	db	0
   972  011A18  00                 	db	0
   973  011A19  00                 	db	0
   974  011A1A  00                 	db	0
   975  011A1B  00                 	db	0
   976  011A1C  00                 	db	0
   977  011A1D  00                 	db	0
   978  011A1E  00                 	db	0
   979  011A1F  00                 	db	0
   980  011A20  00                 	db	0
   981  011A21  00                 	db	0
   982  011A22  00                 	db	0
   983  011A23  00                 	db	0
   984  011A24  00                 	db	0
   985  011A25  00                 	db	0
   986  011A26  00                 	db	0
   987  011A27  00                 	db	0
   988  011A28  00                 	db	0
   989  011A29  00                 	db	0
   990  011A2A  00                 	db	0
   991  011A2B  00                 	db	0
   992  011A2C  00                 	db	0
   993  011A2D  00                 	db	0
   994  011A2E  00                 	db	0
   995  011A2F  00                 	db	0
   996  011A30  00                 	db	0
   997  011A31  00                 	db	0
   998  011A32  00                 	db	0
   999  011A33  00                 	db	0
  1000  011A34  00                 	db	0
  1001  011A35  00                 	db	0
  1002  011A36  00                 	db	0
  1003  011A37  00                 	db	0
  1004  011A38  00                 	db	0
  1005  011A39  00                 	db	0
  1006  011A3A  00                 	db	0
  1007  011A3B  00                 	db	0
  1008  011A3C  00                 	db	0
  1009  011A3D  00                 	db	0
  1010  011A3E  00                 	db	0
  1011  011A3F  00                 	db	0
  1012  011A40  00                 	db	0
  1013  011A41  00                 	db	0
  1014  011A42  00                 	db	0
  1015  011A43  00                 	db	0
  1016  011A44  00                 	db	0
  1017  011A45  00                 	db	0
  1018  011A46  00                 	db	0
  1019  011A47  00                 	db	0
  1020  011A48  00                 	db	0
  1021  011A49  00                 	db	0
  1022  011A4A  00                 	db	0
  1023  011A4B  00                 	db	0
  1024  011A4C  00                 	db	0
  1025  011A4D  00                 	db	0
  1026  011A4E  00                 	db	0
  1027  011A4F  00                 	db	0
  1028  011A50  00                 	db	0
  1029  011A51  00                 	db	0
  1030  011A52  00                 	db	0
  1031  011A53  00                 	db	0
  1032  011A54  00                 	db	0
  1033  011A55  00                 	db	0
  1034  011A56  00                 	db	0
  1035  011A57  00                 	db	0
  1036  011A58  00                 	db	0
  1037  011A59  00                 	db	0
  1038  011A5A  00                 	db	0
  1039  011A5B  00                 	db	0
  1040  011A5C  00                 	db	0
  1041  011A5D  00                 	db	0
  1042  011A5E  00                 	db	0
  1043  011A5F  00                 	db	0
  1044  011A60  00                 	db	0
  1045  011A61  00                 	db	0
  1046  011A62  00                 	db	0
  1047  011A63  00                 	db	0
  1048  011A64  00                 	db	0
  1049  011A65  00                 	db	0
  1050  011A66  00                 	db	0
  1051  011A67  00                 	db	0
  1052  011A68  00                 	db	0
  1053  011A69  00                 	db	0
  1054  011A6A  00                 	db	0
  1055  011A6B  00                 	db	0
  1056  011A6C  00                 	db	0
  1057  011A6D  00                 	db	0
  1058  011A6E  00                 	db	0
  1059  011A6F  00                 	db	0
  1060  011A70  00                 	db	0
  1061  011A71  00                 	db	0
  1062  011A72  00                 	db	0
  1063  011A73  00                 	db	0
  1064  011A74  00                 	db	0
  1065  011A75  00                 	db	0
  1066  011A76  00                 	db	0
  1067  011A77  00                 	db	0
  1068  011A78  00                 	db	0
  1069  011A79  00                 	db	0
  1070  011A7A  00                 	db	0
  1071  011A7B  00                 	db	0
  1072  011A7C  00                 	db	0
  1073  011A7D  00                 	db	0
  1074  011A7E  00                 	db	0
  1075  011A7F  00                 	db	0
  1076  011A80  00                 	db	0
  1077  011A81  00                 	db	0
  1078  011A82  00                 	db	0
  1079  011A83  00                 	db	0
  1080  011A84  00                 	db	0
  1081  011A85  00                 	db	0
  1082  011A86  00                 	db	0
  1083  011A87  00                 	db	0
  1084  011A88  00                 	db	0
  1085  011A89  00                 	db	0
  1086  011A8A  00                 	db	0
  1087  011A8B  00                 	db	0
  1088  011A8C  00                 	db	0
  1089  011A8D  00                 	db	0
  1090  011A8E  00                 	db	0
  1091  011A8F  00                 	db	0
  1092  011A90  00                 	db	0
  1093  011A91  00                 	db	0
  1094  011A92  00                 	db	0
  1095  011A93  00                 	db	0
  1096  011A94  00                 	db	0
  1097  011A95  00                 	db	0
  1098  011A96  00                 	db	0
  1099  011A97  00                 	db	0
  1100  011A98  00                 	db	0
  1101  011A99  00                 	db	0
  1102  011A9A  00                 	db	0
  1103  011A9B  00                 	db	0
  1104  011A9C  00                 	db	0
  1105  011A9D  00                 	db	0
  1106  011A9E  00                 	db	0
  1107  011A9F  00                 	db	0
  1108  011AA0  00                 	db	0
  1109  011AA1  00                 	db	0
  1110  011AA2  00                 	db	0
  1111  011AA3  00                 	db	0
  1112  011AA4  00                 	db	0
  1113  011AA5  00                 	db	0
  1114  011AA6  00                 	db	0
  1115  011AA7  00                 	db	0
  1116  011AA8  00                 	db	0
  1117  011AA9  00                 	db	0
  1118  011AAA  00                 	db	0
  1119  011AAB  00                 	db	0
  1120  011AAC  00                 	db	0
  1121  011AAD  00                 	db	0
  1122  011AAE  00                 	db	0
  1123  011AAF  00                 	db	0
  1124  011AB0  00                 	db	0
  1125  011AB1  00                 	db	0
  1126  011AB2  00                 	db	0
  1127  011AB3  00                 	db	0
  1128  011AB4  00                 	db	0
  1129  011AB5  00                 	db	0
  1130  011AB6  00                 	db	0
  1131  011AB7  00                 	db	0
  1132  011AB8  00                 	db	0
  1133  011AB9  00                 	db	0
  1134  011ABA  00                 	db	0
  1135  011ABB  00                 	db	0
  1136  011ABC  00                 	db	0
  1137  011ABD  00                 	db	0
  1138  011ABE  00                 	db	0
  1139  011ABF  00                 	db	0
  1140  011AC0  00                 	db	0
  1141  011AC1  00                 	db	0
  1142  011AC2  00                 	db	0
  1143  011AC3  00                 	db	0
  1144  011AC4  00                 	db	0
  1145  011AC5  00                 	db	0
  1146  011AC6  00                 	db	0
  1147  011AC7  00                 	db	0
  1148  011AC8  00                 	db	0
  1149  011AC9  00                 	db	0
  1150  011ACA  00                 	db	0
  1151  011ACB  00                 	db	0
  1152  011ACC  00                 	db	0
  1153  011ACD  00                 	db	0
  1154  011ACE  00                 	db	0
  1155  011ACF  00                 	db	0
  1156  011AD0  00                 	db	0
  1157  011AD1  00                 	db	0
  1158  011AD2  00                 	db	0
  1159  011AD3  00                 	db	0
  1160  011AD4  00                 	db	0
  1161  011AD5  00                 	db	0
  1162  011AD6  00                 	db	0
  1163  011AD7  00                 	db	0
  1164  011AD8  00                 	db	0
  1165  011AD9  00                 	db	0
  1166  011ADA  00                 	db	0
  1167  011ADB  00                 	db	0
  1168  011ADC  00                 	db	0
  1169  011ADD  00                 	db	0
  1170  011ADE  00                 	db	0
  1171  011ADF  00                 	db	0
  1172  011AE0  00                 	db	0
  1173  011AE1  00                 	db	0
  1174  011AE2  00                 	db	0
  1175  011AE3  00                 	db	0
  1176  011AE4  00                 	db	0
  1177  011AE5  00                 	db	0
  1178  011AE6  00                 	db	0
  1179  011AE7  00                 	db	0
  1180  011AE8  00                 	db	0
  1181  011AE9  00                 	db	0
  1182  011AEA  00                 	db	0
  1183  011AEB  00                 	db	0
  1184  011AEC  00                 	db	0
  1185  011AED  00                 	db	0
  1186  011AEE  00                 	db	0
  1187  011AEF  00                 	db	0
  1188  011AF0  00                 	db	0
  1189  011AF1  00                 	db	0
  1190  011AF2  00                 	db	0
  1191  011AF3  00                 	db	0
  1192  011AF4  00                 	db	0
  1193  011AF5  00                 	db	0
  1194  011AF6  00                 	db	0
  1195  011AF7  00                 	db	0
  1196  011AF8  00                 	db	0
  1197  011AF9  00                 	db	0
  1198  011AFA  00                 	db	0
  1199  011AFB  00                 	db	0
  1200  011AFC  00                 	db	0
  1201  011AFD  00                 	db	0
  1202  011AFE  00                 	db	0
  1203  011AFF  00                 	db	0
  1204  011B00  00                 	db	0
  1205  011B01  00                 	db	0
  1206  011B02  00                 	db	0
  1207  011B03  00                 	db	0
  1208  011B04  00                 	db	0
  1209  011B05  00                 	db	0
  1210  011B06  00                 	db	0
  1211  011B07  00                 	db	0
  1212  011B08  00                 	db	0
  1213  011B09  00                 	db	0
  1214  011B0A  00                 	db	0
  1215  011B0B  00                 	db	0
  1216  011B0C  00                 	db	0
  1217  011B0D  00                 	db	0
  1218  011B0E  00                 	db	0
  1219  011B0F  00                 	db	0
  1220  011B10  00                 	db	0
  1221  011B11  00                 	db	0
  1222  011B12  00                 	db	0
  1223  011B13  00                 	db	0
  1224  011B14  00                 	db	0
  1225  011B15  00                 	db	0
  1226  011B16  00                 	db	0
  1227  011B17  00                 	db	0
  1228  011B18  00                 	db	0
  1229  011B19  00                 	db	0
  1230  011B1A  00                 	db	0
  1231  011B1B  00                 	db	0
  1232  011B1C  00                 	db	0
  1233  011B1D  00                 	db	0
  1234  011B1E  00                 	db	0
  1235  011B1F  00                 	db	0
  1236  011B20  00                 	db	0
  1237  011B21  00                 	db	0
  1238  011B22  00                 	db	0
  1239  011B23  00                 	db	0
  1240  011B24  00                 	db	0
  1241  011B25  00                 	db	0
  1242  011B26  00                 	db	0
  1243  011B27  00                 	db	0
  1244  011B28  00                 	db	0
  1245  011B29  00                 	db	0
  1246  011B2A  00                 	db	0
  1247  011B2B  00                 	db	0
  1248                           
  1249                           	psect	idataBANK0
  1250  014F20                     __pidataBANK0:
  1251                           	callstack 0
  1252                           
  1253                           ;initializer for _static_ps
  1254  014F20  14                 	db	20
  1255                           
  1256                           ;initializer for _roll_max
  1257  014F21  13                 	db	19
  1258                           
  1259                           	psect	idataBANK1
  1260  014EDE                     __pidataBANK1:
  1261                           	callstack 0
  1262                           
  1263                           ;initializer for stoa@F1164
  1264  014EDE  28                 	db	40
  1265  014EDF  6E                 	db	110
  1266  014EE0  75                 	db	117
  1267  014EE1  6C                 	db	108
  1268  014EE2  6C                 	db	108
  1269  014EE3  29                 	db	41
  1270  014EE4  00                 	db	0
  1271                           
  1272                           ;initializer for _build_time
  1273  014EE5  BE                 	db	low STR_2
  1274  014EE6  FF                 	db	high STR_2
  1275                           
  1276                           ;initializer for _build_date
  1277  014EE7  B2                 	db	low STR_1
  1278  014EE8  FF                 	db	high STR_1
  1279                           
  1280                           	psect	idataBANK2
  1281  01404A                     __pidataBANK2:
  1282                           	callstack 0
  1283                           
  1284                           ;initializer for _g_cmds
  1285  01404A  F6                 	db	low STR_20
  1286  01404B  FF                 	db	high STR_20
  1287  01404C  5E                 	db	low _fh_pr
  1288  01404D  4C                 	db	high _fh_pr
  1289  01404E  01                 	db	low (_fh_pr shr (0+16))
  1290  01404F  F9                 	db	low STR_21
  1291  014050  FF                 	db	high STR_21
  1292  014051  EE                 	db	low _fh_ps
  1293  014052  4C                 	db	high _fh_ps
  1294  014053  01                 	db	low (_fh_ps shr (0+16))
  1295  014054  F0                 	db	low STR_22
  1296  014055  FF                 	db	high STR_22
  1297  014056  D4                 	db	low _fh_po
  1298  014057  4D                 	db	high _fh_po
  1299  014058  01                 	db	low (_fh_po shr (0+16))
  1300  014059  F3                 	db	low STR_23
  1301  01405A  FF                 	db	high STR_23
  1302  01405B  C2                 	db	low _fh_pp
  1303  01405C  4D                 	db	high _fh_pp
  1304  01405D  01                 	db	low (_fh_pp shr (0+16))
  1305  01405E  FC                 	db	low STR_24
  1306  01405F  FF                 	db	high STR_24
  1307  014060  96                 	db	low _fh_pu
  1308  014061  4D                 	db	high _fh_pu
  1309  014062  01                 	db	low (_fh_pu shr (0+16))
  1310  014063  EA                 	db	low STR_25
  1311  014064  FF                 	db	high STR_25
  1312  014065  80                 	db	low _fh_pd
  1313  014066  4D                 	db	high _fh_pd
  1314  014067  01                 	db	low (_fh_pd shr (0+16))
  1315  014068  ED                 	db	low STR_26
  1316  014069  FF                 	db	high STR_26
  1317  01406A  6A                 	db	low _fh_pl
  1318  01406B  4D                 	db	high _fh_pl
  1319  01406C  01                 	db	low (_fh_pl shr (0+16))
  1320  01406D  E4                 	db	low STR_27
  1321  01406E  FF                 	db	high STR_27
  1322  01406F  9A                 	db	low _fh_p0
  1323  014070  4B                 	db	high _fh_p0
  1324  014071  01                 	db	low (_fh_p0 shr (0+16))
  1325  014072  E7                 	db	low STR_28
  1326  014073  FF                 	db	high STR_28
  1327  014074  78                 	db	low _fh_p1
  1328  014075  4B                 	db	high _fh_p1
  1329  014076  01                 	db	low (_fh_p1 shr (0+16))
  1330  014077  00                 	db	0
  1331  014078  00                 	db	0
  1332  014079  00                 	db	0
  1333  01407A  00                 	db	0
  1334  01407B  00                 	db	0
  1335                           
  1336                           ;initializer for _ps_type
  1337                           ;main.c: 50: volatile ADC_BUFFER_TYPE a[32];;main.c: 51: volatile uint8_t a_index = 0, i
      +                          _index = 0;;main.c: 52: volatile _Bool disp_tick = 0, adc_tick = 0;;main.c: 53: char buf
      +                          f1[255];;main.c: 55: const char *build_date = "Apr  5 2022", *build_time = "16:45:22";;m
      +                          ain.c: 56: MODE_TYPES mode = off_mode;;main.c: 57: double vval = 0.0, ival = 0.0;;main.c
      +                          : 58: uint8_t dac_v = 0, mode_sw = 0, roll_max = 19, static_ps = 20;;main.c: 59: PS_TYPE
      +                           ps_type[] = {
  1338  01407C  7597               	dw	30103
  1339  01407E  3ECF               	dw	16079
  1340                           
  1341                           ;main.c: 50: volatile ADC_BUFFER_TYPE a[32];;main.c: 51: volatile uint8_t a_index = 0, i
      +                          _index = 0;;main.c: 52: volatile _Bool disp_tick = 0, adc_tick = 0;;main.c: 53: char buf
      +                          f1[255];;main.c: 55: const char *build_date = "Apr  5 2022", *build_time = "16:45:22";;m
      +                          ain.c: 56: MODE_TYPES mode = off_mode;;main.c: 57: double vval = 0.0, ival = 0.0;;main.c
      +                          : 58: uint8_t dac_v = 0, mode_sw = 0, roll_max = 19, static_ps = 20;;main.c: 59: PS_TYPE
      +                           ps_type[] = {
  1342  014080  126F               	dw	4719
  1343  014082  3B83               	dw	15235
  1344                           
  1345                           ;main.c: 50: volatile ADC_BUFFER_TYPE a[32];;main.c: 51: volatile uint8_t a_index = 0, i
      +                          _index = 0;;main.c: 52: volatile _Bool disp_tick = 0, adc_tick = 0;;main.c: 53: char buf
      +                          f1[255];;main.c: 55: const char *build_date = "Apr  5 2022", *build_time = "16:45:22";;m
      +                          ain.c: 56: MODE_TYPES mode = off_mode;;main.c: 57: double vval = 0.0, ival = 0.0;;main.c
      +                          : 58: uint8_t dac_v = 0, mode_sw = 0, roll_max = 19, static_ps = 20;;main.c: 59: PS_TYPE
      +                           ps_type[] = {
  1346  014084  5C29               	dw	23593
  1347  014086  3F4F               	dw	16207
  1348                           
  1349                           ;main.c: 50: volatile ADC_BUFFER_TYPE a[32];;main.c: 51: volatile uint8_t a_index = 0, i
      +                          _index = 0;;main.c: 52: volatile _Bool disp_tick = 0, adc_tick = 0;;main.c: 53: char buf
      +                          f1[255];;main.c: 55: const char *build_date = "Apr  5 2022", *build_time = "16:45:22";;m
      +                          ain.c: 56: MODE_TYPES mode = off_mode;;main.c: 57: double vval = 0.0, ival = 0.0;;main.c
      +                          : 58: uint8_t dac_v = 0, mode_sw = 0, roll_max = 19, static_ps = 20;;main.c: 59: PS_TYPE
      +                           ps_type[] = {
  1350  014088  126F               	dw	4719
  1351  01408A  3B83               	dw	15235
  1352                           
  1353                           ;main.c: 50: volatile ADC_BUFFER_TYPE a[32];;main.c: 51: volatile uint8_t a_index = 0, i
      +                          _index = 0;;main.c: 52: volatile _Bool disp_tick = 0, adc_tick = 0;;main.c: 53: char buf
      +                          f1[255];;main.c: 55: const char *build_date = "Apr  5 2022", *build_time = "16:45:22";;m
      +                          ain.c: 56: MODE_TYPES mode = off_mode;;main.c: 57: double vval = 0.0, ival = 0.0;;main.c
      +                          : 58: uint8_t dac_v = 0, mode_sw = 0, roll_max = 19, static_ps = 20;;main.c: 59: PS_TYPE
      +                           ps_type[] = {
  1354  01408C  7597               	dw	30103
  1355  01408E  3ECF               	dw	16079
  1356                           
  1357                           ;main.c: 50: volatile ADC_BUFFER_TYPE a[32];;main.c: 51: volatile uint8_t a_index = 0, i
      +                          _index = 0;;main.c: 52: volatile _Bool disp_tick = 0, adc_tick = 0;;main.c: 53: char buf
      +                          f1[255];;main.c: 55: const char *build_date = "Apr  5 2022", *build_time = "16:45:22";;m
      +                          ain.c: 56: MODE_TYPES mode = off_mode;;main.c: 57: double vval = 0.0, ival = 0.0;;main.c
      +                          : 58: uint8_t dac_v = 0, mode_sw = 0, roll_max = 19, static_ps = 20;;main.c: 59: PS_TYPE
      +                           ps_type[] = {
  1358  014090  126F               	dw	4719
  1359  014092  3B83               	dw	15235
  1360                           
  1361                           ;main.c: 50: volatile ADC_BUFFER_TYPE a[32];;main.c: 51: volatile uint8_t a_index = 0, i
      +                          _index = 0;;main.c: 52: volatile _Bool disp_tick = 0, adc_tick = 0;;main.c: 53: char buf
      +                          f1[255];;main.c: 55: const char *build_date = "Apr  5 2022", *build_time = "16:45:22";;m
      +                          ain.c: 56: MODE_TYPES mode = off_mode;;main.c: 57: double vval = 0.0, ival = 0.0;;main.c
      +                          : 58: uint8_t dac_v = 0, mode_sw = 0, roll_max = 19, static_ps = 20;;main.c: 59: PS_TYPE
      +                           ps_type[] = {
  1362  014094  7597               	dw	30103
  1363  014096  3ECF               	dw	16079
  1364                           
  1365                           ;main.c: 50: volatile ADC_BUFFER_TYPE a[32];;main.c: 51: volatile uint8_t a_index = 0, i
      +                          _index = 0;;main.c: 52: volatile _Bool disp_tick = 0, adc_tick = 0;;main.c: 53: char buf
      +                          f1[255];;main.c: 55: const char *build_date = "Apr  5 2022", *build_time = "16:45:22";;m
      +                          ain.c: 56: MODE_TYPES mode = off_mode;;main.c: 57: double vval = 0.0, ival = 0.0;;main.c
      +                          : 58: uint8_t dac_v = 0, mode_sw = 0, roll_max = 19, static_ps = 20;;main.c: 59: PS_TYPE
      +                           ps_type[] = {
  1366  014098  126F               	dw	4719
  1367  01409A  3B83               	dw	15235
  1368                           
  1369                           ;main.c: 50: volatile ADC_BUFFER_TYPE a[32];;main.c: 51: volatile uint8_t a_index = 0, i
      +                          _index = 0;;main.c: 52: volatile _Bool disp_tick = 0, adc_tick = 0;;main.c: 53: char buf
      +                          f1[255];;main.c: 55: const char *build_date = "Apr  5 2022", *build_time = "16:45:22";;m
      +                          ain.c: 56: MODE_TYPES mode = off_mode;;main.c: 57: double vval = 0.0, ival = 0.0;;main.c
      +                          : 58: uint8_t dac_v = 0, mode_sw = 0, roll_max = 19, static_ps = 20;;main.c: 59: PS_TYPE
      +                           ps_type[] = {
  1370  01409C  7597               	dw	30103
  1371  01409E  3ECF               	dw	16079
  1372                           
  1373                           ;main.c: 50: volatile ADC_BUFFER_TYPE a[32];;main.c: 51: volatile uint8_t a_index = 0, i
      +                          _index = 0;;main.c: 52: volatile _Bool disp_tick = 0, adc_tick = 0;;main.c: 53: char buf
      +                          f1[255];;main.c: 55: const char *build_date = "Apr  5 2022", *build_time = "16:45:22";;m
      +                          ain.c: 56: MODE_TYPES mode = off_mode;;main.c: 57: double vval = 0.0, ival = 0.0;;main.c
      +                          : 58: uint8_t dac_v = 0, mode_sw = 0, roll_max = 19, static_ps = 20;;main.c: 59: PS_TYPE
      +                           ps_type[] = {
  1374  0140A0  126F               	dw	4719
  1375  0140A2  3B83               	dw	15235
  1376                           
  1377                           	psect	mediumconst
  1378  00FDF6                     __pmediumconst:
  1379                           	callstack 0
  1380  00FDF6  00                 	db	0
  1381  00FDF7  02                 	db	2
  1382  00FDF8  40                 	db	64
  1383  00FDF9  00                 	db	0
  1384  00FDFA  50                 	db	80
  1385  00FDFB  00                 	db	0
  1386  00FDFC                     __end_of_spi1_configuration:
  1387                           	callstack 0
  1388  00FDFC                     _cmdm:
  1389                           	callstack 0
  1390  00FDFC  0D                 	db	13
  1391  00FDFD  0A                 	db	10
  1392  00FDFE  20                 	db	32
  1393  00FDFF  43                 	db	67
  1394  00FE00  6F                 	db	111
  1395  00FE01  6D                 	db	109
  1396  00FE02  6D                 	db	109
  1397  00FE03  61                 	db	97
  1398  00FE04  6E                 	db	110
  1399  00FE05  64                 	db	100
  1400  00FE06  20                 	db	32
  1401  00FE07  70                 	db	112
  1402  00FE08  72                 	db	114
  1403  00FE09  6F                 	db	111
  1404  00FE0A  63                 	db	99
  1405  00FE0B  65                 	db	101
  1406  00FE0C  73                 	db	115
  1407  00FE0D  73                 	db	115
  1408  00FE0E  6F                 	db	111
  1409  00FE0F  72                 	db	114
  1410  00FE10  20                 	db	32
  1411  00FE11  56                 	db	86
  1412  00FE12  30                 	db	48
  1413  00FE13  2E                 	db	46
  1414  00FE14  32                 	db	50
  1415  00FE15  0D                 	db	13
  1416  00FE16  0A                 	db	10
  1417  00FE17  00                 	db	0
  1418  00FE18                     __end_of_cmdm:
  1419                           	callstack 0
  1420  00FE18                     _build_version:
  1421                           	callstack 0
  1422  00FE18  56                 	db	86
  1423  00FE19  31                 	db	49
  1424  00FE1A  2E                 	db	46
  1425  00FE1B  30                 	db	48
  1426  00FE1C  30                 	db	48
  1427  00FE1D  20                 	db	32
  1428  00FE1E  50                 	db	80
  1429  00FE1F  53                 	db	83
  1430  00FE20  20                 	db	32
  1431  00FE21  54                 	db	84
  1432  00FE22  45                 	db	69
  1433  00FE23  53                 	db	83
  1434  00FE24  54                 	db	84
  1435  00FE25  00                 	db	0
  1436  00FE26                     __end_of_build_version:
  1437                           	callstack 0
  1438  0000                     _NVMADRL	set	14816
  1439  0000                     _NVMADRH	set	14817
  1440  0000                     _NVMCON1bits	set	14821
  1441  0000                     _DMA1CON0	set	15356
  1442  0000                     _DMA1AIRQ	set	15358
  1443  0000                     _DMA1SIRQ	set	15359
  1444  0000                     _DMA1CON1	set	15357
  1445  0000                     _T2CON	set	16300
  1446  0000                     _T5CON	set	16282
  1447  0000                     _TMR5L	set	16280
  1448  0000                     _TMR5H	set	16281
  1449  0000                     _T5GCON	set	16283
  1450  0000                     _IVTBASEL	set	16341
  1451  0000                     _IVTBASEH	set	16342
  1452  0000                     _IVTBASEU	set	16343
  1453  0000                     _T6CON	set	16276
  1454  0000                     _T6RST	set	16279
  1455  0000                     _ADERRL	set	16098
  1456  0000                     _ADERRH	set	16099
  1457  0000                     _ADPREVL	set	16109
  1458  0000                     _ADPREVH	set	16110
  1459  0000                     _ADFLTRL	set	16102
  1460  0000                     _ADFLTRH	set	16103
  1461  0000                     _ADACCL	set	16104
  1462  0000                     _ADACCH	set	16105
  1463  0000                     _ADCNT	set	16107
  1464  0000                     _ADRESL	set	16111
  1465  0000                     _ADRESH	set	16112
  1466  0000                     _ADCON0	set	16120
  1467  0000                     _ADCON1	set	16121
  1468  0000                     _ADPREH	set	16119
  1469  0000                     _ADPREL	set	16118
  1470  0000                     _ADCAP	set	16117
  1471  0000                     _ADACQH	set	16116
  1472  0000                     _ADPCH	set	16113
  1473  0000                     _ADRPT	set	16108
  1474  0000                     _ADACCU	set	16106
  1475  0000                     _ADSTPTH	set	16101
  1476  0000                     _ADSTPTL	set	16100
  1477  0000                     _ADUTHH	set	16097
  1478  0000                     _ADUTHL	set	16096
  1479  0000                     _ADLTHH	set	16095
  1480  0000                     _PRLOCK	set	14831
  1481  0000                     _OSCTUNE	set	14814
  1482  0000                     _OSCFRQ	set	14815
  1483  0000                     _OSCEN	set	14813
  1484  0000                     _TRISD	set	16325
  1485  0000                     _TRISC	set	16324
  1486  0000                     _TRISB	set	16323
  1487  0000                     _LATC	set	16316
  1488  0000                     _LATB	set	16315
  1489  0000                     _PLLR	set	118496
  1490  0000                     _PRLOCKbits	set	14831
  1491  0000                     _DMA1CON0bits	set	15356
  1492  0000                     _DMA1CON1bits	set	15357
  1493  0000                     _U1UIRbits	set	15864
  1494  0000                     _U1ERRIRbits	set	15865
  1495  0000                     _SPI1CON0bits	set	15636
  1496  0000                     _LATCbits	set	16316
  1497  0000                     _LATFbits	set	16319
  1498  0000                     _LATAbits	set	16314
  1499  0000                     _LATDbits	set	16317
  1500  0000                     _LATEbits	set	16318
  1501  0000                     _TRISCbits	set	16324
  1502  0000                     _T5CONbits	set	16282
  1503  0000                     _IVTLOCKbits	set	16340
  1504  0000                     _GIE	set	130711
  1505  0000                     _IPR1bits	set	14721
  1506  0000                     _IPR2bits	set	14722
  1507  0000                     _PIE1bits	set	14737
  1508  0000                     _PIR1bits	set	14753
  1509  0000                     _PMD0	set	14784
  1510  0000                     _OSCCON1	set	14809
  1511  0000                     _RC3PPS	set	14867
  1512  0000                     _RD2PPS	set	14874
  1513  0000                     _ANSELA	set	14912
  1514  0000                     _ANSELB	set	14928
  1515  0000                     _ANSELC	set	14944
  1516  0000                     _ANSELD	set	14960
  1517  0000                     _LATA	set	16314
  1518  0000                     _LATD	set	16317
  1519  0000                     _LATE	set	16318
  1520  0000                     _TRISA	set	16322
  1521  0000                     _TRISE	set	16326
  1522  0000                     _LATF	set	16319
  1523  0000                     _PORTAbits	set	16330
  1524  0000                     _INTCON0bits	set	16338
  1525  0000                     _TRISF	set	16327
  1526  0000                     _INLVLD	set	14964
  1527  0000                     _SLRCOND	set	14963
  1528  0000                     _ODCOND	set	14962
  1529  0000                     _RD0I2C	set	14970
  1530  0000                     _WPUD	set	14961
  1531  0000                     _ANSELE	set	14976
  1532  0000                     _INLVLC	set	14948
  1533  0000                     _SLRCONC	set	14947
  1534  0000                     _ODCONC	set	14946
  1535  0000                     _RC3I2C	set	14954
  1536  0000                     _WPUC	set	14945
  1537  0000                     _INLVLB	set	14932
  1538  0000                     _SLRCONB	set	14931
  1539  0000                     _ODCONB	set	14930
  1540  0000                     _RB1I2C	set	14938
  1541  0000                     _WPUB	set	14929
  1542  0000                     _INLVLE	set	14980
  1543  0000                     _SLRCONE	set	14979
  1544  0000                     _ODCONE	set	14978
  1545  0000                     _WPUE	set	14977
  1546  0000                     _ANSELF	set	14992
  1547  0000                     _SPI1SCKPPS	set	15070
  1548  0000                     _INLVLF	set	14996
  1549  0000                     _SLRCONF	set	14995
  1550  0000                     _ODCONF	set	14994
  1551  0000                     _WPUF	set	14993
  1552  0000                     _INLVLA	set	14916
  1553  0000                     _SLRCONA	set	14915
  1554  0000                     _ODCONA	set	14914
  1555  0000                     _WPUA	set	14913
  1556  0000                     _RB2I2C	set	14939
  1557  0000                     _RC4I2C	set	14955
  1558  0000                     _RD1I2C	set	14971
  1559  0000                     _RF2PPS	set	14890
  1560  0000                     _SPI1SDIPPS	set	15071
  1561  0000                     _U1RXPPS	set	15077
  1562  0000                     _RC5PPS	set	14869
  1563  0000                     _RC6PPS	set	14870
  1564  0000                     _DMA1SSA	set	15353
  1565  0000                     _DMA2DSZ	set	15310
  1566  0000                     _DMA2DSA	set	15312
  1567  0000                     _DMA1DPTR	set	15340
  1568  0000                     _DMA1DSZ	set	15342
  1569  0000                     _DMA1DSA	set	15344
  1570  0000                     _DMA2CON0bits	set	15324
  1571  0000                     _DMA2CON1bits	set	15325
  1572  0000                     _SPI1RXB	set	15632
  1573  0000                     _SPI1TCNTL	set	15634
  1574  0000                     _SPI1CON0	set	15636
  1575  0000                     _DAC1CON1	set	16028
  1576  0000                     _DAC1CON0	set	16030
  1577  0000                     _SPI1TXB	set	15633
  1578  0000                     _ADLTHL	set	16094
  1579  0000                     _OSCCON3	set	14811
  1580  0000                     _PMD7	set	14791
  1581  0000                     _PMD6	set	14790
  1582  0000                     _PMD5	set	14789
  1583  0000                     _PMD4	set	14788
  1584  0000                     _PMD3	set	14787
  1585  0000                     _PMD2	set	14786
  1586  0000                     _PMD1	set	14785
  1587  0000                     _DMA1PR	set	14835
  1588  0000                     _ADACQL	set	16115
  1589  0000                     _CCPTMRS1bits	set	16223
  1590  0000                     _PWM5DCL	set	16236
  1591  0000                     _PWM5DCH	set	16237
  1592  0000                     _PWM5CON	set	16238
  1593  0000                     _T6TMR	set	16274
  1594  0000                     _T6PR	set	16275
  1595  0000                     _T6HLT	set	16277
  1596  0000                     _T6CLKCON	set	16278
  1597  0000                     _ADCLK	set	16127
  1598  0000                     _ADACT	set	16126
  1599  0000                     _ADREF	set	16125
  1600  0000                     _ADSTAT	set	16124
  1601  0000                     _ADCON3	set	16123
  1602  0000                     _ADCON2	set	16122
  1603  0000                     _PIR4bits	set	14756
  1604  0000                     _PIR2bits	set	14754
  1605  0000                     _PIR8bits	set	14760
  1606  0000                     _PIR9bits	set	14761
  1607  0000                     _PIE3bits	set	14739
  1608  0000                     _PIE2bits	set	14738
  1609  0000                     _PIE8bits	set	14744
  1610  0000                     _PIE9bits	set	14745
  1611  0000                     _PIR0bits	set	14752
  1612  0000                     _IVTLOCK	set	16340
  1613  0000                     _TABLAT	set	16373
  1614  0000                     _TBLPTRL	set	16374
  1615  0000                     _TBLPTRH	set	16375
  1616  0000                     _TBLPTRU	set	16376
  1617  0000                     _IPR8bits	set	14728
  1618  0000                     _IPR9bits	set	14729
  1619  0000                     _IPR3bits	set	14723
  1620  0000                     _T2TMR	set	16298
  1621  0000                     _T2PR	set	16299
  1622  0000                     _T2HLT	set	16301
  1623  0000                     _T2CLKCON	set	16302
  1624  0000                     _T5CLK	set	16285
  1625  0000                     _T5GATE	set	16284
  1626  0000                     _SPI1STATUSbits	set	15639
  1627  0000                     _SPI1BAUD	set	15641
  1628  0000                     _SPI1CLK	set	15644
  1629  0000                     _SPI1CON2	set	15638
  1630  0000                     _SPI1CON1	set	15637
  1631  0000                     _U1RXB	set	15848
  1632  0000                     _U1TXB	set	15850
  1633  0000                     _U1P1L	set	15852
  1634  0000                     _SPI1INTFbits	set	15642
  1635  0000                     _PWM6DCL	set	16232
  1636  0000                     _PWM6DCH	set	16233
  1637  0000                     _PWM6CON	set	16234
  1638  0000                     _T2RST	set	16303
  1639  0000                     _DMA1SPTR	set	15348
  1640  0000                     _DMA1SSZ	set	15351
  1641  0000                     _U1ERRIE	set	15866
  1642  0000                     _U1ERRIR	set	15865
  1643  0000                     _U1UIR	set	15864
  1644  0000                     _U1FIFO	set	15863
  1645  0000                     _U1BRGH	set	15862
  1646  0000                     _U1BRGL	set	15861
  1647  0000                     _U1CON2	set	15860
  1648  0000                     _U1CON1	set	15859
  1649  0000                     _U1CON0	set	15858
  1650  0000                     _U1P3H	set	15857
  1651  0000                     _U1P3L	set	15856
  1652  0000                     _U1P2H	set	15855
  1653  0000                     _U1P2L	set	15854
  1654  0000                     _U1P1H	set	15853
  1655  0000                     _NVMCON2	set	14822
  1656  0000                     _NVMDAT	set	14819
  1657  0000                     _PORTBbits	set	16331
  1658  0000                     _DMA2SSA	set	15321
  1659  0000                     _DMA2SSZ	set	15319
  1660  00FE26                     STR_15:
  1661                           
  1662                           ; BSR set to: 61
  1663  00FE26  20                 	db	32
  1664  00FE27  50                 	db	80	;'P'
  1665  00FE28  53                 	db	83	;'S'
  1666  00FE29  20                 	db	32
  1667  00FE2A  54                 	db	84	;'T'
  1668  00FE2B  59                 	db	89	;'Y'
  1669  00FE2C  50                 	db	80	;'P'
  1670  00FE2D  45                 	db	69	;'E'
  1671  00FE2E  20                 	db	32
  1672  00FE2F  25                 	db	37
  1673  00FE30  31                 	db	49	;'1'
  1674  00FE31  75                 	db	117	;'u'
  1675  00FE32  3A                 	db	58	;':'
  1676  00FE33  20                 	db	32
  1677  00FE34  50                 	db	80	;'P'
  1678  00FE35  53                 	db	83	;'S'
  1679  00FE36  20                 	db	32
  1680  00FE37  54                 	db	84	;'T'
  1681  00FE38  65                 	db	101	;'e'
  1682  00FE39  73                 	db	115	;'s'
  1683  00FE3A  74                 	db	116	;'t'
  1684  00FE3B  20                 	db	32
  1685  00FE3C  25                 	db	37
  1686  00FE3D  31                 	db	49	;'1'
  1687  00FE3E  75                 	db	117	;'u'
  1688  00FE3F  3A                 	db	58	;':'
  1689  00FE40  20                 	db	32
  1690  00FE41  44                 	db	68	;'D'
  1691  00FE42  41                 	db	65	;'A'
  1692  00FE43  43                 	db	67	;'C'
  1693  00FE44  20                 	db	32
  1694  00FE45  4F                 	db	79	;'O'
  1695  00FE46  55                 	db	85	;'U'
  1696  00FE47  54                 	db	84	;'T'
  1697  00FE48  20                 	db	32
  1698  00FE49  25                 	db	37
  1699  00FE4A  34                 	db	52	;'4'
  1700  00FE4B  2E                 	db	46
  1701  00FE4C  34                 	db	52	;'4'
  1702  00FE4D  75                 	db	117	;'u'
  1703  00FE4E  6D                 	db	109	;'m'
  1704  00FE4F  56                 	db	86	;'V'
  1705  00FE50  20                 	db	32
  1706  00FE51  42                 	db	66	;'B'
  1707  00FE52  3D                 	db	61	;'='
  1708  00FE53  25                 	db	37
  1709  00FE54  2E                 	db	46
  1710  00FE55  32                 	db	50	;'2'
  1711  00FE56  75                 	db	117	;'u'
  1712  00FE57  2C                 	db	44
  1713  00FE58  20                 	db	32
  1714  00FE59  53                 	db	83	;'S'
  1715  00FE5A  75                 	db	117	;'u'
  1716  00FE5B  70                 	db	112	;'p'
  1717  00FE5C  70                 	db	112	;'p'
  1718  00FE5D  6C                 	db	108	;'l'
  1719  00FE5E  79                 	db	121	;'y'
  1720  00FE5F  20                 	db	32
  1721  00FE60  52                 	db	82	;'R'
  1722  00FE61  65                 	db	101	;'e'
  1723  00FE62  61                 	db	97	;'a'
  1724  00FE63  64                 	db	100	;'d'
  1725  00FE64  42                 	db	66	;'B'
  1726  00FE65  61                 	db	97	;'a'
  1727  00FE66  63                 	db	99	;'c'
  1728  00FE67  6B                 	db	107	;'k'
  1729  00FE68  20                 	db	32
  1730  00FE69  25                 	db	37
  1731  00FE6A  34                 	db	52	;'4'
  1732  00FE6B  2E                 	db	46
  1733  00FE6C  34                 	db	52	;'4'
  1734  00FE6D  75                 	db	117	;'u'
  1735  00FE6E  6D                 	db	109	;'m'
  1736  00FE6F  56                 	db	86	;'V'
  1737  00FE70  20                 	db	32
  1738  00FE71  56                 	db	86	;'V'
  1739  00FE72  3D                 	db	61	;'='
  1740  00FE73  25                 	db	37
  1741  00FE74  2B                 	db	43
  1742  00FE75  36                 	db	54	;'6'
  1743  00FE76  2E                 	db	46
  1744  00FE77  31                 	db	49	;'1'
  1745  00FE78  66                 	db	102	;'f'
  1746  00FE79  56                 	db	86	;'V'
  1747  00FE7A  20                 	db	32
  1748  00FE7B  25                 	db	37
  1749  00FE7C  34                 	db	52	;'4'
  1750  00FE7D  2E                 	db	46
  1751  00FE7E  34                 	db	52	;'4'
  1752  00FE7F  75                 	db	117	;'u'
  1753  00FE80  6D                 	db	109	;'m'
  1754  00FE81  56                 	db	86	;'V'
  1755  00FE82  20                 	db	32
  1756  00FE83  49                 	db	73	;'I'
  1757  00FE84  3D                 	db	61	;'='
  1758  00FE85  25                 	db	37
  1759  00FE86  2B                 	db	43
  1760  00FE87  33                 	db	51	;'3'
  1761  00FE88  2E                 	db	46
  1762  00FE89  31                 	db	49	;'1'
  1763  00FE8A  66                 	db	102	;'f'
  1764  00FE8B  6D                 	db	109	;'m'
  1765  00FE8C  41                 	db	65	;'A'
  1766  00FE8D  20                 	db	32
  1767  00FE8E  0D                 	db	13
  1768  00FE8F  0A                 	db	10
  1769  00FE90  00                 	db	0
  1770  00FE91                     STR_11:
  1771                           
  1772                           ; BSR set to: 61
  1773  00FE91  0D                 	db	13
  1774  00FE92  0A                 	db	10
  1775  00FE93  20                 	db	32
  1776  00FE94  41                 	db	65	;'A'
  1777  00FE95  43                 	db	67	;'C'
  1778  00FE96  43                 	db	67	;'C'
  1779  00FE97  45                 	db	69	;'E'
  1780  00FE98  4C                 	db	76	;'L'
  1781  00FE99  20                 	db	32
  1782  00FE9A  53                 	db	83	;'S'
  1783  00FE9B  75                 	db	117	;'u'
  1784  00FE9C  70                 	db	112	;'p'
  1785  00FE9D  70                 	db	112	;'p'
  1786  00FE9E  72                 	db	114	;'r'
  1787  00FE9F  65                 	db	101	;'e'
  1788  00FEA0  73                 	db	115	;'s'
  1789  00FEA1  73                 	db	115	;'s'
  1790  00FEA2  69                 	db	105	;'i'
  1791  00FEA3  6F                 	db	111	;'o'
  1792  00FEA4  6E                 	db	110	;'n'
  1793  00FEA5  20                 	db	32
  1794  00FEA6  53                 	db	83	;'S'
  1795  00FEA7  75                 	db	117	;'u'
  1796  00FEA8  70                 	db	112	;'p'
  1797  00FEA9  70                 	db	112	;'p'
  1798  00FEAA  6C                 	db	108	;'l'
  1799  00FEAB  79                 	db	121	;'y'
  1800  00FEAC  20                 	db	32
  1801  00FEAD  0D                 	db	13
  1802  00FEAE  0A                 	db	10
  1803  00FEAF  00                 	db	0
  1804  00FEB0                     STR_10:
  1805                           
  1806                           ; BSR set to: 61
  1807  00FEB0  0D                 	db	13
  1808  00FEB1  0A                 	db	10
  1809  00FEB2  20                 	db	32
  1810  00FEB3  45                 	db	69	;'E'
  1811  00FEB4  58                 	db	88	;'X'
  1812  00FEB5  54                 	db	84	;'T'
  1813  00FEB6  20                 	db	32
  1814  00FEB7  53                 	db	83	;'S'
  1815  00FEB8  75                 	db	117	;'u'
  1816  00FEB9  70                 	db	112	;'p'
  1817  00FEBA  70                 	db	112	;'p'
  1818  00FEBB  72                 	db	114	;'r'
  1819  00FEBC  65                 	db	101	;'e'
  1820  00FEBD  73                 	db	115	;'s'
  1821  00FEBE  73                 	db	115	;'s'
  1822  00FEBF  69                 	db	105	;'i'
  1823  00FEC0  6F                 	db	111	;'o'
  1824  00FEC1  6E                 	db	110	;'n'
  1825  00FEC2  20                 	db	32
  1826  00FEC3  53                 	db	83	;'S'
  1827  00FEC4  75                 	db	117	;'u'
  1828  00FEC5  70                 	db	112	;'p'
  1829  00FEC6  70                 	db	112	;'p'
  1830  00FEC7  6C                 	db	108	;'l'
  1831  00FEC8  79                 	db	121	;'y'
  1832  00FEC9  20                 	db	32
  1833  00FECA  0D                 	db	13
  1834  00FECB  0A                 	db	10
  1835  00FECC  00                 	db	0
  1836  00FECD                     STR_4:
  1837                           
  1838                           ; BSR set to: 61
  1839  00FECD  0D                 	db	13
  1840  00FECE  0A                 	db	10
  1841  00FECF  20                 	db	32
  1842  00FED0  53                 	db	83	;'S'
  1843  00FED1  74                 	db	116	;'t'
  1844  00FED2  65                 	db	101	;'e'
  1845  00FED3  61                 	db	97	;'a'
  1846  00FED4  64                 	db	100	;'d'
  1847  00FED5  79                 	db	121	;'y'
  1848  00FED6  20                 	db	32
  1849  00FED7  56                 	db	86	;'V'
  1850  00FED8  44                 	db	68	;'D'
  1851  00FED9  43                 	db	67	;'C'
  1852  00FEDA  20                 	db	32
  1853  00FEDB  4F                 	db	79	;'O'
  1854  00FEDC  4E                 	db	78	;'N'
  1855  00FEDD  20                 	db	32
  1856  00FEDE  3A                 	db	58	;':'
  1857  00FEDF  20                 	db	32
  1858  00FEE0  44                 	db	68	;'D'
  1859  00FEE1  65                 	db	101	;'e'
  1860  00FEE2  66                 	db	102	;'f'
  1861  00FEE3  61                 	db	97	;'a'
  1862  00FEE4  75                 	db	117	;'u'
  1863  00FEE5  6C                 	db	108	;'l'
  1864  00FEE6  74                 	db	116	;'t'
  1865  00FEE7  0D                 	db	13
  1866  00FEE8  0A                 	db	10
  1867  00FEE9  00                 	db	0
  1868  00FEEA                     STR_16:
  1869                           
  1870                           ; BSR set to: 61
  1871  00FEEA  25                 	db	37
  1872  00FEEB  34                 	db	52	;'4'
  1873  00FEEC  2E                 	db	46
  1874  00FEED  34                 	db	52	;'4'
  1875  00FEEE  75                 	db	117	;'u'
  1876  00FEEF  6D                 	db	109	;'m'
  1877  00FEF0  56                 	db	86	;'V'
  1878  00FEF1  20                 	db	32
  1879  00FEF2  25                 	db	37
  1880  00FEF3  34                 	db	52	;'4'
  1881  00FEF4  2E                 	db	46
  1882  00FEF5  34                 	db	52	;'4'
  1883  00FEF6  75                 	db	117	;'u'
  1884  00FEF7  6D                 	db	109	;'m'
  1885  00FEF8  56                 	db	86	;'V'
  1886  00FEF9  20                 	db	32
  1887  00FEFA  25                 	db	37
  1888  00FEFB  34                 	db	52	;'4'
  1889  00FEFC  2E                 	db	46
  1890  00FEFD  34                 	db	52	;'4'
  1891  00FEFE  75                 	db	117	;'u'
  1892  00FEFF  6D                 	db	109	;'m'
  1893  00FF00  56                 	db	86	;'V'
  1894  00FF01  00                 	db	0
  1895  00FF02                     STR_18:
  1896                           
  1897                           ; BSR set to: 61
  1898  00FF02  44                 	db	68	;'D'
  1899  00FF03  25                 	db	37
  1900  00FF04  2E                 	db	46
  1901  00FF05  32                 	db	50	;'2'
  1902  00FF06  75                 	db	117	;'u'
  1903  00FF07  2C                 	db	44
  1904  00FF08  20                 	db	32
  1905  00FF09  4D                 	db	77	;'M'
  1906  00FF0A  25                 	db	37
  1907  00FF0B  31                 	db	49	;'1'
  1908  00FF0C  75                 	db	117	;'u'
  1909  00FF0D  2C                 	db	44
  1910  00FF0E  20                 	db	32
  1911  00FF0F  50                 	db	80	;'P'
  1912  00FF10  25                 	db	37
  1913  00FF11  31                 	db	49	;'1'
  1914  00FF12  75                 	db	117	;'u'
  1915  00FF13  2C                 	db	44
  1916  00FF14  20                 	db	32
  1917  00FF15  49                 	db	73	;'I'
  1918  00FF16  25                 	db	37
  1919  00FF17  32                 	db	50	;'2'
  1920  00FF18  75                 	db	117	;'u'
  1921  00FF19  00                 	db	0
  1922  00FF1A                     STR_19:
  1923                           
  1924                           ; BSR set to: 61
  1925  00FF1A  56                 	db	86	;'V'
  1926  00FF1B  3D                 	db	61	;'='
  1927  00FF1C  25                 	db	37
  1928  00FF1D  2B                 	db	43
  1929  00FF1E  36                 	db	54	;'6'
  1930  00FF1F  2E                 	db	46
  1931  00FF20  31                 	db	49	;'1'
  1932  00FF21  66                 	db	102	;'f'
  1933  00FF22  56                 	db	86	;'V'
  1934  00FF23  20                 	db	32
  1935  00FF24  49                 	db	73	;'I'
  1936  00FF25  3D                 	db	61	;'='
  1937  00FF26  25                 	db	37
  1938  00FF27  2B                 	db	43
  1939  00FF28  33                 	db	51	;'3'
  1940  00FF29  2E                 	db	46
  1941  00FF2A  31                 	db	49	;'1'
  1942  00FF2B  66                 	db	102	;'f'
  1943  00FF2C  6D                 	db	109	;'m'
  1944  00FF2D  41                 	db	65	;'A'
  1945  00FF2E  20                 	db	32
  1946  00FF2F  20                 	db	32
  1947  00FF30  00                 	db	0
  1948  00FF31                     STR_6:
  1949                           
  1950                           ; BSR set to: 61
  1951  00FF31  0D                 	db	13
  1952  00FF32  0A                 	db	10
  1953  00FF33  20                 	db	32
  1954  00FF34  56                 	db	86	;'V'
  1955  00FF35  6F                 	db	111	;'o'
  1956  00FF36  6C                 	db	108	;'l'
  1957  00FF37  74                 	db	116	;'t'
  1958  00FF38  61                 	db	97	;'a'
  1959  00FF39  67                 	db	103	;'g'
  1960  00FF3A  65                 	db	101	;'e'
  1961  00FF3B  20                 	db	32
  1962  00FF3C  4F                 	db	79	;'O'
  1963  00FF3D  4E                 	db	78	;'N'
  1964  00FF3E  20                 	db	32
  1965  00FF3F  3A                 	db	58	;':'
  1966  00FF40  20                 	db	32
  1967  00FF41  53                 	db	83	;'S'
  1968  00FF42  65                 	db	101	;'e'
  1969  00FF43  74                 	db	116	;'t'
  1970  00FF44  0D                 	db	13
  1971  00FF45  0A                 	db	10
  1972  00FF46  00                 	db	0
  1973  00FF47                     STR_8:
  1974                           
  1975                           ; BSR set to: 61
  1976  00FF47  0D                 	db	13
  1977  00FF48  0A                 	db	10
  1978  00FF49  20                 	db	32
  1979  00FF4A  56                 	db	86	;'V'
  1980  00FF4B  6F                 	db	111	;'o'
  1981  00FF4C  6C                 	db	108	;'l'
  1982  00FF4D  74                 	db	116	;'t'
  1983  00FF4E  61                 	db	97	;'a'
  1984  00FF4F  67                 	db	103	;'g'
  1985  00FF50  65                 	db	101	;'e'
  1986  00FF51  20                 	db	32
  1987  00FF52  44                 	db	68	;'D'
  1988  00FF53  4F                 	db	79	;'O'
  1989  00FF54  57                 	db	87	;'W'
  1990  00FF55  4E                 	db	78	;'N'
  1991  00FF56  20                 	db	32
  1992  00FF57  0D                 	db	13
  1993  00FF58  0A                 	db	10
  1994  00FF59  00                 	db	0
  1995  00FF5A                     STR_5:
  1996                           
  1997                           ; BSR set to: 61
  1998  00FF5A  0D                 	db	13
  1999  00FF5B  0A                 	db	10
  2000  00FF5C  20                 	db	32
  2001  00FF5D  56                 	db	86	;'V'
  2002  00FF5E  6F                 	db	111	;'o'
  2003  00FF5F  6C                 	db	108	;'l'
  2004  00FF60  74                 	db	116	;'t'
  2005  00FF61  61                 	db	97	;'a'
  2006  00FF62  67                 	db	103	;'g'
  2007  00FF63  65                 	db	101	;'e'
  2008  00FF64  20                 	db	32
  2009  00FF65  4F                 	db	79	;'O'
  2010  00FF66  46                 	db	70	;'F'
  2011  00FF67  46                 	db	70	;'F'
  2012  00FF68  20                 	db	32
  2013  00FF69  0D                 	db	13
  2014  00FF6A  0A                 	db	10
  2015  00FF6B  00                 	db	0
  2016  00FF6C                     STR_3:
  2017                           
  2018                           ; BSR set to: 61
  2019  00FF6C  0D                 	db	13
  2020  00FF6D  0A                 	db	10
  2021  00FF6E  20                 	db	32
  2022  00FF6F  52                 	db	82	;'R'
  2023  00FF70  61                 	db	97	;'a'
  2024  00FF71  6D                 	db	109	;'m'
  2025  00FF72  70                 	db	112	;'p'
  2026  00FF73  20                 	db	32
  2027  00FF74  56                 	db	86	;'V'
  2028  00FF75  44                 	db	68	;'D'
  2029  00FF76  43                 	db	67	;'C'
  2030  00FF77  20                 	db	32
  2031  00FF78  4F                 	db	79	;'O'
  2032  00FF79  4E                 	db	78	;'N'
  2033  00FF7A  20                 	db	32
  2034  00FF7B  0D                 	db	13
  2035  00FF7C  0A                 	db	10
  2036  00FF7D  00                 	db	0
  2037  00FF7E                     STR_9:
  2038                           
  2039                           ; BSR set to: 61
  2040  00FF7E  0D                 	db	13
  2041  00FF7F  0A                 	db	10
  2042  00FF80  20                 	db	32
  2043  00FF81  56                 	db	86	;'V'
  2044  00FF82  6F                 	db	111	;'o'
  2045  00FF83  6C                 	db	108	;'l'
  2046  00FF84  74                 	db	116	;'t'
  2047  00FF85  61                 	db	97	;'a'
  2048  00FF86  67                 	db	103	;'g'
  2049  00FF87  65                 	db	101	;'e'
  2050  00FF88  20                 	db	32
  2051  00FF89  4C                 	db	76	;'L'
  2052  00FF8A  4F                 	db	79	;'O'
  2053  00FF8B  57                 	db	87	;'W'
  2054  00FF8C  20                 	db	32
  2055  00FF8D  0D                 	db	13
  2056  00FF8E  0A                 	db	10
  2057  00FF8F  00                 	db	0
  2058  00FF90                     STR_7:
  2059                           
  2060                           ; BSR set to: 61
  2061  00FF90  0D                 	db	13
  2062  00FF91  0A                 	db	10
  2063  00FF92  20                 	db	32
  2064  00FF93  56                 	db	86	;'V'
  2065  00FF94  6F                 	db	111	;'o'
  2066  00FF95  6C                 	db	108	;'l'
  2067  00FF96  74                 	db	116	;'t'
  2068  00FF97  61                 	db	97	;'a'
  2069  00FF98  67                 	db	103	;'g'
  2070  00FF99  65                 	db	101	;'e'
  2071  00FF9A  20                 	db	32
  2072  00FF9B  55                 	db	85	;'U'
  2073  00FF9C  50                 	db	80	;'P'
  2074  00FF9D  20                 	db	32
  2075  00FF9E  0D                 	db	13
  2076  00FF9F  0A                 	db	10
  2077  00FFA0  00                 	db	0
  2078  00FFA1                     STR_12:
  2079                           
  2080                           ; BSR set to: 61
  2081  00FFA1  0D                 	db	13
  2082  00FFA2  0A                 	db	10
  2083  00FFA3  20                 	db	32
  2084  00FFA4  42                 	db	66	;'B'
  2085  00FFA5  75                 	db	117	;'u'
  2086  00FFA6  69                 	db	105	;'i'
  2087  00FFA7  6C                 	db	108	;'l'
  2088  00FFA8  64                 	db	100	;'d'
  2089  00FFA9  20                 	db	32
  2090  00FFAA  25                 	db	37
  2091  00FFAB  73                 	db	115	;'s'
  2092  00FFAC  20                 	db	32
  2093  00FFAD  25                 	db	37
  2094  00FFAE  73                 	db	115	;'s'
  2095  00FFAF  0D                 	db	13
  2096  00FFB0  0A                 	db	10
  2097  00FFB1  00                 	db	0
  2098  00FFB2                     STR_1:
  2099                           
  2100                           ; BSR set to: 61
  2101  00FFB2  41                 	db	65	;'A'
  2102  00FFB3  70                 	db	112	;'p'
  2103  00FFB4  72                 	db	114	;'r'
  2104  00FFB5  20                 	db	32
  2105  00FFB6  20                 	db	32
  2106  00FFB7  35                 	db	53	;'5'
  2107  00FFB8  20                 	db	32
  2108  00FFB9  32                 	db	50	;'2'
  2109  00FFBA  30                 	db	48	;'0'
  2110  00FFBB  32                 	db	50	;'2'
  2111  00FFBC  32                 	db	50	;'2'
  2112  00FFBD  00                 	db	0
  2113  00FFBE                     STR_2:
  2114                           
  2115                           ; BSR set to: 61
  2116  00FFBE  31                 	db	49	;'1'
  2117  00FFBF  36                 	db	54	;'6'
  2118  00FFC0  3A                 	db	58	;':'
  2119  00FFC1  34                 	db	52	;'4'
  2120  00FFC2  35                 	db	53	;'5'
  2121  00FFC3  3A                 	db	58	;':'
  2122  00FFC4  32                 	db	50	;'2'
  2123  00FFC5  32                 	db	50	;'2'
  2124  00FFC6  00                 	db	0
  2125  00FFC7                     STR_13:
  2126                           
  2127                           ; BSR set to: 61
  2128  00FFC7  25                 	db	37
  2129  00FFC8  73                 	db	115	;'s'
  2130  00FFC9  20                 	db	32
  2131  00FFCA  25                 	db	37
  2132  00FFCB  73                 	db	115	;'s'
  2133  00FFCC  00                 	db	0
  2134  00FFCD                     STR_30:
  2135                           
  2136                           ; BSR set to: 61
  2137  00FFCD  49                 	db	73	;'I'
  2138  00FFCE  4E                 	db	78	;'N'
  2139  00FFCF  46                 	db	70	;'F'
  2140  00FFD0  00                 	db	0
  2141  00FFD1                     STR_34:
  2142                           
  2143                           ; BSR set to: 61
  2144  00FFD1  4E                 	db	78	;'N'
  2145  00FFD2  41                 	db	65	;'A'
  2146  00FFD3  4E                 	db	78	;'N'
  2147  00FFD4  00                 	db	0
  2148  00FFD5                     STR_31:
  2149                           
  2150                           ; BSR set to: 61
  2151  00FFD5  69                 	db	105	;'i'
  2152  00FFD6  6E                 	db	110	;'n'
  2153  00FFD7  66                 	db	102	;'f'
  2154  00FFD8  00                 	db	0
  2155  00FFD9                     STR_35:
  2156                           
  2157                           ; BSR set to: 61
  2158  00FFD9  6E                 	db	110	;'n'
  2159  00FFDA  61                 	db	97	;'a'
  2160  00FFDB  6E                 	db	110	;'n'
  2161  00FFDC  00                 	db	0
  2162  00FFDD                     STR_43:
  2163                           
  2164                           ; BSR set to: 61
  2165  00FFDD  6C                 	db	108	;'l'
  2166  00FFDE  6C                 	db	108	;'l'
  2167  00FFDF  73                 	db	115	;'s'
  2168  00FFE0  00                 	db	0
  2169  00FFE1                     STR_38:
  2170                           
  2171                           ; BSR set to: 61
  2172  00FFE1  6C                 	db	108	;'l'
  2173  00FFE2  66                 	db	102	;'f'
  2174  00FFE3  00                 	db	0
  2175  00FFE4                     STR_27:
  2176                           
  2177                           ; BSR set to: 61
  2178  00FFE4  70                 	db	112	;'p'
  2179  00FFE5  30                 	db	48	;'0'
  2180  00FFE6  00                 	db	0
  2181  00FFE7                     STR_28:
  2182                           
  2183                           ; BSR set to: 61
  2184  00FFE7  70                 	db	112	;'p'
  2185  00FFE8  31                 	db	49	;'1'
  2186  00FFE9  00                 	db	0
  2187  00FFEA                     STR_25:
  2188                           
  2189                           ; BSR set to: 61
  2190  00FFEA  70                 	db	112	;'p'
  2191  00FFEB  64                 	db	100	;'d'
  2192  00FFEC  00                 	db	0
  2193  00FFED                     STR_26:
  2194                           
  2195                           ; BSR set to: 61
  2196  00FFED  70                 	db	112	;'p'
  2197  00FFEE  6C                 	db	108	;'l'
  2198  00FFEF  00                 	db	0
  2199  00FFF0                     STR_22:
  2200                           
  2201                           ; BSR set to: 61
  2202  00FFF0  70                 	db	112	;'p'
  2203  00FFF1  6F                 	db	111	;'o'
  2204  00FFF2  00                 	db	0
  2205  00FFF3                     STR_23:
  2206                           
  2207                           ; BSR set to: 61
  2208  00FFF3  70                 	db	112	;'p'
  2209  00FFF4  70                 	db	112	;'p'
  2210  00FFF5  00                 	db	0
  2211  00FFF6                     STR_20:
  2212                           
  2213                           ; BSR set to: 61
  2214  00FFF6  70                 	db	112	;'p'
  2215  00FFF7  72                 	db	114	;'r'
  2216  00FFF8  00                 	db	0
  2217  00FFF9                     STR_21:
  2218                           
  2219                           ; BSR set to: 61
  2220  00FFF9  70                 	db	112	;'p'
  2221  00FFFA  73                 	db	115	;'s'
  2222  00FFFB  00                 	db	0
  2223  00FFFC                     STR_24:
  2224                           
  2225                           ; BSR set to: 61
  2226  00FFFC  70                 	db	112	;'p'
  2227  00FFFD  75                 	db	117	;'u'
  2228  00FFFE  00                 	db	0
  2229  00FFFF  00                 	db	0	; dummy byte at the end
  2230  0000                     
  2231                           ; #config settings
  2232                           
  2233                           	psect	cinit
  2234  0130F8                     __pcinit:
  2235                           	callstack 0
  2236  0130F8                     start_initialization:
  2237                           	callstack 0
  2238  0130F8                     __initialization:
  2239                           	callstack 0
  2240                           
  2241                           ; Initialize objects allocated to BIGRAM (1024 bytes)
  2242                           ; load TBLPTR registers with __pidataBIGRAM
  2243  0130F8  0E2C               	movlw	low __pidataBIGRAM
  2244  0130FA  6EF6               	movwf	tblptrl,c
  2245  0130FC  0E17               	movlw	high __pidataBIGRAM
  2246  0130FE  6EF7               	movwf	tblptrh,c
  2247  013100  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  2248  013102  6EF8               	movwf	tblptru,c
  2249  013104  EE05  F143         	lfsr	0,__pdataBIGRAM
  2250  013108  EE11 F000          	lfsr	1,1024
  2251  01310C                     copy_data0:
  2252  01310C  0009               	tblrd		*+
  2253  01310E  006F FFD7 FFEE     	movff	tablat,postinc0
  2254  013114  50E5               	movf	postdec1,w,c
  2255  013116  50E1               	movf	fsr1l,w,c
  2256  013118  E1F9               	bnz	copy_data0
  2257  01311A  50E2               	movf	fsr1h,w,c
  2258  01311C  E1F7               	bnz	copy_data0
  2259                           
  2260                           ; Initialize objects allocated to BANK2 (90 bytes)
  2261                           ; load TBLPTR registers with __pidataBANK2
  2262  01311E  0E4A               	movlw	low __pidataBANK2
  2263  013120  6EF6               	movwf	tblptrl,c
  2264  013122  0E40               	movlw	high __pidataBANK2
  2265  013124  6EF7               	movwf	tblptrh,c
  2266  013126  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  2267  013128  6EF8               	movwf	tblptru,c
  2268  01312A  EE00  F280         	lfsr	0,__pdataBANK2
  2269  01312E  EE10 F05A          	lfsr	1,90
  2270  013132                     copy_data1:
  2271  013132  0009               	tblrd		*+
  2272  013134  006F FFD7 FFEE     	movff	tablat,postinc0
  2273  01313A  50E5               	movf	postdec1,w,c
  2274  01313C  50E1               	movf	fsr1l,w,c
  2275  01313E  E1F9               	bnz	copy_data1
  2276                           
  2277                           ; Initialize objects allocated to BANK1 (11 bytes)
  2278                           ; load TBLPTR registers with __pidataBANK1
  2279  013140  0EDE               	movlw	low __pidataBANK1
  2280  013142  6EF6               	movwf	tblptrl,c
  2281  013144  0E4E               	movlw	high __pidataBANK1
  2282  013146  6EF7               	movwf	tblptrh,c
  2283  013148  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  2284  01314A  6EF8               	movwf	tblptru,c
  2285  01314C  EE00  F1C0         	lfsr	0,__pdataBANK1
  2286  013150  EE10 F00B          	lfsr	1,11
  2287  013154                     copy_data2:
  2288  013154  0009               	tblrd		*+
  2289  013156  006F FFD7 FFEE     	movff	tablat,postinc0
  2290  01315C  50E5               	movf	postdec1,w,c
  2291  01315E  50E1               	movf	fsr1l,w,c
  2292  013160  E1F9               	bnz	copy_data2
  2293                           
  2294                           ; Initialize objects allocated to BANK0 (2 bytes)
  2295                           ; load TBLPTR registers with __pidataBANK0
  2296  013162  0E20               	movlw	low __pidataBANK0
  2297  013164  6EF6               	movwf	tblptrl,c
  2298  013166  0E4F               	movlw	high __pidataBANK0
  2299  013168  6EF7               	movwf	tblptrh,c
  2300  01316A  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  2301  01316C  6EF8               	movwf	tblptru,c
  2302  01316E  0009               	tblrd		*+	;fetch initializer
  2303  013170  006F FFD4  F0FD    	movff	tablat,__pdataBANK0
  2304  013176  0009               	tblrd		*+	;fetch initializer
  2305  013178  006F FFD4  F0FE    	movff	tablat,__pdataBANK0+1
  2306                           
  2307                           ; Initialize objects allocated to COMRAM (2 bytes)
  2308                           ; load TBLPTR registers with __pidataCOMRAM
  2309  01317E  0E1E               	movlw	low __pidataCOMRAM
  2310  013180  6EF6               	movwf	tblptrl,c
  2311  013182  0E4F               	movlw	high __pidataCOMRAM
  2312  013184  6EF7               	movwf	tblptrh,c
  2313  013186  0E01               	movlw	low (__pidataCOMRAM shr (0+16))
  2314  013188  6EF8               	movwf	tblptru,c
  2315  01318A  0009               	tblrd		*+	;fetch initializer
  2316  01318C  006F FFD4  F03F    	movff	tablat,__pdataCOMRAM
  2317  013192  0009               	tblrd		*+	;fetch initializer
  2318  013194  006F FFD4  F040    	movff	tablat,__pdataCOMRAM+1
  2319                           
  2320                           ; Clear objects allocated to BIGRAM (4032 bytes)
  2321  01319A  EE01  F183         	lfsr	0,__pbssBIGRAM
  2322  01319E  EE13 F3C0          	lfsr	1,4032
  2323  0131A2                     clear_0:
  2324  0131A2  6AEE               	clrf	postinc0,c
  2325  0131A4  50E5               	movf	postdec1,w,c
  2326  0131A6  50E1               	movf	fsr1l,w,c
  2327  0131A8  E1FC               	bnz	clear_0
  2328  0131AA  50E2               	movf	fsr1h,w,c
  2329  0131AC  E1FA               	bnz	clear_0
  2330                           
  2331                           ; Clear objects allocated to BANK5 (131 bytes)
  2332  0131AE  EE01  F100         	lfsr	0,__pbssBANK5
  2333  0131B2  0E83               	movlw	131
  2334  0131B4                     clear_1:
  2335  0131B4  6AEE               	clrf	postinc0,c
  2336  0131B6  06E8               	decf	wreg,f,c
  2337  0131B8  E1FD               	bnz	clear_1
  2338                           
  2339                           ; Clear objects allocated to BANK4 (255 bytes)
  2340  0131BA  EE01  F000         	lfsr	0,__pbssBANK4
  2341  0131BE  EE10 F0FF          	lfsr	1,255
  2342  0131C2                     clear_2:
  2343  0131C2  6AEE               	clrf	postinc0,c
  2344  0131C4  50E5               	movf	postdec1,w,c
  2345  0131C6  50E1               	movf	fsr1l,w,c
  2346  0131C8  E1FC               	bnz	clear_2
  2347  0131CA  50E2               	movf	fsr1h,w,c
  2348  0131CC  E1FA               	bnz	clear_2
  2349                           
  2350                           ; Clear objects allocated to BANK3 (131 bytes)
  2351  0131CE  EE00  F300         	lfsr	0,__pbssBANK3
  2352  0131D2  0E83               	movlw	131
  2353  0131D4                     clear_3:
  2354  0131D4  6AEE               	clrf	postinc0,c
  2355  0131D6  06E8               	decf	wreg,f,c
  2356  0131D8  E1FD               	bnz	clear_3
  2357                           
  2358                           ; Clear objects allocated to BANK2 (128 bytes)
  2359  0131DA  EE00  F200         	lfsr	0,__pbssBANK2
  2360  0131DE  0E80               	movlw	128
  2361  0131E0                     clear_4:
  2362  0131E0  6AEE               	clrf	postinc0,c
  2363  0131E2  06E8               	decf	wreg,f,c
  2364  0131E4  E1FD               	bnz	clear_4
  2365                           
  2366                           ; Clear objects allocated to BANK1 (157 bytes)
  2367  0131E6  EE00  F100         	lfsr	0,__pbssBANK1
  2368  0131EA  0E9D               	movlw	157
  2369  0131EC                     clear_5:
  2370  0131EC  6AEE               	clrf	postinc0,c
  2371  0131EE  06E8               	decf	wreg,f,c
  2372  0131F0  E1FD               	bnz	clear_5
  2373                           
  2374                           ; Clear objects allocated to BANK0 (9 bytes)
  2375  0131F2  EE00  F0F4         	lfsr	0,__pbssBANK0
  2376  0131F6  0E09               	movlw	9
  2377  0131F8                     clear_6:
  2378  0131F8  6AEE               	clrf	postinc0,c
  2379  0131FA  06E8               	decf	wreg,f,c
  2380  0131FC  E1FD               	bnz	clear_6
  2381                           
  2382                           ; Clear objects allocated to COMRAM (30 bytes)
  2383  0131FE  EE00  F021         	lfsr	0,__pbssCOMRAM
  2384  013202  0E1E               	movlw	30
  2385  013204                     clear_7:
  2386  013204  6AEE               	clrf	postinc0,c
  2387  013206  06E8               	decf	wreg,f,c
  2388  013208  E1FD               	bnz	clear_7
  2389                           
  2390                           ;
  2391                           ; Setup IVTBASE
  2392                           ;
  2393  01320A  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  2394  01320C  6ED5               	movwf	213,c
  2395  01320E  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  2396  013210  6ED6               	movwf	214,c
  2397  013212  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  2398  013214  6ED7               	movwf	215,c
  2399  013216                     end_of_initialization:
  2400                           	callstack 0
  2401  013216                     __end_of__initialization:
  2402                           	callstack 0
  2403  013216  0100               	movlb	0
  2404  013218  EF52  F088         	goto	_main	;jump to C main() function
  2405                           
  2406                           	psect	bssCOMRAM
  2407  000021                     __pbssCOMRAM:
  2408                           	callstack 0
  2409  000021                     _UART1_UARTInterruptHandler:
  2410                           	callstack 0
  2411  000021                     	ds	3
  2412  000024                     _UART1_FramingErrorInterruptHandler:
  2413                           	callstack 0
  2414  000024                     	ds	3
  2415  000027                     _UART1_TxInterruptHandler:
  2416                           	callstack 0
  2417  000027                     	ds	3
  2418  00002A                     _UART1_RxInterruptHandler:
  2419                           	callstack 0
  2420  00002A                     	ds	3
  2421  00002D                     _flags:
  2422                           	callstack 0
  2423  00002D                     	ds	2
  2424  00002F                     _timer5ReloadVal:
  2425                           	callstack 0
  2426  00002F                     	ds	2
  2427  000031                     TMR6_ISR@CountCallBack:
  2428                           	callstack 0
  2429  000031                     	ds	2
  2430  000033                     Adc_Isr@c_adc_chan:
  2431                           	callstack 0
  2432  000033                     	ds	1
  2433  000034                     _ps_type_index:
  2434                           	callstack 0
  2435  000034                     	ds	1
  2436  000035                     _mode:
  2437                           	callstack 0
  2438  000035                     	ds	1
  2439  000036                     _i_index:
  2440                           	callstack 0
  2441  000036                     	ds	1
  2442  000037                     _a_index:
  2443                           	callstack 0
  2444  000037                     	ds	1
  2445  000038                     _uart1RxLastError:
  2446                           	callstack 0
  2447  000038                     	ds	1
  2448  000039                     _uart1RxCount:
  2449                           	callstack 0
  2450  000039                     	ds	1
  2451  00003A                     _uart1RxTail:
  2452                           	callstack 0
  2453  00003A                     	ds	1
  2454  00003B                     _uart1RxHead:
  2455                           	callstack 0
  2456  00003B                     	ds	1
  2457  00003C                     _uart1TxBufferRemaining:
  2458                           	callstack 0
  2459  00003C                     	ds	1
  2460  00003D                     _uart1TxTail:
  2461                           	callstack 0
  2462  00003D                     	ds	1
  2463  00003E                     _uart1TxHead:
  2464                           	callstack 0
  2465  00003E                     	ds	1
  2466                           
  2467                           	psect	dataCOMRAM
  2468  00003F                     __pdataCOMRAM:
  2469                           	callstack 0
  2470  00003F                     _ps_type_ptr:
  2471                           	callstack 0
  2472  00003F                     	ds	2
  2473                           
  2474                           	psect	bssBANK0
  2475  0000F4                     __pbssBANK0:
  2476                           	callstack 0
  2477  0000F4                     _width:
  2478                           	callstack 0
  2479  0000F4                     	ds	2
  2480  0000F6                     _prec:
  2481                           	callstack 0
  2482  0000F6                     	ds	2
  2483  0000F8                     _res:
  2484                           	callstack 0
  2485  0000F8                     	ds	1
  2486  0000F9                     _mode_sw:
  2487                           	callstack 0
  2488  0000F9                     	ds	1
  2489  0000FA                     _dac_v:
  2490                           	callstack 0
  2491  0000FA                     	ds	1
  2492  0000FB                     _adc_tick:
  2493                           	callstack 0
  2494  0000FB                     	ds	1
  2495  0000FC                     _disp_tick:
  2496                           	callstack 0
  2497  0000FC                     	ds	1
  2498                           
  2499                           	psect	dataBANK0
  2500  0000FD                     __pdataBANK0:
  2501                           	callstack 0
  2502  0000FD                     _static_ps:
  2503                           	callstack 0
  2504  0000FD                     	ds	1
  2505  0000FE                     _roll_max:
  2506                           	callstack 0
  2507  0000FE                     	ds	1
  2508                           
  2509                           	psect	bssBANK1
  2510  000100                     __pbssBANK1:
  2511                           	callstack 0
  2512  000100                     _spi_link:
  2513                           	callstack 0
  2514  000100                     	ds	12
  2515  00010C                     _tickCount:
  2516                           	callstack 0
  2517  00010C                     	ds	12
  2518  000118                     floorf@F526:
  2519                           	callstack 0
  2520  000118                     	ds	4
  2521  00011C                     ___fpclassifyf@F465:
  2522                           	callstack 0
  2523  00011C                     	ds	4
  2524  000120                     wdtdelay@dcount:
  2525                           	callstack 0
  2526  000120                     	ds	4
  2527  000124                     _ival:
  2528                           	callstack 0
  2529  000124                     	ds	4
  2530  000128                     _vval:
  2531                           	callstack 0
  2532  000128                     	ds	4
  2533  00012C                     _UART1_ErrorHandler:
  2534                           	callstack 0
  2535  00012C                     	ds	3
  2536  00012F                     _UART1_OverrunErrorHandler:
  2537                           	callstack 0
  2538  00012F                     	ds	3
  2539  000132                     _UART1_FramingErrorHandler:
  2540                           	callstack 0
  2541  000132                     	ds	3
  2542  000135                     _DMA1_SCNTI_InterruptHandler:
  2543                           	callstack 0
  2544  000135                     	ds	3
  2545  000138                     _TMR5_InterruptHandler:
  2546                           	callstack 0
  2547  000138                     	ds	3
  2548  00013B                     _TMR6_InterruptHandler:
  2549                           	callstack 0
  2550  00013B                     	ds	3
  2551  00013E                     _ADCC_ADI_InterruptHandler:
  2552                           	callstack 0
  2553  00013E                     	ds	3
  2554  000141                     _nout:
  2555                           	callstack 0
  2556  000141                     	ds	2
  2557  000143                     _dbuf:
  2558                           	callstack 0
  2559  000143                     	ds	80
  2560  000193                     _SrcVarName0:
  2561                           	callstack 0
  2562  000193                     	ds	10
  2563                           
  2564                           	psect	dataBANK1
  2565  0001C0                     __pdataBANK1:
  2566                           	callstack 0
  2567  0001C0                     stoa@F1164:
  2568                           	callstack 0
  2569  0001C0                     	ds	7
  2570  0001C7                     _build_time:
  2571                           	callstack 0
  2572  0001C7                     	ds	2
  2573  0001C9                     _build_date:
  2574                           	callstack 0
  2575  0001C9                     	ds	2
  2576                           
  2577                           	psect	bssBANK2
  2578  000200                     __pbssBANK2:
  2579                           	callstack 0
  2580  000200                     _uart1RxStatusBuffer:
  2581                           	callstack 0
  2582  000200                     	ds	64
  2583  000240                     _uart1TxBuffer:
  2584                           	callstack 0
  2585  000240                     	ds	64
  2586                           
  2587                           	psect	dataBANK2
  2588  000280                     __pdataBANK2:
  2589                           	callstack 0
  2590  000280                     _g_cmds:
  2591                           	callstack 0
  2592  000280                     	ds	50
  2593  0002B2                     _ps_type:
  2594                           	callstack 0
  2595  0002B2                     	ds	40
  2596                           
  2597                           	psect	bssBANK3
  2598  000300                     __pbssBANK3:
  2599                           	callstack 0
  2600  000300                     _uart1RxBuffer:
  2601                           	callstack 0
  2602  000300                     	ds	64
  2603  000340                     _ring_buf1:
  2604                           	callstack 0
  2605  000340                     	ds	67
  2606                           
  2607                           	psect	bssBANK4
  2608  000400                     __pbssBANK4:
  2609                           	callstack 0
  2610  000400                     _buff1:
  2611                           	callstack 0
  2612  000400                     	ds	255
  2613                           
  2614                           	psect	bssBANK5
  2615  000500                     __pbssBANK5:
  2616                           	callstack 0
  2617  000500                     _cli_ctx:
  2618                           	callstack 0
  2619  000500                     	ds	131
  2620                           
  2621                           	psect	bssBIGRAM
  2622  000583                     __pbssBIGRAM:
  2623                           	callstack 0
  2624  000583                     _a:
  2625                           	callstack 0
  2626  000583                     	ds	4032
  2627                           
  2628                           	psect	dataBIGRAM
  2629  001543                     __pdataBIGRAM:
  2630                           	callstack 0
  2631  001543                     	ds	1024
  2632                           
  2633                           	psect	cstackBANK1
  2634  00019D                     __pcstackBANK1:
  2635                           	callstack 0
  2636  00019D                     ?_vfprintf:
  2637                           	callstack 0
  2638  00019D                     vfprintf@fp:
  2639                           	callstack 0
  2640                           
  2641                           ; 2 bytes @ 0x0
  2642  00019D                     	ds	2
  2643  00019F                     vfprintf@fmt:
  2644                           	callstack 0
  2645                           
  2646                           ; 2 bytes @ 0x2
  2647  00019F                     	ds	2
  2648  0001A1                     vfprintf@ap:
  2649                           	callstack 0
  2650                           
  2651                           ; 2 bytes @ 0x4
  2652  0001A1                     	ds	2
  2653  0001A3                     ?_sprintf:
  2654                           	callstack 0
  2655  0001A3                     ?_printf:
  2656                           	callstack 0
  2657  0001A3                     sprintf@s:
  2658                           	callstack 0
  2659  0001A3                     printf@fmt:
  2660                           	callstack 0
  2661                           
  2662                           ; 2 bytes @ 0x6
  2663  0001A3                     	ds	2
  2664  0001A5                     sprintf@fmt:
  2665                           	callstack 0
  2666                           
  2667                           ; 2 bytes @ 0x8
  2668  0001A5                     	ds	10
  2669  0001AF                     sprintf@ap:
  2670                           	callstack 0
  2671                           
  2672                           ; 2 bytes @ 0x12
  2673  0001AF                     	ds	2
  2674  0001B1                     sprintf@f:
  2675                           	callstack 0
  2676                           
  2677                           ; 11 bytes @ 0x14
  2678  0001B1                     	ds	11
  2679  0001BC                     ??_main:
  2680                           
  2681                           ; 1 bytes @ 0x1F
  2682  0001BC                     	ds	2
  2683  0001BE                     main@lcd_update:
  2684                           	callstack 0
  2685                           
  2686                           ; 1 bytes @ 0x21
  2687  0001BE                     	ds	1
  2688  0001BF                     main@i:
  2689                           	callstack 0
  2690                           
  2691                           ; 1 bytes @ 0x22
  2692  0001BF                     	ds	1
  2693                           
  2694                           	psect	cstackBANK0
  2695  000060                     __pcstackBANK0:
  2696                           	callstack 0
  2697  000060                     ??_display_led:
  2698  000060                     ?_strlen:
  2699                           	callstack 0
  2700  000060                     ?___fpclassifyf:
  2701                           	callstack 0
  2702  000060                     ?_isupper:
  2703                           	callstack 0
  2704  000060                     ?_isdigit:
  2705                           	callstack 0
  2706  000060                     ?_isspace:
  2707                           	callstack 0
  2708  000060                     ?___wmul:
  2709                           	callstack 0
  2710  000060                     ?___awdiv:
  2711                           	callstack 0
  2712  000060                     ?___awmod:
  2713                           	callstack 0
  2714  000060                     ?___fladd:
  2715                           	callstack 0
  2716  000060                     ?___fldiv:
  2717                           	callstack 0
  2718  000060                     ?___flneg:
  2719                           	callstack 0
  2720  000060                     ?___fltol:
  2721                           	callstack 0
  2722  000060                     ?___xxtofl:
  2723                           	callstack 0
  2724  000060                     ?___lodiv:
  2725                           	callstack 0
  2726  000060                     ?___lomod:
  2727                           	callstack 0
  2728  000060                     putch@txData:
  2729                           	callstack 0
  2730  000060                     PWM5_LoadDutyValue@dutyValue:
  2731                           	callstack 0
  2732  000060                     PWM6_LoadDutyValue@dutyValue:
  2733                           	callstack 0
  2734  000060                     DATAEE_WriteByte@bAdd:
  2735                           	callstack 0
  2736  000060                     DATAEE_ReadByte@bAdd:
  2737                           	callstack 0
  2738  000060                     StartTimer@count:
  2739                           	callstack 0
  2740  000060                     linux_getc@a_data:
  2741                           	callstack 0
  2742  000060                     ringBufS_put_dma@_this:
  2743                           	callstack 0
  2744  000060                     ___wmul@multiplier:
  2745                           	callstack 0
  2746  000060                     ___awdiv@dividend:
  2747                           	callstack 0
  2748  000060                     ___awmod@dividend:
  2749                           	callstack 0
  2750  000060                     memcpy@d1:
  2751                           	callstack 0
  2752  000060                     memset@dest:
  2753                           	callstack 0
  2754  000060                     isdigit@c:
  2755                           	callstack 0
  2756  000060                     isspace@c:
  2757                           	callstack 0
  2758  000060                     isupper@c:
  2759                           	callstack 0
  2760  000060                     strcpy@dest:
  2761                           	callstack 0
  2762  000060                     strlen@s:
  2763                           	callstack 0
  2764  000060                     ADCC_SetADIInterruptHandler@InterruptHandler:
  2765                           	callstack 0
  2766  000060                     TMR6_SetInterruptHandler@InterruptHandler:
  2767                           	callstack 0
  2768  000060                     TMR5_SetInterruptHandler@InterruptHandler:
  2769                           	callstack 0
  2770  000060                     DMA1_SetSCNTIInterruptHandler@InterruptHandler:
  2771                           	callstack 0
  2772  000060                     UART1_SetFramingErrorHandler@interruptHandler:
  2773                           	callstack 0
  2774  000060                     UART1_SetOverrunErrorHandler@interruptHandler:
  2775                           	callstack 0
  2776  000060                     UART1_SetErrorHandler@interruptHandler:
  2777                           	callstack 0
  2778  000060                     UART1_SetRxInterruptHandler@InterruptHandler:
  2779                           	callstack 0
  2780  000060                     UART1_SetTxInterruptHandler@InterruptHandler:
  2781                           	callstack 0
  2782  000060                     UART1_SetFramingErrorInterruptHandler@InterruptHandler:
  2783                           	callstack 0
  2784  000060                     UART1_SetUartInterruptHandler@InterruptHandler:
  2785                           	callstack 0
  2786  000060                     wdtdelay@delay:
  2787                           	callstack 0
  2788  000060                     ___fleq@ff1:
  2789                           	callstack 0
  2790  000060                     ___flneg@f1:
  2791                           	callstack 0
  2792  000060                     ___fltol@f1:
  2793                           	callstack 0
  2794  000060                     ___fladd@b:
  2795                           	callstack 0
  2796  000060                     ___fldiv@b:
  2797                           	callstack 0
  2798  000060                     ___xxtofl@val:
  2799                           	callstack 0
  2800  000060                     ___fpclassifyf@x:
  2801                           	callstack 0
  2802  000060                     ___lodiv@dividend:
  2803                           	callstack 0
  2804  000060                     ___lomod@dividend:
  2805                           	callstack 0
  2806                           
  2807                           ; 8 bytes @ 0x0
  2808  000060                     	ds	1
  2809  000061                     ?_fputc:
  2810                           	callstack 0
  2811  000061                     fputc@c:
  2812                           	callstack 0
  2813                           
  2814                           ; 2 bytes @ 0x1
  2815  000061                     	ds	1
  2816  000062                     ??_isupper:
  2817  000062                     ??_isdigit:
  2818  000062                     ??_isspace:
  2819  000062                     ??_PWM5_LoadDutyValue:
  2820  000062                     ??_PWM6_LoadDutyValue:
  2821  000062                     ??_StartTimer:
  2822  000062                     DATAEE_WriteByte@bData:
  2823                           	callstack 0
  2824  000062                     ringBufS_put_dma@c:
  2825                           	callstack 0
  2826  000062                     ___wmul@multiplicand:
  2827                           	callstack 0
  2828  000062                     ___awdiv@divisor:
  2829                           	callstack 0
  2830  000062                     ___awmod@divisor:
  2831                           	callstack 0
  2832  000062                     memcpy@s1:
  2833                           	callstack 0
  2834  000062                     memset@c:
  2835                           	callstack 0
  2836  000062                     strcpy@src:
  2837                           	callstack 0
  2838  000062                     strlen@a:
  2839                           	callstack 0
  2840                           
  2841                           ; 2 bytes @ 0x2
  2842  000062                     	ds	1
  2843  000063                     ??_TMR5_Initialize:
  2844  000063                     fputc@fp:
  2845                           	callstack 0
  2846                           
  2847                           ; 2 bytes @ 0x3
  2848  000063                     	ds	1
  2849  000064                     ??___fpclassifyf:
  2850  000064                     ??_strcpy:
  2851  000064                     ??___fltol:
  2852  000064                     ??___xxtofl:
  2853  000064                     ?_strncmp:
  2854                           	callstack 0
  2855  000064                     send_lcd_data@data:
  2856                           	callstack 0
  2857  000064                     send_lcd_cmd@cmd:
  2858                           	callstack 0
  2859  000064                     send_lcd_cmd_long@cmd:
  2860                           	callstack 0
  2861  000064                     ___awdiv@counter:
  2862                           	callstack 0
  2863  000064                     ___awmod@counter:
  2864                           	callstack 0
  2865  000064                     WaitMs@numMilliseconds:
  2866                           	callstack 0
  2867  000064                     ___wmul@product:
  2868                           	callstack 0
  2869  000064                     memcpy@n:
  2870                           	callstack 0
  2871  000064                     memset@n:
  2872                           	callstack 0
  2873  000064                     strncmp@_l:
  2874                           	callstack 0
  2875  000064                     ___fleq@ff2:
  2876                           	callstack 0
  2877  000064                     ___fladd@a:
  2878                           	callstack 0
  2879  000064                     ___fldiv@a:
  2880                           	callstack 0
  2881                           
  2882                           ; 4 bytes @ 0x4
  2883  000064                     	ds	1
  2884  000065                     ??_fputc:
  2885  000065                     ___awdiv@sign:
  2886                           	callstack 0
  2887  000065                     ___awmod@sign:
  2888                           	callstack 0
  2889                           
  2890                           ; 1 bytes @ 0x5
  2891  000065                     	ds	1
  2892  000066                     ??_memset:
  2893  000066                     ?_tolower:
  2894                           	callstack 0
  2895  000066                     ?_atoi:
  2896                           	callstack 0
  2897  000066                     memcpy@tmp:
  2898                           	callstack 0
  2899  000066                     ___awdiv@quotient:
  2900                           	callstack 0
  2901  000066                     atoi@s:
  2902                           	callstack 0
  2903  000066                     strcpy@s:
  2904                           	callstack 0
  2905  000066                     strncmp@_r:
  2906                           	callstack 0
  2907  000066                     tolower@c:
  2908                           	callstack 0
  2909                           
  2910                           ; 2 bytes @ 0x6
  2911  000066                     	ds	1
  2912  000067                     memcpy@d:
  2913                           	callstack 0
  2914                           
  2915                           ; 2 bytes @ 0x7
  2916  000067                     	ds	1
  2917  000068                     ??___fladd:
  2918  000068                     ??___fldiv:
  2919  000068                     ??_tolower:
  2920  000068                     ??_atoi:
  2921  000068                     ??___fleq:
  2922  000068                     ___fltol@sign1:
  2923                           	callstack 0
  2924  000068                     ___xxtofl@sign:
  2925                           	callstack 0
  2926  000068                     memset@k:
  2927                           	callstack 0
  2928  000068                     ___fpclassifyf@e:
  2929                           	callstack 0
  2930  000068                     strcpy@d:
  2931                           	callstack 0
  2932  000068                     strncmp@n:
  2933                           	callstack 0
  2934  000068                     ___lodiv@divisor:
  2935                           	callstack 0
  2936  000068                     ___lomod@divisor:
  2937                           	callstack 0
  2938                           
  2939                           ; 8 bytes @ 0x8
  2940  000068                     	ds	1
  2941  000069                     ___fltol@exp1:
  2942                           	callstack 0
  2943  000069                     ___xxtofl@exp:
  2944                           	callstack 0
  2945  000069                     memcpy@s:
  2946                           	callstack 0
  2947                           
  2948                           ; 2 bytes @ 0x9
  2949  000069                     	ds	1
  2950  00006A                     ??_strncmp:
  2951  00006A                     ?_fputs:
  2952                           	callstack 0
  2953  00006A                     ?_stoa:
  2954                           	callstack 0
  2955  00006A                     memset@s:
  2956                           	callstack 0
  2957  00006A                     stoa@fp:
  2958                           	callstack 0
  2959  00006A                     fputs@s:
  2960                           	callstack 0
  2961  00006A                     ___xxtofl@arg:
  2962                           	callstack 0
  2963  00006A                     ___fpclassifyf@u:
  2964                           	callstack 0
  2965                           
  2966                           ; 4 bytes @ 0xA
  2967  00006A                     	ds	1
  2968  00006B                     ringBufS_put_dma_cpy@_this:
  2969                           	callstack 0
  2970                           
  2971                           ; 2 bytes @ 0xB
  2972  00006B                     	ds	1
  2973  00006C                     ___fladd@signs:
  2974                           	callstack 0
  2975  00006C                     ringBufS_init@_this:
  2976                           	callstack 0
  2977  00006C                     ringBufS_flush@_this:
  2978                           	callstack 0
  2979  00006C                     stoa@s:
  2980                           	callstack 0
  2981  00006C                     atoi@neg:
  2982                           	callstack 0
  2983  00006C                     fputs@fp:
  2984                           	callstack 0
  2985  00006C                     strncmp@l:
  2986                           	callstack 0
  2987  00006C                     ___fldiv@rem:
  2988                           	callstack 0
  2989                           
  2990                           ; 4 bytes @ 0xC
  2991  00006C                     	ds	1
  2992  00006D                     ___fladd@aexp:
  2993                           	callstack 0
  2994  00006D                     ringBufS_put_dma_cpy@ptr:
  2995                           	callstack 0
  2996                           
  2997                           ; 2 bytes @ 0xD
  2998  00006D                     	ds	1
  2999  00006E                     ??_fputs:
  3000  00006E                     ??_stoa:
  3001  00006E                     ?___flmul:
  3002                           	callstack 0
  3003  00006E                     ringBufS_flush@clearBuffer:
  3004                           	callstack 0
  3005  00006E                     ___fladd@bexp:
  3006                           	callstack 0
  3007  00006E                     atoi@n:
  3008                           	callstack 0
  3009  00006E                     strncmp@r:
  3010                           	callstack 0
  3011  00006E                     ___flmul@b:
  3012                           	callstack 0
  3013                           
  3014                           ; 4 bytes @ 0xE
  3015  00006E                     	ds	1
  3016  00006F                     send_lcd_data_dma@strPtr:
  3017                           	callstack 0
  3018  00006F                     ringBufS_put_dma_cpy@len:
  3019                           	callstack 0
  3020  00006F                     ___fladd@grs:
  3021                           	callstack 0
  3022  00006F                     stoa@nuls:
  3023                           	callstack 0
  3024                           
  3025                           ; 7 bytes @ 0xF
  3026  00006F                     	ds	1
  3027  000070                     send_lcd_cmd_dma@strPtr:
  3028                           	callstack 0
  3029  000070                     ___fldiv@sign:
  3030                           	callstack 0
  3031  000070                     fputs@c:
  3032                           	callstack 0
  3033  000070                     eaDogM_WriteString@strPtr:
  3034                           	callstack 0
  3035  000070                     ___lodiv@quotient:
  3036                           	callstack 0
  3037                           
  3038                           ; 8 bytes @ 0x10
  3039  000070                     	ds	1
  3040  000071                     eaDogM_WriteCommand@cmd:
  3041                           	callstack 0
  3042  000071                     ___fldiv@new_exp:
  3043                           	callstack 0
  3044  000071                     fputs@i:
  3045                           	callstack 0
  3046                           
  3047                           ; 2 bytes @ 0x11
  3048  000071                     	ds	1
  3049  000072                     eaDogM_WriteString@len:
  3050                           	callstack 0
  3051  000072                     ___flmul@a:
  3052                           	callstack 0
  3053                           
  3054                           ; 4 bytes @ 0x12
  3055  000072                     	ds	1
  3056  000073                     ?_pad:
  3057                           	callstack 0
  3058  000073                     eaDogM_WriteStringAtPos@c:
  3059                           	callstack 0
  3060  000073                     pad@fp:
  3061                           	callstack 0
  3062  000073                     puts@s:
  3063                           	callstack 0
  3064  000073                     ___fldiv@grs:
  3065                           	callstack 0
  3066                           
  3067                           ; 4 bytes @ 0x13
  3068  000073                     	ds	1
  3069  000074                     eaDogM_WriteStringAtPos@strPtr:
  3070                           	callstack 0
  3071                           
  3072                           ; 2 bytes @ 0x14
  3073  000074                     	ds	1
  3074  000075                     _puts$4363:
  3075                           	callstack 0
  3076  000075                     pad@buf:
  3077                           	callstack 0
  3078                           
  3079                           ; 2 bytes @ 0x15
  3080  000075                     	ds	1
  3081  000076                     ??_eaDogM_WriteStringAtPos:
  3082  000076                     ??___flmul:
  3083  000076                     fh_pr@a_data:
  3084                           	callstack 0
  3085  000076                     fh_p1@a_data:
  3086                           	callstack 0
  3087  000076                     cli_init@a_ctx:
  3088                           	callstack 0
  3089  000076                     linux_putc@data:
  3090                           	callstack 0
  3091  000076                     stoa@i:
  3092                           	callstack 0
  3093                           
  3094                           ; 2 bytes @ 0x16
  3095  000076                     	ds	1
  3096  000077                     ___fldiv@bexp:
  3097                           	callstack 0
  3098  000077                     pad@p:
  3099                           	callstack 0
  3100                           
  3101                           ; 2 bytes @ 0x17
  3102  000077                     	ds	1
  3103  000078                     linux_putc@a_len:
  3104                           	callstack 0
  3105  000078                     eaDogM_WriteStringAtPos@r:
  3106                           	callstack 0
  3107  000078                     ___lodiv@counter:
  3108                           	callstack 0
  3109  000078                     ___fldiv@aexp:
  3110                           	callstack 0
  3111  000078                     cli_init@a_cmds:
  3112                           	callstack 0
  3113  000078                     __cli_interpret_cmd@a_ctx:
  3114                           	callstack 0
  3115  000078                     stoa@w:
  3116                           	callstack 0
  3117                           
  3118                           ; 2 bytes @ 0x18
  3119  000078                     	ds	1
  3120  000079                     ??_pad:
  3121  000079                     ?_floorf:
  3122                           	callstack 0
  3123  000079                     eaDogM_WriteStringAtPos@row:
  3124                           	callstack 0
  3125  000079                     floorf@x:
  3126                           	callstack 0
  3127                           
  3128                           ; 4 bytes @ 0x19
  3129  000079                     	ds	1
  3130  00007A                     ??__cli_interpret_cmd:
  3131  00007A                     ___flmul@sign:
  3132                           	callstack 0
  3133  00007A                     pad@i:
  3134                           	callstack 0
  3135  00007A                     stoa@cp:
  3136                           	callstack 0
  3137                           
  3138                           ; 2 bytes @ 0x1A
  3139  00007A                     	ds	1
  3140  00007B                     ___flmul@aexp:
  3141                           	callstack 0
  3142                           
  3143                           ; 1 bytes @ 0x1B
  3144  00007B                     	ds	1
  3145  00007C                     ___flmul@bexp:
  3146                           	callstack 0
  3147  00007C                     pad@w:
  3148                           	callstack 0
  3149  00007C                     stoa@p:
  3150                           	callstack 0
  3151                           
  3152                           ; 2 bytes @ 0x1C
  3153  00007C                     	ds	1
  3154  00007D                     ??_floorf:
  3155  00007D                     ___flmul@grs:
  3156                           	callstack 0
  3157                           
  3158                           ; 4 bytes @ 0x1D
  3159  00007D                     	ds	1
  3160  00007E                     ?_utoa:
  3161                           	callstack 0
  3162  00007E                     stoa@l:
  3163                           	callstack 0
  3164  00007E                     utoa@fp:
  3165                           	callstack 0
  3166                           
  3167                           ; 2 bytes @ 0x1E
  3168  00007E                     	ds	2
  3169  000080                     utoa@d:
  3170                           	callstack 0
  3171                           
  3172                           ; 8 bytes @ 0x20
  3173  000080                     	ds	1
  3174  000081                     ___flmul@prod:
  3175                           	callstack 0
  3176                           
  3177                           ; 4 bytes @ 0x21
  3178  000081                     	ds	1
  3179  000082                     __cli_interpret_cmd@ret:
  3180                           	callstack 0
  3181                           
  3182                           ; 1 bytes @ 0x22
  3183  000082                     	ds	1
  3184  000083                     __cli_interpret_cmd@i:
  3185                           	callstack 0
  3186  000083                     floorf@m:
  3187                           	callstack 0
  3188                           
  3189                           ; 4 bytes @ 0x23
  3190  000083                     	ds	1
  3191  000084                     cli_read@a_ctx:
  3192                           	callstack 0
  3193                           
  3194                           ; 2 bytes @ 0x24
  3195  000084                     	ds	1
  3196  000085                     ___flmul@temp:
  3197                           	callstack 0
  3198                           
  3199                           ; 2 bytes @ 0x25
  3200  000085                     	ds	1
  3201  000086                     ??_cli_read:
  3202                           
  3203                           ; 1 bytes @ 0x26
  3204  000086                     	ds	1
  3205  000087                     ?___flsub:
  3206                           	callstack 0
  3207  000087                     floorf@e:
  3208                           	callstack 0
  3209  000087                     ___flge@ff1:
  3210                           	callstack 0
  3211  000087                     ___flsub@b:
  3212                           	callstack 0
  3213                           
  3214                           ; 4 bytes @ 0x27
  3215  000087                     	ds	1
  3216  000088                     ??_utoa:
  3217                           
  3218                           ; 1 bytes @ 0x28
  3219  000088                     	ds	1
  3220  000089                     _cli_read$3080:
  3221                           	callstack 0
  3222  000089                     floorf@u:
  3223                           	callstack 0
  3224                           
  3225                           ; 4 bytes @ 0x29
  3226  000089                     	ds	2
  3227  00008B                     cli_read@i:
  3228                           	callstack 0
  3229  00008B                     ___flge@ff2:
  3230                           	callstack 0
  3231  00008B                     ___flsub@a:
  3232                           	callstack 0
  3233                           
  3234                           ; 4 bytes @ 0x2B
  3235  00008B                     	ds	4
  3236  00008F                     ??___flge:
  3237                           
  3238                           ; 1 bytes @ 0x2F
  3239  00008F                     	ds	1
  3240  000090                     utoa@p:
  3241                           	callstack 0
  3242                           
  3243                           ; 2 bytes @ 0x30
  3244  000090                     	ds	2
  3245  000092                     utoa@w:
  3246                           	callstack 0
  3247                           
  3248                           ; 2 bytes @ 0x32
  3249  000092                     	ds	1
  3250  000093                     ?_efgtoa:
  3251                           	callstack 0
  3252  000093                     efgtoa@fp:
  3253                           	callstack 0
  3254                           
  3255                           ; 2 bytes @ 0x33
  3256  000093                     	ds	1
  3257  000094                     utoa@n:
  3258                           	callstack 0
  3259                           
  3260                           ; 8 bytes @ 0x34
  3261  000094                     	ds	1
  3262  000095                     efgtoa@f:
  3263                           	callstack 0
  3264                           
  3265                           ; 4 bytes @ 0x35
  3266  000095                     	ds	4
  3267  000099                     efgtoa@c:
  3268                           	callstack 0
  3269                           
  3270                           ; 1 bytes @ 0x39
  3271  000099                     	ds	1
  3272  00009A                     ??_efgtoa:
  3273                           
  3274                           ; 1 bytes @ 0x3A
  3275  00009A                     	ds	2
  3276  00009C                     utoa@i:
  3277                           	callstack 0
  3278                           
  3279                           ; 2 bytes @ 0x3C
  3280  00009C                     	ds	3
  3281  00009F                     _efgtoa$4172:
  3282                           	callstack 0
  3283                           
  3284                           ; 2 bytes @ 0x3F
  3285  00009F                     	ds	2
  3286  0000A1                     _efgtoa$4180:
  3287                           	callstack 0
  3288                           
  3289                           ; 2 bytes @ 0x41
  3290  0000A1                     	ds	2
  3291  0000A3                     _efgtoa$4181:
  3292                           	callstack 0
  3293                           
  3294                           ; 2 bytes @ 0x43
  3295  0000A3                     	ds	2
  3296  0000A5                     efgtoa@t:
  3297                           	callstack 0
  3298                           
  3299                           ; 2 bytes @ 0x45
  3300  0000A5                     	ds	2
  3301  0000A7                     efgtoa@pp:
  3302                           	callstack 0
  3303                           
  3304                           ; 2 bytes @ 0x47
  3305  0000A7                     	ds	2
  3306  0000A9                     efgtoa@ne:
  3307                           	callstack 0
  3308                           
  3309                           ; 2 bytes @ 0x49
  3310  0000A9                     	ds	2
  3311  0000AB                     efgtoa@m:
  3312                           	callstack 0
  3313                           
  3314                           ; 2 bytes @ 0x4B
  3315  0000AB                     	ds	2
  3316  0000AD                     efgtoa@ou:
  3317                           	callstack 0
  3318                           
  3319                           ; 4 bytes @ 0x4D
  3320  0000AD                     	ds	4
  3321  0000B1                     efgtoa@d:
  3322                           	callstack 0
  3323                           
  3324                           ; 2 bytes @ 0x51
  3325  0000B1                     	ds	2
  3326  0000B3                     efgtoa@sign:
  3327                           	callstack 0
  3328                           
  3329                           ; 2 bytes @ 0x53
  3330  0000B3                     	ds	2
  3331  0000B5                     efgtoa@p:
  3332                           	callstack 0
  3333                           
  3334                           ; 2 bytes @ 0x55
  3335  0000B5                     	ds	2
  3336  0000B7                     efgtoa@nmode:
  3337                           	callstack 0
  3338                           
  3339                           ; 1 bytes @ 0x57
  3340  0000B7                     	ds	1
  3341  0000B8                     efgtoa@w:
  3342                           	callstack 0
  3343                           
  3344                           ; 2 bytes @ 0x58
  3345  0000B8                     	ds	2
  3346  0000BA                     efgtoa@mode:
  3347                           	callstack 0
  3348                           
  3349                           ; 1 bytes @ 0x5A
  3350  0000BA                     	ds	1
  3351  0000BB                     efgtoa@h:
  3352                           	callstack 0
  3353                           
  3354                           ; 4 bytes @ 0x5B
  3355  0000BB                     	ds	4
  3356  0000BF                     efgtoa@l:
  3357                           	callstack 0
  3358                           
  3359                           ; 4 bytes @ 0x5F
  3360  0000BF                     	ds	4
  3361  0000C3                     efgtoa@g:
  3362                           	callstack 0
  3363                           
  3364                           ; 4 bytes @ 0x63
  3365  0000C3                     	ds	4
  3366  0000C7                     efgtoa@i:
  3367                           	callstack 0
  3368                           
  3369                           ; 2 bytes @ 0x67
  3370  0000C7                     	ds	2
  3371  0000C9                     efgtoa@e:
  3372                           	callstack 0
  3373                           
  3374                           ; 2 bytes @ 0x69
  3375  0000C9                     	ds	2
  3376  0000CB                     efgtoa@n:
  3377                           	callstack 0
  3378                           
  3379                           ; 2 bytes @ 0x6B
  3380  0000CB                     	ds	2
  3381  0000CD                     efgtoa@u:
  3382                           	callstack 0
  3383                           
  3384                           ; 4 bytes @ 0x6D
  3385  0000CD                     	ds	4
  3386  0000D1                     ?_vfpfcnvrt:
  3387                           	callstack 0
  3388  0000D1                     vfpfcnvrt@fp:
  3389                           	callstack 0
  3390                           
  3391                           ; 2 bytes @ 0x71
  3392  0000D1                     	ds	2
  3393  0000D3                     vfpfcnvrt@fmt:
  3394                           	callstack 0
  3395                           
  3396                           ; 1 bytes @ 0x73
  3397  0000D3                     	ds	1
  3398  0000D4                     vfpfcnvrt@ap:
  3399                           	callstack 0
  3400                           
  3401                           ; 2 bytes @ 0x74
  3402  0000D4                     	ds	2
  3403  0000D6                     ??_vfpfcnvrt:
  3404                           
  3405                           ; 1 bytes @ 0x76
  3406  0000D6                     	ds	4
  3407  0000DA                     vfpfcnvrt@llu:
  3408                           	callstack 0
  3409                           
  3410                           ; 8 bytes @ 0x7A
  3411  0000DA                     	ds	8
  3412  0000E2                     vfpfcnvrt@cp:
  3413                           	callstack 0
  3414                           
  3415                           ; 2 bytes @ 0x82
  3416  0000E2                     	ds	2
  3417  0000E4                     vfpfcnvrt@done:
  3418                           	callstack 0
  3419                           
  3420                           ; 2 bytes @ 0x84
  3421  0000E4                     	ds	2
  3422  0000E6                     _vfpfcnvrt$4219:
  3423                           	callstack 0
  3424                           
  3425                           ; 2 bytes @ 0x86
  3426  0000E6                     	ds	2
  3427  0000E8                     vfpfcnvrt@c:
  3428                           	callstack 0
  3429                           
  3430                           ; 1 bytes @ 0x88
  3431  0000E8                     	ds	1
  3432  0000E9                     vfpfcnvrt@ct:
  3433                           	callstack 0
  3434                           
  3435                           ; 3 bytes @ 0x89
  3436  0000E9                     	ds	3
  3437  0000EC                     vfpfcnvrt@f:
  3438                           	callstack 0
  3439                           
  3440                           ; 4 bytes @ 0x8C
  3441  0000EC                     	ds	4
  3442  0000F0                     vfprintf@cfmt:
  3443                           	callstack 0
  3444                           
  3445                           ; 2 bytes @ 0x90
  3446  0000F0                     	ds	2
  3447  0000F2                     printf@ap:
  3448                           	callstack 0
  3449                           
  3450                           ; 2 bytes @ 0x92
  3451  0000F2                     	ds	2
  3452                           
  3453                           	psect	cstackCOMRAM
  3454  000001                     __pcstackCOMRAM:
  3455                           	callstack 0
  3456  000001                     ?_ADCC_GetConversionResult:
  3457                           	callstack 0
  3458                           
  3459                           ; 2 bytes @ 0x0
  3460  000001                     	ds	2
  3461  000003                     ??_ADCC_GetConversionResult:
  3462                           
  3463                           ; 1 bytes @ 0x2
  3464  000003                     	ds	2
  3465  000005                     ??_Adc_Isr:
  3466                           
  3467                           ; 1 bytes @ 0x4
  3468  000005                     	ds	4
  3469  000009                     ??_ADCC_ISR:
  3470                           
  3471                           ; 1 bytes @ 0x8
  3472  000009                     	ds	2
  3473  00000B                     ??_Led_Blink:
  3474                           
  3475                           ; 1 bytes @ 0xA
  3476  00000B                     	ds	1
  3477  00000C                     ??_TMR6_ISR:
  3478                           
  3479                           ; 1 bytes @ 0xB
  3480  00000C                     	ds	2
  3481  00000E                     TMR5_WriteTimer@timerVal:
  3482                           	callstack 0
  3483                           
  3484                           ; 2 bytes @ 0xD
  3485  00000E                     	ds	2
  3486  000010                     Timers_Isr@i:
  3487                           	callstack 0
  3488                           
  3489                           ; 2 bytes @ 0xF
  3490  000010                     	ds	2
  3491  000012                     ??_TMR5_ISR:
  3492                           
  3493                           ; 1 bytes @ 0x11
  3494  000012                     	ds	2
  3495  000014                     ??_DMA1_DMASCNTI_ISR:
  3496                           
  3497                           ; 1 bytes @ 0x13
  3498  000014                     	ds	2
  3499  000016                     ??_UART1_framing_err_vect_isr:
  3500                           
  3501                           ; 1 bytes @ 0x15
  3502  000016                     	ds	2
  3503  000018                     ??_UART1_vect_isr:
  3504                           
  3505                           ; 1 bytes @ 0x17
  3506  000018                     	ds	2
  3507  00001A                     ??_UART1_tx_vect_isr:
  3508                           
  3509                           ; 1 bytes @ 0x19
  3510  00001A                     	ds	3
  3511  00001D                     ??_UART1_rx_vect_isr:
  3512                           
  3513                           ; 1 bytes @ 0x1C
  3514  00001D                     	ds	3
  3515  000020                     ??_ringBufS_put_dma:
  3516  000020                     DAC1_SetOutput@inputData:
  3517                           	callstack 0
  3518  000020                     INTERRUPT_Initialize@state:
  3519                           	callstack 0
  3520  000020                     SPI1_ExchangeByte@data:
  3521                           	callstack 0
  3522  000020                     UART1_Read@readValue:
  3523                           	callstack 0
  3524  000020                     UART1_Write@txData:
  3525                           	callstack 0
  3526  000020                     DATAEE_WriteByte@GIEBitValue:
  3527                           	callstack 0
  3528  000020                     StartTimer@timer:
  3529                           	callstack 0
  3530  000020                     TimerDone@timer:
  3531                           	callstack 0
  3532  000020                     display_led@led:
  3533                           	callstack 0
  3534  000020                     ___lomod@counter:
  3535                           	callstack 0
  3536  000020                     _isspace$4284:
  3537                           	callstack 0
  3538                           
  3539                           ; 1 bytes @ 0x1F
  3540  000020                     	ds	1
  3541  000021                     
  3542                           ; 1 bytes @ 0x20
  3543 ;;
  3544 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3545 ;;
  3546 ;; *************** function _main *****************
  3547 ;; Defined at:
  3548 ;;		line 218 in file "main.c"
  3549 ;; Parameters:    Size  Location     Type
  3550 ;;		None
  3551 ;; Auto vars:     Size  Location     Type
  3552 ;;  i               1   34[BANK1 ] unsigned char 
  3553 ;;  lcd_update      1   33[BANK1 ] unsigned char 
  3554 ;; Return value:  Size  Location     Type
  3555 ;;                  1    wreg      void 
  3556 ;; Registers used:
  3557 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  3558 ;; Tracked objects:
  3559 ;;		On entry : 0/0
  3560 ;;		On exit  : 3F/0
  3561 ;;		Unchanged: 0/0
  3562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3564 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3565 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3566 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3567 ;;Total ram usage:        4 bytes
  3568 ;; Hardware stack levels required when called: 16
  3569 ;; This function calls:
  3570 ;;		_ADCC_SetADIInterruptHandler
  3571 ;;		_DAC1_GetOutput
  3572 ;;		_DAC1_SetOutput
  3573 ;;		_DATAEE_ReadByte
  3574 ;;		_DATAEE_WriteByte
  3575 ;;		_DMA1_SetSCNTIInterruptHandler
  3576 ;;		_PWM5_LoadDutyValue
  3577 ;;		_PWM6_LoadDutyValue
  3578 ;;		_SYSTEM_Initialize
  3579 ;;		_TMR5_SetInterruptHandler
  3580 ;;		_TMR6_SetInterruptHandler
  3581 ;;		_WaitMs
  3582 ;;		___flmul
  3583 ;;		___xxtofl
  3584 ;;		_cli_read
  3585 ;;		_display_led
  3586 ;;		_eaDogM_WriteCommand
  3587 ;;		_eaDogM_WriteStringAtPos
  3588 ;;		_init_display
  3589 ;;		_linux_getc
  3590 ;;		_printf
  3591 ;;		_puts
  3592 ;;		_scmd_init
  3593 ;;		_sprintf
  3594 ;; This function is called by:
  3595 ;;		Startup code after reset
  3596 ;; This function uses a non-reentrant model
  3597 ;;
  3598                           
  3599                           	psect	text0
  3600  0110A4                     __ptext0:
  3601                           	callstack 0
  3602  0110A4                     _main:
  3603                           	callstack 15
  3604                           
  3605                           ;main.c: 220:  uint8_t lcd_update = 0, i = 0;
  3606                           
  3607                           ;incstack = 0
  3608  0110A4  0E00               	movlw	0
  3609  0110A6  0101               	movlb	1	; () banked
  3610  0110A8  6FBE               	movwf	main@lcd_update& (0+255),b
  3611  0110AA  0E00               	movlw	0
  3612  0110AC  6FBF               	movwf	main@i& (0+255),b
  3613                           
  3614                           ; BSR set to: 1
  3615                           ;main.c: 223:  SYSTEM_Initialize();
  3616  0110AE  EC92  F0A3         	call	_SYSTEM_Initialize	;wreg free
  3617                           
  3618                           ; BSR set to: 57
  3619  0110B2  92BD               	bcf	189,1,c	;volatile
  3620                           
  3621                           ; BSR set to: 57
  3622  0110B4  94BE               	bcf	190,2,c	;volatile
  3623                           
  3624                           ; BSR set to: 57
  3625                           ;main.c: 227:  TMR6_SetInterruptHandler(Led_Blink);
  3626  0110B6  0E20               	movlw	low _Led_Blink
  3627  0110B8  0100               	movlb	0	; () banked
  3628  0110BA  6F60               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
  3629  0110BC  0E4C               	movlw	high _Led_Blink
  3630  0110BE  6F61               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3631  0110C0  0E01               	movlw	low (_Led_Blink shr (0+16))
  3632  0110C2  6F62               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  3633  0110C4  EC40  F0A7         	call	_TMR6_SetInterruptHandler	;wreg free
  3634                           
  3635                           ; BSR set to: 0
  3636                           ;main.c: 228:  TMR5_SetInterruptHandler(Timers_Isr);
  3637  0110C8  0EA0               	movlw	low _Timers_Isr
  3638  0110CA  6F60               	movwf	TMR5_SetInterruptHandler@InterruptHandler& (0+255),b
  3639  0110CC  0E41               	movlw	high _Timers_Isr
  3640  0110CE  6F61               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3641  0110D0  0E01               	movlw	low (_Timers_Isr shr (0+16))
  3642  0110D2  6F62               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  3643  0110D4  EC47  F0A7         	call	_TMR5_SetInterruptHandler	;wreg free
  3644                           
  3645                           ; BSR set to: 0
  3646                           ;main.c: 229:  ADCC_SetADIInterruptHandler(Adc_Isr);
  3647  0110D8  0E0A               	movlw	low _Adc_Isr
  3648  0110DA  6F60               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler& (0+255),b
  3649  0110DC  0E33               	movlw	high _Adc_Isr
  3650  0110DE  6F61               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)& (0+255),b
  3651  0110E0  0E01               	movlw	low (_Adc_Isr shr (0+16))
  3652  0110E2  6F62               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+2)& (0+255),b
  3653  0110E4  EC5C  F0A7         	call	_ADCC_SetADIInterruptHandler	;wreg free
  3654                           
  3655                           ;main.c: 230:  ADPCH = PS_V_ANA;
  3656  0110E8  0E00               	movlw	0
  3657  0110EA  013E               	movlb	62	; () banked
  3658  0110EC  6FF1               	movwf	241,b	;volatile
  3659                           
  3660                           ; BSR set to: 62
  3661                           ;main.c: 231:  PWM5_LoadDutyValue(0);
  3662  0110EE  0E00               	movlw	0
  3663  0110F0  0100               	movlb	0	; () banked
  3664  0110F2  6F61               	movwf	(PWM5_LoadDutyValue@dutyValue+1)& (0+255),b
  3665  0110F4  0E00               	movlw	0
  3666  0110F6  6F60               	movwf	PWM5_LoadDutyValue@dutyValue& (0+255),b
  3667  0110F8  ECAE  F0A4         	call	_PWM5_LoadDutyValue	;wreg free
  3668                           
  3669                           ; BSR set to: 0
  3670                           ;main.c: 232:  PWM6_LoadDutyValue(0);
  3671  0110FC  0E00               	movlw	0
  3672  0110FE  6F61               	movwf	(PWM6_LoadDutyValue@dutyValue+1)& (0+255),b
  3673  011100  0E00               	movlw	0
  3674  011102  6F60               	movwf	PWM6_LoadDutyValue@dutyValue& (0+255),b
  3675  011104  EC95  F0A4         	call	_PWM6_LoadDutyValue	;wreg free
  3676                           
  3677                           ; BSR set to: 0
  3678                           ;main.c: 233:  DMA1_SetSCNTIInterruptHandler(source_dma_done);
  3679  011108  0E1A               	movlw	low _source_dma_done
  3680  01110A  6F60               	movwf	DMA1_SetSCNTIInterruptHandler@InterruptHandler& (0+255),b
  3681  01110C  0E4F               	movlw	high _source_dma_done
  3682  01110E  6F61               	movwf	(DMA1_SetSCNTIInterruptHandler@InterruptHandler+1)& (0+255),b
  3683  011110  0E01               	movlw	low (_source_dma_done shr (0+16))
  3684  011112  6F62               	movwf	(DMA1_SetSCNTIInterruptHandler@InterruptHandler+2)& (0+255),b
  3685  011114  EC55  F0A7         	call	_DMA1_SetSCNTIInterruptHandler	;wreg free
  3686                           
  3687                           ; BSR set to: 0
  3688                           ;main.c: 236:  (INTCON0bits.GIEH = 1);
  3689  011118  8ED2               	bsf	210,7,c	;volatile
  3690                           
  3691                           ; BSR set to: 0
  3692                           ;main.c: 239:  (INTCON0bits.GIEL = 1);
  3693  01111A  8CD2               	bsf	210,6,c	;volatile
  3694                           
  3695                           ; BSR set to: 0
  3696                           ;main.c: 241:  DAC1_SetOutput(dac_v);
  3697  01111C  51FA               	movf	_dac_v& (0+255),w,b
  3698  01111E  EC75  F0A7         	call	_DAC1_SetOutput
  3699                           
  3700                           ;main.c: 243:  init_display();
  3701  011122  EC95  F09B         	call	_init_display	;wreg free
  3702                           
  3703                           ; BSR set to: 61
  3704                           ;main.c: 244:  eaDogM_WriteCommand(0b00001100);
  3705  011126  0E0C               	movlw	12
  3706  011128  ECF3  F0A6         	call	_eaDogM_WriteCommand
  3707  01112C                     l13725:
  3708  01112C  0EBF               	movlw	low main@i
  3709  01112E  0100               	movlb	0	; () banked
  3710  011130  6F60               	movwf	linux_getc@a_data& (0+255),b
  3711  011132  0E01               	movlw	high main@i
  3712  011134  6F61               	movwf	(linux_getc@a_data+1)& (0+255),b
  3713  011136  EC74  F0A5         	call	_linux_getc	;wreg free
  3714  01113A  0900               	iorlw	0
  3715  01113C  A4D8               	btfss	status,2,c
  3716  01113E  D7F6               	goto	l13725
  3717                           
  3718                           ;main.c: 249:  scmd_init();
  3719  011140  EC91  F0A6         	call	_scmd_init	;wreg free
  3720                           
  3721                           ; BSR set to: 0
  3722                           ;main.c: 250:  sprintf(buff1, "\r\n Build %s %s\r\n", build_date, build_time);
  3723  011144  0E00               	movlw	low _buff1
  3724  011146  0101               	movlb	1	; () banked
  3725  011148  6FA3               	movwf	sprintf@s& (0+255),b
  3726  01114A  0E04               	movlw	high _buff1
  3727  01114C  6FA4               	movwf	(sprintf@s+1)& (0+255),b
  3728  01114E  0EA1               	movlw	low STR_12
  3729  011150  6FA5               	movwf	sprintf@fmt& (0+255),b
  3730  011152  0EFF               	movlw	high STR_12
  3731  011154  6FA6               	movwf	(sprintf@fmt+1)& (0+255),b
  3732  011156  0EB2               	movlw	low STR_1
  3733  011158  6FA7               	movwf	(?_sprintf+4)& (0+255),b
  3734  01115A  0EFF               	movlw	high STR_1
  3735  01115C  6FA8               	movwf	(?_sprintf+5)& (0+255),b
  3736  01115E  0EBE               	movlw	low STR_2
  3737  011160  6FA9               	movwf	(?_sprintf+6)& (0+255),b
  3738  011162  0EFF               	movlw	high STR_2
  3739  011164  6FAA               	movwf	(?_sprintf+7)& (0+255),b
  3740  011166  EC21  F0A1         	call	_sprintf	;wreg free
  3741                           
  3742                           ; BSR set to: 1
  3743                           ;main.c: 251:  puts(buff1);
  3744  01116A  0E00               	movlw	low _buff1
  3745  01116C  0100               	movlb	0	; () banked
  3746  01116E  6F73               	movwf	puts@s& (0+255),b
  3747  011170  0E04               	movlw	high _buff1
  3748  011172  6F74               	movwf	(puts@s+1)& (0+255),b
  3749  011174  EC29  F0A4         	call	_puts	;wreg free
  3750                           
  3751                           ; BSR set to: 0
  3752                           ;main.c: 252:  WaitMs(300);
  3753  011178  0E01               	movlw	1
  3754  01117A  6F65               	movwf	(WaitMs@numMilliseconds+1)& (0+255),b
  3755  01117C  0E2C               	movlw	44
  3756  01117E  6F64               	movwf	WaitMs@numMilliseconds& (0+255),b
  3757  011180  EC4E  F0A5         	call	_WaitMs	;wreg free
  3758                           
  3759                           ;main.c: 253:  sprintf(buff1, "%s %s", build_date, build_time);
  3760  011184  0E00               	movlw	low _buff1
  3761  011186  0101               	movlb	1	; () banked
  3762  011188  6FA3               	movwf	sprintf@s& (0+255),b
  3763  01118A  0E04               	movlw	high _buff1
  3764  01118C  6FA4               	movwf	(sprintf@s+1)& (0+255),b
  3765  01118E  0EC7               	movlw	low STR_13
  3766  011190  6FA5               	movwf	sprintf@fmt& (0+255),b
  3767  011192  0EFF               	movlw	high STR_13
  3768  011194  6FA6               	movwf	(sprintf@fmt+1)& (0+255),b
  3769  011196  0EB2               	movlw	low STR_1
  3770  011198  6FA7               	movwf	(?_sprintf+4)& (0+255),b
  3771  01119A  0EFF               	movlw	high STR_1
  3772  01119C  6FA8               	movwf	(?_sprintf+5)& (0+255),b
  3773  01119E  0EBE               	movlw	low STR_2
  3774  0111A0  6FA9               	movwf	(?_sprintf+6)& (0+255),b
  3775  0111A2  0EFF               	movlw	high STR_2
  3776  0111A4  6FAA               	movwf	(?_sprintf+7)& (0+255),b
  3777  0111A6  EC21  F0A1         	call	_sprintf	;wreg free
  3778                           
  3779                           ; BSR set to: 1
  3780                           ;main.c: 254:  eaDogM_WriteStringAtPos(0, 0, buff1);
  3781  0111AA  0E00               	movlw	0
  3782  0111AC  0100               	movlb	0	; () banked
  3783  0111AE  6F73               	movwf	eaDogM_WriteStringAtPos@c& (0+255),b
  3784  0111B0  0E00               	movlw	low _buff1
  3785  0111B2  6F74               	movwf	eaDogM_WriteStringAtPos@strPtr& (0+255),b
  3786  0111B4  0E04               	movlw	high _buff1
  3787  0111B6  6F75               	movwf	(eaDogM_WriteStringAtPos@strPtr+1)& (0+255),b
  3788  0111B8  0E00               	movlw	0
  3789  0111BA  EC63  F09F         	call	_eaDogM_WriteStringAtPos
  3790                           
  3791                           ; BSR set to: 59
  3792                           ;main.c: 255:  sprintf(buff1, "%s", build_version);
  3793  0111BE  0E00               	movlw	low _buff1
  3794  0111C0  0101               	movlb	1	; () banked
  3795  0111C2  6FA3               	movwf	sprintf@s& (0+255),b
  3796  0111C4  0E04               	movlw	high _buff1
  3797  0111C6  6FA4               	movwf	(sprintf@s+1)& (0+255),b
  3798  0111C8  0ECA               	movlw	low (STR_13+3)
  3799  0111CA  6FA5               	movwf	sprintf@fmt& (0+255),b
  3800  0111CC  0EFF               	movlw	high (STR_13+3)
  3801  0111CE  6FA6               	movwf	(sprintf@fmt+1)& (0+255),b
  3802  0111D0  0E18               	movlw	low _build_version
  3803  0111D2  6FA7               	movwf	(?_sprintf+4)& (0+255),b
  3804  0111D4  0EFE               	movlw	high _build_version
  3805  0111D6  6FA8               	movwf	(?_sprintf+5)& (0+255),b
  3806  0111D8  EC21  F0A1         	call	_sprintf	;wreg free
  3807                           
  3808                           ; BSR set to: 1
  3809                           ;main.c: 256:  eaDogM_WriteStringAtPos(1, 0, buff1);
  3810  0111DC  0E00               	movlw	0
  3811  0111DE  0100               	movlb	0	; () banked
  3812  0111E0  6F73               	movwf	eaDogM_WriteStringAtPos@c& (0+255),b
  3813  0111E2  0E00               	movlw	low _buff1
  3814  0111E4  6F74               	movwf	eaDogM_WriteStringAtPos@strPtr& (0+255),b
  3815  0111E6  0E04               	movlw	high _buff1
  3816  0111E8  6F75               	movwf	(eaDogM_WriteStringAtPos@strPtr+1)& (0+255),b
  3817  0111EA  0E01               	movlw	1
  3818  0111EC  EC63  F09F         	call	_eaDogM_WriteStringAtPos
  3819                           
  3820                           ; BSR set to: 59
  3821                           ;main.c: 259:  if (DATAEE_ReadByte(0x00) != '1') {
  3822  0111F0  0E00               	movlw	0
  3823  0111F2  0100               	movlb	0	; () banked
  3824  0111F4  6F61               	movwf	(DATAEE_ReadByte@bAdd+1)& (0+255),b
  3825  0111F6  0E00               	movlw	0
  3826  0111F8  6F60               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
  3827  0111FA  EC4D  F0A6         	call	_DATAEE_ReadByte	;wreg free
  3828  0111FE  0A31               	xorlw	49
  3829  011200  B4D8               	btfsc	status,2,c
  3830  011202  D02E               	goto	l13747
  3831                           
  3832                           ; BSR set to: 57
  3833                           ;main.c: 260:   DATAEE_WriteByte(0x00, '1');
  3834  011204  0E00               	movlw	0
  3835  011206  0100               	movlb	0	; () banked
  3836  011208  6F61               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
  3837  01120A  0E00               	movlw	0
  3838  01120C  6F60               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
  3839  01120E  0E31               	movlw	49
  3840  011210  6F62               	movwf	DATAEE_WriteByte@bData& (0+255),b
  3841  011212  EC15  F0A3         	call	_DATAEE_WriteByte	;wreg free
  3842                           
  3843                           ;main.c: 261:   DATAEE_WriteByte(0x00 + 1, '9');
  3844  011216  0E00               	movlw	0
  3845  011218  0100               	movlb	0	; () banked
  3846  01121A  6F61               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
  3847  01121C  0E01               	movlw	1
  3848  01121E  6F60               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
  3849  011220  0E39               	movlw	57
  3850  011222  6F62               	movwf	DATAEE_WriteByte@bData& (0+255),b
  3851  011224  EC15  F0A3         	call	_DATAEE_WriteByte	;wreg free
  3852                           
  3853                           ;main.c: 262:   DATAEE_WriteByte(0x00 + 2, '5');
  3854  011228  0E00               	movlw	0
  3855  01122A  0100               	movlb	0	; () banked
  3856  01122C  6F61               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
  3857  01122E  0E02               	movlw	2
  3858  011230  6F60               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
  3859  011232  0E35               	movlw	53
  3860  011234  6F62               	movwf	DATAEE_WriteByte@bData& (0+255),b
  3861  011236  EC15  F0A3         	call	_DATAEE_WriteByte	;wreg free
  3862                           
  3863                           ;main.c: 263:   DATAEE_WriteByte(0x00 + 3, '7');
  3864  01123A  0E00               	movlw	0
  3865  01123C  0100               	movlb	0	; () banked
  3866  01123E  6F61               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
  3867  011240  0E03               	movlw	3
  3868  011242  6F60               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
  3869  011244  0E37               	movlw	55
  3870  011246  6F62               	movwf	DATAEE_WriteByte@bData& (0+255),b
  3871  011248  EC15  F0A3         	call	_DATAEE_WriteByte	;wreg free
  3872                           
  3873                           ;main.c: 264:   DATAEE_WriteByte(0x10, 0);
  3874  01124C  0E00               	movlw	0
  3875  01124E  0100               	movlb	0	; () banked
  3876  011250  6F61               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
  3877  011252  0E10               	movlw	16
  3878  011254  6F60               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
  3879  011256  0E00               	movlw	0
  3880  011258  6F62               	movwf	DATAEE_WriteByte@bData& (0+255),b
  3881  01125A  EC15  F0A3         	call	_DATAEE_WriteByte	;wreg free
  3882                           
  3883                           ;main.c: 265:  } else {
  3884  01125E  D008               	goto	l13749
  3885  011260                     l13747:
  3886                           
  3887                           ; BSR set to: 57
  3888                           ;main.c: 266:   ps_type_index = DATAEE_ReadByte(0x10);
  3889  011260  0E00               	movlw	0
  3890  011262  0100               	movlb	0	; () banked
  3891  011264  6F61               	movwf	(DATAEE_ReadByte@bAdd+1)& (0+255),b
  3892  011266  0E10               	movlw	16
  3893  011268  6F60               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
  3894  01126A  EC4D  F0A6         	call	_DATAEE_ReadByte	;wreg free
  3895  01126E  6E34               	movwf	_ps_type_index^0,c	;volatile
  3896  011270                     l13749:
  3897                           
  3898                           ;main.c: 269:  WaitMs(2000);
  3899  011270  0E07               	movlw	7
  3900  011272  0100               	movlb	0	; () banked
  3901  011274  6F65               	movwf	(WaitMs@numMilliseconds+1)& (0+255),b
  3902  011276  0ED0               	movlw	208
  3903  011278  6F64               	movwf	WaitMs@numMilliseconds& (0+255),b
  3904  01127A  EC4E  F0A5         	call	_WaitMs	;wreg free
  3905  01127E                     l13751:
  3906                           
  3907                           ;main.c: 272:   if (adc_tick) {
  3908  01127E  0100               	movlb	0	; () banked
  3909  011280  51FB               	movf	_adc_tick& (0+255),w,b	;volatile
  3910  011282  B4D8               	btfsc	status,2,c
  3911  011284  D7FC               	goto	l13751
  3912                           
  3913                           ; BSR set to: 0
  3914                           ;main.c: 273:    if (a[a_index].ana[PS_V_ANA] < 900) {
  3915  011286  5037               	movf	_a_index^0,w,c	;volatile
  3916  011288  0D7E               	mullw	126
  3917  01128A  0E83               	movlw	low _a
  3918  01128C  24F3               	addwf	243,w,c
  3919  01128E  6ED9               	movwf	fsr2l,c
  3920  011290  0E05               	movlw	high _a
  3921  011292  20F4               	addwfc	prodh,w,c
  3922  011294  6EDA               	movwf	fsr2h,c
  3923  011296  0E84               	movlw	132
  3924  011298  5CDE               	subwf	postinc2,w,c
  3925  01129A  0E03               	movlw	3
  3926  01129C  58DE               	subwfb	postinc2,w,c
  3927  01129E  B0D8               	btfsc	status,0,c
  3928  0112A0  D004               	goto	l13757
  3929                           
  3930                           ; BSR set to: 0
  3931                           ;main.c: 274:     display_led(oo00_off);
  3932  0112A2  0E00               	movlw	0
  3933  0112A4  EC53  F09C         	call	_display_led
  3934                           
  3935                           ;main.c: 275:    } else {
  3936  0112A8  D015               	goto	l13763
  3937  0112AA                     l13757:
  3938                           
  3939                           ; BSR set to: 0
  3940                           ;main.c: 276:     if (a[a_index].ana[PS_V_ANA] > 1800) {
  3941  0112AA  5037               	movf	_a_index^0,w,c	;volatile
  3942  0112AC  0D7E               	mullw	126
  3943  0112AE  0E83               	movlw	low _a
  3944  0112B0  24F3               	addwf	243,w,c
  3945  0112B2  6ED9               	movwf	fsr2l,c
  3946  0112B4  0E05               	movlw	high _a
  3947  0112B6  20F4               	addwfc	prodh,w,c
  3948  0112B8  6EDA               	movwf	fsr2h,c
  3949  0112BA  0E09               	movlw	9
  3950  0112BC  5CDE               	subwf	postinc2,w,c
  3951  0112BE  0E07               	movlw	7
  3952  0112C0  58DE               	subwfb	postinc2,w,c
  3953  0112C2  A0D8               	btfss	status,0,c
  3954  0112C4  D004               	goto	l13761
  3955                           
  3956                           ; BSR set to: 0
  3957                           ;main.c: 277:      display_led(oo00_g);
  3958  0112C6  0E01               	movlw	1
  3959  0112C8  EC53  F09C         	call	_display_led
  3960                           
  3961                           ;main.c: 278:     } else {
  3962  0112CC  D003               	goto	l13763
  3963  0112CE                     l13761:
  3964                           
  3965                           ; BSR set to: 0
  3966                           ;main.c: 279:      display_led(oo00_r);
  3967  0112CE  0E02               	movlw	2
  3968  0112D0  EC53  F09C         	call	_display_led
  3969  0112D4                     l13763:
  3970                           
  3971                           ; BSR set to: 0
  3972                           ;main.c: 283:    if (a[a_index].ana[PS_I_ANA] < 50) {
  3973  0112D4  5037               	movf	_a_index^0,w,c	;volatile
  3974  0112D6  0D7E               	mullw	126
  3975  0112D8  0E85               	movlw	low (_a+2)
  3976  0112DA  24F3               	addwf	243,w,c
  3977  0112DC  6ED9               	movwf	fsr2l,c
  3978  0112DE  0E05               	movlw	high (_a+2)
  3979  0112E0  20F4               	addwfc	prodh,w,c
  3980  0112E2  6EDA               	movwf	fsr2h,c
  3981  0112E4  0E01               	movlw	1
  3982  0112E6  50DB               	movf	plusw2,w,c
  3983  0112E8  E108               	bnz	l13767
  3984  0112EA  0E32               	movlw	50
  3985  0112EC  5CDE               	subwf	postinc2,w,c
  3986  0112EE  B0D8               	btfsc	status,0,c
  3987  0112F0  D004               	goto	l13767
  3988                           
  3989                           ; BSR set to: 0
  3990                           ;main.c: 284:     display_led(oo10_off);
  3991  0112F2  0E03               	movlw	3
  3992  0112F4  EC53  F09C         	call	_display_led
  3993                           
  3994                           ;main.c: 285:    } else {
  3995  0112F8  D016               	goto	l13773
  3996  0112FA                     l13767:
  3997                           
  3998                           ; BSR set to: 0
  3999                           ;main.c: 286:     if (a[a_index].ana[PS_I_ANA] > 150) {
  4000  0112FA  5037               	movf	_a_index^0,w,c	;volatile
  4001  0112FC  0D7E               	mullw	126
  4002  0112FE  0E85               	movlw	low (_a+2)
  4003  011300  24F3               	addwf	243,w,c
  4004  011302  6ED9               	movwf	fsr2l,c
  4005  011304  0E05               	movlw	high (_a+2)
  4006  011306  20F4               	addwfc	prodh,w,c
  4007  011308  6EDA               	movwf	fsr2h,c
  4008  01130A  0E01               	movlw	1
  4009  01130C  50DB               	movf	plusw2,w,c
  4010  01130E  E104               	bnz	u13640
  4011  011310  0E97               	movlw	151
  4012  011312  5CDE               	subwf	postinc2,w,c
  4013  011314  A0D8               	btfss	status,0,c
  4014  011316  D004               	goto	l13771
  4015  011318                     u13640:
  4016                           
  4017                           ; BSR set to: 0
  4018                           ;main.c: 287:      display_led(oo10_g);
  4019  011318  0E04               	movlw	4
  4020  01131A  EC53  F09C         	call	_display_led
  4021                           
  4022                           ;main.c: 288:     } else {
  4023  01131E  D003               	goto	l13773
  4024  011320                     l13771:
  4025                           
  4026                           ; BSR set to: 0
  4027                           ;main.c: 289:      display_led(oo10_r);
  4028  011320  0E05               	movlw	5
  4029  011322  EC53  F09C         	call	_display_led
  4030  011326                     l13773:
  4031                           
  4032                           ; BSR set to: 0
  4033                           ;main.c: 292:    adc_tick = 0;
  4034  011326  0E00               	movlw	0
  4035  011328  6FFB               	movwf	_adc_tick& (0+255),b	;volatile
  4036                           
  4037                           ; BSR set to: 0
  4038                           ;main.c: 294:    if (!PORTAbits.RA6) {
  4039  01132A  BCCA               	btfsc	202,6,c	;volatile
  4040  01132C  D004               	goto	l13779
  4041                           
  4042                           ; BSR set to: 0
  4043                           ;main.c: 295:     display_led(oo30_r);
  4044  01132E  0E0B               	movlw	11
  4045  011330  EC53  F09C         	call	_display_led
  4046                           
  4047                           ;main.c: 296:    } else {
  4048  011334  D003               	goto	l13781
  4049  011336                     l13779:
  4050                           
  4051                           ; BSR set to: 0
  4052                           ;main.c: 297:     display_led(oo30_off);
  4053  011336  0E09               	movlw	9
  4054  011338  EC53  F09C         	call	_display_led
  4055  01133C                     l13781:
  4056                           
  4057                           ; BSR set to: 0
  4058                           ;main.c: 301:    if (!PORTAbits.RA4) {
  4059  01133C  B8CA               	btfsc	202,4,c	;volatile
  4060  01133E  D004               	goto	l13785
  4061                           
  4062                           ; BSR set to: 0
  4063                           ;main.c: 302:     display_led(oo20_g);
  4064  011340  0E07               	movlw	7
  4065  011342  EC53  F09C         	call	_display_led
  4066                           
  4067                           ;main.c: 303:    } else {
  4068  011346  D003               	goto	l13787
  4069  011348                     l13785:
  4070                           
  4071                           ; BSR set to: 0
  4072                           ;main.c: 304:     display_led(oo20_off);
  4073  011348  0E06               	movlw	6
  4074  01134A  EC53  F09C         	call	_display_led
  4075  01134E                     l13787:
  4076                           
  4077                           ; BSR set to: 0
  4078                           ;main.c: 307:    if (disp_tick) {
  4079  01134E  51FC               	movf	_disp_tick& (0+255),w,b	;volatile
  4080  011350  B4D8               	btfsc	status,2,c
  4081  011352  D795               	goto	l13751
  4082                           
  4083                           ; BSR set to: 0
  4084                           ;main.c: 308:     ps_type_ptr = &ps_type[ps_type_index];
  4085  011354  5034               	movf	_ps_type_index^0,w,c	;volatile
  4086  011356  0D08               	mullw	8
  4087  011358  0EB2               	movlw	low _ps_type
  4088  01135A  24F3               	addwf	243,w,c
  4089  01135C  6E3F               	movwf	_ps_type_ptr^0,c
  4090  01135E  0E02               	movlw	high _ps_type
  4091  011360  20F4               	addwfc	prodh,w,c
  4092  011362  6E40               	movwf	(_ps_type_ptr+1)^0,c
  4093                           
  4094                           ; BSR set to: 0
  4095                           ;main.c: 309:     vval = (double) a[a_index].ana[PS_V_ANA] * ps_type_ptr->v_scale;
  4096  011364  5037               	movf	_a_index^0,w,c	;volatile
  4097  011366  0D7E               	mullw	126
  4098  011368  0E83               	movlw	low _a
  4099  01136A  24F3               	addwf	243,w,c
  4100  01136C  6ED9               	movwf	fsr2l,c
  4101  01136E  0E05               	movlw	high _a
  4102  011370  20F4               	addwfc	prodh,w,c
  4103  011372  6EDA               	movwf	fsr2h,c
  4104  011374  006F FF78  F1BC    	movff	postinc2,??_main
  4105  01137A  006F FF74  F1BD    	movff	postdec2,??_main+1
  4106  011380  C1BC  F060         	movff	??_main,___xxtofl@val
  4107  011384  C1BD  F061         	movff	??_main+1,___xxtofl@val+1
  4108  011388  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
  4109  01138A  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
  4110  01138C  0E00               	movlw	0
  4111  01138E  EC3B  F097         	call	___xxtofl
  4112  011392  C060  F06E         	movff	?___xxtofl,___flmul@b
  4113  011396  C061  F06F         	movff	?___xxtofl+1,___flmul@b+1
  4114  01139A  C062  F070         	movff	?___xxtofl+2,___flmul@b+2
  4115  01139E  C063  F071         	movff	?___xxtofl+3,___flmul@b+3
  4116  0113A2  0060  F0FF  FFD9   	movff	_ps_type_ptr,fsr2l
  4117  0113A8  0060  F103  FFDA   	movff	_ps_type_ptr+1,fsr2h
  4118  0113AE  006F FF78  F072    	movff	postinc2,___flmul@a
  4119  0113B4  006F FF78  F073    	movff	postinc2,___flmul@a+1
  4120  0113BA  006F FF78  F074    	movff	postinc2,___flmul@a+2
  4121  0113C0  006F FF78  F075    	movff	postinc2,___flmul@a+3
  4122  0113C6  EC96  F08D         	call	___flmul	;wreg free
  4123  0113CA  C06E  F128         	movff	?___flmul,_vval
  4124  0113CE  C06F  F129         	movff	?___flmul+1,_vval+1
  4125  0113D2  C070  F12A         	movff	?___flmul+2,_vval+2
  4126  0113D6  C071  F12B         	movff	?___flmul+3,_vval+3
  4127                           
  4128                           ; BSR set to: 0
  4129                           ;main.c: 310:     ival = (double) a[a_index].ana[PS_I_ANA] * ps_type_ptr->i_scale;
  4130  0113DA  5037               	movf	_a_index^0,w,c	;volatile
  4131  0113DC  0D7E               	mullw	126
  4132  0113DE  0E85               	movlw	low (_a+2)
  4133  0113E0  24F3               	addwf	243,w,c
  4134  0113E2  6ED9               	movwf	fsr2l,c
  4135  0113E4  0E05               	movlw	high (_a+2)
  4136  0113E6  20F4               	addwfc	prodh,w,c
  4137  0113E8  6EDA               	movwf	fsr2h,c
  4138  0113EA  006F FF78  F1BC    	movff	postinc2,??_main
  4139  0113F0  006F FF74  F1BD    	movff	postdec2,??_main+1
  4140  0113F6  C1BC  F060         	movff	??_main,___xxtofl@val
  4141  0113FA  C1BD  F061         	movff	??_main+1,___xxtofl@val+1
  4142  0113FE  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
  4143  011400  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
  4144  011402  0E00               	movlw	0
  4145  011404  EC3B  F097         	call	___xxtofl
  4146  011408  C060  F06E         	movff	?___xxtofl,___flmul@b
  4147  01140C  C061  F06F         	movff	?___xxtofl+1,___flmul@b+1
  4148  011410  C062  F070         	movff	?___xxtofl+2,___flmul@b+2
  4149  011414  C063  F071         	movff	?___xxtofl+3,___flmul@b+3
  4150  011418  EE20 F004          	lfsr	2,4
  4151  01141C  503F               	movf	_ps_type_ptr^0,w,c
  4152  01141E  26D9               	addwf	fsr2l,f,c
  4153  011420  5040               	movf	(_ps_type_ptr+1)^0,w,c
  4154  011422  22DA               	addwfc	fsr2h,f,c
  4155  011424  006F FF78  F072    	movff	postinc2,___flmul@a
  4156  01142A  006F FF78  F073    	movff	postinc2,___flmul@a+1
  4157  011430  006F FF78  F074    	movff	postinc2,___flmul@a+2
  4158  011436  006F FF78  F075    	movff	postinc2,___flmul@a+3
  4159  01143C  EC96  F08D         	call	___flmul	;wreg free
  4160  011440  C06E  F124         	movff	?___flmul,_ival
  4161  011444  C06F  F125         	movff	?___flmul+1,_ival+1
  4162  011448  C070  F126         	movff	?___flmul+2,_ival+2
  4163  01144C  C071  F127         	movff	?___flmul+3,_ival+3
  4164                           
  4165                           ; BSR set to: 0
  4166                           ;main.c: 311:     printf(" PS TYPE %1u: PS Test %1u: DAC OUT %4.4umV B=%.2u, Supply Read
      +                          Back %4.4umV V=%+6.1fV %4.4umV I=%+3.1fmA \r\n",
  4167  011450  0E26               	movlw	low STR_15
  4168  011452  0101               	movlb	1	; () banked
  4169  011454  6FA3               	movwf	printf@fmt& (0+255),b
  4170  011456  0EFE               	movlw	high STR_15
  4171  011458  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4172  01145A  C034  F1A5         	movff	_ps_type_index,?_printf+2	;volatile
  4173  01145E  6BA6               	clrf	(?_printf+3)& (0+255),b
  4174  011460  C035  F1A7         	movff	_mode,?_printf+4
  4175  011464  6BA8               	clrf	(?_printf+5)& (0+255),b
  4176  011466  5037               	movf	_a_index^0,w,c	;volatile
  4177  011468  0D7E               	mullw	126
  4178  01146A  0EFD               	movlw	low (_a+122)
  4179  01146C  24F3               	addwf	243,w,c
  4180  01146E  6ED9               	movwf	fsr2l,c
  4181  011470  0E05               	movlw	high (_a+122)
  4182  011472  20F4               	addwfc	prodh,w,c
  4183  011474  6EDA               	movwf	fsr2h,c
  4184  011476  006F FF78  F1A9    	movff	postinc2,?_printf+6
  4185  01147C  006F FF74  F1AA    	movff	postdec2,?_printf+7
  4186  011482  EC84  F0A7         	call	_DAC1_GetOutput	;wreg free
  4187  011486  0101               	movlb	1	; () banked
  4188  011488  6FBC               	movwf	??_main& (0+255),b
  4189  01148A  51BC               	movf	??_main& (0+255),w,b
  4190  01148C  6FAB               	movwf	(?_printf+8)& (0+255),b
  4191  01148E  6BAC               	clrf	(?_printf+9)& (0+255),b
  4192  011490  5037               	movf	_a_index^0,w,c	;volatile
  4193  011492  0D7E               	mullw	126
  4194  011494  0E83               	movlw	low _a
  4195  011496  24F3               	addwf	243,w,c
  4196  011498  6ED9               	movwf	fsr2l,c
  4197  01149A  0E05               	movlw	high _a
  4198  01149C  20F4               	addwfc	prodh,w,c
  4199  01149E  6EDA               	movwf	fsr2h,c
  4200  0114A0  006F FF78  F1AD    	movff	postinc2,?_printf+10
  4201  0114A6  006F FF74  F1AE    	movff	postdec2,?_printf+11
  4202  0114AC  C128  F1AF         	movff	_vval,?_printf+12
  4203  0114B0  C129  F1B0         	movff	_vval+1,?_printf+13
  4204  0114B4  C12A  F1B1         	movff	_vval+2,?_printf+14
  4205  0114B8  C12B  F1B2         	movff	_vval+3,?_printf+15
  4206  0114BC  5037               	movf	_a_index^0,w,c	;volatile
  4207  0114BE  0D7E               	mullw	126
  4208  0114C0  0E85               	movlw	low (_a+2)
  4209  0114C2  24F3               	addwf	243,w,c
  4210  0114C4  6ED9               	movwf	fsr2l,c
  4211  0114C6  0E05               	movlw	high (_a+2)
  4212  0114C8  20F4               	addwfc	prodh,w,c
  4213  0114CA  6EDA               	movwf	fsr2h,c
  4214  0114CC  006F FF78  F1B3    	movff	postinc2,?_printf+16
  4215  0114D2  006F FF74  F1B4    	movff	postdec2,?_printf+17
  4216  0114D8  C124  F1B5         	movff	_ival,?_printf+18
  4217  0114DC  C125  F1B6         	movff	_ival+1,?_printf+19
  4218  0114E0  C126  F1B7         	movff	_ival+2,?_printf+20
  4219  0114E4  C127  F1B8         	movff	_ival+3,?_printf+21
  4220  0114E8  EC3A  F0A5         	call	_printf	;wreg free
  4221                           
  4222                           ; BSR set to: 1
  4223                           ;main.c: 313:     if (!(lcd_update++ & 0x03)) {
  4224  0114EC  2BBE               	incf	main@lcd_update& (0+255),f,b
  4225  0114EE  05BE               	decf	main@lcd_update& (0+255),w,b
  4226  0114F0  6FBC               	movwf	??_main& (0+255),b
  4227  0114F2  0E03               	movlw	3
  4228  0114F4  17BC               	andwf	??_main& (0+255),f,b
  4229  0114F6  A4D8               	btfss	status,2,c
  4230  0114F8  D0ED               	goto	l13841
  4231                           
  4232                           ; BSR set to: 1
  4233                           ;main.c: 314:      sprintf(buff1, "%4.4umV %4.4umV %4.4umV", a[a_index].ana[channel_DAC1
      +                          ], a[a_index].ana[PS_V_ANA], a[a_index].ana[PS_I_ANA]);
  4234  0114FA  0E00               	movlw	low _buff1
  4235  0114FC  6FA3               	movwf	sprintf@s& (0+255),b
  4236  0114FE  0E04               	movlw	high _buff1
  4237  011500  6FA4               	movwf	(sprintf@s+1)& (0+255),b
  4238  011502  0EEA               	movlw	low STR_16
  4239  011504  6FA5               	movwf	sprintf@fmt& (0+255),b
  4240  011506  0EFE               	movlw	high STR_16
  4241  011508  6FA6               	movwf	(sprintf@fmt+1)& (0+255),b
  4242  01150A  5037               	movf	_a_index^0,w,c	;volatile
  4243  01150C  0D7E               	mullw	126
  4244  01150E  0EFD               	movlw	low (_a+122)
  4245  011510  24F3               	addwf	243,w,c
  4246  011512  6ED9               	movwf	fsr2l,c
  4247  011514  0E05               	movlw	high (_a+122)
  4248  011516  20F4               	addwfc	prodh,w,c
  4249  011518  6EDA               	movwf	fsr2h,c
  4250  01151A  006F FF78  F1A7    	movff	postinc2,?_sprintf+4
  4251  011520  006F FF74  F1A8    	movff	postdec2,?_sprintf+5
  4252  011526  5037               	movf	_a_index^0,w,c	;volatile
  4253  011528  0D7E               	mullw	126
  4254  01152A  0E83               	movlw	low _a
  4255  01152C  24F3               	addwf	243,w,c
  4256  01152E  6ED9               	movwf	fsr2l,c
  4257  011530  0E05               	movlw	high _a
  4258  011532  20F4               	addwfc	prodh,w,c
  4259  011534  6EDA               	movwf	fsr2h,c
  4260  011536  006F FF78  F1A9    	movff	postinc2,?_sprintf+6
  4261  01153C  006F FF74  F1AA    	movff	postdec2,?_sprintf+7
  4262  011542  5037               	movf	_a_index^0,w,c	;volatile
  4263  011544  0D7E               	mullw	126
  4264  011546  0E85               	movlw	low (_a+2)
  4265  011548  24F3               	addwf	243,w,c
  4266  01154A  6ED9               	movwf	fsr2l,c
  4267  01154C  0E05               	movlw	high (_a+2)
  4268  01154E  20F4               	addwfc	prodh,w,c
  4269  011550  6EDA               	movwf	fsr2h,c
  4270  011552  006F FF78  F1AB    	movff	postinc2,?_sprintf+8
  4271  011558  006F FF74  F1AC    	movff	postdec2,?_sprintf+9
  4272  01155E  EC21  F0A1         	call	_sprintf	;wreg free
  4273                           
  4274                           ; BSR set to: 1
  4275                           ;main.c: 315:      eaDogM_WriteStringAtPos(1, 0, buff1);
  4276  011562  0E00               	movlw	0
  4277  011564  0100               	movlb	0	; () banked
  4278  011566  6F73               	movwf	eaDogM_WriteStringAtPos@c& (0+255),b
  4279  011568  0E00               	movlw	low _buff1
  4280  01156A  6F74               	movwf	eaDogM_WriteStringAtPos@strPtr& (0+255),b
  4281  01156C  0E04               	movlw	high _buff1
  4282  01156E  6F75               	movwf	(eaDogM_WriteStringAtPos@strPtr+1)& (0+255),b
  4283  011570  0E01               	movlw	1
  4284  011572  EC63  F09F         	call	_eaDogM_WriteStringAtPos
  4285                           
  4286                           ; BSR set to: 59
  4287                           ;main.c: 316:      sprintf(buff1, "%4.4umV %4.4umV %4.4umV", a[a_index].ana[DAC_ANA], a[
      +                          a_index].ana[PWM5_ANA], a[a_index].ana[PWM6_ANA]);
  4288  011576  0E00               	movlw	low _buff1
  4289  011578  0101               	movlb	1	; () banked
  4290  01157A  6FA3               	movwf	sprintf@s& (0+255),b
  4291  01157C  0E04               	movlw	high _buff1
  4292  01157E  6FA4               	movwf	(sprintf@s+1)& (0+255),b
  4293  011580  0EEA               	movlw	low STR_16
  4294  011582  6FA5               	movwf	sprintf@fmt& (0+255),b
  4295  011584  0EFE               	movlw	high STR_16
  4296  011586  6FA6               	movwf	(sprintf@fmt+1)& (0+255),b
  4297  011588  5037               	movf	_a_index^0,w,c	;volatile
  4298  01158A  0D7E               	mullw	126
  4299  01158C  0EC5               	movlw	low (_a+66)
  4300  01158E  24F3               	addwf	243,w,c
  4301  011590  6ED9               	movwf	fsr2l,c
  4302  011592  0E05               	movlw	high (_a+66)
  4303  011594  20F4               	addwfc	prodh,w,c
  4304  011596  6EDA               	movwf	fsr2h,c
  4305  011598  006F FF78  F1A7    	movff	postinc2,?_sprintf+4
  4306  01159E  006F FF74  F1A8    	movff	postdec2,?_sprintf+5
  4307  0115A4  5037               	movf	_a_index^0,w,c	;volatile
  4308  0115A6  0D7E               	mullw	126
  4309  0115A8  0ED3               	movlw	low (_a+80)
  4310  0115AA  24F3               	addwf	243,w,c
  4311  0115AC  6ED9               	movwf	fsr2l,c
  4312  0115AE  0E05               	movlw	high (_a+80)
  4313  0115B0  20F4               	addwfc	prodh,w,c
  4314  0115B2  6EDA               	movwf	fsr2h,c
  4315  0115B4  006F FF78  F1A9    	movff	postinc2,?_sprintf+6
  4316  0115BA  006F FF74  F1AA    	movff	postdec2,?_sprintf+7
  4317  0115C0  5037               	movf	_a_index^0,w,c	;volatile
  4318  0115C2  0D7E               	mullw	126
  4319  0115C4  0ED5               	movlw	low (_a+82)
  4320  0115C6  24F3               	addwf	243,w,c
  4321  0115C8  6ED9               	movwf	fsr2l,c
  4322  0115CA  0E05               	movlw	high (_a+82)
  4323  0115CC  20F4               	addwfc	prodh,w,c
  4324  0115CE  6EDA               	movwf	fsr2h,c
  4325  0115D0  006F FF78  F1AB    	movff	postinc2,?_sprintf+8
  4326  0115D6  006F FF74  F1AC    	movff	postdec2,?_sprintf+9
  4327  0115DC  EC21  F0A1         	call	_sprintf	;wreg free
  4328                           
  4329                           ;main.c: 317:      eaDogM_WriteStringAtPos(2, 0, buff1);
  4330  0115E0  0E00               	movlw	0
  4331  0115E2  0100               	movlb	0	; () banked
  4332  0115E4  6F73               	movwf	eaDogM_WriteStringAtPos@c& (0+255),b
  4333  0115E6  0E00               	movlw	low _buff1
  4334  0115E8  6F74               	movwf	eaDogM_WriteStringAtPos@strPtr& (0+255),b
  4335  0115EA  0E04               	movlw	high _buff1
  4336  0115EC  6F75               	movwf	(eaDogM_WriteStringAtPos@strPtr+1)& (0+255),b
  4337  0115EE  0E02               	movlw	2
  4338  0115F0  EC63  F09F         	call	_eaDogM_WriteStringAtPos
  4339                           
  4340                           ; BSR set to: 59
  4341                           ;main.c: 318:      sprintf(buff1, "D%.2u, M%1u, P%1u, I%2u", (uint16_t) DAC1_GetOutput()
      +                          , mode, ps_type_index, i_index);
  4342  0115F4  0E00               	movlw	low _buff1
  4343  0115F6  0101               	movlb	1	; () banked
  4344  0115F8  6FA3               	movwf	sprintf@s& (0+255),b
  4345  0115FA  0E04               	movlw	high _buff1
  4346  0115FC  6FA4               	movwf	(sprintf@s+1)& (0+255),b
  4347  0115FE  0E02               	movlw	low STR_18
  4348  011600  6FA5               	movwf	sprintf@fmt& (0+255),b
  4349  011602  0EFF               	movlw	high STR_18
  4350  011604  6FA6               	movwf	(sprintf@fmt+1)& (0+255),b
  4351  011606  EC84  F0A7         	call	_DAC1_GetOutput	;wreg free
  4352  01160A  0101               	movlb	1	; () banked
  4353  01160C  6FBC               	movwf	??_main& (0+255),b
  4354  01160E  51BC               	movf	??_main& (0+255),w,b
  4355  011610  6FA7               	movwf	(?_sprintf+4)& (0+255),b
  4356  011612  6BA8               	clrf	(?_sprintf+5)& (0+255),b
  4357  011614  C035  F1A9         	movff	_mode,?_sprintf+6
  4358  011618  6BAA               	clrf	(?_sprintf+7)& (0+255),b
  4359  01161A  C034  F1AB         	movff	_ps_type_index,?_sprintf+8	;volatile
  4360  01161E  6BAC               	clrf	(?_sprintf+9)& (0+255),b
  4361  011620  C036  F1AD         	movff	_i_index,?_sprintf+10	;volatile
  4362  011624  6BAE               	clrf	(?_sprintf+11)& (0+255),b
  4363  011626  EC21  F0A1         	call	_sprintf	;wreg free
  4364                           
  4365                           ; BSR set to: 1
  4366                           ;main.c: 319:      eaDogM_WriteStringAtPos(3, 0, buff1);
  4367  01162A  0E00               	movlw	0
  4368  01162C  0100               	movlb	0	; () banked
  4369  01162E  6F73               	movwf	eaDogM_WriteStringAtPos@c& (0+255),b
  4370  011630  0E00               	movlw	low _buff1
  4371  011632  6F74               	movwf	eaDogM_WriteStringAtPos@strPtr& (0+255),b
  4372  011634  0E04               	movlw	high _buff1
  4373  011636  6F75               	movwf	(eaDogM_WriteStringAtPos@strPtr+1)& (0+255),b
  4374  011638  0E03               	movlw	3
  4375  01163A  EC63  F09F         	call	_eaDogM_WriteStringAtPos
  4376                           
  4377                           ;main.c: 320:      sprintf(buff1, "V=%+6.1fV I=%+3.1fmA  ", vval, ival);
  4378  01163E  0E00               	movlw	low _buff1
  4379  011640  0101               	movlb	1	; () banked
  4380  011642  6FA3               	movwf	sprintf@s& (0+255),b
  4381  011644  0E04               	movlw	high _buff1
  4382  011646  6FA4               	movwf	(sprintf@s+1)& (0+255),b
  4383  011648  0E1A               	movlw	low STR_19
  4384  01164A  6FA5               	movwf	sprintf@fmt& (0+255),b
  4385  01164C  0EFF               	movlw	high STR_19
  4386  01164E  6FA6               	movwf	(sprintf@fmt+1)& (0+255),b
  4387  011650  C128  F1A7         	movff	_vval,?_sprintf+4
  4388  011654  C129  F1A8         	movff	_vval+1,?_sprintf+5
  4389  011658  C12A  F1A9         	movff	_vval+2,?_sprintf+6
  4390  01165C  C12B  F1AA         	movff	_vval+3,?_sprintf+7
  4391  011660  C124  F1AB         	movff	_ival,?_sprintf+8
  4392  011664  C125  F1AC         	movff	_ival+1,?_sprintf+9
  4393  011668  C126  F1AD         	movff	_ival+2,?_sprintf+10
  4394  01166C  C127  F1AE         	movff	_ival+3,?_sprintf+11
  4395  011670  EC21  F0A1         	call	_sprintf	;wreg free
  4396                           
  4397                           ; BSR set to: 1
  4398                           ;main.c: 321:      eaDogM_WriteStringAtPos(0, 0, buff1);
  4399  011674  0E00               	movlw	0
  4400  011676  0100               	movlb	0	; () banked
  4401  011678  6F73               	movwf	eaDogM_WriteStringAtPos@c& (0+255),b
  4402  01167A  0E00               	movlw	low _buff1
  4403  01167C  6F74               	movwf	eaDogM_WriteStringAtPos@strPtr& (0+255),b
  4404  01167E  0E04               	movlw	high _buff1
  4405  011680  6F75               	movwf	(eaDogM_WriteStringAtPos@strPtr+1)& (0+255),b
  4406  011682  0E00               	movlw	0
  4407  011684  EC63  F09F         	call	_eaDogM_WriteStringAtPos
  4408  011688  D025               	goto	l13841
  4409  01168A                     l13811:
  4410                           
  4411                           ; BSR set to: 1
  4412                           ;main.c: 328:      i_index++;
  4413  01168A  2A36               	incf	_i_index^0,f,c	;volatile
  4414                           
  4415                           ; BSR set to: 1
  4416                           ;main.c: 329:      if (dac_v > roll_max) {
  4417  01168C  0100               	movlb	0	; () banked
  4418  01168E  51FA               	movf	_dac_v& (0+255),w,b
  4419  011690  5DFE               	subwf	_roll_max& (0+255),w,b
  4420  011692  B0D8               	btfsc	status,0,c
  4421  011694  D004               	goto	l13817
  4422                           
  4423                           ; BSR set to: 0
  4424                           ;main.c: 330:       dac_v = 0;
  4425  011696  0E00               	movlw	0
  4426  011698  6FFA               	movwf	_dac_v& (0+255),b
  4427                           
  4428                           ;main.c: 331:       i_index = 0;
  4429  01169A  0E00               	movlw	0
  4430  01169C  6E36               	movwf	_i_index^0,c	;volatile
  4431  01169E                     l13817:
  4432                           
  4433                           ; BSR set to: 0
  4434                           ;main.c: 333:      DAC1_SetOutput(dac_v++);
  4435  01169E  51FA               	movf	_dac_v& (0+255),w,b
  4436  0116A0  EC75  F0A7         	call	_DAC1_SetOutput
  4437  0116A4  0100               	movlb	0	; () banked
  4438  0116A6  2BFA               	incf	_dac_v& (0+255),f,b
  4439  0116A8  D008               	goto	l13827
  4440  0116AA                     l13823:
  4441                           
  4442                           ; BSR set to: 0
  4443  0116AA  9ABA               	bcf	186,5,c	;volatile
  4444  0116AC  D026               	goto	l13843
  4445  0116AE                     l1338:
  4446                           
  4447                           ; BSR set to: 1
  4448                           ;main.c: 338:      dac_v = static_ps;
  4449  0116AE  C0FD  F0FA         	movff	_static_ps,_dac_v
  4450                           
  4451                           ; BSR set to: 1
  4452                           ;main.c: 339:      DAC1_SetOutput(dac_v);
  4453  0116B2  0100               	movlb	0	; () banked
  4454  0116B4  51FA               	movf	_dac_v& (0+255),w,b
  4455  0116B6  EC75  F0A7         	call	_DAC1_SetOutput
  4456  0116BA                     l13827:
  4457  0116BA  82BD               	bsf	189,1,c	;volatile
  4458  0116BC  D7F6               	goto	l13823
  4459  0116BE                     l13831:
  4460                           
  4461                           ; BSR set to: 1
  4462                           ;main.c: 345:      mode = off_mode;
  4463  0116BE  0E00               	movlw	0
  4464  0116C0  6E35               	movwf	_mode^0,c
  4465                           
  4466                           ;main.c: 346:      dac_v = 0;
  4467  0116C2  0E00               	movlw	0
  4468  0116C4  0100               	movlb	0	; () banked
  4469  0116C6  6FFA               	movwf	_dac_v& (0+255),b
  4470                           
  4471                           ; BSR set to: 0
  4472                           ;main.c: 347:      DAC1_SetOutput(dac_v);
  4473  0116C8  0E00               	movlw	0
  4474  0116CA  EC75  F0A7         	call	_DAC1_SetOutput
  4475  0116CE  92BD               	bcf	189,1,c	;volatile
  4476  0116D0  8ABA               	bsf	186,5,c	;volatile
  4477  0116D2  D013               	goto	l13843
  4478  0116D4                     l13841:
  4479  0116D4  5035               	movf	_mode^0,w,c
  4480  0116D6  0101               	movlb	1	; () banked
  4481  0116D8  6FBC               	movwf	??_main& (0+255),b
  4482  0116DA  6BBD               	clrf	(??_main+1)& (0+255),b
  4483                           
  4484                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4485                           ; Switch size 1, requested type "simple"
  4486                           ; Number of cases is 1, Range of values is 0 to 0
  4487                           ; switch strategies available:
  4488                           ; Name         Instructions Cycles
  4489                           ; simple_byte            4     3 (average)
  4490                           ;	Chosen strategy is simple_byte
  4491  0116DC  51BD               	movf	(??_main+1)& (0+255),w,b
  4492  0116DE  0A00               	xorlw	0	; case 0
  4493  0116E0  A4D8               	btfss	status,2,c
  4494  0116E2  D7ED               	goto	l13831
  4495                           
  4496                           ; BSR set to: 1
  4497                           ; Switch size 1, requested type "simple"
  4498                           ; Number of cases is 3, Range of values is 0 to 2
  4499                           ; switch strategies available:
  4500                           ; Name         Instructions Cycles
  4501                           ; simple_byte           10     6 (average)
  4502                           ;	Chosen strategy is simple_byte
  4503  0116E4  51BC               	movf	??_main& (0+255),w,b
  4504  0116E6  0A00               	xorlw	0	; case 0
  4505  0116E8  B4D8               	btfsc	status,2,c
  4506  0116EA  D7E9               	goto	l13831
  4507  0116EC  0A01               	xorlw	1	; case 1
  4508  0116EE  B4D8               	btfsc	status,2,c
  4509  0116F0  D7CC               	goto	l13811
  4510  0116F2  0A03               	xorlw	3	; case 2
  4511  0116F4  B4D8               	btfsc	status,2,c
  4512  0116F6  D7DB               	goto	l1338
  4513  0116F8  D7E2               	goto	l13831
  4514  0116FA                     l13843:
  4515                           
  4516                           ;main.c: 357:     cli_read(&cli_ctx);
  4517  0116FA  0E00               	movlw	low _cli_ctx
  4518  0116FC  0100               	movlb	0	; () banked
  4519  0116FE  6F84               	movwf	cli_read@a_ctx& (0+255),b
  4520  011700  0E05               	movlw	high _cli_ctx
  4521  011702  6F85               	movwf	(cli_read@a_ctx+1)& (0+255),b
  4522  011704  EC47  F095         	call	_cli_read	;wreg free
  4523                           
  4524                           ;main.c: 358:     disp_tick = 0;
  4525  011708  0E00               	movlw	0
  4526  01170A  0100               	movlb	0	; () banked
  4527  01170C  6FFC               	movwf	_disp_tick& (0+255),b	;volatile
  4528                           
  4529                           ; BSR set to: 0
  4530                           ;main.c: 359:     if (!PORTBbits.RB0) {
  4531  01170E  B0CB               	btfsc	203,0,c	;volatile
  4532  011710  D009               	goto	l13857
  4533                           
  4534                           ; BSR set to: 0
  4535                           ;main.c: 360:      if (++mode_sw > 4) {
  4536  011712  2BF9               	incf	_mode_sw& (0+255),f,b
  4537  011714  0E04               	movlw	4
  4538  011716  65F9               	cpfsgt	_mode_sw& (0+255),b
  4539  011718  D5B2               	goto	l13751
  4540                           
  4541                           ; BSR set to: 0
  4542                           ;main.c: 361:       mode++;
  4543  01171A  2A35               	incf	_mode^0,f,c
  4544                           
  4545                           ; BSR set to: 0
  4546                           ;main.c: 362:       mode_sw = 0;
  4547  01171C  0E00               	movlw	0
  4548  01171E  6FF9               	movwf	_mode_sw& (0+255),b
  4549                           
  4550                           ; BSR set to: 0
  4551  011720  84BE               	bsf	190,2,c	;volatile
  4552  011722  D5AD               	goto	l13751
  4553  011724                     l13857:
  4554                           
  4555                           ; BSR set to: 0
  4556                           ;main.c: 366:      mode_sw = 0;
  4557  011724  0E00               	movlw	0
  4558  011726  6FF9               	movwf	_mode_sw& (0+255),b
  4559                           
  4560                           ; BSR set to: 0
  4561  011728  94BE               	bcf	190,2,c	;volatile
  4562  01172A  D5A9               	goto	l13751
  4563  01172C                     __end_of_main:
  4564                           	callstack 0
  4565                           
  4566 ;; *************** function _sprintf *****************
  4567 ;; Defined at:
  4568 ;;		line 9 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/nf_sprintf.c"
  4569 ;; Parameters:    Size  Location     Type
  4570 ;;  s               2    6[BANK1 ] PTR unsigned char 
  4571 ;;		 -> buff1(255), 
  4572 ;;  fmt             2    8[BANK1 ] PTR const unsigned char 
  4573 ;;		 -> STR_19(23), STR_18(24), STR_17(24), STR_16(24), 
  4574 ;;		 -> STR_14(3), STR_13(6), STR_12(17), 
  4575 ;; Auto vars:     Size  Location     Type
  4576 ;;  f              11   20[BANK1 ] struct _IO_FILE
  4577 ;;  ap              2   18[BANK1 ] PTR void [1]
  4578 ;;		 -> ?_printf(2), ?_sprintf(2), 
  4579 ;;  ret             2    0        int 
  4580 ;; Return value:  Size  Location     Type
  4581 ;;                  2    6[BANK1 ] int 
  4582 ;; Registers used:
  4583 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4584 ;; Tracked objects:
  4585 ;;		On entry : 3F/1
  4586 ;;		On exit  : 3F/1
  4587 ;;		Unchanged: 0/0
  4588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4589 ;;      Params:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4590 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4592 ;;      Totals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4593 ;;Total ram usage:       25 bytes
  4594 ;; Hardware stack levels used: 1
  4595 ;; Hardware stack levels required when called: 15
  4596 ;; This function calls:
  4597 ;;		_vfprintf
  4598 ;; This function is called by:
  4599 ;;		_main
  4600 ;; This function uses a non-reentrant model
  4601 ;;
  4602                           
  4603                           	psect	text1
  4604  014242                     __ptext1:
  4605                           	callstack 0
  4606  014242                     _sprintf:
  4607                           	callstack 15
  4608                           
  4609                           ; BSR set to: 1
  4610                           
  4611                           ; BSR set to: 0
  4612                           ;incstack = 0
  4613  014242  0EA7               	movlw	low (?_sprintf+4)
  4614  014244  6FAF               	movwf	sprintf@ap& (0+255),b
  4615  014246  0E01               	movlw	high (?_sprintf+4)
  4616  014248  6FB0               	movwf	(sprintf@ap+1)& (0+255),b
  4617  01424A  C1A3  F1B1         	movff	sprintf@s,sprintf@f
  4618  01424E  C1A4  F1B2         	movff	sprintf@s+1,sprintf@f+1
  4619                           
  4620                           ; BSR set to: 1
  4621  014252  0E00               	movlw	0
  4622  014254  6FB5               	movwf	(sprintf@f+4)& (0+255),b
  4623  014256  0E00               	movlw	0
  4624  014258  6FB4               	movwf	(sprintf@f+3)& (0+255),b
  4625                           
  4626                           ; BSR set to: 1
  4627  01425A  0E00               	movlw	0
  4628  01425C  6FBB               	movwf	(sprintf@f+10)& (0+255),b
  4629  01425E  0E00               	movlw	0
  4630  014260  6FBA               	movwf	(sprintf@f+9)& (0+255),b
  4631                           
  4632                           ; BSR set to: 1
  4633  014262  0EB1               	movlw	low sprintf@f
  4634  014264  6F9D               	movwf	vfprintf@fp& (0+255),b
  4635  014266  0E01               	movlw	high sprintf@f
  4636  014268  6F9E               	movwf	(vfprintf@fp+1)& (0+255),b
  4637  01426A  C1A5  F19F         	movff	sprintf@fmt,vfprintf@fmt
  4638  01426E  C1A6  F1A0         	movff	sprintf@fmt+1,vfprintf@fmt+1
  4639  014272  0EAF               	movlw	low sprintf@ap
  4640  014274  6FA1               	movwf	vfprintf@ap& (0+255),b
  4641  014276  0E01               	movlw	high sprintf@ap
  4642  014278  6FA2               	movwf	(vfprintf@ap+1)& (0+255),b
  4643  01427A  ECF6  F09F         	call	_vfprintf	;wreg free
  4644                           
  4645                           ; BSR set to: 1
  4646  01427E  51B4               	movf	(sprintf@f+3)& (0+255),w,b
  4647  014280  25A3               	addwf	sprintf@s& (0+255),w,b
  4648  014282  6ED9               	movwf	fsr2l,c
  4649  014284  51B5               	movf	(sprintf@f+4)& (0+255),w,b
  4650  014286  21A4               	addwfc	(sprintf@s+1)& (0+255),w,b
  4651  014288  6EDA               	movwf	fsr2h,c
  4652  01428A  0E00               	movlw	0
  4653  01428C  6EDF               	movwf	indf2,c
  4654                           
  4655                           ; BSR set to: 1
  4656  01428E  0012               	return		;funcret
  4657  014290                     __end_of_sprintf:
  4658                           	callstack 0
  4659                           
  4660 ;; *************** function _scmd_init *****************
  4661 ;; Defined at:
  4662 ;;		line 36 in file "scdm.c"
  4663 ;; Parameters:    Size  Location     Type
  4664 ;;		None
  4665 ;; Auto vars:     Size  Location     Type
  4666 ;;		None
  4667 ;; Return value:  Size  Location     Type
  4668 ;;                  1    wreg      void 
  4669 ;; Registers used:
  4670 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4671 ;; Tracked objects:
  4672 ;;		On entry : 6/39
  4673 ;;		On exit  : 3F/0
  4674 ;;		Unchanged: 0/0
  4675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4680 ;;Total ram usage:        0 bytes
  4681 ;; Hardware stack levels used: 1
  4682 ;; Hardware stack levels required when called: 13
  4683 ;; This function calls:
  4684 ;;		_cli_init
  4685 ;; This function is called by:
  4686 ;;		_main
  4687 ;; This function uses a non-reentrant model
  4688 ;;
  4689                           
  4690                           	psect	text2
  4691  014D22                     __ptext2:
  4692                           	callstack 0
  4693  014D22                     _scmd_init:
  4694                           	callstack 17
  4695                           
  4696                           ;scdm.c: 38:  cli_init(&cli_ctx, g_cmds);
  4697                           
  4698                           ; BSR set to: 1
  4699                           ;incstack = 0
  4700  014D22  0E00               	movlw	low _cli_ctx
  4701  014D24  0100               	movlb	0	; () banked
  4702  014D26  6F76               	movwf	cli_init@a_ctx& (0+255),b
  4703  014D28  0E05               	movlw	high _cli_ctx
  4704  014D2A  6F77               	movwf	(cli_init@a_ctx+1)& (0+255),b
  4705  014D2C  0E80               	movlw	low _g_cmds
  4706  014D2E  6F78               	movwf	cli_init@a_cmds& (0+255),b
  4707  014D30  0E02               	movlw	high _g_cmds
  4708  014D32  6F79               	movwf	(cli_init@a_cmds+1)& (0+255),b
  4709  014D34  EC71  F0A2         	call	_cli_init	;wreg free
  4710                           
  4711                           ; BSR set to: 0
  4712  014D38  0012               	return		;funcret
  4713  014D3A                     __end_of_scmd_init:
  4714                           	callstack 0
  4715                           
  4716 ;; *************** function _cli_init *****************
  4717 ;; Defined at:
  4718 ;;		line 26 in file "scdm.c"
  4719 ;; Parameters:    Size  Location     Type
  4720 ;;  a_ctx           2   22[BANK0 ] PTR struct _t_cli_ctx
  4721 ;;		 -> cli_ctx(131), 
  4722 ;;  a_cmds          2   24[BANK0 ] PTR struct _t_cmd
  4723 ;;		 -> g_cmds(50), 
  4724 ;; Auto vars:     Size  Location     Type
  4725 ;;		None
  4726 ;; Return value:  Size  Location     Type
  4727 ;;                  1    wreg      void 
  4728 ;; Registers used:
  4729 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4730 ;; Tracked objects:
  4731 ;;		On entry : 3F/0
  4732 ;;		On exit  : 3F/0
  4733 ;;		Unchanged: 0/0
  4734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4735 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4738 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4739 ;;Total ram usage:        4 bytes
  4740 ;; Hardware stack levels used: 1
  4741 ;; Hardware stack levels required when called: 12
  4742 ;; This function calls:
  4743 ;;		_memset
  4744 ;;		_puts
  4745 ;; This function is called by:
  4746 ;;		_scmd_init
  4747 ;; This function uses a non-reentrant model
  4748 ;;
  4749                           
  4750                           	psect	text3
  4751  0144E2                     __ptext3:
  4752                           	callstack 0
  4753  0144E2                     _cli_init:
  4754                           	callstack 17
  4755                           
  4756                           ; BSR set to: 0
  4757                           ;scdm.c: 26: static void cli_init(t_cli_ctx *a_ctx, t_cmd *a_cmds);scdm.c: 27: {;scdm.c:
      +                           28:  memset(a_ctx, 0x00, sizeof(t_cli_ctx));
  4758                           
  4759                           ; BSR set to: 0
  4760                           ;incstack = 0
  4761  0144E2  C076  F060         	movff	cli_init@a_ctx,memset@dest
  4762  0144E6  C077  F061         	movff	cli_init@a_ctx+1,memset@dest+1
  4763  0144EA  0E00               	movlw	0
  4764  0144EC  6F63               	movwf	(memset@c+1)& (0+255),b
  4765  0144EE  0E00               	movlw	0
  4766  0144F0  6F62               	movwf	memset@c& (0+255),b
  4767  0144F2  0E00               	movlw	0
  4768  0144F4  6F65               	movwf	(memset@n+1)& (0+255),b
  4769  0144F6  0E83               	movlw	131
  4770  0144F8  6F64               	movwf	memset@n& (0+255),b
  4771  0144FA  ECF0  F095         	call	_memset	;wreg free
  4772                           
  4773                           ; BSR set to: 0
  4774                           ;scdm.c: 29:  a_ctx->cmds = a_cmds;
  4775  0144FE  0060  F1DB  FFD9   	movff	cli_init@a_ctx,fsr2l
  4776  014504  0060  F1DF  FFDA   	movff	cli_init@a_ctx+1,fsr2h
  4777  01450A  0060  F1E3  FFDE   	movff	cli_init@a_cmds,postinc2
  4778  014510  0060  F1E7  FFDD   	movff	cli_init@a_cmds+1,postdec2
  4779                           
  4780                           ; BSR set to: 0
  4781                           ;scdm.c: 33:  puts(cmdm);
  4782  014516  0EFC               	movlw	low _cmdm
  4783  014518  6F73               	movwf	puts@s& (0+255),b
  4784  01451A  0EFD               	movlw	high _cmdm
  4785  01451C  6F74               	movwf	(puts@s+1)& (0+255),b
  4786  01451E  EC29  F0A4         	call	_puts	;wreg free
  4787                           
  4788                           ; BSR set to: 0
  4789  014522  0012               	return		;funcret
  4790  014524                     __end_of_cli_init:
  4791                           	callstack 0
  4792                           
  4793 ;; *************** function _printf *****************
  4794 ;; Defined at:
  4795 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/printf.c"
  4796 ;; Parameters:    Size  Location     Type
  4797 ;;  fmt             2    6[BANK1 ] PTR const unsigned char 
  4798 ;;		 -> STR_15(107), 
  4799 ;; Auto vars:     Size  Location     Type
  4800 ;;  ap              2  146[BANK0 ] PTR void [1]
  4801 ;;		 -> ?_printf(2), ?_sprintf(2), 
  4802 ;;  ret             2    0        int 
  4803 ;; Return value:  Size  Location     Type
  4804 ;;                  2    6[BANK1 ] int 
  4805 ;; Registers used:
  4806 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4807 ;; Tracked objects:
  4808 ;;		On entry : 3F/1
  4809 ;;		On exit  : 3F/1
  4810 ;;		Unchanged: 0/0
  4811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4812 ;;      Params:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4813 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4815 ;;      Totals:         0       2      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4816 ;;Total ram usage:       24 bytes
  4817 ;; Hardware stack levels used: 1
  4818 ;; Hardware stack levels required when called: 15
  4819 ;; This function calls:
  4820 ;;		_vfprintf
  4821 ;; This function is called by:
  4822 ;;		_main
  4823 ;; This function uses a non-reentrant model
  4824 ;;
  4825                           
  4826                           	psect	text4
  4827  014A74                     __ptext4:
  4828                           	callstack 0
  4829  014A74                     _printf:
  4830                           	callstack 15
  4831                           
  4832                           ; BSR set to: 1
  4833                           
  4834                           ; BSR set to: 0
  4835                           ;incstack = 0
  4836  014A74  0EA5               	movlw	low (?_printf+2)
  4837  014A76  0100               	movlb	0	; () banked
  4838  014A78  6FF2               	movwf	printf@ap& (0+255),b
  4839  014A7A  0E01               	movlw	high (?_printf+2)
  4840  014A7C  6FF3               	movwf	(printf@ap+1)& (0+255),b
  4841                           
  4842                           ; BSR set to: 0
  4843  014A7E  0E00               	movlw	0
  4844  014A80  0101               	movlb	1	; () banked
  4845  014A82  6F9D               	movwf	vfprintf@fp& (0+255),b
  4846  014A84  0E00               	movlw	0
  4847  014A86  6F9E               	movwf	(vfprintf@fp+1)& (0+255),b
  4848  014A88  C1A3  F19F         	movff	printf@fmt,vfprintf@fmt
  4849  014A8C  C1A4  F1A0         	movff	printf@fmt+1,vfprintf@fmt+1
  4850  014A90  0EF2               	movlw	low printf@ap
  4851  014A92  6FA1               	movwf	vfprintf@ap& (0+255),b
  4852  014A94  6BA2               	clrf	(vfprintf@ap+1)& (0+255),b
  4853  014A96  ECF6  F09F         	call	_vfprintf	;wreg free
  4854                           
  4855                           ; BSR set to: 1
  4856  014A9A  0012               	return		;funcret
  4857  014A9C                     __end_of_printf:
  4858                           	callstack 0
  4859                           
  4860 ;; *************** function _vfprintf *****************
  4861 ;; Defined at:
  4862 ;;		line 1390 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  4863 ;; Parameters:    Size  Location     Type
  4864 ;;  fp              2    0[BANK1 ] PTR struct _IO_FILE
  4865 ;;		 -> sprintf@f(11), NULL(0), 
  4866 ;;  fmt             2    2[BANK1 ] PTR const unsigned char 
  4867 ;;		 -> STR_19(23), STR_18(24), STR_17(24), STR_16(24), 
  4868 ;;		 -> STR_15(107), STR_14(3), STR_13(6), STR_12(17), 
  4869 ;;  ap              2    4[BANK1 ] PTR PTR void 
  4870 ;;		 -> printf@ap(2), sprintf@ap(2), 
  4871 ;; Auto vars:     Size  Location     Type
  4872 ;;  cfmt            2  144[BANK0 ] PTR unsigned char 
  4873 ;;		 -> STR_19(23), STR_18(24), STR_17(24), STR_16(24), 
  4874 ;;		 -> STR_15(107), STR_14(3), STR_13(6), STR_12(17), 
  4875 ;; Return value:  Size  Location     Type
  4876 ;;                  2    0[BANK1 ] int 
  4877 ;; Registers used:
  4878 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4879 ;; Tracked objects:
  4880 ;;		On entry : 3F/1
  4881 ;;		On exit  : 3F/1
  4882 ;;		Unchanged: 0/0
  4883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4884 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4885 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4887 ;;      Totals:         0       2       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4888 ;;Total ram usage:        8 bytes
  4889 ;; Hardware stack levels used: 1
  4890 ;; Hardware stack levels required when called: 14
  4891 ;; This function calls:
  4892 ;;		_vfpfcnvrt
  4893 ;; This function is called by:
  4894 ;;		_sprintf
  4895 ;;		_printf
  4896 ;; This function uses a non-reentrant model
  4897 ;;
  4898                           
  4899                           	psect	text5
  4900  013FEC                     __ptext5:
  4901                           	callstack 0
  4902  013FEC                     _vfprintf:
  4903                           	callstack 15
  4904                           
  4905                           ; BSR set to: 1
  4906                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1390: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1
      +                          391: {;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1393:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1395:     cfmt = (char *)fmt;
  4907                           
  4908                           ; BSR set to: 1
  4909                           ;incstack = 0
  4910  013FEC  C19F  F0F0         	movff	vfprintf@fmt,vfprintf@cfmt
  4911  013FF0  C1A0  F0F1         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4912                           
  4913                           ; BSR set to: 1
  4914                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1396:     nout = 0;
  4915  013FF4  0E00               	movlw	0
  4916  013FF6  6F42               	movwf	(_nout+1)& (0+255),b
  4917  013FF8  0E00               	movlw	0
  4918  013FFA  6F41               	movwf	_nout& (0+255),b
  4919                           
  4920                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1397:     while (*cfmt) {
  4921  013FFC  D014               	goto	l13675
  4922  013FFE                     l13673:
  4923                           
  4924                           ; BSR set to: 1
  4925                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1398:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  4926  013FFE  C19D  F0D1         	movff	vfprintf@fp,vfpfcnvrt@fp
  4927  014002  C19E  F0D2         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4928  014006  0EF0               	movlw	low vfprintf@cfmt
  4929  014008  0100               	movlb	0	; () banked
  4930  01400A  6FD3               	movwf	vfpfcnvrt@fmt& (0+255),b
  4931  01400C  C1A1  F0D4         	movff	vfprintf@ap,vfpfcnvrt@ap
  4932  014010  C1A2  F0D5         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4933  014014  ECDC  F084         	call	_vfpfcnvrt	;wreg free
  4934  014018  51D1               	movf	?_vfpfcnvrt& (0+255),w,b
  4935  01401A  0101               	movlb	1	; () banked
  4936  01401C  2741               	addwf	_nout& (0+255),f,b
  4937  01401E  0100               	movlb	0	; () banked
  4938  014020  51D2               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  4939  014022  0101               	movlb	1	; () banked
  4940  014024  2342               	addwfc	(_nout+1)& (0+255),f,b
  4941  014026                     l13675:
  4942                           
  4943                           ; BSR set to: 1
  4944                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1397:     while (*cfmt) {
  4945  014026  0060  F3C3  FFF6   	movff	vfprintf@cfmt,tblptrl
  4946  01402C  0060  F3C7  FFF7   	movff	vfprintf@cfmt+1,tblptrh
  4947  014032                     	if	0	;tblptru may be non-zero
  4948  014032                     	endif
  4949  014032                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4950  014032  0E00               	movlw	low (__mediumconst shr (0+16))
  4951  014034  6EF8               	movwf	tblptru,c
  4952  014036                     	endif
  4953  014036  0008               	tblrd		*
  4954  014038  50F5               	movf	tablat,w,c
  4955  01403A  0900               	iorlw	0
  4956  01403C  A4D8               	btfss	status,2,c
  4957  01403E  D7DF               	goto	l13673
  4958                           
  4959                           ; BSR set to: 1
  4960                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1400:     return nout;
  4961  014040  C141  F19D         	movff	_nout,?_vfprintf
  4962  014044  C142  F19E         	movff	_nout+1,?_vfprintf+1
  4963                           
  4964                           ; BSR set to: 1
  4965  014048  0012               	return		;funcret
  4966  01404A                     __end_of_vfprintf:
  4967                           	callstack 0
  4968                           
  4969 ;; *************** function _vfpfcnvrt *****************
  4970 ;; Defined at:
  4971 ;;		line 692 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  4972 ;; Parameters:    Size  Location     Type
  4973 ;;  fp              2  113[BANK0 ] PTR struct _IO_FILE
  4974 ;;		 -> sprintf@f(11), NULL(0), 
  4975 ;;  fmt             1  115[BANK0 ] PTR PTR unsigned char 
  4976 ;;		 -> vfprintf@cfmt(2), 
  4977 ;;  ap              2  116[BANK0 ] PTR PTR void 
  4978 ;;		 -> printf@ap(2), sprintf@ap(2), 
  4979 ;; Auto vars:     Size  Location     Type
  4980 ;;  llu             8  122[BANK0 ] unsigned long long 
  4981 ;;  ll              8    0        long long 
  4982 ;;  f               4  140[BANK0 ] long long 
  4983 ;;  ct              3  137[BANK0 ] unsigned char [3]
  4984 ;;  vp              3    0        PTR void 
  4985 ;;  done            2  132[BANK0 ] int 
  4986 ;;  cp              2  130[BANK0 ] PTR unsigned char 
  4987 ;;		 -> ?_printf(2), ?_sprintf(2), build_version(14), STR_2(9), 
  4988 ;;		 -> STR_1(12), 
  4989 ;;  i               2    0        int 
  4990 ;;  c               1  136[BANK0 ] unsigned char 
  4991 ;; Return value:  Size  Location     Type
  4992 ;;                  2  113[BANK0 ] int 
  4993 ;; Registers used:
  4994 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4995 ;; Tracked objects:
  4996 ;;		On entry : 3F/0
  4997 ;;		On exit  : 3F/0
  4998 ;;		Unchanged: 0/0
  4999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5000 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5001 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5002 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5003 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5004 ;;Total ram usage:       31 bytes
  5005 ;; Hardware stack levels used: 1
  5006 ;; Hardware stack levels required when called: 13
  5007 ;; This function calls:
  5008 ;;		_atoi
  5009 ;;		_efgtoa
  5010 ;;		_fputc
  5011 ;;		_isdigit
  5012 ;;		_isupper
  5013 ;;		_stoa
  5014 ;;		_strncmp
  5015 ;;		_tolower
  5016 ;;		_utoa
  5017 ;; This function is called by:
  5018 ;;		_vfprintf
  5019 ;; This function uses a non-reentrant model
  5020 ;;
  5021                           
  5022                           	psect	text6
  5023  0109B8                     __ptext6:
  5024                           	callstack 0
  5025  0109B8                     _vfpfcnvrt:
  5026                           	callstack 15
  5027                           
  5028                           ; BSR set to: 0
  5029                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 692: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c
      +                          : 693: {;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 694:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 695:     int done, i;;
      +                          /opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 696:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 697:     unsigned long long llu;
  5030                           
  5031                           ; BSR set to: 1
  5032                           ;incstack = 0
  5033  0109B8  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5034  0109BA  6ED9               	movwf	fsr2l,c
  5035  0109BC  6ADA               	clrf	fsr2h,c
  5036  0109BE  006F FF7B FFF6     	movff	postinc2,tblptrl
  5037  0109C4  006F FF77 FFF7     	movff	postdec2,tblptrh
  5038  0109CA                     	if	0	;tblptru may be non-zero
  5039  0109CA                     	endif
  5040  0109CA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5041  0109CA  0E00               	movlw	low (__mediumconst shr (0+16))
  5042  0109CC  6EF8               	movwf	tblptru,c
  5043  0109CE                     	endif
  5044  0109CE  0008               	tblrd		*
  5045  0109D0  50F5               	movf	tablat,w,c
  5046  0109D2  0A25               	xorlw	37
  5047  0109D4  A4D8               	btfss	status,2,c
  5048  0109D6  D34A               	goto	l13657
  5049                           
  5050                           ; BSR set to: 0
  5051                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 703:         ++*fmt;
  5052  0109D8  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5053  0109DA  6ED9               	movwf	fsr2l,c
  5054  0109DC  6ADA               	clrf	fsr2h,c
  5055  0109DE  2ADE               	incf	postinc2,f,c
  5056  0109E0  0E00               	movlw	0
  5057  0109E2  22DD               	addwfc	postdec2,f,c
  5058                           
  5059                           ; BSR set to: 0
  5060                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 705:         flags = width = 
      +                          0;
  5061  0109E4  0E00               	movlw	0
  5062  0109E6  6FF5               	movwf	(_width+1)& (0+255),b
  5063  0109E8  0E00               	movlw	0
  5064  0109EA  6FF4               	movwf	_width& (0+255),b
  5065  0109EC  C0F4  F02D         	movff	_width,_flags
  5066  0109F0  C0F5  F02E         	movff	_width+1,_flags+1
  5067                           
  5068                           ; BSR set to: 0
  5069                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 706:         prec = -1;
  5070  0109F4  69F6               	setf	_prec& (0+255),b
  5071  0109F6  69F7               	setf	(_prec+1)& (0+255),b
  5072                           
  5073                           ; BSR set to: 0
  5074                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 710:         done = 0;
  5075  0109F8  0E00               	movlw	0
  5076  0109FA  6FE5               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  5077  0109FC  0E00               	movlw	0
  5078  0109FE  D013               	goto	L1
  5079  010A00                     l13513:
  5080                           
  5081                           ; BSR set to: 0
  5082                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 714:                     flag
      +                          s |= (1 << 0);
  5083  010A00  802D               	bsf	_flags^0,0,c
  5084  010A02                     l13515:
  5085                           
  5086                           ; BSR set to: 0
  5087                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 715:                     ++*f
      +                          mt;
  5088  010A02  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5089  010A04  6ED9               	movwf	fsr2l,c
  5090  010A06  6ADA               	clrf	fsr2h,c
  5091  010A08  2ADE               	incf	postinc2,f,c
  5092  010A0A  0E00               	movlw	0
  5093  010A0C  22DD               	addwfc	postdec2,f,c
  5094                           
  5095                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 716:                     brea
      +                          k;
  5096  010A0E  D031               	goto	l13539
  5097  010A10                     l13517:
  5098                           
  5099                           ; BSR set to: 0
  5100                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 718:                     flag
      +                          s |= (1 << 1);
  5101  010A10  822D               	bsf	_flags^0,1,c
  5102  010A12  D7F7               	goto	l13515
  5103  010A14                     l13521:
  5104                           
  5105                           ; BSR set to: 0
  5106                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 722:                     flag
      +                          s |= (1 << 2);
  5107  010A14  842D               	bsf	_flags^0,2,c
  5108  010A16  D7F5               	goto	l13515
  5109  010A18                     l13525:
  5110                           
  5111                           ; BSR set to: 0
  5112                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 726:                     flag
      +                          s |= (1 << 3);
  5113  010A18  862D               	bsf	_flags^0,3,c
  5114  010A1A  D7F3               	goto	l13515
  5115  010A1C                     l13529:
  5116                           
  5117                           ; BSR set to: 0
  5118                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 730:                     flag
      +                          s |= (1 << 4);
  5119  010A1C  882D               	bsf	_flags^0,4,c
  5120  010A1E  D7F1               	goto	l13515
  5121  010A20                     l13533:
  5122                           
  5123                           ; BSR set to: 0
  5124                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 734:                     done
      +                           = 1;
  5125  010A20  0E00               	movlw	0
  5126  010A22  6FE5               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  5127  010A24  0E01               	movlw	1
  5128  010A26                     L1:
  5129  010A26  6FE4               	movwf	vfpfcnvrt@done& (0+255),b
  5130                           
  5131                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 735:                     brea
      +                          k;
  5132  010A28  D024               	goto	l13539
  5133  010A2A                     l13537:
  5134                           
  5135                           ; BSR set to: 0
  5136  010A2A  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5137  010A2C  6ED9               	movwf	fsr2l,c
  5138  010A2E  6ADA               	clrf	fsr2h,c
  5139  010A30  006F FF7B FFF6     	movff	postinc2,tblptrl
  5140  010A36  006F FF77 FFF7     	movff	postdec2,tblptrh
  5141  010A3C                     	if	0	;tblptru may be non-zero
  5142  010A3C                     	endif
  5143  010A3C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5144  010A3C  0E00               	movlw	low (__mediumconst shr (0+16))
  5145  010A3E  6EF8               	movwf	tblptru,c
  5146  010A40                     	endif
  5147  010A40  0008               	tblrd		*
  5148  010A42  50F5               	movf	tablat,w,c
  5149  010A44  6FD6               	movwf	??_vfpfcnvrt& (0+255),b
  5150  010A46  6BD7               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  5151                           
  5152                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5153                           ; Switch size 1, requested type "simple"
  5154                           ; Number of cases is 1, Range of values is 0 to 0
  5155                           ; switch strategies available:
  5156                           ; Name         Instructions Cycles
  5157                           ; simple_byte            4     3 (average)
  5158                           ;	Chosen strategy is simple_byte
  5159  010A48  51D7               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5160  010A4A  0A00               	xorlw	0	; case 0
  5161  010A4C  A4D8               	btfss	status,2,c
  5162  010A4E  D7E8               	goto	l13533
  5163                           
  5164                           ; BSR set to: 0
  5165                           ; Switch size 1, requested type "simple"
  5166                           ; Number of cases is 5, Range of values is 32 to 48
  5167                           ; switch strategies available:
  5168                           ; Name         Instructions Cycles
  5169                           ; simple_byte           16     9 (average)
  5170                           ;	Chosen strategy is simple_byte
  5171  010A50  51D6               	movf	??_vfpfcnvrt& (0+255),w,b
  5172  010A52  0A20               	xorlw	32	; case 32
  5173  010A54  B4D8               	btfsc	status,2,c
  5174  010A56  D7E0               	goto	l13525
  5175  010A58  0A03               	xorlw	3	; case 35
  5176  010A5A  B4D8               	btfsc	status,2,c
  5177  010A5C  D7DF               	goto	l13529
  5178  010A5E  0A08               	xorlw	8	; case 43
  5179  010A60  B4D8               	btfsc	status,2,c
  5180  010A62  D7D8               	goto	l13521
  5181  010A64  0A06               	xorlw	6	; case 45
  5182  010A66  B4D8               	btfsc	status,2,c
  5183  010A68  D7CB               	goto	l13513
  5184  010A6A  0A1D               	xorlw	29	; case 48
  5185  010A6C  B4D8               	btfsc	status,2,c
  5186  010A6E  D7D0               	goto	l13517
  5187  010A70  D7D7               	goto	l13533
  5188  010A72                     l13539:
  5189                           
  5190                           ; BSR set to: 0
  5191                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 711:         while (!done) {
  5192  010A72  51E4               	movf	vfpfcnvrt@done& (0+255),w,b
  5193  010A74  11E5               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  5194  010A76  B4D8               	btfsc	status,2,c
  5195  010A78  D7D8               	goto	l13537
  5196                           
  5197                           ; BSR set to: 0
  5198                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 738:         if (flags & (1 <
      +                          < 0)) {
  5199  010A7A  B02D               	btfsc	_flags^0,0,c
  5200                           
  5201                           ; BSR set to: 0
  5202                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 739:             flags &= ~(1
      +                           << 1);
  5203  010A7C  922D               	bcf	_flags^0,1,c
  5204                           
  5205                           ; BSR set to: 0
  5206                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 745:         if ((*fmt)[0] ==
      +                           '*') {
  5207  010A7E  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5208  010A80  6ED9               	movwf	fsr2l,c
  5209  010A82  6ADA               	clrf	fsr2h,c
  5210  010A84  006F FF7B FFF6     	movff	postinc2,tblptrl
  5211  010A8A  006F FF77 FFF7     	movff	postdec2,tblptrh
  5212  010A90                     	if	0	;tblptru may be non-zero
  5213  010A90                     	endif
  5214  010A90                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5215  010A90  0E00               	movlw	low (__mediumconst shr (0+16))
  5216  010A92  6EF8               	movwf	tblptru,c
  5217  010A94                     	endif
  5218  010A94  0008               	tblrd		*
  5219  010A96  50F5               	movf	tablat,w,c
  5220  010A98  0A2A               	xorlw	42
  5221  010A9A  A4D8               	btfss	status,2,c
  5222  010A9C  D02A               	goto	l13551
  5223                           
  5224                           ; BSR set to: 0
  5225                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 746:             ++*fmt;
  5226  010A9E  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5227  010AA0  6ED9               	movwf	fsr2l,c
  5228  010AA2  6ADA               	clrf	fsr2h,c
  5229  010AA4  2ADE               	incf	postinc2,f,c
  5230  010AA6  0E00               	movlw	0
  5231  010AA8  22DD               	addwfc	postdec2,f,c
  5232                           
  5233                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 747:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  5234  010AAA  0060  F353  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  5235  010AB0  0060  F357  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  5236  010AB6  006F FF7C  F0D6    	movff	indf2,??_vfpfcnvrt
  5237  010ABC  0E02               	movlw	2
  5238  010ABE  26DE               	addwf	postinc2,f,c
  5239  010AC0  006F FF7C  F0D7    	movff	indf2,??_vfpfcnvrt+1
  5240  010AC6  0E00               	movlw	0
  5241  010AC8  22DD               	addwfc	postdec2,f,c
  5242  010ACA  0060  F35B  FFD9   	movff	??_vfpfcnvrt,fsr2l
  5243  010AD0  0060  F35F  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  5244  010AD6  006F FF78  F0F4    	movff	postinc2,_width
  5245  010ADC  006F FF74  F0F5    	movff	postdec2,_width+1
  5246                           
  5247                           ; BSR set to: 0
  5248                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 748:             if (width < 
      +                          0) {
  5249  010AE2  AFF5               	btfss	(_width+1)& (0+255),7,b
  5250  010AE4  D039               	goto	u13430
  5251                           
  5252                           ; BSR set to: 0
  5253                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 749:                 flags |=
      +                           (1 << 0);
  5254  010AE6  802D               	bsf	_flags^0,0,c
  5255                           
  5256                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 750:                 width = 
      +                          -width;
  5257  010AE8  6DF4               	negf	_width& (0+255),b
  5258  010AEA  1FF5               	comf	(_width+1)& (0+255),f,b
  5259  010AEC  B0D8               	btfsc	status,0,c
  5260  010AEE  2BF5               	incf	(_width+1)& (0+255),f,b
  5261  010AF0  D033               	goto	u13430
  5262  010AF2                     l13551:
  5263                           
  5264                           ; BSR set to: 0
  5265                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 753:             width = atoi
      +                          (*fmt);
  5266  010AF2  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5267  010AF4  6ED9               	movwf	fsr2l,c
  5268  010AF6  6ADA               	clrf	fsr2h,c
  5269  010AF8  006F FF78  F066    	movff	postinc2,atoi@s
  5270  010AFE  006F FF74  F067    	movff	postdec2,atoi@s+1
  5271  010B04  ECDC  F097         	call	_atoi	;wreg free
  5272  010B08  C066  F0F4         	movff	?_atoi,_width
  5273  010B0C  C067  F0F5         	movff	?_atoi+1,_width+1
  5274                           
  5275                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 754:             while ((0 &&
      +                           isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  5276  010B10  D006               	goto	l13557
  5277  010B12                     l13553:
  5278                           
  5279                           ; BSR set to: 0
  5280                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 755:                 ++*fmt;
  5281  010B12  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5282  010B14  6ED9               	movwf	fsr2l,c
  5283  010B16  6ADA               	clrf	fsr2h,c
  5284  010B18  2ADE               	incf	postinc2,f,c
  5285  010B1A  0E00               	movlw	0
  5286  010B1C  22DD               	addwfc	postdec2,f,c
  5287  010B1E                     l13557:
  5288                           
  5289                           ; BSR set to: 0
  5290  010B1E  0ED0               	movlw	208
  5291  010B20  6FD6               	movwf	??_vfpfcnvrt& (0+255),b
  5292  010B22  0EFF               	movlw	255
  5293  010B24  6FD7               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  5294  010B26  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5295  010B28  6ED9               	movwf	fsr2l,c
  5296  010B2A  6ADA               	clrf	fsr2h,c
  5297  010B2C  006F FF7B FFF6     	movff	postinc2,tblptrl
  5298  010B32  006F FF77 FFF7     	movff	postdec2,tblptrh
  5299  010B38                     	if	0	;tblptru may be non-zero
  5300  010B38                     	endif
  5301  010B38                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5302  010B38  0E00               	movlw	low (__mediumconst shr (0+16))
  5303  010B3A  6EF8               	movwf	tblptru,c
  5304  010B3C                     	endif
  5305  010B3C  0008               	tblrd		*
  5306  010B3E  50F5               	movf	tablat,w,c
  5307  010B40  6FD8               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  5308  010B42  6BD9               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  5309  010B44  51D6               	movf	??_vfpfcnvrt& (0+255),w,b
  5310  010B46  27D8               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  5311  010B48  51D7               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5312  010B4A  23D9               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  5313  010B4C  51D9               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  5314  010B4E  E104               	bnz	u13430
  5315  010B50  0E0A               	movlw	10
  5316  010B52  5DD8               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  5317  010B54  A0D8               	btfss	status,0,c
  5318  010B56  D7DD               	goto	l13553
  5319  010B58                     u13430:
  5320                           
  5321                           ; BSR set to: 0
  5322                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 762:         if ((*fmt)[0] ==
      +                           '.') {
  5323  010B58  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5324  010B5A  6ED9               	movwf	fsr2l,c
  5325  010B5C  6ADA               	clrf	fsr2h,c
  5326  010B5E  006F FF7B FFF6     	movff	postinc2,tblptrl
  5327  010B64  006F FF77 FFF7     	movff	postdec2,tblptrh
  5328  010B6A                     	if	0	;tblptru may be non-zero
  5329  010B6A                     	endif
  5330  010B6A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5331  010B6A  0E00               	movlw	low (__mediumconst shr (0+16))
  5332  010B6C  6EF8               	movwf	tblptru,c
  5333  010B6E                     	endif
  5334  010B6E  0008               	tblrd		*
  5335  010B70  50F5               	movf	tablat,w,c
  5336  010B72  0A2E               	xorlw	46
  5337  010B74  A4D8               	btfss	status,2,c
  5338  010B76  D070               	goto	u13460
  5339                           
  5340                           ; BSR set to: 0
  5341                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 763:             prec = 0;
  5342  010B78  0E00               	movlw	0
  5343  010B7A  6FF7               	movwf	(_prec+1)& (0+255),b
  5344  010B7C  0E00               	movlw	0
  5345  010B7E  6FF6               	movwf	_prec& (0+255),b
  5346                           
  5347                           ; BSR set to: 0
  5348                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 764:             ++*fmt;
  5349  010B80  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5350  010B82  6ED9               	movwf	fsr2l,c
  5351  010B84  6ADA               	clrf	fsr2h,c
  5352  010B86  2ADE               	incf	postinc2,f,c
  5353  010B88  0E00               	movlw	0
  5354  010B8A  22DD               	addwfc	postdec2,f,c
  5355                           
  5356                           ; BSR set to: 0
  5357                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 765:             if ((*fmt)[0
      +                          ] == '*') {
  5358  010B8C  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5359  010B8E  6ED9               	movwf	fsr2l,c
  5360  010B90  6ADA               	clrf	fsr2h,c
  5361  010B92  006F FF7B FFF6     	movff	postinc2,tblptrl
  5362  010B98  006F FF77 FFF7     	movff	postdec2,tblptrh
  5363  010B9E                     	if	0	;tblptru may be non-zero
  5364  010B9E                     	endif
  5365  010B9E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5366  010B9E  0E00               	movlw	low (__mediumconst shr (0+16))
  5367  010BA0  6EF8               	movwf	tblptru,c
  5368  010BA2                     	endif
  5369  010BA2  0008               	tblrd		*
  5370  010BA4  50F5               	movf	tablat,w,c
  5371  010BA6  0A2A               	xorlw	42
  5372  010BA8  A4D8               	btfss	status,2,c
  5373  010BAA  D023               	goto	l13569
  5374                           
  5375                           ; BSR set to: 0
  5376                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 766:                 ++*fmt;
  5377  010BAC  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5378  010BAE  6ED9               	movwf	fsr2l,c
  5379  010BB0  6ADA               	clrf	fsr2h,c
  5380  010BB2  2ADE               	incf	postinc2,f,c
  5381  010BB4  0E00               	movlw	0
  5382  010BB6  22DD               	addwfc	postdec2,f,c
  5383                           
  5384                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 767:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  5385  010BB8  0060  F353  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  5386  010BBE  0060  F357  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  5387  010BC4  006F FF7C  F0D6    	movff	indf2,??_vfpfcnvrt
  5388  010BCA  0E02               	movlw	2
  5389  010BCC  26DE               	addwf	postinc2,f,c
  5390  010BCE  006F FF7C  F0D7    	movff	indf2,??_vfpfcnvrt+1
  5391  010BD4  0E00               	movlw	0
  5392  010BD6  22DD               	addwfc	postdec2,f,c
  5393  010BD8  0060  F35B  FFD9   	movff	??_vfpfcnvrt,fsr2l
  5394  010BDE  0060  F35F  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  5395  010BE4  006F FF78  F0F6    	movff	postinc2,_prec
  5396  010BEA  006F FF74  F0F7    	movff	postdec2,_prec+1
  5397                           
  5398                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 768:             } else {
  5399  010BF0  D033               	goto	u13460
  5400  010BF2                     l13569:
  5401                           
  5402                           ; BSR set to: 0
  5403                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 769:                 prec = a
      +                          toi(*fmt);
  5404  010BF2  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5405  010BF4  6ED9               	movwf	fsr2l,c
  5406  010BF6  6ADA               	clrf	fsr2h,c
  5407  010BF8  006F FF78  F066    	movff	postinc2,atoi@s
  5408  010BFE  006F FF74  F067    	movff	postdec2,atoi@s+1
  5409  010C04  ECDC  F097         	call	_atoi	;wreg free
  5410  010C08  C066  F0F6         	movff	?_atoi,_prec
  5411  010C0C  C067  F0F7         	movff	?_atoi+1,_prec+1
  5412                           
  5413                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 770:                 while ((
      +                          0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  5414  010C10  D006               	goto	l13575
  5415  010C12                     l13571:
  5416                           
  5417                           ; BSR set to: 0
  5418                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 771:                     ++*f
      +                          mt;
  5419  010C12  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5420  010C14  6ED9               	movwf	fsr2l,c
  5421  010C16  6ADA               	clrf	fsr2h,c
  5422  010C18  2ADE               	incf	postinc2,f,c
  5423  010C1A  0E00               	movlw	0
  5424  010C1C  22DD               	addwfc	postdec2,f,c
  5425  010C1E                     l13575:
  5426                           
  5427                           ; BSR set to: 0
  5428  010C1E  0ED0               	movlw	208
  5429  010C20  6FD6               	movwf	??_vfpfcnvrt& (0+255),b
  5430  010C22  0EFF               	movlw	255
  5431  010C24  6FD7               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  5432  010C26  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5433  010C28  6ED9               	movwf	fsr2l,c
  5434  010C2A  6ADA               	clrf	fsr2h,c
  5435  010C2C  006F FF7B FFF6     	movff	postinc2,tblptrl
  5436  010C32  006F FF77 FFF7     	movff	postdec2,tblptrh
  5437  010C38                     	if	0	;tblptru may be non-zero
  5438  010C38                     	endif
  5439  010C38                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5440  010C38  0E00               	movlw	low (__mediumconst shr (0+16))
  5441  010C3A  6EF8               	movwf	tblptru,c
  5442  010C3C                     	endif
  5443  010C3C  0008               	tblrd		*
  5444  010C3E  50F5               	movf	tablat,w,c
  5445  010C40  6FD8               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  5446  010C42  6BD9               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  5447  010C44  51D6               	movf	??_vfpfcnvrt& (0+255),w,b
  5448  010C46  27D8               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  5449  010C48  51D7               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5450  010C4A  23D9               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  5451  010C4C  51D9               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  5452  010C4E  E104               	bnz	u13460
  5453  010C50  0E0A               	movlw	10
  5454  010C52  5DD8               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  5455  010C54  A0D8               	btfss	status,0,c
  5456  010C56  D7DD               	goto	l13571
  5457  010C58                     u13460:
  5458                           
  5459                           ; BSR set to: 0
  5460                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 779:         ct[0] = (char)to
      +                          lower((int)(*fmt)[0]);
  5461  010C58  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5462  010C5A  6ED9               	movwf	fsr2l,c
  5463  010C5C  6ADA               	clrf	fsr2h,c
  5464  010C5E  006F FF7B FFF6     	movff	postinc2,tblptrl
  5465  010C64  006F FF77 FFF7     	movff	postdec2,tblptrh
  5466  010C6A                     	if	0	;tblptru may be non-zero
  5467  010C6A                     	endif
  5468  010C6A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5469  010C6A  0E00               	movlw	low (__mediumconst shr (0+16))
  5470  010C6C  6EF8               	movwf	tblptru,c
  5471  010C6E                     	endif
  5472  010C6E  0008               	tblrd		*
  5473  010C70  50F5               	movf	tablat,w,c
  5474  010C72  6F66               	movwf	tolower@c& (0+255),b
  5475  010C74  6B67               	clrf	(tolower@c+1)& (0+255),b
  5476  010C76  EC0C  F0A4         	call	_tolower	;wreg free
  5477  010C7A  5166               	movf	?_tolower& (0+255),w,b
  5478  010C7C  6FE9               	movwf	vfpfcnvrt@ct& (0+255),b
  5479                           
  5480                           ; BSR set to: 0
  5481                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 780:         if (ct[0]) {
  5482  010C7E  51E9               	movf	vfpfcnvrt@ct& (0+255),w,b
  5483  010C80  B4D8               	btfsc	status,2,c
  5484  010C82  D03D               	goto	l13587
  5485                           
  5486                           ; BSR set to: 0
  5487                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 781:             ct[1] = (cha
      +                          r)tolower((int)(*fmt)[1]);
  5488  010C84  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5489  010C86  6ED9               	movwf	fsr2l,c
  5490  010C88  6ADA               	clrf	fsr2h,c
  5491  010C8A  006F FF78  F0D6    	movff	postinc2,??_vfpfcnvrt
  5492  010C90  006F FF74  F0D7    	movff	postdec2,??_vfpfcnvrt+1
  5493  010C96  0E01               	movlw	1
  5494  010C98  27D6               	addwf	??_vfpfcnvrt& (0+255),f,b
  5495  010C9A  0E00               	movlw	0
  5496  010C9C  23D7               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  5497  010C9E  0060  F35B  FFF6   	movff	??_vfpfcnvrt,tblptrl
  5498  010CA4  0060  F35F  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  5499  010CAA                     	if	0	;tblptru may be non-zero
  5500  010CAA                     	endif
  5501  010CAA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5502  010CAA  0E00               	movlw	low (__mediumconst shr (0+16))
  5503  010CAC  6EF8               	movwf	tblptru,c
  5504  010CAE                     	endif
  5505  010CAE  0008               	tblrd		*
  5506  010CB0  50F5               	movf	tablat,w,c
  5507  010CB2  6F66               	movwf	tolower@c& (0+255),b
  5508  010CB4  6B67               	clrf	(tolower@c+1)& (0+255),b
  5509  010CB6  EC0C  F0A4         	call	_tolower	;wreg free
  5510  010CBA  5166               	movf	?_tolower& (0+255),w,b
  5511  010CBC  6FEA               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  5512                           
  5513                           ; BSR set to: 0
  5514                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 782:             if (ct[1]) {
  5515  010CBE  51EA               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  5516  010CC0  B4D8               	btfsc	status,2,c
  5517  010CC2  D01D               	goto	l13587
  5518                           
  5519                           ; BSR set to: 0
  5520                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 783:                 ct[2] = 
      +                          (char)tolower((int)(*fmt)[2]);
  5521  010CC4  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5522  010CC6  6ED9               	movwf	fsr2l,c
  5523  010CC8  6ADA               	clrf	fsr2h,c
  5524  010CCA  006F FF78  F0D6    	movff	postinc2,??_vfpfcnvrt
  5525  010CD0  006F FF74  F0D7    	movff	postdec2,??_vfpfcnvrt+1
  5526  010CD6  0E02               	movlw	2
  5527  010CD8  27D6               	addwf	??_vfpfcnvrt& (0+255),f,b
  5528  010CDA  0E00               	movlw	0
  5529  010CDC  23D7               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  5530  010CDE  0060  F35B  FFF6   	movff	??_vfpfcnvrt,tblptrl
  5531  010CE4  0060  F35F  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  5532  010CEA                     	if	0	;tblptru may be non-zero
  5533  010CEA                     	endif
  5534  010CEA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5535  010CEA  0E00               	movlw	low (__mediumconst shr (0+16))
  5536  010CEC  6EF8               	movwf	tblptru,c
  5537  010CEE                     	endif
  5538  010CEE  0008               	tblrd		*
  5539  010CF0  50F5               	movf	tablat,w,c
  5540  010CF2  6F66               	movwf	tolower@c& (0+255),b
  5541  010CF4  6B67               	clrf	(tolower@c+1)& (0+255),b
  5542  010CF6  EC0C  F0A4         	call	_tolower	;wreg free
  5543  010CFA  5166               	movf	?_tolower& (0+255),w,b
  5544  010CFC  6FEB               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  5545  010CFE                     l13587:
  5546                           
  5547                           ; BSR set to: 0
  5548                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 942:         if (ct[0] == 'f'
      +                          ) {
  5549  010CFE  0E66               	movlw	102
  5550  010D00  19E9               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  5551  010D02  A4D8               	btfss	status,2,c
  5552  010D04  D04C               	goto	l13599
  5553                           
  5554                           ; BSR set to: 0
  5555                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 944:             c = (*fmt)[0
      +                          ];
  5556  010D06  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5557  010D08  6ED9               	movwf	fsr2l,c
  5558  010D0A  6ADA               	clrf	fsr2h,c
  5559  010D0C  006F FF7B FFF6     	movff	postinc2,tblptrl
  5560  010D12  006F FF77 FFF7     	movff	postdec2,tblptrh
  5561  010D18                     	if	0	;tblptru may be non-zero
  5562  010D18                     	endif
  5563  010D18                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5564  010D18  0E00               	movlw	low (__mediumconst shr (0+16))
  5565  010D1A  6EF8               	movwf	tblptru,c
  5566  010D1C                     	endif
  5567  010D1C  0008               	tblrd		*
  5568  010D1E  006F FFD4  F0E8    	movff	tablat,vfpfcnvrt@c
  5569                           
  5570                           ; BSR set to: 0
  5571                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 945:             ++*fmt;
  5572  010D24  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5573  010D26  6ED9               	movwf	fsr2l,c
  5574  010D28  6ADA               	clrf	fsr2h,c
  5575  010D2A  2ADE               	incf	postinc2,f,c
  5576  010D2C  0E00               	movlw	0
  5577  010D2E  22DD               	addwfc	postdec2,f,c
  5578                           
  5579                           ; BSR set to: 0
  5580                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 946:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  5581  010D30  0060  F353  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  5582  010D36  0060  F357  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  5583  010D3C  006F FF7C  F0D6    	movff	indf2,??_vfpfcnvrt
  5584  010D42  0E04               	movlw	4
  5585  010D44  26DE               	addwf	postinc2,f,c
  5586  010D46  006F FF7C  F0D7    	movff	indf2,??_vfpfcnvrt+1
  5587  010D4C  0E00               	movlw	0
  5588  010D4E  22DD               	addwfc	postdec2,f,c
  5589  010D50  0060  F35B  FFD9   	movff	??_vfpfcnvrt,fsr2l
  5590  010D56  0060  F35F  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  5591  010D5C  006F FF78  F0EC    	movff	postinc2,vfpfcnvrt@f
  5592  010D62  006F FF78  F0ED    	movff	postinc2,vfpfcnvrt@f+1
  5593  010D68  006F FF78  F0EE    	movff	postinc2,vfpfcnvrt@f+2
  5594  010D6E  006F FF78  F0EF    	movff	postinc2,vfpfcnvrt@f+3
  5595  010D74                     l13595:
  5596                           
  5597                           ; BSR set to: 0
  5598                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 948:             return efgto
      +                          a(fp, f, c);
  5599  010D74  C0D1  F093         	movff	vfpfcnvrt@fp,efgtoa@fp
  5600  010D78  C0D2  F094         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  5601  010D7C  C0EC  F095         	movff	vfpfcnvrt@f,efgtoa@f
  5602  010D80  C0ED  F096         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  5603  010D84  C0EE  F097         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  5604  010D88  C0EF  F098         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  5605  010D8C  C0E8  F099         	movff	vfpfcnvrt@c,efgtoa@c
  5606  010D90  EC00  F080         	call	_efgtoa	;wreg free
  5607  010D94  C093  F0D1         	movff	?_efgtoa,?_vfpfcnvrt
  5608  010D98  C094  F0D2         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  5609  010D9C  0012               	return	
  5610  010D9E                     l13599:
  5611                           
  5612                           ; BSR set to: 0
  5613                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 950:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  5614  010D9E  0EE9               	movlw	low vfpfcnvrt@ct
  5615  010DA0  6F64               	movwf	strncmp@_l& (0+255),b
  5616  010DA2  6B65               	clrf	(strncmp@_l+1)& (0+255),b
  5617  010DA4  0EE1               	movlw	low STR_38
  5618  010DA6  6F66               	movwf	strncmp@_r& (0+255),b
  5619  010DA8  0EFF               	movlw	high STR_38
  5620  010DAA  6F67               	movwf	(strncmp@_r+1)& (0+255),b
  5621  010DAC  0E00               	movlw	0
  5622  010DAE  6F69               	movwf	(strncmp@n+1)& (0+255),b
  5623  010DB0  0E02               	movlw	2
  5624  010DB2  6F68               	movwf	strncmp@n& (0+255),b
  5625  010DB4  EC91  F094         	call	_strncmp	;wreg free
  5626  010DB8  5164               	movf	?_strncmp& (0+255),w,b
  5627  010DBA  1165               	iorwf	(?_strncmp+1)& (0+255),w,b
  5628  010DBC  A4D8               	btfss	status,2,c
  5629  010DBE  D05E               	goto	l13615
  5630                           
  5631                           ; BSR set to: 0
  5632                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 952:             c = (*fmt)[1
      +                          ];
  5633  010DC0  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5634  010DC2  6ED9               	movwf	fsr2l,c
  5635  010DC4  6ADA               	clrf	fsr2h,c
  5636  010DC6  006F FF78  F0D6    	movff	postinc2,??_vfpfcnvrt
  5637  010DCC  006F FF74  F0D7    	movff	postdec2,??_vfpfcnvrt+1
  5638  010DD2  0E01               	movlw	1
  5639  010DD4  27D6               	addwf	??_vfpfcnvrt& (0+255),f,b
  5640  010DD6  0E00               	movlw	0
  5641  010DD8  23D7               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  5642  010DDA  0060  F35B  FFF6   	movff	??_vfpfcnvrt,tblptrl
  5643  010DE0  0060  F35F  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  5644  010DE6                     	if	0	;tblptru may be non-zero
  5645  010DE6                     	endif
  5646  010DE6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5647  010DE6  0E00               	movlw	low (__mediumconst shr (0+16))
  5648  010DE8  6EF8               	movwf	tblptru,c
  5649  010DEA                     	endif
  5650  010DEA  0008               	tblrd		*
  5651  010DEC  006F FFD4  F0E8    	movff	tablat,vfpfcnvrt@c
  5652                           
  5653                           ; BSR set to: 0
  5654                           
  5655                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 953:             if ((0 && is
      +                          upper((int)(*fmt)[0]), ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  5656  010DF2  0EBF               	movlw	191
  5657  010DF4  6FD6               	movwf	??_vfpfcnvrt& (0+255),b
  5658  010DF6  0EFF               	movlw	255
  5659  010DF8  6FD7               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  5660  010DFA  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5661  010DFC  6ED9               	movwf	fsr2l,c
  5662  010DFE  6ADA               	clrf	fsr2h,c
  5663  010E00  006F FF7B FFF6     	movff	postinc2,tblptrl
  5664  010E06  006F FF77 FFF7     	movff	postdec2,tblptrh
  5665  010E0C                     	if	0	;tblptru may be non-zero
  5666  010E0C                     	endif
  5667  010E0C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5668  010E0C  0E00               	movlw	low (__mediumconst shr (0+16))
  5669  010E0E  6EF8               	movwf	tblptru,c
  5670  010E10                     	endif
  5671  010E10  0008               	tblrd		*
  5672  010E12  50F5               	movf	tablat,w,c
  5673  010E14  6FD8               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  5674  010E16  6BD9               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  5675  010E18  51D6               	movf	??_vfpfcnvrt& (0+255),w,b
  5676  010E1A  27D8               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  5677  010E1C  51D7               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5678  010E1E  23D9               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  5679  010E20  51D9               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  5680  010E22  E102               	bnz	l13609
  5681  010E24  0E1A               	movlw	26
  5682  010E26  5DD8               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  5683  010E28                     l13609:
  5684                           
  5685                           ; BSR set to: 0
  5686                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 956:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  5687  010E28  0060  F353  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  5688  010E2E  0060  F357  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  5689  010E34  006F FF7C  F0D6    	movff	indf2,??_vfpfcnvrt
  5690  010E3A  0E04               	movlw	4
  5691  010E3C  26DE               	addwf	postinc2,f,c
  5692  010E3E  006F FF7C  F0D7    	movff	indf2,??_vfpfcnvrt+1
  5693  010E44  0E00               	movlw	0
  5694  010E46  22DD               	addwfc	postdec2,f,c
  5695  010E48  0060  F35B  FFD9   	movff	??_vfpfcnvrt,fsr2l
  5696  010E4E  0060  F35F  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  5697  010E54  006F FF78  F0EC    	movff	postinc2,vfpfcnvrt@f
  5698  010E5A  006F FF78  F0ED    	movff	postinc2,vfpfcnvrt@f+1
  5699  010E60  006F FF78  F0EE    	movff	postinc2,vfpfcnvrt@f+2
  5700  010E66  006F FF78  F0EF    	movff	postinc2,vfpfcnvrt@f+3
  5701                           
  5702                           ; BSR set to: 0
  5703                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 958:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  5704                           
  5705                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 957:             }
  5706  010E6C  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5707  010E6E  6ED9               	movwf	fsr2l,c
  5708  010E70  6ADA               	clrf	fsr2h,c
  5709  010E72  0E02               	movlw	2
  5710  010E74  26DE               	addwf	postinc2,f,c
  5711  010E76  0E00               	movlw	0
  5712  010E78  22DD               	addwfc	postdec2,f,c
  5713  010E7A  D77C               	goto	l13595
  5714  010E7C                     l13615:
  5715                           
  5716                           ; BSR set to: 0
  5717                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1171:         if (*fmt[0] == 
      +                          's' || !strncmp(*fmt, "lls", ((sizeof("lls")/sizeof("lls"[0]))-1))) {
  5718  010E7C  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5719  010E7E  6ED9               	movwf	fsr2l,c
  5720  010E80  6ADA               	clrf	fsr2h,c
  5721  010E82  006F FF7B FFF6     	movff	postinc2,tblptrl
  5722  010E88  006F FF77 FFF7     	movff	postdec2,tblptrh
  5723  010E8E                     	if	0	;tblptru may be non-zero
  5724  010E8E                     	endif
  5725  010E8E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5726  010E8E  0E00               	movlw	low (__mediumconst shr (0+16))
  5727  010E90  6EF8               	movwf	tblptru,c
  5728  010E92                     	endif
  5729  010E92  0008               	tblrd		*
  5730  010E94  50F5               	movf	tablat,w,c
  5731  010E96  0A73               	xorlw	115
  5732  010E98  B4D8               	btfsc	status,2,c
  5733  010E9A  D017               	goto	u13530
  5734                           
  5735                           ; BSR set to: 0
  5736  010E9C  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5737  010E9E  6ED9               	movwf	fsr2l,c
  5738  010EA0  6ADA               	clrf	fsr2h,c
  5739  010EA2  006F FF78  F064    	movff	postinc2,strncmp@_l
  5740  010EA8  006F FF74  F065    	movff	postdec2,strncmp@_l+1
  5741  010EAE  0EDD               	movlw	low STR_43
  5742  010EB0  6F66               	movwf	strncmp@_r& (0+255),b
  5743  010EB2  0EFF               	movlw	high STR_43
  5744  010EB4  6F67               	movwf	(strncmp@_r+1)& (0+255),b
  5745  010EB6  0E00               	movlw	0
  5746  010EB8  6F69               	movwf	(strncmp@n+1)& (0+255),b
  5747  010EBA  0E03               	movlw	3
  5748  010EBC  6F68               	movwf	strncmp@n& (0+255),b
  5749  010EBE  EC91  F094         	call	_strncmp	;wreg free
  5750  010EC2  5164               	movf	?_strncmp& (0+255),w,b
  5751  010EC4  1165               	iorwf	(?_strncmp+1)& (0+255),w,b
  5752  010EC6  A4D8               	btfss	status,2,c
  5753  010EC8  D04A               	goto	l13633
  5754  010ECA                     u13530:
  5755                           
  5756                           ; BSR set to: 0
  5757                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1173:    *fmt += *fmt[0] == '
      +                          s' ? 1 : ((sizeof("lls")/sizeof("lls"[0]))-1);
  5758  010ECA  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5759  010ECC  6ED9               	movwf	fsr2l,c
  5760  010ECE  6ADA               	clrf	fsr2h,c
  5761  010ED0  006F FF7B FFF6     	movff	postinc2,tblptrl
  5762  010ED6  006F FF77 FFF7     	movff	postdec2,tblptrh
  5763  010EDC                     	if	0	;tblptru may be non-zero
  5764  010EDC                     	endif
  5765  010EDC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5766  010EDC  0E00               	movlw	low (__mediumconst shr (0+16))
  5767  010EDE  6EF8               	movwf	tblptru,c
  5768  010EE0                     	endif
  5769  010EE0  0008               	tblrd		*
  5770  010EE2  50F5               	movf	tablat,w,c
  5771  010EE4  0A73               	xorlw	115
  5772  010EE6  B4D8               	btfsc	status,2,c
  5773  010EE8  D004               	goto	l13623
  5774                           
  5775                           ; BSR set to: 0
  5776  010EEA  0E00               	movlw	0
  5777  010EEC  6FE7               	movwf	(_vfpfcnvrt$4219+1)& (0+255),b
  5778  010EEE  0E03               	movlw	3
  5779  010EF0  D003               	goto	L2
  5780  010EF2                     l13623:
  5781                           
  5782                           ; BSR set to: 0
  5783  010EF2  0E00               	movlw	0
  5784  010EF4  6FE7               	movwf	(_vfpfcnvrt$4219+1)& (0+255),b
  5785  010EF6  0E01               	movlw	1
  5786  010EF8                     L2:
  5787  010EF8  6FE6               	movwf	_vfpfcnvrt$4219& (0+255),b
  5788                           
  5789                           ; BSR set to: 0
  5790  010EFA  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5791  010EFC  6ED9               	movwf	fsr2l,c
  5792  010EFE  6ADA               	clrf	fsr2h,c
  5793  010F00  51E6               	movf	_vfpfcnvrt$4219& (0+255),w,b
  5794  010F02  26DE               	addwf	postinc2,f,c
  5795  010F04  51E7               	movf	(_vfpfcnvrt$4219+1)& (0+255),w,b
  5796  010F06  22DD               	addwfc	postdec2,f,c
  5797                           
  5798                           ; BSR set to: 0
  5799                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1174:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  5800  010F08  0060  F353  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  5801  010F0E  0060  F357  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  5802  010F14  006F FF7C  F0D6    	movff	indf2,??_vfpfcnvrt
  5803  010F1A  0E02               	movlw	2
  5804  010F1C  26DE               	addwf	postinc2,f,c
  5805  010F1E  006F FF7C  F0D7    	movff	indf2,??_vfpfcnvrt+1
  5806  010F24  0E00               	movlw	0
  5807  010F26  22DD               	addwfc	postdec2,f,c
  5808  010F28  0060  F35B  FFD9   	movff	??_vfpfcnvrt,fsr2l
  5809  010F2E  0060  F35F  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  5810  010F34  006F FF78  F0E2    	movff	postinc2,vfpfcnvrt@cp
  5811  010F3A  006F FF74  F0E3    	movff	postdec2,vfpfcnvrt@cp+1
  5812                           
  5813                           ; BSR set to: 0
  5814                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1176:             return stoa
      +                          (fp, cp);
  5815  010F40  C0D1  F06A         	movff	vfpfcnvrt@fp,stoa@fp
  5816  010F44  C0D2  F06B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  5817  010F48  C0E2  F06C         	movff	vfpfcnvrt@cp,stoa@s
  5818  010F4C  C0E3  F06D         	movff	vfpfcnvrt@cp+1,stoa@s+1
  5819  010F50  EC96  F096         	call	_stoa	;wreg free
  5820  010F54  C06A  F0D1         	movff	?_stoa,?_vfpfcnvrt
  5821  010F58  C06B  F0D2         	movff	?_stoa+1,?_vfpfcnvrt+1
  5822  010F5C  0012               	return	
  5823  010F5E                     l13633:
  5824                           
  5825                           ; BSR set to: 0
  5826                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1204:         if (*fmt[0] == 
      +                          'u') {
  5827  010F5E  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5828  010F60  6ED9               	movwf	fsr2l,c
  5829  010F62  6ADA               	clrf	fsr2h,c
  5830  010F64  006F FF7B FFF6     	movff	postinc2,tblptrl
  5831  010F6A  006F FF77 FFF7     	movff	postdec2,tblptrh
  5832  010F70                     	if	0	;tblptru may be non-zero
  5833  010F70                     	endif
  5834  010F70                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5835  010F70  0E00               	movlw	low (__mediumconst shr (0+16))
  5836  010F72  6EF8               	movwf	tblptru,c
  5837  010F74                     	endif
  5838  010F74  0008               	tblrd		*
  5839  010F76  50F5               	movf	tablat,w,c
  5840  010F78  0A75               	xorlw	117
  5841  010F7A  A4D8               	btfss	status,2,c
  5842  010F7C  D047               	goto	l13641
  5843                           
  5844                           ; BSR set to: 0
  5845                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1206:             ++*fmt;
  5846  010F7E  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5847  010F80  6ED9               	movwf	fsr2l,c
  5848  010F82  6ADA               	clrf	fsr2h,c
  5849  010F84  2ADE               	incf	postinc2,f,c
  5850  010F86  0E00               	movlw	0
  5851  010F88  22DD               	addwfc	postdec2,f,c
  5852                           
  5853                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1207:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  5854  010F8A  0060  F353  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  5855  010F90  0060  F357  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  5856  010F96  006F FF7C  F0D6    	movff	indf2,??_vfpfcnvrt
  5857  010F9C  0E02               	movlw	2
  5858  010F9E  26DE               	addwf	postinc2,f,c
  5859  010FA0  006F FF7C  F0D7    	movff	indf2,??_vfpfcnvrt+1
  5860  010FA6  0E00               	movlw	0
  5861  010FA8  22DD               	addwfc	postdec2,f,c
  5862  010FAA  0060  F35B  FFD9   	movff	??_vfpfcnvrt,fsr2l
  5863  010FB0  0060  F35F  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  5864  010FB6  006F FF78  F0D8    	movff	postinc2,??_vfpfcnvrt+2
  5865  010FBC  006F FF74  F0D9    	movff	postdec2,??_vfpfcnvrt+3
  5866  010FC2  C0D8  F0DA         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5867  010FC6  C0D9  F0DB         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5868  010FCA  6BDC               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5869  010FCC  6BDD               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5870  010FCE  6BDE               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5871  010FD0  6BDF               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5872  010FD2  6BE0               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5873  010FD4  6BE1               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5874                           
  5875                           ; BSR set to: 0
  5876                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1209:             return utoa
      +                          (fp, llu);
  5877  010FD6  C0D1  F07E         	movff	vfpfcnvrt@fp,utoa@fp
  5878  010FDA  C0D2  F07F         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  5879  010FDE  C0DA  F080         	movff	vfpfcnvrt@llu,utoa@d
  5880  010FE2  C0DB  F081         	movff	vfpfcnvrt@llu+1,utoa@d+1
  5881  010FE6  C0DC  F082         	movff	vfpfcnvrt@llu+2,utoa@d+2
  5882  010FEA  C0DD  F083         	movff	vfpfcnvrt@llu+3,utoa@d+3
  5883  010FEE  C0DE  F084         	movff	vfpfcnvrt@llu+4,utoa@d+4
  5884  010FF2  C0DF  F085         	movff	vfpfcnvrt@llu+5,utoa@d+5
  5885  010FF6  C0E0  F086         	movff	vfpfcnvrt@llu+6,utoa@d+6
  5886  010FFA  C0E1  F087         	movff	vfpfcnvrt@llu+7,utoa@d+7
  5887  010FFE  ECE4  F092         	call	_utoa	;wreg free
  5888  011002  C07E  F0D1         	movff	?_utoa,?_vfpfcnvrt
  5889  011006  C07F  F0D2         	movff	?_utoa+1,?_vfpfcnvrt+1
  5890  01100A  0012               	return	
  5891  01100C                     l13641:
  5892                           
  5893                           ; BSR set to: 0
  5894                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1372:         if ((*fmt)[0] =
      +                          = '%') {
  5895  01100C  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5896  01100E  6ED9               	movwf	fsr2l,c
  5897  011010  6ADA               	clrf	fsr2h,c
  5898  011012  006F FF7B FFF6     	movff	postinc2,tblptrl
  5899  011018  006F FF77 FFF7     	movff	postdec2,tblptrh
  5900  01101E                     	if	0	;tblptru may be non-zero
  5901  01101E                     	endif
  5902  01101E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5903  01101E  0E00               	movlw	low (__mediumconst shr (0+16))
  5904  011020  6EF8               	movwf	tblptru,c
  5905  011022                     	endif
  5906  011022  0008               	tblrd		*
  5907  011024  50F5               	movf	tablat,w,c
  5908  011026  0A25               	xorlw	37
  5909  011028  A4D8               	btfss	status,2,c
  5910  01102A  D015               	goto	l13651
  5911                           
  5912                           ; BSR set to: 0
  5913                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1373:             ++*fmt;
  5914  01102C  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5915  01102E  6ED9               	movwf	fsr2l,c
  5916  011030  6ADA               	clrf	fsr2h,c
  5917  011032  2ADE               	incf	postinc2,f,c
  5918  011034  0E00               	movlw	0
  5919  011036  22DD               	addwfc	postdec2,f,c
  5920                           
  5921                           ; BSR set to: 0
  5922                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1374:             fputc((int)
      +                          '%', fp);
  5923  011038  0E00               	movlw	0
  5924  01103A  6F62               	movwf	(fputc@c+1)& (0+255),b
  5925  01103C  0E25               	movlw	37
  5926  01103E  6F61               	movwf	fputc@c& (0+255),b
  5927  011040  C0D1  F063         	movff	vfpfcnvrt@fp,fputc@fp
  5928  011044  C0D2  F064         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5929  011048  ECB0  F09C         	call	_fputc	;wreg free
  5930  01104C                     l13647:
  5931                           
  5932                           ; BSR set to: 0
  5933                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1375:             return 1;
  5934  01104C  0E00               	movlw	0
  5935  01104E  6FD2               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  5936  011050  0E01               	movlw	1
  5937  011052  6FD1               	movwf	?_vfpfcnvrt& (0+255),b
  5938  011054  0012               	return	
  5939  011056                     l13651:
  5940                           
  5941                           ; BSR set to: 0
  5942                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1379:         ++*fmt;
  5943  011056  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5944  011058  6ED9               	movwf	fsr2l,c
  5945  01105A  6ADA               	clrf	fsr2h,c
  5946  01105C  2ADE               	incf	postinc2,f,c
  5947  01105E  0E00               	movlw	0
  5948  011060  22DD               	addwfc	postdec2,f,c
  5949                           
  5950                           ; BSR set to: 0
  5951                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1380:         return 0;
  5952  011062  0E00               	movlw	0
  5953  011064  6FD2               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  5954  011066  0E00               	movlw	0
  5955  011068  6FD1               	movwf	?_vfpfcnvrt& (0+255),b
  5956  01106A  0012               	return	
  5957  01106C                     l13657:
  5958                           
  5959                           ; BSR set to: 0
  5960                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1384:     fputc((int)(*fmt)[0
      +                          ], fp);
  5961  01106C  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5962  01106E  6ED9               	movwf	fsr2l,c
  5963  011070  6ADA               	clrf	fsr2h,c
  5964  011072  006F FF7B FFF6     	movff	postinc2,tblptrl
  5965  011078  006F FF77 FFF7     	movff	postdec2,tblptrh
  5966  01107E                     	if	0	;tblptru may be non-zero
  5967  01107E                     	endif
  5968  01107E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5969  01107E  0E00               	movlw	low (__mediumconst shr (0+16))
  5970  011080  6EF8               	movwf	tblptru,c
  5971  011082                     	endif
  5972  011082  0008               	tblrd		*
  5973  011084  50F5               	movf	tablat,w,c
  5974  011086  6F61               	movwf	fputc@c& (0+255),b
  5975  011088  6B62               	clrf	(fputc@c+1)& (0+255),b
  5976  01108A  C0D1  F063         	movff	vfpfcnvrt@fp,fputc@fp
  5977  01108E  C0D2  F064         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5978  011092  ECB0  F09C         	call	_fputc	;wreg free
  5979                           
  5980                           ; BSR set to: 0
  5981                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1385:     ++*fmt;
  5982  011096  51D3               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5983  011098  6ED9               	movwf	fsr2l,c
  5984  01109A  6ADA               	clrf	fsr2h,c
  5985  01109C  2ADE               	incf	postinc2,f,c
  5986  01109E  0E00               	movlw	0
  5987  0110A0  22DD               	addwfc	postdec2,f,c
  5988  0110A2  D7D4               	goto	l13647
  5989  0110A4                     __end_of_vfpfcnvrt:
  5990                           	callstack 0
  5991                           
  5992 ;; *************** function _utoa *****************
  5993 ;; Defined at:
  5994 ;;		line 615 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  5995 ;; Parameters:    Size  Location     Type
  5996 ;;  fp              2   30[BANK0 ] PTR struct _IO_FILE
  5997 ;;		 -> sprintf@f(11), NULL(0), 
  5998 ;;  d               8   32[BANK0 ] unsigned long long 
  5999 ;; Auto vars:     Size  Location     Type
  6000 ;;  n               8   52[BANK0 ] unsigned long long 
  6001 ;;  i               2   60[BANK0 ] int 
  6002 ;;  w               2   50[BANK0 ] int 
  6003 ;;  p               2   48[BANK0 ] int 
  6004 ;; Return value:  Size  Location     Type
  6005 ;;                  2   30[BANK0 ] int 
  6006 ;; Registers used:
  6007 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6008 ;; Tracked objects:
  6009 ;;		On entry : 3F/0
  6010 ;;		On exit  : 3F/0
  6011 ;;		Unchanged: 0/0
  6012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6013 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6014 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6015 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6016 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6017 ;;Total ram usage:       32 bytes
  6018 ;; Hardware stack levels used: 1
  6019 ;; Hardware stack levels required when called: 12
  6020 ;; This function calls:
  6021 ;;		___lodiv
  6022 ;;		___lomod
  6023 ;;		_pad
  6024 ;; This function is called by:
  6025 ;;		_vfpfcnvrt
  6026 ;; This function uses a non-reentrant model
  6027 ;;
  6028                           
  6029                           	psect	text7
  6030  0125C8                     __ptext7:
  6031                           	callstack 0
  6032  0125C8                     _utoa:
  6033                           	callstack 15
  6034                           
  6035                           ; BSR set to: 0
  6036                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 615: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 616: {
      +                          ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 617:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 618:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 621:     if (!(prec < 0)) {
  6037                           
  6038                           ; BSR set to: 0
  6039                           ;incstack = 0
  6040  0125C8  AFF7               	btfss	(_prec+1)& (0+255),7,b
  6041                           
  6042                           ; BSR set to: 0
  6043                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 622:         flags &= ~(1 << 
      +                          1);
  6044  0125CA  922D               	bcf	_flags^0,1,c
  6045                           
  6046                           ; BSR set to: 0
  6047                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 624:     p = (0 < prec) ? pre
      +                          c : 1;
  6048  0125CC  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  6049  0125CE  D005               	goto	u12580
  6050  0125D0  51F7               	movf	(_prec+1)& (0+255),w,b
  6051  0125D2  E108               	bnz	l2657
  6052  0125D4  05F6               	decf	_prec& (0+255),w,b
  6053  0125D6  B0D8               	btfsc	status,0,c
  6054  0125D8  D005               	goto	l2657
  6055  0125DA                     u12580:
  6056                           
  6057                           ; BSR set to: 0
  6058  0125DA  0E00               	movlw	0
  6059  0125DC  6F91               	movwf	(utoa@p+1)& (0+255),b
  6060  0125DE  0E01               	movlw	1
  6061  0125E0  6F90               	movwf	utoa@p& (0+255),b
  6062  0125E2  D004               	goto	l2659
  6063  0125E4                     l2657:
  6064                           
  6065                           ; BSR set to: 0
  6066  0125E4  C0F6  F090         	movff	_prec,utoa@p
  6067  0125E8  C0F7  F091         	movff	_prec+1,utoa@p+1
  6068  0125EC                     l2659:
  6069                           
  6070                           ; BSR set to: 0
  6071                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 625:     w = width;
  6072  0125EC  C0F4  F092         	movff	_width,utoa@w
  6073  0125F0  C0F5  F093         	movff	_width+1,utoa@w+1
  6074                           
  6075                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 628:     n = d;
  6076  0125F4  C080  F094         	movff	utoa@d,utoa@n
  6077  0125F8  C081  F095         	movff	utoa@d+1,utoa@n+1
  6078  0125FC  C082  F096         	movff	utoa@d+2,utoa@n+2
  6079  012600  C083  F097         	movff	utoa@d+3,utoa@n+3
  6080  012604  C084  F098         	movff	utoa@d+4,utoa@n+4
  6081  012608  C085  F099         	movff	utoa@d+5,utoa@n+5
  6082  01260C  C086  F09A         	movff	utoa@d+6,utoa@n+6
  6083  012610  C087  F09B         	movff	utoa@d+7,utoa@n+7
  6084                           
  6085                           ; BSR set to: 0
  6086                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 629:     i = sizeof(dbuf) - 1
      +                          ;
  6087  012614  0E00               	movlw	0
  6088  012616  6F9D               	movwf	(utoa@i+1)& (0+255),b
  6089  012618  0E4F               	movlw	79
  6090  01261A  6F9C               	movwf	utoa@i& (0+255),b
  6091                           
  6092                           ; BSR set to: 0
  6093                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 630:     dbuf[i] = '\0';
  6094  01261C  0E00               	movlw	0
  6095  01261E  0101               	movlb	1	; () banked
  6096  012620  6F92               	movwf	(_dbuf+79)& (0+255),b
  6097                           
  6098                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 631:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  6099  012622  D076               	goto	l12257
  6100  012624                     l12247:
  6101                           
  6102                           ; BSR set to: 0
  6103                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 632:         --i;
  6104  012624  079C               	decf	utoa@i& (0+255),f,b
  6105  012626  A0D8               	btfss	status,0,c
  6106  012628  079D               	decf	(utoa@i+1)& (0+255),f,b
  6107                           
  6108                           ; BSR set to: 0
  6109                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 633:         dbuf[i] = '0' + 
      +                          (n % 10);
  6110  01262A  0E43               	movlw	low _dbuf
  6111  01262C  259C               	addwf	utoa@i& (0+255),w,b
  6112  01262E  6ED9               	movwf	fsr2l,c
  6113  012630  0E01               	movlw	high _dbuf
  6114  012632  219D               	addwfc	(utoa@i+1)& (0+255),w,b
  6115  012634  6EDA               	movwf	fsr2h,c
  6116  012636  C094  F060         	movff	utoa@n,___lomod@dividend
  6117  01263A  C095  F061         	movff	utoa@n+1,___lomod@dividend+1
  6118  01263E  C096  F062         	movff	utoa@n+2,___lomod@dividend+2
  6119  012642  C097  F063         	movff	utoa@n+3,___lomod@dividend+3
  6120  012646  C098  F064         	movff	utoa@n+4,___lomod@dividend+4
  6121  01264A  C099  F065         	movff	utoa@n+5,___lomod@dividend+5
  6122  01264E  C09A  F066         	movff	utoa@n+6,___lomod@dividend+6
  6123  012652  C09B  F067         	movff	utoa@n+7,___lomod@dividend+7
  6124  012656  0E0A               	movlw	10
  6125  012658  6F68               	movwf	___lomod@divisor& (0+255),b
  6126  01265A  0E00               	movlw	0
  6127  01265C  6F69               	movwf	(___lomod@divisor+1)& (0+255),b
  6128  01265E  0E00               	movlw	0
  6129  012660  6F6A               	movwf	(___lomod@divisor+2)& (0+255),b
  6130  012662  0E00               	movlw	0
  6131  012664  6F6B               	movwf	(___lomod@divisor+3)& (0+255),b
  6132  012666  0E00               	movlw	0
  6133  012668  6F6C               	movwf	(___lomod@divisor+4)& (0+255),b
  6134  01266A  0E00               	movlw	0
  6135  01266C  6F6D               	movwf	(___lomod@divisor+5)& (0+255),b
  6136  01266E  0E00               	movlw	0
  6137  012670  6F6E               	movwf	(___lomod@divisor+6)& (0+255),b
  6138  012672  0E00               	movlw	0
  6139  012674  6F6F               	movwf	(___lomod@divisor+7)& (0+255),b
  6140  012676  EC0B  F09D         	call	___lomod	;wreg free
  6141  01267A  C060  F088         	movff	?___lomod,??_utoa
  6142  01267E  C061  F089         	movff	?___lomod+1,??_utoa+1
  6143  012682  C062  F08A         	movff	?___lomod+2,??_utoa+2
  6144  012686  C063  F08B         	movff	?___lomod+3,??_utoa+3
  6145  01268A  C064  F08C         	movff	?___lomod+4,??_utoa+4
  6146  01268E  C065  F08D         	movff	?___lomod+5,??_utoa+5
  6147  012692  C066  F08E         	movff	?___lomod+6,??_utoa+6
  6148  012696  C067  F08F         	movff	?___lomod+7,??_utoa+7
  6149  01269A  5188               	movf	??_utoa& (0+255),w,b
  6150  01269C  0F30               	addlw	48
  6151  01269E  6EDF               	movwf	indf2,c
  6152                           
  6153                           ; BSR set to: 0
  6154                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 634:         --p;
  6155  0126A0  0790               	decf	utoa@p& (0+255),f,b
  6156  0126A2  A0D8               	btfss	status,0,c
  6157  0126A4  0791               	decf	(utoa@p+1)& (0+255),f,b
  6158                           
  6159                           ; BSR set to: 0
  6160                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 635:         --w;
  6161  0126A6  0792               	decf	utoa@w& (0+255),f,b
  6162  0126A8  A0D8               	btfss	status,0,c
  6163  0126AA  0793               	decf	(utoa@w+1)& (0+255),f,b
  6164                           
  6165                           ; BSR set to: 0
  6166                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 636:         n = n / 10;
  6167  0126AC  C094  F060         	movff	utoa@n,___lodiv@dividend
  6168  0126B0  C095  F061         	movff	utoa@n+1,___lodiv@dividend+1
  6169  0126B4  C096  F062         	movff	utoa@n+2,___lodiv@dividend+2
  6170  0126B8  C097  F063         	movff	utoa@n+3,___lodiv@dividend+3
  6171  0126BC  C098  F064         	movff	utoa@n+4,___lodiv@dividend+4
  6172  0126C0  C099  F065         	movff	utoa@n+5,___lodiv@dividend+5
  6173  0126C4  C09A  F066         	movff	utoa@n+6,___lodiv@dividend+6
  6174  0126C8  C09B  F067         	movff	utoa@n+7,___lodiv@dividend+7
  6175  0126CC  0E0A               	movlw	10
  6176  0126CE  6F68               	movwf	___lodiv@divisor& (0+255),b
  6177  0126D0  0E00               	movlw	0
  6178  0126D2  6F69               	movwf	(___lodiv@divisor+1)& (0+255),b
  6179  0126D4  0E00               	movlw	0
  6180  0126D6  6F6A               	movwf	(___lodiv@divisor+2)& (0+255),b
  6181  0126D8  0E00               	movlw	0
  6182  0126DA  6F6B               	movwf	(___lodiv@divisor+3)& (0+255),b
  6183  0126DC  0E00               	movlw	0
  6184  0126DE  6F6C               	movwf	(___lodiv@divisor+4)& (0+255),b
  6185  0126E0  0E00               	movlw	0
  6186  0126E2  6F6D               	movwf	(___lodiv@divisor+5)& (0+255),b
  6187  0126E4  0E00               	movlw	0
  6188  0126E6  6F6E               	movwf	(___lodiv@divisor+6)& (0+255),b
  6189  0126E8  0E00               	movlw	0
  6190  0126EA  6F6F               	movwf	(___lodiv@divisor+7)& (0+255),b
  6191  0126EC  EC61  F09A         	call	___lodiv	;wreg free
  6192  0126F0  C060  F094         	movff	?___lodiv,utoa@n
  6193  0126F4  C061  F095         	movff	?___lodiv+1,utoa@n+1
  6194  0126F8  C062  F096         	movff	?___lodiv+2,utoa@n+2
  6195  0126FC  C063  F097         	movff	?___lodiv+3,utoa@n+3
  6196  012700  C064  F098         	movff	?___lodiv+4,utoa@n+4
  6197  012704  C065  F099         	movff	?___lodiv+5,utoa@n+5
  6198  012708  C066  F09A         	movff	?___lodiv+6,utoa@n+6
  6199  01270C  C067  F09B         	movff	?___lodiv+7,utoa@n+7
  6200  012710                     l12257:
  6201                           
  6202                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 631:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  6203  012710  0100               	movlb	0	; () banked
  6204  012712  519C               	movf	utoa@i& (0+255),w,b
  6205  012714  119D               	iorwf	(utoa@i+1)& (0+255),w,b
  6206  012716  B4D8               	btfsc	status,2,c
  6207  012718  D01A               	goto	u12630
  6208                           
  6209                           ; BSR set to: 0
  6210  01271A  5194               	movf	utoa@n& (0+255),w,b
  6211  01271C  1195               	iorwf	(utoa@n+1)& (0+255),w,b
  6212  01271E  1196               	iorwf	(utoa@n+2)& (0+255),w,b
  6213  012720  1197               	iorwf	(utoa@n+3)& (0+255),w,b
  6214  012722  1198               	iorwf	(utoa@n+4)& (0+255),w,b
  6215  012724  1199               	iorwf	(utoa@n+5)& (0+255),w,b
  6216  012726  119A               	iorwf	(utoa@n+6)& (0+255),w,b
  6217  012728  119B               	iorwf	(utoa@n+7)& (0+255),w,b
  6218  01272A  A4D8               	btfss	status,2,c
  6219  01272C  D77B               	goto	l12247
  6220                           
  6221                           ; BSR set to: 0
  6222  01272E  BF91               	btfsc	(utoa@p+1)& (0+255),7,b
  6223  012730  D005               	goto	u12610
  6224  012732  5191               	movf	(utoa@p+1)& (0+255),w,b
  6225  012734  E102               	bnz	u12611
  6226  012736  0590               	decf	utoa@p& (0+255),w,b
  6227  012738  B0D8               	btfsc	status,0,c
  6228  01273A                     u12611:
  6229  01273A  D774               	goto	l12247
  6230  01273C                     u12610:
  6231                           
  6232                           ; BSR set to: 0
  6233  01273C  BF93               	btfsc	(utoa@w+1)& (0+255),7,b
  6234  01273E  D007               	goto	u12630
  6235  012740  5193               	movf	(utoa@w+1)& (0+255),w,b
  6236  012742  E103               	bnz	u12620
  6237  012744  0592               	decf	utoa@w& (0+255),w,b
  6238  012746  A0D8               	btfss	status,0,c
  6239  012748  D002               	goto	u12630
  6240  01274A                     u12620:
  6241                           
  6242                           ; BSR set to: 0
  6243  01274A  B22D               	btfsc	_flags^0,1,c
  6244  01274C  D76B               	goto	l12247
  6245  01274E                     u12630:
  6246                           
  6247                           ; BSR set to: 0
  6248                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 640:     return pad(fp, &dbuf
      +                          [i], w);
  6249  01274E  C07E  F073         	movff	utoa@fp,pad@fp
  6250  012752  C07F  F074         	movff	utoa@fp+1,pad@fp+1
  6251  012756  0E43               	movlw	low _dbuf
  6252  012758  259C               	addwf	utoa@i& (0+255),w,b
  6253  01275A  6F75               	movwf	pad@buf& (0+255),b
  6254  01275C  0E01               	movlw	high _dbuf
  6255  01275E  219D               	addwfc	(utoa@i+1)& (0+255),w,b
  6256  012760  6F76               	movwf	(pad@buf+1)& (0+255),b
  6257  012762  C092  F077         	movff	utoa@w,pad@p
  6258  012766  C093  F078         	movff	utoa@w+1,pad@p+1
  6259  01276A  ECB3  F09D         	call	_pad	;wreg free
  6260  01276E  C073  F07E         	movff	?_pad,?_utoa
  6261  012772  C074  F07F         	movff	?_pad+1,?_utoa+1
  6262                           
  6263                           ; BSR set to: 0
  6264  012776  0012               	return		;funcret
  6265  012778                     __end_of_utoa:
  6266                           	callstack 0
  6267                           
  6268 ;; *************** function ___lomod *****************
  6269 ;; Defined at:
  6270 ;;		line 9 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/lomod.c"
  6271 ;; Parameters:    Size  Location     Type
  6272 ;;  dividend        8    0[BANK0 ] unsigned long long 
  6273 ;;  divisor         8    8[BANK0 ] unsigned long long 
  6274 ;; Auto vars:     Size  Location     Type
  6275 ;;  counter         1   31[COMRAM] unsigned char 
  6276 ;; Return value:  Size  Location     Type
  6277 ;;                  8    0[BANK0 ] unsigned long long 
  6278 ;; Registers used:
  6279 ;;		wreg, status,2, status,0
  6280 ;; Tracked objects:
  6281 ;;		On entry : 3F/0
  6282 ;;		On exit  : 3F/0
  6283 ;;		Unchanged: 0/0
  6284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6285 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6286 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6288 ;;      Totals:         1      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6289 ;;Total ram usage:       17 bytes
  6290 ;; Hardware stack levels used: 1
  6291 ;; Hardware stack levels required when called: 7
  6292 ;; This function calls:
  6293 ;;		Nothing
  6294 ;; This function is called by:
  6295 ;;		_utoa
  6296 ;; This function uses a non-reentrant model
  6297 ;;
  6298                           
  6299                           	psect	text8
  6300  013A16                     __ptext8:
  6301                           	callstack 0
  6302  013A16                     ___lomod:
  6303                           	callstack 19
  6304                           
  6305                           ; BSR set to: 0
  6306                           
  6307                           ; BSR set to: 0
  6308                           ;incstack = 0
  6309  013A16  5168               	movf	___lomod@divisor& (0+255),w,b
  6310  013A18  1169               	iorwf	(___lomod@divisor+1)& (0+255),w,b
  6311  013A1A  116A               	iorwf	(___lomod@divisor+2)& (0+255),w,b
  6312  013A1C  116B               	iorwf	(___lomod@divisor+3)& (0+255),w,b
  6313  013A1E  116C               	iorwf	(___lomod@divisor+4)& (0+255),w,b
  6314  013A20  116D               	iorwf	(___lomod@divisor+5)& (0+255),w,b
  6315  013A22  116E               	iorwf	(___lomod@divisor+6)& (0+255),w,b
  6316  013A24  116F               	iorwf	(___lomod@divisor+7)& (0+255),w,b
  6317  013A26  B4D8               	btfsc	status,2,c
  6318  013A28  D03C               	goto	l2250
  6319                           
  6320                           ; BSR set to: 0
  6321  013A2A  0E01               	movlw	1
  6322  013A2C  6E20               	movwf	___lomod@counter^0,c
  6323  013A2E  D00A               	goto	l11699
  6324  013A30                     l11697:
  6325                           
  6326                           ; BSR set to: 0
  6327  013A30  90D8               	bcf	status,0,c
  6328  013A32  3768               	rlcf	___lomod@divisor& (0+255),f,b
  6329  013A34  3769               	rlcf	(___lomod@divisor+1)& (0+255),f,b
  6330  013A36  376A               	rlcf	(___lomod@divisor+2)& (0+255),f,b
  6331  013A38  376B               	rlcf	(___lomod@divisor+3)& (0+255),f,b
  6332  013A3A  376C               	rlcf	(___lomod@divisor+4)& (0+255),f,b
  6333  013A3C  376D               	rlcf	(___lomod@divisor+5)& (0+255),f,b
  6334  013A3E  376E               	rlcf	(___lomod@divisor+6)& (0+255),f,b
  6335  013A40  376F               	rlcf	(___lomod@divisor+7)& (0+255),f,b
  6336  013A42  2A20               	incf	___lomod@counter^0,f,c
  6337  013A44                     l11699:
  6338                           
  6339                           ; BSR set to: 0
  6340  013A44  AF6F               	btfss	(___lomod@divisor+7)& (0+255),7,b
  6341  013A46  D7F4               	goto	l11697
  6342  013A48                     u11520:
  6343                           
  6344                           ; BSR set to: 0
  6345  013A48  5168               	movf	___lomod@divisor& (0+255),w,b
  6346  013A4A  5D60               	subwf	___lomod@dividend& (0+255),w,b
  6347  013A4C  5169               	movf	(___lomod@divisor+1)& (0+255),w,b
  6348  013A4E  5961               	subwfb	(___lomod@dividend+1)& (0+255),w,b
  6349  013A50  516A               	movf	(___lomod@divisor+2)& (0+255),w,b
  6350  013A52  5962               	subwfb	(___lomod@dividend+2)& (0+255),w,b
  6351  013A54  516B               	movf	(___lomod@divisor+3)& (0+255),w,b
  6352  013A56  5963               	subwfb	(___lomod@dividend+3)& (0+255),w,b
  6353  013A58  516C               	movf	(___lomod@divisor+4)& (0+255),w,b
  6354  013A5A  5964               	subwfb	(___lomod@dividend+4)& (0+255),w,b
  6355  013A5C  516D               	movf	(___lomod@divisor+5)& (0+255),w,b
  6356  013A5E  5965               	subwfb	(___lomod@dividend+5)& (0+255),w,b
  6357  013A60  516E               	movf	(___lomod@divisor+6)& (0+255),w,b
  6358  013A62  5966               	subwfb	(___lomod@dividend+6)& (0+255),w,b
  6359  013A64  516F               	movf	(___lomod@divisor+7)& (0+255),w,b
  6360  013A66  5967               	subwfb	(___lomod@dividend+7)& (0+255),w,b
  6361  013A68  A0D8               	btfss	status,0,c
  6362  013A6A  D010               	goto	l11705
  6363                           
  6364                           ; BSR set to: 0
  6365  013A6C  5168               	movf	___lomod@divisor& (0+255),w,b
  6366  013A6E  5F60               	subwf	___lomod@dividend& (0+255),f,b
  6367  013A70  5169               	movf	(___lomod@divisor+1)& (0+255),w,b
  6368  013A72  5B61               	subwfb	(___lomod@dividend+1)& (0+255),f,b
  6369  013A74  516A               	movf	(___lomod@divisor+2)& (0+255),w,b
  6370  013A76  5B62               	subwfb	(___lomod@dividend+2)& (0+255),f,b
  6371  013A78  516B               	movf	(___lomod@divisor+3)& (0+255),w,b
  6372  013A7A  5B63               	subwfb	(___lomod@dividend+3)& (0+255),f,b
  6373  013A7C  516C               	movf	(___lomod@divisor+4)& (0+255),w,b
  6374  013A7E  5B64               	subwfb	(___lomod@dividend+4)& (0+255),f,b
  6375  013A80  516D               	movf	(___lomod@divisor+5)& (0+255),w,b
  6376  013A82  5B65               	subwfb	(___lomod@dividend+5)& (0+255),f,b
  6377  013A84  516E               	movf	(___lomod@divisor+6)& (0+255),w,b
  6378  013A86  5B66               	subwfb	(___lomod@dividend+6)& (0+255),f,b
  6379  013A88  516F               	movf	(___lomod@divisor+7)& (0+255),w,b
  6380  013A8A  5B67               	subwfb	(___lomod@dividend+7)& (0+255),f,b
  6381  013A8C                     l11705:
  6382                           
  6383                           ; BSR set to: 0
  6384  013A8C  90D8               	bcf	status,0,c
  6385  013A8E  336F               	rrcf	(___lomod@divisor+7)& (0+255),f,b
  6386  013A90  336E               	rrcf	(___lomod@divisor+6)& (0+255),f,b
  6387  013A92  336D               	rrcf	(___lomod@divisor+5)& (0+255),f,b
  6388  013A94  336C               	rrcf	(___lomod@divisor+4)& (0+255),f,b
  6389  013A96  336B               	rrcf	(___lomod@divisor+3)& (0+255),f,b
  6390  013A98  336A               	rrcf	(___lomod@divisor+2)& (0+255),f,b
  6391  013A9A  3369               	rrcf	(___lomod@divisor+1)& (0+255),f,b
  6392  013A9C  3368               	rrcf	___lomod@divisor& (0+255),f,b
  6393                           
  6394                           ; BSR set to: 0
  6395  013A9E  2E20               	decfsz	___lomod@counter^0,f,c
  6396  013AA0  D7D3               	goto	u11520
  6397  013AA2                     l2250:
  6398                           
  6399                           ; BSR set to: 0
  6400  013AA2  C060  F060         	movff	___lomod@dividend,?___lomod
  6401  013AA6  C061  F061         	movff	___lomod@dividend+1,?___lomod+1
  6402  013AAA  C062  F062         	movff	___lomod@dividend+2,?___lomod+2
  6403  013AAE  C063  F063         	movff	___lomod@dividend+3,?___lomod+3
  6404  013AB2  C064  F064         	movff	___lomod@dividend+4,?___lomod+4
  6405  013AB6  C065  F065         	movff	___lomod@dividend+5,?___lomod+5
  6406  013ABA  C066  F066         	movff	___lomod@dividend+6,?___lomod+6
  6407  013ABE  C067  F067         	movff	___lomod@dividend+7,?___lomod+7
  6408                           
  6409                           ; BSR set to: 0
  6410  013AC2  0012               	return		;funcret
  6411  013AC4                     __end_of___lomod:
  6412                           	callstack 0
  6413                           
  6414 ;; *************** function ___lodiv *****************
  6415 ;; Defined at:
  6416 ;;		line 9 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/lodiv.c"
  6417 ;; Parameters:    Size  Location     Type
  6418 ;;  dividend        8    0[BANK0 ] unsigned long long 
  6419 ;;  divisor         8    8[BANK0 ] unsigned long long 
  6420 ;; Auto vars:     Size  Location     Type
  6421 ;;  quotient        8   16[BANK0 ] unsigned long long 
  6422 ;;  counter         1   24[BANK0 ] unsigned char 
  6423 ;; Return value:  Size  Location     Type
  6424 ;;                  8    0[BANK0 ] unsigned long long 
  6425 ;; Registers used:
  6426 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6427 ;; Tracked objects:
  6428 ;;		On entry : 3F/0
  6429 ;;		On exit  : 3F/0
  6430 ;;		Unchanged: 0/0
  6431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6432 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6433 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6435 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6436 ;;Total ram usage:       25 bytes
  6437 ;; Hardware stack levels used: 1
  6438 ;; Hardware stack levels required when called: 7
  6439 ;; This function calls:
  6440 ;;		Nothing
  6441 ;; This function is called by:
  6442 ;;		_utoa
  6443 ;; This function uses a non-reentrant model
  6444 ;;
  6445                           
  6446                           	psect	text9
  6447  0134C2                     __ptext9:
  6448                           	callstack 0
  6449  0134C2                     ___lodiv:
  6450                           	callstack 19
  6451                           
  6452                           ; BSR set to: 0
  6453                           
  6454                           ; BSR set to: 0
  6455                           ;incstack = 0
  6456  0134C2  EE20  F070         	lfsr	2,___lodiv@quotient
  6457  0134C6  0E07               	movlw	7
  6458  0134C8                     u11471:
  6459  0134C8  6ADE               	clrf	postinc2,c
  6460  0134CA  06E8               	decf	wreg,f,c
  6461  0134CC  E2FD               	bc	u11471
  6462                           
  6463                           ; BSR set to: 0
  6464  0134CE  5168               	movf	___lodiv@divisor& (0+255),w,b
  6465  0134D0  1169               	iorwf	(___lodiv@divisor+1)& (0+255),w,b
  6466  0134D2  116A               	iorwf	(___lodiv@divisor+2)& (0+255),w,b
  6467  0134D4  116B               	iorwf	(___lodiv@divisor+3)& (0+255),w,b
  6468  0134D6  116C               	iorwf	(___lodiv@divisor+4)& (0+255),w,b
  6469  0134D8  116D               	iorwf	(___lodiv@divisor+5)& (0+255),w,b
  6470  0134DA  116E               	iorwf	(___lodiv@divisor+6)& (0+255),w,b
  6471  0134DC  116F               	iorwf	(___lodiv@divisor+7)& (0+255),w,b
  6472  0134DE  B4D8               	btfsc	status,2,c
  6473  0134E0  D046               	goto	l2240
  6474                           
  6475                           ; BSR set to: 0
  6476  0134E2  0E01               	movlw	1
  6477  0134E4  6F78               	movwf	___lodiv@counter& (0+255),b
  6478  0134E6  D00A               	goto	l11679
  6479  0134E8                     l11677:
  6480                           
  6481                           ; BSR set to: 0
  6482  0134E8  90D8               	bcf	status,0,c
  6483  0134EA  3768               	rlcf	___lodiv@divisor& (0+255),f,b
  6484  0134EC  3769               	rlcf	(___lodiv@divisor+1)& (0+255),f,b
  6485  0134EE  376A               	rlcf	(___lodiv@divisor+2)& (0+255),f,b
  6486  0134F0  376B               	rlcf	(___lodiv@divisor+3)& (0+255),f,b
  6487  0134F2  376C               	rlcf	(___lodiv@divisor+4)& (0+255),f,b
  6488  0134F4  376D               	rlcf	(___lodiv@divisor+5)& (0+255),f,b
  6489  0134F6  376E               	rlcf	(___lodiv@divisor+6)& (0+255),f,b
  6490  0134F8  376F               	rlcf	(___lodiv@divisor+7)& (0+255),f,b
  6491  0134FA  2B78               	incf	___lodiv@counter& (0+255),f,b
  6492  0134FC                     l11679:
  6493                           
  6494                           ; BSR set to: 0
  6495  0134FC  AF6F               	btfss	(___lodiv@divisor+7)& (0+255),7,b
  6496  0134FE  D7F4               	goto	l11677
  6497  013500                     u11490:
  6498                           
  6499                           ; BSR set to: 0
  6500  013500  90D8               	bcf	status,0,c
  6501  013502  3770               	rlcf	___lodiv@quotient& (0+255),f,b
  6502  013504  3771               	rlcf	(___lodiv@quotient+1)& (0+255),f,b
  6503  013506  3772               	rlcf	(___lodiv@quotient+2)& (0+255),f,b
  6504  013508  3773               	rlcf	(___lodiv@quotient+3)& (0+255),f,b
  6505  01350A  3774               	rlcf	(___lodiv@quotient+4)& (0+255),f,b
  6506  01350C  3775               	rlcf	(___lodiv@quotient+5)& (0+255),f,b
  6507  01350E  3776               	rlcf	(___lodiv@quotient+6)& (0+255),f,b
  6508  013510  3777               	rlcf	(___lodiv@quotient+7)& (0+255),f,b
  6509                           
  6510                           ; BSR set to: 0
  6511  013512  5168               	movf	___lodiv@divisor& (0+255),w,b
  6512  013514  5D60               	subwf	___lodiv@dividend& (0+255),w,b
  6513  013516  5169               	movf	(___lodiv@divisor+1)& (0+255),w,b
  6514  013518  5961               	subwfb	(___lodiv@dividend+1)& (0+255),w,b
  6515  01351A  516A               	movf	(___lodiv@divisor+2)& (0+255),w,b
  6516  01351C  5962               	subwfb	(___lodiv@dividend+2)& (0+255),w,b
  6517  01351E  516B               	movf	(___lodiv@divisor+3)& (0+255),w,b
  6518  013520  5963               	subwfb	(___lodiv@dividend+3)& (0+255),w,b
  6519  013522  516C               	movf	(___lodiv@divisor+4)& (0+255),w,b
  6520  013524  5964               	subwfb	(___lodiv@dividend+4)& (0+255),w,b
  6521  013526  516D               	movf	(___lodiv@divisor+5)& (0+255),w,b
  6522  013528  5965               	subwfb	(___lodiv@dividend+5)& (0+255),w,b
  6523  01352A  516E               	movf	(___lodiv@divisor+6)& (0+255),w,b
  6524  01352C  5966               	subwfb	(___lodiv@dividend+6)& (0+255),w,b
  6525  01352E  516F               	movf	(___lodiv@divisor+7)& (0+255),w,b
  6526  013530  5967               	subwfb	(___lodiv@dividend+7)& (0+255),w,b
  6527  013532  A0D8               	btfss	status,0,c
  6528  013534  D011               	goto	l11689
  6529                           
  6530                           ; BSR set to: 0
  6531  013536  5168               	movf	___lodiv@divisor& (0+255),w,b
  6532  013538  5F60               	subwf	___lodiv@dividend& (0+255),f,b
  6533  01353A  5169               	movf	(___lodiv@divisor+1)& (0+255),w,b
  6534  01353C  5B61               	subwfb	(___lodiv@dividend+1)& (0+255),f,b
  6535  01353E  516A               	movf	(___lodiv@divisor+2)& (0+255),w,b
  6536  013540  5B62               	subwfb	(___lodiv@dividend+2)& (0+255),f,b
  6537  013542  516B               	movf	(___lodiv@divisor+3)& (0+255),w,b
  6538  013544  5B63               	subwfb	(___lodiv@dividend+3)& (0+255),f,b
  6539  013546  516C               	movf	(___lodiv@divisor+4)& (0+255),w,b
  6540  013548  5B64               	subwfb	(___lodiv@dividend+4)& (0+255),f,b
  6541  01354A  516D               	movf	(___lodiv@divisor+5)& (0+255),w,b
  6542  01354C  5B65               	subwfb	(___lodiv@dividend+5)& (0+255),f,b
  6543  01354E  516E               	movf	(___lodiv@divisor+6)& (0+255),w,b
  6544  013550  5B66               	subwfb	(___lodiv@dividend+6)& (0+255),f,b
  6545  013552  516F               	movf	(___lodiv@divisor+7)& (0+255),w,b
  6546  013554  5B67               	subwfb	(___lodiv@dividend+7)& (0+255),f,b
  6547                           
  6548                           ; BSR set to: 0
  6549  013556  8170               	bsf	___lodiv@quotient& (0+255),0,b
  6550  013558                     l11689:
  6551                           
  6552                           ; BSR set to: 0
  6553  013558  90D8               	bcf	status,0,c
  6554  01355A  336F               	rrcf	(___lodiv@divisor+7)& (0+255),f,b
  6555  01355C  336E               	rrcf	(___lodiv@divisor+6)& (0+255),f,b
  6556  01355E  336D               	rrcf	(___lodiv@divisor+5)& (0+255),f,b
  6557  013560  336C               	rrcf	(___lodiv@divisor+4)& (0+255),f,b
  6558  013562  336B               	rrcf	(___lodiv@divisor+3)& (0+255),f,b
  6559  013564  336A               	rrcf	(___lodiv@divisor+2)& (0+255),f,b
  6560  013566  3369               	rrcf	(___lodiv@divisor+1)& (0+255),f,b
  6561  013568  3368               	rrcf	___lodiv@divisor& (0+255),f,b
  6562                           
  6563                           ; BSR set to: 0
  6564  01356A  2F78               	decfsz	___lodiv@counter& (0+255),f,b
  6565  01356C  D7C9               	goto	u11490
  6566  01356E                     l2240:
  6567                           
  6568                           ; BSR set to: 0
  6569  01356E  C070  F060         	movff	___lodiv@quotient,?___lodiv
  6570  013572  C071  F061         	movff	___lodiv@quotient+1,?___lodiv+1
  6571  013576  C072  F062         	movff	___lodiv@quotient+2,?___lodiv+2
  6572  01357A  C073  F063         	movff	___lodiv@quotient+3,?___lodiv+3
  6573  01357E  C074  F064         	movff	___lodiv@quotient+4,?___lodiv+4
  6574  013582  C075  F065         	movff	___lodiv@quotient+5,?___lodiv+5
  6575  013586  C076  F066         	movff	___lodiv@quotient+6,?___lodiv+6
  6576  01358A  C077  F067         	movff	___lodiv@quotient+7,?___lodiv+7
  6577                           
  6578                           ; BSR set to: 0
  6579  01358E  0012               	return		;funcret
  6580  013590                     __end_of___lodiv:
  6581                           	callstack 0
  6582                           
  6583 ;; *************** function _stoa *****************
  6584 ;; Defined at:
  6585 ;;		line 568 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  6586 ;; Parameters:    Size  Location     Type
  6587 ;;  fp              2   10[BANK0 ] PTR struct _IO_FILE
  6588 ;;		 -> sprintf@f(11), NULL(0), 
  6589 ;;  s               2   12[BANK0 ] PTR unsigned char 
  6590 ;;		 -> ?_printf(2), ?_sprintf(2), build_version(14), STR_2(9), 
  6591 ;;		 -> STR_1(12), 
  6592 ;; Auto vars:     Size  Location     Type
  6593 ;;  nuls            7   15[BANK0 ] unsigned char [7]
  6594 ;;  l               2   30[BANK0 ] int 
  6595 ;;  p               2   28[BANK0 ] int 
  6596 ;;  cp              2   26[BANK0 ] PTR unsigned char 
  6597 ;;		 -> ?_printf(2), stoa@nuls(7), ?_sprintf(2), build_version(14), 
  6598 ;;		 -> STR_2(9), STR_1(12), 
  6599 ;;  w               2   24[BANK0 ] int 
  6600 ;;  i               2   22[BANK0 ] int 
  6601 ;; Return value:  Size  Location     Type
  6602 ;;                  2   10[BANK0 ] int 
  6603 ;; Registers used:
  6604 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6605 ;; Tracked objects:
  6606 ;;		On entry : 3F/0
  6607 ;;		On exit  : 3F/0
  6608 ;;		Unchanged: 0/0
  6609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6610 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6611 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6612 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6613 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6614 ;;Total ram usage:       22 bytes
  6615 ;; Hardware stack levels used: 1
  6616 ;; Hardware stack levels required when called: 10
  6617 ;; This function calls:
  6618 ;;		_fputc
  6619 ;;		_strlen
  6620 ;; This function is called by:
  6621 ;;		_vfpfcnvrt
  6622 ;; This function uses a non-reentrant model
  6623 ;;
  6624                           
  6625                           	psect	text10
  6626  012D2C                     __ptext10:
  6627                           	callstack 0
  6628  012D2C                     _stoa:
  6629                           	callstack 17
  6630                           
  6631                           ; BSR set to: 0
  6632                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 568: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 569: {;/opt/microch
      +                          ip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 570:     char *cp, nuls[] = "(null)";
  6633                           
  6634                           ; BSR set to: 0
  6635                           ;incstack = 0
  6636  012D2C  EE20  F1C0         	lfsr	2,stoa@F1164
  6637  012D30  EE10  F06F         	lfsr	1,stoa@nuls
  6638  012D34  0E06               	movlw	6
  6639  012D36                     u12471:
  6640  012D36  006F FF6F FFE3     	movff	plusw2,plusw1
  6641  012D3C  06E8               	decf	wreg,f,c
  6642  012D3E  E2FB               	bc	u12471
  6643                           
  6644                           ; BSR set to: 0
  6645                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 571:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 574:     cp = s;
  6646  012D40  C06C  F07A         	movff	stoa@s,stoa@cp
  6647  012D44  C06D  F07B         	movff	stoa@s+1,stoa@cp+1
  6648                           
  6649                           ; BSR set to: 0
  6650                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 575:     if (!cp) {
  6651  012D48  517A               	movf	stoa@cp& (0+255),w,b
  6652  012D4A  117B               	iorwf	(stoa@cp+1)& (0+255),w,b
  6653  012D4C  A4D8               	btfss	status,2,c
  6654  012D4E  D003               	goto	l12201
  6655                           
  6656                           ; BSR set to: 0
  6657                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 576:         cp = nuls;
  6658  012D50  0E6F               	movlw	low stoa@nuls
  6659  012D52  6F7A               	movwf	stoa@cp& (0+255),b
  6660  012D54  6B7B               	clrf	(stoa@cp+1)& (0+255),b
  6661  012D56                     l12201:
  6662                           
  6663                           ; BSR set to: 0
  6664                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 580:     l = (int)strlen(cp);
  6665  012D56  C07A  F060         	movff	stoa@cp,strlen@s
  6666  012D5A  C07B  F061         	movff	stoa@cp+1,strlen@s+1
  6667  012D5E  ECF9  F0A0         	call	_strlen	;wreg free
  6668  012D62  C060  F07E         	movff	?_strlen,stoa@l
  6669  012D66  C061  F07F         	movff	?_strlen+1,stoa@l+1
  6670                           
  6671                           ; BSR set to: 0
  6672                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 581:     p = prec;
  6673  012D6A  C0F6  F07C         	movff	_prec,stoa@p
  6674  012D6E  C0F7  F07D         	movff	_prec+1,stoa@p+1
  6675                           
  6676                           ; BSR set to: 0
  6677                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 582:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  6678  012D72  BF7D               	btfsc	(stoa@p+1)& (0+255),7,b
  6679  012D74  D00E               	goto	l2638
  6680                           
  6681                           ; BSR set to: 0
  6682  012D76  517E               	movf	stoa@l& (0+255),w,b
  6683  012D78  5D7C               	subwf	stoa@p& (0+255),w,b
  6684  012D7A  517D               	movf	(stoa@p+1)& (0+255),w,b
  6685  012D7C  0A80               	xorlw	128
  6686  012D7E  6F6E               	movwf	??_stoa& (0+255),b
  6687  012D80  517F               	movf	(stoa@l+1)& (0+255),w,b
  6688  012D82  0A80               	xorlw	128
  6689  012D84  596E               	subwfb	??_stoa& (0+255),w,b
  6690  012D86  B0D8               	btfsc	status,0,c
  6691  012D88  D004               	goto	l2638
  6692                           
  6693                           ; BSR set to: 0
  6694  012D8A  C07C  F07E         	movff	stoa@p,stoa@l
  6695  012D8E  C07D  F07F         	movff	stoa@p+1,stoa@l+1
  6696  012D92                     l2638:
  6697                           
  6698                           ; BSR set to: 0
  6699                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 583:     p = l;
  6700  012D92  C07E  F07C         	movff	stoa@l,stoa@p
  6701  012D96  C07F  F07D         	movff	stoa@l+1,stoa@p+1
  6702                           
  6703                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 584:     w = width;
  6704  012D9A  C0F4  F078         	movff	_width,stoa@w
  6705  012D9E  C0F5  F079         	movff	_width+1,stoa@w+1
  6706                           
  6707                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 587:     if (!(flags & (1 << 
      +                          0))) {
  6708  012DA2  A02D               	btfss	_flags^0,0,c
  6709  012DA4  D00D               	goto	l12215
  6710  012DA6  D016               	goto	u12520
  6711  012DA8                     l12211:
  6712                           
  6713                           ; BSR set to: 0
  6714                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 589:             fputc(' ', f
      +                          p);
  6715  012DA8  0E00               	movlw	0
  6716  012DAA  6F62               	movwf	(fputc@c+1)& (0+255),b
  6717  012DAC  0E20               	movlw	32
  6718  012DAE  6F61               	movwf	fputc@c& (0+255),b
  6719  012DB0  C06A  F063         	movff	stoa@fp,fputc@fp
  6720  012DB4  C06B  F064         	movff	stoa@fp+1,fputc@fp+1
  6721  012DB8  ECB0  F09C         	call	_fputc	;wreg free
  6722                           
  6723                           ; BSR set to: 0
  6724                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 590:             ++l;
  6725  012DBC  4B7E               	infsnz	stoa@l& (0+255),f,b
  6726  012DBE  2B7F               	incf	(stoa@l+1)& (0+255),f,b
  6727  012DC0                     l12215:
  6728                           
  6729                           ; BSR set to: 0
  6730                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 588:         while (l < w) {
  6731  012DC0  5178               	movf	stoa@w& (0+255),w,b
  6732  012DC2  5D7E               	subwf	stoa@l& (0+255),w,b
  6733  012DC4  517F               	movf	(stoa@l+1)& (0+255),w,b
  6734  012DC6  0A80               	xorlw	128
  6735  012DC8  6F6E               	movwf	??_stoa& (0+255),b
  6736  012DCA  5179               	movf	(stoa@w+1)& (0+255),w,b
  6737  012DCC  0A80               	xorlw	128
  6738  012DCE  596E               	subwfb	??_stoa& (0+255),w,b
  6739  012DD0  A0D8               	btfss	status,0,c
  6740  012DD2  D7EA               	goto	l12211
  6741  012DD4                     u12520:
  6742                           
  6743                           ; BSR set to: 0
  6744                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 595:     i = 0;
  6745  012DD4  0E00               	movlw	0
  6746  012DD6  6F77               	movwf	(stoa@i+1)& (0+255),b
  6747  012DD8  0E00               	movlw	0
  6748  012DDA  6F76               	movwf	stoa@i& (0+255),b
  6749                           
  6750                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 596:     while (i < p) {
  6751  012DDC  D024               	goto	l12225
  6752  012DDE                     l12219:
  6753                           
  6754                           ; BSR set to: 0
  6755                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 597:         fputc(*cp, fp);
  6756  012DDE  0060  F1EB  FFF6   	movff	stoa@cp,tblptrl
  6757  012DE4  0060  F1EF  FFF7   	movff	stoa@cp+1,tblptrh
  6758  012DEA  0E00               	movlw	low (__mediumconst shr (0+16))
  6759  012DEC  6EF8               	movwf	tblptru,c
  6760  012DEE  0E1F               	movlw	(high __ramtop+-1)
  6761  012DF0  64F7               	cpfsgt	tblptrh,c
  6762  012DF2  D003               	bra	u12537
  6763  012DF4  0008               	tblrd		*
  6764  012DF6  50F5               	movf	tablat,w,c
  6765  012DF8  D007               	bra	u12530
  6766  012DFA                     u12537:
  6767  012DFA  006F FFDB FFE1     	movff	tblptrl,fsr1l
  6768  012E00  006F FFDF FFE2     	movff	tblptrh,fsr1h
  6769  012E06  50E7               	movf	indf1,w,c
  6770  012E08                     u12530:
  6771  012E08  0100               	movlb	0	; () banked
  6772  012E0A  6F6E               	movwf	??_stoa& (0+255),b
  6773  012E0C  516E               	movf	??_stoa& (0+255),w,b
  6774  012E0E  6F61               	movwf	fputc@c& (0+255),b
  6775  012E10  6B62               	clrf	(fputc@c+1)& (0+255),b
  6776  012E12  C06A  F063         	movff	stoa@fp,fputc@fp
  6777  012E16  C06B  F064         	movff	stoa@fp+1,fputc@fp+1
  6778  012E1A  ECB0  F09C         	call	_fputc	;wreg free
  6779                           
  6780                           ; BSR set to: 0
  6781                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 598:         ++cp;
  6782  012E1E  4B7A               	infsnz	stoa@cp& (0+255),f,b
  6783  012E20  2B7B               	incf	(stoa@cp+1)& (0+255),f,b
  6784                           
  6785                           ; BSR set to: 0
  6786                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 599:         ++i;
  6787  012E22  4B76               	infsnz	stoa@i& (0+255),f,b
  6788  012E24  2B77               	incf	(stoa@i+1)& (0+255),f,b
  6789  012E26                     l12225:
  6790                           
  6791                           ; BSR set to: 0
  6792                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 596:     while (i < p) {
  6793  012E26  517C               	movf	stoa@p& (0+255),w,b
  6794  012E28  5D76               	subwf	stoa@i& (0+255),w,b
  6795  012E2A  5177               	movf	(stoa@i+1)& (0+255),w,b
  6796  012E2C  0A80               	xorlw	128
  6797  012E2E  6F6E               	movwf	??_stoa& (0+255),b
  6798  012E30  517D               	movf	(stoa@p+1)& (0+255),w,b
  6799  012E32  0A80               	xorlw	128
  6800  012E34  596E               	subwfb	??_stoa& (0+255),w,b
  6801  012E36  A0D8               	btfss	status,0,c
  6802  012E38  D7D2               	goto	l12219
  6803                           
  6804                           ; BSR set to: 0
  6805                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 603:     if (flags & (1 << 0)
      +                          ) {
  6806  012E3A  B02D               	btfsc	_flags^0,0,c
  6807  012E3C  D00D               	goto	l12233
  6808  012E3E  D016               	goto	u12560
  6809  012E40                     l12229:
  6810                           
  6811                           ; BSR set to: 0
  6812                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 605:             fputc(' ', f
      +                          p);
  6813  012E40  0E00               	movlw	0
  6814  012E42  6F62               	movwf	(fputc@c+1)& (0+255),b
  6815  012E44  0E20               	movlw	32
  6816  012E46  6F61               	movwf	fputc@c& (0+255),b
  6817  012E48  C06A  F063         	movff	stoa@fp,fputc@fp
  6818  012E4C  C06B  F064         	movff	stoa@fp+1,fputc@fp+1
  6819  012E50  ECB0  F09C         	call	_fputc	;wreg free
  6820                           
  6821                           ; BSR set to: 0
  6822                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 606:             ++l;
  6823  012E54  4B7E               	infsnz	stoa@l& (0+255),f,b
  6824  012E56  2B7F               	incf	(stoa@l+1)& (0+255),f,b
  6825  012E58                     l12233:
  6826                           
  6827                           ; BSR set to: 0
  6828                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 604:         while (l < w) {
  6829  012E58  5178               	movf	stoa@w& (0+255),w,b
  6830  012E5A  5D7E               	subwf	stoa@l& (0+255),w,b
  6831  012E5C  517F               	movf	(stoa@l+1)& (0+255),w,b
  6832  012E5E  0A80               	xorlw	128
  6833  012E60  6F6E               	movwf	??_stoa& (0+255),b
  6834  012E62  5179               	movf	(stoa@w+1)& (0+255),w,b
  6835  012E64  0A80               	xorlw	128
  6836  012E66  596E               	subwfb	??_stoa& (0+255),w,b
  6837  012E68  A0D8               	btfss	status,0,c
  6838  012E6A  D7EA               	goto	l12229
  6839  012E6C                     u12560:
  6840                           
  6841                           ; BSR set to: 0
  6842                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 610:     return l;
  6843                           
  6844                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 608:     }
  6845  012E6C  C07E  F06A         	movff	stoa@l,?_stoa
  6846  012E70  C07F  F06B         	movff	stoa@l+1,?_stoa+1
  6847                           
  6848                           ; BSR set to: 0
  6849  012E74  0012               	return		;funcret
  6850  012E76                     __end_of_stoa:
  6851                           	callstack 0
  6852                           
  6853 ;; *************** function _efgtoa *****************
  6854 ;; Defined at:
  6855 ;;		line 332 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  6856 ;; Parameters:    Size  Location     Type
  6857 ;;  fp              2   51[BANK0 ] PTR struct _IO_FILE
  6858 ;;		 -> sprintf@f(11), NULL(0), 
  6859 ;;  f               4   53[BANK0 ] PTR struct _IO_FILE
  6860 ;;  c               1   57[BANK0 ] unsigned char 
  6861 ;; Auto vars:     Size  Location     Type
  6862 ;;  u               4  109[BANK0 ] unsigned char 
  6863 ;;  g               4   99[BANK0 ] unsigned char 
  6864 ;;  l               4   95[BANK0 ] unsigned char 
  6865 ;;  h               4   91[BANK0 ] unsigned char 
  6866 ;;  ou              4   77[BANK0 ] unsigned char 
  6867 ;;  n               2  107[BANK0 ] int 
  6868 ;;  e               2  105[BANK0 ] int 
  6869 ;;  i               2  103[BANK0 ] int 
  6870 ;;  w               2   88[BANK0 ] int 
  6871 ;;  p               2   85[BANK0 ] int 
  6872 ;;  sign            2   83[BANK0 ] int 
  6873 ;;  d               2   81[BANK0 ] int 
  6874 ;;  m               2   75[BANK0 ] int 
  6875 ;;  ne              2   73[BANK0 ] int 
  6876 ;;  pp              2   71[BANK0 ] int 
  6877 ;;  t               2   69[BANK0 ] int 
  6878 ;;  mode            1   90[BANK0 ] unsigned char 
  6879 ;;  nmode           1   87[BANK0 ] unsigned char 
  6880 ;; Return value:  Size  Location     Type
  6881 ;;                  2   51[BANK0 ] int 
  6882 ;; Registers used:
  6883 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6884 ;; Tracked objects:
  6885 ;;		On entry : 3F/0
  6886 ;;		On exit  : 3F/0
  6887 ;;		Unchanged: 0/0
  6888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6889 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6890 ;;      Locals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6891 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6892 ;;      Totals:         0      62       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6893 ;;Total ram usage:       62 bytes
  6894 ;; Hardware stack levels used: 1
  6895 ;; Hardware stack levels required when called: 12
  6896 ;; This function calls:
  6897 ;;		___awdiv
  6898 ;;		___awmod
  6899 ;;		___fladd
  6900 ;;		___fldiv
  6901 ;;		___fleq
  6902 ;;		___flge
  6903 ;;		___flmul
  6904 ;;		___flneg
  6905 ;;		___flsub
  6906 ;;		___fltol
  6907 ;;		___fpclassifyf
  6908 ;;		_floorf
  6909 ;;		_isupper
  6910 ;;		_pad
  6911 ;;		_strcpy
  6912 ;;		_tolower
  6913 ;; This function is called by:
  6914 ;;		_vfpfcnvrt
  6915 ;; This function uses a non-reentrant model
  6916 ;;
  6917                           
  6918                           	psect	text11
  6919  010000                     __ptext11:
  6920                           	callstack 0
  6921  010000                     _efgtoa:
  6922                           	callstack 15
  6923                           
  6924                           ; BSR set to: 0
  6925                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 332: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 333
      +                          : {;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 334:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 335:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 336:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 3
      +                          39:     sign = 0;
  6926                           
  6927                           ; BSR set to: 0
  6928                           ;incstack = 0
  6929  010000  0E00               	movlw	0
  6930  010002  6FB4               	movwf	(efgtoa@sign+1)& (0+255),b
  6931  010004  0E00               	movlw	0
  6932  010006  6FB3               	movwf	efgtoa@sign& (0+255),b
  6933                           
  6934                           ; BSR set to: 0
  6935                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 340:     g = f;
  6936  010008  C095  F0C3         	movff	efgtoa@f,efgtoa@g
  6937  01000C  C096  F0C4         	movff	efgtoa@f+1,efgtoa@g+1
  6938  010010  C097  F0C5         	movff	efgtoa@f+2,efgtoa@g+2
  6939  010014  C098  F0C6         	movff	efgtoa@f+3,efgtoa@g+3
  6940                           
  6941                           ; BSR set to: 0
  6942                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 341:     if (g < 0.0) {
  6943  010018  AFC6               	btfss	(efgtoa@g+3)& (0+255),7,b
  6944  01001A  D016               	goto	l11897
  6945                           
  6946                           ; BSR set to: 0
  6947                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 342:         sign = 1;
  6948  01001C  0E00               	movlw	0
  6949  01001E  6FB4               	movwf	(efgtoa@sign+1)& (0+255),b
  6950  010020  0E01               	movlw	1
  6951  010022  6FB3               	movwf	efgtoa@sign& (0+255),b
  6952                           
  6953                           ; BSR set to: 0
  6954                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 343:         g = -g;
  6955  010024  C0C3  F060         	movff	efgtoa@g,___flneg@f1
  6956  010028  C0C4  F061         	movff	efgtoa@g+1,___flneg@f1+1
  6957  01002C  C0C5  F062         	movff	efgtoa@g+2,___flneg@f1+2
  6958  010030  C0C6  F063         	movff	efgtoa@g+3,___flneg@f1+3
  6959  010034  ECF7  F0A4         	call	___flneg	;wreg free
  6960  010038  C060  F0C3         	movff	?___flneg,efgtoa@g
  6961  01003C  C061  F0C4         	movff	?___flneg+1,efgtoa@g+1
  6962  010040  C062  F0C5         	movff	?___flneg+2,efgtoa@g+2
  6963  010044  C063  F0C6         	movff	?___flneg+3,efgtoa@g+3
  6964  010048                     l11897:
  6965                           
  6966                           ; BSR set to: 0
  6967                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 347:     n = 0;
  6968  010048  0E00               	movlw	0
  6969  01004A  6FCC               	movwf	(efgtoa@n+1)& (0+255),b
  6970  01004C  0E00               	movlw	0
  6971  01004E  6FCB               	movwf	efgtoa@n& (0+255),b
  6972                           
  6973                           ; BSR set to: 0
  6974                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 348:     w = width;
  6975  010050  C0F4  F0B8         	movff	_width,efgtoa@w
  6976  010054  C0F5  F0B9         	movff	_width+1,efgtoa@w+1
  6977                           
  6978                           ; BSR set to: 0
  6979                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 349:     if (sign || (flags &
      +                           (1 << 2))) {
  6980  010058  51B3               	movf	efgtoa@sign& (0+255),w,b
  6981  01005A  11B4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  6982  01005C  A4D8               	btfss	status,2,c
  6983  01005E  D002               	goto	u12010
  6984                           
  6985                           ; BSR set to: 0
  6986  010060  A42D               	btfss	_flags^0,2,c
  6987  010062  D013               	goto	l11917
  6988  010064                     u12010:
  6989                           
  6990                           ; BSR set to: 0
  6991                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 350:         dbuf[n] = sign ?
      +                           '-' : '+';
  6992  010064  51B3               	movf	efgtoa@sign& (0+255),w,b
  6993  010066  11B4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  6994  010068  A4D8               	btfss	status,2,c
  6995  01006A  D004               	goto	l11909
  6996                           
  6997                           ; BSR set to: 0
  6998  01006C  0E00               	movlw	0
  6999  01006E  6FA0               	movwf	(_efgtoa$4172+1)& (0+255),b
  7000  010070  0E2B               	movlw	43
  7001  010072  D003               	goto	L3
  7002  010074                     l11909:
  7003                           
  7004                           ; BSR set to: 0
  7005  010074  0E00               	movlw	0
  7006  010076  6FA0               	movwf	(_efgtoa$4172+1)& (0+255),b
  7007  010078  0E2D               	movlw	45
  7008  01007A                     L3:
  7009  01007A  6F9F               	movwf	_efgtoa$4172& (0+255),b
  7010                           
  7011                           ; BSR set to: 0
  7012  01007C  C09F  F143         	movff	_efgtoa$4172,_dbuf
  7013                           
  7014                           ; BSR set to: 0
  7015                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 351:         ++n;
  7016  010080  4BCB               	infsnz	efgtoa@n& (0+255),f,b
  7017  010082  2BCC               	incf	(efgtoa@n+1)& (0+255),f,b
  7018                           
  7019                           ; BSR set to: 0
  7020                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 352:         --w;
  7021  010084  07B8               	decf	efgtoa@w& (0+255),f,b
  7022  010086  A0D8               	btfss	status,0,c
  7023  010088  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  7024  01008A                     l11917:
  7025                           
  7026                           ; BSR set to: 0
  7027                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 356:     if (( __fpclassifyf(
      +                          g) == 1 )) {
  7028  01008A  C0C3  F060         	movff	efgtoa@g,___fpclassifyf@x
  7029  01008E  C0C4  F061         	movff	efgtoa@g+1,___fpclassifyf@x+1
  7030  010092  C0C5  F062         	movff	efgtoa@g+2,___fpclassifyf@x+2
  7031  010096  C0C6  F063         	movff	efgtoa@g+3,___fpclassifyf@x+3
  7032  01009A  EC2F  F09B         	call	___fpclassifyf	;wreg free
  7033  01009E  0560               	decf	?___fpclassifyf& (0+255),w,b
  7034  0100A0  1161               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
  7035  0100A2  A4D8               	btfss	status,2,c
  7036  0100A4  D043               	goto	l11935
  7037                           
  7038                           ; BSR set to: 0
  7039  0100A6  0EBF               	movlw	191
  7040  0100A8  6F9A               	movwf	??_efgtoa& (0+255),b
  7041  0100AA  0EFF               	movlw	255
  7042  0100AC  6F9B               	movwf	(??_efgtoa+1)& (0+255),b
  7043  0100AE  5199               	movf	efgtoa@c& (0+255),w,b
  7044  0100B0  6F9C               	movwf	(??_efgtoa+2)& (0+255),b
  7045  0100B2  6B9D               	clrf	(??_efgtoa+3)& (0+255),b
  7046  0100B4  519A               	movf	??_efgtoa& (0+255),w,b
  7047  0100B6  279C               	addwf	(??_efgtoa+2)& (0+255),f,b
  7048  0100B8  519B               	movf	(??_efgtoa+1)& (0+255),w,b
  7049  0100BA  239D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  7050  0100BC  519D               	movf	(??_efgtoa+3)& (0+255),w,b
  7051  0100BE  E111               	bnz	l11927
  7052  0100C0  0E1A               	movlw	26
  7053  0100C2  5D9C               	subwf	(??_efgtoa+2)& (0+255),w,b
  7054  0100C4  B0D8               	btfsc	status,0,c
  7055  0100C6  D00D               	goto	l11927
  7056                           
  7057                           ; BSR set to: 0
  7058                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 358:             strcpy(&dbuf
      +                          [n], "INF");
  7059  0100C8  0E43               	movlw	low _dbuf
  7060  0100CA  25CB               	addwf	efgtoa@n& (0+255),w,b
  7061  0100CC  6F60               	movwf	strcpy@dest& (0+255),b
  7062  0100CE  0E01               	movlw	high _dbuf
  7063  0100D0  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7064  0100D2  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  7065  0100D4  0ECD               	movlw	low STR_30
  7066  0100D6  6F62               	movwf	strcpy@src& (0+255),b
  7067  0100D8  0EFF               	movlw	high STR_30
  7068  0100DA  6F63               	movwf	(strcpy@src+1)& (0+255),b
  7069  0100DC  EC95  F09F         	call	_strcpy	;wreg free
  7070                           
  7071                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 359:         } else {
  7072  0100E0  D00C               	goto	l11929
  7073  0100E2                     l11927:
  7074                           
  7075                           ; BSR set to: 0
  7076                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 360:             strcpy(&dbuf
      +                          [n], "inf");
  7077  0100E2  0E43               	movlw	low _dbuf
  7078  0100E4  25CB               	addwf	efgtoa@n& (0+255),w,b
  7079  0100E6  6F60               	movwf	strcpy@dest& (0+255),b
  7080  0100E8  0E01               	movlw	high _dbuf
  7081  0100EA  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7082  0100EC  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  7083  0100EE  0ED5               	movlw	low STR_31
  7084  0100F0  6F62               	movwf	strcpy@src& (0+255),b
  7085  0100F2  0EFF               	movlw	high STR_31
  7086  0100F4  6F63               	movwf	(strcpy@src+1)& (0+255),b
  7087  0100F6  EC95  F09F         	call	_strcpy	;wreg free
  7088  0100FA                     l11929:
  7089                           
  7090                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 362:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
  7091  0100FA  0100               	movlb	0	; () banked
  7092  0100FC  0EFD               	movlw	253
  7093  0100FE  27B8               	addwf	efgtoa@w& (0+255),f,b
  7094  010100  0EFF               	movlw	255
  7095  010102  23B9               	addwfc	(efgtoa@w+1)& (0+255),f,b
  7096  010104                     l11931:
  7097                           
  7098                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 363:         return pad(fp, &
      +                          dbuf[0], w);
  7099  010104  C093  F073         	movff	efgtoa@fp,pad@fp
  7100  010108  C094  F074         	movff	efgtoa@fp+1,pad@fp+1
  7101  01010C  0E43               	movlw	low _dbuf
  7102  01010E  0100               	movlb	0	; () banked
  7103  010110  6F75               	movwf	pad@buf& (0+255),b
  7104  010112  0E01               	movlw	high _dbuf
  7105  010114  6F76               	movwf	(pad@buf+1)& (0+255),b
  7106  010116  C0B8  F077         	movff	efgtoa@w,pad@p
  7107  01011A  C0B9  F078         	movff	efgtoa@w+1,pad@p+1
  7108  01011E  ECB3  F09D         	call	_pad	;wreg free
  7109  010122  C073  F093         	movff	?_pad,?_efgtoa
  7110  010126  C074  F094         	movff	?_pad+1,?_efgtoa+1
  7111  01012A  0012               	return	
  7112  01012C                     l11935:
  7113                           
  7114                           ; BSR set to: 0
  7115                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 365:     if (( __fpclassifyf(
      +                          g) == 0 )) {
  7116  01012C  C0C3  F060         	movff	efgtoa@g,___fpclassifyf@x
  7117  010130  C0C4  F061         	movff	efgtoa@g+1,___fpclassifyf@x+1
  7118  010134  C0C5  F062         	movff	efgtoa@g+2,___fpclassifyf@x+2
  7119  010138  C0C6  F063         	movff	efgtoa@g+3,___fpclassifyf@x+3
  7120  01013C  EC2F  F09B         	call	___fpclassifyf	;wreg free
  7121  010140  5160               	movf	?___fpclassifyf& (0+255),w,b
  7122  010142  1161               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
  7123  010144  A4D8               	btfss	status,2,c
  7124  010146  D02B               	goto	l11953
  7125                           
  7126                           ; BSR set to: 0
  7127  010148  0EBF               	movlw	191
  7128  01014A  6F9A               	movwf	??_efgtoa& (0+255),b
  7129  01014C  0EFF               	movlw	255
  7130  01014E  6F9B               	movwf	(??_efgtoa+1)& (0+255),b
  7131  010150  5199               	movf	efgtoa@c& (0+255),w,b
  7132  010152  6F9C               	movwf	(??_efgtoa+2)& (0+255),b
  7133  010154  6B9D               	clrf	(??_efgtoa+3)& (0+255),b
  7134  010156  519A               	movf	??_efgtoa& (0+255),w,b
  7135  010158  279C               	addwf	(??_efgtoa+2)& (0+255),f,b
  7136  01015A  519B               	movf	(??_efgtoa+1)& (0+255),w,b
  7137  01015C  239D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  7138  01015E  519D               	movf	(??_efgtoa+3)& (0+255),w,b
  7139  010160  E111               	bnz	l11945
  7140  010162  0E1A               	movlw	26
  7141  010164  5D9C               	subwf	(??_efgtoa+2)& (0+255),w,b
  7142  010166  B0D8               	btfsc	status,0,c
  7143  010168  D00D               	goto	l11945
  7144                           
  7145                           ; BSR set to: 0
  7146                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 367:             strcpy(&dbuf
      +                          [n], "NAN");
  7147  01016A  0E43               	movlw	low _dbuf
  7148  01016C  25CB               	addwf	efgtoa@n& (0+255),w,b
  7149  01016E  6F60               	movwf	strcpy@dest& (0+255),b
  7150  010170  0E01               	movlw	high _dbuf
  7151  010172  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7152  010174  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  7153  010176  0ED1               	movlw	low STR_34
  7154  010178  6F62               	movwf	strcpy@src& (0+255),b
  7155  01017A  0EFF               	movlw	high STR_34
  7156  01017C  6F63               	movwf	(strcpy@src+1)& (0+255),b
  7157  01017E  EC95  F09F         	call	_strcpy	;wreg free
  7158                           
  7159                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 368:         } else {
  7160  010182  D7BB               	goto	l11929
  7161  010184                     l11945:
  7162                           
  7163                           ; BSR set to: 0
  7164                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 369:             strcpy(&dbuf
      +                          [n], "nan");
  7165  010184  0E43               	movlw	low _dbuf
  7166  010186  25CB               	addwf	efgtoa@n& (0+255),w,b
  7167  010188  6F60               	movwf	strcpy@dest& (0+255),b
  7168  01018A  0E01               	movlw	high _dbuf
  7169  01018C  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7170  01018E  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  7171  010190  0ED9               	movlw	low STR_35
  7172  010192  6F62               	movwf	strcpy@src& (0+255),b
  7173  010194  0EFF               	movlw	high STR_35
  7174  010196  6F63               	movwf	(strcpy@src+1)& (0+255),b
  7175  010198  EC95  F09F         	call	_strcpy	;wreg free
  7176  01019C  D7AE               	goto	l11929
  7177  01019E                     l11953:
  7178                           
  7179                           ; BSR set to: 0
  7180                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 376:     u = 1.0;
  7181  01019E  0E00               	movlw	0
  7182  0101A0  6FCD               	movwf	efgtoa@u& (0+255),b
  7183  0101A2  0E00               	movlw	0
  7184  0101A4  6FCE               	movwf	(efgtoa@u+1)& (0+255),b
  7185  0101A6  0E80               	movlw	128
  7186  0101A8  6FCF               	movwf	(efgtoa@u+2)& (0+255),b
  7187  0101AA  0E3F               	movlw	63
  7188  0101AC  6FD0               	movwf	(efgtoa@u+3)& (0+255),b
  7189                           
  7190                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 377:     e = 0;
  7191  0101AE  0E00               	movlw	0
  7192  0101B0  6FCA               	movwf	(efgtoa@e+1)& (0+255),b
  7193  0101B2  0E00               	movlw	0
  7194  0101B4  6FC9               	movwf	efgtoa@e& (0+255),b
  7195                           
  7196                           ; BSR set to: 0
  7197                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 378:     if (!(g == 0.0)) {
  7198  0101B6  C0C3  F060         	movff	efgtoa@g,___fleq@ff1
  7199  0101BA  C0C4  F061         	movff	efgtoa@g+1,___fleq@ff1+1
  7200  0101BE  C0C5  F062         	movff	efgtoa@g+2,___fleq@ff1+2
  7201  0101C2  C0C6  F063         	movff	efgtoa@g+3,___fleq@ff1+3
  7202  0101C6  0E00               	movlw	0
  7203  0101C8  6F64               	movwf	___fleq@ff2& (0+255),b
  7204  0101CA  0E00               	movlw	0
  7205  0101CC  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
  7206  0101CE  0E00               	movlw	0
  7207  0101D0  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
  7208  0101D2  0E00               	movlw	0
  7209  0101D4  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
  7210  0101D6  ECFE  F09D         	call	___fleq	;wreg free
  7211  0101DA  A0D8               	btfss	status,0,c
  7212  0101DC  D01D               	goto	l11963
  7213  0101DE  D074               	goto	u12090
  7214  0101E0                     l11959:
  7215                           
  7216                           ; BSR set to: 0
  7217                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 380:             u = u*10.0;
  7218  0101E0  C0CD  F06E         	movff	efgtoa@u,___flmul@b
  7219  0101E4  C0CE  F06F         	movff	efgtoa@u+1,___flmul@b+1
  7220  0101E8  C0CF  F070         	movff	efgtoa@u+2,___flmul@b+2
  7221  0101EC  C0D0  F071         	movff	efgtoa@u+3,___flmul@b+3
  7222  0101F0  0E00               	movlw	0
  7223  0101F2  6F72               	movwf	___flmul@a& (0+255),b
  7224  0101F4  0E00               	movlw	0
  7225  0101F6  6F73               	movwf	(___flmul@a+1)& (0+255),b
  7226  0101F8  0E20               	movlw	32
  7227  0101FA  6F74               	movwf	(___flmul@a+2)& (0+255),b
  7228  0101FC  0E41               	movlw	65
  7229  0101FE  6F75               	movwf	(___flmul@a+3)& (0+255),b
  7230  010200  EC96  F08D         	call	___flmul	;wreg free
  7231  010204  C06E  F0CD         	movff	?___flmul,efgtoa@u
  7232  010208  C06F  F0CE         	movff	?___flmul+1,efgtoa@u+1
  7233  01020C  C070  F0CF         	movff	?___flmul+2,efgtoa@u+2
  7234  010210  C071  F0D0         	movff	?___flmul+3,efgtoa@u+3
  7235                           
  7236                           ; BSR set to: 0
  7237                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 381:             ++e;
  7238  010214  4BC9               	infsnz	efgtoa@e& (0+255),f,b
  7239  010216  2BCA               	incf	(efgtoa@e+1)& (0+255),f,b
  7240  010218                     l11963:
  7241                           
  7242                           ; BSR set to: 0
  7243                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 379:         while (!(g < (u*
      +                          10.0))) {
  7244  010218  C0C3  F087         	movff	efgtoa@g,___flge@ff1
  7245  01021C  C0C4  F088         	movff	efgtoa@g+1,___flge@ff1+1
  7246  010220  C0C5  F089         	movff	efgtoa@g+2,___flge@ff1+2
  7247  010224  C0C6  F08A         	movff	efgtoa@g+3,___flge@ff1+3
  7248  010228  0E00               	movlw	0
  7249  01022A  6F72               	movwf	___flmul@a& (0+255),b
  7250  01022C  0E00               	movlw	0
  7251  01022E  6F73               	movwf	(___flmul@a+1)& (0+255),b
  7252  010230  0E20               	movlw	32
  7253  010232  6F74               	movwf	(___flmul@a+2)& (0+255),b
  7254  010234  0E41               	movlw	65
  7255  010236  6F75               	movwf	(___flmul@a+3)& (0+255),b
  7256  010238  C0CD  F06E         	movff	efgtoa@u,___flmul@b
  7257  01023C  C0CE  F06F         	movff	efgtoa@u+1,___flmul@b+1
  7258  010240  C0CF  F070         	movff	efgtoa@u+2,___flmul@b+2
  7259  010244  C0D0  F071         	movff	efgtoa@u+3,___flmul@b+3
  7260  010248  EC96  F08D         	call	___flmul	;wreg free
  7261  01024C  C06E  F08B         	movff	?___flmul,___flge@ff2
  7262  010250  C06F  F08C         	movff	?___flmul+1,___flge@ff2+1
  7263  010254  C070  F08D         	movff	?___flmul+2,___flge@ff2+2
  7264  010258  C071  F08E         	movff	?___flmul+3,___flge@ff2+3
  7265  01025C  ECF9  F099         	call	___flge	;wreg free
  7266  010260  A0D8               	btfss	status,0,c
  7267  010262  D01E               	goto	l11969
  7268  010264  D7BD               	goto	l11959
  7269  010266                     l11965:
  7270                           
  7271                           ; BSR set to: 0
  7272                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 384:             u = u/10.0;
  7273  010266  C0CD  F060         	movff	efgtoa@u,___fldiv@b
  7274  01026A  C0CE  F061         	movff	efgtoa@u+1,___fldiv@b+1
  7275  01026E  C0CF  F062         	movff	efgtoa@u+2,___fldiv@b+2
  7276  010272  C0D0  F063         	movff	efgtoa@u+3,___fldiv@b+3
  7277  010276  0E00               	movlw	0
  7278  010278  6F64               	movwf	___fldiv@a& (0+255),b
  7279  01027A  0E00               	movlw	0
  7280  01027C  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  7281  01027E  0E20               	movlw	32
  7282  010280  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  7283  010282  0E41               	movlw	65
  7284  010284  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  7285  010286  ECC4  F090         	call	___fldiv	;wreg free
  7286  01028A  C060  F0CD         	movff	?___fldiv,efgtoa@u
  7287  01028E  C061  F0CE         	movff	?___fldiv+1,efgtoa@u+1
  7288  010292  C062  F0CF         	movff	?___fldiv+2,efgtoa@u+2
  7289  010296  C063  F0D0         	movff	?___fldiv+3,efgtoa@u+3
  7290                           
  7291                           ; BSR set to: 0
  7292                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 385:             --e;
  7293  01029A  07C9               	decf	efgtoa@e& (0+255),f,b
  7294  01029C  A0D8               	btfss	status,0,c
  7295  01029E  07CA               	decf	(efgtoa@e+1)& (0+255),f,b
  7296  0102A0                     l11969:
  7297                           
  7298                           ; BSR set to: 0
  7299                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 383:         while (g < u) {
  7300  0102A0  C0C3  F087         	movff	efgtoa@g,___flge@ff1
  7301  0102A4  C0C4  F088         	movff	efgtoa@g+1,___flge@ff1+1
  7302  0102A8  C0C5  F089         	movff	efgtoa@g+2,___flge@ff1+2
  7303  0102AC  C0C6  F08A         	movff	efgtoa@g+3,___flge@ff1+3
  7304  0102B0  C0CD  F08B         	movff	efgtoa@u,___flge@ff2
  7305  0102B4  C0CE  F08C         	movff	efgtoa@u+1,___flge@ff2+1
  7306  0102B8  C0CF  F08D         	movff	efgtoa@u+2,___flge@ff2+2
  7307  0102BC  C0D0  F08E         	movff	efgtoa@u+3,___flge@ff2+3
  7308  0102C0  ECF9  F099         	call	___flge	;wreg free
  7309  0102C4  A0D8               	btfss	status,0,c
  7310  0102C6  D7CF               	goto	l11965
  7311  0102C8                     u12090:
  7312                           
  7313                           ; BSR set to: 0
  7314                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 390:     mode = (char)tolower
      +                          ((int)c);
  7315  0102C8  C099  F066         	movff	efgtoa@c,tolower@c
  7316  0102CC  6B67               	clrf	(tolower@c+1)& (0+255),b
  7317  0102CE  EC0C  F0A4         	call	_tolower	;wreg free
  7318  0102D2  5166               	movf	?_tolower& (0+255),w,b
  7319  0102D4  6FBA               	movwf	efgtoa@mode& (0+255),b
  7320                           
  7321                           ; BSR set to: 0
  7322                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 391:     nmode = mode;
  7323  0102D6  C0BA  F0B7         	movff	efgtoa@mode,efgtoa@nmode
  7324                           
  7325                           ; BSR set to: 0
  7326                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 392:     if (mode == 'g') {
  7327  0102DA  0E67               	movlw	103
  7328  0102DC  19BA               	xorwf	efgtoa@mode& (0+255),w,b
  7329  0102DE  A4D8               	btfss	status,2,c
  7330  0102E0  D019               	goto	l11985
  7331                           
  7332                           ; BSR set to: 0
  7333                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 393:   if (prec == 0) {
  7334  0102E2  51F6               	movf	_prec& (0+255),w,b
  7335  0102E4  11F7               	iorwf	(_prec+1)& (0+255),w,b
  7336  0102E6  A4D8               	btfss	status,2,c
  7337  0102E8  D004               	goto	l11981
  7338                           
  7339                           ; BSR set to: 0
  7340                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 394:    prec = 1;
  7341  0102EA  0E00               	movlw	0
  7342  0102EC  6FF7               	movwf	(_prec+1)& (0+255),b
  7343  0102EE  0E01               	movlw	1
  7344  0102F0  6FF6               	movwf	_prec& (0+255),b
  7345  0102F2                     l11981:
  7346                           
  7347                           ; BSR set to: 0
  7348                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 396:         p = (0 < prec) ?
      +                           prec : 6;
  7349  0102F2  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  7350  0102F4  D005               	goto	u12120
  7351  0102F6  51F7               	movf	(_prec+1)& (0+255),w,b
  7352  0102F8  E108               	bnz	l2574
  7353  0102FA  05F6               	decf	_prec& (0+255),w,b
  7354  0102FC  B0D8               	btfsc	status,0,c
  7355  0102FE  D005               	goto	l2574
  7356  010300                     u12120:
  7357                           
  7358                           ; BSR set to: 0
  7359  010300  0E00               	movlw	0
  7360  010302  6FB6               	movwf	(efgtoa@p+1)& (0+255),b
  7361  010304  0E06               	movlw	6
  7362  010306  6FB5               	movwf	efgtoa@p& (0+255),b
  7363  010308  D008               	goto	l11991
  7364  01030A                     l2574:
  7365                           
  7366                           ; BSR set to: 0
  7367  01030A  C0F6  F0B5         	movff	_prec,efgtoa@p
  7368  01030E  C0F7  F0B6         	movff	_prec+1,efgtoa@p+1
  7369  010312  D003               	goto	l11991
  7370  010314                     l11985:
  7371                           
  7372                           ; BSR set to: 0
  7373                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 398:         p = (prec < 0) ?
      +                           6 : prec;
  7374  010314  AFF7               	btfss	(_prec+1)& (0+255),7,b
  7375  010316  D7F9               	goto	l2574
  7376  010318  D7F3               	goto	u12120
  7377  01031A                     l11991:
  7378                           
  7379                           ; BSR set to: 0
  7380                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 402:     if (mode == 'g') {
  7381  01031A  0E67               	movlw	103
  7382  01031C  19BA               	xorwf	efgtoa@mode& (0+255),w,b
  7383  01031E  A4D8               	btfss	status,2,c
  7384  010320  D022               	goto	l12001
  7385                           
  7386                           ; BSR set to: 0
  7387                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 403:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
  7388  010322  AFCA               	btfss	(efgtoa@e+1)& (0+255),7,b
  7389  010324  D006               	goto	u12150
  7390  010326  0EFC               	movlw	252
  7391  010328  5DC9               	subwf	efgtoa@e& (0+255),w,b
  7392  01032A  0EFF               	movlw	255
  7393  01032C  59CA               	subwfb	(efgtoa@e+1)& (0+255),w,b
  7394  01032E  A0D8               	btfss	status,0,c
  7395  010330  D018               	goto	l11999
  7396  010332                     u12150:
  7397                           
  7398                           ; BSR set to: 0
  7399  010332  0EFF               	movlw	255
  7400  010334  6F9A               	movwf	??_efgtoa& (0+255),b
  7401  010336  0EFF               	movlw	255
  7402  010338  6F9B               	movwf	(??_efgtoa+1)& (0+255),b
  7403  01033A  C0B5  F09C         	movff	efgtoa@p,??_efgtoa+2
  7404  01033E  C0B6  F09D         	movff	efgtoa@p+1,??_efgtoa+3
  7405  010342  519A               	movf	??_efgtoa& (0+255),w,b
  7406  010344  279C               	addwf	(??_efgtoa+2)& (0+255),f,b
  7407  010346  519B               	movf	(??_efgtoa+1)& (0+255),w,b
  7408  010348  239D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  7409  01034A  51C9               	movf	efgtoa@e& (0+255),w,b
  7410  01034C  5D9C               	subwf	(??_efgtoa+2)& (0+255),w,b
  7411  01034E  519D               	movf	(??_efgtoa+3)& (0+255),w,b
  7412  010350  0A80               	xorlw	128
  7413  010352  6F9E               	movwf	(??_efgtoa+4)& (0+255),b
  7414  010354  51CA               	movf	(efgtoa@e+1)& (0+255),w,b
  7415  010356  0A80               	xorlw	128
  7416  010358  599E               	subwfb	(??_efgtoa+4)& (0+255),w,b
  7417  01035A  A0D8               	btfss	status,0,c
  7418  01035C  D002               	goto	l11999
  7419                           
  7420                           ; BSR set to: 0
  7421                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 404:             nmode = 'f';
  7422  01035E  0E66               	movlw	102
  7423  010360  D001               	goto	L4
  7424  010362                     l11999:
  7425                           
  7426                           ; BSR set to: 0
  7427                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 406:             nmode = 'e';
  7428  010362  0E65               	movlw	101
  7429  010364                     L4:
  7430  010364  6FB7               	movwf	efgtoa@nmode& (0+255),b
  7431  010366                     l12001:
  7432                           
  7433                           ; BSR set to: 0
  7434                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 411:     m = p;
  7435  010366  C0B5  F0AB         	movff	efgtoa@p,efgtoa@m
  7436  01036A  C0B6  F0AC         	movff	efgtoa@p+1,efgtoa@m+1
  7437                           
  7438                           ; BSR set to: 0
  7439                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 412:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
  7440  01036E  0E67               	movlw	103
  7441  010370  19BA               	xorwf	efgtoa@mode& (0+255),w,b
  7442  010372  A4D8               	btfss	status,2,c
  7443  010374  D005               	goto	u12190
  7444                           
  7445                           ; BSR set to: 0
  7446  010376  0E66               	movlw	102
  7447  010378  19B7               	xorwf	efgtoa@nmode& (0+255),w,b
  7448  01037A  B4D8               	btfsc	status,2,c
  7449                           
  7450                           ; BSR set to: 0
  7451  01037C  AFCA               	btfss	(efgtoa@e+1)& (0+255),7,b
  7452  01037E  D002               	goto	l12011
  7453  010380                     u12190:
  7454                           
  7455                           ; BSR set to: 0
  7456                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 413:         ++m;
  7457  010380  4BAB               	infsnz	efgtoa@m& (0+255),f,b
  7458  010382  2BAC               	incf	(efgtoa@m+1)& (0+255),f,b
  7459  010384                     l12011:
  7460                           
  7461                           ; BSR set to: 0
  7462                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 417:     if (nmode == 'f') {
  7463  010384  0E66               	movlw	102
  7464  010386  19B7               	xorwf	efgtoa@nmode& (0+255),w,b
  7465  010388  A4D8               	btfss	status,2,c
  7466  01038A  D016               	goto	l12021
  7467                           
  7468                           ; BSR set to: 0
  7469                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 418:         if (e < 0) {
  7470  01038C  AFCA               	btfss	(efgtoa@e+1)& (0+255),7,b
  7471  01038E  D00C               	goto	l12017
  7472                           
  7473                           ; BSR set to: 0
  7474                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 419:             u = 1.0;
  7475  010390  0E00               	movlw	0
  7476  010392  6FCD               	movwf	efgtoa@u& (0+255),b
  7477  010394  0E00               	movlw	0
  7478  010396  6FCE               	movwf	(efgtoa@u+1)& (0+255),b
  7479  010398  0E80               	movlw	128
  7480  01039A  6FCF               	movwf	(efgtoa@u+2)& (0+255),b
  7481  01039C  0E3F               	movlw	63
  7482  01039E  6FD0               	movwf	(efgtoa@u+3)& (0+255),b
  7483                           
  7484                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 420:             e = 0;
  7485  0103A0  0E00               	movlw	0
  7486  0103A2  6FCA               	movwf	(efgtoa@e+1)& (0+255),b
  7487  0103A4  0E00               	movlw	0
  7488  0103A6  6FC9               	movwf	efgtoa@e& (0+255),b
  7489  0103A8                     l12017:
  7490                           
  7491                           ; BSR set to: 0
  7492                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 422:         if (!(mode == 'g
      +                          ')) {
  7493  0103A8  0E67               	movlw	103
  7494  0103AA  19BA               	xorwf	efgtoa@mode& (0+255),w,b
  7495  0103AC  B4D8               	btfsc	status,2,c
  7496  0103AE  D004               	goto	l12021
  7497                           
  7498                           ; BSR set to: 0
  7499                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 423:             m += e;
  7500  0103B0  51C9               	movf	efgtoa@e& (0+255),w,b
  7501  0103B2  27AB               	addwf	efgtoa@m& (0+255),f,b
  7502  0103B4  51CA               	movf	(efgtoa@e+1)& (0+255),w,b
  7503  0103B6  23AC               	addwfc	(efgtoa@m+1)& (0+255),f,b
  7504  0103B8                     l12021:
  7505                           
  7506                           ; BSR set to: 0
  7507                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 428:     i = 0;
  7508  0103B8  0E00               	movlw	0
  7509  0103BA  6FC8               	movwf	(efgtoa@i+1)& (0+255),b
  7510  0103BC  0E00               	movlw	0
  7511  0103BE  6FC7               	movwf	efgtoa@i& (0+255),b
  7512                           
  7513                           ; BSR set to: 0
  7514                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 429:     h = g;
  7515  0103C0  C0C3  F0BB         	movff	efgtoa@g,efgtoa@h
  7516  0103C4  C0C4  F0BC         	movff	efgtoa@g+1,efgtoa@h+1
  7517  0103C8  C0C5  F0BD         	movff	efgtoa@g+2,efgtoa@h+2
  7518  0103CC  C0C6  F0BE         	movff	efgtoa@g+3,efgtoa@h+3
  7519                           
  7520                           ; BSR set to: 0
  7521                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 430:     ou = u;
  7522  0103D0  C0CD  F0AD         	movff	efgtoa@u,efgtoa@ou
  7523  0103D4  C0CE  F0AE         	movff	efgtoa@u+1,efgtoa@ou+1
  7524  0103D8  C0CF  F0AF         	movff	efgtoa@u+2,efgtoa@ou+2
  7525  0103DC  C0D0  F0B0         	movff	efgtoa@u+3,efgtoa@ou+3
  7526                           
  7527                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 431:     while (i < m) {
  7528  0103E0  D07A               	goto	l12035
  7529  0103E2                     l12027:
  7530                           
  7531                           ; BSR set to: 0
  7532                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 432:         l = floorf(h/u);
  7533  0103E2  C0BB  F060         	movff	efgtoa@h,___fldiv@b
  7534  0103E6  C0BC  F061         	movff	efgtoa@h+1,___fldiv@b+1
  7535  0103EA  C0BD  F062         	movff	efgtoa@h+2,___fldiv@b+2
  7536  0103EE  C0BE  F063         	movff	efgtoa@h+3,___fldiv@b+3
  7537  0103F2  C0CD  F064         	movff	efgtoa@u,___fldiv@a
  7538  0103F6  C0CE  F065         	movff	efgtoa@u+1,___fldiv@a+1
  7539  0103FA  C0CF  F066         	movff	efgtoa@u+2,___fldiv@a+2
  7540  0103FE  C0D0  F067         	movff	efgtoa@u+3,___fldiv@a+3
  7541  010402  ECC4  F090         	call	___fldiv	;wreg free
  7542  010406  C060  F079         	movff	?___fldiv,floorf@x
  7543  01040A  C061  F07A         	movff	?___fldiv+1,floorf@x+1
  7544  01040E  C062  F07B         	movff	?___fldiv+2,floorf@x+2
  7545  010412  C063  F07C         	movff	?___fldiv+3,floorf@x+3
  7546  010416  ECBC  F093         	call	_floorf	;wreg free
  7547  01041A  C079  F0BF         	movff	?_floorf,efgtoa@l
  7548  01041E  C07A  F0C0         	movff	?_floorf+1,efgtoa@l+1
  7549  010422  C07B  F0C1         	movff	?_floorf+2,efgtoa@l+2
  7550  010426  C07C  F0C2         	movff	?_floorf+3,efgtoa@l+3
  7551                           
  7552                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 433:         d = (int)l;
  7553  01042A  C0BF  F060         	movff	efgtoa@l,___fltol@f1
  7554  01042E  C0C0  F061         	movff	efgtoa@l+1,___fltol@f1+1
  7555  010432  C0C1  F062         	movff	efgtoa@l+2,___fltol@f1+2
  7556  010436  C0C2  F063         	movff	efgtoa@l+3,___fltol@f1+3
  7557  01043A  ECF6  F09B         	call	___fltol	;wreg free
  7558  01043E  C060  F0B1         	movff	?___fltol,efgtoa@d
  7559  010442  C061  F0B2         	movff	?___fltol+1,efgtoa@d+1
  7560                           
  7561                           ; BSR set to: 0
  7562                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 434:         h -= l*u;
  7563  010446  C0BB  F087         	movff	efgtoa@h,___flsub@b
  7564  01044A  C0BC  F088         	movff	efgtoa@h+1,___flsub@b+1
  7565  01044E  C0BD  F089         	movff	efgtoa@h+2,___flsub@b+2
  7566  010452  C0BE  F08A         	movff	efgtoa@h+3,___flsub@b+3
  7567  010456  C0CD  F072         	movff	efgtoa@u,___flmul@a
  7568  01045A  C0CE  F073         	movff	efgtoa@u+1,___flmul@a+1
  7569  01045E  C0CF  F074         	movff	efgtoa@u+2,___flmul@a+2
  7570  010462  C0D0  F075         	movff	efgtoa@u+3,___flmul@a+3
  7571  010466  C0BF  F06E         	movff	efgtoa@l,___flmul@b
  7572  01046A  C0C0  F06F         	movff	efgtoa@l+1,___flmul@b+1
  7573  01046E  C0C1  F070         	movff	efgtoa@l+2,___flmul@b+2
  7574  010472  C0C2  F071         	movff	efgtoa@l+3,___flmul@b+3
  7575  010476  EC96  F08D         	call	___flmul	;wreg free
  7576  01047A  C06E  F08B         	movff	?___flmul,___flsub@a
  7577  01047E  C06F  F08C         	movff	?___flmul+1,___flsub@a+1
  7578  010482  C070  F08D         	movff	?___flmul+2,___flsub@a+2
  7579  010486  C071  F08E         	movff	?___flmul+3,___flsub@a+3
  7580  01048A  EC4E  F0A2         	call	___flsub	;wreg free
  7581  01048E  C087  F0BB         	movff	?___flsub,efgtoa@h
  7582  010492  C088  F0BC         	movff	?___flsub+1,efgtoa@h+1
  7583  010496  C089  F0BD         	movff	?___flsub+2,efgtoa@h+2
  7584  01049A  C08A  F0BE         	movff	?___flsub+3,efgtoa@h+3
  7585                           
  7586                           ; BSR set to: 0
  7587                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 435:         u = u/10.0;
  7588  01049E  C0CD  F060         	movff	efgtoa@u,___fldiv@b
  7589  0104A2  C0CE  F061         	movff	efgtoa@u+1,___fldiv@b+1
  7590  0104A6  C0CF  F062         	movff	efgtoa@u+2,___fldiv@b+2
  7591  0104AA  C0D0  F063         	movff	efgtoa@u+3,___fldiv@b+3
  7592  0104AE  0E00               	movlw	0
  7593  0104B0  6F64               	movwf	___fldiv@a& (0+255),b
  7594  0104B2  0E00               	movlw	0
  7595  0104B4  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  7596  0104B6  0E20               	movlw	32
  7597  0104B8  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  7598  0104BA  0E41               	movlw	65
  7599  0104BC  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  7600  0104BE  ECC4  F090         	call	___fldiv	;wreg free
  7601  0104C2  C060  F0CD         	movff	?___fldiv,efgtoa@u
  7602  0104C6  C061  F0CE         	movff	?___fldiv+1,efgtoa@u+1
  7603  0104CA  C062  F0CF         	movff	?___fldiv+2,efgtoa@u+2
  7604  0104CE  C063  F0D0         	movff	?___fldiv+3,efgtoa@u+3
  7605                           
  7606                           ; BSR set to: 0
  7607                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 436:         ++i;
  7608  0104D2  4BC7               	infsnz	efgtoa@i& (0+255),f,b
  7609  0104D4  2BC8               	incf	(efgtoa@i+1)& (0+255),f,b
  7610  0104D6                     l12035:
  7611                           
  7612                           ; BSR set to: 0
  7613                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 431:     while (i < m) {
  7614  0104D6  51AB               	movf	efgtoa@m& (0+255),w,b
  7615  0104D8  5DC7               	subwf	efgtoa@i& (0+255),w,b
  7616  0104DA  51C8               	movf	(efgtoa@i+1)& (0+255),w,b
  7617  0104DC  0A80               	xorlw	128
  7618  0104DE  6F9A               	movwf	??_efgtoa& (0+255),b
  7619  0104E0  51AC               	movf	(efgtoa@m+1)& (0+255),w,b
  7620  0104E2  0A80               	xorlw	128
  7621  0104E4  599A               	subwfb	??_efgtoa& (0+255),w,b
  7622  0104E6  A0D8               	btfss	status,0,c
  7623  0104E8  D77C               	goto	l12027
  7624                           
  7625                           ; BSR set to: 0
  7626                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 440:     l = u*5.0;
  7627  0104EA  C0CD  F06E         	movff	efgtoa@u,___flmul@b
  7628  0104EE  C0CE  F06F         	movff	efgtoa@u+1,___flmul@b+1
  7629  0104F2  C0CF  F070         	movff	efgtoa@u+2,___flmul@b+2
  7630  0104F6  C0D0  F071         	movff	efgtoa@u+3,___flmul@b+3
  7631  0104FA  0E00               	movlw	0
  7632  0104FC  6F72               	movwf	___flmul@a& (0+255),b
  7633  0104FE  0E00               	movlw	0
  7634  010500  6F73               	movwf	(___flmul@a+1)& (0+255),b
  7635  010502  0EA0               	movlw	160
  7636  010504  6F74               	movwf	(___flmul@a+2)& (0+255),b
  7637  010506  0E40               	movlw	64
  7638  010508  6F75               	movwf	(___flmul@a+3)& (0+255),b
  7639  01050A  EC96  F08D         	call	___flmul	;wreg free
  7640  01050E  C06E  F0BF         	movff	?___flmul,efgtoa@l
  7641  010512  C06F  F0C0         	movff	?___flmul+1,efgtoa@l+1
  7642  010516  C070  F0C1         	movff	?___flmul+2,efgtoa@l+2
  7643  01051A  C071  F0C2         	movff	?___flmul+3,efgtoa@l+3
  7644                           
  7645                           ; BSR set to: 0
  7646                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 441:     if (h < l) {
  7647  01051E  C0BB  F087         	movff	efgtoa@h,___flge@ff1
  7648  010522  C0BC  F088         	movff	efgtoa@h+1,___flge@ff1+1
  7649  010526  C0BD  F089         	movff	efgtoa@h+2,___flge@ff1+2
  7650  01052A  C0BE  F08A         	movff	efgtoa@h+3,___flge@ff1+3
  7651  01052E  C0BF  F08B         	movff	efgtoa@l,___flge@ff2
  7652  010532  C0C0  F08C         	movff	efgtoa@l+1,___flge@ff2+1
  7653  010536  C0C1  F08D         	movff	efgtoa@l+2,___flge@ff2+2
  7654  01053A  C0C2  F08E         	movff	efgtoa@l+3,___flge@ff2+3
  7655  01053E  ECF9  F099         	call	___flge	;wreg free
  7656  010542  A0D8               	btfss	status,0,c
  7657  010544  D015               	goto	u12260
  7658                           
  7659                           ; BSR set to: 0
  7660                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 445:         if ((h == l) && 
      +                          !(d % 2)) {
  7661                           
  7662                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 443:     } else {
  7663                           
  7664                           ; BSR set to: 0
  7665                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 442:         l = 0.0;
  7666  010546  C0BB  F060         	movff	efgtoa@h,___fleq@ff1
  7667  01054A  C0BC  F061         	movff	efgtoa@h+1,___fleq@ff1+1
  7668  01054E  C0BD  F062         	movff	efgtoa@h+2,___fleq@ff1+2
  7669  010552  C0BE  F063         	movff	efgtoa@h+3,___fleq@ff1+3
  7670  010556  C0BF  F064         	movff	efgtoa@l,___fleq@ff2
  7671  01055A  C0C0  F065         	movff	efgtoa@l+1,___fleq@ff2+1
  7672  01055E  C0C1  F066         	movff	efgtoa@l+2,___fleq@ff2+2
  7673  010562  C0C2  F067         	movff	efgtoa@l+3,___fleq@ff2+3
  7674  010566  ECFE  F09D         	call	___fleq	;wreg free
  7675  01056A  B0D8               	btfsc	status,0,c
  7676                           
  7677                           ; BSR set to: 0
  7678  01056C  B1B1               	btfsc	efgtoa@d& (0+255),0,b
  7679  01056E  D008               	goto	l12049
  7680  010570                     u12260:
  7681                           
  7682                           ; BSR set to: 0
  7683                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 446:             l = 0.0;
  7684  010570  0E00               	movlw	0
  7685  010572  6FBF               	movwf	efgtoa@l& (0+255),b
  7686  010574  0E00               	movlw	0
  7687  010576  6FC0               	movwf	(efgtoa@l+1)& (0+255),b
  7688  010578  0E00               	movlw	0
  7689  01057A  6FC1               	movwf	(efgtoa@l+2)& (0+255),b
  7690  01057C  0E00               	movlw	0
  7691  01057E  6FC2               	movwf	(efgtoa@l+3)& (0+255),b
  7692  010580                     l12049:
  7693                           
  7694                           ; BSR set to: 0
  7695                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 451:     h = g + l;
  7696  010580  C0C3  F060         	movff	efgtoa@g,___fladd@b
  7697  010584  C0C4  F061         	movff	efgtoa@g+1,___fladd@b+1
  7698  010588  C0C5  F062         	movff	efgtoa@g+2,___fladd@b+2
  7699  01058C  C0C6  F063         	movff	efgtoa@g+3,___fladd@b+3
  7700  010590  C0BF  F064         	movff	efgtoa@l,___fladd@a
  7701  010594  C0C0  F065         	movff	efgtoa@l+1,___fladd@a+1
  7702  010598  C0C1  F066         	movff	efgtoa@l+2,___fladd@a+2
  7703  01059C  C0C2  F067         	movff	efgtoa@l+3,___fladd@a+3
  7704  0105A0  EC3E  F08F         	call	___fladd	;wreg free
  7705  0105A4  C060  F0BB         	movff	?___fladd,efgtoa@h
  7706  0105A8  C061  F0BC         	movff	?___fladd+1,efgtoa@h+1
  7707  0105AC  C062  F0BD         	movff	?___fladd+2,efgtoa@h+2
  7708  0105B0  C063  F0BE         	movff	?___fladd+3,efgtoa@h+3
  7709                           
  7710                           ; BSR set to: 0
  7711                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 453:  if (h >= (ou*10.0)) {
  7712  0105B4  C0BB  F087         	movff	efgtoa@h,___flge@ff1
  7713  0105B8  C0BC  F088         	movff	efgtoa@h+1,___flge@ff1+1
  7714  0105BC  C0BD  F089         	movff	efgtoa@h+2,___flge@ff1+2
  7715  0105C0  C0BE  F08A         	movff	efgtoa@h+3,___flge@ff1+3
  7716  0105C4  0E00               	movlw	0
  7717  0105C6  6F72               	movwf	___flmul@a& (0+255),b
  7718  0105C8  0E00               	movlw	0
  7719  0105CA  6F73               	movwf	(___flmul@a+1)& (0+255),b
  7720  0105CC  0E20               	movlw	32
  7721  0105CE  6F74               	movwf	(___flmul@a+2)& (0+255),b
  7722  0105D0  0E41               	movlw	65
  7723  0105D2  6F75               	movwf	(___flmul@a+3)& (0+255),b
  7724  0105D4  C0AD  F06E         	movff	efgtoa@ou,___flmul@b
  7725  0105D8  C0AE  F06F         	movff	efgtoa@ou+1,___flmul@b+1
  7726  0105DC  C0AF  F070         	movff	efgtoa@ou+2,___flmul@b+2
  7727  0105E0  C0B0  F071         	movff	efgtoa@ou+3,___flmul@b+3
  7728  0105E4  EC96  F08D         	call	___flmul	;wreg free
  7729  0105E8  C06E  F08B         	movff	?___flmul,___flge@ff2
  7730  0105EC  C06F  F08C         	movff	?___flmul+1,___flge@ff2+1
  7731  0105F0  C070  F08D         	movff	?___flmul+2,___flge@ff2+2
  7732  0105F4  C071  F08E         	movff	?___flmul+3,___flge@ff2+3
  7733  0105F8  ECF9  F099         	call	___flge	;wreg free
  7734  0105FC  A0D8               	btfss	status,0,c
  7735  0105FE  D022               	goto	l12061
  7736                           
  7737                           ; BSR set to: 0
  7738                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 454:   e++;
  7739  010600  4BC9               	infsnz	efgtoa@e& (0+255),f,b
  7740  010602  2BCA               	incf	(efgtoa@e+1)& (0+255),f,b
  7741                           
  7742                           ; BSR set to: 0
  7743                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 455:   ou *= 10.0;
  7744  010604  C0AD  F06E         	movff	efgtoa@ou,___flmul@b
  7745  010608  C0AE  F06F         	movff	efgtoa@ou+1,___flmul@b+1
  7746  01060C  C0AF  F070         	movff	efgtoa@ou+2,___flmul@b+2
  7747  010610  C0B0  F071         	movff	efgtoa@ou+3,___flmul@b+3
  7748  010614  0E00               	movlw	0
  7749  010616  6F72               	movwf	___flmul@a& (0+255),b
  7750  010618  0E00               	movlw	0
  7751  01061A  6F73               	movwf	(___flmul@a+1)& (0+255),b
  7752  01061C  0E20               	movlw	32
  7753  01061E  6F74               	movwf	(___flmul@a+2)& (0+255),b
  7754  010620  0E41               	movlw	65
  7755  010622  6F75               	movwf	(___flmul@a+3)& (0+255),b
  7756  010624  EC96  F08D         	call	___flmul	;wreg free
  7757  010628  C06E  F0AD         	movff	?___flmul,efgtoa@ou
  7758  01062C  C06F  F0AE         	movff	?___flmul+1,efgtoa@ou+1
  7759  010630  C070  F0AF         	movff	?___flmul+2,efgtoa@ou+2
  7760  010634  C071  F0B0         	movff	?___flmul+3,efgtoa@ou+3
  7761                           
  7762                           ; BSR set to: 0
  7763                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 456:   if (nmode == 'f') {
  7764  010638  0E66               	movlw	102
  7765  01063A  19B7               	xorwf	efgtoa@nmode& (0+255),w,b
  7766  01063C  A4D8               	btfss	status,2,c
  7767  01063E  D002               	goto	l12061
  7768                           
  7769                           ; BSR set to: 0
  7770                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 458:    m++;
  7771  010640  4BAB               	infsnz	efgtoa@m& (0+255),f,b
  7772  010642  2BAC               	incf	(efgtoa@m+1)& (0+255),f,b
  7773  010644                     l12061:
  7774                           
  7775                           ; BSR set to: 0
  7776                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 463:     u = ou;
  7777  010644  C0AD  F0CD         	movff	efgtoa@ou,efgtoa@u
  7778  010648  C0AE  F0CE         	movff	efgtoa@ou+1,efgtoa@u+1
  7779  01064C  C0AF  F0CF         	movff	efgtoa@ou+2,efgtoa@u+2
  7780  010650  C0B0  F0D0         	movff	efgtoa@ou+3,efgtoa@u+3
  7781                           
  7782                           ; BSR set to: 0
  7783                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 464:     ne = (nmode == 'e') 
      +                          ? 0 : e;
  7784  010654  0E65               	movlw	101
  7785  010656  19B7               	xorwf	efgtoa@nmode& (0+255),w,b
  7786  010658  B4D8               	btfsc	status,2,c
  7787  01065A  D005               	goto	l12067
  7788                           
  7789                           ; BSR set to: 0
  7790  01065C  C0C9  F0A9         	movff	efgtoa@e,efgtoa@ne
  7791  010660  C0CA  F0AA         	movff	efgtoa@e+1,efgtoa@ne+1
  7792  010664  D004               	goto	l2602
  7793  010666                     l12067:
  7794                           
  7795                           ; BSR set to: 0
  7796  010666  0E00               	movlw	0
  7797  010668  6FAA               	movwf	(efgtoa@ne+1)& (0+255),b
  7798  01066A  0E00               	movlw	0
  7799  01066C  6FA9               	movwf	efgtoa@ne& (0+255),b
  7800  01066E                     l2602:
  7801                           
  7802                           ; BSR set to: 0
  7803                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 465:     pp = 0;
  7804  01066E  0E00               	movlw	0
  7805  010670  6FA8               	movwf	(efgtoa@pp+1)& (0+255),b
  7806  010672  0E00               	movlw	0
  7807  010674  6FA7               	movwf	efgtoa@pp& (0+255),b
  7808                           
  7809                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 466:     t = 0;
  7810  010676  0E00               	movlw	0
  7811  010678  6FA6               	movwf	(efgtoa@t+1)& (0+255),b
  7812  01067A  0E00               	movlw	0
  7813  01067C  6FA5               	movwf	efgtoa@t& (0+255),b
  7814                           
  7815                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 467:     i = 0;
  7816  01067E  0E00               	movlw	0
  7817  010680  6FC8               	movwf	(efgtoa@i+1)& (0+255),b
  7818  010682  0E00               	movlw	0
  7819  010684  6FC7               	movwf	efgtoa@i& (0+255),b
  7820                           
  7821                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 468:     while ((i < m) && (n
      +                           < (80 - 5))) {
  7822  010686  D0C4               	goto	l12117
  7823  010688                     l12069:
  7824                           
  7825                           ; BSR set to: 0
  7826                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 469:         l = floorf(h/u);
  7827  010688  C0BB  F060         	movff	efgtoa@h,___fldiv@b
  7828  01068C  C0BC  F061         	movff	efgtoa@h+1,___fldiv@b+1
  7829  010690  C0BD  F062         	movff	efgtoa@h+2,___fldiv@b+2
  7830  010694  C0BE  F063         	movff	efgtoa@h+3,___fldiv@b+3
  7831  010698  C0CD  F064         	movff	efgtoa@u,___fldiv@a
  7832  01069C  C0CE  F065         	movff	efgtoa@u+1,___fldiv@a+1
  7833  0106A0  C0CF  F066         	movff	efgtoa@u+2,___fldiv@a+2
  7834  0106A4  C0D0  F067         	movff	efgtoa@u+3,___fldiv@a+3
  7835  0106A8  ECC4  F090         	call	___fldiv	;wreg free
  7836  0106AC  C060  F079         	movff	?___fldiv,floorf@x
  7837  0106B0  C061  F07A         	movff	?___fldiv+1,floorf@x+1
  7838  0106B4  C062  F07B         	movff	?___fldiv+2,floorf@x+2
  7839  0106B8  C063  F07C         	movff	?___fldiv+3,floorf@x+3
  7840  0106BC  ECBC  F093         	call	_floorf	;wreg free
  7841  0106C0  C079  F0BF         	movff	?_floorf,efgtoa@l
  7842  0106C4  C07A  F0C0         	movff	?_floorf+1,efgtoa@l+1
  7843  0106C8  C07B  F0C1         	movff	?_floorf+2,efgtoa@l+2
  7844  0106CC  C07C  F0C2         	movff	?_floorf+3,efgtoa@l+3
  7845                           
  7846                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 470:         d = (int)l;
  7847  0106D0  C0BF  F060         	movff	efgtoa@l,___fltol@f1
  7848  0106D4  C0C0  F061         	movff	efgtoa@l+1,___fltol@f1+1
  7849  0106D8  C0C1  F062         	movff	efgtoa@l+2,___fltol@f1+2
  7850  0106DC  C0C2  F063         	movff	efgtoa@l+3,___fltol@f1+3
  7851  0106E0  ECF6  F09B         	call	___fltol	;wreg free
  7852  0106E4  C060  F0B1         	movff	?___fltol,efgtoa@d
  7853  0106E8  C061  F0B2         	movff	?___fltol+1,efgtoa@d+1
  7854                           
  7855                           ; BSR set to: 0
  7856                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 471:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
  7857  0106EC  B82D               	btfsc	_flags^0,4,c
  7858  0106EE  D00C               	goto	l12081
  7859                           
  7860                           ; BSR set to: 0
  7861  0106F0  51B1               	movf	efgtoa@d& (0+255),w,b
  7862  0106F2  11B2               	iorwf	(efgtoa@d+1)& (0+255),w,b
  7863  0106F4  A4D8               	btfss	status,2,c
  7864  0106F6  D008               	goto	l12081
  7865                           
  7866                           ; BSR set to: 0
  7867  0106F8  0E67               	movlw	103
  7868  0106FA  19BA               	xorwf	efgtoa@mode& (0+255),w,b
  7869  0106FC  B4D8               	btfsc	status,2,c
  7870                           
  7871                           ; BSR set to: 0
  7872  0106FE  AFAA               	btfss	(efgtoa@ne+1)& (0+255),7,b
  7873  010700  D003               	goto	l12081
  7874                           
  7875                           ; BSR set to: 0
  7876                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 472:             ++t;
  7877  010702  4BA5               	infsnz	efgtoa@t& (0+255),f,b
  7878  010704  2BA6               	incf	(efgtoa@t+1)& (0+255),f,b
  7879                           
  7880                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 473:         } else {
  7881  010706  D039               	goto	l12109
  7882  010708                     l12081:
  7883                           
  7884                           ; BSR set to: 0
  7885                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 474:             if (!pp && (
      +                          ne < 0)) {
  7886  010708  51A7               	movf	efgtoa@pp& (0+255),w,b
  7887  01070A  11A8               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  7888  01070C  B4D8               	btfsc	status,2,c
  7889                           
  7890                           ; BSR set to: 0
  7891  01070E  AFAA               	btfss	(efgtoa@ne+1)& (0+255),7,b
  7892  010710  D022               	goto	l12101
  7893                           
  7894                           ; BSR set to: 0
  7895                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 475:                 dbuf[n++
      +                          ] = '.';
  7896  010712  0E43               	movlw	low _dbuf
  7897  010714  25CB               	addwf	efgtoa@n& (0+255),w,b
  7898  010716  6ED9               	movwf	fsr2l,c
  7899  010718  0E01               	movlw	high _dbuf
  7900  01071A  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7901  01071C  6EDA               	movwf	fsr2h,c
  7902  01071E  0E2E               	movlw	46
  7903  010720  6EDF               	movwf	indf2,c
  7904                           
  7905                           ; BSR set to: 0
  7906  010722  4BCB               	infsnz	efgtoa@n& (0+255),f,b
  7907  010724  2BCC               	incf	(efgtoa@n+1)& (0+255),f,b
  7908                           
  7909                           ; BSR set to: 0
  7910                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 476:                 --w;
  7911  010726  07B8               	decf	efgtoa@w& (0+255),f,b
  7912  010728  A0D8               	btfss	status,0,c
  7913  01072A  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  7914                           
  7915                           ; BSR set to: 0
  7916                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 477:                 pp = 1;
  7917  01072C  0E00               	movlw	0
  7918  01072E  6FA8               	movwf	(efgtoa@pp+1)& (0+255),b
  7919  010730  0E01               	movlw	1
  7920  010732  6FA7               	movwf	efgtoa@pp& (0+255),b
  7921  010734  D010               	goto	l12101
  7922  010736                     l12093:
  7923                           
  7924                           ; BSR set to: 0
  7925                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 480:                 dbuf[n++
      +                          ] = '0';
  7926  010736  0E43               	movlw	low _dbuf
  7927  010738  25CB               	addwf	efgtoa@n& (0+255),w,b
  7928  01073A  6ED9               	movwf	fsr2l,c
  7929  01073C  0E01               	movlw	high _dbuf
  7930  01073E  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7931  010740  6EDA               	movwf	fsr2h,c
  7932  010742  0E30               	movlw	48
  7933  010744  6EDF               	movwf	indf2,c
  7934                           
  7935                           ; BSR set to: 0
  7936  010746  4BCB               	infsnz	efgtoa@n& (0+255),f,b
  7937  010748  2BCC               	incf	(efgtoa@n+1)& (0+255),f,b
  7938                           
  7939                           ; BSR set to: 0
  7940                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 481:                 --w;
  7941  01074A  07B8               	decf	efgtoa@w& (0+255),f,b
  7942  01074C  A0D8               	btfss	status,0,c
  7943  01074E  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  7944                           
  7945                           ; BSR set to: 0
  7946                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 482:                 --t;
  7947  010750  07A5               	decf	efgtoa@t& (0+255),f,b
  7948  010752  A0D8               	btfss	status,0,c
  7949  010754  07A6               	decf	(efgtoa@t+1)& (0+255),f,b
  7950  010756                     l12101:
  7951                           
  7952                           ; BSR set to: 0
  7953                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 479:             while (t) {
  7954  010756  51A5               	movf	efgtoa@t& (0+255),w,b
  7955  010758  11A6               	iorwf	(efgtoa@t+1)& (0+255),w,b
  7956  01075A  A4D8               	btfss	status,2,c
  7957  01075C  D7EC               	goto	l12093
  7958                           
  7959                           ; BSR set to: 0
  7960                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 484:             dbuf[n++] = 
      +                          (char)((int)'0' + d);
  7961  01075E  0E43               	movlw	low _dbuf
  7962  010760  25CB               	addwf	efgtoa@n& (0+255),w,b
  7963  010762  6ED9               	movwf	fsr2l,c
  7964  010764  0E01               	movlw	high _dbuf
  7965  010766  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7966  010768  6EDA               	movwf	fsr2h,c
  7967  01076A  51B1               	movf	efgtoa@d& (0+255),w,b
  7968  01076C  0F30               	addlw	48
  7969  01076E  6EDF               	movwf	indf2,c
  7970                           
  7971                           ; BSR set to: 0
  7972  010770  4BCB               	infsnz	efgtoa@n& (0+255),f,b
  7973  010772  2BCC               	incf	(efgtoa@n+1)& (0+255),f,b
  7974                           
  7975                           ; BSR set to: 0
  7976                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 485:             --w;
  7977  010774  07B8               	decf	efgtoa@w& (0+255),f,b
  7978  010776  A0D8               	btfss	status,0,c
  7979  010778  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  7980  01077A                     l12109:
  7981                           
  7982                           ; BSR set to: 0
  7983                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 487:         h -= l*u;
  7984  01077A  C0BB  F087         	movff	efgtoa@h,___flsub@b
  7985  01077E  C0BC  F088         	movff	efgtoa@h+1,___flsub@b+1
  7986  010782  C0BD  F089         	movff	efgtoa@h+2,___flsub@b+2
  7987  010786  C0BE  F08A         	movff	efgtoa@h+3,___flsub@b+3
  7988  01078A  C0CD  F072         	movff	efgtoa@u,___flmul@a
  7989  01078E  C0CE  F073         	movff	efgtoa@u+1,___flmul@a+1
  7990  010792  C0CF  F074         	movff	efgtoa@u+2,___flmul@a+2
  7991  010796  C0D0  F075         	movff	efgtoa@u+3,___flmul@a+3
  7992  01079A  C0BF  F06E         	movff	efgtoa@l,___flmul@b
  7993  01079E  C0C0  F06F         	movff	efgtoa@l+1,___flmul@b+1
  7994  0107A2  C0C1  F070         	movff	efgtoa@l+2,___flmul@b+2
  7995  0107A6  C0C2  F071         	movff	efgtoa@l+3,___flmul@b+3
  7996  0107AA  EC96  F08D         	call	___flmul	;wreg free
  7997  0107AE  C06E  F08B         	movff	?___flmul,___flsub@a
  7998  0107B2  C06F  F08C         	movff	?___flmul+1,___flsub@a+1
  7999  0107B6  C070  F08D         	movff	?___flmul+2,___flsub@a+2
  8000  0107BA  C071  F08E         	movff	?___flmul+3,___flsub@a+3
  8001  0107BE  EC4E  F0A2         	call	___flsub	;wreg free
  8002  0107C2  C087  F0BB         	movff	?___flsub,efgtoa@h
  8003  0107C6  C088  F0BC         	movff	?___flsub+1,efgtoa@h+1
  8004  0107CA  C089  F0BD         	movff	?___flsub+2,efgtoa@h+2
  8005  0107CE  C08A  F0BE         	movff	?___flsub+3,efgtoa@h+3
  8006                           
  8007                           ; BSR set to: 0
  8008                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 488:         u = u/10.0;
  8009  0107D2  C0CD  F060         	movff	efgtoa@u,___fldiv@b
  8010  0107D6  C0CE  F061         	movff	efgtoa@u+1,___fldiv@b+1
  8011  0107DA  C0CF  F062         	movff	efgtoa@u+2,___fldiv@b+2
  8012  0107DE  C0D0  F063         	movff	efgtoa@u+3,___fldiv@b+3
  8013  0107E2  0E00               	movlw	0
  8014  0107E4  6F64               	movwf	___fldiv@a& (0+255),b
  8015  0107E6  0E00               	movlw	0
  8016  0107E8  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  8017  0107EA  0E20               	movlw	32
  8018  0107EC  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  8019  0107EE  0E41               	movlw	65
  8020  0107F0  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  8021  0107F2  ECC4  F090         	call	___fldiv	;wreg free
  8022  0107F6  C060  F0CD         	movff	?___fldiv,efgtoa@u
  8023  0107FA  C061  F0CE         	movff	?___fldiv+1,efgtoa@u+1
  8024  0107FE  C062  F0CF         	movff	?___fldiv+2,efgtoa@u+2
  8025  010802  C063  F0D0         	movff	?___fldiv+3,efgtoa@u+3
  8026                           
  8027                           ; BSR set to: 0
  8028                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 489:         --ne;
  8029  010806  07A9               	decf	efgtoa@ne& (0+255),f,b
  8030  010808  A0D8               	btfss	status,0,c
  8031  01080A  07AA               	decf	(efgtoa@ne+1)& (0+255),f,b
  8032                           
  8033                           ; BSR set to: 0
  8034                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 490:         ++i;
  8035  01080C  4BC7               	infsnz	efgtoa@i& (0+255),f,b
  8036  01080E  2BC8               	incf	(efgtoa@i+1)& (0+255),f,b
  8037  010810                     l12117:
  8038                           
  8039                           ; BSR set to: 0
  8040                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 468:     while ((i < m) && (n
      +                           < (80 - 5))) {
  8041  010810  51AB               	movf	efgtoa@m& (0+255),w,b
  8042  010812  5DC7               	subwf	efgtoa@i& (0+255),w,b
  8043  010814  51C8               	movf	(efgtoa@i+1)& (0+255),w,b
  8044  010816  0A80               	xorlw	128
  8045  010818  6F9A               	movwf	??_efgtoa& (0+255),b
  8046  01081A  51AC               	movf	(efgtoa@m+1)& (0+255),w,b
  8047  01081C  0A80               	xorlw	128
  8048  01081E  599A               	subwfb	??_efgtoa& (0+255),w,b
  8049  010820  B0D8               	btfsc	status,0,c
  8050  010822  D008               	goto	u12380
  8051                           
  8052                           ; BSR set to: 0
  8053  010824  BFCC               	btfsc	(efgtoa@n+1)& (0+255),7,b
  8054  010826  D730               	goto	l12069
  8055  010828  51CC               	movf	(efgtoa@n+1)& (0+255),w,b
  8056  01082A  E104               	bnz	u12380
  8057  01082C  0E4B               	movlw	75
  8058  01082E  5DCB               	subwf	efgtoa@n& (0+255),w,b
  8059  010830  A0D8               	btfss	status,0,c
  8060  010832  D72A               	goto	l12069
  8061  010834                     u12380:
  8062                           
  8063                           ; BSR set to: 0
  8064                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 492:     if (!pp && (flags & 
      +                          (1 << 4))) {
  8065  010834  51A7               	movf	efgtoa@pp& (0+255),w,b
  8066  010836  11A8               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  8067  010838  B4D8               	btfsc	status,2,c
  8068                           
  8069                           ; BSR set to: 0
  8070  01083A  A82D               	btfss	_flags^0,4,c
  8071  01083C  D00A               	goto	l12129
  8072                           
  8073                           ; BSR set to: 0
  8074                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 493:         dbuf[n++] = '.';
  8075  01083E  0E43               	movlw	low _dbuf
  8076  010840  25CB               	addwf	efgtoa@n& (0+255),w,b
  8077  010842  6ED9               	movwf	fsr2l,c
  8078  010844  0E01               	movlw	high _dbuf
  8079  010846  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8080  010848  6EDA               	movwf	fsr2h,c
  8081  01084A  0E2E               	movlw	46
  8082  01084C  6EDF               	movwf	indf2,c
  8083                           
  8084                           ; BSR set to: 0
  8085  01084E  4BCB               	infsnz	efgtoa@n& (0+255),f,b
  8086  010850  2BCC               	incf	(efgtoa@n+1)& (0+255),f,b
  8087  010852                     l12129:
  8088                           
  8089                           ; BSR set to: 0
  8090                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 495:     dbuf[n] = '\0';
  8091  010852  0E43               	movlw	low _dbuf
  8092  010854  25CB               	addwf	efgtoa@n& (0+255),w,b
  8093  010856  6ED9               	movwf	fsr2l,c
  8094  010858  0E01               	movlw	high _dbuf
  8095  01085A  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8096  01085C  6EDA               	movwf	fsr2h,c
  8097  01085E  0E00               	movlw	0
  8098  010860  6EDF               	movwf	indf2,c
  8099                           
  8100                           ; BSR set to: 0
  8101                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 498:     if (nmode == 'e') {
  8102  010862  0E65               	movlw	101
  8103  010864  19B7               	xorwf	efgtoa@nmode& (0+255),w,b
  8104  010866  A4D8               	btfss	status,2,c
  8105  010868  D44D               	goto	l11931
  8106                           
  8107                           ; BSR set to: 0
  8108                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 499:         i = sizeof(dbuf)
      +                           - 1;
  8109  01086A  0E00               	movlw	0
  8110  01086C  6FC8               	movwf	(efgtoa@i+1)& (0+255),b
  8111  01086E  0E4F               	movlw	79
  8112  010870  6FC7               	movwf	efgtoa@i& (0+255),b
  8113                           
  8114                           ; BSR set to: 0
  8115                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 500:         dbuf[i] = '\0';
  8116  010872  0E43               	movlw	low _dbuf
  8117  010874  25C7               	addwf	efgtoa@i& (0+255),w,b
  8118  010876  6ED9               	movwf	fsr2l,c
  8119  010878  0E01               	movlw	high _dbuf
  8120  01087A  21C8               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8121  01087C  6EDA               	movwf	fsr2h,c
  8122  01087E  0E00               	movlw	0
  8123  010880  6EDF               	movwf	indf2,c
  8124                           
  8125                           ; BSR set to: 0
  8126                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 501:         sign = 0;
  8127  010882  0E00               	movlw	0
  8128  010884  6FB4               	movwf	(efgtoa@sign+1)& (0+255),b
  8129  010886  0E00               	movlw	0
  8130  010888  6FB3               	movwf	efgtoa@sign& (0+255),b
  8131                           
  8132                           ; BSR set to: 0
  8133                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 502:         if (e < 0) {
  8134  01088A  AFCA               	btfss	(efgtoa@e+1)& (0+255),7,b
  8135  01088C  D008               	goto	l12145
  8136                           
  8137                           ; BSR set to: 0
  8138                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 503:             sign = 1;
  8139  01088E  0E00               	movlw	0
  8140  010890  6FB4               	movwf	(efgtoa@sign+1)& (0+255),b
  8141  010892  0E01               	movlw	1
  8142  010894  6FB3               	movwf	efgtoa@sign& (0+255),b
  8143                           
  8144                           ; BSR set to: 0
  8145                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 504:             e = -e;
  8146  010896  6DC9               	negf	efgtoa@e& (0+255),b
  8147  010898  1FCA               	comf	(efgtoa@e+1)& (0+255),f,b
  8148  01089A  B0D8               	btfsc	status,0,c
  8149  01089C  2BCA               	incf	(efgtoa@e+1)& (0+255),f,b
  8150  01089E                     l12145:
  8151                           
  8152                           ; BSR set to: 0
  8153                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 506:         p = 2;
  8154  01089E  0E00               	movlw	0
  8155  0108A0  6FB6               	movwf	(efgtoa@p+1)& (0+255),b
  8156  0108A2  0E02               	movlw	2
  8157  0108A4  6FB5               	movwf	efgtoa@p& (0+255),b
  8158                           
  8159                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 507:         while (e || (0 <
      +                           p)) {
  8160  0108A6  D02A               	goto	l12157
  8161  0108A8                     l12147:
  8162                           
  8163                           ; BSR set to: 0
  8164                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 508:             --i;
  8165  0108A8  07C7               	decf	efgtoa@i& (0+255),f,b
  8166  0108AA  A0D8               	btfss	status,0,c
  8167  0108AC  07C8               	decf	(efgtoa@i+1)& (0+255),f,b
  8168                           
  8169                           ; BSR set to: 0
  8170                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 509:             dbuf[i] = '0
      +                          ' + (e % 10);
  8171  0108AE  0E43               	movlw	low _dbuf
  8172  0108B0  25C7               	addwf	efgtoa@i& (0+255),w,b
  8173  0108B2  6ED9               	movwf	fsr2l,c
  8174  0108B4  0E01               	movlw	high _dbuf
  8175  0108B6  21C8               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8176  0108B8  6EDA               	movwf	fsr2h,c
  8177  0108BA  C0C9  F060         	movff	efgtoa@e,___awmod@dividend
  8178  0108BE  C0CA  F061         	movff	efgtoa@e+1,___awmod@dividend+1
  8179  0108C2  0E00               	movlw	0
  8180  0108C4  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  8181  0108C6  0E0A               	movlw	10
  8182  0108C8  6F62               	movwf	___awmod@divisor& (0+255),b
  8183  0108CA  ECBF  F09E         	call	___awmod	;wreg free
  8184  0108CE  5160               	movf	?___awmod& (0+255),w,b
  8185  0108D0  0F30               	addlw	48
  8186  0108D2  6EDF               	movwf	indf2,c
  8187                           
  8188                           ; BSR set to: 0
  8189                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 510:             e = e / 10;
  8190  0108D4  C0C9  F060         	movff	efgtoa@e,___awdiv@dividend
  8191  0108D8  C0CA  F061         	movff	efgtoa@e+1,___awdiv@dividend+1
  8192  0108DC  0E00               	movlw	0
  8193  0108DE  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  8194  0108E0  0E0A               	movlw	10
  8195  0108E2  6F62               	movwf	___awdiv@divisor& (0+255),b
  8196  0108E4  EC43  F09E         	call	___awdiv	;wreg free
  8197  0108E8  C060  F0C9         	movff	?___awdiv,efgtoa@e
  8198  0108EC  C061  F0CA         	movff	?___awdiv+1,efgtoa@e+1
  8199                           
  8200                           ; BSR set to: 0
  8201                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 511:             --p;
  8202  0108F0  07B5               	decf	efgtoa@p& (0+255),f,b
  8203  0108F2  A0D8               	btfss	status,0,c
  8204  0108F4  07B6               	decf	(efgtoa@p+1)& (0+255),f,b
  8205                           
  8206                           ; BSR set to: 0
  8207                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 512:             --w;
  8208  0108F6  07B8               	decf	efgtoa@w& (0+255),f,b
  8209  0108F8  A0D8               	btfss	status,0,c
  8210  0108FA  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  8211  0108FC                     l12157:
  8212                           
  8213                           ; BSR set to: 0
  8214                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 507:         while (e || (0 <
      +                           p)) {
  8215  0108FC  51C9               	movf	efgtoa@e& (0+255),w,b
  8216  0108FE  11CA               	iorwf	(efgtoa@e+1)& (0+255),w,b
  8217  010900  A4D8               	btfss	status,2,c
  8218  010902  D7D2               	goto	l12147
  8219                           
  8220                           ; BSR set to: 0
  8221  010904  BFB6               	btfsc	(efgtoa@p+1)& (0+255),7,b
  8222  010906  D005               	goto	u12440
  8223  010908  51B6               	movf	(efgtoa@p+1)& (0+255),w,b
  8224  01090A  E1CE               	bnz	l12147
  8225  01090C  05B5               	decf	efgtoa@p& (0+255),w,b
  8226  01090E  B0D8               	btfsc	status,0,c
  8227  010910  D7CB               	goto	l12147
  8228  010912                     u12440:
  8229                           
  8230                           ; BSR set to: 0
  8231                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 514:         --i;
  8232  010912  07C7               	decf	efgtoa@i& (0+255),f,b
  8233  010914  A0D8               	btfss	status,0,c
  8234  010916  07C8               	decf	(efgtoa@i+1)& (0+255),f,b
  8235                           
  8236                           ; BSR set to: 0
  8237                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 515:         dbuf[i] = sign ?
      +                           '-' : '+';
  8238  010918  51B3               	movf	efgtoa@sign& (0+255),w,b
  8239  01091A  11B4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  8240  01091C  A4D8               	btfss	status,2,c
  8241  01091E  D004               	goto	l12167
  8242                           
  8243                           ; BSR set to: 0
  8244  010920  0E00               	movlw	0
  8245  010922  6FA2               	movwf	(_efgtoa$4180+1)& (0+255),b
  8246  010924  0E2B               	movlw	43
  8247  010926  D003               	goto	L5
  8248  010928                     l12167:
  8249                           
  8250                           ; BSR set to: 0
  8251  010928  0E00               	movlw	0
  8252  01092A  6FA2               	movwf	(_efgtoa$4180+1)& (0+255),b
  8253  01092C  0E2D               	movlw	45
  8254  01092E                     L5:
  8255  01092E  6FA1               	movwf	_efgtoa$4180& (0+255),b
  8256                           
  8257                           ; BSR set to: 0
  8258  010930  0E43               	movlw	low _dbuf
  8259  010932  25C7               	addwf	efgtoa@i& (0+255),w,b
  8260  010934  6ED9               	movwf	fsr2l,c
  8261  010936  0E01               	movlw	high _dbuf
  8262  010938  21C8               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8263  01093A  6EDA               	movwf	fsr2h,c
  8264  01093C  0060  F287  FFDF   	movff	_efgtoa$4180,indf2
  8265                           
  8266                           ; BSR set to: 0
  8267                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 516:         --w;
  8268  010942  07B8               	decf	efgtoa@w& (0+255),f,b
  8269  010944  A0D8               	btfss	status,0,c
  8270  010946  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  8271                           
  8272                           ; BSR set to: 0
  8273                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 517:         --i;
  8274  010948  07C7               	decf	efgtoa@i& (0+255),f,b
  8275  01094A  A0D8               	btfss	status,0,c
  8276  01094C  07C8               	decf	(efgtoa@i+1)& (0+255),f,b
  8277                           
  8278                           ; BSR set to: 0
  8279                           
  8280                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 518:         dbuf[i] = (0 && 
      +                          isupper((int)c), ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  8281  01094E  0EBF               	movlw	191
  8282  010950  6F9A               	movwf	??_efgtoa& (0+255),b
  8283  010952  0EFF               	movlw	255
  8284  010954  6F9B               	movwf	(??_efgtoa+1)& (0+255),b
  8285  010956  5199               	movf	efgtoa@c& (0+255),w,b
  8286  010958  6F9C               	movwf	(??_efgtoa+2)& (0+255),b
  8287  01095A  6B9D               	clrf	(??_efgtoa+3)& (0+255),b
  8288  01095C  519A               	movf	??_efgtoa& (0+255),w,b
  8289  01095E  279C               	addwf	(??_efgtoa+2)& (0+255),f,b
  8290  010960  519B               	movf	(??_efgtoa+1)& (0+255),w,b
  8291  010962  239D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  8292  010964  519D               	movf	(??_efgtoa+3)& (0+255),w,b
  8293  010966  E104               	bnz	u12460
  8294  010968  0E1A               	movlw	26
  8295  01096A  5D9C               	subwf	(??_efgtoa+2)& (0+255),w,b
  8296  01096C  A0D8               	btfss	status,0,c
  8297  01096E  D004               	goto	l12181
  8298  010970                     u12460:
  8299                           
  8300                           ; BSR set to: 0
  8301  010970  0E00               	movlw	0
  8302  010972  6FA4               	movwf	(_efgtoa$4181+1)& (0+255),b
  8303  010974  0E65               	movlw	101
  8304  010976  D003               	goto	L6
  8305  010978                     l12181:
  8306                           
  8307                           ; BSR set to: 0
  8308  010978  0E00               	movlw	0
  8309  01097A  6FA4               	movwf	(_efgtoa$4181+1)& (0+255),b
  8310  01097C  0E45               	movlw	69
  8311  01097E                     L6:
  8312  01097E  6FA3               	movwf	_efgtoa$4181& (0+255),b
  8313                           
  8314                           ; BSR set to: 0
  8315  010980  0E43               	movlw	low _dbuf
  8316  010982  25C7               	addwf	efgtoa@i& (0+255),w,b
  8317  010984  6ED9               	movwf	fsr2l,c
  8318  010986  0E01               	movlw	high _dbuf
  8319  010988  21C8               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8320  01098A  6EDA               	movwf	fsr2h,c
  8321  01098C  0060  F28F  FFDF   	movff	_efgtoa$4181,indf2
  8322                           
  8323                           ; BSR set to: 0
  8324                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 519:         --w;
  8325  010992  07B8               	decf	efgtoa@w& (0+255),f,b
  8326  010994  A0D8               	btfss	status,0,c
  8327  010996  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  8328                           
  8329                           ; BSR set to: 0
  8330                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 520:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
  8331  010998  0E43               	movlw	low _dbuf
  8332  01099A  25CB               	addwf	efgtoa@n& (0+255),w,b
  8333  01099C  6F60               	movwf	strcpy@dest& (0+255),b
  8334  01099E  0E01               	movlw	high _dbuf
  8335  0109A0  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8336  0109A2  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  8337  0109A4  0E43               	movlw	low _dbuf
  8338  0109A6  25C7               	addwf	efgtoa@i& (0+255),w,b
  8339  0109A8  6F62               	movwf	strcpy@src& (0+255),b
  8340  0109AA  0E01               	movlw	high _dbuf
  8341  0109AC  21C8               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8342  0109AE  6F63               	movwf	(strcpy@src+1)& (0+255),b
  8343  0109B0  EC95  F09F         	call	_strcpy	;wreg free
  8344  0109B4  EF82  F080         	goto	l11931
  8345  0109B8                     __end_of_efgtoa:
  8346                           	callstack 0
  8347                           
  8348 ;; *************** function _tolower *****************
  8349 ;; Defined at:
  8350 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/tolower.c"
  8351 ;; Parameters:    Size  Location     Type
  8352 ;;  c               2    6[BANK0 ] int 
  8353 ;; Auto vars:     Size  Location     Type
  8354 ;;		None
  8355 ;; Return value:  Size  Location     Type
  8356 ;;                  2    6[BANK0 ] int 
  8357 ;; Registers used:
  8358 ;;		wreg, status,2, status,0
  8359 ;; Tracked objects:
  8360 ;;		On entry : 3F/0
  8361 ;;		On exit  : 3F/0
  8362 ;;		Unchanged: 0/0
  8363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8364 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8366 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8367 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8368 ;;Total ram usage:        6 bytes
  8369 ;; Hardware stack levels used: 1
  8370 ;; Hardware stack levels required when called: 8
  8371 ;; This function calls:
  8372 ;;		_isupper
  8373 ;; This function is called by:
  8374 ;;		_efgtoa
  8375 ;;		_vfpfcnvrt
  8376 ;; This function uses a non-reentrant model
  8377 ;;
  8378                           
  8379                           	psect	text12
  8380  014818                     __ptext12:
  8381                           	callstack 0
  8382  014818                     _tolower:
  8383                           	callstack 19
  8384                           
  8385                           ; BSR set to: 0
  8386                           
  8387                           ; BSR set to: 0
  8388                           
  8389                           ; BSR set to: 0
  8390                           ;incstack = 0
  8391  014818  0EBF               	movlw	191
  8392  01481A  6F68               	movwf	??_tolower& (0+255),b
  8393  01481C  0EFF               	movlw	255
  8394  01481E  6F69               	movwf	(??_tolower+1)& (0+255),b
  8395  014820  C066  F06A         	movff	tolower@c,??_tolower+2
  8396  014824  C067  F06B         	movff	tolower@c+1,??_tolower+3
  8397  014828  5168               	movf	??_tolower& (0+255),w,b
  8398  01482A  276A               	addwf	(??_tolower+2)& (0+255),f,b
  8399  01482C  5169               	movf	(??_tolower+1)& (0+255),w,b
  8400  01482E  236B               	addwfc	(??_tolower+3)& (0+255),f,b
  8401  014830  516B               	movf	(??_tolower+3)& (0+255),w,b
  8402  014832  E10A               	bnz	l2853
  8403  014834  0E1A               	movlw	26
  8404  014836  5D6A               	subwf	(??_tolower+2)& (0+255),w,b
  8405  014838  B0D8               	btfsc	status,0,c
  8406  01483A  D006               	goto	l2853
  8407                           
  8408                           ; BSR set to: 0
  8409  01483C  0E20               	movlw	32
  8410  01483E  1166               	iorwf	tolower@c& (0+255),w,b
  8411  014840  6F66               	movwf	?_tolower& (0+255),b
  8412  014842  5167               	movf	(tolower@c+1)& (0+255),w,b
  8413  014844  6F67               	movwf	(?_tolower+1)& (0+255),b
  8414  014846  0012               	return	
  8415  014848                     l2853:
  8416                           
  8417                           ; BSR set to: 0
  8418  014848  C066  F066         	movff	tolower@c,?_tolower
  8419  01484C  C067  F067         	movff	tolower@c+1,?_tolower+1
  8420                           
  8421                           ; BSR set to: 0
  8422  014850  0012               	return		;funcret
  8423  014852                     __end_of_tolower:
  8424                           	callstack 0
  8425                           
  8426 ;; *************** function _isupper *****************
  8427 ;; Defined at:
  8428 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/isupper.c"
  8429 ;; Parameters:    Size  Location     Type
  8430 ;;  c               2    0[BANK0 ] int 
  8431 ;; Auto vars:     Size  Location     Type
  8432 ;;		None
  8433 ;; Return value:  Size  Location     Type
  8434 ;;                  2    0[BANK0 ] int 
  8435 ;; Registers used:
  8436 ;;		wreg, status,2, status,0
  8437 ;; Tracked objects:
  8438 ;;		On entry : 0/0
  8439 ;;		On exit  : 3F/0
  8440 ;;		Unchanged: 0/0
  8441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8442 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8444 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8445 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8446 ;;Total ram usage:        6 bytes
  8447 ;; Hardware stack levels used: 1
  8448 ;; Hardware stack levels required when called: 7
  8449 ;; This function calls:
  8450 ;;		Nothing
  8451 ;; This function is called by:
  8452 ;;		_efgtoa
  8453 ;;		_vfpfcnvrt
  8454 ;;		_tolower
  8455 ;; This function uses a non-reentrant model
  8456 ;;
  8457                           
  8458                           	psect	text13
  8459  0148C6                     __ptext13:
  8460                           	callstack 0
  8461  0148C6                     _isupper:
  8462                           	callstack 19
  8463                           
  8464                           ; BSR set to: 0
  8465                           ;incstack = 0
  8466  0148C6  0EBF               	movlw	191
  8467  0148C8  0100               	movlb	0	; () banked
  8468  0148CA  6F62               	movwf	??_isupper& (0+255),b
  8469  0148CC  0EFF               	movlw	255
  8470  0148CE  6F63               	movwf	(??_isupper+1)& (0+255),b
  8471  0148D0  C060  F064         	movff	isupper@c,??_isupper+2
  8472  0148D4  C061  F065         	movff	isupper@c+1,??_isupper+3
  8473  0148D8  5162               	movf	??_isupper& (0+255),w,b
  8474  0148DA  2764               	addwf	(??_isupper+2)& (0+255),f,b
  8475  0148DC  5163               	movf	(??_isupper+1)& (0+255),w,b
  8476  0148DE  2365               	addwfc	(??_isupper+3)& (0+255),f,b
  8477  0148E0  5165               	movf	(??_isupper+3)& (0+255),w,b
  8478  0148E2  E106               	bnz	u10710
  8479  0148E4  0E1A               	movlw	26
  8480  0148E6  5D64               	subwf	(??_isupper+2)& (0+255),w,b
  8481  0148E8  B0D8               	btfsc	status,0,c
  8482  0148EA  D002               	goto	u10710
  8483  0148EC  0E01               	movlw	1
  8484  0148EE  D001               	goto	u10720
  8485  0148F0                     u10710:
  8486  0148F0  0E00               	movlw	0
  8487  0148F2                     u10720:
  8488  0148F2  6F60               	movwf	?_isupper& (0+255),b
  8489  0148F4  6B61               	clrf	(?_isupper+1)& (0+255),b
  8490                           
  8491                           ; BSR set to: 0
  8492  0148F6  0012               	return		;funcret
  8493  0148F8                     __end_of_isupper:
  8494                           	callstack 0
  8495                           
  8496 ;; *************** function _strcpy *****************
  8497 ;; Defined at:
  8498 ;;		line 3 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/strcpy.c"
  8499 ;; Parameters:    Size  Location     Type
  8500 ;;  dest            2    0[BANK0 ] PTR unsigned char 
  8501 ;;		 -> dbuf(80), 
  8502 ;;  src             2    2[BANK0 ] PTR const unsigned char 
  8503 ;;		 -> STR_35(4), STR_34(4), STR_31(4), STR_30(4), 
  8504 ;;		 -> dbuf(80), 
  8505 ;; Auto vars:     Size  Location     Type
  8506 ;;  d               2    8[BANK0 ] PTR unsigned char 
  8507 ;;		 -> dbuf(80), 
  8508 ;;  s               2    6[BANK0 ] PTR const unsigned char 
  8509 ;;		 -> STR_35(4), STR_34(4), STR_31(4), STR_30(4), 
  8510 ;;		 -> dbuf(80), 
  8511 ;; Return value:  Size  Location     Type
  8512 ;;                  2    0[BANK0 ] PTR unsigned char 
  8513 ;; Registers used:
  8514 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8515 ;; Tracked objects:
  8516 ;;		On entry : 3F/0
  8517 ;;		On exit  : 0/0
  8518 ;;		Unchanged: 0/0
  8519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8520 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8521 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8522 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8523 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8524 ;;Total ram usage:       10 bytes
  8525 ;; Hardware stack levels used: 1
  8526 ;; Hardware stack levels required when called: 7
  8527 ;; This function calls:
  8528 ;;		Nothing
  8529 ;; This function is called by:
  8530 ;;		_efgtoa
  8531 ;; This function uses a non-reentrant model
  8532 ;;
  8533                           
  8534                           	psect	text14
  8535  013F2A                     __ptext14:
  8536                           	callstack 0
  8537  013F2A                     _strcpy:
  8538                           	callstack 19
  8539                           
  8540                           ; BSR set to: 0
  8541                           
  8542                           ; BSR set to: 0
  8543                           ;incstack = 0
  8544  013F2A  C062  F066         	movff	strcpy@src,strcpy@s
  8545  013F2E  C063  F067         	movff	strcpy@src+1,strcpy@s+1
  8546  013F32  C060  F068         	movff	strcpy@dest,strcpy@d
  8547  013F36  C061  F069         	movff	strcpy@dest+1,strcpy@d+1
  8548  013F3A                     l11755:
  8549  013F3A  0100               	movlb	0	; () banked
  8550  013F3C  5166               	movf	strcpy@s& (0+255),w,b
  8551  013F3E  6F64               	movwf	??_strcpy& (0+255),b
  8552  013F40  5167               	movf	(strcpy@s+1)& (0+255),w,b
  8553  013F42  6F65               	movwf	(??_strcpy+1)& (0+255),b
  8554  013F44  4B66               	infsnz	strcpy@s& (0+255),f,b
  8555  013F46  2B67               	incf	(strcpy@s+1)& (0+255),f,b
  8556  013F48  0060  F193  FFF6   	movff	??_strcpy,tblptrl
  8557  013F4E  0060  F197  FFF7   	movff	??_strcpy+1,tblptrh
  8558  013F54  0E00               	movlw	low (__mediumconst shr (0+16))
  8559  013F56  6EF8               	movwf	tblptru,c
  8560  013F58  0060  F1A3  FFD9   	movff	strcpy@d,fsr2l
  8561  013F5E  0060  F1A7  FFDA   	movff	strcpy@d+1,fsr2h
  8562  013F64  4B68               	infsnz	strcpy@d& (0+255),f,b
  8563  013F66  2B69               	incf	(strcpy@d+1)& (0+255),f,b
  8564  013F68  0E1F               	movlw	(high __ramtop+-1)
  8565  013F6A  64F7               	cpfsgt	tblptrh,c
  8566  013F6C  D003               	bra	u11657
  8567  013F6E  0008               	tblrd		*
  8568  013F70  50F5               	movf	tablat,w,c
  8569  013F72  D007               	bra	u11650
  8570  013F74                     u11657:
  8571  013F74  006F FFDB FFE1     	movff	tblptrl,fsr1l
  8572  013F7A  006F FFDF FFE2     	movff	tblptrh,fsr1h
  8573  013F80  50E7               	movf	indf1,w,c
  8574  013F82                     u11650:
  8575  013F82  6EDF               	movwf	indf2,c
  8576  013F84  50DF               	movf	indf2,w,c
  8577  013F86  B4D8               	btfsc	status,2,c
  8578  013F88  0012               	return	
  8579  013F8A  D7D7               	goto	l11755
  8580  013F8C                     __end_of_strcpy:
  8581                           	callstack 0
  8582                           
  8583 ;; *************** function _pad *****************
  8584 ;; Defined at:
  8585 ;;		line 72 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  8586 ;; Parameters:    Size  Location     Type
  8587 ;;  fp              2   19[BANK0 ] PTR struct _IO_FILE
  8588 ;;		 -> sprintf@f(11), NULL(0), 
  8589 ;;  buf             2   21[BANK0 ] PTR unsigned char 
  8590 ;;		 -> dbuf(80), 
  8591 ;;  p               2   23[BANK0 ] int 
  8592 ;; Auto vars:     Size  Location     Type
  8593 ;;  w               2   28[BANK0 ] int 
  8594 ;;  i               2   26[BANK0 ] int 
  8595 ;; Return value:  Size  Location     Type
  8596 ;;                  2   19[BANK0 ] int 
  8597 ;; Registers used:
  8598 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8599 ;; Tracked objects:
  8600 ;;		On entry : 3F/0
  8601 ;;		On exit  : 3F/0
  8602 ;;		Unchanged: 0/0
  8603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8604 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8605 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8606 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8607 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8608 ;;Total ram usage:       11 bytes
  8609 ;; Hardware stack levels used: 1
  8610 ;; Hardware stack levels required when called: 11
  8611 ;; This function calls:
  8612 ;;		_fputc
  8613 ;;		_fputs
  8614 ;;		_strlen
  8615 ;; This function is called by:
  8616 ;;		_efgtoa
  8617 ;;		_utoa
  8618 ;; This function uses a non-reentrant model
  8619 ;;
  8620                           
  8621                           	psect	text15
  8622  013B66                     __ptext15:
  8623                           	callstack 0
  8624  013B66                     _pad:
  8625                           	callstack 15
  8626                           
  8627                           ; BSR set to: 0
  8628                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.36/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  8629                           
  8630                           ;incstack = 0
  8631  013B66  A02D               	btfss	_flags^0,0,c
  8632  013B68  D00A               	goto	l11713
  8633                           
  8634                           ; BSR set to: 0
  8635                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  8636  013B6A  C075  F06A         	movff	pad@buf,fputs@s
  8637  013B6E  C076  F06B         	movff	pad@buf+1,fputs@s+1
  8638  013B72  C073  F06C         	movff	pad@fp,fputs@fp
  8639  013B76  C074  F06D         	movff	pad@fp+1,fputs@fp+1
  8640  013B7A  EC2E  F09F         	call	_fputs	;wreg free
  8641  013B7E                     l11713:
  8642                           
  8643                           ; BSR set to: 0
  8644                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  8645  013B7E  BF78               	btfsc	(pad@p+1)& (0+255),7,b
  8646  013B80  D005               	goto	l11717
  8647                           
  8648                           ; BSR set to: 0
  8649  013B82  C077  F07C         	movff	pad@p,pad@w
  8650  013B86  C078  F07D         	movff	pad@p+1,pad@w+1
  8651  013B8A  D004               	goto	l2537
  8652  013B8C                     l11717:
  8653                           
  8654                           ; BSR set to: 0
  8655  013B8C  0E00               	movlw	0
  8656  013B8E  6F7D               	movwf	(pad@w+1)& (0+255),b
  8657  013B90  0E00               	movlw	0
  8658  013B92  6F7C               	movwf	pad@w& (0+255),b
  8659  013B94                     l2537:
  8660                           
  8661                           ; BSR set to: 0
  8662                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  8663  013B94  0E00               	movlw	0
  8664  013B96  6F7B               	movwf	(pad@i+1)& (0+255),b
  8665  013B98  0E00               	movlw	0
  8666  013B9A  6F7A               	movwf	pad@i& (0+255),b
  8667                           
  8668                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  8669  013B9C  D00C               	goto	l11723
  8670  013B9E                     l11719:
  8671                           
  8672                           ; BSR set to: 0
  8673                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  8674  013B9E  0E00               	movlw	0
  8675  013BA0  6F62               	movwf	(fputc@c+1)& (0+255),b
  8676  013BA2  0E20               	movlw	32
  8677  013BA4  6F61               	movwf	fputc@c& (0+255),b
  8678  013BA6  C073  F063         	movff	pad@fp,fputc@fp
  8679  013BAA  C074  F064         	movff	pad@fp+1,fputc@fp+1
  8680  013BAE  ECB0  F09C         	call	_fputc	;wreg free
  8681                           
  8682                           ; BSR set to: 0
  8683                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 86:         ++i;
  8684  013BB2  4B7A               	infsnz	pad@i& (0+255),f,b
  8685  013BB4  2B7B               	incf	(pad@i+1)& (0+255),f,b
  8686  013BB6                     l11723:
  8687                           
  8688                           ; BSR set to: 0
  8689                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  8690  013BB6  517C               	movf	pad@w& (0+255),w,b
  8691  013BB8  5D7A               	subwf	pad@i& (0+255),w,b
  8692  013BBA  517B               	movf	(pad@i+1)& (0+255),w,b
  8693  013BBC  0A80               	xorlw	128
  8694  013BBE  6F79               	movwf	??_pad& (0+255),b
  8695  013BC0  517D               	movf	(pad@w+1)& (0+255),w,b
  8696  013BC2  0A80               	xorlw	128
  8697  013BC4  5979               	subwfb	??_pad& (0+255),w,b
  8698  013BC6  A0D8               	btfss	status,0,c
  8699  013BC8  D7EA               	goto	l11719
  8700                           
  8701                           ; BSR set to: 0
  8702                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  8703  013BCA  B02D               	btfsc	_flags^0,0,c
  8704  013BCC  D00A               	goto	l11727
  8705                           
  8706                           ; BSR set to: 0
  8707                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  8708  013BCE  C075  F06A         	movff	pad@buf,fputs@s
  8709  013BD2  C076  F06B         	movff	pad@buf+1,fputs@s+1
  8710  013BD6  C073  F06C         	movff	pad@fp,fputs@fp
  8711  013BDA  C074  F06D         	movff	pad@fp+1,fputs@fp+1
  8712  013BDE  EC2E  F09F         	call	_fputs	;wreg free
  8713  013BE2                     l11727:
  8714                           
  8715                           ; BSR set to: 0
  8716                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 94:     return (int)(strlen(b
      +                          uf) + (size_t)w);
  8717  013BE2  C075  F060         	movff	pad@buf,strlen@s
  8718  013BE6  C076  F061         	movff	pad@buf+1,strlen@s+1
  8719  013BEA  ECF9  F0A0         	call	_strlen	;wreg free
  8720  013BEE  517C               	movf	pad@w& (0+255),w,b
  8721  013BF0  2560               	addwf	?_strlen& (0+255),w,b
  8722  013BF2  6F73               	movwf	?_pad& (0+255),b
  8723  013BF4  517D               	movf	(pad@w+1)& (0+255),w,b
  8724  013BF6  2161               	addwfc	(?_strlen+1)& (0+255),w,b
  8725  013BF8  6F74               	movwf	(?_pad+1)& (0+255),b
  8726                           
  8727                           ; BSR set to: 0
  8728  013BFA  0012               	return		;funcret
  8729  013BFC                     __end_of_pad:
  8730                           	callstack 0
  8731                           
  8732 ;; *************** function _floorf *****************
  8733 ;; Defined at:
  8734 ;;		line 3 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/floorf.c"
  8735 ;; Parameters:    Size  Location     Type
  8736 ;;  x               4   25[BANK0 ] float 
  8737 ;; Auto vars:     Size  Location     Type
  8738 ;;  u               4   41[BANK0 ] struct .
  8739 ;;  m               4   35[BANK0 ] unsigned long 
  8740 ;;  e               2   39[BANK0 ] int 
  8741 ;; Return value:  Size  Location     Type
  8742 ;;                  4   25[BANK0 ] float 
  8743 ;; Registers used:
  8744 ;;		wreg, status,2, status,0
  8745 ;; Tracked objects:
  8746 ;;		On entry : 3F/0
  8747 ;;		On exit  : 3F/0
  8748 ;;		Unchanged: 0/0
  8749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8750 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8751 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8752 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8753 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8754 ;;Total ram usage:       20 bytes
  8755 ;; Hardware stack levels used: 1
  8756 ;; Hardware stack levels required when called: 7
  8757 ;; This function calls:
  8758 ;;		Nothing
  8759 ;; This function is called by:
  8760 ;;		_efgtoa
  8761 ;; This function uses a non-reentrant model
  8762 ;;
  8763                           
  8764                           	psect	text16
  8765  012778                     __ptext16:
  8766                           	callstack 0
  8767  012778                     _floorf:
  8768                           	callstack 19
  8769                           
  8770                           ; BSR set to: 0
  8771                           
  8772                           ; BSR set to: 0
  8773                           ;incstack = 0
  8774  012778  C118  F089         	movff	floorf@F526,floorf@u
  8775  01277C  C119  F08A         	movff	floorf@F526+1,floorf@u+1
  8776  012780  C11A  F08B         	movff	floorf@F526+2,floorf@u+2
  8777  012784  C11B  F08C         	movff	floorf@F526+3,floorf@u+3
  8778  012788  C079  F089         	movff	floorf@x,floorf@u
  8779  01278C  C07A  F08A         	movff	floorf@x+1,floorf@u+1
  8780  012790  C07B  F08B         	movff	floorf@x+2,floorf@u+2
  8781  012794  C07C  F08C         	movff	floorf@x+3,floorf@u+3
  8782                           
  8783                           ; BSR set to: 0
  8784  012798  0E81               	movlw	129
  8785  01279A  6F7D               	movwf	??_floorf& (0+255),b
  8786  01279C  0EFF               	movlw	255
  8787  01279E  6F7E               	movwf	(??_floorf+1)& (0+255),b
  8788  0127A0  C089  F07F         	movff	floorf@u,??_floorf+2
  8789  0127A4  C08A  F080         	movff	floorf@u+1,??_floorf+3
  8790  0127A8  C08B  F081         	movff	floorf@u+2,??_floorf+4
  8791  0127AC  C08C  F082         	movff	floorf@u+3,??_floorf+5
  8792  0127B0  0E18               	movlw	24
  8793  0127B2  D005               	goto	u11680
  8794  0127B4                     u11685:
  8795  0127B4  90D8               	bcf	status,0,c
  8796  0127B6  3382               	rrcf	(??_floorf+5)& (0+255),f,b
  8797  0127B8  3381               	rrcf	(??_floorf+4)& (0+255),f,b
  8798  0127BA  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  8799  0127BC  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  8800  0127BE                     u11680:
  8801  0127BE  2EE8               	decfsz	wreg,f,c
  8802  0127C0  D7F9               	goto	u11685
  8803  0127C2  517F               	movf	(??_floorf+2)& (0+255),w,b
  8804  0127C4  257D               	addwf	??_floorf& (0+255),w,b
  8805  0127C6  6F87               	movwf	floorf@e& (0+255),b
  8806  0127C8  0E00               	movlw	0
  8807  0127CA  217E               	addwfc	(??_floorf+1)& (0+255),w,b
  8808  0127CC  6F88               	movwf	(floorf@e+1)& (0+255),b
  8809  0127CE  BF88               	btfsc	(floorf@e+1)& (0+255),7,b
  8810  0127D0  D00F               	goto	l11773
  8811  0127D2  5188               	movf	(floorf@e+1)& (0+255),w,b
  8812  0127D4  E104               	bnz	u11690
  8813  0127D6  0E17               	movlw	23
  8814  0127D8  5D87               	subwf	floorf@e& (0+255),w,b
  8815  0127DA  A0D8               	btfss	status,0,c
  8816  0127DC  D009               	goto	l11773
  8817  0127DE                     u11690:
  8818                           
  8819                           ; BSR set to: 0
  8820  0127DE  C079  F079         	movff	floorf@x,?_floorf
  8821  0127E2  C07A  F07A         	movff	floorf@x+1,?_floorf+1
  8822  0127E6  C07B  F07B         	movff	floorf@x+2,?_floorf+2
  8823  0127EA  C07C  F07C         	movff	floorf@x+3,?_floorf+3
  8824  0127EE  0012               	return	
  8825  0127F0                     l11773:
  8826                           
  8827                           ; BSR set to: 0
  8828  0127F0  BF88               	btfsc	(floorf@e+1)& (0+255),7,b
  8829  0127F2  D05C               	goto	l11783
  8830                           
  8831                           ; BSR set to: 0
  8832  0127F4  C087  F07D         	movff	floorf@e,??_floorf
  8833  0127F8  0EFF               	movlw	255
  8834  0127FA  6F7E               	movwf	(??_floorf+1)& (0+255),b
  8835  0127FC  0EFF               	movlw	255
  8836  0127FE  6F7F               	movwf	(??_floorf+2)& (0+255),b
  8837  012800  0E7F               	movlw	127
  8838  012802  6F80               	movwf	(??_floorf+3)& (0+255),b
  8839  012804  0E00               	movlw	0
  8840  012806  6F81               	movwf	(??_floorf+4)& (0+255),b
  8841  012808                     u11715:
  8842  012808  677D               	tstfsz	??_floorf& (0+255),b
  8843  01280A  D001               	goto	u11716
  8844  01280C  D007               	goto	u11717
  8845  01280E                     u11716:
  8846  01280E  3581               	rlcf	(??_floorf+4)& (0+255),w,b
  8847  012810  3381               	rrcf	(??_floorf+4)& (0+255),f,b
  8848  012812  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  8849  012814  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  8850  012816  337E               	rrcf	(??_floorf+1)& (0+255),f,b
  8851  012818  2F7D               	decfsz	??_floorf& (0+255),f,b
  8852  01281A  D7F6               	goto	u11715
  8853  01281C                     u11717:
  8854  01281C  C07E  F083         	movff	??_floorf+1,floorf@m
  8855  012820  C07F  F084         	movff	??_floorf+2,floorf@m+1
  8856  012824  C080  F085         	movff	??_floorf+3,floorf@m+2
  8857  012828  C081  F086         	movff	??_floorf+4,floorf@m+3
  8858  01282C  0100               	movlb	0	; () banked
  8859  01282E  5183               	movf	floorf@m& (0+255),w,b
  8860  012830  1589               	andwf	floorf@u& (0+255),w,b
  8861  012832  6F7D               	movwf	??_floorf& (0+255),b
  8862  012834  5184               	movf	(floorf@m+1)& (0+255),w,b
  8863  012836  158A               	andwf	(floorf@u+1)& (0+255),w,b
  8864  012838  6F7E               	movwf	(??_floorf+1)& (0+255),b
  8865  01283A  5185               	movf	(floorf@m+2)& (0+255),w,b
  8866  01283C  158B               	andwf	(floorf@u+2)& (0+255),w,b
  8867  01283E  6F7F               	movwf	(??_floorf+2)& (0+255),b
  8868  012840  5186               	movf	(floorf@m+3)& (0+255),w,b
  8869  012842  158C               	andwf	(floorf@u+3)& (0+255),w,b
  8870  012844  6F80               	movwf	(??_floorf+3)& (0+255),b
  8871  012846  517D               	movf	??_floorf& (0+255),w,b
  8872  012848  117E               	iorwf	(??_floorf+1)& (0+255),w,b
  8873  01284A  117F               	iorwf	(??_floorf+2)& (0+255),w,b
  8874  01284C  1180               	iorwf	(??_floorf+3)& (0+255),w,b
  8875  01284E  B4D8               	btfsc	status,2,c
  8876  012850  D7C6               	goto	u11690
  8877                           
  8878                           ; BSR set to: 0
  8879  012852  C089  F07D         	movff	floorf@u,??_floorf
  8880  012856  C08A  F07E         	movff	floorf@u+1,??_floorf+1
  8881  01285A  C08B  F07F         	movff	floorf@u+2,??_floorf+2
  8882  01285E  C08C  F080         	movff	floorf@u+3,??_floorf+3
  8883  012862  0E20               	movlw	32
  8884  012864  D005               	goto	u11730
  8885  012866                     u11735:
  8886  012866  90D8               	bcf	status,0,c
  8887  012868  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  8888  01286A  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  8889  01286C  337E               	rrcf	(??_floorf+1)& (0+255),f,b
  8890  01286E  337D               	rrcf	??_floorf& (0+255),f,b
  8891  012870                     u11730:
  8892  012870  2EE8               	decfsz	wreg,f,c
  8893  012872  D7F9               	goto	u11735
  8894  012874  517D               	movf	??_floorf& (0+255),w,b
  8895  012876  B4D8               	btfsc	status,2,c
  8896  012878  D008               	goto	l2767
  8897                           
  8898                           ; BSR set to: 0
  8899  01287A  5183               	movf	floorf@m& (0+255),w,b
  8900  01287C  2789               	addwf	floorf@u& (0+255),f,b
  8901  01287E  5184               	movf	(floorf@m+1)& (0+255),w,b
  8902  012880  238A               	addwfc	(floorf@u+1)& (0+255),f,b
  8903  012882  5185               	movf	(floorf@m+2)& (0+255),w,b
  8904  012884  238B               	addwfc	(floorf@u+2)& (0+255),f,b
  8905  012886  5186               	movf	(floorf@m+3)& (0+255),w,b
  8906  012888  238C               	addwfc	(floorf@u+3)& (0+255),f,b
  8907  01288A                     l2767:
  8908                           
  8909                           ; BSR set to: 0
  8910  01288A  1D83               	comf	floorf@m& (0+255),w,b
  8911  01288C  6F7D               	movwf	??_floorf& (0+255),b
  8912  01288E  1D84               	comf	(floorf@m+1)& (0+255),w,b
  8913  012890  6F7E               	movwf	(??_floorf+1)& (0+255),b
  8914  012892  1D85               	comf	(floorf@m+2)& (0+255),w,b
  8915  012894  6F7F               	movwf	(??_floorf+2)& (0+255),b
  8916  012896  1D86               	comf	(floorf@m+3)& (0+255),w,b
  8917  012898  6F80               	movwf	(??_floorf+3)& (0+255),b
  8918  01289A  517D               	movf	??_floorf& (0+255),w,b
  8919  01289C  1789               	andwf	floorf@u& (0+255),f,b
  8920  01289E  517E               	movf	(??_floorf+1)& (0+255),w,b
  8921  0128A0  178A               	andwf	(floorf@u+1)& (0+255),f,b
  8922  0128A2  517F               	movf	(??_floorf+2)& (0+255),w,b
  8923  0128A4  178B               	andwf	(floorf@u+2)& (0+255),f,b
  8924  0128A6  5180               	movf	(??_floorf+3)& (0+255),w,b
  8925  0128A8  178C               	andwf	(floorf@u+3)& (0+255),f,b
  8926  0128AA  D032               	goto	l11791
  8927  0128AC                     l11783:
  8928                           
  8929                           ; BSR set to: 0
  8930  0128AC  C089  F07D         	movff	floorf@u,??_floorf
  8931  0128B0  C08A  F07E         	movff	floorf@u+1,??_floorf+1
  8932  0128B4  C08B  F07F         	movff	floorf@u+2,??_floorf+2
  8933  0128B8  C08C  F080         	movff	floorf@u+3,??_floorf+3
  8934  0128BC  0E20               	movlw	32
  8935  0128BE  D005               	goto	u11750
  8936  0128C0                     u11755:
  8937  0128C0  90D8               	bcf	status,0,c
  8938  0128C2  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  8939  0128C4  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  8940  0128C6  337E               	rrcf	(??_floorf+1)& (0+255),f,b
  8941  0128C8  337D               	rrcf	??_floorf& (0+255),f,b
  8942  0128CA                     u11750:
  8943  0128CA  2EE8               	decfsz	wreg,f,c
  8944  0128CC  D7F9               	goto	u11755
  8945  0128CE  677D               	tstfsz	??_floorf& (0+255),b
  8946  0128D0  D008               	goto	l11787
  8947                           
  8948                           ; BSR set to: 0
  8949  0128D2  0E00               	movlw	0
  8950  0128D4  6F89               	movwf	floorf@u& (0+255),b
  8951  0128D6  0E00               	movlw	0
  8952  0128D8  6F8A               	movwf	(floorf@u+1)& (0+255),b
  8953  0128DA  0E00               	movlw	0
  8954  0128DC  6F8B               	movwf	(floorf@u+2)& (0+255),b
  8955  0128DE  0E00               	movlw	0
  8956  0128E0  D016               	goto	L7
  8957  0128E2                     l11787:
  8958                           
  8959                           ; BSR set to: 0
  8960  0128E2  90D8               	bcf	status,0,c
  8961  0128E4  3589               	rlcf	floorf@u& (0+255),w,b
  8962  0128E6  6F7D               	movwf	??_floorf& (0+255),b
  8963  0128E8  358A               	rlcf	(floorf@u+1)& (0+255),w,b
  8964  0128EA  6F7E               	movwf	(??_floorf+1)& (0+255),b
  8965  0128EC  358B               	rlcf	(floorf@u+2)& (0+255),w,b
  8966  0128EE  6F7F               	movwf	(??_floorf+2)& (0+255),b
  8967  0128F0  358C               	rlcf	(floorf@u+3)& (0+255),w,b
  8968  0128F2  6F80               	movwf	(??_floorf+3)& (0+255),b
  8969  0128F4  517D               	movf	??_floorf& (0+255),w,b
  8970  0128F6  117E               	iorwf	(??_floorf+1)& (0+255),w,b
  8971  0128F8  117F               	iorwf	(??_floorf+2)& (0+255),w,b
  8972  0128FA  1180               	iorwf	(??_floorf+3)& (0+255),w,b
  8973  0128FC  B4D8               	btfsc	status,2,c
  8974  0128FE  D008               	goto	l11791
  8975                           
  8976                           ; BSR set to: 0
  8977  012900  0E00               	movlw	0
  8978  012902  6F89               	movwf	floorf@u& (0+255),b
  8979  012904  0E00               	movlw	0
  8980  012906  6F8A               	movwf	(floorf@u+1)& (0+255),b
  8981  012908  0E80               	movlw	128
  8982  01290A  6F8B               	movwf	(floorf@u+2)& (0+255),b
  8983  01290C  0EBF               	movlw	191
  8984  01290E                     L7:
  8985  01290E  6F8C               	movwf	(floorf@u+3)& (0+255),b
  8986  012910                     l11791:
  8987                           
  8988                           ; BSR set to: 0
  8989  012910  C089  F079         	movff	floorf@u,?_floorf
  8990  012914  C08A  F07A         	movff	floorf@u+1,?_floorf+1
  8991  012918  C08B  F07B         	movff	floorf@u+2,?_floorf+2
  8992  01291C  C08C  F07C         	movff	floorf@u+3,?_floorf+3
  8993                           
  8994                           ; BSR set to: 0
  8995  012920  0012               	return		;funcret
  8996  012922                     __end_of_floorf:
  8997                           	callstack 0
  8998                           
  8999 ;; *************** function ___fpclassifyf *****************
  9000 ;; Defined at:
  9001 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/__fpclassifyf.c"
  9002 ;; Parameters:    Size  Location     Type
  9003 ;;  x               4    0[BANK0 ] float 
  9004 ;; Auto vars:     Size  Location     Type
  9005 ;;  u               4   10[BANK0 ] struct .
  9006 ;;  e               2    8[BANK0 ] int 
  9007 ;; Return value:  Size  Location     Type
  9008 ;;                  2    0[BANK0 ] int 
  9009 ;; Registers used:
  9010 ;;		wreg, status,2, status,0
  9011 ;; Tracked objects:
  9012 ;;		On entry : 3F/0
  9013 ;;		On exit  : 3F/0
  9014 ;;		Unchanged: 0/0
  9015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9016 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9017 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9018 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9019 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9020 ;;Total ram usage:       14 bytes
  9021 ;; Hardware stack levels used: 1
  9022 ;; Hardware stack levels required when called: 7
  9023 ;; This function calls:
  9024 ;;		Nothing
  9025 ;; This function is called by:
  9026 ;;		_efgtoa
  9027 ;; This function uses a non-reentrant model
  9028 ;;
  9029                           
  9030                           	psect	text17
  9031  01365E                     __ptext17:
  9032                           	callstack 0
  9033  01365E                     ___fpclassifyf:
  9034                           	callstack 19
  9035                           
  9036                           ; BSR set to: 0
  9037                           
  9038                           ; BSR set to: 0
  9039                           ;incstack = 0
  9040  01365E  C11C  F06A         	movff	___fpclassifyf@F465,___fpclassifyf@u
  9041  013662  C11D  F06B         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  9042  013666  C11E  F06C         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  9043  01366A  C11F  F06D         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  9044  01366E  C060  F06A         	movff	___fpclassifyf@x,___fpclassifyf@u
  9045  013672  C061  F06B         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  9046  013676  C062  F06C         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  9047  01367A  C063  F06D         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  9048                           
  9049                           ; BSR set to: 0
  9050  01367E  C06A  F064         	movff	___fpclassifyf@u,??___fpclassifyf
  9051  013682  C06B  F065         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  9052  013686  C06C  F066         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  9053  01368A  C06D  F067         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  9054  01368E  0E18               	movlw	24
  9055  013690  D005               	goto	u11580
  9056  013692                     u11585:
  9057  013692  90D8               	bcf	status,0,c
  9058  013694  3367               	rrcf	(??___fpclassifyf+3)& (0+255),f,b
  9059  013696  3366               	rrcf	(??___fpclassifyf+2)& (0+255),f,b
  9060  013698  3365               	rrcf	(??___fpclassifyf+1)& (0+255),f,b
  9061  01369A  3364               	rrcf	??___fpclassifyf& (0+255),f,b
  9062  01369C                     u11580:
  9063  01369C  2EE8               	decfsz	wreg,f,c
  9064  01369E  D7F9               	goto	u11585
  9065  0136A0  5164               	movf	??___fpclassifyf& (0+255),w,b
  9066  0136A2  6F68               	movwf	___fpclassifyf@e& (0+255),b
  9067  0136A4  6B69               	clrf	(___fpclassifyf@e+1)& (0+255),b
  9068  0136A6  5168               	movf	___fpclassifyf@e& (0+255),w,b
  9069  0136A8  1169               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
  9070  0136AA  A4D8               	btfss	status,2,c
  9071  0136AC  D019               	goto	l11743
  9072                           
  9073                           ; BSR set to: 0
  9074  0136AE  90D8               	bcf	status,0,c
  9075  0136B0  356A               	rlcf	___fpclassifyf@u& (0+255),w,b
  9076  0136B2  6F64               	movwf	??___fpclassifyf& (0+255),b
  9077  0136B4  356B               	rlcf	(___fpclassifyf@u+1)& (0+255),w,b
  9078  0136B6  6F65               	movwf	(??___fpclassifyf+1)& (0+255),b
  9079  0136B8  356C               	rlcf	(___fpclassifyf@u+2)& (0+255),w,b
  9080  0136BA  6F66               	movwf	(??___fpclassifyf+2)& (0+255),b
  9081  0136BC  356D               	rlcf	(___fpclassifyf@u+3)& (0+255),w,b
  9082  0136BE  6F67               	movwf	(??___fpclassifyf+3)& (0+255),b
  9083  0136C0  5164               	movf	??___fpclassifyf& (0+255),w,b
  9084  0136C2  1165               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
  9085  0136C4  1166               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
  9086  0136C6  1167               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
  9087  0136C8  A4D8               	btfss	status,2,c
  9088  0136CA  D005               	goto	l11739
  9089                           
  9090                           ; BSR set to: 0
  9091  0136CC  0E00               	movlw	0
  9092  0136CE  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
  9093  0136D0  0E02               	movlw	2
  9094  0136D2  6F60               	movwf	?___fpclassifyf& (0+255),b
  9095  0136D4  0012               	return	
  9096  0136D6                     l11739:
  9097                           
  9098                           ; BSR set to: 0
  9099  0136D6  0E00               	movlw	0
  9100  0136D8  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
  9101  0136DA  0E03               	movlw	3
  9102  0136DC  6F60               	movwf	?___fpclassifyf& (0+255),b
  9103  0136DE  0012               	return	
  9104  0136E0                     l11743:
  9105                           
  9106                           ; BSR set to: 0
  9107  0136E0  2968               	incf	___fpclassifyf@e& (0+255),w,b
  9108  0136E2  1169               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
  9109  0136E4  A4D8               	btfss	status,2,c
  9110  0136E6  D01C               	goto	l11749
  9111                           
  9112                           ; BSR set to: 0
  9113  0136E8  C06A  F064         	movff	___fpclassifyf@u,??___fpclassifyf
  9114  0136EC  C06B  F065         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  9115  0136F0  C06C  F066         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  9116  0136F4  C06D  F067         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  9117  0136F8  0E09               	movlw	9
  9118  0136FA                     u11625:
  9119  0136FA  90D8               	bcf	status,0,c
  9120  0136FC  3764               	rlcf	??___fpclassifyf& (0+255),f,b
  9121  0136FE  3765               	rlcf	(??___fpclassifyf+1)& (0+255),f,b
  9122  013700  3766               	rlcf	(??___fpclassifyf+2)& (0+255),f,b
  9123  013702  3767               	rlcf	(??___fpclassifyf+3)& (0+255),f,b
  9124  013704  2EE8               	decfsz	wreg,f,c
  9125  013706  D7F9               	goto	u11625
  9126  013708  5164               	movf	??___fpclassifyf& (0+255),w,b
  9127  01370A  1165               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
  9128  01370C  1166               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
  9129  01370E  1167               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
  9130  013710  A4D8               	btfss	status,2,c
  9131  013712  D002               	goto	u11630
  9132  013714  0E01               	movlw	1
  9133  013716  D001               	goto	u11640
  9134  013718                     u11630:
  9135  013718  0E00               	movlw	0
  9136  01371A                     u11640:
  9137  01371A  6F60               	movwf	?___fpclassifyf& (0+255),b
  9138  01371C  6B61               	clrf	(?___fpclassifyf+1)& (0+255),b
  9139  01371E  0012               	return	
  9140  013720                     l11749:
  9141                           
  9142                           ; BSR set to: 0
  9143  013720  0E00               	movlw	0
  9144  013722  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
  9145  013724  0E04               	movlw	4
  9146  013726  6F60               	movwf	?___fpclassifyf& (0+255),b
  9147                           
  9148                           ; BSR set to: 0
  9149  013728  0012               	return		;funcret
  9150  01372A                     __end_of___fpclassifyf:
  9151                           	callstack 0
  9152                           
  9153 ;; *************** function ___fltol *****************
  9154 ;; Defined at:
  9155 ;;		line 43 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/fltol.c"
  9156 ;; Parameters:    Size  Location     Type
  9157 ;;  f1              4    0[BANK0 ] int 
  9158 ;; Auto vars:     Size  Location     Type
  9159 ;;  exp1            1    9[BANK0 ] unsigned char 
  9160 ;;  sign1           1    8[BANK0 ] unsigned char 
  9161 ;; Return value:  Size  Location     Type
  9162 ;;                  4    0[BANK0 ] long 
  9163 ;; Registers used:
  9164 ;;		wreg, status,2, status,0
  9165 ;; Tracked objects:
  9166 ;;		On entry : 3F/0
  9167 ;;		On exit  : 3F/0
  9168 ;;		Unchanged: 0/0
  9169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9170 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9171 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9172 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9173 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9174 ;;Total ram usage:       10 bytes
  9175 ;; Hardware stack levels used: 1
  9176 ;; Hardware stack levels required when called: 7
  9177 ;; This function calls:
  9178 ;;		Nothing
  9179 ;; This function is called by:
  9180 ;;		_efgtoa
  9181 ;; This function uses a non-reentrant model
  9182 ;;
  9183                           
  9184                           	psect	text18
  9185  0137EC                     __ptext18:
  9186                           	callstack 0
  9187  0137EC                     ___fltol:
  9188                           	callstack 19
  9189                           
  9190                           ; BSR set to: 0
  9191                           
  9192                           ; BSR set to: 0
  9193                           ;incstack = 0
  9194  0137EC  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
  9195  0137EE  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
  9196  0137F0  6F69               	movwf	___fltol@exp1& (0+255),b
  9197  0137F2  5169               	movf	___fltol@exp1& (0+255),w,b
  9198  0137F4  A4D8               	btfss	status,2,c
  9199  0137F6  D009               	goto	l11633
  9200  0137F8                     u11400:
  9201                           
  9202                           ; BSR set to: 0
  9203  0137F8  0E00               	movlw	0
  9204  0137FA  6F60               	movwf	?___fltol& (0+255),b
  9205  0137FC  0E00               	movlw	0
  9206  0137FE  6F61               	movwf	(?___fltol+1)& (0+255),b
  9207  013800  0E00               	movlw	0
  9208  013802  6F62               	movwf	(?___fltol+2)& (0+255),b
  9209  013804  0E00               	movlw	0
  9210  013806  6F63               	movwf	(?___fltol+3)& (0+255),b
  9211  013808  0012               	return	
  9212  01380A                     l11633:
  9213                           
  9214                           ; BSR set to: 0
  9215  01380A  C060  F064         	movff	___fltol@f1,??___fltol
  9216  01380E  C061  F065         	movff	___fltol@f1+1,??___fltol+1
  9217  013812  C062  F066         	movff	___fltol@f1+2,??___fltol+2
  9218  013816  C063  F067         	movff	___fltol@f1+3,??___fltol+3
  9219  01381A  0E20               	movlw	32
  9220  01381C  D005               	goto	u11410
  9221  01381E                     u11415:
  9222  01381E  90D8               	bcf	status,0,c
  9223  013820  3367               	rrcf	(??___fltol+3)& (0+255),f,b
  9224  013822  3366               	rrcf	(??___fltol+2)& (0+255),f,b
  9225  013824  3365               	rrcf	(??___fltol+1)& (0+255),f,b
  9226  013826  3364               	rrcf	??___fltol& (0+255),f,b
  9227  013828                     u11410:
  9228  013828  2EE8               	decfsz	wreg,f,c
  9229  01382A  D7F9               	goto	u11415
  9230  01382C  5164               	movf	??___fltol& (0+255),w,b
  9231  01382E  6F68               	movwf	___fltol@sign1& (0+255),b
  9232                           
  9233                           ; BSR set to: 0
  9234  013830  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
  9235                           
  9236                           ; BSR set to: 0
  9237  013832  0EFF               	movlw	255
  9238  013834  1760               	andwf	___fltol@f1& (0+255),f,b
  9239  013836  0EFF               	movlw	255
  9240  013838  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
  9241  01383A  0EFF               	movlw	255
  9242  01383C  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
  9243  01383E  0E00               	movlw	0
  9244  013840  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
  9245                           
  9246                           ; BSR set to: 0
  9247  013842  0E96               	movlw	150
  9248  013844  5F69               	subwf	___fltol@exp1& (0+255),f,b
  9249                           
  9250                           ; BSR set to: 0
  9251  013846  AF69               	btfss	___fltol@exp1& (0+255),7,b
  9252  013848  D00D               	goto	l11653
  9253                           
  9254                           ; BSR set to: 0
  9255  01384A  5169               	movf	___fltol@exp1& (0+255),w,b
  9256  01384C  0A80               	xorlw	128
  9257  01384E  0F97               	addlw	151
  9258  013850  A0D8               	btfss	status,0,c
  9259  013852  D7D2               	goto	u11400
  9260  013854                     l11649:
  9261                           
  9262                           ; BSR set to: 0
  9263  013854  90D8               	bcf	status,0,c
  9264  013856  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
  9265  013858  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
  9266  01385A  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
  9267  01385C  3360               	rrcf	___fltol@f1& (0+255),f,b
  9268                           
  9269                           ; BSR set to: 0
  9270  01385E  3F69               	incfsz	___fltol@exp1& (0+255),f,b
  9271  013860  D7F9               	goto	l11649
  9272  013862  D00D               	goto	u11450
  9273  013864                     l11653:
  9274                           
  9275                           ; BSR set to: 0
  9276  013864  0E1F               	movlw	31
  9277  013866  6569               	cpfsgt	___fltol@exp1& (0+255),b
  9278  013868  D007               	goto	l11661
  9279  01386A  D7C6               	goto	u11400
  9280  01386C                     l11659:
  9281                           
  9282                           ; BSR set to: 0
  9283  01386C  90D8               	bcf	status,0,c
  9284  01386E  3760               	rlcf	___fltol@f1& (0+255),f,b
  9285  013870  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
  9286  013872  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
  9287  013874  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
  9288  013876  0769               	decf	___fltol@exp1& (0+255),f,b
  9289  013878                     l11661:
  9290                           
  9291                           ; BSR set to: 0
  9292  013878  5169               	movf	___fltol@exp1& (0+255),w,b
  9293  01387A  A4D8               	btfss	status,2,c
  9294  01387C  D7F7               	goto	l11659
  9295  01387E                     u11450:
  9296                           
  9297                           ; BSR set to: 0
  9298  01387E  5168               	movf	___fltol@sign1& (0+255),w,b
  9299  013880  B4D8               	btfsc	status,2,c
  9300  013882  D008               	goto	l11667
  9301                           
  9302                           ; BSR set to: 0
  9303  013884  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
  9304  013886  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
  9305  013888  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
  9306  01388A  6D60               	negf	___fltol@f1& (0+255),b
  9307  01388C  0E00               	movlw	0
  9308  01388E  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
  9309  013890  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
  9310  013892  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
  9311  013894                     l11667:
  9312                           
  9313                           ; BSR set to: 0
  9314  013894  C060  F060         	movff	___fltol@f1,?___fltol
  9315  013898  C061  F061         	movff	___fltol@f1+1,?___fltol+1
  9316  01389C  C062  F062         	movff	___fltol@f1+2,?___fltol+2
  9317  0138A0  C063  F063         	movff	___fltol@f1+3,?___fltol+3
  9318                           
  9319                           ; BSR set to: 0
  9320  0138A4  0012               	return		;funcret
  9321  0138A6                     __end_of___fltol:
  9322                           	callstack 0
  9323                           
  9324 ;; *************** function ___flsub *****************
  9325 ;; Defined at:
  9326 ;;		line 245 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/sprcadd.c"
  9327 ;; Parameters:    Size  Location     Type
  9328 ;;  b               4   39[BANK0 ] long 
  9329 ;;  a               4   43[BANK0 ] long 
  9330 ;; Auto vars:     Size  Location     Type
  9331 ;;		None
  9332 ;; Return value:  Size  Location     Type
  9333 ;;                  4   39[BANK0 ] long 
  9334 ;; Registers used:
  9335 ;;		wreg, status,2, status,0, cstack
  9336 ;; Tracked objects:
  9337 ;;		On entry : 3F/0
  9338 ;;		On exit  : 3F/0
  9339 ;;		Unchanged: 0/0
  9340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9341 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9344 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9345 ;;Total ram usage:        8 bytes
  9346 ;; Hardware stack levels used: 1
  9347 ;; Hardware stack levels required when called: 8
  9348 ;; This function calls:
  9349 ;;		___fladd
  9350 ;; This function is called by:
  9351 ;;		_efgtoa
  9352 ;; This function uses a non-reentrant model
  9353 ;;
  9354                           
  9355                           	psect	text19
  9356  01449C                     __ptext19:
  9357                           	callstack 0
  9358  01449C                     ___flsub:
  9359                           	callstack 18
  9360                           
  9361                           ; BSR set to: 0
  9362                           
  9363                           ; BSR set to: 0
  9364                           ;incstack = 0
  9365  01449C  0E00               	movlw	0
  9366  01449E  1B8B               	xorwf	___flsub@a& (0+255),f,b
  9367  0144A0  0E00               	movlw	0
  9368  0144A2  1B8C               	xorwf	(___flsub@a+1)& (0+255),f,b
  9369  0144A4  0E00               	movlw	0
  9370  0144A6  1B8D               	xorwf	(___flsub@a+2)& (0+255),f,b
  9371  0144A8  0E80               	movlw	128
  9372  0144AA  1B8E               	xorwf	(___flsub@a+3)& (0+255),f,b
  9373                           
  9374                           ; BSR set to: 0
  9375  0144AC  C087  F060         	movff	___flsub@b,___fladd@b
  9376  0144B0  C088  F061         	movff	___flsub@b+1,___fladd@b+1
  9377  0144B4  C089  F062         	movff	___flsub@b+2,___fladd@b+2
  9378  0144B8  C08A  F063         	movff	___flsub@b+3,___fladd@b+3
  9379  0144BC  C08B  F064         	movff	___flsub@a,___fladd@a
  9380  0144C0  C08C  F065         	movff	___flsub@a+1,___fladd@a+1
  9381  0144C4  C08D  F066         	movff	___flsub@a+2,___fladd@a+2
  9382  0144C8  C08E  F067         	movff	___flsub@a+3,___fladd@a+3
  9383  0144CC  EC3E  F08F         	call	___fladd	;wreg free
  9384  0144D0  C060  F087         	movff	?___fladd,?___flsub
  9385  0144D4  C061  F088         	movff	?___fladd+1,?___flsub+1
  9386  0144D8  C062  F089         	movff	?___fladd+2,?___flsub+2
  9387  0144DC  C063  F08A         	movff	?___fladd+3,?___flsub+3
  9388                           
  9389                           ; BSR set to: 0
  9390  0144E0  0012               	return		;funcret
  9391  0144E2                     __end_of___flsub:
  9392                           	callstack 0
  9393                           
  9394 ;; *************** function ___fladd *****************
  9395 ;; Defined at:
  9396 ;;		line 10 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/sprcadd.c"
  9397 ;; Parameters:    Size  Location     Type
  9398 ;;  b               4    0[BANK0 ] long 
  9399 ;;  a               4    4[BANK0 ] long 
  9400 ;; Auto vars:     Size  Location     Type
  9401 ;;  grs             1   15[BANK0 ] unsigned char 
  9402 ;;  bexp            1   14[BANK0 ] unsigned char 
  9403 ;;  aexp            1   13[BANK0 ] unsigned char 
  9404 ;;  signs           1   12[BANK0 ] unsigned char 
  9405 ;; Return value:  Size  Location     Type
  9406 ;;                  4    0[BANK0 ] unsigned char 
  9407 ;; Registers used:
  9408 ;;		wreg, status,2, status,0
  9409 ;; Tracked objects:
  9410 ;;		On entry : 3F/0
  9411 ;;		On exit  : 3F/0
  9412 ;;		Unchanged: 0/0
  9413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9414 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9415 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9416 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9417 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9418 ;;Total ram usage:       16 bytes
  9419 ;; Hardware stack levels used: 1
  9420 ;; Hardware stack levels required when called: 7
  9421 ;; This function calls:
  9422 ;;		Nothing
  9423 ;; This function is called by:
  9424 ;;		___flsub
  9425 ;;		_efgtoa
  9426 ;; This function uses a non-reentrant model
  9427 ;;
  9428                           
  9429                           	psect	text20
  9430  011E7C                     __ptext20:
  9431                           	callstack 0
  9432  011E7C                     ___fladd:
  9433                           	callstack 18
  9434                           
  9435                           ; BSR set to: 0
  9436                           
  9437                           ; BSR set to: 0
  9438                           ;incstack = 0
  9439  011E7C  5163               	movf	(___fladd@b+3)& (0+255),w,b
  9440  011E7E  0B80               	andlw	128
  9441  011E80  6F6C               	movwf	___fladd@signs& (0+255),b
  9442  011E82  5163               	movf	(___fladd@b+3)& (0+255),w,b
  9443  011E84  2563               	addwf	(___fladd@b+3)& (0+255),w,b
  9444  011E86  6F6E               	movwf	___fladd@bexp& (0+255),b
  9445                           
  9446                           ; BSR set to: 0
  9447  011E88  BF62               	btfsc	(___fladd@b+2)& (0+255),7,b
  9448                           
  9449                           ; BSR set to: 0
  9450  011E8A  816E               	bsf	___fladd@bexp& (0+255),0,b
  9451                           
  9452                           ; BSR set to: 0
  9453  011E8C  516E               	movf	___fladd@bexp& (0+255),w,b
  9454  011E8E  B4D8               	btfsc	status,2,c
  9455  011E90  D00D               	goto	l10991
  9456                           
  9457                           ; BSR set to: 0
  9458  011E92  296E               	incf	___fladd@bexp& (0+255),w,b
  9459  011E94  A4D8               	btfss	status,2,c
  9460  011E96  D008               	goto	l10987
  9461                           
  9462                           ; BSR set to: 0
  9463  011E98  0E00               	movlw	0
  9464  011E9A  6F60               	movwf	___fladd@b& (0+255),b
  9465  011E9C  0E00               	movlw	0
  9466  011E9E  6F61               	movwf	(___fladd@b+1)& (0+255),b
  9467  011EA0  0E00               	movlw	0
  9468  011EA2  6F62               	movwf	(___fladd@b+2)& (0+255),b
  9469  011EA4  0E00               	movlw	0
  9470  011EA6  6F63               	movwf	(___fladd@b+3)& (0+255),b
  9471  011EA8                     l10987:
  9472                           
  9473                           ; BSR set to: 0
  9474  011EA8  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
  9475  011EAA  D006               	goto	L8
  9476  011EAC                     l10991:
  9477                           
  9478                           ; BSR set to: 0
  9479  011EAC  0E00               	movlw	0
  9480  011EAE  6F60               	movwf	___fladd@b& (0+255),b
  9481  011EB0  0E00               	movlw	0
  9482  011EB2  6F61               	movwf	(___fladd@b+1)& (0+255),b
  9483  011EB4  0E00               	movlw	0
  9484  011EB6  6F62               	movwf	(___fladd@b+2)& (0+255),b
  9485  011EB8                     L8:
  9486  011EB8  0E00               	movlw	0
  9487  011EBA  6F63               	movwf	(___fladd@b+3)& (0+255),b
  9488                           
  9489                           ; BSR set to: 0
  9490  011EBC  5167               	movf	(___fladd@a+3)& (0+255),w,b
  9491  011EBE  0B80               	andlw	128
  9492  011EC0  6F6D               	movwf	___fladd@aexp& (0+255),b
  9493                           
  9494                           ; BSR set to: 0
  9495  011EC2  516C               	movf	___fladd@signs& (0+255),w,b
  9496  011EC4  196D               	xorwf	___fladd@aexp& (0+255),w,b
  9497  011EC6  A4D8               	btfss	status,2,c
  9498                           
  9499                           ; BSR set to: 0
  9500  011EC8  8D6C               	bsf	___fladd@signs& (0+255),6,b
  9501                           
  9502                           ; BSR set to: 0
  9503  011ECA  5167               	movf	(___fladd@a+3)& (0+255),w,b
  9504  011ECC  2567               	addwf	(___fladd@a+3)& (0+255),w,b
  9505  011ECE  6F6D               	movwf	___fladd@aexp& (0+255),b
  9506                           
  9507                           ; BSR set to: 0
  9508  011ED0  BF66               	btfsc	(___fladd@a+2)& (0+255),7,b
  9509                           
  9510                           ; BSR set to: 0
  9511  011ED2  816D               	bsf	___fladd@aexp& (0+255),0,b
  9512                           
  9513                           ; BSR set to: 0
  9514  011ED4  516D               	movf	___fladd@aexp& (0+255),w,b
  9515  011ED6  B4D8               	btfsc	status,2,c
  9516  011ED8  D00D               	goto	l11015
  9517                           
  9518                           ; BSR set to: 0
  9519  011EDA  296D               	incf	___fladd@aexp& (0+255),w,b
  9520  011EDC  A4D8               	btfss	status,2,c
  9521  011EDE  D008               	goto	l11011
  9522                           
  9523                           ; BSR set to: 0
  9524  011EE0  0E00               	movlw	0
  9525  011EE2  6F64               	movwf	___fladd@a& (0+255),b
  9526  011EE4  0E00               	movlw	0
  9527  011EE6  6F65               	movwf	(___fladd@a+1)& (0+255),b
  9528  011EE8  0E00               	movlw	0
  9529  011EEA  6F66               	movwf	(___fladd@a+2)& (0+255),b
  9530  011EEC  0E00               	movlw	0
  9531  011EEE  6F67               	movwf	(___fladd@a+3)& (0+255),b
  9532  011EF0                     l11011:
  9533                           
  9534                           ; BSR set to: 0
  9535  011EF0  8F66               	bsf	(___fladd@a+2)& (0+255),7,b
  9536  011EF2  D006               	goto	L9
  9537  011EF4                     l11015:
  9538                           
  9539                           ; BSR set to: 0
  9540  011EF4  0E00               	movlw	0
  9541  011EF6  6F64               	movwf	___fladd@a& (0+255),b
  9542  011EF8  0E00               	movlw	0
  9543  011EFA  6F65               	movwf	(___fladd@a+1)& (0+255),b
  9544  011EFC  0E00               	movlw	0
  9545  011EFE  6F66               	movwf	(___fladd@a+2)& (0+255),b
  9546  011F00                     L9:
  9547  011F00  0E00               	movlw	0
  9548  011F02  6F67               	movwf	(___fladd@a+3)& (0+255),b
  9549                           
  9550                           ; BSR set to: 0
  9551  011F04  516E               	movf	___fladd@bexp& (0+255),w,b
  9552  011F06  5D6D               	subwf	___fladd@aexp& (0+255),w,b
  9553  011F08  B0D8               	btfsc	status,0,c
  9554  011F0A  D022               	goto	l11053
  9555                           
  9556                           ; BSR set to: 0
  9557  011F0C  AD6C               	btfss	___fladd@signs& (0+255),6,b
  9558  011F0E  D002               	goto	l11023
  9559                           
  9560                           ; BSR set to: 0
  9561  011F10  0E80               	movlw	128
  9562  011F12  1B6C               	xorwf	___fladd@signs& (0+255),f,b
  9563  011F14                     l11023:
  9564                           
  9565                           ; BSR set to: 0
  9566  011F14  C06E  F06F         	movff	___fladd@bexp,___fladd@grs
  9567                           
  9568                           ; BSR set to: 0
  9569  011F18  C06D  F06E         	movff	___fladd@aexp,___fladd@bexp
  9570                           
  9571                           ; BSR set to: 0
  9572  011F1C  C06F  F06D         	movff	___fladd@grs,___fladd@aexp
  9573                           
  9574                           ; BSR set to: 0
  9575  011F20  C060  F06F         	movff	___fladd@b,___fladd@grs
  9576                           
  9577                           ; BSR set to: 0
  9578  011F24  C064  F060         	movff	___fladd@a,___fladd@b
  9579                           
  9580                           ; BSR set to: 0
  9581  011F28  C06F  F064         	movff	___fladd@grs,___fladd@a
  9582                           
  9583                           ; BSR set to: 0
  9584  011F2C  C061  F06F         	movff	___fladd@b+1,___fladd@grs
  9585                           
  9586                           ; BSR set to: 0
  9587  011F30  C065  F061         	movff	___fladd@a+1,___fladd@b+1
  9588                           
  9589                           ; BSR set to: 0
  9590  011F34  C06F  F065         	movff	___fladd@grs,___fladd@a+1
  9591                           
  9592                           ; BSR set to: 0
  9593  011F38  C062  F06F         	movff	___fladd@b+2,___fladd@grs
  9594                           
  9595                           ; BSR set to: 0
  9596  011F3C  C066  F062         	movff	___fladd@a+2,___fladd@b+2
  9597                           
  9598                           ; BSR set to: 0
  9599  011F40  C06F  F066         	movff	___fladd@grs,___fladd@a+2
  9600                           
  9601                           ; BSR set to: 0
  9602  011F44  C063  F06F         	movff	___fladd@b+3,___fladd@grs
  9603                           
  9604                           ; BSR set to: 0
  9605  011F48  C067  F063         	movff	___fladd@a+3,___fladd@b+3
  9606                           
  9607                           ; BSR set to: 0
  9608  011F4C  C06F  F067         	movff	___fladd@grs,___fladd@a+3
  9609  011F50                     l11053:
  9610                           
  9611                           ; BSR set to: 0
  9612  011F50  0E00               	movlw	0
  9613  011F52  6F6F               	movwf	___fladd@grs& (0+255),b
  9614                           
  9615                           ; BSR set to: 0
  9616  011F54  516E               	movf	___fladd@bexp& (0+255),w,b
  9617  011F56  C06D  F068         	movff	___fladd@aexp,??___fladd
  9618  011F5A  6B69               	clrf	(??___fladd+1)& (0+255),b
  9619  011F5C  5F68               	subwf	??___fladd& (0+255),f,b
  9620  011F5E  0E00               	movlw	0
  9621  011F60  5B69               	subwfb	(??___fladd+1)& (0+255),f,b
  9622  011F62  BF69               	btfsc	(??___fladd+1)& (0+255),7,b
  9623  011F64  D02C               	goto	l2331
  9624  011F66  5169               	movf	(??___fladd+1)& (0+255),w,b
  9625  011F68  E104               	bnz	u10390
  9626  011F6A  0E1A               	movlw	26
  9627  011F6C  5D68               	subwf	??___fladd& (0+255),w,b
  9628  011F6E  A0D8               	btfss	status,0,c
  9629  011F70  D026               	goto	l2331
  9630  011F72                     u10390:
  9631                           
  9632                           ; BSR set to: 0
  9633  011F72  5160               	movf	___fladd@b& (0+255),w,b
  9634  011F74  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
  9635  011F76  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
  9636  011F78  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
  9637  011F7A  B4D8               	btfsc	status,2,c
  9638  011F7C  D002               	goto	u10400
  9639  011F7E  0E01               	movlw	1
  9640  011F80  D001               	goto	u10410
  9641  011F82                     u10400:
  9642  011F82  0E00               	movlw	0
  9643  011F84                     u10410:
  9644  011F84  6F6F               	movwf	___fladd@grs& (0+255),b
  9645                           
  9646                           ; BSR set to: 0
  9647  011F86  0E00               	movlw	0
  9648  011F88  6F60               	movwf	___fladd@b& (0+255),b
  9649  011F8A  0E00               	movlw	0
  9650  011F8C  6F61               	movwf	(___fladd@b+1)& (0+255),b
  9651  011F8E  0E00               	movlw	0
  9652  011F90  6F62               	movwf	(___fladd@b+2)& (0+255),b
  9653  011F92  0E00               	movlw	0
  9654  011F94  6F63               	movwf	(___fladd@b+3)& (0+255),b
  9655                           
  9656                           ; BSR set to: 0
  9657  011F96  C06D  F06E         	movff	___fladd@aexp,___fladd@bexp
  9658  011F9A  D015               	goto	u10440
  9659  011F9C                     l2332:
  9660                           
  9661                           ; BSR set to: 0
  9662  011F9C  A16F               	btfss	___fladd@grs& (0+255),0,b
  9663  011F9E  D005               	goto	l11065
  9664                           
  9665                           ; BSR set to: 0
  9666  011FA0  90D8               	bcf	status,0,c
  9667  011FA2  316F               	rrcf	___fladd@grs& (0+255),w,b
  9668  011FA4  0901               	iorlw	1
  9669  011FA6  6F6F               	movwf	___fladd@grs& (0+255),b
  9670  011FA8  D002               	goto	l11067
  9671  011FAA                     l11065:
  9672                           
  9673                           ; BSR set to: 0
  9674  011FAA  90D8               	bcf	status,0,c
  9675  011FAC  336F               	rrcf	___fladd@grs& (0+255),f,b
  9676  011FAE                     l11067:
  9677                           
  9678                           ; BSR set to: 0
  9679  011FAE  B160               	btfsc	___fladd@b& (0+255),0,b
  9680                           
  9681                           ; BSR set to: 0
  9682  011FB0  8F6F               	bsf	___fladd@grs& (0+255),7,b
  9683                           
  9684                           ; BSR set to: 0
  9685  011FB2  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
  9686  011FB4  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
  9687  011FB6  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
  9688  011FB8  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
  9689  011FBA  3360               	rrcf	___fladd@b& (0+255),f,b
  9690                           
  9691                           ; BSR set to: 0
  9692  011FBC  2B6E               	incf	___fladd@bexp& (0+255),f,b
  9693  011FBE                     l2331:
  9694                           
  9695                           ; BSR set to: 0
  9696  011FBE  516D               	movf	___fladd@aexp& (0+255),w,b
  9697  011FC0  5D6E               	subwf	___fladd@bexp& (0+255),w,b
  9698  011FC2  A0D8               	btfss	status,0,c
  9699  011FC4  D7EB               	goto	l2332
  9700  011FC6                     u10440:
  9701                           
  9702                           ; BSR set to: 0
  9703  011FC6  BD6C               	btfsc	___fladd@signs& (0+255),6,b
  9704  011FC8  D028               	goto	l11099
  9705                           
  9706                           ; BSR set to: 0
  9707  011FCA  516E               	movf	___fladd@bexp& (0+255),w,b
  9708  011FCC  A4D8               	btfss	status,2,c
  9709  011FCE  D009               	goto	l11081
  9710                           
  9711                           ; BSR set to: 0
  9712  011FD0  0E00               	movlw	0
  9713  011FD2  6F60               	movwf	?___fladd& (0+255),b
  9714  011FD4  0E00               	movlw	0
  9715  011FD6  6F61               	movwf	(?___fladd+1)& (0+255),b
  9716  011FD8  0E00               	movlw	0
  9717  011FDA  6F62               	movwf	(?___fladd+2)& (0+255),b
  9718  011FDC  0E00               	movlw	0
  9719  011FDE  6F63               	movwf	(?___fladd+3)& (0+255),b
  9720  011FE0  0012               	return	
  9721  011FE2                     l11081:
  9722                           
  9723                           ; BSR set to: 0
  9724  011FE2  5164               	movf	___fladd@a& (0+255),w,b
  9725  011FE4  2760               	addwf	___fladd@b& (0+255),f,b
  9726  011FE6  5165               	movf	(___fladd@a+1)& (0+255),w,b
  9727  011FE8  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
  9728  011FEA  5166               	movf	(___fladd@a+2)& (0+255),w,b
  9729  011FEC  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
  9730  011FEE  5167               	movf	(___fladd@a+3)& (0+255),w,b
  9731  011FF0  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
  9732                           
  9733                           ; BSR set to: 0
  9734  011FF2  A163               	btfss	(___fladd@b+3)& (0+255),0,b
  9735  011FF4  D071               	goto	u10570
  9736                           
  9737                           ; BSR set to: 0
  9738  011FF6  A16F               	btfss	___fladd@grs& (0+255),0,b
  9739  011FF8  D005               	goto	l11089
  9740                           
  9741                           ; BSR set to: 0
  9742  011FFA  90D8               	bcf	status,0,c
  9743  011FFC  316F               	rrcf	___fladd@grs& (0+255),w,b
  9744  011FFE  0901               	iorlw	1
  9745  012000  6F6F               	movwf	___fladd@grs& (0+255),b
  9746  012002  D002               	goto	l11091
  9747  012004                     l11089:
  9748                           
  9749                           ; BSR set to: 0
  9750  012004  90D8               	bcf	status,0,c
  9751  012006  336F               	rrcf	___fladd@grs& (0+255),f,b
  9752  012008                     l11091:
  9753                           
  9754                           ; BSR set to: 0
  9755  012008  B160               	btfsc	___fladd@b& (0+255),0,b
  9756                           
  9757                           ; BSR set to: 0
  9758  01200A  8F6F               	bsf	___fladd@grs& (0+255),7,b
  9759                           
  9760                           ; BSR set to: 0
  9761  01200C  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
  9762  01200E  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
  9763  012010  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
  9764  012012  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
  9765  012014  3360               	rrcf	___fladd@b& (0+255),f,b
  9766                           
  9767                           ; BSR set to: 0
  9768  012016  2B6E               	incf	___fladd@bexp& (0+255),f,b
  9769  012018  D05F               	goto	u10570
  9770  01201A                     l11099:
  9771                           
  9772                           ; BSR set to: 0
  9773  01201A  5164               	movf	___fladd@a& (0+255),w,b
  9774  01201C  5D60               	subwf	___fladd@b& (0+255),w,b
  9775  01201E  5165               	movf	(___fladd@a+1)& (0+255),w,b
  9776  012020  5961               	subwfb	(___fladd@b+1)& (0+255),w,b
  9777  012022  5166               	movf	(___fladd@a+2)& (0+255),w,b
  9778  012024  5962               	subwfb	(___fladd@b+2)& (0+255),w,b
  9779  012026  5163               	movf	(___fladd@b+3)& (0+255),w,b
  9780  012028  0A80               	xorlw	128
  9781  01202A  6F68               	movwf	??___fladd& (0+255),b
  9782  01202C  5167               	movf	(___fladd@a+3)& (0+255),w,b
  9783  01202E  0A80               	xorlw	128
  9784  012030  5968               	subwfb	??___fladd& (0+255),w,b
  9785  012032  B0D8               	btfsc	status,0,c
  9786  012034  D025               	goto	l11109
  9787                           
  9788                           ; BSR set to: 0
  9789  012036  5160               	movf	___fladd@b& (0+255),w,b
  9790  012038  5D64               	subwf	___fladd@a& (0+255),w,b
  9791  01203A  6F68               	movwf	??___fladd& (0+255),b
  9792  01203C  5161               	movf	(___fladd@b+1)& (0+255),w,b
  9793  01203E  5965               	subwfb	(___fladd@a+1)& (0+255),w,b
  9794  012040  6F69               	movwf	(??___fladd+1)& (0+255),b
  9795  012042  5162               	movf	(___fladd@b+2)& (0+255),w,b
  9796  012044  5966               	subwfb	(___fladd@a+2)& (0+255),w,b
  9797  012046  6F6A               	movwf	(??___fladd+2)& (0+255),b
  9798  012048  5163               	movf	(___fladd@b+3)& (0+255),w,b
  9799  01204A  5967               	subwfb	(___fladd@a+3)& (0+255),w,b
  9800  01204C  6F6B               	movwf	(??___fladd+3)& (0+255),b
  9801  01204E  0EFF               	movlw	255
  9802  012050  2568               	addwf	??___fladd& (0+255),w,b
  9803  012052  6F60               	movwf	___fladd@b& (0+255),b
  9804  012054  0EFF               	movlw	255
  9805  012056  2169               	addwfc	(??___fladd+1)& (0+255),w,b
  9806  012058  6F61               	movwf	(___fladd@b+1)& (0+255),b
  9807  01205A  0EFF               	movlw	255
  9808  01205C  216A               	addwfc	(??___fladd+2)& (0+255),w,b
  9809  01205E  6F62               	movwf	(___fladd@b+2)& (0+255),b
  9810  012060  0EFF               	movlw	255
  9811  012062  216B               	addwfc	(??___fladd+3)& (0+255),w,b
  9812  012064  6F63               	movwf	(___fladd@b+3)& (0+255),b
  9813  012066  0E80               	movlw	128
  9814  012068  1B6C               	xorwf	___fladd@signs& (0+255),f,b
  9815                           
  9816                           ; BSR set to: 0
  9817  01206A  6D6F               	negf	___fladd@grs& (0+255),b
  9818                           
  9819                           ; BSR set to: 0
  9820  01206C  516F               	movf	___fladd@grs& (0+255),w,b
  9821  01206E  A4D8               	btfss	status,2,c
  9822  012070  D00F               	goto	l2347
  9823                           
  9824                           ; BSR set to: 0
  9825  012072  0E01               	movlw	1
  9826  012074  2760               	addwf	___fladd@b& (0+255),f,b
  9827  012076  0E00               	movlw	0
  9828  012078  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
  9829  01207A  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
  9830  01207C  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
  9831  01207E  D008               	goto	l2347
  9832  012080                     l11109:
  9833                           
  9834                           ; BSR set to: 0
  9835  012080  5164               	movf	___fladd@a& (0+255),w,b
  9836  012082  5F60               	subwf	___fladd@b& (0+255),f,b
  9837  012084  5165               	movf	(___fladd@a+1)& (0+255),w,b
  9838  012086  5B61               	subwfb	(___fladd@b+1)& (0+255),f,b
  9839  012088  5166               	movf	(___fladd@a+2)& (0+255),w,b
  9840  01208A  5B62               	subwfb	(___fladd@b+2)& (0+255),f,b
  9841  01208C  5167               	movf	(___fladd@a+3)& (0+255),w,b
  9842  01208E  5B63               	subwfb	(___fladd@b+3)& (0+255),f,b
  9843  012090                     l2347:
  9844                           
  9845                           ; BSR set to: 0
  9846  012090  5160               	movf	___fladd@b& (0+255),w,b
  9847  012092  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
  9848  012094  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
  9849  012096  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
  9850  012098  A4D8               	btfss	status,2,c
  9851  01209A  D01C               	goto	l11133
  9852                           
  9853                           ; BSR set to: 0
  9854  01209C  516F               	movf	___fladd@grs& (0+255),w,b
  9855  01209E  A4D8               	btfss	status,2,c
  9856  0120A0  D019               	goto	l11133
  9857                           
  9858                           ; BSR set to: 0
  9859  0120A2  0E00               	movlw	0
  9860  0120A4  6F60               	movwf	?___fladd& (0+255),b
  9861  0120A6  0E00               	movlw	0
  9862  0120A8  6F61               	movwf	(?___fladd+1)& (0+255),b
  9863  0120AA  0E00               	movlw	0
  9864  0120AC  6F62               	movwf	(?___fladd+2)& (0+255),b
  9865  0120AE  0E00               	movlw	0
  9866  0120B0  6F63               	movwf	(?___fladd+3)& (0+255),b
  9867  0120B2  0012               	return	
  9868  0120B4                     l11117:
  9869                           
  9870                           ; BSR set to: 0
  9871  0120B4  90D8               	bcf	status,0,c
  9872  0120B6  3760               	rlcf	___fladd@b& (0+255),f,b
  9873  0120B8  3761               	rlcf	(___fladd@b+1)& (0+255),f,b
  9874  0120BA  3762               	rlcf	(___fladd@b+2)& (0+255),f,b
  9875  0120BC  3763               	rlcf	(___fladd@b+3)& (0+255),f,b
  9876                           
  9877                           ; BSR set to: 0
  9878  0120BE  BF6F               	btfsc	___fladd@grs& (0+255),7,b
  9879                           
  9880                           ; BSR set to: 0
  9881  0120C0  8160               	bsf	___fladd@b& (0+255),0,b
  9882                           
  9883                           ; BSR set to: 0
  9884  0120C2  A16F               	btfss	___fladd@grs& (0+255),0,b
  9885  0120C4  D002               	goto	l11127
  9886                           
  9887                           ; BSR set to: 0
  9888  0120C6  80D8               	bsf	status,0,c
  9889  0120C8  D001               	goto	L10
  9890  0120CA                     l11127:
  9891                           
  9892                           ; BSR set to: 0
  9893  0120CA  90D8               	bcf	status,0,c
  9894  0120CC                     L10:
  9895  0120CC  376F               	rlcf	___fladd@grs& (0+255),f,b
  9896                           
  9897                           ; BSR set to: 0
  9898  0120CE  516E               	movf	___fladd@bexp& (0+255),w,b
  9899  0120D0  A4D8               	btfss	status,2,c
  9900                           
  9901                           ; BSR set to: 0
  9902  0120D2  076E               	decf	___fladd@bexp& (0+255),f,b
  9903  0120D4                     l11133:
  9904                           
  9905                           ; BSR set to: 0
  9906  0120D4  AF62               	btfss	(___fladd@b+2)& (0+255),7,b
  9907  0120D6  D7EE               	goto	l11117
  9908  0120D8                     u10570:
  9909                           
  9910                           ; BSR set to: 0
  9911  0120D8  0E00               	movlw	0
  9912  0120DA  6F6D               	movwf	___fladd@aexp& (0+255),b
  9913                           
  9914                           ; BSR set to: 0
  9915  0120DC  AF6F               	btfss	___fladd@grs& (0+255),7,b
  9916  0120DE  D00B               	goto	l2356
  9917                           
  9918                           ; BSR set to: 0
  9919  0120E0  C06F  F068         	movff	___fladd@grs,??___fladd
  9920  0120E4  0E7F               	movlw	127
  9921  0120E6  1768               	andwf	??___fladd& (0+255),f,b
  9922  0120E8  B4D8               	btfsc	status,2,c
  9923  0120EA  D003               	goto	l2357
  9924  0120EC                     u10590:
  9925                           
  9926                           ; BSR set to: 0
  9927  0120EC  0E01               	movlw	1
  9928  0120EE  6F6D               	movwf	___fladd@aexp& (0+255),b
  9929  0120F0  D002               	goto	l2356
  9930  0120F2                     l2357:
  9931                           
  9932                           ; BSR set to: 0
  9933  0120F2  B160               	btfsc	___fladd@b& (0+255),0,b
  9934  0120F4  D7FB               	goto	u10590
  9935  0120F6                     l2356:
  9936                           
  9937                           ; BSR set to: 0
  9938  0120F6  516D               	movf	___fladd@aexp& (0+255),w,b
  9939  0120F8  B4D8               	btfsc	status,2,c
  9940  0120FA  D020               	goto	l11153
  9941                           
  9942                           ; BSR set to: 0
  9943  0120FC  0E01               	movlw	1
  9944  0120FE  2760               	addwf	___fladd@b& (0+255),f,b
  9945  012100  0E00               	movlw	0
  9946  012102  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
  9947  012104  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
  9948  012106  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
  9949                           
  9950                           ; BSR set to: 0
  9951  012108  A163               	btfss	(___fladd@b+3)& (0+255),0,b
  9952  01210A  D018               	goto	l11153
  9953                           
  9954                           ; BSR set to: 0
  9955  01210C  C060  F068         	movff	___fladd@b,??___fladd
  9956  012110  C061  F069         	movff	___fladd@b+1,??___fladd+1
  9957  012114  C062  F06A         	movff	___fladd@b+2,??___fladd+2
  9958  012118  C063  F06B         	movff	___fladd@b+3,??___fladd+3
  9959  01211C  356B               	rlcf	(??___fladd+3)& (0+255),w,b
  9960  01211E  336B               	rrcf	(??___fladd+3)& (0+255),f,b
  9961  012120  336A               	rrcf	(??___fladd+2)& (0+255),f,b
  9962  012122  3369               	rrcf	(??___fladd+1)& (0+255),f,b
  9963  012124  3368               	rrcf	??___fladd& (0+255),f,b
  9964  012126  C068  F060         	movff	??___fladd,___fladd@b
  9965  01212A  C069  F061         	movff	??___fladd+1,___fladd@b+1
  9966  01212E  C06A  F062         	movff	??___fladd+2,___fladd@b+2
  9967  012132  C06B  F063         	movff	??___fladd+3,___fladd@b+3
  9968  012136  296E               	incf	___fladd@bexp& (0+255),w,b
  9969  012138  A4D8               	btfss	status,2,c
  9970                           
  9971                           ; BSR set to: 0
  9972  01213A  2B6E               	incf	___fladd@bexp& (0+255),f,b
  9973  01213C                     l11153:
  9974                           
  9975                           ; BSR set to: 0
  9976  01213C  296E               	incf	___fladd@bexp& (0+255),w,b
  9977  01213E  B4D8               	btfsc	status,2,c
  9978  012140  D003               	goto	u10650
  9979                           
  9980                           ; BSR set to: 0
  9981  012142  516E               	movf	___fladd@bexp& (0+255),w,b
  9982  012144  A4D8               	btfss	status,2,c
  9983  012146  D00D               	goto	l11161
  9984  012148                     u10650:
  9985                           
  9986                           ; BSR set to: 0
  9987  012148  0E00               	movlw	0
  9988  01214A  6F60               	movwf	___fladd@b& (0+255),b
  9989  01214C  0E00               	movlw	0
  9990  01214E  6F61               	movwf	(___fladd@b+1)& (0+255),b
  9991  012150  0E00               	movlw	0
  9992  012152  6F62               	movwf	(___fladd@b+2)& (0+255),b
  9993  012154  0E00               	movlw	0
  9994  012156  6F63               	movwf	(___fladd@b+3)& (0+255),b
  9995  012158  516E               	movf	___fladd@bexp& (0+255),w,b
  9996  01215A  A4D8               	btfss	status,2,c
  9997  01215C  D002               	goto	l11161
  9998                           
  9999                           ; BSR set to: 0
 10000  01215E  0E00               	movlw	0
 10001  012160  6F6C               	movwf	___fladd@signs& (0+255),b
 10002  012162                     l11161:
 10003                           
 10004                           ; BSR set to: 0
 10005  012162  A16E               	btfss	___fladd@bexp& (0+255),0,b
 10006  012164  D002               	goto	l11165
 10007                           
 10008                           ; BSR set to: 0
 10009  012166  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
 10010  012168  D001               	goto	l11167
 10011  01216A                     l11165:
 10012                           
 10013                           ; BSR set to: 0
 10014  01216A  9F62               	bcf	(___fladd@b+2)& (0+255),7,b
 10015  01216C                     l11167:
 10016                           
 10017                           ; BSR set to: 0
 10018  01216C  90D8               	bcf	status,0,c
 10019  01216E  316E               	rrcf	___fladd@bexp& (0+255),w,b
 10020  012170  6F63               	movwf	(___fladd@b+3)& (0+255),b
 10021                           
 10022                           ; BSR set to: 0
 10023  012172  BF6C               	btfsc	___fladd@signs& (0+255),7,b
 10024                           
 10025                           ; BSR set to: 0
 10026  012174  8F63               	bsf	(___fladd@b+3)& (0+255),7,b
 10027                           
 10028                           ; BSR set to: 0
 10029  012176  C060  F060         	movff	___fladd@b,?___fladd
 10030  01217A  C061  F061         	movff	___fladd@b+1,?___fladd+1
 10031  01217E  C062  F062         	movff	___fladd@b+2,?___fladd+2
 10032  012182  C063  F063         	movff	___fladd@b+3,?___fladd+3
 10033                           
 10034                           ; BSR set to: 0
 10035  012186  0012               	return		;funcret
 10036  012188                     __end_of___fladd:
 10037                           	callstack 0
 10038                           
 10039 ;; *************** function ___flneg *****************
 10040 ;; Defined at:
 10041 ;;		line 15 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/flneg.c"
 10042 ;; Parameters:    Size  Location     Type
 10043 ;;  f1              4    0[BANK0 ] unsigned char 
 10044 ;; Auto vars:     Size  Location     Type
 10045 ;;		None
 10046 ;; Return value:  Size  Location     Type
 10047 ;;                  4    0[BANK0 ] unsigned char 
 10048 ;; Registers used:
 10049 ;;		wreg, status,2, status,0
 10050 ;; Tracked objects:
 10051 ;;		On entry : 3F/0
 10052 ;;		On exit  : 3F/0
 10053 ;;		Unchanged: 0/0
 10054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10055 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10058 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10059 ;;Total ram usage:        4 bytes
 10060 ;; Hardware stack levels used: 1
 10061 ;; Hardware stack levels required when called: 7
 10062 ;; This function calls:
 10063 ;;		Nothing
 10064 ;; This function is called by:
 10065 ;;		_efgtoa
 10066 ;; This function uses a non-reentrant model
 10067 ;;
 10068                           
 10069                           	psect	text21
 10070  0149EE                     __ptext21:
 10071                           	callstack 0
 10072  0149EE                     ___flneg:
 10073                           	callstack 19
 10074                           
 10075                           ; BSR set to: 0
 10076                           
 10077                           ; BSR set to: 0
 10078                           ;incstack = 0
 10079  0149EE  5160               	movf	___flneg@f1& (0+255),w,b
 10080  0149F0  1161               	iorwf	(___flneg@f1+1)& (0+255),w,b
 10081  0149F2  1162               	iorwf	(___flneg@f1+2)& (0+255),w,b
 10082  0149F4  1163               	iorwf	(___flneg@f1+3)& (0+255),w,b
 10083  0149F6  B4D8               	btfsc	status,2,c
 10084  0149F8  D008               	goto	l11623
 10085                           
 10086                           ; BSR set to: 0
 10087  0149FA  0E00               	movlw	0
 10088  0149FC  1B60               	xorwf	___flneg@f1& (0+255),f,b
 10089  0149FE  0E00               	movlw	0
 10090  014A00  1B61               	xorwf	(___flneg@f1+1)& (0+255),f,b
 10091  014A02  0E00               	movlw	0
 10092  014A04  1B62               	xorwf	(___flneg@f1+2)& (0+255),f,b
 10093  014A06  0E80               	movlw	128
 10094  014A08  1B63               	xorwf	(___flneg@f1+3)& (0+255),f,b
 10095  014A0A                     l11623:
 10096                           
 10097                           ; BSR set to: 0
 10098  014A0A  C060  F060         	movff	___flneg@f1,?___flneg
 10099  014A0E  C061  F061         	movff	___flneg@f1+1,?___flneg+1
 10100  014A12  C062  F062         	movff	___flneg@f1+2,?___flneg+2
 10101  014A16  C063  F063         	movff	___flneg@f1+3,?___flneg+3
 10102                           
 10103                           ; BSR set to: 0
 10104  014A1A  0012               	return		;funcret
 10105  014A1C                     __end_of___flneg:
 10106                           	callstack 0
 10107                           
 10108 ;; *************** function ___flmul *****************
 10109 ;; Defined at:
 10110 ;;		line 8 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/sprcmul.c"
 10111 ;; Parameters:    Size  Location     Type
 10112 ;;  b               4   14[BANK0 ] unsigned char 
 10113 ;;  a               4   18[BANK0 ] unsigned char 
 10114 ;; Auto vars:     Size  Location     Type
 10115 ;;  prod            4   33[BANK0 ] struct .
 10116 ;;  grs             4   29[BANK0 ] unsigned long 
 10117 ;;  temp            2   37[BANK0 ] struct .
 10118 ;;  bexp            1   28[BANK0 ] unsigned char 
 10119 ;;  aexp            1   27[BANK0 ] unsigned char 
 10120 ;;  sign            1   26[BANK0 ] unsigned char 
 10121 ;; Return value:  Size  Location     Type
 10122 ;;                  4   14[BANK0 ] unsigned char 
 10123 ;; Registers used:
 10124 ;;		wreg, status,2, status,0, prodl, prodh
 10125 ;; Tracked objects:
 10126 ;;		On entry : 3F/0
 10127 ;;		On exit  : 3F/0
 10128 ;;		Unchanged: 0/0
 10129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10130 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10131 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10132 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10133 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10134 ;;Total ram usage:       25 bytes
 10135 ;; Hardware stack levels used: 1
 10136 ;; Hardware stack levels required when called: 7
 10137 ;; This function calls:
 10138 ;;		Nothing
 10139 ;; This function is called by:
 10140 ;;		_main
 10141 ;;		_efgtoa
 10142 ;; This function uses a non-reentrant model
 10143 ;;
 10144                           
 10145                           	psect	text22
 10146  011B2C                     __ptext22:
 10147                           	callstack 0
 10148  011B2C                     ___flmul:
 10149                           	callstack 19
 10150                           
 10151                           ; BSR set to: 0
 10152                           
 10153                           ; BSR set to: 0
 10154                           ;incstack = 0
 10155  011B2C  5171               	movf	(___flmul@b+3)& (0+255),w,b
 10156  011B2E  0B80               	andlw	128
 10157  011B30  6F7A               	movwf	___flmul@sign& (0+255),b
 10158  011B32  5171               	movf	(___flmul@b+3)& (0+255),w,b
 10159  011B34  2571               	addwf	(___flmul@b+3)& (0+255),w,b
 10160  011B36  6F7C               	movwf	___flmul@bexp& (0+255),b
 10161                           
 10162                           ; BSR set to: 0
 10163  011B38  BF70               	btfsc	(___flmul@b+2)& (0+255),7,b
 10164                           
 10165                           ; BSR set to: 0
 10166  011B3A  817C               	bsf	___flmul@bexp& (0+255),0,b
 10167                           
 10168                           ; BSR set to: 0
 10169  011B3C  517C               	movf	___flmul@bexp& (0+255),w,b
 10170  011B3E  B4D8               	btfsc	status,2,c
 10171  011B40  D00D               	goto	l11379
 10172                           
 10173                           ; BSR set to: 0
 10174  011B42  297C               	incf	___flmul@bexp& (0+255),w,b
 10175  011B44  A4D8               	btfss	status,2,c
 10176  011B46  D008               	goto	l11377
 10177                           
 10178                           ; BSR set to: 0
 10179  011B48  0E00               	movlw	0
 10180  011B4A  6F6E               	movwf	___flmul@b& (0+255),b
 10181  011B4C  0E00               	movlw	0
 10182  011B4E  6F6F               	movwf	(___flmul@b+1)& (0+255),b
 10183  011B50  0E00               	movlw	0
 10184  011B52  6F70               	movwf	(___flmul@b+2)& (0+255),b
 10185  011B54  0E00               	movlw	0
 10186  011B56  6F71               	movwf	(___flmul@b+3)& (0+255),b
 10187  011B58                     l11377:
 10188                           
 10189                           ; BSR set to: 0
 10190  011B58  8F70               	bsf	(___flmul@b+2)& (0+255),7,b
 10191  011B5A  D008               	goto	l11381
 10192  011B5C                     l11379:
 10193                           
 10194                           ; BSR set to: 0
 10195  011B5C  0E00               	movlw	0
 10196  011B5E  6F6E               	movwf	___flmul@b& (0+255),b
 10197  011B60  0E00               	movlw	0
 10198  011B62  6F6F               	movwf	(___flmul@b+1)& (0+255),b
 10199  011B64  0E00               	movlw	0
 10200  011B66  6F70               	movwf	(___flmul@b+2)& (0+255),b
 10201  011B68  0E00               	movlw	0
 10202  011B6A  6F71               	movwf	(___flmul@b+3)& (0+255),b
 10203  011B6C                     l11381:
 10204                           
 10205                           ; BSR set to: 0
 10206  011B6C  5175               	movf	(___flmul@a+3)& (0+255),w,b
 10207  011B6E  0B80               	andlw	128
 10208  011B70  1B7A               	xorwf	___flmul@sign& (0+255),f,b
 10209                           
 10210                           ; BSR set to: 0
 10211  011B72  5175               	movf	(___flmul@a+3)& (0+255),w,b
 10212  011B74  2575               	addwf	(___flmul@a+3)& (0+255),w,b
 10213  011B76  6F7B               	movwf	___flmul@aexp& (0+255),b
 10214                           
 10215                           ; BSR set to: 0
 10216  011B78  BF74               	btfsc	(___flmul@a+2)& (0+255),7,b
 10217                           
 10218                           ; BSR set to: 0
 10219  011B7A  817B               	bsf	___flmul@aexp& (0+255),0,b
 10220                           
 10221                           ; BSR set to: 0
 10222  011B7C  517B               	movf	___flmul@aexp& (0+255),w,b
 10223  011B7E  B4D8               	btfsc	status,2,c
 10224  011B80  D00D               	goto	l11397
 10225                           
 10226                           ; BSR set to: 0
 10227  011B82  297B               	incf	___flmul@aexp& (0+255),w,b
 10228  011B84  A4D8               	btfss	status,2,c
 10229  011B86  D008               	goto	l11395
 10230                           
 10231                           ; BSR set to: 0
 10232  011B88  0E00               	movlw	0
 10233  011B8A  6F72               	movwf	___flmul@a& (0+255),b
 10234  011B8C  0E00               	movlw	0
 10235  011B8E  6F73               	movwf	(___flmul@a+1)& (0+255),b
 10236  011B90  0E00               	movlw	0
 10237  011B92  6F74               	movwf	(___flmul@a+2)& (0+255),b
 10238  011B94  0E00               	movlw	0
 10239  011B96  6F75               	movwf	(___flmul@a+3)& (0+255),b
 10240  011B98                     l11395:
 10241                           
 10242                           ; BSR set to: 0
 10243  011B98  8F74               	bsf	(___flmul@a+2)& (0+255),7,b
 10244  011B9A  D008               	goto	l2416
 10245  011B9C                     l11397:
 10246                           
 10247                           ; BSR set to: 0
 10248  011B9C  0E00               	movlw	0
 10249  011B9E  6F72               	movwf	___flmul@a& (0+255),b
 10250  011BA0  0E00               	movlw	0
 10251  011BA2  6F73               	movwf	(___flmul@a+1)& (0+255),b
 10252  011BA4  0E00               	movlw	0
 10253  011BA6  6F74               	movwf	(___flmul@a+2)& (0+255),b
 10254  011BA8  0E00               	movlw	0
 10255  011BAA  6F75               	movwf	(___flmul@a+3)& (0+255),b
 10256  011BAC                     l2416:
 10257                           
 10258                           ; BSR set to: 0
 10259  011BAC  517B               	movf	___flmul@aexp& (0+255),w,b
 10260  011BAE  B4D8               	btfsc	status,2,c
 10261  011BB0  D003               	goto	u11080
 10262                           
 10263                           ; BSR set to: 0
 10264  011BB2  517C               	movf	___flmul@bexp& (0+255),w,b
 10265  011BB4  A4D8               	btfss	status,2,c
 10266  011BB6  D009               	goto	l11405
 10267  011BB8                     u11080:
 10268                           
 10269                           ; BSR set to: 0
 10270  011BB8  0E00               	movlw	0
 10271  011BBA  6F6E               	movwf	?___flmul& (0+255),b
 10272  011BBC  0E00               	movlw	0
 10273  011BBE  6F6F               	movwf	(?___flmul+1)& (0+255),b
 10274  011BC0  0E00               	movlw	0
 10275  011BC2  6F70               	movwf	(?___flmul+2)& (0+255),b
 10276  011BC4  0E00               	movlw	0
 10277  011BC6  6F71               	movwf	(?___flmul+3)& (0+255),b
 10278  011BC8  0012               	return	
 10279  011BCA                     l11405:
 10280                           
 10281                           ; BSR set to: 0
 10282  011BCA  5174               	movf	(___flmul@a+2)& (0+255),w,b
 10283  011BCC  036E               	mulwf	___flmul@b& (0+255),b
 10284  011BCE  006F FFCC  F085    	movff	prodl,___flmul@temp
 10285  011BD4  006F FFD0  F086    	movff	prodh,___flmul@temp+1
 10286                           
 10287                           ; BSR set to: 0
 10288  011BDA  5185               	movf	___flmul@temp& (0+255),w,b
 10289  011BDC  6F7D               	movwf	___flmul@grs& (0+255),b
 10290  011BDE  6B7E               	clrf	(___flmul@grs+1)& (0+255),b
 10291  011BE0  6B7F               	clrf	(___flmul@grs+2)& (0+255),b
 10292  011BE2  6B80               	clrf	(___flmul@grs+3)& (0+255),b
 10293                           
 10294                           ; BSR set to: 0
 10295  011BE4  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 10296  011BE6  6F81               	movwf	___flmul@prod& (0+255),b
 10297  011BE8  6B82               	clrf	(___flmul@prod+1)& (0+255),b
 10298  011BEA  6B83               	clrf	(___flmul@prod+2)& (0+255),b
 10299  011BEC  6B84               	clrf	(___flmul@prod+3)& (0+255),b
 10300  011BEE  5173               	movf	(___flmul@a+1)& (0+255),w,b
 10301  011BF0  036F               	mulwf	(___flmul@b+1)& (0+255),b
 10302  011BF2  006F FFCC  F085    	movff	prodl,___flmul@temp
 10303  011BF8  006F FFD0  F086    	movff	prodh,___flmul@temp+1
 10304                           
 10305                           ; BSR set to: 0
 10306  011BFE  5185               	movf	___flmul@temp& (0+255),w,b
 10307  011C00  277D               	addwf	___flmul@grs& (0+255),f,b
 10308  011C02  0E00               	movlw	0
 10309  011C04  237E               	addwfc	(___flmul@grs+1)& (0+255),f,b
 10310  011C06  237F               	addwfc	(___flmul@grs+2)& (0+255),f,b
 10311  011C08  2380               	addwfc	(___flmul@grs+3)& (0+255),f,b
 10312                           
 10313                           ; BSR set to: 0
 10314  011C0A  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 10315  011C0C  2781               	addwf	___flmul@prod& (0+255),f,b
 10316  011C0E  0E00               	movlw	0
 10317  011C10  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10318  011C12  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10319  011C14  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10320  011C16  5172               	movf	___flmul@a& (0+255),w,b
 10321  011C18  0370               	mulwf	(___flmul@b+2)& (0+255),b
 10322  011C1A  006F FFCC  F085    	movff	prodl,___flmul@temp
 10323  011C20  006F FFD0  F086    	movff	prodh,___flmul@temp+1
 10324                           
 10325                           ; BSR set to: 0
 10326  011C26  5185               	movf	___flmul@temp& (0+255),w,b
 10327  011C28  277D               	addwf	___flmul@grs& (0+255),f,b
 10328  011C2A  0E00               	movlw	0
 10329  011C2C  237E               	addwfc	(___flmul@grs+1)& (0+255),f,b
 10330  011C2E  237F               	addwfc	(___flmul@grs+2)& (0+255),f,b
 10331  011C30  2380               	addwfc	(___flmul@grs+3)& (0+255),f,b
 10332                           
 10333                           ; BSR set to: 0
 10334  011C32  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 10335  011C34  2781               	addwf	___flmul@prod& (0+255),f,b
 10336  011C36  0E00               	movlw	0
 10337  011C38  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10338  011C3A  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10339  011C3C  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10340                           
 10341                           ; BSR set to: 0
 10342  011C3E  C07F  F080         	movff	___flmul@grs+2,___flmul@grs+3
 10343  011C42  C07E  F07F         	movff	___flmul@grs+1,___flmul@grs+2
 10344  011C46  C07D  F07E         	movff	___flmul@grs,___flmul@grs+1
 10345  011C4A  6B7D               	clrf	___flmul@grs& (0+255),b
 10346                           
 10347                           ; BSR set to: 0
 10348  011C4C  5172               	movf	___flmul@a& (0+255),w,b
 10349  011C4E  036F               	mulwf	(___flmul@b+1)& (0+255),b
 10350  011C50  006F FFCC  F085    	movff	prodl,___flmul@temp
 10351  011C56  006F FFD0  F086    	movff	prodh,___flmul@temp+1
 10352                           
 10353                           ; BSR set to: 0
 10354  011C5C  5185               	movf	___flmul@temp& (0+255),w,b
 10355  011C5E  277D               	addwf	___flmul@grs& (0+255),f,b
 10356  011C60  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 10357  011C62  237E               	addwfc	(___flmul@grs+1)& (0+255),f,b
 10358  011C64  0E00               	movlw	0
 10359  011C66  237F               	addwfc	(___flmul@grs+2)& (0+255),f,b
 10360  011C68  0E00               	movlw	0
 10361  011C6A  2380               	addwfc	(___flmul@grs+3)& (0+255),f,b
 10362                           
 10363                           ; BSR set to: 0
 10364  011C6C  5173               	movf	(___flmul@a+1)& (0+255),w,b
 10365  011C6E  036E               	mulwf	___flmul@b& (0+255),b
 10366  011C70  006F FFCC  F085    	movff	prodl,___flmul@temp
 10367  011C76  006F FFD0  F086    	movff	prodh,___flmul@temp+1
 10368                           
 10369                           ; BSR set to: 0
 10370  011C7C  5185               	movf	___flmul@temp& (0+255),w,b
 10371  011C7E  277D               	addwf	___flmul@grs& (0+255),f,b
 10372  011C80  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 10373  011C82  237E               	addwfc	(___flmul@grs+1)& (0+255),f,b
 10374  011C84  0E00               	movlw	0
 10375  011C86  237F               	addwfc	(___flmul@grs+2)& (0+255),f,b
 10376  011C88  0E00               	movlw	0
 10377  011C8A  2380               	addwfc	(___flmul@grs+3)& (0+255),f,b
 10378                           
 10379                           ; BSR set to: 0
 10380  011C8C  C07F  F080         	movff	___flmul@grs+2,___flmul@grs+3
 10381  011C90  C07E  F07F         	movff	___flmul@grs+1,___flmul@grs+2
 10382  011C94  C07D  F07E         	movff	___flmul@grs,___flmul@grs+1
 10383  011C98  6B7D               	clrf	___flmul@grs& (0+255),b
 10384  011C9A  5172               	movf	___flmul@a& (0+255),w,b
 10385  011C9C  036E               	mulwf	___flmul@b& (0+255),b
 10386  011C9E  006F FFCC  F085    	movff	prodl,___flmul@temp
 10387  011CA4  006F FFD0  F086    	movff	prodh,___flmul@temp+1
 10388                           
 10389                           ; BSR set to: 0
 10390  011CAA  5185               	movf	___flmul@temp& (0+255),w,b
 10391  011CAC  277D               	addwf	___flmul@grs& (0+255),f,b
 10392  011CAE  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 10393  011CB0  237E               	addwfc	(___flmul@grs+1)& (0+255),f,b
 10394  011CB2  0E00               	movlw	0
 10395  011CB4  237F               	addwfc	(___flmul@grs+2)& (0+255),f,b
 10396  011CB6  0E00               	movlw	0
 10397  011CB8  2380               	addwfc	(___flmul@grs+3)& (0+255),f,b
 10398                           
 10399                           ; BSR set to: 0
 10400  011CBA  5174               	movf	(___flmul@a+2)& (0+255),w,b
 10401  011CBC  036F               	mulwf	(___flmul@b+1)& (0+255),b
 10402  011CBE  006F FFCC  F085    	movff	prodl,___flmul@temp
 10403  011CC4  006F FFD0  F086    	movff	prodh,___flmul@temp+1
 10404  011CCA  5185               	movf	___flmul@temp& (0+255),w,b
 10405  011CCC  2781               	addwf	___flmul@prod& (0+255),f,b
 10406  011CCE  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 10407  011CD0  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10408  011CD2  0E00               	movlw	0
 10409  011CD4  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10410  011CD6  0E00               	movlw	0
 10411  011CD8  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10412                           
 10413                           ; BSR set to: 0
 10414  011CDA  5173               	movf	(___flmul@a+1)& (0+255),w,b
 10415  011CDC  0370               	mulwf	(___flmul@b+2)& (0+255),b
 10416  011CDE  006F FFCC  F085    	movff	prodl,___flmul@temp
 10417  011CE4  006F FFD0  F086    	movff	prodh,___flmul@temp+1
 10418                           
 10419                           ; BSR set to: 0
 10420  011CEA  5185               	movf	___flmul@temp& (0+255),w,b
 10421  011CEC  2781               	addwf	___flmul@prod& (0+255),f,b
 10422  011CEE  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 10423  011CF0  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10424  011CF2  0E00               	movlw	0
 10425  011CF4  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10426  011CF6  0E00               	movlw	0
 10427  011CF8  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10428  011CFA  5174               	movf	(___flmul@a+2)& (0+255),w,b
 10429  011CFC  0370               	mulwf	(___flmul@b+2)& (0+255),b
 10430  011CFE  006F FFCC  F085    	movff	prodl,___flmul@temp
 10431  011D04  006F FFD0  F086    	movff	prodh,___flmul@temp+1
 10432                           
 10433                           ; BSR set to: 0
 10434  011D0A  5185               	movf	___flmul@temp& (0+255),w,b
 10435  011D0C  6F76               	movwf	??___flmul& (0+255),b
 10436  011D0E  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 10437  011D10  6F77               	movwf	(??___flmul+1)& (0+255),b
 10438  011D12  6B78               	clrf	(??___flmul+2)& (0+255),b
 10439  011D14  6B79               	clrf	(??___flmul+3)& (0+255),b
 10440  011D16  C078  F079         	movff	??___flmul+2,??___flmul+3
 10441  011D1A  C077  F078         	movff	??___flmul+1,??___flmul+2
 10442  011D1E  C076  F077         	movff	??___flmul,??___flmul+1
 10443  011D22  6B76               	clrf	??___flmul& (0+255),b
 10444  011D24  5176               	movf	??___flmul& (0+255),w,b
 10445  011D26  2781               	addwf	___flmul@prod& (0+255),f,b
 10446  011D28  5177               	movf	(??___flmul+1)& (0+255),w,b
 10447  011D2A  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10448  011D2C  5178               	movf	(??___flmul+2)& (0+255),w,b
 10449  011D2E  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10450  011D30  5179               	movf	(??___flmul+3)& (0+255),w,b
 10451  011D32  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10452                           
 10453                           ; BSR set to: 0
 10454  011D34  5180               	movf	(___flmul@grs+3)& (0+255),w,b
 10455  011D36  2781               	addwf	___flmul@prod& (0+255),f,b
 10456  011D38  0E00               	movlw	0
 10457  011D3A  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10458  011D3C  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10459  011D3E  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10460                           
 10461                           ; BSR set to: 0
 10462  011D40  C07F  F080         	movff	___flmul@grs+2,___flmul@grs+3
 10463  011D44  C07E  F07F         	movff	___flmul@grs+1,___flmul@grs+2
 10464  011D48  C07D  F07E         	movff	___flmul@grs,___flmul@grs+1
 10465  011D4C  6B7D               	clrf	___flmul@grs& (0+255),b
 10466                           
 10467                           ; BSR set to: 0
 10468  011D4E  517B               	movf	___flmul@aexp& (0+255),w,b
 10469  011D50  C07C  F076         	movff	___flmul@bexp,??___flmul
 10470  011D54  6B77               	clrf	(??___flmul+1)& (0+255),b
 10471  011D56  2776               	addwf	??___flmul& (0+255),f,b
 10472  011D58  0E00               	movlw	0
 10473  011D5A  2377               	addwfc	(??___flmul+1)& (0+255),f,b
 10474  011D5C  0E82               	movlw	130
 10475  011D5E  2576               	addwf	??___flmul& (0+255),w,b
 10476  011D60  6F85               	movwf	___flmul@temp& (0+255),b
 10477  011D62  0EFF               	movlw	255
 10478  011D64  2177               	addwfc	(??___flmul+1)& (0+255),w,b
 10479  011D66  6F86               	movwf	(___flmul@temp+1)& (0+255),b
 10480  011D68  D00F               	goto	l11453
 10481  011D6A                     l11447:
 10482                           
 10483                           ; BSR set to: 0
 10484  011D6A  90D8               	bcf	status,0,c
 10485  011D6C  3781               	rlcf	___flmul@prod& (0+255),f,b
 10486  011D6E  3782               	rlcf	(___flmul@prod+1)& (0+255),f,b
 10487  011D70  3783               	rlcf	(___flmul@prod+2)& (0+255),f,b
 10488  011D72  3784               	rlcf	(___flmul@prod+3)& (0+255),f,b
 10489                           
 10490                           ; BSR set to: 0
 10491  011D74  BF80               	btfsc	(___flmul@grs+3)& (0+255),7,b
 10492                           
 10493                           ; BSR set to: 0
 10494  011D76  8181               	bsf	___flmul@prod& (0+255),0,b
 10495                           
 10496                           ; BSR set to: 0
 10497  011D78  90D8               	bcf	status,0,c
 10498  011D7A  377D               	rlcf	___flmul@grs& (0+255),f,b
 10499  011D7C  377E               	rlcf	(___flmul@grs+1)& (0+255),f,b
 10500  011D7E  377F               	rlcf	(___flmul@grs+2)& (0+255),f,b
 10501  011D80  3780               	rlcf	(___flmul@grs+3)& (0+255),f,b
 10502  011D82  0785               	decf	___flmul@temp& (0+255),f,b
 10503  011D84  A0D8               	btfss	status,0,c
 10504  011D86  0786               	decf	(___flmul@temp+1)& (0+255),f,b
 10505  011D88                     l11453:
 10506                           
 10507                           ; BSR set to: 0
 10508  011D88  AF83               	btfss	(___flmul@prod+2)& (0+255),7,b
 10509  011D8A  D7EF               	goto	l11447
 10510                           
 10511                           ; BSR set to: 0
 10512  011D8C  0E00               	movlw	0
 10513  011D8E  6F7B               	movwf	___flmul@aexp& (0+255),b
 10514                           
 10515                           ; BSR set to: 0
 10516  011D90  AF80               	btfss	(___flmul@grs+3)& (0+255),7,b
 10517  011D92  D017               	goto	l2425
 10518                           
 10519                           ; BSR set to: 0
 10520  011D94  0EFF               	movlw	255
 10521  011D96  157D               	andwf	___flmul@grs& (0+255),w,b
 10522  011D98  6F76               	movwf	??___flmul& (0+255),b
 10523  011D9A  0EFF               	movlw	255
 10524  011D9C  157E               	andwf	(___flmul@grs+1)& (0+255),w,b
 10525  011D9E  6F77               	movwf	(??___flmul+1)& (0+255),b
 10526  011DA0  0EFF               	movlw	255
 10527  011DA2  157F               	andwf	(___flmul@grs+2)& (0+255),w,b
 10528  011DA4  6F78               	movwf	(??___flmul+2)& (0+255),b
 10529  011DA6  0E7F               	movlw	127
 10530  011DA8  1580               	andwf	(___flmul@grs+3)& (0+255),w,b
 10531  011DAA  6F79               	movwf	(??___flmul+3)& (0+255),b
 10532  011DAC  5176               	movf	??___flmul& (0+255),w,b
 10533  011DAE  1177               	iorwf	(??___flmul+1)& (0+255),w,b
 10534  011DB0  1178               	iorwf	(??___flmul+2)& (0+255),w,b
 10535  011DB2  1179               	iorwf	(??___flmul+3)& (0+255),w,b
 10536  011DB4  B4D8               	btfsc	status,2,c
 10537  011DB6  D003               	goto	l2426
 10538  011DB8                     u11120:
 10539                           
 10540                           ; BSR set to: 0
 10541  011DB8  0E01               	movlw	1
 10542  011DBA  6F7B               	movwf	___flmul@aexp& (0+255),b
 10543  011DBC  D002               	goto	l2425
 10544  011DBE                     l2426:
 10545                           
 10546                           ; BSR set to: 0
 10547  011DBE  B181               	btfsc	___flmul@prod& (0+255),0,b
 10548  011DC0  D7FB               	goto	u11120
 10549  011DC2                     l2425:
 10550                           
 10551                           ; BSR set to: 0
 10552  011DC2  517B               	movf	___flmul@aexp& (0+255),w,b
 10553  011DC4  B4D8               	btfsc	status,2,c
 10554  011DC6  D01F               	goto	l11473
 10555                           
 10556                           ; BSR set to: 0
 10557  011DC8  0E01               	movlw	1
 10558  011DCA  2781               	addwf	___flmul@prod& (0+255),f,b
 10559  011DCC  0E00               	movlw	0
 10560  011DCE  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10561  011DD0  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10562  011DD2  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10563                           
 10564                           ; BSR set to: 0
 10565  011DD4  A184               	btfss	(___flmul@prod+3)& (0+255),0,b
 10566  011DD6  D017               	goto	l11473
 10567                           
 10568                           ; BSR set to: 0
 10569  011DD8  C081  F076         	movff	___flmul@prod,??___flmul
 10570  011DDC  C082  F077         	movff	___flmul@prod+1,??___flmul+1
 10571  011DE0  C083  F078         	movff	___flmul@prod+2,??___flmul+2
 10572  011DE4  C084  F079         	movff	___flmul@prod+3,??___flmul+3
 10573  011DE8  3579               	rlcf	(??___flmul+3)& (0+255),w,b
 10574  011DEA  3379               	rrcf	(??___flmul+3)& (0+255),f,b
 10575  011DEC  3378               	rrcf	(??___flmul+2)& (0+255),f,b
 10576  011DEE  3377               	rrcf	(??___flmul+1)& (0+255),f,b
 10577  011DF0  3376               	rrcf	??___flmul& (0+255),f,b
 10578  011DF2  C076  F081         	movff	??___flmul,___flmul@prod
 10579  011DF6  C077  F082         	movff	??___flmul+1,___flmul@prod+1
 10580  011DFA  C078  F083         	movff	??___flmul+2,___flmul@prod+2
 10581  011DFE  C079  F084         	movff	??___flmul+3,___flmul@prod+3
 10582                           
 10583                           ; BSR set to: 0
 10584  011E02  4B85               	infsnz	___flmul@temp& (0+255),f,b
 10585  011E04  2B86               	incf	(___flmul@temp+1)& (0+255),f,b
 10586  011E06                     l11473:
 10587                           
 10588                           ; BSR set to: 0
 10589  011E06  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
 10590  011E08  D00D               	goto	l11477
 10591  011E0A  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 10592  011E0C  E103               	bnz	u11160
 10593  011E0E  2985               	incf	___flmul@temp& (0+255),w,b
 10594  011E10  A0D8               	btfss	status,0,c
 10595  011E12  D008               	goto	l11477
 10596  011E14                     u11160:
 10597                           
 10598                           ; BSR set to: 0
 10599  011E14  0E00               	movlw	0
 10600  011E16  6F81               	movwf	___flmul@prod& (0+255),b
 10601  011E18  0E00               	movlw	0
 10602  011E1A  6F82               	movwf	(___flmul@prod+1)& (0+255),b
 10603  011E1C  0E80               	movlw	128
 10604  011E1E  6F83               	movwf	(___flmul@prod+2)& (0+255),b
 10605  011E20  0E7F               	movlw	127
 10606  011E22  D020               	goto	L11
 10607  011E24                     l11477:
 10608                           
 10609                           ; BSR set to: 0
 10610  011E24  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
 10611  011E26  D005               	goto	u11170
 10612  011E28  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 10613  011E2A  E10E               	bnz	l2433
 10614  011E2C  0585               	decf	___flmul@temp& (0+255),w,b
 10615  011E2E  B0D8               	btfsc	status,0,c
 10616  011E30  D00B               	goto	l2433
 10617  011E32                     u11170:
 10618                           
 10619                           ; BSR set to: 0
 10620  011E32  0E00               	movlw	0
 10621  011E34  6F81               	movwf	___flmul@prod& (0+255),b
 10622  011E36  0E00               	movlw	0
 10623  011E38  6F82               	movwf	(___flmul@prod+1)& (0+255),b
 10624  011E3A  0E00               	movlw	0
 10625  011E3C  6F83               	movwf	(___flmul@prod+2)& (0+255),b
 10626  011E3E  0E00               	movlw	0
 10627  011E40  6F84               	movwf	(___flmul@prod+3)& (0+255),b
 10628  011E42  0E00               	movlw	0
 10629  011E44  6F7A               	movwf	___flmul@sign& (0+255),b
 10630  011E46  D00F               	goto	l11489
 10631  011E48                     l2433:
 10632                           
 10633                           ; BSR set to: 0
 10634  011E48  C085  F07C         	movff	___flmul@temp,___flmul@bexp
 10635                           
 10636                           ; BSR set to: 0
 10637  011E4C  0EFF               	movlw	255
 10638  011E4E  1781               	andwf	___flmul@prod& (0+255),f,b
 10639  011E50  0EFF               	movlw	255
 10640  011E52  1782               	andwf	(___flmul@prod+1)& (0+255),f,b
 10641  011E54  0E7F               	movlw	127
 10642  011E56  1783               	andwf	(___flmul@prod+2)& (0+255),f,b
 10643  011E58  0E00               	movlw	0
 10644  011E5A  1784               	andwf	(___flmul@prod+3)& (0+255),f,b
 10645                           
 10646                           ; BSR set to: 0
 10647  011E5C  B17C               	btfsc	___flmul@bexp& (0+255),0,b
 10648                           
 10649                           ; BSR set to: 0
 10650  011E5E  8F83               	bsf	(___flmul@prod+2)& (0+255),7,b
 10651                           
 10652                           ; BSR set to: 0
 10653  011E60  90D8               	bcf	status,0,c
 10654  011E62  317C               	rrcf	___flmul@bexp& (0+255),w,b
 10655  011E64                     L11:
 10656  011E64  6F84               	movwf	(___flmul@prod+3)& (0+255),b
 10657  011E66                     l11489:
 10658                           
 10659                           ; BSR set to: 0
 10660  011E66  517A               	movf	___flmul@sign& (0+255),w,b
 10661  011E68  1384               	iorwf	(___flmul@prod+3)& (0+255),f,b
 10662                           
 10663                           ; BSR set to: 0
 10664  011E6A  C081  F06E         	movff	___flmul@prod,?___flmul
 10665  011E6E  C082  F06F         	movff	___flmul@prod+1,?___flmul+1
 10666  011E72  C083  F070         	movff	___flmul@prod+2,?___flmul+2
 10667  011E76  C084  F071         	movff	___flmul@prod+3,?___flmul+3
 10668                           
 10669                           ; BSR set to: 0
 10670  011E7A  0012               	return		;funcret
 10671  011E7C                     __end_of___flmul:
 10672                           	callstack 0
 10673                           
 10674 ;; *************** function ___flge *****************
 10675 ;; Defined at:
 10676 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/flge.c"
 10677 ;; Parameters:    Size  Location     Type
 10678 ;;  ff1             4   39[BANK0 ] unsigned char 
 10679 ;;  ff2             4   43[BANK0 ] unsigned char 
 10680 ;; Auto vars:     Size  Location     Type
 10681 ;;		None
 10682 ;; Return value:  Size  Location     Type
 10683 ;;		None               void
 10684 ;; Registers used:
 10685 ;;		wreg, status,2, status,0
 10686 ;; Tracked objects:
 10687 ;;		On entry : 3F/0
 10688 ;;		On exit  : 3F/0
 10689 ;;		Unchanged: 0/0
 10690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10691 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10693 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10694 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10695 ;;Total ram usage:       12 bytes
 10696 ;; Hardware stack levels used: 1
 10697 ;; Hardware stack levels required when called: 7
 10698 ;; This function calls:
 10699 ;;		Nothing
 10700 ;; This function is called by:
 10701 ;;		_efgtoa
 10702 ;; This function uses a non-reentrant model
 10703 ;;
 10704                           
 10705                           	psect	text23
 10706  0133F2                     __ptext23:
 10707                           	callstack 0
 10708  0133F2                     ___flge:
 10709                           	callstack 19
 10710                           
 10711                           ; BSR set to: 0
 10712                           
 10713                           ; BSR set to: 0
 10714                           ;incstack = 0
 10715  0133F2  0E00               	movlw	0
 10716  0133F4  1587               	andwf	___flge@ff1& (0+255),w,b
 10717  0133F6  6F8F               	movwf	??___flge& (0+255),b
 10718  0133F8  0E00               	movlw	0
 10719  0133FA  1588               	andwf	(___flge@ff1+1)& (0+255),w,b
 10720  0133FC  6F90               	movwf	(??___flge+1)& (0+255),b
 10721  0133FE  0E80               	movlw	128
 10722  013400  1589               	andwf	(___flge@ff1+2)& (0+255),w,b
 10723  013402  6F91               	movwf	(??___flge+2)& (0+255),b
 10724  013404  0E7F               	movlw	127
 10725  013406  158A               	andwf	(___flge@ff1+3)& (0+255),w,b
 10726  013408  6F92               	movwf	(??___flge+3)& (0+255),b
 10727  01340A  518F               	movf	??___flge& (0+255),w,b
 10728  01340C  1190               	iorwf	(??___flge+1)& (0+255),w,b
 10729  01340E  1191               	iorwf	(??___flge+2)& (0+255),w,b
 10730  013410  1192               	iorwf	(??___flge+3)& (0+255),w,b
 10731  013412  A4D8               	btfss	status,2,c
 10732  013414  D008               	goto	l11601
 10733                           
 10734                           ; BSR set to: 0
 10735  013416  0E00               	movlw	0
 10736  013418  6F87               	movwf	___flge@ff1& (0+255),b
 10737  01341A  0E00               	movlw	0
 10738  01341C  6F88               	movwf	(___flge@ff1+1)& (0+255),b
 10739  01341E  0E00               	movlw	0
 10740  013420  6F89               	movwf	(___flge@ff1+2)& (0+255),b
 10741  013422  0E00               	movlw	0
 10742  013424  6F8A               	movwf	(___flge@ff1+3)& (0+255),b
 10743  013426                     l11601:
 10744                           
 10745                           ; BSR set to: 0
 10746  013426  0E00               	movlw	0
 10747  013428  158B               	andwf	___flge@ff2& (0+255),w,b
 10748  01342A  6F8F               	movwf	??___flge& (0+255),b
 10749  01342C  0E00               	movlw	0
 10750  01342E  158C               	andwf	(___flge@ff2+1)& (0+255),w,b
 10751  013430  6F90               	movwf	(??___flge+1)& (0+255),b
 10752  013432  0E80               	movlw	128
 10753  013434  158D               	andwf	(___flge@ff2+2)& (0+255),w,b
 10754  013436  6F91               	movwf	(??___flge+2)& (0+255),b
 10755  013438  0E7F               	movlw	127
 10756  01343A  158E               	andwf	(___flge@ff2+3)& (0+255),w,b
 10757  01343C  6F92               	movwf	(??___flge+3)& (0+255),b
 10758  01343E  518F               	movf	??___flge& (0+255),w,b
 10759  013440  1190               	iorwf	(??___flge+1)& (0+255),w,b
 10760  013442  1191               	iorwf	(??___flge+2)& (0+255),w,b
 10761  013444  1192               	iorwf	(??___flge+3)& (0+255),w,b
 10762  013446  A4D8               	btfss	status,2,c
 10763  013448  D008               	goto	l11605
 10764                           
 10765                           ; BSR set to: 0
 10766  01344A  0E00               	movlw	0
 10767  01344C  6F8B               	movwf	___flge@ff2& (0+255),b
 10768  01344E  0E00               	movlw	0
 10769  013450  6F8C               	movwf	(___flge@ff2+1)& (0+255),b
 10770  013452  0E00               	movlw	0
 10771  013454  6F8D               	movwf	(___flge@ff2+2)& (0+255),b
 10772  013456  0E00               	movlw	0
 10773  013458  6F8E               	movwf	(___flge@ff2+3)& (0+255),b
 10774  01345A                     l11605:
 10775                           
 10776                           ; BSR set to: 0
 10777  01345A  AF8A               	btfss	(___flge@ff1+3)& (0+255),7,b
 10778  01345C  D009               	goto	l11609
 10779                           
 10780                           ; BSR set to: 0
 10781  01345E  6D87               	negf	___flge@ff1& (0+255),b
 10782  013460  1F88               	comf	(___flge@ff1+1)& (0+255),f,b
 10783  013462  B0D8               	btfsc	status,0,c
 10784  013464  2B88               	incf	(___flge@ff1+1)& (0+255),f,b
 10785  013466  1F89               	comf	(___flge@ff1+2)& (0+255),f,b
 10786  013468  B0D8               	btfsc	status,0,c
 10787  01346A  2B89               	incf	(___flge@ff1+2)& (0+255),f,b
 10788  01346C  0E80               	movlw	128
 10789  01346E  578A               	subfwb	(___flge@ff1+3)& (0+255),f,b
 10790  013470                     l11609:
 10791                           
 10792                           ; BSR set to: 0
 10793  013470  AF8E               	btfss	(___flge@ff2+3)& (0+255),7,b
 10794  013472  D009               	goto	l2067
 10795                           
 10796                           ; BSR set to: 0
 10797  013474  6D8B               	negf	___flge@ff2& (0+255),b
 10798  013476  1F8C               	comf	(___flge@ff2+1)& (0+255),f,b
 10799  013478  B0D8               	btfsc	status,0,c
 10800  01347A  2B8C               	incf	(___flge@ff2+1)& (0+255),f,b
 10801  01347C  1F8D               	comf	(___flge@ff2+2)& (0+255),f,b
 10802  01347E  B0D8               	btfsc	status,0,c
 10803  013480  2B8D               	incf	(___flge@ff2+2)& (0+255),f,b
 10804  013482  0E80               	movlw	128
 10805  013484  578E               	subfwb	(___flge@ff2+3)& (0+255),f,b
 10806  013486                     l2067:
 10807                           
 10808                           ; BSR set to: 0
 10809  013486  0E00               	movlw	0
 10810  013488  1B87               	xorwf	___flge@ff1& (0+255),f,b
 10811  01348A  0E00               	movlw	0
 10812  01348C  1B88               	xorwf	(___flge@ff1+1)& (0+255),f,b
 10813  01348E  0E00               	movlw	0
 10814  013490  1B89               	xorwf	(___flge@ff1+2)& (0+255),f,b
 10815  013492  0E80               	movlw	128
 10816  013494  1B8A               	xorwf	(___flge@ff1+3)& (0+255),f,b
 10817  013496  0E00               	movlw	0
 10818  013498  1B8B               	xorwf	___flge@ff2& (0+255),f,b
 10819  01349A  0E00               	movlw	0
 10820  01349C  1B8C               	xorwf	(___flge@ff2+1)& (0+255),f,b
 10821  01349E  0E00               	movlw	0
 10822  0134A0  1B8D               	xorwf	(___flge@ff2+2)& (0+255),f,b
 10823  0134A2  0E80               	movlw	128
 10824  0134A4  1B8E               	xorwf	(___flge@ff2+3)& (0+255),f,b
 10825  0134A6  518B               	movf	___flge@ff2& (0+255),w,b
 10826  0134A8  5D87               	subwf	___flge@ff1& (0+255),w,b
 10827  0134AA  518C               	movf	(___flge@ff2+1)& (0+255),w,b
 10828  0134AC  5988               	subwfb	(___flge@ff1+1)& (0+255),w,b
 10829  0134AE  518D               	movf	(___flge@ff2+2)& (0+255),w,b
 10830  0134B0  5989               	subwfb	(___flge@ff1+2)& (0+255),w,b
 10831  0134B2  518E               	movf	(___flge@ff2+3)& (0+255),w,b
 10832  0134B4  598A               	subwfb	(___flge@ff1+3)& (0+255),w,b
 10833  0134B6  B0D8               	btfsc	status,0,c
 10834  0134B8  D002               	goto	l11615
 10835                           
 10836                           ; BSR set to: 0
 10837  0134BA  90D8               	bcf	status,0,c
 10838  0134BC  0012               	return	
 10839  0134BE                     l11615:
 10840                           
 10841                           ; BSR set to: 0
 10842  0134BE  80D8               	bsf	status,0,c
 10843                           
 10844                           ; BSR set to: 0
 10845  0134C0  0012               	return		;funcret
 10846  0134C2                     __end_of___flge:
 10847                           	callstack 0
 10848                           
 10849 ;; *************** function ___fleq *****************
 10850 ;; Defined at:
 10851 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/fleq.c"
 10852 ;; Parameters:    Size  Location     Type
 10853 ;;  ff1             4    0[BANK0 ] unsigned char 
 10854 ;;  ff2             4    4[BANK0 ] unsigned char 
 10855 ;; Auto vars:     Size  Location     Type
 10856 ;;		None
 10857 ;; Return value:  Size  Location     Type
 10858 ;;		None               void
 10859 ;; Registers used:
 10860 ;;		wreg, status,2, status,0
 10861 ;; Tracked objects:
 10862 ;;		On entry : 3F/0
 10863 ;;		On exit  : 3F/0
 10864 ;;		Unchanged: 0/0
 10865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10866 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10868 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10869 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10870 ;;Total ram usage:       12 bytes
 10871 ;; Hardware stack levels used: 1
 10872 ;; Hardware stack levels required when called: 7
 10873 ;; This function calls:
 10874 ;;		Nothing
 10875 ;; This function is called by:
 10876 ;;		_efgtoa
 10877 ;; This function uses a non-reentrant model
 10878 ;;
 10879                           
 10880                           	psect	text24
 10881  013BFC                     __ptext24:
 10882                           	callstack 0
 10883  013BFC                     ___fleq:
 10884                           	callstack 19
 10885                           
 10886                           ; BSR set to: 0
 10887                           
 10888                           ; BSR set to: 0
 10889                           ;incstack = 0
 10890  013BFC  0E00               	movlw	0
 10891  013BFE  1560               	andwf	___fleq@ff1& (0+255),w,b
 10892  013C00  6F68               	movwf	??___fleq& (0+255),b
 10893  013C02  0E00               	movlw	0
 10894  013C04  1561               	andwf	(___fleq@ff1+1)& (0+255),w,b
 10895  013C06  6F69               	movwf	(??___fleq+1)& (0+255),b
 10896  013C08  0E80               	movlw	128
 10897  013C0A  1562               	andwf	(___fleq@ff1+2)& (0+255),w,b
 10898  013C0C  6F6A               	movwf	(??___fleq+2)& (0+255),b
 10899  013C0E  0E7F               	movlw	127
 10900  013C10  1563               	andwf	(___fleq@ff1+3)& (0+255),w,b
 10901  013C12  6F6B               	movwf	(??___fleq+3)& (0+255),b
 10902  013C14  5168               	movf	??___fleq& (0+255),w,b
 10903  013C16  1169               	iorwf	(??___fleq+1)& (0+255),w,b
 10904  013C18  116A               	iorwf	(??___fleq+2)& (0+255),w,b
 10905  013C1A  116B               	iorwf	(??___fleq+3)& (0+255),w,b
 10906  013C1C  A4D8               	btfss	status,2,c
 10907  013C1E  D008               	goto	l11585
 10908                           
 10909                           ; BSR set to: 0
 10910  013C20  0E00               	movlw	0
 10911  013C22  6F60               	movwf	___fleq@ff1& (0+255),b
 10912  013C24  0E00               	movlw	0
 10913  013C26  6F61               	movwf	(___fleq@ff1+1)& (0+255),b
 10914  013C28  0E00               	movlw	0
 10915  013C2A  6F62               	movwf	(___fleq@ff1+2)& (0+255),b
 10916  013C2C  0E00               	movlw	0
 10917  013C2E  6F63               	movwf	(___fleq@ff1+3)& (0+255),b
 10918  013C30                     l11585:
 10919                           
 10920                           ; BSR set to: 0
 10921  013C30  0E00               	movlw	0
 10922  013C32  1564               	andwf	___fleq@ff2& (0+255),w,b
 10923  013C34  6F68               	movwf	??___fleq& (0+255),b
 10924  013C36  0E00               	movlw	0
 10925  013C38  1565               	andwf	(___fleq@ff2+1)& (0+255),w,b
 10926  013C3A  6F69               	movwf	(??___fleq+1)& (0+255),b
 10927  013C3C  0E80               	movlw	128
 10928  013C3E  1566               	andwf	(___fleq@ff2+2)& (0+255),w,b
 10929  013C40  6F6A               	movwf	(??___fleq+2)& (0+255),b
 10930  013C42  0E7F               	movlw	127
 10931  013C44  1567               	andwf	(___fleq@ff2+3)& (0+255),w,b
 10932  013C46  6F6B               	movwf	(??___fleq+3)& (0+255),b
 10933  013C48  5168               	movf	??___fleq& (0+255),w,b
 10934  013C4A  1169               	iorwf	(??___fleq+1)& (0+255),w,b
 10935  013C4C  116A               	iorwf	(??___fleq+2)& (0+255),w,b
 10936  013C4E  116B               	iorwf	(??___fleq+3)& (0+255),w,b
 10937  013C50  A4D8               	btfss	status,2,c
 10938  013C52  D008               	goto	l11589
 10939                           
 10940                           ; BSR set to: 0
 10941  013C54  0E00               	movlw	0
 10942  013C56  6F64               	movwf	___fleq@ff2& (0+255),b
 10943  013C58  0E00               	movlw	0
 10944  013C5A  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
 10945  013C5C  0E00               	movlw	0
 10946  013C5E  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
 10947  013C60  0E00               	movlw	0
 10948  013C62  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
 10949  013C64                     l11589:
 10950                           
 10951                           ; BSR set to: 0
 10952  013C64  5164               	movf	___fleq@ff2& (0+255),w,b
 10953  013C66  1960               	xorwf	___fleq@ff1& (0+255),w,b
 10954  013C68  E10A               	bnz	u11330
 10955  013C6A  5165               	movf	(___fleq@ff2+1)& (0+255),w,b
 10956  013C6C  1961               	xorwf	(___fleq@ff1+1)& (0+255),w,b
 10957  013C6E  E107               	bnz	u11330
 10958  013C70  5166               	movf	(___fleq@ff2+2)& (0+255),w,b
 10959  013C72  1962               	xorwf	(___fleq@ff1+2)& (0+255),w,b
 10960  013C74  E104               	bnz	u11330
 10961  013C76  5167               	movf	(___fleq@ff2+3)& (0+255),w,b
 10962  013C78  1963               	xorwf	(___fleq@ff1+3)& (0+255),w,b
 10963  013C7A  B4D8               	btfsc	status,2,c
 10964  013C7C  D002               	goto	l11593
 10965  013C7E                     u11330:
 10966                           
 10967                           ; BSR set to: 0
 10968  013C7E  90D8               	bcf	status,0,c
 10969  013C80  0012               	return	
 10970  013C82                     l11593:
 10971                           
 10972                           ; BSR set to: 0
 10973  013C82  80D8               	bsf	status,0,c
 10974                           
 10975                           ; BSR set to: 0
 10976  013C84  0012               	return		;funcret
 10977  013C86                     __end_of___fleq:
 10978                           	callstack 0
 10979                           
 10980 ;; *************** function ___fldiv *****************
 10981 ;; Defined at:
 10982 ;;		line 11 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/sprcdiv.c"
 10983 ;; Parameters:    Size  Location     Type
 10984 ;;  b               4    0[BANK0 ] unsigned char 
 10985 ;;  a               4    4[BANK0 ] unsigned char 
 10986 ;; Auto vars:     Size  Location     Type
 10987 ;;  grs             4   19[BANK0 ] unsigned long 
 10988 ;;  rem             4   12[BANK0 ] unsigned long 
 10989 ;;  new_exp         2   17[BANK0 ] short 
 10990 ;;  aexp            1   24[BANK0 ] unsigned char 
 10991 ;;  bexp            1   23[BANK0 ] unsigned char 
 10992 ;;  sign            1   16[BANK0 ] unsigned char 
 10993 ;; Return value:  Size  Location     Type
 10994 ;;                  4    0[BANK0 ] unsigned char 
 10995 ;; Registers used:
 10996 ;;		wreg, status,2, status,0
 10997 ;; Tracked objects:
 10998 ;;		On entry : 3F/0
 10999 ;;		On exit  : 3F/0
 11000 ;;		Unchanged: 0/0
 11001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11002 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11003 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11004 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11005 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11006 ;;Total ram usage:       25 bytes
 11007 ;; Hardware stack levels used: 1
 11008 ;; Hardware stack levels required when called: 7
 11009 ;; This function calls:
 11010 ;;		Nothing
 11011 ;; This function is called by:
 11012 ;;		_efgtoa
 11013 ;; This function uses a non-reentrant model
 11014 ;;
 11015                           
 11016                           	psect	text25
 11017  012188                     __ptext25:
 11018                           	callstack 0
 11019  012188                     ___fldiv:
 11020                           	callstack 19
 11021                           
 11022                           ; BSR set to: 0
 11023                           
 11024                           ; BSR set to: 0
 11025                           ;incstack = 0
 11026  012188  5163               	movf	(___fldiv@b+3)& (0+255),w,b
 11027  01218A  0B80               	andlw	128
 11028  01218C  6F70               	movwf	___fldiv@sign& (0+255),b
 11029  01218E  5163               	movf	(___fldiv@b+3)& (0+255),w,b
 11030  012190  2563               	addwf	(___fldiv@b+3)& (0+255),w,b
 11031  012192  6F77               	movwf	___fldiv@bexp& (0+255),b
 11032                           
 11033                           ; BSR set to: 0
 11034  012194  BF62               	btfsc	(___fldiv@b+2)& (0+255),7,b
 11035                           
 11036                           ; BSR set to: 0
 11037  012196  8177               	bsf	___fldiv@bexp& (0+255),0,b
 11038                           
 11039                           ; BSR set to: 0
 11040  012198  5177               	movf	___fldiv@bexp& (0+255),w,b
 11041  01219A  B4D8               	btfsc	status,2,c
 11042  01219C  D00D               	goto	l11243
 11043                           
 11044                           ; BSR set to: 0
 11045  01219E  2977               	incf	___fldiv@bexp& (0+255),w,b
 11046  0121A0  A4D8               	btfss	status,2,c
 11047  0121A2  D008               	goto	l11239
 11048                           
 11049                           ; BSR set to: 0
 11050  0121A4  0E00               	movlw	0
 11051  0121A6  6F60               	movwf	___fldiv@b& (0+255),b
 11052  0121A8  0E00               	movlw	0
 11053  0121AA  6F61               	movwf	(___fldiv@b+1)& (0+255),b
 11054  0121AC  0E00               	movlw	0
 11055  0121AE  6F62               	movwf	(___fldiv@b+2)& (0+255),b
 11056  0121B0  0E00               	movlw	0
 11057  0121B2  6F63               	movwf	(___fldiv@b+3)& (0+255),b
 11058  0121B4                     l11239:
 11059                           
 11060                           ; BSR set to: 0
 11061  0121B4  8F62               	bsf	(___fldiv@b+2)& (0+255),7,b
 11062  0121B6  D006               	goto	L12
 11063  0121B8                     l11243:
 11064                           
 11065                           ; BSR set to: 0
 11066  0121B8  0E00               	movlw	0
 11067  0121BA  6F60               	movwf	___fldiv@b& (0+255),b
 11068  0121BC  0E00               	movlw	0
 11069  0121BE  6F61               	movwf	(___fldiv@b+1)& (0+255),b
 11070  0121C0  0E00               	movlw	0
 11071  0121C2  6F62               	movwf	(___fldiv@b+2)& (0+255),b
 11072  0121C4                     L12:
 11073  0121C4  0E00               	movlw	0
 11074  0121C6  6F63               	movwf	(___fldiv@b+3)& (0+255),b
 11075                           
 11076                           ; BSR set to: 0
 11077  0121C8  5167               	movf	(___fldiv@a+3)& (0+255),w,b
 11078  0121CA  0B80               	andlw	128
 11079  0121CC  1B70               	xorwf	___fldiv@sign& (0+255),f,b
 11080                           
 11081                           ; BSR set to: 0
 11082  0121CE  5167               	movf	(___fldiv@a+3)& (0+255),w,b
 11083  0121D0  2567               	addwf	(___fldiv@a+3)& (0+255),w,b
 11084  0121D2  6F78               	movwf	___fldiv@aexp& (0+255),b
 11085                           
 11086                           ; BSR set to: 0
 11087  0121D4  BF66               	btfsc	(___fldiv@a+2)& (0+255),7,b
 11088                           
 11089                           ; BSR set to: 0
 11090  0121D6  8178               	bsf	___fldiv@aexp& (0+255),0,b
 11091                           
 11092                           ; BSR set to: 0
 11093  0121D8  5178               	movf	___fldiv@aexp& (0+255),w,b
 11094  0121DA  B4D8               	btfsc	status,2,c
 11095  0121DC  D00D               	goto	l11263
 11096                           
 11097                           ; BSR set to: 0
 11098  0121DE  2978               	incf	___fldiv@aexp& (0+255),w,b
 11099  0121E0  A4D8               	btfss	status,2,c
 11100  0121E2  D008               	goto	l11259
 11101                           
 11102                           ; BSR set to: 0
 11103  0121E4  0E00               	movlw	0
 11104  0121E6  6F64               	movwf	___fldiv@a& (0+255),b
 11105  0121E8  0E00               	movlw	0
 11106  0121EA  6F65               	movwf	(___fldiv@a+1)& (0+255),b
 11107  0121EC  0E00               	movlw	0
 11108  0121EE  6F66               	movwf	(___fldiv@a+2)& (0+255),b
 11109  0121F0  0E00               	movlw	0
 11110  0121F2  6F67               	movwf	(___fldiv@a+3)& (0+255),b
 11111  0121F4                     l11259:
 11112                           
 11113                           ; BSR set to: 0
 11114  0121F4  8F66               	bsf	(___fldiv@a+2)& (0+255),7,b
 11115  0121F6  D006               	goto	L13
 11116  0121F8                     l11263:
 11117                           
 11118                           ; BSR set to: 0
 11119  0121F8  0E00               	movlw	0
 11120  0121FA  6F64               	movwf	___fldiv@a& (0+255),b
 11121  0121FC  0E00               	movlw	0
 11122  0121FE  6F65               	movwf	(___fldiv@a+1)& (0+255),b
 11123  012200  0E00               	movlw	0
 11124  012202  6F66               	movwf	(___fldiv@a+2)& (0+255),b
 11125  012204                     L13:
 11126  012204  0E00               	movlw	0
 11127  012206  6F67               	movwf	(___fldiv@a+3)& (0+255),b
 11128                           
 11129                           ; BSR set to: 0
 11130  012208  5164               	movf	___fldiv@a& (0+255),w,b
 11131  01220A  1165               	iorwf	(___fldiv@a+1)& (0+255),w,b
 11132  01220C  1166               	iorwf	(___fldiv@a+2)& (0+255),w,b
 11133  01220E  1167               	iorwf	(___fldiv@a+3)& (0+255),w,b
 11134  012210  A4D8               	btfss	status,2,c
 11135  012212  D017               	goto	l11277
 11136                           
 11137                           ; BSR set to: 0
 11138  012214  0E00               	movlw	0
 11139  012216  6F60               	movwf	___fldiv@b& (0+255),b
 11140  012218  0E00               	movlw	0
 11141  01221A  6F61               	movwf	(___fldiv@b+1)& (0+255),b
 11142  01221C  0E00               	movlw	0
 11143  01221E  6F62               	movwf	(___fldiv@b+2)& (0+255),b
 11144  012220  0E00               	movlw	0
 11145  012222  6F63               	movwf	(___fldiv@b+3)& (0+255),b
 11146                           
 11147                           ; BSR set to: 0
 11148  012224  0E80               	movlw	128
 11149  012226  1362               	iorwf	(___fldiv@b+2)& (0+255),f,b
 11150  012228  0E7F               	movlw	127
 11151  01222A  1363               	iorwf	(___fldiv@b+3)& (0+255),f,b
 11152  01222C                     l11271:
 11153                           
 11154                           ; BSR set to: 0
 11155  01222C  5170               	movf	___fldiv@sign& (0+255),w,b
 11156  01222E  1363               	iorwf	(___fldiv@b+3)& (0+255),f,b
 11157                           
 11158                           ; BSR set to: 0
 11159  012230  C060  F060         	movff	___fldiv@b,?___fldiv
 11160  012234  C061  F061         	movff	___fldiv@b+1,?___fldiv+1
 11161  012238  C062  F062         	movff	___fldiv@b+2,?___fldiv+2
 11162  01223C  C063  F063         	movff	___fldiv@b+3,?___fldiv+3
 11163  012240  0012               	return	
 11164  012242                     l11277:
 11165                           
 11166                           ; BSR set to: 0
 11167  012242  5177               	movf	___fldiv@bexp& (0+255),w,b
 11168  012244  A4D8               	btfss	status,2,c
 11169  012246  D009               	goto	l11285
 11170                           
 11171                           ; BSR set to: 0
 11172                           
 11173                           ; BSR set to: 0
 11174  012248  0E00               	movlw	0
 11175  01224A  6F60               	movwf	?___fldiv& (0+255),b
 11176  01224C  0E00               	movlw	0
 11177  01224E  6F61               	movwf	(?___fldiv+1)& (0+255),b
 11178  012250  0E00               	movlw	0
 11179  012252  6F62               	movwf	(?___fldiv+2)& (0+255),b
 11180  012254  0E00               	movlw	0
 11181  012256  6F63               	movwf	(?___fldiv+3)& (0+255),b
 11182  012258  0012               	return	
 11183  01225A                     l11285:
 11184                           
 11185                           ; BSR set to: 0
 11186  01225A  5178               	movf	___fldiv@aexp& (0+255),w,b
 11187  01225C  C077  F068         	movff	___fldiv@bexp,??___fldiv
 11188  012260  6B69               	clrf	(??___fldiv+1)& (0+255),b
 11189  012262  5F68               	subwf	??___fldiv& (0+255),f,b
 11190  012264  0E00               	movlw	0
 11191  012266  5B69               	subwfb	(??___fldiv+1)& (0+255),f,b
 11192  012268  0E7F               	movlw	127
 11193  01226A  2568               	addwf	??___fldiv& (0+255),w,b
 11194  01226C  6F71               	movwf	___fldiv@new_exp& (0+255),b
 11195  01226E  0E00               	movlw	0
 11196  012270  2169               	addwfc	(??___fldiv+1)& (0+255),w,b
 11197  012272  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
 11198                           
 11199                           ; BSR set to: 0
 11200  012274  C060  F06C         	movff	___fldiv@b,___fldiv@rem
 11201  012278  C061  F06D         	movff	___fldiv@b+1,___fldiv@rem+1
 11202  01227C  C062  F06E         	movff	___fldiv@b+2,___fldiv@rem+2
 11203  012280  C063  F06F         	movff	___fldiv@b+3,___fldiv@rem+3
 11204                           
 11205                           ; BSR set to: 0
 11206  012284  0E00               	movlw	0
 11207  012286  6F60               	movwf	___fldiv@b& (0+255),b
 11208  012288  0E00               	movlw	0
 11209  01228A  6F61               	movwf	(___fldiv@b+1)& (0+255),b
 11210  01228C  0E00               	movlw	0
 11211  01228E  6F62               	movwf	(___fldiv@b+2)& (0+255),b
 11212  012290  0E00               	movlw	0
 11213  012292  6F63               	movwf	(___fldiv@b+3)& (0+255),b
 11214                           
 11215                           ; BSR set to: 0
 11216  012294  0E00               	movlw	0
 11217  012296  6F73               	movwf	___fldiv@grs& (0+255),b
 11218  012298  0E00               	movlw	0
 11219  01229A  6F74               	movwf	(___fldiv@grs+1)& (0+255),b
 11220  01229C  0E00               	movlw	0
 11221  01229E  6F75               	movwf	(___fldiv@grs+2)& (0+255),b
 11222  0122A0  0E00               	movlw	0
 11223  0122A2  6F76               	movwf	(___fldiv@grs+3)& (0+255),b
 11224                           
 11225                           ; BSR set to: 0
 11226  0122A4  0E00               	movlw	0
 11227  0122A6  6F78               	movwf	___fldiv@aexp& (0+255),b
 11228  0122A8  D028               	goto	l2386
 11229  0122AA                     l11295:
 11230                           
 11231                           ; BSR set to: 0
 11232  0122AA  5178               	movf	___fldiv@aexp& (0+255),w,b
 11233  0122AC  B4D8               	btfsc	status,2,c
 11234  0122AE  D011               	goto	l11303
 11235                           
 11236                           ; BSR set to: 0
 11237  0122B0  90D8               	bcf	status,0,c
 11238  0122B2  376C               	rlcf	___fldiv@rem& (0+255),f,b
 11239  0122B4  376D               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 11240  0122B6  376E               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 11241  0122B8  376F               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 11242  0122BA  90D8               	bcf	status,0,c
 11243  0122BC  3760               	rlcf	___fldiv@b& (0+255),f,b
 11244  0122BE  3761               	rlcf	(___fldiv@b+1)& (0+255),f,b
 11245  0122C0  3762               	rlcf	(___fldiv@b+2)& (0+255),f,b
 11246  0122C2  3763               	rlcf	(___fldiv@b+3)& (0+255),f,b
 11247                           
 11248                           ; BSR set to: 0
 11249  0122C4  BF76               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 11250                           
 11251                           ; BSR set to: 0
 11252  0122C6  8160               	bsf	___fldiv@b& (0+255),0,b
 11253                           
 11254                           ; BSR set to: 0
 11255  0122C8  90D8               	bcf	status,0,c
 11256  0122CA  3773               	rlcf	___fldiv@grs& (0+255),f,b
 11257  0122CC  3774               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 11258  0122CE  3775               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 11259  0122D0  3776               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 11260  0122D2                     l11303:
 11261                           
 11262                           ; BSR set to: 0
 11263  0122D2  5164               	movf	___fldiv@a& (0+255),w,b
 11264  0122D4  5D6C               	subwf	___fldiv@rem& (0+255),w,b
 11265  0122D6  5165               	movf	(___fldiv@a+1)& (0+255),w,b
 11266  0122D8  596D               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 11267  0122DA  5166               	movf	(___fldiv@a+2)& (0+255),w,b
 11268  0122DC  596E               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 11269  0122DE  5167               	movf	(___fldiv@a+3)& (0+255),w,b
 11270  0122E0  596F               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 11271  0122E2  A0D8               	btfss	status,0,c
 11272  0122E4  D009               	goto	l11309
 11273                           
 11274                           ; BSR set to: 0
 11275  0122E6  8D76               	bsf	(___fldiv@grs+3)& (0+255),6,b
 11276                           
 11277                           ; BSR set to: 0
 11278  0122E8  5164               	movf	___fldiv@a& (0+255),w,b
 11279  0122EA  5F6C               	subwf	___fldiv@rem& (0+255),f,b
 11280  0122EC  5165               	movf	(___fldiv@a+1)& (0+255),w,b
 11281  0122EE  5B6D               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 11282  0122F0  5166               	movf	(___fldiv@a+2)& (0+255),w,b
 11283  0122F2  5B6E               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 11284  0122F4  5167               	movf	(___fldiv@a+3)& (0+255),w,b
 11285  0122F6  5B6F               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 11286  0122F8                     l11309:
 11287                           
 11288                           ; BSR set to: 0
 11289  0122F8  2B78               	incf	___fldiv@aexp& (0+255),f,b
 11290  0122FA                     l2386:
 11291                           
 11292                           ; BSR set to: 0
 11293  0122FA  0E19               	movlw	25
 11294  0122FC  6578               	cpfsgt	___fldiv@aexp& (0+255),b
 11295  0122FE  D7D5               	goto	l11295
 11296                           
 11297                           ; BSR set to: 0
 11298  012300  516C               	movf	___fldiv@rem& (0+255),w,b
 11299  012302  116D               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 11300  012304  116E               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 11301  012306  116F               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 11302  012308  B4D8               	btfsc	status,2,c
 11303  01230A  D011               	goto	l11321
 11304                           
 11305                           ; BSR set to: 0
 11306  01230C  8173               	bsf	___fldiv@grs& (0+255),0,b
 11307  01230E  D00F               	goto	l11321
 11308  012310                     l11315:
 11309                           
 11310                           ; BSR set to: 0
 11311  012310  90D8               	bcf	status,0,c
 11312  012312  3760               	rlcf	___fldiv@b& (0+255),f,b
 11313  012314  3761               	rlcf	(___fldiv@b+1)& (0+255),f,b
 11314  012316  3762               	rlcf	(___fldiv@b+2)& (0+255),f,b
 11315  012318  3763               	rlcf	(___fldiv@b+3)& (0+255),f,b
 11316                           
 11317                           ; BSR set to: 0
 11318  01231A  BF76               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 11319                           
 11320                           ; BSR set to: 0
 11321  01231C  8160               	bsf	___fldiv@b& (0+255),0,b
 11322                           
 11323                           ; BSR set to: 0
 11324  01231E  90D8               	bcf	status,0,c
 11325  012320  3773               	rlcf	___fldiv@grs& (0+255),f,b
 11326  012322  3774               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 11327  012324  3775               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 11328  012326  3776               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 11329  012328  0771               	decf	___fldiv@new_exp& (0+255),f,b
 11330  01232A  A0D8               	btfss	status,0,c
 11331  01232C  0772               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 11332  01232E                     l11321:
 11333                           
 11334                           ; BSR set to: 0
 11335  01232E  AF62               	btfss	(___fldiv@b+2)& (0+255),7,b
 11336  012330  D7EF               	goto	l11315
 11337                           
 11338                           ; BSR set to: 0
 11339  012332  0E00               	movlw	0
 11340  012334  6F78               	movwf	___fldiv@aexp& (0+255),b
 11341                           
 11342                           ; BSR set to: 0
 11343  012336  AF76               	btfss	(___fldiv@grs+3)& (0+255),7,b
 11344  012338  D017               	goto	l2397
 11345                           
 11346                           ; BSR set to: 0
 11347  01233A  0EFF               	movlw	255
 11348  01233C  1573               	andwf	___fldiv@grs& (0+255),w,b
 11349  01233E  6F68               	movwf	??___fldiv& (0+255),b
 11350  012340  0EFF               	movlw	255
 11351  012342  1574               	andwf	(___fldiv@grs+1)& (0+255),w,b
 11352  012344  6F69               	movwf	(??___fldiv+1)& (0+255),b
 11353  012346  0EFF               	movlw	255
 11354  012348  1575               	andwf	(___fldiv@grs+2)& (0+255),w,b
 11355  01234A  6F6A               	movwf	(??___fldiv+2)& (0+255),b
 11356  01234C  0E7F               	movlw	127
 11357  01234E  1576               	andwf	(___fldiv@grs+3)& (0+255),w,b
 11358  012350  6F6B               	movwf	(??___fldiv+3)& (0+255),b
 11359  012352  5168               	movf	??___fldiv& (0+255),w,b
 11360  012354  1169               	iorwf	(??___fldiv+1)& (0+255),w,b
 11361  012356  116A               	iorwf	(??___fldiv+2)& (0+255),w,b
 11362  012358  116B               	iorwf	(??___fldiv+3)& (0+255),w,b
 11363  01235A  B4D8               	btfsc	status,2,c
 11364  01235C  D003               	goto	l2398
 11365  01235E                     u10940:
 11366                           
 11367                           ; BSR set to: 0
 11368  01235E  0E01               	movlw	1
 11369  012360  6F78               	movwf	___fldiv@aexp& (0+255),b
 11370  012362  D002               	goto	l2397
 11371  012364                     l2398:
 11372                           
 11373                           ; BSR set to: 0
 11374  012364  B160               	btfsc	___fldiv@b& (0+255),0,b
 11375  012366  D7FB               	goto	u10940
 11376  012368                     l2397:
 11377                           
 11378                           ; BSR set to: 0
 11379  012368  5178               	movf	___fldiv@aexp& (0+255),w,b
 11380  01236A  B4D8               	btfsc	status,2,c
 11381  01236C  D01F               	goto	l11341
 11382                           
 11383                           ; BSR set to: 0
 11384  01236E  0E01               	movlw	1
 11385  012370  2760               	addwf	___fldiv@b& (0+255),f,b
 11386  012372  0E00               	movlw	0
 11387  012374  2361               	addwfc	(___fldiv@b+1)& (0+255),f,b
 11388  012376  2362               	addwfc	(___fldiv@b+2)& (0+255),f,b
 11389  012378  2363               	addwfc	(___fldiv@b+3)& (0+255),f,b
 11390                           
 11391                           ; BSR set to: 0
 11392  01237A  A163               	btfss	(___fldiv@b+3)& (0+255),0,b
 11393  01237C  D017               	goto	l11341
 11394                           
 11395                           ; BSR set to: 0
 11396  01237E  C060  F068         	movff	___fldiv@b,??___fldiv
 11397  012382  C061  F069         	movff	___fldiv@b+1,??___fldiv+1
 11398  012386  C062  F06A         	movff	___fldiv@b+2,??___fldiv+2
 11399  01238A  C063  F06B         	movff	___fldiv@b+3,??___fldiv+3
 11400  01238E  356B               	rlcf	(??___fldiv+3)& (0+255),w,b
 11401  012390  336B               	rrcf	(??___fldiv+3)& (0+255),f,b
 11402  012392  336A               	rrcf	(??___fldiv+2)& (0+255),f,b
 11403  012394  3369               	rrcf	(??___fldiv+1)& (0+255),f,b
 11404  012396  3368               	rrcf	??___fldiv& (0+255),f,b
 11405  012398  C068  F060         	movff	??___fldiv,___fldiv@b
 11406  01239C  C069  F061         	movff	??___fldiv+1,___fldiv@b+1
 11407  0123A0  C06A  F062         	movff	??___fldiv+2,___fldiv@b+2
 11408  0123A4  C06B  F063         	movff	??___fldiv+3,___fldiv@b+3
 11409                           
 11410                           ; BSR set to: 0
 11411  0123A8  4B71               	infsnz	___fldiv@new_exp& (0+255),f,b
 11412  0123AA  2B72               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 11413  0123AC                     l11341:
 11414                           
 11415                           ; BSR set to: 0
 11416  0123AC  BF72               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 11417  0123AE  D010               	goto	l11345
 11418  0123B0  5172               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 11419  0123B2  E103               	bnz	u10980
 11420  0123B4  2971               	incf	___fldiv@new_exp& (0+255),w,b
 11421  0123B6  A0D8               	btfss	status,0,c
 11422  0123B8  D00B               	goto	l11345
 11423  0123BA                     u10980:
 11424                           
 11425                           ; BSR set to: 0
 11426  0123BA  0E00               	movlw	0
 11427  0123BC  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
 11428  0123BE  6971               	setf	___fldiv@new_exp& (0+255),b
 11429  0123C0  0E00               	movlw	0
 11430  0123C2  6F60               	movwf	___fldiv@b& (0+255),b
 11431  0123C4  0E00               	movlw	0
 11432  0123C6  6F61               	movwf	(___fldiv@b+1)& (0+255),b
 11433  0123C8  0E00               	movlw	0
 11434  0123CA  6F62               	movwf	(___fldiv@b+2)& (0+255),b
 11435  0123CC  0E00               	movlw	0
 11436  0123CE  6F63               	movwf	(___fldiv@b+3)& (0+255),b
 11437  0123D0                     l11345:
 11438                           
 11439                           ; BSR set to: 0
 11440  0123D0  BF72               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 11441  0123D2  D005               	goto	u10990
 11442  0123D4  5172               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 11443  0123D6  E111               	bnz	l11349
 11444  0123D8  0571               	decf	___fldiv@new_exp& (0+255),w,b
 11445  0123DA  B0D8               	btfsc	status,0,c
 11446  0123DC  D00E               	goto	l11349
 11447  0123DE                     u10990:
 11448                           
 11449                           ; BSR set to: 0
 11450  0123DE  0E00               	movlw	0
 11451  0123E0  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
 11452  0123E2  0E00               	movlw	0
 11453  0123E4  6F71               	movwf	___fldiv@new_exp& (0+255),b
 11454  0123E6  0E00               	movlw	0
 11455  0123E8  6F60               	movwf	___fldiv@b& (0+255),b
 11456  0123EA  0E00               	movlw	0
 11457  0123EC  6F61               	movwf	(___fldiv@b+1)& (0+255),b
 11458  0123EE  0E00               	movlw	0
 11459  0123F0  6F62               	movwf	(___fldiv@b+2)& (0+255),b
 11460  0123F2  0E00               	movlw	0
 11461  0123F4  6F63               	movwf	(___fldiv@b+3)& (0+255),b
 11462  0123F6  0E00               	movlw	0
 11463  0123F8  6F70               	movwf	___fldiv@sign& (0+255),b
 11464  0123FA                     l11349:
 11465                           
 11466                           ; BSR set to: 0
 11467  0123FA  C071  F077         	movff	___fldiv@new_exp,___fldiv@bexp
 11468                           
 11469                           ; BSR set to: 0
 11470  0123FE  A177               	btfss	___fldiv@bexp& (0+255),0,b
 11471  012400  D002               	goto	l11355
 11472                           
 11473                           ; BSR set to: 0
 11474  012402  8F62               	bsf	(___fldiv@b+2)& (0+255),7,b
 11475  012404  D001               	goto	l11357
 11476  012406                     l11355:
 11477                           
 11478                           ; BSR set to: 0
 11479  012406  9F62               	bcf	(___fldiv@b+2)& (0+255),7,b
 11480  012408                     l11357:
 11481                           
 11482                           ; BSR set to: 0
 11483  012408  90D8               	bcf	status,0,c
 11484  01240A  3177               	rrcf	___fldiv@bexp& (0+255),w,b
 11485  01240C  6F63               	movwf	(___fldiv@b+3)& (0+255),b
 11486  01240E  D70E               	goto	l11271
 11487  012410                     __end_of___fldiv:
 11488                           	callstack 0
 11489                           
 11490 ;; *************** function ___awmod *****************
 11491 ;; Defined at:
 11492 ;;		line 7 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/awmod.c"
 11493 ;; Parameters:    Size  Location     Type
 11494 ;;  dividend        2    0[BANK0 ] int 
 11495 ;;  divisor         2    2[BANK0 ] int 
 11496 ;; Auto vars:     Size  Location     Type
 11497 ;;  sign            1    5[BANK0 ] unsigned char 
 11498 ;;  counter         1    4[BANK0 ] unsigned char 
 11499 ;; Return value:  Size  Location     Type
 11500 ;;                  2    0[BANK0 ] int 
 11501 ;; Registers used:
 11502 ;;		wreg, status,2, status,0
 11503 ;; Tracked objects:
 11504 ;;		On entry : 3F/0
 11505 ;;		On exit  : 3F/0
 11506 ;;		Unchanged: 0/0
 11507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11508 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11509 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11511 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11512 ;;Total ram usage:        6 bytes
 11513 ;; Hardware stack levels used: 1
 11514 ;; Hardware stack levels required when called: 7
 11515 ;; This function calls:
 11516 ;;		Nothing
 11517 ;; This function is called by:
 11518 ;;		_efgtoa
 11519 ;; This function uses a non-reentrant model
 11520 ;;
 11521                           
 11522                           	psect	text26
 11523  013D7E                     __ptext26:
 11524                           	callstack 0
 11525  013D7E                     ___awmod:
 11526                           	callstack 19
 11527                           
 11528                           ; BSR set to: 0
 11529                           
 11530                           ; BSR set to: 0
 11531                           ;incstack = 0
 11532  013D7E  0E00               	movlw	0
 11533  013D80  6F65               	movwf	___awmod@sign& (0+255),b
 11534                           
 11535                           ; BSR set to: 0
 11536  013D82  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 11537  013D84  D006               	goto	l11553
 11538                           
 11539                           ; BSR set to: 0
 11540  013D86  6D60               	negf	___awmod@dividend& (0+255),b
 11541  013D88  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 11542  013D8A  B0D8               	btfsc	status,0,c
 11543  013D8C  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 11544                           
 11545                           ; BSR set to: 0
 11546  013D8E  0E01               	movlw	1
 11547  013D90  6F65               	movwf	___awmod@sign& (0+255),b
 11548  013D92                     l11553:
 11549                           
 11550                           ; BSR set to: 0
 11551  013D92  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 11552  013D94  D004               	goto	l11557
 11553                           
 11554                           ; BSR set to: 0
 11555  013D96  6D62               	negf	___awmod@divisor& (0+255),b
 11556  013D98  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 11557  013D9A  B0D8               	btfsc	status,0,c
 11558  013D9C  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 11559  013D9E                     l11557:
 11560                           
 11561                           ; BSR set to: 0
 11562  013D9E  5162               	movf	___awmod@divisor& (0+255),w,b
 11563  013DA0  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 11564  013DA2  B4D8               	btfsc	status,2,c
 11565  013DA4  D018               	goto	l11573
 11566                           
 11567                           ; BSR set to: 0
 11568  013DA6  0E01               	movlw	1
 11569  013DA8  6F64               	movwf	___awmod@counter& (0+255),b
 11570  013DAA  D004               	goto	l11563
 11571  013DAC                     l11561:
 11572                           
 11573                           ; BSR set to: 0
 11574  013DAC  90D8               	bcf	status,0,c
 11575  013DAE  3762               	rlcf	___awmod@divisor& (0+255),f,b
 11576  013DB0  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 11577  013DB2  2B64               	incf	___awmod@counter& (0+255),f,b
 11578  013DB4                     l11563:
 11579                           
 11580                           ; BSR set to: 0
 11581  013DB4  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 11582  013DB6  D7FA               	goto	l11561
 11583  013DB8                     u11280:
 11584                           
 11585                           ; BSR set to: 0
 11586  013DB8  5162               	movf	___awmod@divisor& (0+255),w,b
 11587  013DBA  5D60               	subwf	___awmod@dividend& (0+255),w,b
 11588  013DBC  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 11589  013DBE  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 11590  013DC0  A0D8               	btfss	status,0,c
 11591  013DC2  D004               	goto	l11569
 11592                           
 11593                           ; BSR set to: 0
 11594  013DC4  5162               	movf	___awmod@divisor& (0+255),w,b
 11595  013DC6  5F60               	subwf	___awmod@dividend& (0+255),f,b
 11596  013DC8  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 11597  013DCA  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 11598  013DCC                     l11569:
 11599                           
 11600                           ; BSR set to: 0
 11601  013DCC  90D8               	bcf	status,0,c
 11602  013DCE  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 11603  013DD0  3362               	rrcf	___awmod@divisor& (0+255),f,b
 11604                           
 11605                           ; BSR set to: 0
 11606  013DD2  2F64               	decfsz	___awmod@counter& (0+255),f,b
 11607  013DD4  D7F1               	goto	u11280
 11608  013DD6                     l11573:
 11609                           
 11610                           ; BSR set to: 0
 11611  013DD6  5165               	movf	___awmod@sign& (0+255),w,b
 11612  013DD8  B4D8               	btfsc	status,2,c
 11613  013DDA  D004               	goto	l11577
 11614                           
 11615                           ; BSR set to: 0
 11616  013DDC  6D60               	negf	___awmod@dividend& (0+255),b
 11617  013DDE  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 11618  013DE0  B0D8               	btfsc	status,0,c
 11619  013DE2  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 11620  013DE4                     l11577:
 11621                           
 11622                           ; BSR set to: 0
 11623  013DE4  C060  F060         	movff	___awmod@dividend,?___awmod
 11624  013DE8  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 11625                           
 11626                           ; BSR set to: 0
 11627  013DEC  0012               	return		;funcret
 11628  013DEE                     __end_of___awmod:
 11629                           	callstack 0
 11630                           
 11631 ;; *************** function ___awdiv *****************
 11632 ;; Defined at:
 11633 ;;		line 7 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/awdiv.c"
 11634 ;; Parameters:    Size  Location     Type
 11635 ;;  dividend        2    0[BANK0 ] int 
 11636 ;;  divisor         2    2[BANK0 ] int 
 11637 ;; Auto vars:     Size  Location     Type
 11638 ;;  quotient        2    6[BANK0 ] int 
 11639 ;;  sign            1    5[BANK0 ] unsigned char 
 11640 ;;  counter         1    4[BANK0 ] unsigned char 
 11641 ;; Return value:  Size  Location     Type
 11642 ;;                  2    0[BANK0 ] int 
 11643 ;; Registers used:
 11644 ;;		wreg, status,2, status,0
 11645 ;; Tracked objects:
 11646 ;;		On entry : 3F/0
 11647 ;;		On exit  : 3F/0
 11648 ;;		Unchanged: 0/0
 11649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11650 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11651 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11653 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11654 ;;Total ram usage:        8 bytes
 11655 ;; Hardware stack levels used: 1
 11656 ;; Hardware stack levels required when called: 7
 11657 ;; This function calls:
 11658 ;;		Nothing
 11659 ;; This function is called by:
 11660 ;;		_efgtoa
 11661 ;; This function uses a non-reentrant model
 11662 ;;
 11663                           
 11664                           	psect	text27
 11665  013C86                     __ptext27:
 11666                           	callstack 0
 11667  013C86                     ___awdiv:
 11668                           	callstack 19
 11669                           
 11670                           ; BSR set to: 0
 11671                           
 11672                           ; BSR set to: 0
 11673                           ;incstack = 0
 11674  013C86  0E00               	movlw	0
 11675  013C88  6F65               	movwf	___awdiv@sign& (0+255),b
 11676                           
 11677                           ; BSR set to: 0
 11678  013C8A  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 11679  013C8C  D006               	goto	l11509
 11680                           
 11681                           ; BSR set to: 0
 11682  013C8E  6D62               	negf	___awdiv@divisor& (0+255),b
 11683  013C90  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
 11684  013C92  B0D8               	btfsc	status,0,c
 11685  013C94  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
 11686                           
 11687                           ; BSR set to: 0
 11688  013C96  0E01               	movlw	1
 11689  013C98  6F65               	movwf	___awdiv@sign& (0+255),b
 11690  013C9A                     l11509:
 11691                           
 11692                           ; BSR set to: 0
 11693  013C9A  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 11694  013C9C  D006               	goto	l11515
 11695                           
 11696                           ; BSR set to: 0
 11697  013C9E  6D60               	negf	___awdiv@dividend& (0+255),b
 11698  013CA0  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
 11699  013CA2  B0D8               	btfsc	status,0,c
 11700  013CA4  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
 11701                           
 11702                           ; BSR set to: 0
 11703  013CA6  0E01               	movlw	1
 11704  013CA8  1B65               	xorwf	___awdiv@sign& (0+255),f,b
 11705  013CAA                     l11515:
 11706                           
 11707                           ; BSR set to: 0
 11708  013CAA  0E00               	movlw	0
 11709  013CAC  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
 11710  013CAE  0E00               	movlw	0
 11711  013CB0  6F66               	movwf	___awdiv@quotient& (0+255),b
 11712                           
 11713                           ; BSR set to: 0
 11714  013CB2  5162               	movf	___awdiv@divisor& (0+255),w,b
 11715  013CB4  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 11716  013CB6  B4D8               	btfsc	status,2,c
 11717  013CB8  D01C               	goto	l11537
 11718                           
 11719                           ; BSR set to: 0
 11720  013CBA  0E01               	movlw	1
 11721  013CBC  6F64               	movwf	___awdiv@counter& (0+255),b
 11722  013CBE  D004               	goto	l11523
 11723  013CC0                     l11521:
 11724                           
 11725                           ; BSR set to: 0
 11726  013CC0  90D8               	bcf	status,0,c
 11727  013CC2  3762               	rlcf	___awdiv@divisor& (0+255),f,b
 11728  013CC4  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 11729  013CC6  2B64               	incf	___awdiv@counter& (0+255),f,b
 11730  013CC8                     l11523:
 11731                           
 11732                           ; BSR set to: 0
 11733  013CC8  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 11734  013CCA  D7FA               	goto	l11521
 11735  013CCC                     u11220:
 11736                           
 11737                           ; BSR set to: 0
 11738  013CCC  90D8               	bcf	status,0,c
 11739  013CCE  3766               	rlcf	___awdiv@quotient& (0+255),f,b
 11740  013CD0  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 11741                           
 11742                           ; BSR set to: 0
 11743  013CD2  5162               	movf	___awdiv@divisor& (0+255),w,b
 11744  013CD4  5D60               	subwf	___awdiv@dividend& (0+255),w,b
 11745  013CD6  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 11746  013CD8  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 11747  013CDA  A0D8               	btfss	status,0,c
 11748  013CDC  D005               	goto	l11533
 11749                           
 11750                           ; BSR set to: 0
 11751  013CDE  5162               	movf	___awdiv@divisor& (0+255),w,b
 11752  013CE0  5F60               	subwf	___awdiv@dividend& (0+255),f,b
 11753  013CE2  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 11754  013CE4  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 11755                           
 11756                           ; BSR set to: 0
 11757  013CE6  8166               	bsf	___awdiv@quotient& (0+255),0,b
 11758  013CE8                     l11533:
 11759                           
 11760                           ; BSR set to: 0
 11761  013CE8  90D8               	bcf	status,0,c
 11762  013CEA  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 11763  013CEC  3362               	rrcf	___awdiv@divisor& (0+255),f,b
 11764                           
 11765                           ; BSR set to: 0
 11766  013CEE  2F64               	decfsz	___awdiv@counter& (0+255),f,b
 11767  013CF0  D7ED               	goto	u11220
 11768  013CF2                     l11537:
 11769                           
 11770                           ; BSR set to: 0
 11771  013CF2  5165               	movf	___awdiv@sign& (0+255),w,b
 11772  013CF4  B4D8               	btfsc	status,2,c
 11773  013CF6  D004               	goto	l11541
 11774                           
 11775                           ; BSR set to: 0
 11776  013CF8  6D66               	negf	___awdiv@quotient& (0+255),b
 11777  013CFA  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
 11778  013CFC  B0D8               	btfsc	status,0,c
 11779  013CFE  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
 11780  013D00                     l11541:
 11781                           
 11782                           ; BSR set to: 0
 11783  013D00  C066  F060         	movff	___awdiv@quotient,?___awdiv
 11784  013D04  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
 11785                           
 11786                           ; BSR set to: 0
 11787  013D08  0012               	return		;funcret
 11788  013D0A                     __end_of___awdiv:
 11789                           	callstack 0
 11790                           
 11791 ;; *************** function _atoi *****************
 11792 ;; Defined at:
 11793 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/atoi.c"
 11794 ;; Parameters:    Size  Location     Type
 11795 ;;  s               2    6[BANK0 ] PTR const unsigned char 
 11796 ;;		 -> STR_19(23), STR_18(24), STR_17(24), STR_16(24), 
 11797 ;;		 -> STR_15(107), STR_14(3), STR_13(6), STR_12(17), 
 11798 ;; Auto vars:     Size  Location     Type
 11799 ;;  n               2   14[BANK0 ] int 
 11800 ;;  neg             2   12[BANK0 ] int 
 11801 ;; Return value:  Size  Location     Type
 11802 ;;                  2    6[BANK0 ] int 
 11803 ;; Registers used:
 11804 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11805 ;; Tracked objects:
 11806 ;;		On entry : 3F/0
 11807 ;;		On exit  : 3F/0
 11808 ;;		Unchanged: 0/0
 11809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11810 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11811 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11812 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11813 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11814 ;;Total ram usage:       10 bytes
 11815 ;; Hardware stack levels used: 1
 11816 ;; Hardware stack levels required when called: 8
 11817 ;; This function calls:
 11818 ;;		___wmul
 11819 ;;		_isdigit
 11820 ;;		_isspace
 11821 ;; This function is called by:
 11822 ;;		_vfpfcnvrt
 11823 ;; This function uses a non-reentrant model
 11824 ;;
 11825                           
 11826                           	psect	text28
 11827  012FB8                     __ptext28:
 11828                           	callstack 0
 11829  012FB8                     _atoi:
 11830                           	callstack 19
 11831                           
 11832                           ; BSR set to: 0
 11833                           
 11834                           ; BSR set to: 0
 11835                           ;incstack = 0
 11836  012FB8  0E00               	movlw	0
 11837  012FBA  6F6F               	movwf	(atoi@n+1)& (0+255),b
 11838  012FBC  0E00               	movlw	0
 11839  012FBE  6F6E               	movwf	atoi@n& (0+255),b
 11840  012FC0  0E00               	movlw	0
 11841  012FC2  6F6D               	movwf	(atoi@neg+1)& (0+255),b
 11842  012FC4  0E00               	movlw	0
 11843  012FC6  6F6C               	movwf	atoi@neg& (0+255),b
 11844  012FC8  D002               	goto	l12277
 11845  012FCA                     l12273:
 11846                           
 11847                           ; BSR set to: 0
 11848  012FCA  4B66               	infsnz	atoi@s& (0+255),f,b
 11849  012FCC  2B67               	incf	(atoi@s+1)& (0+255),f,b
 11850  012FCE                     l12277:
 11851                           
 11852                           ; BSR set to: 0
 11853  012FCE  0060  F19B  FFF6   	movff	atoi@s,tblptrl
 11854  012FD4  0060  F19F  FFF7   	movff	atoi@s+1,tblptrh
 11855  012FDA                     	if	0	;tblptru may be non-zero
 11856  012FDA                     	endif
 11857  012FDA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11858  012FDA  0E00               	movlw	low (__mediumconst shr (0+16))
 11859  012FDC  6EF8               	movwf	tblptru,c
 11860  012FDE                     	endif
 11861  012FDE  0008               	tblrd		*
 11862  012FE0  50F5               	movf	tablat,w,c
 11863  012FE2  0A20               	xorlw	32
 11864  012FE4  B4D8               	btfsc	status,2,c
 11865  012FE6  D7F1               	goto	l12273
 11866                           
 11867                           ; BSR set to: 0
 11868  012FE8  0EF7               	movlw	247
 11869  012FEA  6F68               	movwf	??_atoi& (0+255),b
 11870  012FEC  0EFF               	movlw	255
 11871  012FEE  6F69               	movwf	(??_atoi+1)& (0+255),b
 11872  012FF0  0060  F19B  FFF6   	movff	atoi@s,tblptrl
 11873  012FF6  0060  F19F  FFF7   	movff	atoi@s+1,tblptrh
 11874  012FFC                     	if	0	;tblptru may be non-zero
 11875  012FFC                     	endif
 11876  012FFC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11877  012FFC  0E00               	movlw	low (__mediumconst shr (0+16))
 11878  012FFE  6EF8               	movwf	tblptru,c
 11879  013000                     	endif
 11880  013000  0008               	tblrd		*
 11881  013002  50F5               	movf	tablat,w,c
 11882  013004  6F6A               	movwf	(??_atoi+2)& (0+255),b
 11883  013006  6B6B               	clrf	(??_atoi+3)& (0+255),b
 11884  013008  5168               	movf	??_atoi& (0+255),w,b
 11885  01300A  276A               	addwf	(??_atoi+2)& (0+255),f,b
 11886  01300C  5169               	movf	(??_atoi+1)& (0+255),w,b
 11887  01300E  236B               	addwfc	(??_atoi+3)& (0+255),f,b
 11888  013010  516B               	movf	(??_atoi+3)& (0+255),w,b
 11889  013012  E10C               	bnz	l12285
 11890  013014  0E05               	movlw	5
 11891  013016  5D6A               	subwf	(??_atoi+2)& (0+255),w,b
 11892  013018  B0D8               	btfsc	status,0,c
 11893  01301A  D008               	goto	l12285
 11894  01301C  D7D6               	goto	l12273
 11895  01301E                     l12281:
 11896                           
 11897                           ; BSR set to: 0
 11898  01301E  0E00               	movlw	0
 11899  013020  6F6D               	movwf	(atoi@neg+1)& (0+255),b
 11900  013022  0E01               	movlw	1
 11901  013024  6F6C               	movwf	atoi@neg& (0+255),b
 11902  013026                     l12283:
 11903                           
 11904                           ; BSR set to: 0
 11905  013026  4B66               	infsnz	atoi@s& (0+255),f,b
 11906  013028  2B67               	incf	(atoi@s+1)& (0+255),f,b
 11907  01302A  D036               	goto	l12293
 11908  01302C                     l12285:
 11909                           
 11910                           ; BSR set to: 0
 11911  01302C  0060  F19B  FFF6   	movff	atoi@s,tblptrl
 11912  013032  0060  F19F  FFF7   	movff	atoi@s+1,tblptrh
 11913  013038                     	if	0	;tblptru may be non-zero
 11914  013038                     	endif
 11915  013038                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11916  013038  0E00               	movlw	low (__mediumconst shr (0+16))
 11917  01303A  6EF8               	movwf	tblptru,c
 11918  01303C                     	endif
 11919  01303C  0008               	tblrd		*
 11920  01303E  50F5               	movf	tablat,w,c
 11921  013040  6F68               	movwf	??_atoi& (0+255),b
 11922  013042  6B69               	clrf	(??_atoi+1)& (0+255),b
 11923                           
 11924                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11925                           ; Switch size 1, requested type "simple"
 11926                           ; Number of cases is 1, Range of values is 0 to 0
 11927                           ; switch strategies available:
 11928                           ; Name         Instructions Cycles
 11929                           ; simple_byte            4     3 (average)
 11930                           ;	Chosen strategy is simple_byte
 11931  013044  5169               	movf	(??_atoi+1)& (0+255),w,b
 11932  013046  0A00               	xorlw	0	; case 0
 11933  013048  A4D8               	btfss	status,2,c
 11934  01304A  D026               	goto	l12293
 11935                           
 11936                           ; BSR set to: 0
 11937                           ; Switch size 1, requested type "simple"
 11938                           ; Number of cases is 2, Range of values is 43 to 45
 11939                           ; switch strategies available:
 11940                           ; Name         Instructions Cycles
 11941                           ; simple_byte            7     4 (average)
 11942                           ;	Chosen strategy is simple_byte
 11943  01304C  5168               	movf	??_atoi& (0+255),w,b
 11944  01304E  0A2B               	xorlw	43	; case 43
 11945  013050  B4D8               	btfsc	status,2,c
 11946  013052  D7E9               	goto	l12283
 11947  013054  0A06               	xorlw	6	; case 45
 11948  013056  B4D8               	btfsc	status,2,c
 11949  013058  D7E2               	goto	l12281
 11950  01305A  D01E               	goto	l12293
 11951  01305C                     l12287:
 11952                           
 11953                           ; BSR set to: 0
 11954  01305C  C06E  F060         	movff	atoi@n,___wmul@multiplier
 11955  013060  C06F  F061         	movff	atoi@n+1,___wmul@multiplier+1
 11956  013064  0E00               	movlw	0
 11957  013066  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11958  013068  0E0A               	movlw	10
 11959  01306A  6F62               	movwf	___wmul@multiplicand& (0+255),b
 11960  01306C  EC25  F0A5         	call	___wmul	;wreg free
 11961  013070  0060  F19B  FFF6   	movff	atoi@s,tblptrl
 11962  013076  0060  F19F  FFF7   	movff	atoi@s+1,tblptrh
 11963  01307C                     	if	0	;tblptru may be non-zero
 11964  01307C                     	endif
 11965  01307C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11966  01307C  0E00               	movlw	low (__mediumconst shr (0+16))
 11967  01307E  6EF8               	movwf	tblptru,c
 11968  013080                     	endif
 11969  013080  0008               	tblrd		*
 11970  013082  50F5               	movf	tablat,w,c
 11971  013084  5F60               	subwf	?___wmul& (0+255),f,b
 11972  013086  0E00               	movlw	0
 11973  013088  5B61               	subwfb	(?___wmul+1)& (0+255),f,b
 11974  01308A  0E30               	movlw	48
 11975  01308C  2560               	addwf	?___wmul& (0+255),w,b
 11976  01308E  6F6E               	movwf	atoi@n& (0+255),b
 11977  013090  0E00               	movlw	0
 11978  013092  2161               	addwfc	(?___wmul+1)& (0+255),w,b
 11979  013094  6F6F               	movwf	(atoi@n+1)& (0+255),b
 11980  013096  D7C7               	goto	l12283
 11981  013098                     l12293:
 11982                           
 11983                           ; BSR set to: 0
 11984  013098  0ED0               	movlw	208
 11985  01309A  6F68               	movwf	??_atoi& (0+255),b
 11986  01309C  0EFF               	movlw	255
 11987  01309E  6F69               	movwf	(??_atoi+1)& (0+255),b
 11988  0130A0  0060  F19B  FFF6   	movff	atoi@s,tblptrl
 11989  0130A6  0060  F19F  FFF7   	movff	atoi@s+1,tblptrh
 11990  0130AC                     	if	0	;tblptru may be non-zero
 11991  0130AC                     	endif
 11992  0130AC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11993  0130AC  0E00               	movlw	low (__mediumconst shr (0+16))
 11994  0130AE  6EF8               	movwf	tblptru,c
 11995  0130B0                     	endif
 11996  0130B0  0008               	tblrd		*
 11997  0130B2  50F5               	movf	tablat,w,c
 11998  0130B4  6F6A               	movwf	(??_atoi+2)& (0+255),b
 11999  0130B6  6B6B               	clrf	(??_atoi+3)& (0+255),b
 12000  0130B8  5168               	movf	??_atoi& (0+255),w,b
 12001  0130BA  276A               	addwf	(??_atoi+2)& (0+255),f,b
 12002  0130BC  5169               	movf	(??_atoi+1)& (0+255),w,b
 12003  0130BE  236B               	addwfc	(??_atoi+3)& (0+255),f,b
 12004  0130C0  516B               	movf	(??_atoi+3)& (0+255),w,b
 12005  0130C2  E104               	bnz	u12660
 12006  0130C4  0E0A               	movlw	10
 12007  0130C6  5D6A               	subwf	(??_atoi+2)& (0+255),w,b
 12008  0130C8  A0D8               	btfss	status,0,c
 12009  0130CA  D7C8               	goto	l12287
 12010  0130CC                     u12660:
 12011                           
 12012                           ; BSR set to: 0
 12013  0130CC  516C               	movf	atoi@neg& (0+255),w,b
 12014  0130CE  116D               	iorwf	(atoi@neg+1)& (0+255),w,b
 12015  0130D0  A4D8               	btfss	status,2,c
 12016  0130D2  D00D               	goto	l2755
 12017                           
 12018                           ; BSR set to: 0
 12019  0130D4  C06E  F068         	movff	atoi@n,??_atoi
 12020  0130D8  C06F  F069         	movff	atoi@n+1,??_atoi+1
 12021  0130DC  1F68               	comf	??_atoi& (0+255),f,b
 12022  0130DE  1F69               	comf	(??_atoi+1)& (0+255),f,b
 12023  0130E0  4B68               	infsnz	??_atoi& (0+255),f,b
 12024  0130E2  2B69               	incf	(??_atoi+1)& (0+255),f,b
 12025  0130E4  C068  F066         	movff	??_atoi,?_atoi
 12026  0130E8  C069  F067         	movff	??_atoi+1,?_atoi+1
 12027  0130EC  0012               	return	
 12028  0130EE                     l2755:
 12029                           
 12030                           ; BSR set to: 0
 12031  0130EE  C06E  F066         	movff	atoi@n,?_atoi
 12032  0130F2  C06F  F067         	movff	atoi@n+1,?_atoi+1
 12033                           
 12034                           ; BSR set to: 0
 12035  0130F6  0012               	return		;funcret
 12036  0130F8                     __end_of_atoi:
 12037                           	callstack 0
 12038                           
 12039 ;; *************** function _isspace *****************
 12040 ;; Defined at:
 12041 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/isspace.c"
 12042 ;; Parameters:    Size  Location     Type
 12043 ;;  c               2    0[BANK0 ] int 
 12044 ;; Auto vars:     Size  Location     Type
 12045 ;;		None
 12046 ;; Return value:  Size  Location     Type
 12047 ;;                  2    0[BANK0 ] int 
 12048 ;; Registers used:
 12049 ;;		wreg, status,2, status,0
 12050 ;; Tracked objects:
 12051 ;;		On entry : 0/0
 12052 ;;		On exit  : 3F/0
 12053 ;;		Unchanged: 0/0
 12054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12055 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12056 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12057 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12058 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12059 ;;Total ram usage:        7 bytes
 12060 ;; Hardware stack levels used: 1
 12061 ;; Hardware stack levels required when called: 7
 12062 ;; This function calls:
 12063 ;;		Nothing
 12064 ;; This function is called by:
 12065 ;;		_atoi
 12066 ;; This function uses a non-reentrant model
 12067 ;;
 12068                           
 12069                           	psect	text29
 12070  0145AA                     __ptext29:
 12071                           	callstack 0
 12072  0145AA                     _isspace:
 12073                           	callstack 19
 12074                           
 12075                           ; BSR set to: 0
 12076                           ;incstack = 0
 12077  0145AA  0E01               	movlw	1
 12078  0145AC  6E20               	movwf	_isspace$4284^0,c
 12079  0145AE  0E20               	movlw	32
 12080  0145B0  0100               	movlb	0	; () banked
 12081  0145B2  1960               	xorwf	isspace@c& (0+255),w,b
 12082  0145B4  1161               	iorwf	(isspace@c+1)& (0+255),w,b
 12083  0145B6  B4D8               	btfsc	status,2,c
 12084  0145B8  D014               	goto	l11807
 12085                           
 12086                           ; BSR set to: 0
 12087  0145BA  0EF7               	movlw	247
 12088  0145BC  6F62               	movwf	??_isspace& (0+255),b
 12089  0145BE  0EFF               	movlw	255
 12090  0145C0  6F63               	movwf	(??_isspace+1)& (0+255),b
 12091  0145C2  C060  F064         	movff	isspace@c,??_isspace+2
 12092  0145C6  C061  F065         	movff	isspace@c+1,??_isspace+3
 12093  0145CA  5162               	movf	??_isspace& (0+255),w,b
 12094  0145CC  2764               	addwf	(??_isspace+2)& (0+255),f,b
 12095  0145CE  5163               	movf	(??_isspace+1)& (0+255),w,b
 12096  0145D0  2365               	addwfc	(??_isspace+3)& (0+255),f,b
 12097  0145D2  5165               	movf	(??_isspace+3)& (0+255),w,b
 12098  0145D4  E104               	bnz	u11810
 12099  0145D6  0E05               	movlw	5
 12100  0145D8  5D64               	subwf	(??_isspace+2)& (0+255),w,b
 12101  0145DA  A0D8               	btfss	status,0,c
 12102  0145DC  D002               	goto	l11807
 12103  0145DE                     u11810:
 12104                           
 12105                           ; BSR set to: 0
 12106  0145DE  0E00               	movlw	0
 12107  0145E0  6E20               	movwf	_isspace$4284^0,c
 12108  0145E2                     l11807:
 12109                           
 12110                           ; BSR set to: 0
 12111  0145E2  C020  F060         	movff	_isspace$4284,?_isspace
 12112  0145E6  6B61               	clrf	(?_isspace+1)& (0+255),b
 12113                           
 12114                           ; BSR set to: 0
 12115  0145E8  0012               	return		;funcret
 12116  0145EA                     __end_of_isspace:
 12117                           	callstack 0
 12118                           
 12119 ;; *************** function _isdigit *****************
 12120 ;; Defined at:
 12121 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/isdigit.c"
 12122 ;; Parameters:    Size  Location     Type
 12123 ;;  c               2    0[BANK0 ] int 
 12124 ;; Auto vars:     Size  Location     Type
 12125 ;;		None
 12126 ;; Return value:  Size  Location     Type
 12127 ;;                  2    0[BANK0 ] int 
 12128 ;; Registers used:
 12129 ;;		wreg, status,2, status,0
 12130 ;; Tracked objects:
 12131 ;;		On entry : 0/0
 12132 ;;		On exit  : 3F/0
 12133 ;;		Unchanged: 0/0
 12134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12135 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12137 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12138 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12139 ;;Total ram usage:        6 bytes
 12140 ;; Hardware stack levels used: 1
 12141 ;; Hardware stack levels required when called: 7
 12142 ;; This function calls:
 12143 ;;		Nothing
 12144 ;; This function is called by:
 12145 ;;		_vfpfcnvrt
 12146 ;;		_atoi
 12147 ;; This function uses a non-reentrant model
 12148 ;;
 12149                           
 12150                           	psect	text30
 12151  0148F8                     __ptext30:
 12152                           	callstack 0
 12153  0148F8                     _isdigit:
 12154                           	callstack 20
 12155                           
 12156                           ; BSR set to: 0
 12157                           ;incstack = 0
 12158  0148F8  0ED0               	movlw	208
 12159  0148FA  0100               	movlb	0	; () banked
 12160  0148FC  6F62               	movwf	??_isdigit& (0+255),b
 12161  0148FE  0EFF               	movlw	255
 12162  014900  6F63               	movwf	(??_isdigit+1)& (0+255),b
 12163  014902  C060  F064         	movff	isdigit@c,??_isdigit+2
 12164  014906  C061  F065         	movff	isdigit@c+1,??_isdigit+3
 12165  01490A  5162               	movf	??_isdigit& (0+255),w,b
 12166  01490C  2764               	addwf	(??_isdigit+2)& (0+255),f,b
 12167  01490E  5163               	movf	(??_isdigit+1)& (0+255),w,b
 12168  014910  2365               	addwfc	(??_isdigit+3)& (0+255),f,b
 12169  014912  5165               	movf	(??_isdigit+3)& (0+255),w,b
 12170  014914  E106               	bnz	u11780
 12171  014916  0E0A               	movlw	10
 12172  014918  5D64               	subwf	(??_isdigit+2)& (0+255),w,b
 12173  01491A  B0D8               	btfsc	status,0,c
 12174  01491C  D002               	goto	u11780
 12175  01491E  0E01               	movlw	1
 12176  014920  D001               	goto	u11790
 12177  014922                     u11780:
 12178  014922  0E00               	movlw	0
 12179  014924                     u11790:
 12180  014924  6F60               	movwf	?_isdigit& (0+255),b
 12181  014926  6B61               	clrf	(?_isdigit+1)& (0+255),b
 12182                           
 12183                           ; BSR set to: 0
 12184  014928  0012               	return		;funcret
 12185  01492A                     __end_of_isdigit:
 12186                           	callstack 0
 12187                           
 12188 ;; *************** function ___wmul *****************
 12189 ;; Defined at:
 12190 ;;		line 15 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/Umul16.c"
 12191 ;; Parameters:    Size  Location     Type
 12192 ;;  multiplier      2    0[BANK0 ] unsigned int 
 12193 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 12194 ;; Auto vars:     Size  Location     Type
 12195 ;;  product         2    4[BANK0 ] unsigned int 
 12196 ;; Return value:  Size  Location     Type
 12197 ;;                  2    0[BANK0 ] unsigned int 
 12198 ;; Registers used:
 12199 ;;		wreg, status,2, status,0, prodl, prodh
 12200 ;; Tracked objects:
 12201 ;;		On entry : 3F/0
 12202 ;;		On exit  : 3F/0
 12203 ;;		Unchanged: 0/0
 12204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12205 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12206 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12208 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12209 ;;Total ram usage:        6 bytes
 12210 ;; Hardware stack levels used: 1
 12211 ;; Hardware stack levels required when called: 7
 12212 ;; This function calls:
 12213 ;;		Nothing
 12214 ;; This function is called by:
 12215 ;;		_atoi
 12216 ;; This function uses a non-reentrant model
 12217 ;;
 12218                           
 12219                           	psect	text31
 12220  014A4A                     __ptext31:
 12221                           	callstack 0
 12222  014A4A                     ___wmul:
 12223                           	callstack 19
 12224                           
 12225                           ; BSR set to: 0
 12226                           
 12227                           ; BSR set to: 0
 12228                           ;incstack = 0
 12229  014A4A  5160               	movf	___wmul@multiplier& (0+255),w,b
 12230  014A4C  0362               	mulwf	___wmul@multiplicand& (0+255),b
 12231  014A4E  006F FFCC  F064    	movff	prodl,___wmul@product
 12232  014A54  006F FFD0  F065    	movff	prodh,___wmul@product+1
 12233  014A5A  5160               	movf	___wmul@multiplier& (0+255),w,b
 12234  014A5C  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 12235  014A5E  50F3               	movf	243,w,c
 12236  014A60  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 12237  014A62  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 12238  014A64  0362               	mulwf	___wmul@multiplicand& (0+255),b
 12239  014A66  50F3               	movf	243,w,c
 12240  014A68  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 12241                           
 12242                           ; BSR set to: 0
 12243  014A6A  C064  F060         	movff	___wmul@product,?___wmul
 12244  014A6E  C065  F061         	movff	___wmul@product+1,?___wmul+1
 12245                           
 12246                           ; BSR set to: 0
 12247  014A72  0012               	return		;funcret
 12248  014A74                     __end_of___wmul:
 12249                           	callstack 0
 12250                           
 12251 ;; *************** function _init_display *****************
 12252 ;; Defined at:
 12253 ;;		line 31 in file "eadog.c"
 12254 ;; Parameters:    Size  Location     Type
 12255 ;;		None
 12256 ;; Auto vars:     Size  Location     Type
 12257 ;;		None
 12258 ;; Return value:  Size  Location     Type
 12259 ;;                  1    wreg      void 
 12260 ;; Registers used:
 12261 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12262 ;; Tracked objects:
 12263 ;;		On entry : 0/0
 12264 ;;		On exit  : 3F/3D
 12265 ;;		Unchanged: 0/0
 12266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12271 ;;Total ram usage:        0 bytes
 12272 ;; Hardware stack levels used: 1
 12273 ;; Hardware stack levels required when called: 9
 12274 ;; This function calls:
 12275 ;;		_ringBufS_init
 12276 ;;		_send_lcd_cmd
 12277 ;;		_send_lcd_cmd_long
 12278 ;;		_send_lcd_data
 12279 ;;		_wdtdelay
 12280 ;; This function is called by:
 12281 ;;		_main
 12282 ;; This function uses a non-reentrant model
 12283 ;;
 12284                           
 12285                           	psect	text32
 12286  01372A                     __ptext32:
 12287                           	callstack 0
 12288  01372A                     _init_display:
 12289                           	callstack 21
 12290                           
 12291                           ;eadog.c: 33:  spi_link.tx1a = &ring_buf1;
 12292                           
 12293                           ; BSR set to: 0
 12294                           ;incstack = 0
 12295  01372A  0E40               	movlw	low _ring_buf1
 12296  01372C  0101               	movlb	1	; () banked
 12297  01372E  6F06               	movwf	(_spi_link+6)& (0+255),b	;volatile
 12298  013730  0E03               	movlw	high _ring_buf1
 12299  013732  6F07               	movwf	(_spi_link+7)& (0+255),b	;volatile
 12300                           
 12301                           ; BSR set to: 1
 12302                           ;eadog.c: 34:  ringBufS_init(spi_link.tx1a);
 12303  013734  C106  F06C         	movff	_spi_link+6,ringBufS_init@_this	;volatile
 12304  013738  C107  F06D         	movff	_spi_link+7,ringBufS_init@_this+1	;volatile
 12305  01373C  EC00  F0A6         	call	_ringBufS_init	;wreg free
 12306                           
 12307                           ; BSR set to: 0
 12308                           ;eadog.c: 40:  SPI1CON0bits.EN = 0;
 12309  013740  013D               	movlb	61	; () banked
 12310  013742  9F14               	bcf	20,7,b	;volatile
 12311                           
 12312                           ; BSR set to: 61
 12313                           ;eadog.c: 42:  SPI1CON1 = 0x20;
 12314  013744  0E20               	movlw	32
 12315  013746  6F15               	movwf	21,b	;volatile
 12316                           
 12317                           ; BSR set to: 61
 12318                           ;eadog.c: 44:  SPI1CON2 = 0x03;
 12319  013748  0E03               	movlw	3
 12320  01374A  6F16               	movwf	22,b	;volatile
 12321                           
 12322                           ; BSR set to: 61
 12323                           ;eadog.c: 46:  SPI1BAUD = 0x04;
 12324  01374C  0E04               	movlw	4
 12325  01374E  6F19               	movwf	25,b	;volatile
 12326                           
 12327                           ; BSR set to: 61
 12328                           ;eadog.c: 48:  SPI1CLK = 0x02;
 12329  013750  0E02               	movlw	2
 12330  013752  6F1C               	movwf	28,b	;volatile
 12331                           
 12332                           ; BSR set to: 61
 12333                           ;eadog.c: 50:  SPI1CON0 = 0x83;
 12334  013754  0E83               	movlw	131
 12335  013756  6F14               	movwf	20,b	;volatile
 12336                           
 12337                           ; BSR set to: 61
 12338                           ;eadog.c: 51:  SPI1CON0bits.EN = 1;
 12339  013758  8F14               	bsf	20,7,b	;volatile
 12340                           
 12341                           ; BSR set to: 61
 12342                           ;eadog.c: 53:  wdtdelay(350000);
 12343  01375A  0E30               	movlw	48
 12344  01375C  0100               	movlb	0	; () banked
 12345  01375E  6F60               	movwf	wdtdelay@delay& (0+255),b
 12346  013760  0E57               	movlw	87
 12347  013762  6F61               	movwf	(wdtdelay@delay+1)& (0+255),b
 12348  013764  0E05               	movlw	5
 12349  013766  6F62               	movwf	(wdtdelay@delay+2)& (0+255),b
 12350  013768  0E00               	movlw	0
 12351  01376A  6F63               	movwf	(wdtdelay@delay+3)& (0+255),b
 12352  01376C  ECE2  F0A1         	call	_wdtdelay	;wreg free
 12353                           
 12354                           ; BSR set to: 0
 12355                           ;eadog.c: 54:  send_lcd_cmd_long(0x46);
 12356  013770  0E46               	movlw	70
 12357  013772  EC35  F0A3         	call	_send_lcd_cmd_long
 12358                           
 12359                           ; BSR set to: 0
 12360                           ;eadog.c: 55:  send_lcd_cmd(0x41);
 12361  013776  0E41               	movlw	65
 12362  013778  EC54  F0A3         	call	_send_lcd_cmd
 12363                           
 12364                           ; BSR set to: 0
 12365                           ;eadog.c: 56:  wdtdelay(80);
 12366  01377C  0E50               	movlw	80
 12367  01377E  6F60               	movwf	wdtdelay@delay& (0+255),b
 12368  013780  0E00               	movlw	0
 12369  013782  6F61               	movwf	(wdtdelay@delay+1)& (0+255),b
 12370  013784  0E00               	movlw	0
 12371  013786  6F62               	movwf	(wdtdelay@delay+2)& (0+255),b
 12372  013788  0E00               	movlw	0
 12373  01378A  6F63               	movwf	(wdtdelay@delay+3)& (0+255),b
 12374  01378C  ECE2  F0A1         	call	_wdtdelay	;wreg free
 12375                           
 12376                           ; BSR set to: 0
 12377                           ;eadog.c: 57:  send_lcd_cmd(0x53);
 12378  013790  0E53               	movlw	83
 12379  013792  EC54  F0A3         	call	_send_lcd_cmd
 12380                           
 12381                           ; BSR set to: 0
 12382                           ;eadog.c: 58:  send_lcd_data(2);
 12383  013796  0E02               	movlw	2
 12384  013798  EC62  F0A5         	call	_send_lcd_data
 12385                           
 12386                           ; BSR set to: 0
 12387                           ;eadog.c: 59:  wdtdelay(80);
 12388  01379C  0E50               	movlw	80
 12389  01379E  6F60               	movwf	wdtdelay@delay& (0+255),b
 12390  0137A0  0E00               	movlw	0
 12391  0137A2  6F61               	movwf	(wdtdelay@delay+1)& (0+255),b
 12392  0137A4  0E00               	movlw	0
 12393  0137A6  6F62               	movwf	(wdtdelay@delay+2)& (0+255),b
 12394  0137A8  0E00               	movlw	0
 12395  0137AA  6F63               	movwf	(wdtdelay@delay+3)& (0+255),b
 12396  0137AC  ECE2  F0A1         	call	_wdtdelay	;wreg free
 12397                           
 12398                           ; BSR set to: 0
 12399                           ;eadog.c: 60:  send_lcd_cmd_long(0x51);
 12400  0137B0  0E51               	movlw	81
 12401  0137B2  EC35  F0A3         	call	_send_lcd_cmd_long
 12402                           
 12403                           ; BSR set to: 0
 12404                           ;eadog.c: 61:  SPI1CON0bits.EN = 0;
 12405  0137B6  013D               	movlb	61	; () banked
 12406  0137B8  9F14               	bcf	20,7,b	;volatile
 12407                           
 12408                           ; BSR set to: 61
 12409                           ;eadog.c: 62:  SPI1CON2 = 0x02;
 12410  0137BA  0E02               	movlw	2
 12411  0137BC  6F16               	movwf	22,b	;volatile
 12412                           
 12413                           ; BSR set to: 61
 12414                           ;eadog.c: 63:  SPI1CON0bits.EN = 1;
 12415  0137BE  8F14               	bsf	20,7,b	;volatile
 12416                           
 12417                           ; BSR set to: 61
 12418                           ;eadog.c: 65:  SPI1INTFbits.SPI1TXUIF = 0;
 12419  0137C0  931A               	bcf	26,1,b	;volatile
 12420                           
 12421                           ; BSR set to: 61
 12422                           ;eadog.c: 66:  DMA1CON1bits.DMODE = 0;
 12423  0137C2  0E3F               	movlw	-193
 12424  0137C4  013B               	movlb	59	; () banked
 12425  0137C6  17FD               	andwf	253,f,b	;volatile
 12426                           
 12427                           ; BSR set to: 59
 12428                           ;eadog.c: 67:  DMA1CON1bits.DSTP = 0;
 12429  0137C8  9BFD               	bcf	253,5,b	;volatile
 12430                           
 12431                           ; BSR set to: 59
 12432                           ;eadog.c: 68:  DMA1CON1bits.SMODE = 1;
 12433  0137CA  51FD               	movf	253,w,b	;volatile
 12434  0137CC  0BF9               	andlw	-7
 12435  0137CE  0902               	iorlw	2
 12436  0137D0  6FFD               	movwf	253,b	;volatile
 12437                           
 12438                           ; BSR set to: 59
 12439                           ;eadog.c: 69:  DMA1CON1bits.SMR = 0;
 12440  0137D2  0EE7               	movlw	-25
 12441  0137D4  17FD               	andwf	253,f,b	;volatile
 12442                           
 12443                           ; BSR set to: 59
 12444                           ;eadog.c: 70:  DMA1CON1bits.SSTP = 1;
 12445  0137D6  81FD               	bsf	253,0,b	;volatile
 12446                           
 12447                           ; BSR set to: 59
 12448                           ;eadog.c: 71:  DMA1SSA = (uint24_t) & ring_buf1;
 12449  0137D8  0E40               	movlw	low _ring_buf1
 12450  0137DA  6FF9               	movwf	249,b	;volatile
 12451  0137DC  0E03               	movlw	high _ring_buf1
 12452  0137DE  6FFA               	movwf	250,b	;volatile
 12453  0137E0  0E00               	movlw	low (_ring_buf1 shr (0+16))
 12454  0137E2  6FFB               	movwf	251,b	;volatile
 12455                           
 12456                           ; BSR set to: 59
 12457                           ;eadog.c: 72:  DMA1CON0bits.DGO = 0;
 12458  0137E4  9BFC               	bcf	252,5,b	;volatile
 12459                           
 12460                           ; BSR set to: 59
 12461                           ;eadog.c: 73:  SPI1INTFbits.SPI1TXUIF = 1;
 12462  0137E6  013D               	movlb	61	; () banked
 12463  0137E8  831A               	bsf	26,1,b	;volatile
 12464                           
 12465                           ; BSR set to: 61
 12466  0137EA  0012               	return		;funcret
 12467  0137EC                     __end_of_init_display:
 12468                           	callstack 0
 12469                           
 12470 ;; *************** function _send_lcd_data *****************
 12471 ;; Defined at:
 12472 ;;		line 101 in file "eadog.c"
 12473 ;; Parameters:    Size  Location     Type
 12474 ;;  data            1    wreg     const unsigned char 
 12475 ;; Auto vars:     Size  Location     Type
 12476 ;;  data            1    4[BANK0 ] const unsigned char 
 12477 ;; Return value:  Size  Location     Type
 12478 ;;                  1    wreg      void 
 12479 ;; Registers used:
 12480 ;;		wreg, status,2, status,0, cstack
 12481 ;; Tracked objects:
 12482 ;;		On entry : 3F/0
 12483 ;;		On exit  : 3F/0
 12484 ;;		Unchanged: 0/0
 12485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12487 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12489 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12490 ;;Total ram usage:        1 bytes
 12491 ;; Hardware stack levels used: 1
 12492 ;; Hardware stack levels required when called: 8
 12493 ;; This function calls:
 12494 ;;		_SPI1_ExchangeByte
 12495 ;;		_wdtdelay
 12496 ;; This function is called by:
 12497 ;;		_init_display
 12498 ;; This function uses a non-reentrant model
 12499 ;;
 12500                           
 12501                           	psect	text33
 12502  014AC4                     __ptext33:
 12503                           	callstack 0
 12504  014AC4                     _send_lcd_data:
 12505                           	callstack 21
 12506                           
 12507                           ; BSR set to: 61
 12508                           ;incstack = 0
 12509                           ;send_lcd_data@data stored from wreg
 12510  014AC4  6F64               	movwf	send_lcd_data@data& (0+255),b
 12511                           
 12512                           ;eadog.c: 101: static void send_lcd_data(const uint8_t data);eadog.c: 102: {;eadog.c: 10
      +                          3:  do { LATCbits.LATC2 = 0; } while(0);
 12513  014AC6  94BC               	bcf	188,2,c	;volatile
 12514                           
 12515                           ;eadog.c: 104:  SPI1_ExchangeByte(data);
 12516  014AC8  0100               	movlb	0	; () banked
 12517  014ACA  5164               	movf	send_lcd_data@data& (0+255),w,b
 12518  014ACC  EC6A  F0A6         	call	_SPI1_ExchangeByte
 12519                           
 12520                           ; BSR set to: 61
 12521                           ;eadog.c: 105:  wdtdelay(8);
 12522  014AD0  0E08               	movlw	8
 12523  014AD2  0100               	movlb	0	; () banked
 12524  014AD4  6F60               	movwf	wdtdelay@delay& (0+255),b
 12525  014AD6  0E00               	movlw	0
 12526  014AD8  6F61               	movwf	(wdtdelay@delay+1)& (0+255),b
 12527  014ADA  0E00               	movlw	0
 12528  014ADC  6F62               	movwf	(wdtdelay@delay+2)& (0+255),b
 12529  014ADE  0E00               	movlw	0
 12530  014AE0  6F63               	movwf	(wdtdelay@delay+3)& (0+255),b
 12531  014AE2  ECE2  F0A1         	call	_wdtdelay	;wreg free
 12532                           
 12533                           ; BSR set to: 0
 12534  014AE6  0012               	return		;funcret
 12535  014AE8                     __end_of_send_lcd_data:
 12536                           	callstack 0
 12537                           
 12538 ;; *************** function _send_lcd_cmd_long *****************
 12539 ;; Defined at:
 12540 ;;		line 117 in file "eadog.c"
 12541 ;; Parameters:    Size  Location     Type
 12542 ;;  cmd             1    wreg     const unsigned char 
 12543 ;; Auto vars:     Size  Location     Type
 12544 ;;  cmd             1    4[BANK0 ] const unsigned char 
 12545 ;; Return value:  Size  Location     Type
 12546 ;;                  1    wreg      void 
 12547 ;; Registers used:
 12548 ;;		wreg, status,2, status,0, cstack
 12549 ;; Tracked objects:
 12550 ;;		On entry : 3F/0
 12551 ;;		On exit  : 3F/0
 12552 ;;		Unchanged: 0/0
 12553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12555 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12557 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12558 ;;Total ram usage:        1 bytes
 12559 ;; Hardware stack levels used: 1
 12560 ;; Hardware stack levels required when called: 8
 12561 ;; This function calls:
 12562 ;;		_SPI1_ExchangeByte
 12563 ;;		_wdtdelay
 12564 ;; This function is called by:
 12565 ;;		_init_display
 12566 ;; This function uses a non-reentrant model
 12567 ;;
 12568                           
 12569                           	psect	text34
 12570  01466A                     __ptext34:
 12571                           	callstack 0
 12572  01466A                     _send_lcd_cmd_long:
 12573                           	callstack 21
 12574                           
 12575                           ; BSR set to: 0
 12576                           ;incstack = 0
 12577                           ;send_lcd_cmd_long@cmd stored from wreg
 12578  01466A  6F64               	movwf	send_lcd_cmd_long@cmd& (0+255),b
 12579                           
 12580                           ;eadog.c: 117: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 118: {;eadog.c:
      +                           119:  do { LATCbits.LATC2 = 0; } while(0);
 12581  01466C  94BC               	bcf	188,2,c	;volatile
 12582                           
 12583                           ;eadog.c: 120:  SPI1_ExchangeByte(0xFE);
 12584  01466E  0EFE               	movlw	254
 12585  014670  EC6A  F0A6         	call	_SPI1_ExchangeByte
 12586                           
 12587                           ; BSR set to: 61
 12588                           ;eadog.c: 121:  wdtdelay(8);
 12589  014674  0E08               	movlw	8
 12590  014676  0100               	movlb	0	; () banked
 12591  014678  6F60               	movwf	wdtdelay@delay& (0+255),b
 12592  01467A  0E00               	movlw	0
 12593  01467C  6F61               	movwf	(wdtdelay@delay+1)& (0+255),b
 12594  01467E  0E00               	movlw	0
 12595  014680  6F62               	movwf	(wdtdelay@delay+2)& (0+255),b
 12596  014682  0E00               	movlw	0
 12597  014684  6F63               	movwf	(wdtdelay@delay+3)& (0+255),b
 12598  014686  ECE2  F0A1         	call	_wdtdelay	;wreg free
 12599                           
 12600                           ; BSR set to: 0
 12601                           ;eadog.c: 122:  SPI1_ExchangeByte(cmd);
 12602  01468A  5164               	movf	send_lcd_cmd_long@cmd& (0+255),w,b
 12603  01468C  EC6A  F0A6         	call	_SPI1_ExchangeByte
 12604                           
 12605                           ;eadog.c: 123:  wdtdelay(800);
 12606  014690  0E20               	movlw	32
 12607  014692  0100               	movlb	0	; () banked
 12608  014694  6F60               	movwf	wdtdelay@delay& (0+255),b
 12609  014696  0E03               	movlw	3
 12610  014698  6F61               	movwf	(wdtdelay@delay+1)& (0+255),b
 12611  01469A  0E00               	movlw	0
 12612  01469C  6F62               	movwf	(wdtdelay@delay+2)& (0+255),b
 12613  01469E  0E00               	movlw	0
 12614  0146A0  6F63               	movwf	(wdtdelay@delay+3)& (0+255),b
 12615  0146A2  ECE2  F0A1         	call	_wdtdelay	;wreg free
 12616                           
 12617                           ; BSR set to: 0
 12618  0146A6  0012               	return		;funcret
 12619  0146A8                     __end_of_send_lcd_cmd_long:
 12620                           	callstack 0
 12621                           
 12622 ;; *************** function _send_lcd_cmd *****************
 12623 ;; Defined at:
 12624 ;;		line 108 in file "eadog.c"
 12625 ;; Parameters:    Size  Location     Type
 12626 ;;  cmd             1    wreg     const unsigned char 
 12627 ;; Auto vars:     Size  Location     Type
 12628 ;;  cmd             1    4[BANK0 ] const unsigned char 
 12629 ;; Return value:  Size  Location     Type
 12630 ;;                  1    wreg      void 
 12631 ;; Registers used:
 12632 ;;		wreg, status,2, status,0, cstack
 12633 ;; Tracked objects:
 12634 ;;		On entry : 3F/0
 12635 ;;		On exit  : 3F/0
 12636 ;;		Unchanged: 0/0
 12637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12639 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12641 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12642 ;;Total ram usage:        1 bytes
 12643 ;; Hardware stack levels used: 1
 12644 ;; Hardware stack levels required when called: 8
 12645 ;; This function calls:
 12646 ;;		_SPI1_ExchangeByte
 12647 ;;		_wdtdelay
 12648 ;; This function is called by:
 12649 ;;		_init_display
 12650 ;; This function uses a non-reentrant model
 12651 ;;
 12652                           
 12653                           	psect	text35
 12654  0146A8                     __ptext35:
 12655                           	callstack 0
 12656  0146A8                     _send_lcd_cmd:
 12657                           	callstack 21
 12658                           
 12659                           ; BSR set to: 0
 12660                           ;incstack = 0
 12661                           ;send_lcd_cmd@cmd stored from wreg
 12662  0146A8  6F64               	movwf	send_lcd_cmd@cmd& (0+255),b
 12663                           
 12664                           ;eadog.c: 108: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 109: {;eadog.c: 110:
      +                            do { LATCbits.LATC2 = 0; } while(0);
 12665  0146AA  94BC               	bcf	188,2,c	;volatile
 12666                           
 12667                           ;eadog.c: 111:  SPI1_ExchangeByte(0xFE);
 12668  0146AC  0EFE               	movlw	254
 12669  0146AE  EC6A  F0A6         	call	_SPI1_ExchangeByte
 12670                           
 12671                           ; BSR set to: 61
 12672                           ;eadog.c: 112:  wdtdelay(8);
 12673  0146B2  0E08               	movlw	8
 12674  0146B4  0100               	movlb	0	; () banked
 12675  0146B6  6F60               	movwf	wdtdelay@delay& (0+255),b
 12676  0146B8  0E00               	movlw	0
 12677  0146BA  6F61               	movwf	(wdtdelay@delay+1)& (0+255),b
 12678  0146BC  0E00               	movlw	0
 12679  0146BE  6F62               	movwf	(wdtdelay@delay+2)& (0+255),b
 12680  0146C0  0E00               	movlw	0
 12681  0146C2  6F63               	movwf	(wdtdelay@delay+3)& (0+255),b
 12682  0146C4  ECE2  F0A1         	call	_wdtdelay	;wreg free
 12683                           
 12684                           ; BSR set to: 0
 12685                           ;eadog.c: 113:  SPI1_ExchangeByte(cmd);
 12686  0146C8  5164               	movf	send_lcd_cmd@cmd& (0+255),w,b
 12687  0146CA  EC6A  F0A6         	call	_SPI1_ExchangeByte
 12688                           
 12689                           ;eadog.c: 114:  wdtdelay(8);
 12690  0146CE  0E08               	movlw	8
 12691  0146D0  0100               	movlb	0	; () banked
 12692  0146D2  6F60               	movwf	wdtdelay@delay& (0+255),b
 12693  0146D4  0E00               	movlw	0
 12694  0146D6  6F61               	movwf	(wdtdelay@delay+1)& (0+255),b
 12695  0146D8  0E00               	movlw	0
 12696  0146DA  6F62               	movwf	(wdtdelay@delay+2)& (0+255),b
 12697  0146DC  0E00               	movlw	0
 12698  0146DE  6F63               	movwf	(wdtdelay@delay+3)& (0+255),b
 12699  0146E0  ECE2  F0A1         	call	_wdtdelay	;wreg free
 12700                           
 12701                           ; BSR set to: 0
 12702  0146E4  0012               	return		;funcret
 12703  0146E6                     __end_of_send_lcd_cmd:
 12704                           	callstack 0
 12705                           
 12706 ;; *************** function _wdtdelay *****************
 12707 ;; Defined at:
 12708 ;;		line 17 in file "eadog.c"
 12709 ;; Parameters:    Size  Location     Type
 12710 ;;  delay           4    0[BANK0 ] const unsigned long 
 12711 ;; Auto vars:     Size  Location     Type
 12712 ;;		None
 12713 ;; Return value:  Size  Location     Type
 12714 ;;                  1    wreg      void 
 12715 ;; Registers used:
 12716 ;;		wreg, status,2, status,0
 12717 ;; Tracked objects:
 12718 ;;		On entry : 3F/0
 12719 ;;		On exit  : 3F/0
 12720 ;;		Unchanged: 0/0
 12721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12722 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12725 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12726 ;;Total ram usage:        4 bytes
 12727 ;; Hardware stack levels used: 1
 12728 ;; Hardware stack levels required when called: 7
 12729 ;; This function calls:
 12730 ;;		Nothing
 12731 ;; This function is called by:
 12732 ;;		_init_display
 12733 ;;		_send_lcd_data
 12734 ;;		_send_lcd_cmd
 12735 ;;		_send_lcd_cmd_long
 12736 ;; This function uses a non-reentrant model
 12737 ;;
 12738                           
 12739                           	psect	text36
 12740  0143C4                     __ptext36:
 12741                           	callstack 0
 12742  0143C4                     _wdtdelay:
 12743                           	callstack 22
 12744                           
 12745                           ; BSR set to: 0
 12746                           ;eadog.c: 17: void wdtdelay(const uint32_t delay);eadog.c: 18: {;eadog.c: 19:  static ui
      +                          nt32_t dcount;;eadog.c: 21:  for (dcount = 0; dcount <= delay; dcount++) {
 12747                           
 12748                           ; BSR set to: 0
 12749                           ;incstack = 0
 12750  0143C4  0E00               	movlw	0
 12751  0143C6  0101               	movlb	1	; () banked
 12752  0143C8  6F20               	movwf	wdtdelay@dcount& (0+255),b
 12753  0143CA  0E00               	movlw	0
 12754  0143CC  6F21               	movwf	(wdtdelay@dcount+1)& (0+255),b
 12755  0143CE  0E00               	movlw	0
 12756  0143D0  6F22               	movwf	(wdtdelay@dcount+2)& (0+255),b
 12757  0143D2  0E00               	movlw	0
 12758  0143D4  6F23               	movwf	(wdtdelay@dcount+3)& (0+255),b
 12759  0143D6                     l1658:
 12760                           
 12761                           ;eadog.c: 22:   __nop();
 12762  0143D6  F000               	nop	
 12763  0143D8  0004               	clrwdt		;# 
 12764                           
 12765                           ;eadog.c: 24:  };
 12766  0143DA  0E01               	movlw	1
 12767  0143DC  0101               	movlb	1	; () banked
 12768  0143DE  2720               	addwf	wdtdelay@dcount& (0+255),f,b
 12769  0143E0  0E00               	movlw	0
 12770  0143E2  2321               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
 12771  0143E4  2322               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
 12772  0143E6  2323               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
 12773  0143E8  5120               	movf	wdtdelay@dcount& (0+255),w,b
 12774  0143EA  0100               	movlb	0	; () banked
 12775  0143EC  5D60               	subwf	wdtdelay@delay& (0+255),w,b
 12776  0143EE  0101               	movlb	1	; () banked
 12777  0143F0  5121               	movf	(wdtdelay@dcount+1)& (0+255),w,b
 12778  0143F2  0100               	movlb	0	; () banked
 12779  0143F4  5961               	subwfb	(wdtdelay@delay+1)& (0+255),w,b
 12780  0143F6  0101               	movlb	1	; () banked
 12781  0143F8  5122               	movf	(wdtdelay@dcount+2)& (0+255),w,b
 12782  0143FA  0100               	movlb	0	; () banked
 12783  0143FC  5962               	subwfb	(wdtdelay@delay+2)& (0+255),w,b
 12784  0143FE  0101               	movlb	1	; () banked
 12785  014400  5123               	movf	(wdtdelay@dcount+3)& (0+255),w,b
 12786  014402  0100               	movlb	0	; () banked
 12787  014404  5963               	subwfb	(wdtdelay@delay+3)& (0+255),w,b
 12788  014406  A0D8               	btfss	status,0,c
 12789  014408  0012               	return	
 12790  01440A  D7E5               	goto	l1658
 12791  01440C                     __end_of_wdtdelay:
 12792                           	callstack 0
 12793                           
 12794 ;; *************** function _SPI1_ExchangeByte *****************
 12795 ;; Defined at:
 12796 ;;		line 100 in file "mcc_generated_files/spi1.c"
 12797 ;; Parameters:    Size  Location     Type
 12798 ;;  data            1    wreg     unsigned char 
 12799 ;; Auto vars:     Size  Location     Type
 12800 ;;  data            1   31[COMRAM] unsigned char 
 12801 ;; Return value:  Size  Location     Type
 12802 ;;                  1    wreg      unsigned char 
 12803 ;; Registers used:
 12804 ;;		wreg, status,2
 12805 ;; Tracked objects:
 12806 ;;		On entry : 0/0
 12807 ;;		On exit  : 3F/3D
 12808 ;;		Unchanged: 0/0
 12809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12811 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12813 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12814 ;;Total ram usage:        1 bytes
 12815 ;; Hardware stack levels used: 1
 12816 ;; Hardware stack levels required when called: 7
 12817 ;; This function calls:
 12818 ;;		Nothing
 12819 ;; This function is called by:
 12820 ;;		_send_lcd_data
 12821 ;;		_send_lcd_cmd
 12822 ;;		_send_lcd_cmd_long
 12823 ;; This function uses a non-reentrant model
 12824 ;;
 12825                           
 12826                           	psect	text37
 12827  014CD4                     __ptext37:
 12828                           	callstack 0
 12829  014CD4                     _SPI1_ExchangeByte:
 12830                           	callstack 21
 12831                           
 12832                           ; BSR set to: 0
 12833                           ;incstack = 0
 12834                           ;SPI1_ExchangeByte@data stored from wreg
 12835  014CD4  6E20               	movwf	SPI1_ExchangeByte@data^0,c
 12836                           
 12837                           ;mcc_generated_files/spi1.c: 100: uint8_t SPI1_ExchangeByte(uint8_t data);mcc_generated_
      +                          files/spi1.c: 101: {;mcc_generated_files/spi1.c: 102:     SPI1TCNTL = 1;
 12838  014CD6  0E01               	movlw	1
 12839  014CD8  013D               	movlb	61	; () banked
 12840  014CDA  6F12               	movwf	18,b	;volatile
 12841                           
 12842                           ; BSR set to: 61
 12843                           ;mcc_generated_files/spi1.c: 103:     SPI1TXB = data;
 12844  014CDC  0060  F083  FD11   	movff	SPI1_ExchangeByte@data,15633	;volatile
 12845  014CE2                     l636:
 12846  014CE2  0139               	movlb	57	; () banked
 12847  014CE4  A9A2               	btfss	162,4,b	;volatile
 12848  014CE6  D7FD               	goto	l636
 12849                           
 12850                           ; BSR set to: 57
 12851                           ;mcc_generated_files/spi1.c: 105:     return SPI1RXB;
 12852  014CE8  013D               	movlb	61	; () banked
 12853  014CEA  5110               	movf	16,w,b	;volatile
 12854                           
 12855                           ; BSR set to: 61
 12856  014CEC  0012               	return		;funcret
 12857  014CEE                     __end_of_SPI1_ExchangeByte:
 12858                           	callstack 0
 12859                           
 12860 ;; *************** function _ringBufS_init *****************
 12861 ;; Defined at:
 12862 ;;		line 22 in file "ringbufs.c"
 12863 ;; Parameters:    Size  Location     Type
 12864 ;;  _this           2   12[BANK0 ] PTR volatile struct ring
 12865 ;;		 -> ring_buf1(67), 
 12866 ;; Auto vars:     Size  Location     Type
 12867 ;;		None
 12868 ;; Return value:  Size  Location     Type
 12869 ;;                  1    wreg      void 
 12870 ;; Registers used:
 12871 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12872 ;; Tracked objects:
 12873 ;;		On entry : 3F/1
 12874 ;;		On exit  : 3F/0
 12875 ;;		Unchanged: 0/0
 12876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12877 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12880 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12881 ;;Total ram usage:        2 bytes
 12882 ;; Hardware stack levels used: 1
 12883 ;; Hardware stack levels required when called: 8
 12884 ;; This function calls:
 12885 ;;		_memset
 12886 ;; This function is called by:
 12887 ;;		_init_display
 12888 ;; This function uses a non-reentrant model
 12889 ;;
 12890                           
 12891                           	psect	text38
 12892  014C00                     __ptext38:
 12893                           	callstack 0
 12894  014C00                     _ringBufS_init:
 12895                           	callstack 21
 12896                           
 12897                           ; BSR set to: 1
 12898                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*) _this, 0, sizeof(*_this));
 12899                           
 12900                           ; BSR set to: 61
 12901                           ;incstack = 0
 12902  014C00  C06C  F060         	movff	ringBufS_init@_this,memset@dest
 12903  014C04  C06D  F061         	movff	ringBufS_init@_this+1,memset@dest+1
 12904  014C08  0E00               	movlw	0
 12905  014C0A  0100               	movlb	0	; () banked
 12906  014C0C  6F63               	movwf	(memset@c+1)& (0+255),b
 12907  014C0E  0E00               	movlw	0
 12908  014C10  6F62               	movwf	memset@c& (0+255),b
 12909  014C12  0E00               	movlw	0
 12910  014C14  6F65               	movwf	(memset@n+1)& (0+255),b
 12911  014C16  0E43               	movlw	67
 12912  014C18  6F64               	movwf	memset@n& (0+255),b
 12913  014C1A  ECF0  F095         	call	_memset	;wreg free
 12914                           
 12915                           ; BSR set to: 0
 12916  014C1E  0012               	return		;funcret
 12917  014C20                     __end_of_ringBufS_init:
 12918                           	callstack 0
 12919                           
 12920 ;; *************** function _eaDogM_WriteStringAtPos *****************
 12921 ;; Defined at:
 12922 ;;		line 191 in file "eadog.c"
 12923 ;; Parameters:    Size  Location     Type
 12924 ;;  r               1    wreg     const unsigned char 
 12925 ;;  c               1   19[BANK0 ] const unsigned char 
 12926 ;;  strPtr          2   20[BANK0 ] PTR unsigned char 
 12927 ;;		 -> buff1(255), 
 12928 ;; Auto vars:     Size  Location     Type
 12929 ;;  r               1   24[BANK0 ] const unsigned char 
 12930 ;;  row             1   25[BANK0 ] unsigned char 
 12931 ;; Return value:  Size  Location     Type
 12932 ;;                  1    wreg      void 
 12933 ;; Registers used:
 12934 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12935 ;; Tracked objects:
 12936 ;;		On entry : 3F/0
 12937 ;;		On exit  : 3F/3B
 12938 ;;		Unchanged: 0/0
 12939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12940 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12941 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12942 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12943 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12944 ;;Total ram usage:        7 bytes
 12945 ;; Hardware stack levels used: 1
 12946 ;; Hardware stack levels required when called: 11
 12947 ;; This function calls:
 12948 ;;		_eaDogM_WriteString
 12949 ;;		_send_lcd_cmd_dma
 12950 ;;		_send_lcd_data_dma
 12951 ;;		_wait_lcd_done
 12952 ;; This function is called by:
 12953 ;;		_main
 12954 ;; This function uses a non-reentrant model
 12955 ;;
 12956                           
 12957                           	psect	text39
 12958  013EC6                     __ptext39:
 12959                           	callstack 0
 12960  013EC6                     _eaDogM_WriteStringAtPos:
 12961                           	callstack 19
 12962                           
 12963                           ; BSR set to: 0
 12964                           ;incstack = 0
 12965                           ;eaDogM_WriteStringAtPos@r stored from wreg
 12966  013EC6  6F78               	movwf	eaDogM_WriteStringAtPos@r& (0+255),b
 12967                           
 12968                           ;eadog.c: 191: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 192: {;eadog.c: 193:  uint8_t row;;eadog.c: 195:  switch (r) {
 12969  013EC8  D009               	goto	l13039
 12970  013ECA                     l13027:
 12971                           
 12972                           ; BSR set to: 0
 12973                           ;eadog.c: 197:   row = 0x40;
 12974  013ECA  0E40               	movlw	64
 12975  013ECC  D005               	goto	L16
 12976  013ECE                     l13029:
 12977                           
 12978                           ; BSR set to: 0
 12979                           ;eadog.c: 200:   row = 0x14;
 12980  013ECE  0E14               	movlw	20
 12981  013ED0  D003               	goto	L16
 12982  013ED2                     l13031:
 12983                           
 12984                           ; BSR set to: 0
 12985                           ;eadog.c: 203:   row = 0x54;
 12986  013ED2  0E54               	movlw	84
 12987  013ED4  D001               	goto	L16
 12988  013ED6                     l13033:
 12989                           
 12990                           ; BSR set to: 0
 12991                           ;eadog.c: 206:   row = 0x00;
 12992  013ED6  0E00               	movlw	0
 12993  013ED8                     L16:
 12994  013ED8  6F79               	movwf	eaDogM_WriteStringAtPos@row& (0+255),b
 12995                           
 12996                           ;eadog.c: 207:   break;
 12997  013EDA  D016               	goto	l13041
 12998  013EDC                     l13039:
 12999  013EDC  0100               	movlb	0	; () banked
 13000  013EDE  5178               	movf	eaDogM_WriteStringAtPos@r& (0+255),w,b
 13001  013EE0  6F76               	movwf	??_eaDogM_WriteStringAtPos& (0+255),b
 13002  013EE2  6B77               	clrf	(??_eaDogM_WriteStringAtPos+1)& (0+255),b
 13003                           
 13004                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13005                           ; Switch size 1, requested type "simple"
 13006                           ; Number of cases is 1, Range of values is 0 to 0
 13007                           ; switch strategies available:
 13008                           ; Name         Instructions Cycles
 13009                           ; simple_byte            4     3 (average)
 13010                           ;	Chosen strategy is simple_byte
 13011  013EE4  5177               	movf	(??_eaDogM_WriteStringAtPos+1)& (0+255),w,b
 13012  013EE6  0A00               	xorlw	0	; case 0
 13013  013EE8  A4D8               	btfss	status,2,c
 13014  013EEA  D7F5               	goto	l13033
 13015                           
 13016                           ; BSR set to: 0
 13017                           ; Switch size 1, requested type "simple"
 13018                           ; Number of cases is 4, Range of values is 0 to 3
 13019                           ; switch strategies available:
 13020                           ; Name         Instructions Cycles
 13021                           ; simple_byte           13     7 (average)
 13022                           ;	Chosen strategy is simple_byte
 13023  013EEC  5176               	movf	??_eaDogM_WriteStringAtPos& (0+255),w,b
 13024  013EEE  0A00               	xorlw	0	; case 0
 13025  013EF0  B4D8               	btfsc	status,2,c
 13026  013EF2  D7F1               	goto	l13033
 13027  013EF4  0A01               	xorlw	1	; case 1
 13028  013EF6  B4D8               	btfsc	status,2,c
 13029  013EF8  D7E8               	goto	l13027
 13030  013EFA  0A03               	xorlw	3	; case 2
 13031  013EFC  B4D8               	btfsc	status,2,c
 13032  013EFE  D7E7               	goto	l13029
 13033  013F00  0A01               	xorlw	1	; case 3
 13034  013F02  B4D8               	btfsc	status,2,c
 13035  013F04  D7E6               	goto	l13031
 13036  013F06  D7E7               	goto	l13033
 13037  013F08                     l13041:
 13038                           
 13039                           ; BSR set to: 0
 13040                           ;eadog.c: 212:  send_lcd_cmd_dma(0x45);
 13041  013F08  0E45               	movlw	69
 13042  013F0A  EC20  F0A6         	call	_send_lcd_cmd_dma
 13043                           
 13044                           ;eadog.c: 213:  send_lcd_data_dma(row + c);
 13045  013F0E  0100               	movlb	0	; () banked
 13046  013F10  5179               	movf	eaDogM_WriteStringAtPos@row& (0+255),w,b
 13047  013F12  2573               	addwf	eaDogM_WriteStringAtPos@c& (0+255),w,b
 13048  013F14  ECF5  F0A2         	call	_send_lcd_data_dma
 13049                           
 13050                           ; BSR set to: 59
 13051                           ;eadog.c: 214:  wait_lcd_done();
 13052  013F18  ECFA  F0A6         	call	_wait_lcd_done	;wreg free
 13053                           
 13054                           ; BSR set to: 61
 13055                           ;eadog.c: 215:  eaDogM_WriteString(strPtr);
 13056  013F1C  C074  F070         	movff	eaDogM_WriteStringAtPos@strPtr,eaDogM_WriteString@strPtr
 13057  013F20  C075  F071         	movff	eaDogM_WriteStringAtPos@strPtr+1,eaDogM_WriteString@strPtr+1
 13058  013F24  ECF7  F09E         	call	_eaDogM_WriteString	;wreg free
 13059                           
 13060                           ; BSR set to: 59
 13061  013F28  0012               	return		;funcret
 13062  013F2A                     __end_of_eaDogM_WriteStringAtPos:
 13063                           	callstack 0
 13064                           
 13065 ;; *************** function _eaDogM_WriteString *****************
 13066 ;; Defined at:
 13067 ;;		line 129 in file "eadog.c"
 13068 ;; Parameters:    Size  Location     Type
 13069 ;;  strPtr          2   16[BANK0 ] PTR unsigned char 
 13070 ;;		 -> buff1(255), 
 13071 ;; Auto vars:     Size  Location     Type
 13072 ;;  len             1   18[BANK0 ] unsigned char 
 13073 ;; Return value:  Size  Location     Type
 13074 ;;                  1    wreg      void 
 13075 ;; Registers used:
 13076 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13077 ;; Tracked objects:
 13078 ;;		On entry : 3F/3D
 13079 ;;		On exit  : 3F/3B
 13080 ;;		Unchanged: 0/0
 13081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13082 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13083 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13085 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13086 ;;Total ram usage:        3 bytes
 13087 ;; Hardware stack levels used: 1
 13088 ;; Hardware stack levels required when called: 9
 13089 ;; This function calls:
 13090 ;;		_ringBufS_flush
 13091 ;;		_ringBufS_put_dma_cpy
 13092 ;;		_start_lcd
 13093 ;;		_strlen
 13094 ;;		_wait_lcd_set
 13095 ;; This function is called by:
 13096 ;;		_eaDogM_WriteStringAtPos
 13097 ;; This function uses a non-reentrant model
 13098 ;;
 13099                           
 13100                           	psect	text40
 13101  013DEE                     __ptext40:
 13102                           	callstack 0
 13103  013DEE                     _eaDogM_WriteString:
 13104                           	callstack 20
 13105                           
 13106                           ; BSR set to: 61
 13107                           ;eadog.c: 129: void eaDogM_WriteString(char *strPtr);eadog.c: 130: {;eadog.c: 131:  uint
      +                          8_t len = (uint8_t) strlen(strPtr);
 13108                           
 13109                           ; BSR set to: 59
 13110                           ;incstack = 0
 13111  013DEE  C070  F060         	movff	eaDogM_WriteString@strPtr,strlen@s
 13112  013DF2  C071  F061         	movff	eaDogM_WriteString@strPtr+1,strlen@s+1
 13113  013DF6  ECF9  F0A0         	call	_strlen	;wreg free
 13114  013DFA  5160               	movf	?_strlen& (0+255),w,b
 13115  013DFC  6F72               	movwf	eaDogM_WriteString@len& (0+255),b
 13116                           
 13117                           ; BSR set to: 0
 13118                           ;eadog.c: 136:  wait_lcd_set();
 13119  013DFE  EC7E  F0A7         	call	_wait_lcd_set	;wreg free
 13120                           
 13121                           ; BSR set to: 1
 13122                           ;eadog.c: 138:  ringBufS_flush(spi_link.tx1a, 0);
 13123  013E02  C106  F06C         	movff	_spi_link+6,ringBufS_flush@_this	;volatile
 13124  013E06  C107  F06D         	movff	_spi_link+7,ringBufS_flush@_this+1	;volatile
 13125  013E0A  0E00               	movlw	0
 13126  013E0C  0100               	movlb	0	; () banked
 13127  013E0E  6F6E               	movwf	ringBufS_flush@clearBuffer& (0+255),b
 13128  013E10  ECA6  F0A0         	call	_ringBufS_flush	;wreg free
 13129                           
 13130                           ; BSR set to: 0
 13131  013E14  94BC               	bcf	188,2,c	;volatile
 13132                           
 13133                           ; BSR set to: 0
 13134                           ;eadog.c: 140:  if (len > 64) {
 13135  013E16  0E40               	movlw	64
 13136  013E18  6572               	cpfsgt	eaDogM_WriteString@len& (0+255),b
 13137  013E1A  D00A               	goto	l12881
 13138                           
 13139                           ; BSR set to: 0
 13140                           ;eadog.c: 141:   strPtr[64] = 0;
 13141  013E1C  EE20 F040          	lfsr	2,64
 13142  013E20  5170               	movf	eaDogM_WriteString@strPtr& (0+255),w,b
 13143  013E22  26D9               	addwf	fsr2l,f,c
 13144  013E24  5171               	movf	(eaDogM_WriteString@strPtr+1)& (0+255),w,b
 13145  013E26  22DA               	addwfc	fsr2h,f,c
 13146  013E28  0E00               	movlw	0
 13147  013E2A  6EDF               	movwf	indf2,c
 13148                           
 13149                           ; BSR set to: 0
 13150                           ;eadog.c: 142:   len = 64;
 13151  013E2C  0E40               	movlw	64
 13152  013E2E  6F72               	movwf	eaDogM_WriteString@len& (0+255),b
 13153  013E30                     l12881:
 13154                           
 13155                           ; BSR set to: 0
 13156                           ;eadog.c: 144:  DMA1CON0bits.EN = 0;
 13157  013E30  013B               	movlb	59	; () banked
 13158  013E32  9FFC               	bcf	252,7,b	;volatile
 13159                           
 13160                           ; BSR set to: 59
 13161                           ;eadog.c: 145:  DMA1SSZ = len;
 13162  013E34  0060  F1CB  FBF7   	movff	eaDogM_WriteString@len,15351	;volatile
 13163  013E3A  6BF8               	clrf	248,b	;volatile
 13164                           
 13165                           ; BSR set to: 59
 13166                           ;eadog.c: 146:  DMA1CON0bits.EN = 1;
 13167  013E3C  8FFC               	bsf	252,7,b	;volatile
 13168                           
 13169                           ; BSR set to: 59
 13170                           ;eadog.c: 147:  ringBufS_put_dma_cpy(spi_link.tx1a, strPtr, len);
 13171  013E3E  C106  F06B         	movff	_spi_link+6,ringBufS_put_dma_cpy@_this	;volatile
 13172  013E42  C107  F06C         	movff	_spi_link+7,ringBufS_put_dma_cpy@_this+1	;volatile
 13173  013E46  C070  F06D         	movff	eaDogM_WriteString@strPtr,ringBufS_put_dma_cpy@ptr
 13174  013E4A  C071  F06E         	movff	eaDogM_WriteString@strPtr+1,ringBufS_put_dma_cpy@ptr+1
 13175  013E4E  C072  F06F         	movff	eaDogM_WriteString@len,ringBufS_put_dma_cpy@len
 13176  013E52  EC52  F0A0         	call	_ringBufS_put_dma_cpy	;wreg free
 13177                           
 13178                           ; BSR set to: 0
 13179                           ;eadog.c: 148:  start_lcd();
 13180  013E56  EC81  F0A7         	call	_start_lcd	;wreg free
 13181                           
 13182                           ; BSR set to: 59
 13183  013E5A  0012               	return		;funcret
 13184  013E5C                     __end_of_eaDogM_WriteString:
 13185                           	callstack 0
 13186                           
 13187 ;; *************** function _ringBufS_put_dma_cpy *****************
 13188 ;; Defined at:
 13189 ;;		line 76 in file "ringbufs.c"
 13190 ;; Parameters:    Size  Location     Type
 13191 ;;  _this           2   11[BANK0 ] PTR struct ringBufS_t
 13192 ;;		 -> ring_buf1(67), 
 13193 ;;  ptr             2   13[BANK0 ] PTR const unsigned char 
 13194 ;;		 -> buff1(255), 
 13195 ;;  len             1   15[BANK0 ] const unsigned char 
 13196 ;; Auto vars:     Size  Location     Type
 13197 ;;		None
 13198 ;; Return value:  Size  Location     Type
 13199 ;;                  1    wreg      void 
 13200 ;; Registers used:
 13201 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13202 ;; Tracked objects:
 13203 ;;		On entry : 3F/3B
 13204 ;;		On exit  : 3F/0
 13205 ;;		Unchanged: 0/0
 13206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13207 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13209 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13210 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13211 ;;Total ram usage:        6 bytes
 13212 ;; Hardware stack levels used: 1
 13213 ;; Hardware stack levels required when called: 8
 13214 ;; This function calls:
 13215 ;;		_memcpy
 13216 ;; This function is called by:
 13217 ;;		_eaDogM_WriteString
 13218 ;; This function uses a non-reentrant model
 13219 ;;
 13220                           
 13221                           	psect	text41
 13222  0140A4                     __ptext41:
 13223                           	callstack 0
 13224  0140A4                     _ringBufS_put_dma_cpy:
 13225                           	callstack 20
 13226                           
 13227                           ; BSR set to: 59
 13228                           ;ringbufs.c: 76: void ringBufS_put_dma_cpy(ringBufS_t *_this, const char *ptr, const uin
      +                          t8_t len);ringbufs.c: 77: {;ringbufs.c: 78:  if (_this->count < 64) {
 13229                           
 13230                           ; BSR set to: 59
 13231                           ;incstack = 0
 13232  0140A4  0100               	movlb	0	; () banked
 13233  0140A6  EE20 F042          	lfsr	2,66
 13234  0140AA  516B               	movf	ringBufS_put_dma_cpy@_this& (0+255),w,b
 13235  0140AC  26D9               	addwf	fsr2l,f,c
 13236  0140AE  516C               	movf	(ringBufS_put_dma_cpy@_this+1)& (0+255),w,b
 13237  0140B0  22DA               	addwfc	fsr2h,f,c
 13238  0140B2  0E40               	movlw	64
 13239  0140B4  60DF               	cpfslt	indf2,c
 13240  0140B6  0012               	return	
 13241                           
 13242                           ; BSR set to: 0
 13243                           ;ringbufs.c: 79:   memcpy(_this->buf, ptr, len);
 13244  0140B8  C06B  F060         	movff	ringBufS_put_dma_cpy@_this,memcpy@d1
 13245  0140BC  C06C  F061         	movff	ringBufS_put_dma_cpy@_this+1,memcpy@d1+1
 13246  0140C0  C06D  F062         	movff	ringBufS_put_dma_cpy@ptr,memcpy@s1
 13247  0140C4  C06E  F063         	movff	ringBufS_put_dma_cpy@ptr+1,memcpy@s1+1
 13248  0140C8  C06F  F064         	movff	ringBufS_put_dma_cpy@len,memcpy@n
 13249  0140CC  6B65               	clrf	(memcpy@n+1)& (0+255),b
 13250  0140CE  EC48  F0A1         	call	_memcpy	;wreg free
 13251                           
 13252                           ; BSR set to: 0
 13253                           ;ringbufs.c: 80:   _this->head = len;
 13254  0140D2  EE20 F040          	lfsr	2,64
 13255  0140D6  516B               	movf	ringBufS_put_dma_cpy@_this& (0+255),w,b
 13256  0140D8  26D9               	addwf	fsr2l,f,c
 13257  0140DA  516C               	movf	(ringBufS_put_dma_cpy@_this+1)& (0+255),w,b
 13258  0140DC  22DA               	addwfc	fsr2h,f,c
 13259  0140DE  0060  F1BF  FFDF   	movff	ringBufS_put_dma_cpy@len,indf2
 13260                           
 13261                           ; BSR set to: 0
 13262                           ;ringbufs.c: 81:   _this->count = len;
 13263  0140E4  EE20 F042          	lfsr	2,66
 13264  0140E8  516B               	movf	ringBufS_put_dma_cpy@_this& (0+255),w,b
 13265  0140EA  26D9               	addwf	fsr2l,f,c
 13266  0140EC  516C               	movf	(ringBufS_put_dma_cpy@_this+1)& (0+255),w,b
 13267  0140EE  22DA               	addwfc	fsr2h,f,c
 13268  0140F0  0060  F1BF  FFDF   	movff	ringBufS_put_dma_cpy@len,indf2
 13269                           
 13270                           ; BSR set to: 0
 13271  0140F6  0012               	return		;funcret
 13272  0140F8                     __end_of_ringBufS_put_dma_cpy:
 13273                           	callstack 0
 13274                           
 13275 ;; *************** function _memcpy *****************
 13276 ;; Defined at:
 13277 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/memcpy.c"
 13278 ;; Parameters:    Size  Location     Type
 13279 ;;  d1              2    0[BANK0 ] PTR void 
 13280 ;;		 -> ring_buf1(67), 
 13281 ;;  s1              2    2[BANK0 ] PTR const void 
 13282 ;;		 -> buff1(255), 
 13283 ;;  n               2    4[BANK0 ] unsigned int 
 13284 ;; Auto vars:     Size  Location     Type
 13285 ;;  s               2    9[BANK0 ] PTR const unsigned char 
 13286 ;;		 -> buff1(255), 
 13287 ;;  d               2    7[BANK0 ] PTR unsigned char 
 13288 ;;		 -> ring_buf1(67), 
 13289 ;;  tmp             1    6[BANK0 ] unsigned char 
 13290 ;; Return value:  Size  Location     Type
 13291 ;;                  2    0[BANK0 ] PTR void 
 13292 ;; Registers used:
 13293 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13294 ;; Tracked objects:
 13295 ;;		On entry : 3F/0
 13296 ;;		On exit  : 3F/0
 13297 ;;		Unchanged: 0/0
 13298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13299 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13300 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13302 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13303 ;;Total ram usage:       11 bytes
 13304 ;; Hardware stack levels used: 1
 13305 ;; Hardware stack levels required when called: 7
 13306 ;; This function calls:
 13307 ;;		Nothing
 13308 ;; This function is called by:
 13309 ;;		_ringBufS_put_dma_cpy
 13310 ;; This function uses a non-reentrant model
 13311 ;;
 13312                           
 13313                           	psect	text42
 13314  014290                     __ptext42:
 13315                           	callstack 0
 13316  014290                     _memcpy:
 13317                           	callstack 20
 13318                           
 13319                           ; BSR set to: 0
 13320                           
 13321                           ; BSR set to: 0
 13322                           ;incstack = 0
 13323  014290  C062  F069         	movff	memcpy@s1,memcpy@s
 13324  014294  C063  F06A         	movff	memcpy@s1+1,memcpy@s+1
 13325  014298  C060  F067         	movff	memcpy@d1,memcpy@d
 13326  01429C  C061  F068         	movff	memcpy@d1+1,memcpy@d+1
 13327  0142A0  D015               	goto	l11885
 13328  0142A2                     l11877:
 13329                           
 13330                           ; BSR set to: 0
 13331  0142A2  0060  F1A7  FFD9   	movff	memcpy@s,fsr2l
 13332  0142A8  0060  F1AB  FFDA   	movff	memcpy@s+1,fsr2h
 13333  0142AE  50DF               	movf	indf2,w,c
 13334  0142B0  6F66               	movwf	memcpy@tmp& (0+255),b
 13335                           
 13336                           ; BSR set to: 0
 13337  0142B2  4B69               	infsnz	memcpy@s& (0+255),f,b
 13338  0142B4  2B6A               	incf	(memcpy@s+1)& (0+255),f,b
 13339                           
 13340                           ; BSR set to: 0
 13341  0142B6  0060  F19F  FFD9   	movff	memcpy@d,fsr2l
 13342  0142BC  0060  F1A3  FFDA   	movff	memcpy@d+1,fsr2h
 13343  0142C2  0060  F19B  FFDF   	movff	memcpy@tmp,indf2
 13344                           
 13345                           ; BSR set to: 0
 13346  0142C8  4B67               	infsnz	memcpy@d& (0+255),f,b
 13347  0142CA  2B68               	incf	(memcpy@d+1)& (0+255),f,b
 13348  0142CC                     l11885:
 13349                           
 13350                           ; BSR set to: 0
 13351  0142CC  0764               	decf	memcpy@n& (0+255),f,b
 13352  0142CE  A0D8               	btfss	status,0,c
 13353  0142D0  0765               	decf	(memcpy@n+1)& (0+255),f,b
 13354  0142D2  2964               	incf	memcpy@n& (0+255),w,b
 13355  0142D4  E1E6               	bnz	l11877
 13356  0142D6  2965               	incf	(memcpy@n+1)& (0+255),w,b
 13357  0142D8  B4D8               	btfsc	status,2,c
 13358  0142DA  0012               	return	
 13359  0142DC  D7E2               	goto	l11877
 13360  0142DE                     __end_of_memcpy:
 13361                           	callstack 0
 13362                           
 13363 ;; *************** function _eaDogM_WriteCommand *****************
 13364 ;; Defined at:
 13365 ;;		line 239 in file "eadog.c"
 13366 ;; Parameters:    Size  Location     Type
 13367 ;;  cmd             1    wreg     const unsigned char 
 13368 ;; Auto vars:     Size  Location     Type
 13369 ;;  cmd             1   17[BANK0 ] const unsigned char 
 13370 ;; Return value:  Size  Location     Type
 13371 ;;                  1    wreg      void 
 13372 ;; Registers used:
 13373 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13374 ;; Tracked objects:
 13375 ;;		On entry : 3F/3D
 13376 ;;		On exit  : 3F/3D
 13377 ;;		Unchanged: 0/0
 13378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13380 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13382 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13383 ;;Total ram usage:        1 bytes
 13384 ;; Hardware stack levels used: 1
 13385 ;; Hardware stack levels required when called: 11
 13386 ;; This function calls:
 13387 ;;		_send_lcd_cmd_dma
 13388 ;; This function is called by:
 13389 ;;		_main
 13390 ;; This function uses a non-reentrant model
 13391 ;;
 13392                           
 13393                           	psect	text43
 13394  014DE6                     __ptext43:
 13395                           	callstack 0
 13396  014DE6                     _eaDogM_WriteCommand:
 13397                           	callstack 19
 13398                           
 13399                           ; BSR set to: 0
 13400                           ;incstack = 0
 13401                           ;eaDogM_WriteCommand@cmd stored from wreg
 13402  014DE6  0100               	movlb	0	; () banked
 13403  014DE8  6F71               	movwf	eaDogM_WriteCommand@cmd& (0+255),b
 13404                           
 13405                           ;eadog.c: 239: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 240: {;eadog.c: 241:
      +                            send_lcd_cmd_dma(cmd);
 13406  014DEA  0100               	movlb	0	; () banked
 13407  014DEC  5171               	movf	eaDogM_WriteCommand@cmd& (0+255),w,b
 13408  014DEE  EC20  F0A6         	call	_send_lcd_cmd_dma
 13409                           
 13410                           ; BSR set to: 61
 13411  014DF2  0012               	return		;funcret
 13412  014DF4                     __end_of_eaDogM_WriteCommand:
 13413                           	callstack 0
 13414                           
 13415 ;; *************** function _send_lcd_cmd_dma *****************
 13416 ;; Defined at:
 13417 ;;		line 160 in file "eadog.c"
 13418 ;; Parameters:    Size  Location     Type
 13419 ;;  strPtr          1    wreg     const unsigned char 
 13420 ;; Auto vars:     Size  Location     Type
 13421 ;;  strPtr          1   16[BANK0 ] const unsigned char 
 13422 ;; Return value:  Size  Location     Type
 13423 ;;                  1    wreg      void 
 13424 ;; Registers used:
 13425 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13426 ;; Tracked objects:
 13427 ;;		On entry : 3F/0
 13428 ;;		On exit  : 3F/3D
 13429 ;;		Unchanged: 0/0
 13430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13432 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13434 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13435 ;;Total ram usage:        1 bytes
 13436 ;; Hardware stack levels used: 1
 13437 ;; Hardware stack levels required when called: 10
 13438 ;; This function calls:
 13439 ;;		_send_lcd_data_dma
 13440 ;;		_wait_lcd_done
 13441 ;; This function is called by:
 13442 ;;		_eaDogM_WriteStringAtPos
 13443 ;;		_eaDogM_WriteCommand
 13444 ;; This function uses a non-reentrant model
 13445 ;;
 13446                           
 13447                           	psect	text44
 13448  014C40                     __ptext44:
 13449                           	callstack 0
 13450  014C40                     _send_lcd_cmd_dma:
 13451                           	callstack 19
 13452                           
 13453                           ; BSR set to: 61
 13454                           ;incstack = 0
 13455                           ;send_lcd_cmd_dma@strPtr stored from wreg
 13456  014C40  6F70               	movwf	send_lcd_cmd_dma@strPtr& (0+255),b
 13457                           
 13458                           ;eadog.c: 160: void send_lcd_cmd_dma(const uint8_t strPtr);eadog.c: 161: {;eadog.c: 162:
      +                            wait_lcd_done();
 13459  014C42  ECFA  F0A6         	call	_wait_lcd_done	;wreg free
 13460                           
 13461                           ; BSR set to: 61
 13462                           ;eadog.c: 163:  send_lcd_data_dma(0xFE);
 13463  014C46  0EFE               	movlw	254
 13464  014C48  ECF5  F0A2         	call	_send_lcd_data_dma
 13465                           
 13466                           ; BSR set to: 59
 13467                           ;eadog.c: 164:  wait_lcd_done();
 13468  014C4C  ECFA  F0A6         	call	_wait_lcd_done	;wreg free
 13469                           
 13470                           ;eadog.c: 165:  send_lcd_data_dma(strPtr);
 13471  014C50  0100               	movlb	0	; () banked
 13472  014C52  5170               	movf	send_lcd_cmd_dma@strPtr& (0+255),w,b
 13473  014C54  ECF5  F0A2         	call	_send_lcd_data_dma
 13474                           
 13475                           ; BSR set to: 59
 13476                           ;eadog.c: 166:  wait_lcd_done();
 13477  014C58  ECFA  F0A6         	call	_wait_lcd_done	;wreg free
 13478                           
 13479                           ; BSR set to: 61
 13480  014C5C  0012               	return		;funcret
 13481  014C5E                     __end_of_send_lcd_cmd_dma:
 13482                           	callstack 0
 13483                           
 13484 ;; *************** function _wait_lcd_done *****************
 13485 ;; Defined at:
 13486 ;;		line 298 in file "eadog.c"
 13487 ;; Parameters:    Size  Location     Type
 13488 ;;		None
 13489 ;; Auto vars:     Size  Location     Type
 13490 ;;		None
 13491 ;; Return value:  Size  Location     Type
 13492 ;;                  1    wreg      void 
 13493 ;; Registers used:
 13494 ;;		None
 13495 ;; Tracked objects:
 13496 ;;		On entry : 0/3B
 13497 ;;		On exit  : 3F/3D
 13498 ;;		Unchanged: 0/0
 13499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13504 ;;Total ram usage:        0 bytes
 13505 ;; Hardware stack levels used: 1
 13506 ;; Hardware stack levels required when called: 7
 13507 ;; This function calls:
 13508 ;;		Nothing
 13509 ;; This function is called by:
 13510 ;;		_send_lcd_cmd_dma
 13511 ;;		_eaDogM_WriteStringAtPos
 13512 ;; This function uses a non-reentrant model
 13513 ;;
 13514                           
 13515                           	psect	text45
 13516  014DF4                     __ptext45:
 13517                           	callstack 0
 13518  014DF4                     _wait_lcd_done:
 13519                           	callstack 22
 13520                           
 13521                           ;eadog.c: 300:  while (spi_link.LCD_DATA);
 13522                           
 13523                           ; BSR set to: 61
 13524                           ;incstack = 0
 13525  014DF4  0101               	movlb	1	; () banked
 13526  014DF6  B700               	btfsc	_spi_link& (0+255),3,b	;volatile
 13527  014DF8  D7FD               	goto	__ptext45
 13528  014DFA                     u12750:
 13529  014DFA  013D               	movlb	61	; () banked
 13530  014DFC  BB17               	btfsc	23,5,b	;volatile
 13531  014DFE  0012               	return	
 13532  014E00  D7FC               	goto	u12750
 13533  014E02                     __end_of_wait_lcd_done:
 13534                           	callstack 0
 13535                           
 13536 ;; *************** function _send_lcd_data_dma *****************
 13537 ;; Defined at:
 13538 ;;		line 172 in file "eadog.c"
 13539 ;; Parameters:    Size  Location     Type
 13540 ;;  strPtr          1    wreg     const unsigned char 
 13541 ;; Auto vars:     Size  Location     Type
 13542 ;;  strPtr          1   15[BANK0 ] const unsigned char 
 13543 ;; Return value:  Size  Location     Type
 13544 ;;                  1    wreg      void 
 13545 ;; Registers used:
 13546 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13547 ;; Tracked objects:
 13548 ;;		On entry : 2/0
 13549 ;;		On exit  : 3F/3B
 13550 ;;		Unchanged: 0/0
 13551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13553 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13555 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13556 ;;Total ram usage:        1 bytes
 13557 ;; Hardware stack levels used: 1
 13558 ;; Hardware stack levels required when called: 9
 13559 ;; This function calls:
 13560 ;;		_ringBufS_flush
 13561 ;;		_ringBufS_put_dma
 13562 ;;		_start_lcd
 13563 ;;		_wait_lcd_set
 13564 ;; This function is called by:
 13565 ;;		_send_lcd_cmd_dma
 13566 ;;		_eaDogM_WriteStringAtPos
 13567 ;; This function uses a non-reentrant model
 13568 ;;
 13569                           
 13570                           	psect	text46
 13571  0145EA                     __ptext46:
 13572                           	callstack 0
 13573  0145EA                     _send_lcd_data_dma:
 13574                           	callstack 20
 13575                           
 13576                           ; BSR set to: 61
 13577                           ;incstack = 0
 13578                           ;send_lcd_data_dma@strPtr stored from wreg
 13579  0145EA  0100               	movlb	0	; () banked
 13580  0145EC  6F6F               	movwf	send_lcd_data_dma@strPtr& (0+255),b
 13581                           
 13582                           ;eadog.c: 172: void send_lcd_data_dma(const uint8_t strPtr);eadog.c: 173: {;eadog.c: 177
      +                          :  wait_lcd_set();
 13583  0145EE  EC7E  F0A7         	call	_wait_lcd_set	;wreg free
 13584                           
 13585                           ; BSR set to: 1
 13586                           ;eadog.c: 179:  ringBufS_flush(spi_link.tx1a, 0);
 13587  0145F2  C106  F06C         	movff	_spi_link+6,ringBufS_flush@_this	;volatile
 13588  0145F6  C107  F06D         	movff	_spi_link+7,ringBufS_flush@_this+1	;volatile
 13589  0145FA  0E00               	movlw	0
 13590  0145FC  0100               	movlb	0	; () banked
 13591  0145FE  6F6E               	movwf	ringBufS_flush@clearBuffer& (0+255),b
 13592  014600  ECA6  F0A0         	call	_ringBufS_flush	;wreg free
 13593                           
 13594                           ; BSR set to: 0
 13595  014604  94BC               	bcf	188,2,c	;volatile
 13596                           
 13597                           ; BSR set to: 0
 13598                           ;eadog.c: 181:  DMA1CON0bits.EN = 0;
 13599  014606  013B               	movlb	59	; () banked
 13600  014608  9FFC               	bcf	252,7,b	;volatile
 13601                           
 13602                           ; BSR set to: 59
 13603                           ;eadog.c: 182:  DMA1SSZ = 1;
 13604  01460A  0E00               	movlw	0
 13605  01460C  6FF8               	movwf	248,b	;volatile
 13606  01460E  0E01               	movlw	1
 13607  014610  6FF7               	movwf	247,b	;volatile
 13608                           
 13609                           ; BSR set to: 59
 13610                           ;eadog.c: 183:  DMA1CON0bits.EN = 1;
 13611  014612  8FFC               	bsf	252,7,b	;volatile
 13612                           
 13613                           ; BSR set to: 59
 13614                           ;eadog.c: 184:  ringBufS_put_dma(spi_link.tx1a, strPtr);
 13615  014614  C106  F060         	movff	_spi_link+6,ringBufS_put_dma@_this	;volatile
 13616  014618  C107  F061         	movff	_spi_link+7,ringBufS_put_dma@_this+1	;volatile
 13617  01461C  C06F  F062         	movff	send_lcd_data_dma@strPtr,ringBufS_put_dma@c
 13618  014620  EC7C  F0A0         	call	_ringBufS_put_dma	;wreg free
 13619                           
 13620                           ; BSR set to: 0
 13621                           ;eadog.c: 185:  start_lcd();
 13622  014624  EC81  F0A7         	call	_start_lcd	;wreg free
 13623                           
 13624                           ; BSR set to: 59
 13625  014628  0012               	return		;funcret
 13626  01462A                     __end_of_send_lcd_data_dma:
 13627                           	callstack 0
 13628                           
 13629 ;; *************** function _wait_lcd_set *****************
 13630 ;; Defined at:
 13631 ;;		line 288 in file "eadog.c"
 13632 ;; Parameters:    Size  Location     Type
 13633 ;;		None
 13634 ;; Auto vars:     Size  Location     Type
 13635 ;;		None
 13636 ;; Return value:  Size  Location     Type
 13637 ;;                  1    wreg      void 
 13638 ;; Registers used:
 13639 ;;		None
 13640 ;; Tracked objects:
 13641 ;;		On entry : 0/0
 13642 ;;		On exit  : 3F/1
 13643 ;;		Unchanged: 0/0
 13644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13649 ;;Total ram usage:        0 bytes
 13650 ;; Hardware stack levels used: 1
 13651 ;; Hardware stack levels required when called: 7
 13652 ;; This function calls:
 13653 ;;		Nothing
 13654 ;; This function is called by:
 13655 ;;		_eaDogM_WriteString
 13656 ;;		_send_lcd_data_dma
 13657 ;; This function uses a non-reentrant model
 13658 ;;
 13659                           
 13660                           	psect	text47
 13661  014EFC                     __ptext47:
 13662                           	callstack 0
 13663  014EFC                     _wait_lcd_set:
 13664                           	callstack 21
 13665                           
 13666                           ;eadog.c: 290:  spi_link.LCD_DATA = 1;
 13667                           
 13668                           ; BSR set to: 59
 13669                           ;incstack = 0
 13670  014EFC  0101               	movlb	1	; () banked
 13671  014EFE  8700               	bsf	_spi_link& (0+255),3,b	;volatile
 13672                           
 13673                           ; BSR set to: 1
 13674  014F00  0012               	return		;funcret
 13675  014F02                     __end_of_wait_lcd_set:
 13676                           	callstack 0
 13677                           
 13678 ;; *************** function _start_lcd *****************
 13679 ;; Defined at:
 13680 ;;		line 283 in file "eadog.c"
 13681 ;; Parameters:    Size  Location     Type
 13682 ;;		None
 13683 ;; Auto vars:     Size  Location     Type
 13684 ;;		None
 13685 ;; Return value:  Size  Location     Type
 13686 ;;                  1    wreg      void 
 13687 ;; Registers used:
 13688 ;;		None
 13689 ;; Tracked objects:
 13690 ;;		On entry : 3F/0
 13691 ;;		On exit  : 3F/3B
 13692 ;;		Unchanged: 0/0
 13693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13698 ;;Total ram usage:        0 bytes
 13699 ;; Hardware stack levels used: 1
 13700 ;; Hardware stack levels required when called: 7
 13701 ;; This function calls:
 13702 ;;		Nothing
 13703 ;; This function is called by:
 13704 ;;		_eaDogM_WriteString
 13705 ;;		_send_lcd_data_dma
 13706 ;; This function uses a non-reentrant model
 13707 ;;
 13708                           
 13709                           	psect	text48
 13710  014F02                     __ptext48:
 13711                           	callstack 0
 13712  014F02                     _start_lcd:
 13713                           	callstack 21
 13714                           
 13715                           ; BSR set to: 0
 13716                           ;eadog.c: 285:  DMA1CON0bits.DMA1SIRQEN = 1;
 13717                           
 13718                           ; BSR set to: 1
 13719                           ;incstack = 0
 13720  014F02  013B               	movlb	59	; () banked
 13721  014F04  8DFC               	bsf	252,6,b	;volatile
 13722                           
 13723                           ; BSR set to: 59
 13724  014F06  0012               	return		;funcret
 13725  014F08                     __end_of_start_lcd:
 13726                           	callstack 0
 13727                           
 13728 ;; *************** function _ringBufS_put_dma *****************
 13729 ;; Defined at:
 13730 ;;		line 67 in file "ringbufs.c"
 13731 ;; Parameters:    Size  Location     Type
 13732 ;;  _this           2    0[BANK0 ] PTR struct ringBufS_t
 13733 ;;		 -> ring_buf1(67), 
 13734 ;;  c               1    2[BANK0 ] const unsigned char 
 13735 ;; Auto vars:     Size  Location     Type
 13736 ;;		None
 13737 ;; Return value:  Size  Location     Type
 13738 ;;                  1    wreg      void 
 13739 ;; Registers used:
 13740 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13741 ;; Tracked objects:
 13742 ;;		On entry : 3F/3B
 13743 ;;		On exit  : 3F/0
 13744 ;;		Unchanged: 0/0
 13745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13746 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13748 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13749 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13750 ;;Total ram usage:        4 bytes
 13751 ;; Hardware stack levels used: 1
 13752 ;; Hardware stack levels required when called: 7
 13753 ;; This function calls:
 13754 ;;		Nothing
 13755 ;; This function is called by:
 13756 ;;		_send_lcd_data_dma
 13757 ;; This function uses a non-reentrant model
 13758 ;;
 13759                           
 13760                           	psect	text49
 13761  0140F8                     __ptext49:
 13762                           	callstack 0
 13763  0140F8                     _ringBufS_put_dma:
 13764                           	callstack 21
 13765                           
 13766                           ; BSR set to: 59
 13767                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 13768                           
 13769                           ; BSR set to: 59
 13770                           ;incstack = 0
 13771  0140F8  0100               	movlb	0	; () banked
 13772  0140FA  EE20 F042          	lfsr	2,66
 13773  0140FE  5160               	movf	ringBufS_put_dma@_this& (0+255),w,b
 13774  014100  26D9               	addwf	fsr2l,f,c
 13775  014102  5161               	movf	(ringBufS_put_dma@_this+1)& (0+255),w,b
 13776  014104  22DA               	addwfc	fsr2h,f,c
 13777  014106  0E40               	movlw	64
 13778  014108  60DF               	cpfslt	indf2,c
 13779  01410A  0012               	return	
 13780                           
 13781                           ; BSR set to: 0
 13782                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 13783  01410C  EE20 F040          	lfsr	2,64
 13784  014110  5160               	movf	ringBufS_put_dma@_this& (0+255),w,b
 13785  014112  26D9               	addwf	fsr2l,f,c
 13786  014114  5161               	movf	(ringBufS_put_dma@_this+1)& (0+255),w,b
 13787  014116  22DA               	addwfc	fsr2h,f,c
 13788  014118  50DF               	movf	indf2,w,c
 13789  01411A  6E20               	movwf	??_ringBufS_put_dma^0,c
 13790  01411C  5020               	movf	??_ringBufS_put_dma^0,w,c
 13791  01411E  2560               	addwf	ringBufS_put_dma@_this& (0+255),w,b
 13792  014120  6ED9               	movwf	fsr2l,c
 13793  014122  0E00               	movlw	0
 13794  014124  2161               	addwfc	(ringBufS_put_dma@_this+1)& (0+255),w,b
 13795  014126  6EDA               	movwf	fsr2h,c
 13796  014128  0060  F18B  FFDF   	movff	ringBufS_put_dma@c,indf2
 13797                           
 13798                           ;ringbufs.c: 71:   ++_this->head;
 13799  01412E  EE20 F040          	lfsr	2,64
 13800  014132  5160               	movf	ringBufS_put_dma@_this& (0+255),w,b
 13801  014134  26D9               	addwf	fsr2l,f,c
 13802  014136  5161               	movf	(ringBufS_put_dma@_this+1)& (0+255),w,b
 13803  014138  22DA               	addwfc	fsr2h,f,c
 13804  01413A  2ADF               	incf	indf2,f,c
 13805                           
 13806                           ;ringbufs.c: 72:   ++_this->count;
 13807  01413C  EE20 F042          	lfsr	2,66
 13808  014140  5160               	movf	ringBufS_put_dma@_this& (0+255),w,b
 13809  014142  26D9               	addwf	fsr2l,f,c
 13810  014144  5161               	movf	(ringBufS_put_dma@_this+1)& (0+255),w,b
 13811  014146  22DA               	addwfc	fsr2h,f,c
 13812  014148  2ADF               	incf	indf2,f,c
 13813                           
 13814                           ; BSR set to: 0
 13815  01414A  0012               	return		;funcret
 13816  01414C                     __end_of_ringBufS_put_dma:
 13817                           	callstack 0
 13818                           
 13819 ;; *************** function _ringBufS_flush *****************
 13820 ;; Defined at:
 13821 ;;		line 85 in file "ringbufs.c"
 13822 ;; Parameters:    Size  Location     Type
 13823 ;;  _this           2   12[BANK0 ] PTR struct ringBufS_t
 13824 ;;		 -> ring_buf1(67), 
 13825 ;;  clearBuffer     1   14[BANK0 ] const char 
 13826 ;; Auto vars:     Size  Location     Type
 13827 ;;		None
 13828 ;; Return value:  Size  Location     Type
 13829 ;;                  1    wreg      void 
 13830 ;; Registers used:
 13831 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13832 ;; Tracked objects:
 13833 ;;		On entry : 3F/0
 13834 ;;		On exit  : 3F/0
 13835 ;;		Unchanged: 0/0
 13836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13837 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13840 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13841 ;;Total ram usage:        3 bytes
 13842 ;; Hardware stack levels used: 1
 13843 ;; Hardware stack levels required when called: 8
 13844 ;; This function calls:
 13845 ;;		_memset
 13846 ;; This function is called by:
 13847 ;;		_eaDogM_WriteString
 13848 ;;		_send_lcd_data_dma
 13849 ;; This function uses a non-reentrant model
 13850 ;;
 13851                           
 13852                           	psect	text50
 13853  01414C                     __ptext50:
 13854                           	callstack 0
 13855  01414C                     _ringBufS_flush:
 13856                           	callstack 20
 13857                           
 13858                           ; BSR set to: 0
 13859                           ;ringbufs.c: 85: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 86: {;ringbufs.c: 87:  _this->count = 0;
 13860                           
 13861                           ; BSR set to: 0
 13862                           ;incstack = 0
 13863  01414C  EE20 F042          	lfsr	2,66
 13864  014150  516C               	movf	ringBufS_flush@_this& (0+255),w,b
 13865  014152  26D9               	addwf	fsr2l,f,c
 13866  014154  516D               	movf	(ringBufS_flush@_this+1)& (0+255),w,b
 13867  014156  22DA               	addwfc	fsr2h,f,c
 13868  014158  0E00               	movlw	0
 13869  01415A  6EDF               	movwf	indf2,c
 13870                           
 13871                           ;ringbufs.c: 88:  _this->head = 0;
 13872  01415C  EE20 F040          	lfsr	2,64
 13873  014160  516C               	movf	ringBufS_flush@_this& (0+255),w,b
 13874  014162  26D9               	addwf	fsr2l,f,c
 13875  014164  516D               	movf	(ringBufS_flush@_this+1)& (0+255),w,b
 13876  014166  22DA               	addwfc	fsr2h,f,c
 13877  014168  0E00               	movlw	0
 13878  01416A  6EDF               	movwf	indf2,c
 13879                           
 13880                           ;ringbufs.c: 89:  _this->tail = 0;
 13881  01416C  EE20 F041          	lfsr	2,65
 13882  014170  516C               	movf	ringBufS_flush@_this& (0+255),w,b
 13883  014172  26D9               	addwf	fsr2l,f,c
 13884  014174  516D               	movf	(ringBufS_flush@_this+1)& (0+255),w,b
 13885  014176  22DA               	addwfc	fsr2h,f,c
 13886  014178  0E00               	movlw	0
 13887  01417A  6EDF               	movwf	indf2,c
 13888                           
 13889                           ; BSR set to: 0
 13890                           ;ringbufs.c: 90:  if (clearBuffer) {
 13891  01417C  516E               	movf	ringBufS_flush@clearBuffer& (0+255),w,b
 13892  01417E  B4D8               	btfsc	status,2,c
 13893  014180  0012               	return	
 13894                           
 13895                           ; BSR set to: 0
 13896                           ;ringbufs.c: 91:   memset(_this->buf, 0, sizeof(_this->buf));
 13897  014182  C06C  F060         	movff	ringBufS_flush@_this,memset@dest
 13898  014186  C06D  F061         	movff	ringBufS_flush@_this+1,memset@dest+1
 13899  01418A  0E00               	movlw	0
 13900  01418C  6F63               	movwf	(memset@c+1)& (0+255),b
 13901  01418E  0E00               	movlw	0
 13902  014190  6F62               	movwf	memset@c& (0+255),b
 13903  014192  0E00               	movlw	0
 13904  014194  6F65               	movwf	(memset@n+1)& (0+255),b
 13905  014196  0E40               	movlw	64
 13906  014198  6F64               	movwf	memset@n& (0+255),b
 13907  01419A  ECF0  F095         	call	_memset	;wreg free
 13908                           
 13909                           ; BSR set to: 0
 13910  01419E  0012               	return		;funcret
 13911  0141A0                     __end_of_ringBufS_flush:
 13912                           	callstack 0
 13913                           
 13914 ;; *************** function _display_led *****************
 13915 ;; Defined at:
 13916 ;;		line 3 in file "disp_led.c"
 13917 ;; Parameters:    Size  Location     Type
 13918 ;;  led             1    wreg     enum E17385
 13919 ;; Auto vars:     Size  Location     Type
 13920 ;;  led             1   31[COMRAM] enum E17385
 13921 ;; Return value:  Size  Location     Type
 13922 ;;                  1    wreg      void 
 13923 ;; Registers used:
 13924 ;;		wreg, status,2, status,0
 13925 ;; Tracked objects:
 13926 ;;		On entry : 3F/0
 13927 ;;		On exit  : 3F/0
 13928 ;;		Unchanged: 0/0
 13929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13931 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13932 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13933 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13934 ;;Total ram usage:        3 bytes
 13935 ;; Hardware stack levels used: 1
 13936 ;; Hardware stack levels required when called: 7
 13937 ;; This function calls:
 13938 ;;		Nothing
 13939 ;; This function is called by:
 13940 ;;		_main
 13941 ;; This function uses a non-reentrant model
 13942 ;;
 13943                           
 13944                           	psect	text51
 13945  0138A6                     __ptext51:
 13946                           	callstack 0
 13947  0138A6                     _display_led:
 13948                           	callstack 23
 13949                           
 13950                           ; BSR set to: 0
 13951                           ;incstack = 0
 13952                           ;display_led@led stored from wreg
 13953  0138A6  6E20               	movwf	display_led@led^0,c
 13954                           
 13955                           ;disp_led.c: 3: void display_led(DISPLAY_TYPES led);disp_led.c: 4: {;disp_led.c: 5:  swi
      +                          tch (led) {
 13956  0138A8  D02D               	goto	l13057
 13957  0138AA                     l1402:
 13958                           
 13959                           ; BSR set to: 0
 13960  0138AA  98BD               	bcf	189,4,c	;volatile
 13961                           
 13962                           ; BSR set to: 0
 13963                           
 13964                           ;disp_led.c: 8:   do { LATDbits.LATD5 = 0; } while(0);
 13965  0138AC  9ABD               	bcf	189,5,c	;volatile
 13966  0138AE  0012               	return	
 13967  0138B0                     l1408:
 13968                           
 13969                           ; BSR set to: 0
 13970  0138B0  98BD               	bcf	189,4,c	;volatile
 13971                           
 13972                           ; BSR set to: 0
 13973                           
 13974                           ;disp_led.c: 12:   do { LATDbits.LATD5 = 1; } while(0);
 13975  0138B2  8ABD               	bsf	189,5,c	;volatile
 13976  0138B4  0012               	return	
 13977  0138B6                     l1413:
 13978                           
 13979                           ; BSR set to: 0
 13980  0138B6  88BD               	bsf	189,4,c	;volatile
 13981                           
 13982                           ; BSR set to: 0
 13983                           
 13984                           ;disp_led.c: 16:   do { LATDbits.LATD5 = 0; } while(0);
 13985  0138B8  9ABD               	bcf	189,5,c	;volatile
 13986  0138BA  0012               	return	
 13987  0138BC                     l1418:
 13988                           
 13989                           ; BSR set to: 0
 13990  0138BC  9CBD               	bcf	189,6,c	;volatile
 13991                           
 13992                           ; BSR set to: 0
 13993                           
 13994                           ;disp_led.c: 20:   do { LATDbits.LATD7 = 0; } while(0);
 13995  0138BE  9EBD               	bcf	189,7,c	;volatile
 13996  0138C0  0012               	return	
 13997  0138C2                     l1423:
 13998                           
 13999                           ; BSR set to: 0
 14000  0138C2  9CBD               	bcf	189,6,c	;volatile
 14001                           
 14002                           ; BSR set to: 0
 14003                           
 14004                           ;disp_led.c: 24:   do { LATDbits.LATD7 = 1; } while(0);
 14005  0138C4  8EBD               	bsf	189,7,c	;volatile
 14006  0138C6  0012               	return	
 14007  0138C8                     l1428:
 14008                           
 14009                           ; BSR set to: 0
 14010  0138C8  8CBD               	bsf	189,6,c	;volatile
 14011                           
 14012                           ; BSR set to: 0
 14013                           
 14014                           ;disp_led.c: 28:   do { LATDbits.LATD7 = 0; } while(0);
 14015  0138CA  9EBD               	bcf	189,7,c	;volatile
 14016  0138CC  0012               	return	
 14017  0138CE                     l1433:
 14018                           
 14019                           ; BSR set to: 0
 14020  0138CE  98BF               	bcf	191,4,c	;volatile
 14021                           
 14022                           ; BSR set to: 0
 14023                           
 14024                           ;disp_led.c: 32:   do { LATFbits.LATF5 = 0; } while(0);
 14025  0138D0  9ABF               	bcf	191,5,c	;volatile
 14026  0138D2  0012               	return	
 14027  0138D4                     l1438:
 14028                           
 14029                           ; BSR set to: 0
 14030  0138D4  98BF               	bcf	191,4,c	;volatile
 14031                           
 14032                           ; BSR set to: 0
 14033                           
 14034                           ;disp_led.c: 36:   do { LATFbits.LATF5 = 1; } while(0);
 14035  0138D6  8ABF               	bsf	191,5,c	;volatile
 14036  0138D8  0012               	return	
 14037  0138DA                     l1443:
 14038                           
 14039                           ; BSR set to: 0
 14040  0138DA  88BF               	bsf	191,4,c	;volatile
 14041                           
 14042                           ; BSR set to: 0
 14043                           
 14044                           ;disp_led.c: 40:   do { LATFbits.LATF5 = 0; } while(0);
 14045  0138DC  9ABF               	bcf	191,5,c	;volatile
 14046  0138DE  0012               	return	
 14047  0138E0                     l1448:
 14048                           
 14049                           ; BSR set to: 0
 14050  0138E0  9CBF               	bcf	191,6,c	;volatile
 14051                           
 14052                           ; BSR set to: 0
 14053                           
 14054                           ;disp_led.c: 44:   do { LATFbits.LATF7 = 0; } while(0);
 14055  0138E2  9EBF               	bcf	191,7,c	;volatile
 14056  0138E4  0012               	return	
 14057  0138E6                     l1453:
 14058                           
 14059                           ; BSR set to: 0
 14060  0138E6  9CBF               	bcf	191,6,c	;volatile
 14061                           
 14062                           ; BSR set to: 0
 14063                           
 14064                           ;disp_led.c: 48:   do { LATFbits.LATF7 = 1; } while(0);
 14065  0138E8  8EBF               	bsf	191,7,c	;volatile
 14066  0138EA  0012               	return	
 14067  0138EC                     l1458:
 14068                           
 14069                           ; BSR set to: 0
 14070  0138EC  8CBF               	bsf	191,6,c	;volatile
 14071                           
 14072                           ; BSR set to: 0
 14073                           
 14074                           ;disp_led.c: 52:   do { LATFbits.LATF7 = 0; } while(0);
 14075  0138EE  9EBF               	bcf	191,7,c	;volatile
 14076  0138F0  0012               	return	
 14077  0138F2                     l1463:
 14078                           
 14079                           ; BSR set to: 0
 14080  0138F2  98BD               	bcf	189,4,c	;volatile
 14081                           
 14082                           ; BSR set to: 0
 14083                           
 14084                           ;disp_led.c: 56:   do { LATDbits.LATD5 = 0; } while(0);
 14085  0138F4  9ABD               	bcf	189,5,c	;volatile
 14086                           
 14087                           ; BSR set to: 0
 14088                           
 14089                           ;disp_led.c: 57:   do { LATDbits.LATD6 = 0; } while(0);
 14090  0138F6  9CBD               	bcf	189,6,c	;volatile
 14091                           
 14092                           ; BSR set to: 0
 14093                           
 14094                           ;disp_led.c: 58:   do { LATDbits.LATD7 = 0; } while(0);
 14095  0138F8  9EBD               	bcf	189,7,c	;volatile
 14096                           
 14097                           ; BSR set to: 0
 14098                           
 14099                           ;disp_led.c: 59:   do { LATFbits.LATF4 = 0; } while(0);
 14100  0138FA  98BF               	bcf	191,4,c	;volatile
 14101                           
 14102                           ; BSR set to: 0
 14103                           
 14104                           ;disp_led.c: 60:   do { LATFbits.LATF5 = 0; } while(0);
 14105  0138FC  9ABF               	bcf	191,5,c	;volatile
 14106                           
 14107                           ; BSR set to: 0
 14108                           
 14109                           ;disp_led.c: 61:   do { LATFbits.LATF6 = 0; } while(0);
 14110  0138FE  9CBF               	bcf	191,6,c	;volatile
 14111                           
 14112                           ; BSR set to: 0
 14113                           
 14114                           ;disp_led.c: 62:   do { LATFbits.LATF7 = 0; } while(0);
 14115  013900  9EBF               	bcf	191,7,c	;volatile
 14116  013902  0012               	return	
 14117  013904                     l13057:
 14118  013904  5020               	movf	display_led@led^0,w,c
 14119  013906  0100               	movlb	0	; () banked
 14120  013908  6F60               	movwf	??_display_led& (0+255),b
 14121  01390A  6B61               	clrf	(??_display_led+1)& (0+255),b
 14122                           
 14123                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14124                           ; Switch size 1, requested type "simple"
 14125                           ; Number of cases is 1, Range of values is 0 to 0
 14126                           ; switch strategies available:
 14127                           ; Name         Instructions Cycles
 14128                           ; simple_byte            4     3 (average)
 14129                           ;	Chosen strategy is simple_byte
 14130  01390C  5161               	movf	(??_display_led+1)& (0+255),w,b
 14131  01390E  0A00               	xorlw	0	; case 0
 14132  013910  A4D8               	btfss	status,2,c
 14133  013912  D7EF               	goto	l1463
 14134                           
 14135                           ; BSR set to: 0
 14136                           ; Switch size 1, requested type "simple"
 14137                           ; Number of cases is 12, Range of values is 0 to 11
 14138                           ; switch strategies available:
 14139                           ; Name         Instructions Cycles
 14140                           ; simple_byte           37    19 (average)
 14141                           ;	Chosen strategy is simple_byte
 14142  013914  5160               	movf	??_display_led& (0+255),w,b
 14143  013916  0A00               	xorlw	0	; case 0
 14144  013918  B4D8               	btfsc	status,2,c
 14145  01391A  D7C7               	goto	l1402
 14146  01391C  0A01               	xorlw	1	; case 1
 14147  01391E  B4D8               	btfsc	status,2,c
 14148  013920  D7CA               	goto	l1413
 14149  013922  0A03               	xorlw	3	; case 2
 14150  013924  B4D8               	btfsc	status,2,c
 14151  013926  D7C4               	goto	l1408
 14152  013928  0A01               	xorlw	1	; case 3
 14153  01392A  B4D8               	btfsc	status,2,c
 14154  01392C  D7C7               	goto	l1418
 14155  01392E  0A07               	xorlw	7	; case 4
 14156  013930  B4D8               	btfsc	status,2,c
 14157  013932  D7CA               	goto	l1428
 14158  013934  0A01               	xorlw	1	; case 5
 14159  013936  B4D8               	btfsc	status,2,c
 14160  013938  D7C4               	goto	l1423
 14161  01393A  0A03               	xorlw	3	; case 6
 14162  01393C  B4D8               	btfsc	status,2,c
 14163  01393E  D7C7               	goto	l1433
 14164  013940  0A01               	xorlw	1	; case 7
 14165  013942  B4D8               	btfsc	status,2,c
 14166  013944  D7CA               	goto	l1443
 14167  013946  0A0F               	xorlw	15	; case 8
 14168  013948  B4D8               	btfsc	status,2,c
 14169  01394A  D7C4               	goto	l1438
 14170  01394C  0A01               	xorlw	1	; case 9
 14171  01394E  B4D8               	btfsc	status,2,c
 14172  013950  D7C7               	goto	l1448
 14173  013952  0A03               	xorlw	3	; case 10
 14174  013954  B4D8               	btfsc	status,2,c
 14175  013956  D7CA               	goto	l1458
 14176  013958  0A01               	xorlw	1	; case 11
 14177  01395A  B4D8               	btfsc	status,2,c
 14178  01395C  D7C4               	goto	l1453
 14179  01395E  D7C9               	goto	l1463
 14180  013960                     __end_of_display_led:
 14181                           	callstack 0
 14182                           
 14183 ;; *************** function _cli_read *****************
 14184 ;; Defined at:
 14185 ;;		line 86 in file "scdm.c"
 14186 ;; Parameters:    Size  Location     Type
 14187 ;;  a_ctx           2   36[BANK0 ] PTR struct _t_cli_ctx
 14188 ;;		 -> cli_ctx(131), 
 14189 ;; Auto vars:     Size  Location     Type
 14190 ;;  i               1   43[BANK0 ] unsigned char 
 14191 ;; Return value:  Size  Location     Type
 14192 ;;                  1    wreg      void 
 14193 ;; Registers used:
 14194 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 14195 ;; Tracked objects:
 14196 ;;		On entry : 3F/0
 14197 ;;		On exit  : 6/0
 14198 ;;		Unchanged: 0/0
 14199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14200 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14201 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14202 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14203 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14204 ;;Total ram usage:        8 bytes
 14205 ;; Hardware stack levels used: 1
 14206 ;; Hardware stack levels required when called: 14
 14207 ;; This function calls:
 14208 ;;		__cli_interpret_cmd
 14209 ;;		_linux_getc
 14210 ;;		_linux_putc
 14211 ;;		_memset
 14212 ;; This function is called by:
 14213 ;;		_main
 14214 ;; This function uses a non-reentrant model
 14215 ;;
 14216                           
 14217                           	psect	text52
 14218  012A8E                     __ptext52:
 14219                           	callstack 0
 14220  012A8E                     _cli_read:
 14221                           	callstack 16
 14222                           
 14223                           ; BSR set to: 0
 14224                           ;scdm.c: 86: void cli_read(t_cli_ctx *a_ctx);scdm.c: 87: {;scdm.c: 88:  uint8_t i = 0x00
      +                          ;
 14225                           
 14226                           ; BSR set to: 0
 14227                           ;incstack = 0
 14228  012A8E  0E00               	movlw	0
 14229  012A90  6F8B               	movwf	cli_read@i& (0+255),b
 14230                           
 14231                           ; BSR set to: 0
 14232                           ;scdm.c: 91:  if (!linux_getc(&i)) {
 14233  012A92  0E8B               	movlw	low cli_read@i
 14234  012A94  6F60               	movwf	linux_getc@a_data& (0+255),b
 14235  012A96  6B61               	clrf	(linux_getc@a_data+1)& (0+255),b
 14236  012A98  EC74  F0A5         	call	_linux_getc	;wreg free
 14237  012A9C  0900               	iorlw	0
 14238  012A9E  B4D8               	btfsc	status,2,c
 14239  012AA0  0012               	return	
 14240  012AA2  D088               	goto	l13099
 14241  012AA4                     l13077:
 14242                           
 14243                           ; BSR set to: 0
 14244                           ;scdm.c: 103:   a_ctx->cmd[(((a_ctx->cpos) < (128 - 1)) ? (a_ctx->cpos + 1) : (a_ctx->cp
      +                          os))] = '\0';
 14245  012AA4  EE20 F082          	lfsr	2,130
 14246  012AA8  5184               	movf	cli_read@a_ctx& (0+255),w,b
 14247  012AAA  26D9               	addwf	fsr2l,f,c
 14248  012AAC  5185               	movf	(cli_read@a_ctx+1)& (0+255),w,b
 14249  012AAE  22DA               	addwfc	fsr2h,f,c
 14250  012AB0  0E7E               	movlw	126
 14251  012AB2  64DF               	cpfsgt	indf2,c
 14252  012AB4  D00C               	goto	l13081
 14253                           
 14254                           ; BSR set to: 0
 14255  012AB6  EE20 F082          	lfsr	2,130
 14256  012ABA  5184               	movf	cli_read@a_ctx& (0+255),w,b
 14257  012ABC  26D9               	addwf	fsr2l,f,c
 14258  012ABE  5185               	movf	(cli_read@a_ctx+1)& (0+255),w,b
 14259  012AC0  22DA               	addwfc	fsr2h,f,c
 14260  012AC2  50DF               	movf	indf2,w,c
 14261  012AC4  6F86               	movwf	??_cli_read& (0+255),b
 14262  012AC6  5186               	movf	??_cli_read& (0+255),w,b
 14263  012AC8  6F89               	movwf	_cli_read$3080& (0+255),b
 14264  012ACA  6B8A               	clrf	(_cli_read$3080+1)& (0+255),b
 14265  012ACC  D00E               	goto	l1567
 14266  012ACE                     l13081:
 14267                           
 14268                           ; BSR set to: 0
 14269  012ACE  EE20 F082          	lfsr	2,130
 14270  012AD2  5184               	movf	cli_read@a_ctx& (0+255),w,b
 14271  012AD4  26D9               	addwf	fsr2l,f,c
 14272  012AD6  5185               	movf	(cli_read@a_ctx+1)& (0+255),w,b
 14273  012AD8  22DA               	addwfc	fsr2h,f,c
 14274  012ADA  50DF               	movf	indf2,w,c
 14275  012ADC  6F86               	movwf	??_cli_read& (0+255),b
 14276  012ADE  0E01               	movlw	1
 14277  012AE0  2586               	addwf	??_cli_read& (0+255),w,b
 14278  012AE2  6F89               	movwf	_cli_read$3080& (0+255),b
 14279  012AE4  6B8A               	clrf	(_cli_read$3080+1)& (0+255),b
 14280  012AE6  0E00               	movlw	0
 14281  012AE8  238A               	addwfc	(_cli_read$3080+1)& (0+255),f,b
 14282  012AEA                     l1567:
 14283                           
 14284                           ; BSR set to: 0
 14285  012AEA  5189               	movf	_cli_read$3080& (0+255),w,b
 14286  012AEC  2584               	addwf	cli_read@a_ctx& (0+255),w,b
 14287  012AEE  6F86               	movwf	??_cli_read& (0+255),b
 14288  012AF0  518A               	movf	(_cli_read$3080+1)& (0+255),w,b
 14289  012AF2  2185               	addwfc	(cli_read@a_ctx+1)& (0+255),w,b
 14290  012AF4  6F87               	movwf	(??_cli_read+1)& (0+255),b
 14291  012AF6  0E02               	movlw	2
 14292  012AF8  2586               	addwf	??_cli_read& (0+255),w,b
 14293  012AFA  6ED9               	movwf	fsr2l,c
 14294  012AFC  0E00               	movlw	0
 14295  012AFE  2187               	addwfc	(??_cli_read+1)& (0+255),w,b
 14296  012B00  6EDA               	movwf	fsr2h,c
 14297  012B02  0E00               	movlw	0
 14298  012B04  6EDF               	movwf	indf2,c
 14299                           
 14300                           ; BSR set to: 0
 14301                           ;scdm.c: 104:   linux_putc((unsigned char *) "\r\n", 2);
 14302  012B06  0E8E               	movlw	low (STR_15+104)
 14303  012B08  6F76               	movwf	linux_putc@data& (0+255),b
 14304  012B0A  0EFE               	movlw	high (STR_15+104)
 14305  012B0C  6F77               	movwf	(linux_putc@data+1)& (0+255),b
 14306  012B0E  0E02               	movlw	2
 14307  012B10  6F78               	movwf	linux_putc@a_len& (0+255),b
 14308  012B12  EC01  F0A7         	call	_linux_putc	;wreg free
 14309                           
 14310                           ; BSR set to: 0
 14311                           ;scdm.c: 105:   res = _cli_interpret_cmd(a_ctx);
 14312  012B16  C084  F078         	movff	cli_read@a_ctx,__cli_interpret_cmd@a_ctx
 14313  012B1A  C085  F079         	movff	cli_read@a_ctx+1,__cli_interpret_cmd@a_ctx+1
 14314  012B1E  EC08  F092         	call	__cli_interpret_cmd	;wreg free
 14315  012B22  6FF8               	movwf	_res& (0+255),b
 14316                           
 14317                           ; BSR set to: 0
 14318                           ;scdm.c: 106:   a_ctx->cpos = 0;
 14319  012B24  EE20 F082          	lfsr	2,130
 14320  012B28  5184               	movf	cli_read@a_ctx& (0+255),w,b
 14321  012B2A  26D9               	addwf	fsr2l,f,c
 14322  012B2C  5185               	movf	(cli_read@a_ctx+1)& (0+255),w,b
 14323  012B2E  22DA               	addwfc	fsr2h,f,c
 14324  012B30  0E00               	movlw	0
 14325  012B32  6EDF               	movwf	indf2,c
 14326                           
 14327                           ; BSR set to: 0
 14328                           ;scdm.c: 107:   memset(a_ctx->cmd, 0x00, 128);
 14329  012B34  0E02               	movlw	2
 14330  012B36  2584               	addwf	cli_read@a_ctx& (0+255),w,b
 14331  012B38  6F60               	movwf	memset@dest& (0+255),b
 14332  012B3A  0E00               	movlw	0
 14333  012B3C  2185               	addwfc	(cli_read@a_ctx+1)& (0+255),w,b
 14334  012B3E  6F61               	movwf	(memset@dest+1)& (0+255),b
 14335  012B40  0E00               	movlw	0
 14336  012B42  6F63               	movwf	(memset@c+1)& (0+255),b
 14337  012B44  0E00               	movlw	0
 14338  012B46  6F62               	movwf	memset@c& (0+255),b
 14339  012B48  0E00               	movlw	0
 14340  012B4A  6F65               	movwf	(memset@n+1)& (0+255),b
 14341  012B4C  0E80               	movlw	128
 14342  012B4E  6F64               	movwf	memset@n& (0+255),b
 14343  012B50  ECF0  F095         	call	_memset	;wreg free
 14344                           
 14345                           ;scdm.c: 108:   break;
 14346  012B54  0012               	return	
 14347  012B56                     l13091:
 14348                           
 14349                           ; BSR set to: 0
 14350                           ;scdm.c: 111:   if (a_ctx->cpos < (128 - 1)) {
 14351  012B56  EE20 F082          	lfsr	2,130
 14352  012B5A  5184               	movf	cli_read@a_ctx& (0+255),w,b
 14353  012B5C  26D9               	addwf	fsr2l,f,c
 14354  012B5E  5185               	movf	(cli_read@a_ctx+1)& (0+255),w,b
 14355  012B60  22DA               	addwfc	fsr2h,f,c
 14356  012B62  0E7F               	movlw	127
 14357  012B64  60DF               	cpfslt	indf2,c
 14358  012B66  0012               	return	
 14359                           
 14360                           ; BSR set to: 0
 14361                           ;scdm.c: 112:    a_ctx->cmd[a_ctx->cpos++] = i;
 14362  012B68  EE20 F082          	lfsr	2,130
 14363  012B6C  5184               	movf	cli_read@a_ctx& (0+255),w,b
 14364  012B6E  26D9               	addwf	fsr2l,f,c
 14365  012B70  5185               	movf	(cli_read@a_ctx+1)& (0+255),w,b
 14366  012B72  22DA               	addwfc	fsr2h,f,c
 14367  012B74  50DF               	movf	indf2,w,c
 14368  012B76  6F86               	movwf	??_cli_read& (0+255),b
 14369  012B78  5186               	movf	??_cli_read& (0+255),w,b
 14370  012B7A  2584               	addwf	cli_read@a_ctx& (0+255),w,b
 14371  012B7C  6F87               	movwf	(??_cli_read+1)& (0+255),b
 14372  012B7E  0E00               	movlw	0
 14373  012B80  2185               	addwfc	(cli_read@a_ctx+1)& (0+255),w,b
 14374  012B82  6F88               	movwf	(??_cli_read+2)& (0+255),b
 14375  012B84  0E02               	movlw	2
 14376  012B86  2587               	addwf	(??_cli_read+1)& (0+255),w,b
 14377  012B88  6ED9               	movwf	fsr2l,c
 14378  012B8A  0E00               	movlw	0
 14379  012B8C  2188               	addwfc	(??_cli_read+2)& (0+255),w,b
 14380  012B8E  6EDA               	movwf	fsr2h,c
 14381  012B90  0060  F22F  FFDF   	movff	cli_read@i,indf2
 14382  012B96  EE20 F082          	lfsr	2,130
 14383  012B9A  5184               	movf	cli_read@a_ctx& (0+255),w,b
 14384  012B9C  26D9               	addwf	fsr2l,f,c
 14385  012B9E  5185               	movf	(cli_read@a_ctx+1)& (0+255),w,b
 14386  012BA0  22DA               	addwfc	fsr2h,f,c
 14387  012BA2  2ADF               	incf	indf2,f,c
 14388                           
 14389                           ; BSR set to: 0
 14390                           ;scdm.c: 113:    linux_putc(&i, 1);
 14391  012BA4  0E8B               	movlw	low cli_read@i
 14392  012BA6  6F76               	movwf	linux_putc@data& (0+255),b
 14393  012BA8  6B77               	clrf	(linux_putc@data+1)& (0+255),b
 14394  012BAA  0E01               	movlw	1
 14395  012BAC  6F78               	movwf	linux_putc@a_len& (0+255),b
 14396  012BAE  EC01  F0A7         	call	_linux_putc	;wreg free
 14397  012BB2  0012               	return	
 14398  012BB4                     l13099:
 14399  012BB4  0100               	movlb	0	; () banked
 14400  012BB6  518B               	movf	cli_read@i& (0+255),w,b
 14401  012BB8  6F86               	movwf	??_cli_read& (0+255),b
 14402  012BBA  6B87               	clrf	(??_cli_read+1)& (0+255),b
 14403                           
 14404                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14405                           ; Switch size 1, requested type "simple"
 14406                           ; Number of cases is 1, Range of values is 0 to 0
 14407                           ; switch strategies available:
 14408                           ; Name         Instructions Cycles
 14409                           ; simple_byte            4     3 (average)
 14410                           ;	Chosen strategy is simple_byte
 14411  012BBC  5187               	movf	(??_cli_read+1)& (0+255),w,b
 14412  012BBE  0A00               	xorlw	0	; case 0
 14413  012BC0  A4D8               	btfss	status,2,c
 14414  012BC2  D7C9               	goto	l13091
 14415                           
 14416                           ; BSR set to: 0
 14417                           ; Switch size 1, requested type "simple"
 14418                           ; Number of cases is 4, Range of values is 13 to 127
 14419                           ; switch strategies available:
 14420                           ; Name         Instructions Cycles
 14421                           ; simple_byte           13     7 (average)
 14422                           ;	Chosen strategy is simple_byte
 14423  012BC4  5186               	movf	??_cli_read& (0+255),w,b
 14424  012BC6  0A0D               	xorlw	13	; case 13
 14425  012BC8  B4D8               	btfsc	status,2,c
 14426  012BCA  D76C               	goto	l13077
 14427  012BCC  0A16               	xorlw	22	; case 27
 14428  012BCE  B4D8               	btfsc	status,2,c
 14429  012BD0  0012               	return	
 14430  012BD2  0A65               	xorlw	101	; case 126
 14431  012BD4  B4D8               	btfsc	status,2,c
 14432  012BD6  0012               	return	
 14433  012BD8  0A01               	xorlw	1	; case 127
 14434  012BDA  B4D8               	btfsc	status,2,c
 14435  012BDC  0012               	return		;funcret
 14436  012BDE  D7BB               	goto	l13091
 14437  012BE0                     __end_of_cli_read:
 14438                           	callstack 0
 14439                           
 14440 ;; *************** function _memset *****************
 14441 ;; Defined at:
 14442 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/memset.c"
 14443 ;; Parameters:    Size  Location     Type
 14444 ;;  dest            2    0[BANK0 ] PTR void 
 14445 ;;		 -> ring_buf1(67), cli_ctx(131), 
 14446 ;;  c               2    2[BANK0 ] int 
 14447 ;;  n               2    4[BANK0 ] unsigned int 
 14448 ;; Auto vars:     Size  Location     Type
 14449 ;;  s               2   10[BANK0 ] PTR unsigned char 
 14450 ;;		 -> ring_buf1(67), cli_ctx(131), 
 14451 ;;  k               2    8[BANK0 ] unsigned int 
 14452 ;; Return value:  Size  Location     Type
 14453 ;;                  2    0[BANK0 ] PTR void 
 14454 ;; Registers used:
 14455 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14456 ;; Tracked objects:
 14457 ;;		On entry : 3F/0
 14458 ;;		On exit  : 3F/0
 14459 ;;		Unchanged: 0/0
 14460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14461 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14462 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14463 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14464 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14465 ;;Total ram usage:       12 bytes
 14466 ;; Hardware stack levels used: 1
 14467 ;; Hardware stack levels required when called: 7
 14468 ;; This function calls:
 14469 ;;		Nothing
 14470 ;; This function is called by:
 14471 ;;		_cli_init
 14472 ;;		_cli_read
 14473 ;;		_ringBufS_init
 14474 ;;		_ringBufS_flush
 14475 ;; This function uses a non-reentrant model
 14476 ;;
 14477                           
 14478                           	psect	text53
 14479  012BE0                     __ptext53:
 14480                           	callstack 0
 14481  012BE0                     _memset:
 14482                           	callstack 21
 14483                           
 14484                           ; BSR set to: 0
 14485                           
 14486                           ;incstack = 0
 14487  012BE0  C060  F06A         	movff	memset@dest,memset@s
 14488  012BE4  C061  F06B         	movff	memset@dest+1,memset@s+1
 14489  012BE8  5164               	movf	memset@n& (0+255),w,b
 14490  012BEA  1165               	iorwf	(memset@n+1)& (0+255),w,b
 14491  012BEC  B4D8               	btfsc	status,2,c
 14492  012BEE  0012               	return	
 14493                           
 14494                           ; BSR set to: 0
 14495  012BF0  0060  F1AB  FFD9   	movff	memset@s,fsr2l
 14496  012BF6  0060  F1AF  FFDA   	movff	memset@s+1,fsr2h
 14497  012BFC  0060  F18B  FFDF   	movff	memset@c,indf2
 14498                           
 14499                           ; BSR set to: 0
 14500  012C02  5164               	movf	memset@n& (0+255),w,b
 14501  012C04  256A               	addwf	memset@s& (0+255),w,b
 14502  012C06  6F66               	movwf	??_memset& (0+255),b
 14503  012C08  5165               	movf	(memset@n+1)& (0+255),w,b
 14504  012C0A  216B               	addwfc	(memset@s+1)& (0+255),w,b
 14505  012C0C  6F67               	movwf	(??_memset+1)& (0+255),b
 14506  012C0E  0EFF               	movlw	255
 14507  012C10  2566               	addwf	??_memset& (0+255),w,b
 14508  012C12  6ED9               	movwf	fsr2l,c
 14509  012C14  0EFF               	movlw	255
 14510  012C16  2167               	addwfc	(??_memset+1)& (0+255),w,b
 14511  012C18  6EDA               	movwf	fsr2h,c
 14512  012C1A  0060  F18B  FFDF   	movff	memset@c,indf2
 14513  012C20  5165               	movf	(memset@n+1)& (0+255),w,b
 14514  012C22  E104               	bnz	l11199
 14515  012C24  0E03               	movlw	3
 14516  012C26  5D64               	subwf	memset@n& (0+255),w,b
 14517  012C28  A0D8               	btfss	status,0,c
 14518  012C2A  0012               	return	
 14519  012C2C                     l11199:
 14520                           
 14521                           ; BSR set to: 0
 14522  012C2C  EE20 F001          	lfsr	2,1
 14523  012C30  516A               	movf	memset@s& (0+255),w,b
 14524  012C32  26D9               	addwf	fsr2l,f,c
 14525  012C34  516B               	movf	(memset@s+1)& (0+255),w,b
 14526  012C36  22DA               	addwfc	fsr2h,f,c
 14527  012C38  0060  F18B  FFDF   	movff	memset@c,indf2
 14528  012C3E  EE20 F002          	lfsr	2,2
 14529  012C42  516A               	movf	memset@s& (0+255),w,b
 14530  012C44  26D9               	addwf	fsr2l,f,c
 14531  012C46  516B               	movf	(memset@s+1)& (0+255),w,b
 14532  012C48  22DA               	addwfc	fsr2h,f,c
 14533  012C4A  0060  F18B  FFDF   	movff	memset@c,indf2
 14534  012C50  5164               	movf	memset@n& (0+255),w,b
 14535  012C52  256A               	addwf	memset@s& (0+255),w,b
 14536  012C54  6F66               	movwf	??_memset& (0+255),b
 14537  012C56  5165               	movf	(memset@n+1)& (0+255),w,b
 14538  012C58  216B               	addwfc	(memset@s+1)& (0+255),w,b
 14539  012C5A  6F67               	movwf	(??_memset+1)& (0+255),b
 14540  012C5C  0EFE               	movlw	254
 14541  012C5E  2566               	addwf	??_memset& (0+255),w,b
 14542  012C60  6ED9               	movwf	fsr2l,c
 14543  012C62  0EFF               	movlw	255
 14544  012C64  2167               	addwfc	(??_memset+1)& (0+255),w,b
 14545  012C66  6EDA               	movwf	fsr2h,c
 14546  012C68  0060  F18B  FFDF   	movff	memset@c,indf2
 14547  012C6E  5164               	movf	memset@n& (0+255),w,b
 14548  012C70  256A               	addwf	memset@s& (0+255),w,b
 14549  012C72  6F66               	movwf	??_memset& (0+255),b
 14550  012C74  5165               	movf	(memset@n+1)& (0+255),w,b
 14551  012C76  216B               	addwfc	(memset@s+1)& (0+255),w,b
 14552  012C78  6F67               	movwf	(??_memset+1)& (0+255),b
 14553  012C7A  0EFD               	movlw	253
 14554  012C7C  2566               	addwf	??_memset& (0+255),w,b
 14555  012C7E  6ED9               	movwf	fsr2l,c
 14556  012C80  0EFF               	movlw	255
 14557  012C82  2167               	addwfc	(??_memset+1)& (0+255),w,b
 14558  012C84  6EDA               	movwf	fsr2h,c
 14559  012C86  0060  F18B  FFDF   	movff	memset@c,indf2
 14560                           
 14561                           ; BSR set to: 0
 14562  012C8C  5165               	movf	(memset@n+1)& (0+255),w,b
 14563  012C8E  E104               	bnz	l11205
 14564  012C90  0E07               	movlw	7
 14565  012C92  5D64               	subwf	memset@n& (0+255),w,b
 14566  012C94  A0D8               	btfss	status,0,c
 14567  012C96  0012               	return	
 14568  012C98                     l11205:
 14569                           
 14570                           ; BSR set to: 0
 14571  012C98  EE20 F003          	lfsr	2,3
 14572  012C9C  516A               	movf	memset@s& (0+255),w,b
 14573  012C9E  26D9               	addwf	fsr2l,f,c
 14574  012CA0  516B               	movf	(memset@s+1)& (0+255),w,b
 14575  012CA2  22DA               	addwfc	fsr2h,f,c
 14576  012CA4  0060  F18B  FFDF   	movff	memset@c,indf2
 14577  012CAA  5164               	movf	memset@n& (0+255),w,b
 14578  012CAC  256A               	addwf	memset@s& (0+255),w,b
 14579  012CAE  6F66               	movwf	??_memset& (0+255),b
 14580  012CB0  5165               	movf	(memset@n+1)& (0+255),w,b
 14581  012CB2  216B               	addwfc	(memset@s+1)& (0+255),w,b
 14582  012CB4  6F67               	movwf	(??_memset+1)& (0+255),b
 14583  012CB6  0EFC               	movlw	252
 14584  012CB8  2566               	addwf	??_memset& (0+255),w,b
 14585  012CBA  6ED9               	movwf	fsr2l,c
 14586  012CBC  0EFF               	movlw	255
 14587  012CBE  2167               	addwfc	(??_memset+1)& (0+255),w,b
 14588  012CC0  6EDA               	movwf	fsr2h,c
 14589  012CC2  0060  F18B  FFDF   	movff	memset@c,indf2
 14590                           
 14591                           ; BSR set to: 0
 14592  012CC8  5165               	movf	(memset@n+1)& (0+255),w,b
 14593  012CCA  E104               	bnz	l11211
 14594  012CCC  0E09               	movlw	9
 14595  012CCE  5D64               	subwf	memset@n& (0+255),w,b
 14596  012CD0  A0D8               	btfss	status,0,c
 14597  012CD2  0012               	return	
 14598  012CD4                     l11211:
 14599                           
 14600                           ; BSR set to: 0
 14601  012CD4  C06A  F066         	movff	memset@s,??_memset
 14602  012CD8  C06B  F067         	movff	memset@s+1,??_memset+1
 14603  012CDC  1F66               	comf	??_memset& (0+255),f,b
 14604  012CDE  1F67               	comf	(??_memset+1)& (0+255),f,b
 14605  012CE0  4B66               	infsnz	??_memset& (0+255),f,b
 14606  012CE2  2B67               	incf	(??_memset+1)& (0+255),f,b
 14607  012CE4  0E03               	movlw	3
 14608  012CE6  1566               	andwf	??_memset& (0+255),w,b
 14609  012CE8  6F68               	movwf	memset@k& (0+255),b
 14610  012CEA  6B69               	clrf	(memset@k+1)& (0+255),b
 14611  012CEC  5168               	movf	memset@k& (0+255),w,b
 14612  012CEE  276A               	addwf	memset@s& (0+255),f,b
 14613  012CF0  5169               	movf	(memset@k+1)& (0+255),w,b
 14614  012CF2  236B               	addwfc	(memset@s+1)& (0+255),f,b
 14615  012CF4  5168               	movf	memset@k& (0+255),w,b
 14616  012CF6  5F64               	subwf	memset@n& (0+255),f,b
 14617  012CF8  5169               	movf	(memset@k+1)& (0+255),w,b
 14618  012CFA  5B65               	subwfb	(memset@n+1)& (0+255),f,b
 14619  012CFC  0EFC               	movlw	252
 14620  012CFE  1764               	andwf	memset@n& (0+255),f,b
 14621  012D00  0EFF               	movlw	255
 14622  012D02  1765               	andwf	(memset@n+1)& (0+255),f,b
 14623  012D04  D00E               	goto	l11219
 14624  012D06                     l11213:
 14625                           
 14626                           ; BSR set to: 0
 14627  012D06  0060  F1AB  FFD9   	movff	memset@s,fsr2l
 14628  012D0C  0060  F1AF  FFDA   	movff	memset@s+1,fsr2h
 14629  012D12  0060  F18B  FFDF   	movff	memset@c,indf2
 14630                           
 14631                           ; BSR set to: 0
 14632  012D18  0764               	decf	memset@n& (0+255),f,b
 14633  012D1A  A0D8               	btfss	status,0,c
 14634  012D1C  0765               	decf	(memset@n+1)& (0+255),f,b
 14635                           
 14636                           ; BSR set to: 0
 14637  012D1E  4B6A               	infsnz	memset@s& (0+255),f,b
 14638  012D20  2B6B               	incf	(memset@s+1)& (0+255),f,b
 14639  012D22                     l11219:
 14640                           
 14641                           ; BSR set to: 0
 14642  012D22  5164               	movf	memset@n& (0+255),w,b
 14643  012D24  1165               	iorwf	(memset@n+1)& (0+255),w,b
 14644  012D26  B4D8               	btfsc	status,2,c
 14645  012D28  0012               	return	
 14646  012D2A  D7ED               	goto	l11213
 14647  012D2C                     __end_of_memset:
 14648                           	callstack 0
 14649                           
 14650 ;; *************** function _linux_putc *****************
 14651 ;; Defined at:
 14652 ;;		line 51 in file "scdm.c"
 14653 ;; Parameters:    Size  Location     Type
 14654 ;;  data            2   22[BANK0 ] PTR unsigned char 
 14655 ;;		 -> STR_29(3), cli_read@i(1), 
 14656 ;;  a_len           1   24[BANK0 ] unsigned char 
 14657 ;; Auto vars:     Size  Location     Type
 14658 ;;		None
 14659 ;; Return value:  Size  Location     Type
 14660 ;;                  1    wreg      unsigned char 
 14661 ;; Registers used:
 14662 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14663 ;; Tracked objects:
 14664 ;;		On entry : 3F/0
 14665 ;;		On exit  : 3F/0
 14666 ;;		Unchanged: 0/0
 14667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14668 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14671 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14672 ;;Total ram usage:        3 bytes
 14673 ;; Hardware stack levels used: 1
 14674 ;; Hardware stack levels required when called: 12
 14675 ;; This function calls:
 14676 ;;		_puts
 14677 ;; This function is called by:
 14678 ;;		_cli_read
 14679 ;; This function uses a non-reentrant model
 14680 ;;
 14681                           
 14682                           	psect	text54
 14683  014E02                     __ptext54:
 14684                           	callstack 0
 14685  014E02                     _linux_putc:
 14686                           	callstack 17
 14687                           
 14688                           ; BSR set to: 0
 14689                           ;scdm.c: 51: uint8_t linux_putc(uint8_t *data, uint8_t a_len);scdm.c: 52: {;scdm.c: 53: 
      +                           puts((const char *) data);
 14690                           
 14691                           ; BSR set to: 0
 14692                           ;incstack = 0
 14693  014E02  C076  F073         	movff	linux_putc@data,puts@s
 14694  014E06  C077  F074         	movff	linux_putc@data+1,puts@s+1
 14695  014E0A  EC29  F0A4         	call	_puts	;wreg free
 14696                           
 14697                           ; BSR set to: 0
 14698  014E0E  0012               	return		;funcret
 14699  014E10                     __end_of_linux_putc:
 14700                           	callstack 0
 14701                           
 14702 ;; *************** function _linux_getc *****************
 14703 ;; Defined at:
 14704 ;;		line 41 in file "scdm.c"
 14705 ;; Parameters:    Size  Location     Type
 14706 ;;  a_data          2    0[BANK0 ] PTR unsigned char 
 14707 ;;		 -> cli_read@i(1), main@i(1), 
 14708 ;; Auto vars:     Size  Location     Type
 14709 ;;		None
 14710 ;; Return value:  Size  Location     Type
 14711 ;;                  1    wreg      unsigned char 
 14712 ;; Registers used:
 14713 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14714 ;; Tracked objects:
 14715 ;;		On entry : 3F/0
 14716 ;;		On exit  : 6/0
 14717 ;;		Unchanged: 0/0
 14718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14719 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14722 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14723 ;;Total ram usage:        2 bytes
 14724 ;; Hardware stack levels used: 1
 14725 ;; Hardware stack levels required when called: 8
 14726 ;; This function calls:
 14727 ;;		_UART1_Read
 14728 ;;		_UART1_is_rx_ready
 14729 ;; This function is called by:
 14730 ;;		_main
 14731 ;;		_cli_read
 14732 ;; This function uses a non-reentrant model
 14733 ;;
 14734                           
 14735                           	psect	text55
 14736  014AE8                     __ptext55:
 14737                           	callstack 0
 14738  014AE8                     _linux_getc:
 14739                           	callstack 22
 14740                           
 14741                           ; BSR set to: 0
 14742                           ;scdm.c: 41: uint8_t linux_getc(uint8_t *a_data);scdm.c: 42: {;scdm.c: 43:  if (UART1_is
      +                          _rx_ready()) {
 14743                           
 14744                           ; BSR set to: 0
 14745                           ;incstack = 0
 14746  014AE8  EC08  F0A7         	call	_UART1_is_rx_ready	;wreg free
 14747  014AEC  0900               	iorlw	0
 14748  014AEE  B4D8               	btfsc	status,2,c
 14749  014AF0  D00B               	goto	l12793
 14750                           
 14751                           ; BSR set to: 0
 14752                           ;scdm.c: 44:   a_data[0] = UART1_Read();
 14753  014AF2  EC73  F0A3         	call	_UART1_Read	;wreg free
 14754  014AF6  0060  F183  FFD9   	movff	linux_getc@a_data,fsr2l
 14755  014AFC  0060  F187  FFDA   	movff	linux_getc@a_data+1,fsr2h
 14756  014B02  6EDF               	movwf	indf2,c
 14757                           
 14758                           ; BSR set to: 57
 14759                           ;scdm.c: 45:   return 1;
 14760  014B04  0E01               	movlw	1
 14761  014B06  0012               	return	
 14762  014B08                     l12793:
 14763                           
 14764                           ; BSR set to: 0
 14765                           ;scdm.c: 47:   return 0;
 14766  014B08  0E00               	movlw	0
 14767  014B0A  0012               	return		;funcret
 14768  014B0C                     __end_of_linux_getc:
 14769                           	callstack 0
 14770                           
 14771 ;; *************** function _UART1_is_rx_ready *****************
 14772 ;; Defined at:
 14773 ;;		line 169 in file "mcc_generated_files/uart1.c"
 14774 ;; Parameters:    Size  Location     Type
 14775 ;;		None
 14776 ;; Auto vars:     Size  Location     Type
 14777 ;;		None
 14778 ;; Return value:  Size  Location     Type
 14779 ;;                  1    wreg      _Bool 
 14780 ;; Registers used:
 14781 ;;		wreg, status,2
 14782 ;; Tracked objects:
 14783 ;;		On entry : 3F/0
 14784 ;;		On exit  : 3F/0
 14785 ;;		Unchanged: 3F/0
 14786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14791 ;;Total ram usage:        0 bytes
 14792 ;; Hardware stack levels used: 1
 14793 ;; Hardware stack levels required when called: 7
 14794 ;; This function calls:
 14795 ;;		Nothing
 14796 ;; This function is called by:
 14797 ;;		_linux_getc
 14798 ;; This function uses a non-reentrant model
 14799 ;;
 14800                           
 14801                           	psect	text56
 14802  014E10                     __ptext56:
 14803                           	callstack 0
 14804  014E10                     _UART1_is_rx_ready:
 14805                           	callstack 22
 14806                           
 14807                           ; BSR set to: 0
 14808                           ;mcc_generated_files/uart1.c: 171:     return (uart1RxCount ? 1 : 0);
 14809                           
 14810                           ;incstack = 0
 14811  014E10  5039               	movf	_uart1RxCount^0,w,c	;volatile
 14812  014E12  B4D8               	btfsc	status,2,c
 14813  014E14  D002               	goto	u12690
 14814  014E16  0E01               	movlw	1
 14815  014E18  0012               	return	
 14816  014E1A                     u12690:
 14817  014E1A  0E00               	movlw	0
 14818                           
 14819                           ; BSR set to: 0
 14820  014E1C  0012               	return		;funcret
 14821  014E1E                     __end_of_UART1_is_rx_ready:
 14822                           	callstack 0
 14823                           
 14824 ;; *************** function _UART1_Read *****************
 14825 ;; Defined at:
 14826 ;;		line 188 in file "mcc_generated_files/uart1.c"
 14827 ;; Parameters:    Size  Location     Type
 14828 ;;		None
 14829 ;; Auto vars:     Size  Location     Type
 14830 ;;  readValue       1   31[COMRAM] unsigned char 
 14831 ;; Return value:  Size  Location     Type
 14832 ;;                  1    wreg      unsigned char 
 14833 ;; Registers used:
 14834 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14835 ;; Tracked objects:
 14836 ;;		On entry : 3F/0
 14837 ;;		On exit  : 3F/39
 14838 ;;		Unchanged: 0/0
 14839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14841 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14843 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14844 ;;Total ram usage:        1 bytes
 14845 ;; Hardware stack levels used: 1
 14846 ;; Hardware stack levels required when called: 7
 14847 ;; This function calls:
 14848 ;;		Nothing
 14849 ;; This function is called by:
 14850 ;;		_linux_getc
 14851 ;; This function uses a non-reentrant model
 14852 ;;
 14853                           
 14854                           	psect	text57
 14855  0146E6                     __ptext57:
 14856                           	callstack 0
 14857  0146E6                     _UART1_Read:
 14858                           	callstack 22
 14859                           
 14860                           ; BSR set to: 0
 14861                           ;mcc_generated_files/uart1.c: 192:     while(0 == uart1RxCount)
 14862                           
 14863                           ; BSR set to: 0
 14864                           ;mcc_generated_files/uart1.c: 192:     while(0 == uart1RxCount)
 14865                           
 14866                           ; BSR set to: 0
 14867                           ;incstack = 0
 14868  0146E6  5039               	movf	_uart1RxCount^0,w,c	;volatile
 14869  0146E8  B4D8               	btfsc	status,2,c
 14870  0146EA  D7FD               	goto	__ptext57
 14871                           
 14872                           ; BSR set to: 0
 14873                           ;mcc_generated_files/uart1.c: 196:     uart1RxLastError = uart1RxStatusBuffer[uart1RxTai
      +                          l];
 14874  0146EC  0E00               	movlw	low _uart1RxStatusBuffer
 14875  0146EE  243A               	addwf	_uart1RxTail^0,w,c	;volatile
 14876  0146F0  6ED9               	movwf	fsr2l,c
 14877  0146F2  6ADA               	clrf	fsr2h,c
 14878  0146F4  0E02               	movlw	high _uart1RxStatusBuffer
 14879  0146F6  22DA               	addwfc	fsr2h,f,c
 14880  0146F8  50DF               	movf	indf2,w,c
 14881  0146FA  6E38               	movwf	_uart1RxLastError^0,c	;volatile
 14882                           
 14883                           ;mcc_generated_files/uart1.c: 198:     readValue = uart1RxBuffer[uart1RxTail++];
 14884  0146FC  0E00               	movlw	low _uart1RxBuffer
 14885  0146FE  243A               	addwf	_uart1RxTail^0,w,c	;volatile
 14886  014700  6ED9               	movwf	fsr2l,c
 14887  014702  6ADA               	clrf	fsr2h,c
 14888  014704  0E03               	movlw	high _uart1RxBuffer
 14889  014706  22DA               	addwfc	fsr2h,f,c
 14890  014708  50DF               	movf	indf2,w,c
 14891  01470A  6E20               	movwf	UART1_Read@readValue^0,c
 14892                           
 14893                           ; BSR set to: 0
 14894  01470C  2A3A               	incf	_uart1RxTail^0,f,c	;volatile
 14895                           
 14896                           ; BSR set to: 0
 14897                           ;mcc_generated_files/uart1.c: 199:     if(sizeof(uart1RxBuffer) <= uart1RxTail)
 14898  01470E  0E3F               	movlw	63
 14899  014710  643A               	cpfsgt	_uart1RxTail^0,c
 14900  014712  D002               	goto	l12345
 14901                           
 14902                           ; BSR set to: 0
 14903                           ;mcc_generated_files/uart1.c: 200:     {;mcc_generated_files/uart1.c: 201:         uart1
      +                          RxTail = 0;
 14904  014714  0E00               	movlw	0
 14905  014716  6E3A               	movwf	_uart1RxTail^0,c	;volatile
 14906  014718                     l12345:
 14907                           
 14908                           ; BSR set to: 0
 14909                           ;mcc_generated_files/uart1.c: 203:     PIE3bits.U1RXIE = 0;
 14910  014718  0139               	movlb	57	; () banked
 14911  01471A  9793               	bcf	147,3,b	;volatile
 14912                           
 14913                           ; BSR set to: 57
 14914                           ;mcc_generated_files/uart1.c: 204:     uart1RxCount--;
 14915  01471C  0639               	decf	_uart1RxCount^0,f,c	;volatile
 14916                           
 14917                           ; BSR set to: 57
 14918                           ;mcc_generated_files/uart1.c: 205:     PIE3bits.U1RXIE = 1;
 14919  01471E  8793               	bsf	147,3,b	;volatile
 14920                           
 14921                           ; BSR set to: 57
 14922                           ;mcc_generated_files/uart1.c: 207:     return readValue;
 14923  014720  5020               	movf	UART1_Read@readValue^0,w,c
 14924                           
 14925                           ; BSR set to: 57
 14926  014722  0012               	return		;funcret
 14927  014724                     __end_of_UART1_Read:
 14928                           	callstack 0
 14929                           
 14930 ;; *************** function __cli_interpret_cmd *****************
 14931 ;; Defined at:
 14932 ;;		line 57 in file "scdm.c"
 14933 ;; Parameters:    Size  Location     Type
 14934 ;;  a_ctx           2   24[BANK0 ] PTR struct _t_cli_ctx
 14935 ;;		 -> cli_ctx(131), 
 14936 ;; Auto vars:     Size  Location     Type
 14937 ;;  i               1   35[BANK0 ] unsigned char 
 14938 ;;  ret             1   34[BANK0 ] unsigned char 
 14939 ;; Return value:  Size  Location     Type
 14940 ;;                  1    wreg      unsigned char 
 14941 ;; Registers used:
 14942 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 14943 ;; Tracked objects:
 14944 ;;		On entry : 3F/0
 14945 ;;		On exit  : 3F/0
 14946 ;;		Unchanged: 0/0
 14947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14948 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14949 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14950 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14951 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14952 ;;Total ram usage:       12 bytes
 14953 ;; Hardware stack levels used: 1
 14954 ;; Hardware stack levels required when called: 13
 14955 ;; This function calls:
 14956 ;;		Absolute function
 14957 ;;		_fh_p0
 14958 ;;		_fh_p1
 14959 ;;		_fh_pd
 14960 ;;		_fh_pl
 14961 ;;		_fh_po
 14962 ;;		_fh_pp
 14963 ;;		_fh_pr
 14964 ;;		_fh_ps
 14965 ;;		_fh_pu
 14966 ;;		_strlen
 14967 ;;		_strncmp
 14968 ;; This function is called by:
 14969 ;;		_cli_read
 14970 ;; This function uses a non-reentrant model
 14971 ;;
 14972                           
 14973                           	psect	text58
 14974  012410                     __ptext58:
 14975                           	callstack 0
 14976  012410                     __cli_interpret_cmd:
 14977                           	callstack 16
 14978                           
 14979                           ; BSR set to: 0
 14980                           ;scdm.c: 57: static uint8_t _cli_interpret_cmd(t_cli_ctx *a_ctx);scdm.c: 58: {;scdm.c: 5
      +                          9:  uint8_t i = 0;
 14981                           
 14982                           ; BSR set to: 57
 14983                           ;incstack = 0
 14984  012410  0E00               	movlw	0
 14985  012412  6F83               	movwf	__cli_interpret_cmd@i& (0+255),b
 14986                           
 14987                           ;scdm.c: 60:  uint8_t ret = E_CMD_OK;
 14988  012414  0E00               	movlw	0
 14989  012416  6F82               	movwf	__cli_interpret_cmd@ret& (0+255),b
 14990                           
 14991                           ; BSR set to: 0
 14992                           ;scdm.c: 62:  if (!strlen(a_ctx->cmd)) {
 14993  012418  0E02               	movlw	2
 14994  01241A  2578               	addwf	__cli_interpret_cmd@a_ctx& (0+255),w,b
 14995  01241C  6F60               	movwf	strlen@s& (0+255),b
 14996  01241E  0E00               	movlw	0
 14997  012420  2179               	addwfc	(__cli_interpret_cmd@a_ctx+1)& (0+255),w,b
 14998  012422  6F61               	movwf	(strlen@s+1)& (0+255),b
 14999  012424  ECF9  F0A0         	call	_strlen	;wreg free
 15000  012428  5160               	movf	?_strlen& (0+255),w,b
 15001  01242A  1161               	iorwf	(?_strlen+1)& (0+255),w,b
 15002  01242C  A4D8               	btfss	status,2,c
 15003  01242E  D002               	goto	l12829
 15004                           
 15005                           ; BSR set to: 0
 15006                           ;scdm.c: 63:   return E_CMD_EMPTY;
 15007  012430  0E03               	movlw	3
 15008  012432  0012               	return	
 15009  012434                     l12829:
 15010                           
 15011                           ; BSR set to: 0
 15012                           ;scdm.c: 66:  if (strlen(a_ctx->cmd) < 2) {
 15013  012434  0E02               	movlw	2
 15014  012436  2578               	addwf	__cli_interpret_cmd@a_ctx& (0+255),w,b
 15015  012438  6F60               	movwf	strlen@s& (0+255),b
 15016  01243A  0E00               	movlw	0
 15017  01243C  2179               	addwfc	(__cli_interpret_cmd@a_ctx+1)& (0+255),w,b
 15018  01243E  6F61               	movwf	(strlen@s+1)& (0+255),b
 15019  012440  ECF9  F0A0         	call	_strlen	;wreg free
 15020  012444  5161               	movf	(?_strlen+1)& (0+255),w,b
 15021  012446  E103               	bnz	u13011
 15022  012448  0E02               	movlw	2
 15023  01244A  5D60               	subwf	?_strlen& (0+255),w,b
 15024  01244C  B0D8               	btfsc	status,0,c
 15025  01244E                     u13011:
 15026  01244E  D07D               	goto	l12841
 15027                           
 15028                           ; BSR set to: 0
 15029                           ;scdm.c: 67:   return E_CMD_TOO_SHORT;
 15030  012450  0E02               	movlw	2
 15031  012452  0012               	return	
 15032  012454                     l12835:
 15033                           
 15034                           ; BSR set to: 0
 15035                           ;scdm.c: 71:   if (!strncmp(a_ctx->cmds[i].cmd, a_ctx->cmd, strlen(a_ctx->cmds[i].cmd)))
      +                           {
 15036  012454  5183               	movf	__cli_interpret_cmd@i& (0+255),w,b
 15037  012456  0D05               	mullw	5
 15038  012458  006F FFCC  F07A    	movff	prodl,??__cli_interpret_cmd
 15039  01245E  006F FFD0  F07B    	movff	prodh,??__cli_interpret_cmd+1
 15040  012464  0060  F1E3  FFD9   	movff	__cli_interpret_cmd@a_ctx,fsr2l
 15041  01246A  0060  F1E7  FFDA   	movff	__cli_interpret_cmd@a_ctx+1,fsr2h
 15042  012470  006F FF78  F07C    	movff	postinc2,??__cli_interpret_cmd+2
 15043  012476  006F FF74  F07D    	movff	postdec2,??__cli_interpret_cmd+3
 15044  01247C  517A               	movf	??__cli_interpret_cmd& (0+255),w,b
 15045  01247E  257C               	addwf	(??__cli_interpret_cmd+2)& (0+255),w,b
 15046  012480  6ED9               	movwf	fsr2l,c
 15047  012482  517B               	movf	(??__cli_interpret_cmd+1)& (0+255),w,b
 15048  012484  217D               	addwfc	(??__cli_interpret_cmd+3)& (0+255),w,b
 15049  012486  6EDA               	movwf	fsr2h,c
 15050  012488  006F FF78  F064    	movff	postinc2,strncmp@_l
 15051  01248E  006F FF74  F065    	movff	postdec2,strncmp@_l+1
 15052  012494  0E02               	movlw	2
 15053  012496  2578               	addwf	__cli_interpret_cmd@a_ctx& (0+255),w,b
 15054  012498  6F66               	movwf	strncmp@_r& (0+255),b
 15055  01249A  0E00               	movlw	0
 15056  01249C  2179               	addwfc	(__cli_interpret_cmd@a_ctx+1)& (0+255),w,b
 15057  01249E  6F67               	movwf	(strncmp@_r+1)& (0+255),b
 15058  0124A0  5183               	movf	__cli_interpret_cmd@i& (0+255),w,b
 15059  0124A2  0D05               	mullw	5
 15060  0124A4  006F FFCC  F07E    	movff	prodl,??__cli_interpret_cmd+4
 15061  0124AA  006F FFD0  F07F    	movff	prodh,??__cli_interpret_cmd+5
 15062  0124B0  0060  F1E3  FFD9   	movff	__cli_interpret_cmd@a_ctx,fsr2l
 15063  0124B6  0060  F1E7  FFDA   	movff	__cli_interpret_cmd@a_ctx+1,fsr2h
 15064  0124BC  006F FF78  F080    	movff	postinc2,??__cli_interpret_cmd+6
 15065  0124C2  006F FF74  F081    	movff	postdec2,??__cli_interpret_cmd+7
 15066  0124C8  517E               	movf	(??__cli_interpret_cmd+4)& (0+255),w,b
 15067  0124CA  2580               	addwf	(??__cli_interpret_cmd+6)& (0+255),w,b
 15068  0124CC  6ED9               	movwf	fsr2l,c
 15069  0124CE  517F               	movf	(??__cli_interpret_cmd+5)& (0+255),w,b
 15070  0124D0  2181               	addwfc	(??__cli_interpret_cmd+7)& (0+255),w,b
 15071  0124D2  6EDA               	movwf	fsr2h,c
 15072  0124D4  006F FF78  F060    	movff	postinc2,strlen@s
 15073  0124DA  006F FF74  F061    	movff	postdec2,strlen@s+1
 15074  0124E0  ECF9  F0A0         	call	_strlen	;wreg free
 15075  0124E4  C060  F068         	movff	?_strlen,strncmp@n
 15076  0124E8  C061  F069         	movff	?_strlen+1,strncmp@n+1
 15077  0124EC  EC91  F094         	call	_strncmp	;wreg free
 15078  0124F0  5164               	movf	?_strncmp& (0+255),w,b
 15079  0124F2  1165               	iorwf	(?_strncmp+1)& (0+255),w,b
 15080  0124F4  A4D8               	btfss	status,2,c
 15081  0124F6  D028               	goto	l12839
 15082                           
 15083                           ; BSR set to: 0
 15084                           ;scdm.c: 73:    a_ctx->cmds[i].fh((void *) a_ctx);
 15085  0124F8  C078  F076         	movff	__cli_interpret_cmd@a_ctx,fh_p1@a_data
 15086  0124FC  C079  F077         	movff	__cli_interpret_cmd@a_ctx+1,fh_p1@a_data+1
 15087  012500  5183               	movf	__cli_interpret_cmd@i& (0+255),w,b
 15088  012502  0D05               	mullw	5
 15089  012504  0060  F1E3  FFD9   	movff	__cli_interpret_cmd@a_ctx,fsr2l
 15090  01250A  0060  F1E7  FFDA   	movff	__cli_interpret_cmd@a_ctx+1,fsr2h
 15091  012510  006F FF78  F07A    	movff	postinc2,??__cli_interpret_cmd
 15092  012516  006F FF74  F07B    	movff	postdec2,??__cli_interpret_cmd+1
 15093  01251C  50F3               	movf	243,w,c
 15094  01251E  277A               	addwf	??__cli_interpret_cmd& (0+255),f,b
 15095  012520  50F4               	movf	244,w,c
 15096  012522  237B               	addwfc	(??__cli_interpret_cmd+1)& (0+255),f,b
 15097  012524  0E02               	movlw	2
 15098  012526  257A               	addwf	??__cli_interpret_cmd& (0+255),w,b
 15099  012528  6ED9               	movwf	fsr2l,c
 15100  01252A  0E00               	movlw	0
 15101  01252C  217B               	addwfc	(??__cli_interpret_cmd+1)& (0+255),w,b
 15102  01252E  6EDA               	movwf	fsr2h,c
 15103  012530  D801               	call	u13038
 15104  012532  D028               	goto	u13040
 15105  012534                     u13038:
 15106  012534  0005               	push	
 15107  012536  6EFA               	movwf	pclath,c
 15108  012538  50DE               	movf	postinc2,w,c
 15109  01253A  6EFD               	movwf	tosl,c
 15110  01253C  50DE               	movf	postinc2,w,c
 15111  01253E  6EFE               	movwf	tosh,c
 15112  012540  50DE               	movf	postinc2,w,c
 15113  012542  6EFF               	movwf	tosu,c
 15114  012544  50FA               	movf	pclath,w,c
 15115  012546  0012               	return		;indir
 15116  012548                     l12839:
 15117                           
 15118                           ; BSR set to: 0
 15119                           ;scdm.c: 76:   i++;
 15120  012548  2B83               	incf	__cli_interpret_cmd@i& (0+255),f,b
 15121  01254A                     l12841:
 15122                           
 15123                           ; BSR set to: 0
 15124                           ;scdm.c: 70:  while (a_ctx->cmds[i].fh) {
 15125  01254A  5183               	movf	__cli_interpret_cmd@i& (0+255),w,b
 15126  01254C  0D05               	mullw	5
 15127  01254E  0060  F1E3  FFD9   	movff	__cli_interpret_cmd@a_ctx,fsr2l
 15128  012554  0060  F1E7  FFDA   	movff	__cli_interpret_cmd@a_ctx+1,fsr2h
 15129  01255A  006F FF78  F07A    	movff	postinc2,??__cli_interpret_cmd
 15130  012560  006F FF74  F07B    	movff	postdec2,??__cli_interpret_cmd+1
 15131  012566  50F3               	movf	243,w,c
 15132  012568  277A               	addwf	??__cli_interpret_cmd& (0+255),f,b
 15133  01256A  50F4               	movf	244,w,c
 15134  01256C  237B               	addwfc	(??__cli_interpret_cmd+1)& (0+255),f,b
 15135  01256E  0E02               	movlw	2
 15136  012570  257A               	addwf	??__cli_interpret_cmd& (0+255),w,b
 15137  012572  6ED9               	movwf	fsr2l,c
 15138  012574  0E00               	movlw	0
 15139  012576  217B               	addwfc	(??__cli_interpret_cmd+1)& (0+255),w,b
 15140  012578  6EDA               	movwf	fsr2h,c
 15141  01257A  50DE               	movf	postinc2,w,c
 15142  01257C  10DE               	iorwf	postinc2,w,c
 15143  01257E  10DE               	iorwf	postinc2,w,c
 15144  012580  A4D8               	btfss	status,2,c
 15145  012582  D768               	goto	l12835
 15146  012584                     u13040:
 15147                           
 15148                           ;scdm.c: 79:  if (!a_ctx->cmds[i].fh) {
 15149  012584  0100               	movlb	0	; () banked
 15150  012586  5183               	movf	__cli_interpret_cmd@i& (0+255),w,b
 15151  012588  0D05               	mullw	5
 15152  01258A  0060  F1E3  FFD9   	movff	__cli_interpret_cmd@a_ctx,fsr2l
 15153  012590  0060  F1E7  FFDA   	movff	__cli_interpret_cmd@a_ctx+1,fsr2h
 15154  012596  006F FF78  F07A    	movff	postinc2,??__cli_interpret_cmd
 15155  01259C  006F FF74  F07B    	movff	postdec2,??__cli_interpret_cmd+1
 15156  0125A2  50F3               	movf	243,w,c
 15157  0125A4  277A               	addwf	??__cli_interpret_cmd& (0+255),f,b
 15158  0125A6  50F4               	movf	244,w,c
 15159  0125A8  237B               	addwfc	(??__cli_interpret_cmd+1)& (0+255),f,b
 15160  0125AA  0E02               	movlw	2
 15161  0125AC  257A               	addwf	??__cli_interpret_cmd& (0+255),w,b
 15162  0125AE  6ED9               	movwf	fsr2l,c
 15163  0125B0  0E00               	movlw	0
 15164  0125B2  217B               	addwfc	(??__cli_interpret_cmd+1)& (0+255),w,b
 15165  0125B4  6EDA               	movwf	fsr2h,c
 15166  0125B6  50DE               	movf	postinc2,w,c
 15167  0125B8  10DE               	iorwf	postinc2,w,c
 15168  0125BA  10DE               	iorwf	postinc2,w,c
 15169  0125BC  A4D8               	btfss	status,2,c
 15170  0125BE  D002               	goto	l1553
 15171                           
 15172                           ; BSR set to: 0
 15173                           ;scdm.c: 80:   ret = E_CMD_NOT_FOUND;
 15174  0125C0  0E01               	movlw	1
 15175  0125C2  6F82               	movwf	__cli_interpret_cmd@ret& (0+255),b
 15176  0125C4                     l1553:
 15177                           
 15178                           ; BSR set to: 0
 15179                           ;scdm.c: 83:  return ret;
 15180  0125C4  5182               	movf	__cli_interpret_cmd@ret& (0+255),w,b
 15181                           
 15182                           ; BSR set to: 0
 15183  0125C6  0012               	return		;funcret
 15184  0125C8                     __end_of__cli_interpret_cmd:
 15185                           	callstack 0
 15186                           
 15187 ;; *************** function _strncmp *****************
 15188 ;; Defined at:
 15189 ;;		line 3 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/strncmp.c"
 15190 ;; Parameters:    Size  Location     Type
 15191 ;;  _l              2    4[BANK0 ] PTR const unsigned char 
 15192 ;;		 -> vfpfcnvrt@ct(3), NULL(0), STR_28(3), STR_27(3), 
 15193 ;;		 -> STR_26(3), STR_25(3), STR_24(3), STR_23(3), 
 15194 ;;		 -> STR_22(3), STR_21(3), STR_20(3), STR_19(23), 
 15195 ;;		 -> STR_18(24), STR_17(24), STR_16(24), STR_15(107), 
 15196 ;;		 -> STR_14(3), STR_13(6), STR_12(17), 
 15197 ;;  _r              2    6[BANK0 ] PTR const unsigned char 
 15198 ;;		 -> cli_ctx.cmd(128), STR_45(4), STR_40(3), cli_ctx(131), 
 15199 ;;  n               2    8[BANK0 ] unsigned int 
 15200 ;; Auto vars:     Size  Location     Type
 15201 ;;  r               2   14[BANK0 ] PTR const unsigned char 
 15202 ;;		 -> cli_ctx.cmd(128), STR_45(4), STR_40(3), cli_ctx(131), 
 15203 ;;  l               2   12[BANK0 ] PTR const unsigned char 
 15204 ;;		 -> vfpfcnvrt@ct(3), NULL(0), STR_28(3), STR_27(3), 
 15205 ;;		 -> STR_26(3), STR_25(3), STR_24(3), STR_23(3), 
 15206 ;;		 -> STR_22(3), STR_21(3), STR_20(3), STR_19(23), 
 15207 ;;		 -> STR_18(24), STR_17(24), STR_16(24), STR_15(107), 
 15208 ;;		 -> STR_14(3), STR_13(6), STR_12(17), 
 15209 ;; Return value:  Size  Location     Type
 15210 ;;                  2    4[BANK0 ] int 
 15211 ;; Registers used:
 15212 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 15213 ;; Tracked objects:
 15214 ;;		On entry : 3F/0
 15215 ;;		On exit  : 3F/0
 15216 ;;		Unchanged: 0/0
 15217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15218 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15219 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15220 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15221 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15222 ;;Total ram usage:       12 bytes
 15223 ;; Hardware stack levels used: 1
 15224 ;; Hardware stack levels required when called: 7
 15225 ;; This function calls:
 15226 ;;		Nothing
 15227 ;; This function is called by:
 15228 ;;		__cli_interpret_cmd
 15229 ;;		_vfpfcnvrt
 15230 ;; This function uses a non-reentrant model
 15231 ;;
 15232                           
 15233                           	psect	text59
 15234  012922                     __ptext59:
 15235                           	callstack 0
 15236  012922                     _strncmp:
 15237                           	callstack 20
 15238                           
 15239                           ; BSR set to: 0
 15240                           
 15241                           ; BSR set to: 0
 15242                           ;incstack = 0
 15243  012922  C064  F06C         	movff	strncmp@_l,strncmp@l
 15244  012926  C065  F06D         	movff	strncmp@_l+1,strncmp@l+1
 15245  01292A  C066  F06E         	movff	strncmp@_r,strncmp@r
 15246  01292E  C067  F06F         	movff	strncmp@_r+1,strncmp@r+1
 15247  012932  0768               	decf	strncmp@n& (0+255),f,b
 15248  012934  A0D8               	btfss	status,0,c
 15249  012936  0769               	decf	(strncmp@n+1)& (0+255),f,b
 15250  012938  2968               	incf	strncmp@n& (0+255),w,b
 15251  01293A  E110               	bnz	l11849
 15252  01293C  2969               	incf	(strncmp@n+1)& (0+255),w,b
 15253  01293E  A4D8               	btfss	status,2,c
 15254  012940  D00D               	goto	l11849
 15255                           
 15256                           ; BSR set to: 0
 15257  012942  0E00               	movlw	0
 15258  012944  6F65               	movwf	(?_strncmp+1)& (0+255),b
 15259  012946  0E00               	movlw	0
 15260  012948  6F64               	movwf	?_strncmp& (0+255),b
 15261  01294A  0012               	return	
 15262  01294C                     l11847:
 15263  01294C  0100               	movlb	0	; () banked
 15264  01294E  4B6C               	infsnz	strncmp@l& (0+255),f,b
 15265  012950  2B6D               	incf	(strncmp@l+1)& (0+255),f,b
 15266  012952  4B6E               	infsnz	strncmp@r& (0+255),f,b
 15267  012954  2B6F               	incf	(strncmp@r+1)& (0+255),f,b
 15268  012956  0768               	decf	strncmp@n& (0+255),f,b
 15269  012958  A0D8               	btfss	status,0,c
 15270  01295A  0769               	decf	(strncmp@n+1)& (0+255),f,b
 15271  01295C                     l11849:
 15272                           
 15273                           ; BSR set to: 0
 15274  01295C  0060  F1B3  FFF6   	movff	strncmp@l,tblptrl
 15275  012962  0060  F1B7  FFF7   	movff	strncmp@l+1,tblptrh
 15276  012968  0E00               	movlw	low (__mediumconst shr (0+16))
 15277  01296A  6EF8               	movwf	tblptru,c
 15278  01296C  0E1F               	movlw	(high __ramtop+-1)
 15279  01296E  64F7               	cpfsgt	tblptrh,c
 15280  012970  D003               	bra	u11877
 15281  012972  0008               	tblrd		*
 15282  012974  50F5               	movf	tablat,w,c
 15283  012976  D007               	bra	u11870
 15284  012978                     u11877:
 15285  012978  006F FFDB FFE1     	movff	tblptrl,fsr1l
 15286  01297E  006F FFDF FFE2     	movff	tblptrh,fsr1h
 15287  012984  50E7               	movf	indf1,w,c
 15288  012986                     u11870:
 15289  012986  0900               	iorlw	0
 15290  012988  B4D8               	btfsc	status,2,c
 15291  01298A  D04C               	goto	u11930
 15292  01298C  0060  F1BB  FFF6   	movff	strncmp@r,tblptrl
 15293  012992  0060  F1BF  FFF7   	movff	strncmp@r+1,tblptrh
 15294  012998  0E00               	movlw	low (__mediumconst shr (0+16))
 15295  01299A  6EF8               	movwf	tblptru,c
 15296  01299C  0E1F               	movlw	(high __ramtop+-1)
 15297  01299E  64F7               	cpfsgt	tblptrh,c
 15298  0129A0  D003               	bra	u11897
 15299  0129A2  0008               	tblrd		*
 15300  0129A4  50F5               	movf	tablat,w,c
 15301  0129A6  D007               	bra	u11890
 15302  0129A8                     u11897:
 15303  0129A8  006F FFDB FFE1     	movff	tblptrl,fsr1l
 15304  0129AE  006F FFDF FFE2     	movff	tblptrh,fsr1h
 15305  0129B4  50E7               	movf	indf1,w,c
 15306  0129B6                     u11890:
 15307  0129B6  0900               	iorlw	0
 15308  0129B8  B4D8               	btfsc	status,2,c
 15309  0129BA  D034               	goto	u11930
 15310  0129BC  0100               	movlb	0	; () banked
 15311  0129BE  5168               	movf	strncmp@n& (0+255),w,b
 15312  0129C0  1169               	iorwf	(strncmp@n+1)& (0+255),w,b
 15313  0129C2  B4D8               	btfsc	status,2,c
 15314  0129C4  D02F               	goto	u11930
 15315                           
 15316                           ; BSR set to: 0
 15317  0129C6  0060  F1BB  FFF6   	movff	strncmp@r,tblptrl
 15318  0129CC  0060  F1BF  FFF7   	movff	strncmp@r+1,tblptrh
 15319  0129D2  0E00               	movlw	low (__mediumconst shr (0+16))
 15320  0129D4  6EF8               	movwf	tblptru,c
 15321  0129D6  0E1F               	movlw	(high __ramtop+-1)
 15322  0129D8  64F7               	cpfsgt	tblptrh,c
 15323  0129DA  D003               	bra	u11927
 15324  0129DC  0008               	tblrd		*
 15325  0129DE  50F5               	movf	tablat,w,c
 15326  0129E0  D007               	bra	u11920
 15327  0129E2                     u11927:
 15328  0129E2  006F FFDB FFE1     	movff	tblptrl,fsr1l
 15329  0129E8  006F FFDF FFE2     	movff	tblptrh,fsr1h
 15330  0129EE  50E7               	movf	indf1,w,c
 15331  0129F0                     u11920:
 15332  0129F0  0100               	movlb	0	; () banked
 15333  0129F2  6F6A               	movwf	??_strncmp& (0+255),b
 15334  0129F4  0060  F1B3  FFF6   	movff	strncmp@l,tblptrl
 15335  0129FA  0060  F1B7  FFF7   	movff	strncmp@l+1,tblptrh
 15336  012A00  0E00               	movlw	low (__mediumconst shr (0+16))
 15337  012A02  6EF8               	movwf	tblptru,c
 15338  012A04  0E1F               	movlw	(high __ramtop+-1)
 15339  012A06  64F7               	cpfsgt	tblptrh,c
 15340  012A08  D003               	bra	u11937
 15341  012A0A  0008               	tblrd		*
 15342  012A0C  50F5               	movf	tablat,w,c
 15343  012A0E  D007               	bra	u11935
 15344  012A10                     u11937:
 15345  012A10  006F FFDB FFE1     	movff	tblptrl,fsr1l
 15346  012A16  006F FFDF FFE2     	movff	tblptrh,fsr1h
 15347  012A1C  50E7               	movf	indf1,w,c
 15348  012A1E                     u11935:
 15349  012A1E  196A               	xorwf	??_strncmp& (0+255),w,b
 15350  012A20  B4D8               	btfsc	status,2,c
 15351  012A22  D794               	goto	l11847
 15352  012A24                     u11930:
 15353  012A24  0060  F1B3  FFF6   	movff	strncmp@l,tblptrl
 15354  012A2A  0060  F1B7  FFF7   	movff	strncmp@l+1,tblptrh
 15355  012A30  0E00               	movlw	low (__mediumconst shr (0+16))
 15356  012A32  6EF8               	movwf	tblptru,c
 15357  012A34  0E1F               	movlw	(high __ramtop+-1)
 15358  012A36  64F7               	cpfsgt	tblptrh,c
 15359  012A38  D003               	bra	u11947
 15360  012A3A  0008               	tblrd		*
 15361  012A3C  50F5               	movf	tablat,w,c
 15362  012A3E  D007               	bra	u11940
 15363  012A40                     u11947:
 15364  012A40  006F FFDB FFE1     	movff	tblptrl,fsr1l
 15365  012A46  006F FFDF FFE2     	movff	tblptrh,fsr1h
 15366  012A4C  50E7               	movf	indf1,w,c
 15367  012A4E                     u11940:
 15368  012A4E  0100               	movlb	0	; () banked
 15369  012A50  6F6A               	movwf	??_strncmp& (0+255),b
 15370  012A52  0060  F1BB  FFF6   	movff	strncmp@r,tblptrl
 15371  012A58  0060  F1BF  FFF7   	movff	strncmp@r+1,tblptrh
 15372  012A5E  0E00               	movlw	low (__mediumconst shr (0+16))
 15373  012A60  6EF8               	movwf	tblptru,c
 15374  012A62  0E1F               	movlw	(high __ramtop+-1)
 15375  012A64  64F7               	cpfsgt	tblptrh,c
 15376  012A66  D003               	bra	u11957
 15377  012A68  0008               	tblrd		*
 15378  012A6A  50F5               	movf	tablat,w,c
 15379  012A6C  D007               	bra	u11950
 15380  012A6E                     u11957:
 15381  012A6E  006F FFDB FFE1     	movff	tblptrl,fsr1l
 15382  012A74  006F FFDF FFE2     	movff	tblptrh,fsr1h
 15383  012A7A  50E7               	movf	indf1,w,c
 15384  012A7C                     u11950:
 15385  012A7C  0100               	movlb	0	; () banked
 15386  012A7E  6F6B               	movwf	(??_strncmp+1)& (0+255),b
 15387  012A80  516B               	movf	(??_strncmp+1)& (0+255),w,b
 15388  012A82  5D6A               	subwf	??_strncmp& (0+255),w,b
 15389  012A84  6F64               	movwf	?_strncmp& (0+255),b
 15390  012A86  6B65               	clrf	(?_strncmp+1)& (0+255),b
 15391  012A88  A0D8               	btfss	status,0,c
 15392  012A8A  0765               	decf	(?_strncmp+1)& (0+255),f,b
 15393                           
 15394                           ; BSR set to: 0
 15395  012A8C  0012               	return		;funcret
 15396  012A8E                     __end_of_strncmp:
 15397                           	callstack 0
 15398                           
 15399 ;; *************** function _strlen *****************
 15400 ;; Defined at:
 15401 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/strlen.c"
 15402 ;; Parameters:    Size  Location     Type
 15403 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 15404 ;;		 -> cli_ctx.cmd(128), ?_printf(2), stoa@nuls(7), dbuf(80), 
 15405 ;;		 -> ?_sprintf(2), NULL(0), STR_28(3), STR_27(3), 
 15406 ;;		 -> STR_26(3), STR_25(3), STR_24(3), STR_23(3), 
 15407 ;;		 -> STR_22(3), STR_21(3), STR_20(3), cli_ctx(131), 
 15408 ;;		 -> build_version(14), buff1(255), STR_2(9), STR_1(12), 
 15409 ;; Auto vars:     Size  Location     Type
 15410 ;;  a               2    2[BANK0 ] PTR const unsigned char 
 15411 ;;		 -> cli_ctx.cmd(128), ?_printf(2), stoa@nuls(7), dbuf(80), 
 15412 ;;		 -> ?_sprintf(2), NULL(0), STR_28(3), STR_27(3), 
 15413 ;;		 -> STR_26(3), STR_25(3), STR_24(3), STR_23(3), 
 15414 ;;		 -> STR_22(3), STR_21(3), STR_20(3), cli_ctx(131), 
 15415 ;;		 -> build_version(14), buff1(255), STR_2(9), STR_1(12), 
 15416 ;; Return value:  Size  Location     Type
 15417 ;;                  2    0[BANK0 ] unsigned int 
 15418 ;; Registers used:
 15419 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 15420 ;; Tracked objects:
 15421 ;;		On entry : 2/0
 15422 ;;		On exit  : 3F/0
 15423 ;;		Unchanged: 0/0
 15424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15425 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15426 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15428 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15429 ;;Total ram usage:        4 bytes
 15430 ;; Hardware stack levels used: 1
 15431 ;; Hardware stack levels required when called: 7
 15432 ;; This function calls:
 15433 ;;		Nothing
 15434 ;; This function is called by:
 15435 ;;		__cli_interpret_cmd
 15436 ;;		_eaDogM_WriteString
 15437 ;;		_pad
 15438 ;;		_stoa
 15439 ;; This function uses a non-reentrant model
 15440 ;;
 15441                           
 15442                           	psect	text60
 15443  0141F2                     __ptext60:
 15444                           	callstack 0
 15445  0141F2                     _strlen:
 15446                           	callstack 18
 15447                           
 15448                           ; BSR set to: 0
 15449                           ;incstack = 0
 15450  0141F2  C060  F062         	movff	strlen@s,strlen@a
 15451  0141F6  C061  F063         	movff	strlen@s+1,strlen@a+1
 15452  0141FA  D003               	goto	l10969
 15453  0141FC                     l10967:
 15454  0141FC  0100               	movlb	0	; () banked
 15455  0141FE  4B60               	infsnz	strlen@s& (0+255),f,b
 15456  014200  2B61               	incf	(strlen@s+1)& (0+255),f,b
 15457  014202                     l10969:
 15458  014202  0060  F183  FFF6   	movff	strlen@s,tblptrl
 15459  014208  0060  F187  FFF7   	movff	strlen@s+1,tblptrh
 15460  01420E  0E00               	movlw	low (__mediumconst shr (0+16))
 15461  014210  6EF8               	movwf	tblptru,c
 15462  014212  0E1F               	movlw	(high __ramtop+-1)
 15463  014214  64F7               	cpfsgt	tblptrh,c
 15464  014216  D003               	bra	u10287
 15465  014218  0008               	tblrd		*
 15466  01421A  50F5               	movf	tablat,w,c
 15467  01421C  D007               	bra	u10280
 15468  01421E                     u10287:
 15469  01421E  006F FFDB FFE1     	movff	tblptrl,fsr1l
 15470  014224  006F FFDF FFE2     	movff	tblptrh,fsr1h
 15471  01422A  50E7               	movf	indf1,w,c
 15472  01422C                     u10280:
 15473  01422C  0900               	iorlw	0
 15474  01422E  A4D8               	btfss	status,2,c
 15475  014230  D7E5               	goto	l10967
 15476  014232  0100               	movlb	0	; () banked
 15477  014234  5162               	movf	strlen@a& (0+255),w,b
 15478  014236  5D60               	subwf	strlen@s& (0+255),w,b
 15479  014238  6F60               	movwf	?_strlen& (0+255),b
 15480  01423A  5163               	movf	(strlen@a+1)& (0+255),w,b
 15481  01423C  5961               	subwfb	(strlen@s+1)& (0+255),w,b
 15482  01423E  6F61               	movwf	(?_strlen+1)& (0+255),b
 15483                           
 15484                           ; BSR set to: 0
 15485  014240  0012               	return		;funcret
 15486  014242                     __end_of_strlen:
 15487                           	callstack 0
 15488                           
 15489 ;; *************** function _fh_p1 *****************
 15490 ;; Defined at:
 15491 ;;		line 208 in file "main.c"
 15492 ;; Parameters:    Size  Location     Type
 15493 ;;  a_data          2   22[BANK0 ] PTR void 
 15494 ;;		 -> cli_ctx(131), 
 15495 ;; Auto vars:     Size  Location     Type
 15496 ;;		None
 15497 ;; Return value:  Size  Location     Type
 15498 ;;                  1    wreg      void 
 15499 ;; Registers used:
 15500 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15501 ;; Tracked objects:
 15502 ;;		On entry : 3F/0
 15503 ;;		On exit  : 0/0
 15504 ;;		Unchanged: 0/0
 15505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15506 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15509 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15510 ;;Total ram usage:        2 bytes
 15511 ;; Hardware stack levels used: 1
 15512 ;; Hardware stack levels required when called: 12
 15513 ;; This function calls:
 15514 ;;		_DATAEE_WriteByte
 15515 ;;		_puts
 15516 ;; This function is called by:
 15517 ;;		__cli_interpret_cmd
 15518 ;; This function uses a non-reentrant model
 15519 ;;
 15520                           
 15521                           	psect	text61
 15522  014B78                     __ptext61:
 15523                           	callstack 0
 15524  014B78                     _fh_p1:
 15525                           	callstack 16
 15526                           
 15527                           ; BSR set to: 0
 15528                           ;main.c: 208: void fh_p1(void *a_data);main.c: 209: {;main.c: 210:  puts("\r\n ACCEL Sup
      +                          pression Supply \r\n");
 15529                           
 15530                           ; BSR set to: 0
 15531                           ;incstack = 0
 15532  014B78  0E91               	movlw	low STR_11
 15533  014B7A  6F73               	movwf	puts@s& (0+255),b
 15534  014B7C  0EFE               	movlw	high STR_11
 15535  014B7E  6F74               	movwf	(puts@s+1)& (0+255),b
 15536  014B80  EC29  F0A4         	call	_puts	;wreg free
 15537                           
 15538                           ; BSR set to: 0
 15539                           ;main.c: 211:  ps_type_index = 1;
 15540  014B84  0E01               	movlw	1
 15541  014B86  6E34               	movwf	_ps_type_index^0,c	;volatile
 15542                           
 15543                           ; BSR set to: 0
 15544                           ;main.c: 212:  DATAEE_WriteByte(0x10, ps_type_index);
 15545  014B88  0E00               	movlw	0
 15546  014B8A  6F61               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
 15547  014B8C  0E10               	movlw	16
 15548  014B8E  6F60               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
 15549  014B90  C034  F062         	movff	_ps_type_index,DATAEE_WriteByte@bData	;volatile
 15550  014B94  EC15  F0A3         	call	_DATAEE_WriteByte	;wreg free
 15551  014B98  0012               	return		;funcret
 15552  014B9A                     __end_of_fh_p1:
 15553                           	callstack 0
 15554                           
 15555 ;; *************** function _fh_p0 *****************
 15556 ;; Defined at:
 15557 ;;		line 201 in file "main.c"
 15558 ;; Parameters:    Size  Location     Type
 15559 ;;  a_data          2   22[BANK0 ] PTR void 
 15560 ;;		 -> cli_ctx(131), 
 15561 ;; Auto vars:     Size  Location     Type
 15562 ;;		None
 15563 ;; Return value:  Size  Location     Type
 15564 ;;                  1    wreg      void 
 15565 ;; Registers used:
 15566 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15567 ;; Tracked objects:
 15568 ;;		On entry : 3F/0
 15569 ;;		On exit  : 0/0
 15570 ;;		Unchanged: 0/0
 15571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15572 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15575 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15576 ;;Total ram usage:        2 bytes
 15577 ;; Hardware stack levels used: 1
 15578 ;; Hardware stack levels required when called: 12
 15579 ;; This function calls:
 15580 ;;		_DATAEE_WriteByte
 15581 ;;		_puts
 15582 ;; This function is called by:
 15583 ;;		__cli_interpret_cmd
 15584 ;; This function uses a non-reentrant model
 15585 ;;
 15586                           
 15587                           	psect	text62
 15588  014B9A                     __ptext62:
 15589                           	callstack 0
 15590  014B9A                     _fh_p0:
 15591                           	callstack 16
 15592                           
 15593                           ; BSR set to: 0
 15594                           ;main.c: 201: void fh_p0(void *a_data);main.c: 202: {;main.c: 203:  puts("\r\n EXT Suppr
      +                          ession Supply \r\n");
 15595                           
 15596                           ;incstack = 0
 15597  014B9A  0EB0               	movlw	low STR_10
 15598  014B9C  6F73               	movwf	puts@s& (0+255),b
 15599  014B9E  0EFE               	movlw	high STR_10
 15600  014BA0  6F74               	movwf	(puts@s+1)& (0+255),b
 15601  014BA2  EC29  F0A4         	call	_puts	;wreg free
 15602                           
 15603                           ; BSR set to: 0
 15604                           ;main.c: 204:  ps_type_index = 0;
 15605  014BA6  0E00               	movlw	0
 15606  014BA8  6E34               	movwf	_ps_type_index^0,c	;volatile
 15607                           
 15608                           ; BSR set to: 0
 15609                           ;main.c: 205:  DATAEE_WriteByte(0x10, ps_type_index);
 15610  014BAA  0E00               	movlw	0
 15611  014BAC  6F61               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
 15612  014BAE  0E10               	movlw	16
 15613  014BB0  6F60               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
 15614  014BB2  C034  F062         	movff	_ps_type_index,DATAEE_WriteByte@bData	;volatile
 15615  014BB6  EC15  F0A3         	call	_DATAEE_WriteByte	;wreg free
 15616  014BBA  0012               	return		;funcret
 15617  014BBC                     __end_of_fh_p0:
 15618                           	callstack 0
 15619                           
 15620 ;; *************** function _fh_pl *****************
 15621 ;; Defined at:
 15622 ;;		line 194 in file "main.c"
 15623 ;; Parameters:    Size  Location     Type
 15624 ;;  a_data          2   22[BANK0 ] PTR void 
 15625 ;;		 -> cli_ctx(131), 
 15626 ;; Auto vars:     Size  Location     Type
 15627 ;;		None
 15628 ;; Return value:  Size  Location     Type
 15629 ;;                  1    wreg      void 
 15630 ;; Registers used:
 15631 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15632 ;; Tracked objects:
 15633 ;;		On entry : 3F/0
 15634 ;;		On exit  : 3F/0
 15635 ;;		Unchanged: 0/0
 15636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15637 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15640 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15641 ;;Total ram usage:        2 bytes
 15642 ;; Hardware stack levels used: 1
 15643 ;; Hardware stack levels required when called: 12
 15644 ;; This function calls:
 15645 ;;		_puts
 15646 ;; This function is called by:
 15647 ;;		__cli_interpret_cmd
 15648 ;; This function uses a non-reentrant model
 15649 ;;
 15650                           
 15651                           	psect	text63
 15652  014D6A                     __ptext63:
 15653                           	callstack 0
 15654  014D6A                     _fh_pl:
 15655                           	callstack 16
 15656                           
 15657                           ; BSR set to: 0
 15658                           ;main.c: 194: void fh_pl(void *a_data);main.c: 195: {;main.c: 196:  puts("\r\n Voltage L
      +                          OW \r\n");
 15659                           
 15660                           ;incstack = 0
 15661  014D6A  0E7E               	movlw	low STR_9
 15662  014D6C  6F73               	movwf	puts@s& (0+255),b
 15663  014D6E  0EFF               	movlw	high STR_9
 15664  014D70  6F74               	movwf	(puts@s+1)& (0+255),b
 15665  014D72  EC29  F0A4         	call	_puts	;wreg free
 15666                           
 15667                           ; BSR set to: 0
 15668                           ;main.c: 197:  roll_max = 2;
 15669  014D76  0E02               	movlw	2
 15670  014D78  6FFE               	movwf	_roll_max& (0+255),b
 15671                           
 15672                           ; BSR set to: 0
 15673                           ;main.c: 198:  static_ps = 3;
 15674  014D7A  0E03               	movlw	3
 15675  014D7C  6FFD               	movwf	_static_ps& (0+255),b
 15676                           
 15677                           ; BSR set to: 0
 15678  014D7E  0012               	return		;funcret
 15679  014D80                     __end_of_fh_pl:
 15680                           	callstack 0
 15681                           
 15682 ;; *************** function _fh_pd *****************
 15683 ;; Defined at:
 15684 ;;		line 187 in file "main.c"
 15685 ;; Parameters:    Size  Location     Type
 15686 ;;  a_data          2   22[BANK0 ] PTR void 
 15687 ;;		 -> cli_ctx(131), 
 15688 ;; Auto vars:     Size  Location     Type
 15689 ;;		None
 15690 ;; Return value:  Size  Location     Type
 15691 ;;                  1    wreg      void 
 15692 ;; Registers used:
 15693 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15694 ;; Tracked objects:
 15695 ;;		On entry : 3F/0
 15696 ;;		On exit  : 3F/0
 15697 ;;		Unchanged: 0/0
 15698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15699 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15702 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15703 ;;Total ram usage:        2 bytes
 15704 ;; Hardware stack levels used: 1
 15705 ;; Hardware stack levels required when called: 12
 15706 ;; This function calls:
 15707 ;;		_puts
 15708 ;; This function is called by:
 15709 ;;		__cli_interpret_cmd
 15710 ;; This function uses a non-reentrant model
 15711 ;;
 15712                           
 15713                           	psect	text64
 15714  014D80                     __ptext64:
 15715                           	callstack 0
 15716  014D80                     _fh_pd:
 15717                           	callstack 16
 15718                           
 15719                           ; BSR set to: 0
 15720                           ;main.c: 187: void fh_pd(void *a_data);main.c: 188: {;main.c: 189:  puts("\r\n Voltage D
      +                          OWN \r\n");
 15721                           
 15722                           ; BSR set to: 0
 15723                           ;incstack = 0
 15724  014D80  0E47               	movlw	low STR_8
 15725  014D82  6F73               	movwf	puts@s& (0+255),b
 15726  014D84  0EFF               	movlw	high STR_8
 15727  014D86  6F74               	movwf	(puts@s+1)& (0+255),b
 15728  014D88  EC29  F0A4         	call	_puts	;wreg free
 15729                           
 15730                           ; BSR set to: 0
 15731                           ;main.c: 190:  roll_max = 19 - 12;
 15732  014D8C  0E07               	movlw	7
 15733  014D8E  6FFE               	movwf	_roll_max& (0+255),b
 15734                           
 15735                           ; BSR set to: 0
 15736                           ;main.c: 191:  static_ps = 20 - 12;
 15737  014D90  0E08               	movlw	8
 15738  014D92  6FFD               	movwf	_static_ps& (0+255),b
 15739                           
 15740                           ; BSR set to: 0
 15741  014D94  0012               	return		;funcret
 15742  014D96                     __end_of_fh_pd:
 15743                           	callstack 0
 15744                           
 15745 ;; *************** function _fh_pp *****************
 15746 ;; Defined at:
 15747 ;;		line 174 in file "main.c"
 15748 ;; Parameters:    Size  Location     Type
 15749 ;;  a_data          2   22[BANK0 ] PTR void 
 15750 ;;		 -> cli_ctx(131), 
 15751 ;; Auto vars:     Size  Location     Type
 15752 ;;		None
 15753 ;; Return value:  Size  Location     Type
 15754 ;;                  1    wreg      void 
 15755 ;; Registers used:
 15756 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15757 ;; Tracked objects:
 15758 ;;		On entry : 3F/0
 15759 ;;		On exit  : 3F/0
 15760 ;;		Unchanged: 0/0
 15761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15762 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15765 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15766 ;;Total ram usage:        2 bytes
 15767 ;; Hardware stack levels used: 1
 15768 ;; Hardware stack levels required when called: 12
 15769 ;; This function calls:
 15770 ;;		_puts
 15771 ;; This function is called by:
 15772 ;;		__cli_interpret_cmd
 15773 ;; This function uses a non-reentrant model
 15774 ;;
 15775                           
 15776                           	psect	text65
 15777  014DC2                     __ptext65:
 15778                           	callstack 0
 15779  014DC2                     _fh_pp:
 15780                           	callstack 16
 15781                           
 15782                           ; BSR set to: 0
 15783                           ;main.c: 174: void fh_pp(void *a_data);main.c: 175: {;main.c: 176:  puts("\r\n Voltage O
      +                          N : Set\r\n");
 15784                           
 15785                           ; BSR set to: 0
 15786                           ;incstack = 0
 15787  014DC2  0E31               	movlw	low STR_6
 15788  014DC4  6F73               	movwf	puts@s& (0+255),b
 15789  014DC6  0EFF               	movlw	high STR_6
 15790  014DC8  6F74               	movwf	(puts@s+1)& (0+255),b
 15791  014DCA  EC29  F0A4         	call	_puts	;wreg free
 15792                           
 15793                           ; BSR set to: 0
 15794                           ;main.c: 177:  mode = static_mode;
 15795  014DCE  0E02               	movlw	2
 15796  014DD0  6E35               	movwf	_mode^0,c
 15797                           
 15798                           ; BSR set to: 0
 15799  014DD2  0012               	return		;funcret
 15800  014DD4                     __end_of_fh_pp:
 15801                           	callstack 0
 15802                           
 15803 ;; *************** function _fh_po *****************
 15804 ;; Defined at:
 15805 ;;		line 168 in file "main.c"
 15806 ;; Parameters:    Size  Location     Type
 15807 ;;  a_data          2   22[BANK0 ] PTR void 
 15808 ;;		 -> cli_ctx(131), 
 15809 ;; Auto vars:     Size  Location     Type
 15810 ;;		None
 15811 ;; Return value:  Size  Location     Type
 15812 ;;                  1    wreg      void 
 15813 ;; Registers used:
 15814 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15815 ;; Tracked objects:
 15816 ;;		On entry : 3F/0
 15817 ;;		On exit  : 3F/0
 15818 ;;		Unchanged: 0/0
 15819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15820 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15823 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15824 ;;Total ram usage:        2 bytes
 15825 ;; Hardware stack levels used: 1
 15826 ;; Hardware stack levels required when called: 12
 15827 ;; This function calls:
 15828 ;;		_puts
 15829 ;; This function is called by:
 15830 ;;		__cli_interpret_cmd
 15831 ;; This function uses a non-reentrant model
 15832 ;;
 15833                           
 15834                           	psect	text66
 15835  014DD4                     __ptext66:
 15836                           	callstack 0
 15837  014DD4                     _fh_po:
 15838                           	callstack 16
 15839                           
 15840                           ; BSR set to: 0
 15841                           ;main.c: 168: void fh_po(void *a_data);main.c: 169: {;main.c: 170:  puts("\r\n Voltage O
      +                          FF \r\n");
 15842                           
 15843                           ; BSR set to: 0
 15844                           ;incstack = 0
 15845  014DD4  0E5A               	movlw	low STR_5
 15846  014DD6  6F73               	movwf	puts@s& (0+255),b
 15847  014DD8  0EFF               	movlw	high STR_5
 15848  014DDA  6F74               	movwf	(puts@s+1)& (0+255),b
 15849  014DDC  EC29  F0A4         	call	_puts	;wreg free
 15850                           
 15851                           ; BSR set to: 0
 15852                           ;main.c: 171:  mode = off_mode;
 15853  014DE0  0E00               	movlw	0
 15854  014DE2  6E35               	movwf	_mode^0,c
 15855                           
 15856                           ; BSR set to: 0
 15857  014DE4  0012               	return		;funcret
 15858  014DE6                     __end_of_fh_po:
 15859                           	callstack 0
 15860                           
 15861 ;; *************** function _fh_ps *****************
 15862 ;; Defined at:
 15863 ;;		line 160 in file "main.c"
 15864 ;; Parameters:    Size  Location     Type
 15865 ;;  a_data          2   22[BANK0 ] PTR void 
 15866 ;;		 -> cli_ctx(131), 
 15867 ;; Auto vars:     Size  Location     Type
 15868 ;;		None
 15869 ;; Return value:  Size  Location     Type
 15870 ;;                  1    wreg      void 
 15871 ;; Registers used:
 15872 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15873 ;; Tracked objects:
 15874 ;;		On entry : 3F/0
 15875 ;;		On exit  : 3F/0
 15876 ;;		Unchanged: 0/0
 15877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15878 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15881 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15882 ;;Total ram usage:        2 bytes
 15883 ;; Hardware stack levels used: 1
 15884 ;; Hardware stack levels required when called: 12
 15885 ;; This function calls:
 15886 ;;		_puts
 15887 ;; This function is called by:
 15888 ;;		__cli_interpret_cmd
 15889 ;; This function uses a non-reentrant model
 15890 ;;
 15891                           
 15892                           	psect	text67
 15893  014CEE                     __ptext67:
 15894                           	callstack 0
 15895  014CEE                     _fh_ps:
 15896                           	callstack 16
 15897                           
 15898                           ; BSR set to: 0
 15899                           ;main.c: 160: void fh_ps(void *a_data);main.c: 161: {;main.c: 162:  puts("\r\n Steady VD
      +                          C ON : Default\r\n");
 15900                           
 15901                           ; BSR set to: 0
 15902                           ;incstack = 0
 15903  014CEE  0ECD               	movlw	low STR_4
 15904  014CF0  6F73               	movwf	puts@s& (0+255),b
 15905  014CF2  0EFE               	movlw	high STR_4
 15906  014CF4  6F74               	movwf	(puts@s+1)& (0+255),b
 15907  014CF6  EC29  F0A4         	call	_puts	;wreg free
 15908                           
 15909                           ; BSR set to: 0
 15910                           ;main.c: 163:  roll_max = 19;
 15911  014CFA  0E13               	movlw	19
 15912  014CFC  6FFE               	movwf	_roll_max& (0+255),b
 15913                           
 15914                           ; BSR set to: 0
 15915                           ;main.c: 164:  static_ps = 20;
 15916  014CFE  0E14               	movlw	20
 15917  014D00  6FFD               	movwf	_static_ps& (0+255),b
 15918                           
 15919                           ; BSR set to: 0
 15920                           ;main.c: 165:  mode = static_mode;
 15921  014D02  0E02               	movlw	2
 15922  014D04  6E35               	movwf	_mode^0,c
 15923                           
 15924                           ; BSR set to: 0
 15925  014D06  0012               	return		;funcret
 15926  014D08                     __end_of_fh_ps:
 15927                           	callstack 0
 15928                           
 15929 ;; *************** function _fh_pr *****************
 15930 ;; Defined at:
 15931 ;;		line 153 in file "main.c"
 15932 ;; Parameters:    Size  Location     Type
 15933 ;;  a_data          2   22[BANK0 ] PTR void 
 15934 ;;		 -> cli_ctx(131), 
 15935 ;; Auto vars:     Size  Location     Type
 15936 ;;		None
 15937 ;; Return value:  Size  Location     Type
 15938 ;;                  1    wreg      void 
 15939 ;; Registers used:
 15940 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15941 ;; Tracked objects:
 15942 ;;		On entry : 3F/0
 15943 ;;		On exit  : 3F/0
 15944 ;;		Unchanged: 0/0
 15945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15946 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15949 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15950 ;;Total ram usage:        2 bytes
 15951 ;; Hardware stack levels used: 1
 15952 ;; Hardware stack levels required when called: 12
 15953 ;; This function calls:
 15954 ;;		_puts
 15955 ;; This function is called by:
 15956 ;;		__cli_interpret_cmd
 15957 ;; This function uses a non-reentrant model
 15958 ;;
 15959                           
 15960                           	psect	text68
 15961  014C5E                     __ptext68:
 15962                           	callstack 0
 15963  014C5E                     _fh_pr:
 15964                           	callstack 16
 15965                           
 15966                           ; BSR set to: 0
 15967                           ;main.c: 153: void fh_pr(void *a_data);main.c: 154: {;main.c: 155:  puts((const char *) 
      +                          a_data);
 15968                           
 15969                           ; BSR set to: 0
 15970                           ;incstack = 0
 15971  014C5E  C076  F073         	movff	fh_pr@a_data,puts@s
 15972  014C62  C077  F074         	movff	fh_pr@a_data+1,puts@s+1
 15973  014C66  EC29  F0A4         	call	_puts	;wreg free
 15974                           
 15975                           ;main.c: 156:  puts("\r\n Ramp VDC ON \r\n");
 15976  014C6A  0E6C               	movlw	low STR_3
 15977  014C6C  6F73               	movwf	puts@s& (0+255),b
 15978  014C6E  0EFF               	movlw	high STR_3
 15979  014C70  6F74               	movwf	(puts@s+1)& (0+255),b
 15980  014C72  EC29  F0A4         	call	_puts	;wreg free
 15981                           
 15982                           ; BSR set to: 0
 15983                           ;main.c: 157:  mode = roll_mode;
 15984  014C76  0E01               	movlw	1
 15985  014C78  6E35               	movwf	_mode^0,c
 15986                           
 15987                           ; BSR set to: 0
 15988  014C7A  0012               	return		;funcret
 15989  014C7C                     __end_of_fh_pr:
 15990                           	callstack 0
 15991                           
 15992 ;; *************** function _fh_pu *****************
 15993 ;; Defined at:
 15994 ;;		line 180 in file "main.c"
 15995 ;; Parameters:    Size  Location     Type
 15996 ;;  a_data          2   22[BANK0 ] PTR void 
 15997 ;;		 -> cli_ctx(131), 
 15998 ;; Auto vars:     Size  Location     Type
 15999 ;;		None
 16000 ;; Return value:  Size  Location     Type
 16001 ;;                  1    wreg      void 
 16002 ;; Registers used:
 16003 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16004 ;; Tracked objects:
 16005 ;;		On entry : 3F/0
 16006 ;;		On exit  : 3F/0
 16007 ;;		Unchanged: 0/0
 16008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16009 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16012 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16013 ;;Total ram usage:        2 bytes
 16014 ;; Hardware stack levels used: 1
 16015 ;; Hardware stack levels required when called: 12
 16016 ;; This function calls:
 16017 ;;		_puts
 16018 ;; This function is called by:
 16019 ;;		__cli_interpret_cmd
 16020 ;; This function uses a non-reentrant model
 16021 ;;
 16022                           
 16023                           	psect	text69
 16024  014D96                     __ptext69:
 16025                           	callstack 0
 16026  014D96                     _fh_pu:
 16027                           	callstack 16
 16028                           
 16029                           ; BSR set to: 0
 16030                           ;main.c: 180: void fh_pu(void *a_data);main.c: 181: {;main.c: 182:  puts("\r\n Voltage U
      +                          P \r\n");
 16031                           
 16032                           ; BSR set to: 0
 16033                           ;incstack = 0
 16034  014D96  0E90               	movlw	low STR_7
 16035  014D98  6F73               	movwf	puts@s& (0+255),b
 16036  014D9A  0EFF               	movlw	high STR_7
 16037  014D9C  6F74               	movwf	(puts@s+1)& (0+255),b
 16038  014D9E  EC29  F0A4         	call	_puts	;wreg free
 16039                           
 16040                           ; BSR set to: 0
 16041                           ;main.c: 183:  roll_max = 19 + 12;
 16042  014DA2  0E1F               	movlw	31
 16043  014DA4  6FFE               	movwf	_roll_max& (0+255),b
 16044                           
 16045                           ; BSR set to: 0
 16046                           ;main.c: 184:  static_ps = 20 + 11;
 16047  014DA6  0E1F               	movlw	31
 16048  014DA8  6FFD               	movwf	_static_ps& (0+255),b
 16049                           
 16050                           ; BSR set to: 0
 16051  014DAA  0012               	return		;funcret
 16052  014DAC                     __end_of_fh_pu:
 16053                           	callstack 0
 16054                           
 16055 ;; *************** function _puts *****************
 16056 ;; Defined at:
 16057 ;;		line 3 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/puts.c"
 16058 ;; Parameters:    Size  Location     Type
 16059 ;;  s               2   19[BANK0 ] PTR const unsigned char 
 16060 ;;		 -> STR_29(3), cli_read@i(1), cmdm(28), cli_ctx(131), 
 16061 ;;		 -> buff1(255), STR_11(31), STR_10(29), STR_9(18), 
 16062 ;;		 -> STR_8(19), STR_7(17), STR_6(22), STR_5(18), 
 16063 ;;		 -> STR_4(29), STR_3(18), 
 16064 ;; Auto vars:     Size  Location     Type
 16065 ;;  r               2    0        int 
 16066 ;; Return value:  Size  Location     Type
 16067 ;;                  2   19[BANK0 ] int 
 16068 ;; Registers used:
 16069 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16070 ;; Tracked objects:
 16071 ;;		On entry : 3F/0
 16072 ;;		On exit  : 3F/0
 16073 ;;		Unchanged: 0/0
 16074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16075 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16076 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16078 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16079 ;;Total ram usage:        3 bytes
 16080 ;; Hardware stack levels used: 1
 16081 ;; Hardware stack levels required when called: 11
 16082 ;; This function calls:
 16083 ;;		_fputc
 16084 ;;		_fputs
 16085 ;; This function is called by:
 16086 ;;		_fh_pr
 16087 ;;		_fh_ps
 16088 ;;		_fh_po
 16089 ;;		_fh_pp
 16090 ;;		_fh_pu
 16091 ;;		_fh_pd
 16092 ;;		_fh_pl
 16093 ;;		_fh_p0
 16094 ;;		_fh_p1
 16095 ;;		_main
 16096 ;;		_cli_init
 16097 ;;		_linux_putc
 16098 ;; This function uses a non-reentrant model
 16099 ;;
 16100                           
 16101                           	psect	text70
 16102  014852                     __ptext70:
 16103                           	callstack 0
 16104  014852                     _puts:
 16105                           	callstack 17
 16106                           
 16107                           ; BSR set to: 0
 16108                           
 16109                           ; BSR set to: 0
 16110                           ;incstack = 0
 16111  014852  0E01               	movlw	1
 16112  014854  6F75               	movwf	_puts$4363& (0+255),b
 16113                           
 16114                           ; BSR set to: 0
 16115  014856  C073  F06A         	movff	puts@s,fputs@s
 16116  01485A  C074  F06B         	movff	puts@s+1,fputs@s+1
 16117  01485E  0E00               	movlw	0
 16118  014860  6F6C               	movwf	fputs@fp& (0+255),b
 16119  014862  0E00               	movlw	0
 16120  014864  6F6D               	movwf	(fputs@fp+1)& (0+255),b
 16121  014866  EC2E  F09F         	call	_fputs	;wreg free
 16122  01486A  BF6B               	btfsc	(?_fputs+1)& (0+255),7,b
 16123  01486C  0012               	return	
 16124                           
 16125                           ; BSR set to: 0
 16126  01486E  0E00               	movlw	0
 16127  014870  6F62               	movwf	(fputc@c+1)& (0+255),b
 16128  014872  0E0A               	movlw	10
 16129  014874  6F61               	movwf	fputc@c& (0+255),b
 16130  014876  0E00               	movlw	0
 16131  014878  6F63               	movwf	fputc@fp& (0+255),b
 16132  01487A  0E00               	movlw	0
 16133  01487C  6F64               	movwf	(fputc@fp+1)& (0+255),b
 16134  01487E  ECB0  F09C         	call	_fputc	;wreg free
 16135  014882  BF62               	btfsc	(?_fputc+1)& (0+255),7,b
 16136  014884  0012               	return	
 16137                           
 16138                           ; BSR set to: 0
 16139  014886  0E00               	movlw	0
 16140  014888  6F75               	movwf	_puts$4363& (0+255),b
 16141                           
 16142                           ; BSR set to: 0
 16143                           
 16144                           ; BSR set to: 0
 16145  01488A  0012               	return		;funcret
 16146  01488C                     __end_of_puts:
 16147                           	callstack 0
 16148                           
 16149 ;; *************** function _fputs *****************
 16150 ;; Defined at:
 16151 ;;		line 8 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/nf_fputs.c"
 16152 ;; Parameters:    Size  Location     Type
 16153 ;;  s               2   10[BANK0 ] PTR const unsigned char 
 16154 ;;		 -> dbuf(80), STR_29(3), cli_read@i(1), cmdm(28), 
 16155 ;;		 -> cli_ctx(131), buff1(255), STR_11(31), STR_10(29), 
 16156 ;;		 -> STR_9(18), STR_8(19), STR_7(17), STR_6(22), 
 16157 ;;		 -> STR_5(18), STR_4(29), STR_3(18), 
 16158 ;;  fp              2   12[BANK0 ] PTR struct _IO_FILE
 16159 ;;		 -> sprintf@f(11), NULL(0), 
 16160 ;; Auto vars:     Size  Location     Type
 16161 ;;  i               2   17[BANK0 ] int 
 16162 ;;  c               1   16[BANK0 ] unsigned char 
 16163 ;; Return value:  Size  Location     Type
 16164 ;;                  2   10[BANK0 ] int 
 16165 ;; Registers used:
 16166 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16167 ;; Tracked objects:
 16168 ;;		On entry : 3F/0
 16169 ;;		On exit  : 3F/0
 16170 ;;		Unchanged: 0/0
 16171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16172 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16173 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16174 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16175 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16176 ;;Total ram usage:        9 bytes
 16177 ;; Hardware stack levels used: 1
 16178 ;; Hardware stack levels required when called: 10
 16179 ;; This function calls:
 16180 ;;		_fputc
 16181 ;; This function is called by:
 16182 ;;		_pad
 16183 ;;		_puts
 16184 ;; This function uses a non-reentrant model
 16185 ;;
 16186                           
 16187                           	psect	text71
 16188  013E5C                     __ptext71:
 16189                           	callstack 0
 16190  013E5C                     _fputs:
 16191                           	callstack 15
 16192                           
 16193                           ; BSR set to: 0
 16194                           
 16195                           ; BSR set to: 0
 16196                           ;incstack = 0
 16197  013E5C  0E00               	movlw	0
 16198  013E5E  6F72               	movwf	(fputs@i+1)& (0+255),b
 16199  013E60  0E00               	movlw	0
 16200  013E62  6F71               	movwf	fputs@i& (0+255),b
 16201  013E64  D00B               	goto	l11183
 16202  013E66                     l11179:
 16203                           
 16204                           ; BSR set to: 0
 16205  013E66  C070  F061         	movff	fputs@c,fputc@c
 16206  013E6A  6B62               	clrf	(fputc@c+1)& (0+255),b
 16207  013E6C  C06C  F063         	movff	fputs@fp,fputc@fp
 16208  013E70  C06D  F064         	movff	fputs@fp+1,fputc@fp+1
 16209  013E74  ECB0  F09C         	call	_fputc	;wreg free
 16210                           
 16211                           ; BSR set to: 0
 16212  013E78  4B71               	infsnz	fputs@i& (0+255),f,b
 16213  013E7A  2B72               	incf	(fputs@i+1)& (0+255),f,b
 16214  013E7C                     l11183:
 16215                           
 16216                           ; BSR set to: 0
 16217  013E7C  5171               	movf	fputs@i& (0+255),w,b
 16218  013E7E  256A               	addwf	fputs@s& (0+255),w,b
 16219  013E80  6F6E               	movwf	??_fputs& (0+255),b
 16220  013E82  5172               	movf	(fputs@i+1)& (0+255),w,b
 16221  013E84  216B               	addwfc	(fputs@s+1)& (0+255),w,b
 16222  013E86  6F6F               	movwf	(??_fputs+1)& (0+255),b
 16223  013E88  0060  F1BB  FFF6   	movff	??_fputs,tblptrl
 16224  013E8E  0060  F1BF  FFF7   	movff	??_fputs+1,tblptrh
 16225  013E94  0E00               	movlw	low (__mediumconst shr (0+16))
 16226  013E96  6EF8               	movwf	tblptru,c
 16227  013E98  0E1F               	movlw	(high __ramtop+-1)
 16228  013E9A  64F7               	cpfsgt	tblptrh,c
 16229  013E9C  D003               	bra	u10697
 16230  013E9E  0008               	tblrd		*
 16231  013EA0  50F5               	movf	tablat,w,c
 16232  013EA2  D007               	bra	u10690
 16233  013EA4                     u10697:
 16234  013EA4  006F FFDB FFE1     	movff	tblptrl,fsr1l
 16235  013EAA  006F FFDF FFE2     	movff	tblptrh,fsr1h
 16236  013EB0  50E7               	movf	indf1,w,c
 16237  013EB2                     u10690:
 16238  013EB2  0100               	movlb	0	; () banked
 16239  013EB4  6F70               	movwf	fputs@c& (0+255),b
 16240  013EB6  5170               	movf	fputs@c& (0+255),w,b
 16241  013EB8  A4D8               	btfss	status,2,c
 16242  013EBA  D7D5               	goto	l11179
 16243                           
 16244                           ; BSR set to: 0
 16245  013EBC  C071  F06A         	movff	fputs@i,?_fputs
 16246  013EC0  C072  F06B         	movff	fputs@i+1,?_fputs+1
 16247                           
 16248                           ; BSR set to: 0
 16249  013EC4  0012               	return		;funcret
 16250  013EC6                     __end_of_fputs:
 16251                           	callstack 0
 16252                           
 16253 ;; *************** function _fputc *****************
 16254 ;; Defined at:
 16255 ;;		line 8 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/nf_fputc.c"
 16256 ;; Parameters:    Size  Location     Type
 16257 ;;  c               2    1[BANK0 ] int 
 16258 ;;  fp              2    3[BANK0 ] PTR struct _IO_FILE
 16259 ;;		 -> sprintf@f(11), NULL(0), 
 16260 ;; Auto vars:     Size  Location     Type
 16261 ;;		None
 16262 ;; Return value:  Size  Location     Type
 16263 ;;                  2    1[BANK0 ] int 
 16264 ;; Registers used:
 16265 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 16266 ;; Tracked objects:
 16267 ;;		On entry : 3F/0
 16268 ;;		On exit  : 3F/0
 16269 ;;		Unchanged: 0/0
 16270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16271 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16273 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16274 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16275 ;;Total ram usage:        9 bytes
 16276 ;; Hardware stack levels used: 1
 16277 ;; Hardware stack levels required when called: 9
 16278 ;; This function calls:
 16279 ;;		_putch
 16280 ;; This function is called by:
 16281 ;;		_pad
 16282 ;;		_stoa
 16283 ;;		_vfpfcnvrt
 16284 ;;		_fputs
 16285 ;;		_puts
 16286 ;; This function uses a non-reentrant model
 16287 ;;
 16288                           
 16289                           	psect	text72
 16290  013960                     __ptext72:
 16291                           	callstack 0
 16292  013960                     _fputc:
 16293                           	callstack 15
 16294                           
 16295                           ; BSR set to: 0
 16296                           
 16297                           ; BSR set to: 0
 16298                           ;incstack = 0
 16299  013960  5163               	movf	fputc@fp& (0+255),w,b
 16300  013962  1164               	iorwf	(fputc@fp+1)& (0+255),w,b
 16301  013964  B4D8               	btfsc	status,2,c
 16302  013966  D004               	goto	u10250
 16303                           
 16304                           ; BSR set to: 0
 16305  013968  5163               	movf	fputc@fp& (0+255),w,b
 16306  01396A  1164               	iorwf	(fputc@fp+1)& (0+255),w,b
 16307  01396C  A4D8               	btfss	status,2,c
 16308  01396E  D004               	goto	l10955
 16309  013970                     u10250:
 16310                           
 16311                           ; BSR set to: 0
 16312  013970  5161               	movf	fputc@c& (0+255),w,b
 16313  013972  EC63  F0A7         	call	_putch
 16314  013976  D04A               	goto	l10961
 16315  013978                     l10955:
 16316                           
 16317                           ; BSR set to: 0
 16318  013978  EE20 F009          	lfsr	2,9
 16319  01397C  5163               	movf	fputc@fp& (0+255),w,b
 16320  01397E  26D9               	addwf	fsr2l,f,c
 16321  013980  5164               	movf	(fputc@fp+1)& (0+255),w,b
 16322  013982  22DA               	addwfc	fsr2h,f,c
 16323  013984  50DE               	movf	postinc2,w,c
 16324  013986  10DE               	iorwf	postinc2,w,c
 16325  013988  B4D8               	btfsc	status,2,c
 16326  01398A  D016               	goto	u10270
 16327                           
 16328                           ; BSR set to: 0
 16329  01398C  EE20 F009          	lfsr	2,9
 16330  013990  5163               	movf	fputc@fp& (0+255),w,b
 16331  013992  26D9               	addwf	fsr2l,f,c
 16332  013994  5164               	movf	(fputc@fp+1)& (0+255),w,b
 16333  013996  22DA               	addwfc	fsr2h,f,c
 16334  013998  EE10 F003          	lfsr	1,3
 16335  01399C  5163               	movf	fputc@fp& (0+255),w,b
 16336  01399E  26E1               	addwf	fsr1l,f,c
 16337  0139A0  5164               	movf	(fputc@fp+1)& (0+255),w,b
 16338  0139A2  22E2               	addwfc	fsr1h,f,c
 16339  0139A4  50DE               	movf	postinc2,w,c
 16340  0139A6  5CE6               	subwf	postinc1,w,c
 16341  0139A8  50E6               	movf	postinc1,w,c
 16342  0139AA  0A80               	xorlw	128
 16343  0139AC  6F69               	movwf	(??_fputc+4)& (0+255),b
 16344  0139AE  50DE               	movf	postinc2,w,c
 16345  0139B0  0A80               	xorlw	128
 16346  0139B2  5969               	subwfb	(??_fputc+4)& (0+255),w,b
 16347  0139B4  B0D8               	btfsc	status,0,c
 16348  0139B6  D02A               	goto	l10961
 16349  0139B8                     u10270:
 16350                           
 16351                           ; BSR set to: 0
 16352  0139B8  EE20 F003          	lfsr	2,3
 16353  0139BC  5163               	movf	fputc@fp& (0+255),w,b
 16354  0139BE  26D9               	addwf	fsr2l,f,c
 16355  0139C0  5164               	movf	(fputc@fp+1)& (0+255),w,b
 16356  0139C2  22DA               	addwfc	fsr2h,f,c
 16357  0139C4  006F FF78  F065    	movff	postinc2,??_fputc
 16358  0139CA  006F FF74  F066    	movff	postdec2,??_fputc+1
 16359  0139D0  0060  F18F  FFD9   	movff	fputc@fp,fsr2l
 16360  0139D6  0060  F193  FFDA   	movff	fputc@fp+1,fsr2h
 16361  0139DC  006F FF78  F067    	movff	postinc2,??_fputc+2
 16362  0139E2  006F FF74  F068    	movff	postdec2,??_fputc+3
 16363  0139E8  5165               	movf	??_fputc& (0+255),w,b
 16364  0139EA  2567               	addwf	(??_fputc+2)& (0+255),w,b
 16365  0139EC  6ED9               	movwf	fsr2l,c
 16366  0139EE  5166               	movf	(??_fputc+1)& (0+255),w,b
 16367  0139F0  2168               	addwfc	(??_fputc+3)& (0+255),w,b
 16368  0139F2  6EDA               	movwf	fsr2h,c
 16369  0139F4  0060  F187  FFDF   	movff	fputc@c,indf2
 16370  0139FA  EE20 F003          	lfsr	2,3
 16371  0139FE  5163               	movf	fputc@fp& (0+255),w,b
 16372  013A00  26D9               	addwf	fsr2l,f,c
 16373  013A02  5164               	movf	(fputc@fp+1)& (0+255),w,b
 16374  013A04  22DA               	addwfc	fsr2h,f,c
 16375  013A06  2ADE               	incf	postinc2,f,c
 16376  013A08  0E00               	movlw	0
 16377  013A0A  22DD               	addwfc	postdec2,f,c
 16378  013A0C                     l10961:
 16379  013A0C  C061  F061         	movff	fputc@c,?_fputc
 16380  013A10  0100               	movlb	0	; () banked
 16381  013A12  6B62               	clrf	(?_fputc+1)& (0+255),b
 16382                           
 16383                           ; BSR set to: 0
 16384  013A14  0012               	return		;funcret
 16385  013A16                     __end_of_fputc:
 16386                           	callstack 0
 16387                           
 16388 ;; *************** function _putch *****************
 16389 ;; Defined at:
 16390 ;;		line 238 in file "mcc_generated_files/uart1.c"
 16391 ;; Parameters:    Size  Location     Type
 16392 ;;  txData          1    wreg     unsigned char 
 16393 ;; Auto vars:     Size  Location     Type
 16394 ;;  txData          1    0[BANK0 ] unsigned char 
 16395 ;; Return value:  Size  Location     Type
 16396 ;;                  1    wreg      void 
 16397 ;; Registers used:
 16398 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16399 ;; Tracked objects:
 16400 ;;		On entry : 3F/0
 16401 ;;		On exit  : 3F/39
 16402 ;;		Unchanged: 0/0
 16403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16405 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16407 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16408 ;;Total ram usage:        1 bytes
 16409 ;; Hardware stack levels used: 1
 16410 ;; Hardware stack levels required when called: 8
 16411 ;; This function calls:
 16412 ;;		_UART1_Write
 16413 ;; This function is called by:
 16414 ;;		_fputc
 16415 ;; This function uses a non-reentrant model
 16416 ;;
 16417                           
 16418                           	psect	text73
 16419  014EC6                     __ptext73:
 16420                           	callstack 0
 16421  014EC6                     _putch:
 16422                           	callstack 15
 16423                           
 16424                           ; BSR set to: 0
 16425                           ;incstack = 0
 16426                           ;putch@txData stored from wreg
 16427  014EC6  6F60               	movwf	putch@txData& (0+255),b
 16428                           
 16429                           ;mcc_generated_files/uart1.c: 238: void putch(char txData);mcc_generated_files/uart1.c: 
      +                          239: {;mcc_generated_files/uart1.c: 240:     UART1_Write(txData);
 16430  014EC8  0100               	movlb	0	; () banked
 16431  014ECA  5160               	movf	putch@txData& (0+255),w,b
 16432  014ECC  ECB1  F0A3         	call	_UART1_Write
 16433                           
 16434                           ; BSR set to: 57
 16435  014ED0  0012               	return		;funcret
 16436  014ED2                     __end_of_putch:
 16437                           	callstack 0
 16438                           
 16439 ;; *************** function _UART1_Write *****************
 16440 ;; Defined at:
 16441 ;;		line 210 in file "mcc_generated_files/uart1.c"
 16442 ;; Parameters:    Size  Location     Type
 16443 ;;  txData          1    wreg     unsigned char 
 16444 ;; Auto vars:     Size  Location     Type
 16445 ;;  txData          1   31[COMRAM] unsigned char 
 16446 ;; Return value:  Size  Location     Type
 16447 ;;                  1    wreg      void 
 16448 ;; Registers used:
 16449 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16450 ;; Tracked objects:
 16451 ;;		On entry : 3F/0
 16452 ;;		On exit  : 3F/39
 16453 ;;		Unchanged: 0/0
 16454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16456 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16458 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16459 ;;Total ram usage:        1 bytes
 16460 ;; Hardware stack levels used: 1
 16461 ;; Hardware stack levels required when called: 7
 16462 ;; This function calls:
 16463 ;;		Nothing
 16464 ;; This function is called by:
 16465 ;;		_putch
 16466 ;; This function uses a non-reentrant model
 16467 ;;
 16468                           
 16469                           	psect	text74
 16470  014762                     __ptext74:
 16471                           	callstack 0
 16472  014762                     _UART1_Write:
 16473                           	callstack 15
 16474                           
 16475                           ; BSR set to: 57
 16476                           ;incstack = 0
 16477                           ;UART1_Write@txData stored from wreg
 16478  014762  6E20               	movwf	UART1_Write@txData^0,c
 16479  014764                     
 16480                           ;mcc_generated_files/uart1.c: 212:     while(0 == uart1TxBufferRemaining)
 16481                           
 16482                           ;mcc_generated_files/uart1.c: 210: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 211: {;mcc_generated_files/uart1.c: 212:     while(0 == uart1TxBufferRemaining)
 16483  014764  503C               	movf	_uart1TxBufferRemaining^0,w,c	;volatile
 16484  014766  B4D8               	btfsc	status,2,c
 16485  014768  D7FD               	goto	l10929
 16486                           
 16487                           ;mcc_generated_files/uart1.c: 216:     if(0 == PIE3bits.U1TXIE)
 16488  01476A  0139               	movlb	57	; () banked
 16489  01476C  B993               	btfsc	147,4,b	;volatile
 16490  01476E  D004               	goto	l991
 16491                           
 16492                           ; BSR set to: 57
 16493                           ;mcc_generated_files/uart1.c: 217:     {;mcc_generated_files/uart1.c: 218:         U1TXB
      +                           = txData;
 16494  014770  0060  F083  FDEA   	movff	UART1_Write@txData,15850	;volatile
 16495                           
 16496                           ;mcc_generated_files/uart1.c: 219:     }
 16497  014776  D011               	goto	l10945
 16498  014778                     l991:
 16499                           
 16500                           ; BSR set to: 57
 16501                           ;mcc_generated_files/uart1.c: 221:     {;mcc_generated_files/uart1.c: 222:         PIE3b
      +                          its.U1TXIE = 0;
 16502  014778  9993               	bcf	147,4,b	;volatile
 16503                           
 16504                           ; BSR set to: 57
 16505                           ;mcc_generated_files/uart1.c: 223:         uart1TxBuffer[uart1TxHead++] = txData;
 16506  01477A  0E40               	movlw	low _uart1TxBuffer
 16507  01477C  243E               	addwf	_uart1TxHead^0,w,c	;volatile
 16508  01477E  6ED9               	movwf	fsr2l,c
 16509  014780  6ADA               	clrf	fsr2h,c
 16510  014782  0E02               	movlw	high _uart1TxBuffer
 16511  014784  22DA               	addwfc	fsr2h,f,c
 16512  014786  0060  F083  FFDF   	movff	UART1_Write@txData,indf2
 16513                           
 16514                           ; BSR set to: 57
 16515  01478C  2A3E               	incf	_uart1TxHead^0,f,c	;volatile
 16516                           
 16517                           ; BSR set to: 57
 16518                           ;mcc_generated_files/uart1.c: 224:         if(sizeof(uart1TxBuffer) <= uart1TxHead)
 16519  01478E  0E3F               	movlw	63
 16520  014790  643E               	cpfsgt	_uart1TxHead^0,c
 16521  014792  D002               	goto	l10943
 16522                           
 16523                           ; BSR set to: 57
 16524                           ;mcc_generated_files/uart1.c: 225:         {;mcc_generated_files/uart1.c: 226:          
      +                             uart1TxHead = 0;
 16525  014794  0E00               	movlw	0
 16526  014796  6E3E               	movwf	_uart1TxHead^0,c	;volatile
 16527  014798                     l10943:
 16528                           
 16529                           ; BSR set to: 57
 16530                           ;mcc_generated_files/uart1.c: 228:         uart1TxBufferRemaining--;
 16531  014798  063C               	decf	_uart1TxBufferRemaining^0,f,c	;volatile
 16532  01479A                     l10945:
 16533                           
 16534                           ; BSR set to: 57
 16535                           ;mcc_generated_files/uart1.c: 230:     PIE3bits.U1TXIE = 1;
 16536  01479A  8993               	bsf	147,4,b	;volatile
 16537                           
 16538                           ; BSR set to: 57
 16539  01479C  0012               	return		;funcret
 16540  01479E                     __end_of_UART1_Write:
 16541                           	callstack 0
 16542                           
 16543 ;; *************** function _DATAEE_WriteByte *****************
 16544 ;; Defined at:
 16545 ;;		line 165 in file "mcc_generated_files/memory.c"
 16546 ;; Parameters:    Size  Location     Type
 16547 ;;  bAdd            2    0[BANK0 ] unsigned short 
 16548 ;;  bData           1    2[BANK0 ] unsigned char 
 16549 ;; Auto vars:     Size  Location     Type
 16550 ;;  GIEBitValue     1   31[COMRAM] unsigned char 
 16551 ;; Return value:  Size  Location     Type
 16552 ;;                  1    wreg      void 
 16553 ;; Registers used:
 16554 ;;		wreg, status,2, status,0
 16555 ;; Tracked objects:
 16556 ;;		On entry : 3F/0
 16557 ;;		On exit  : 0/0
 16558 ;;		Unchanged: 0/0
 16559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16560 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16561 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16563 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16564 ;;Total ram usage:        4 bytes
 16565 ;; Hardware stack levels used: 1
 16566 ;; Hardware stack levels required when called: 7
 16567 ;; This function calls:
 16568 ;;		Nothing
 16569 ;; This function is called by:
 16570 ;;		_fh_p0
 16571 ;;		_fh_p1
 16572 ;;		_main
 16573 ;; This function uses a non-reentrant model
 16574 ;;
 16575                           
 16576                           	psect	text75
 16577  01462A                     __ptext75:
 16578                           	callstack 0
 16579  01462A                     _DATAEE_WriteByte:
 16580                           	callstack 20
 16581                           
 16582                           ; BSR set to: 0
 16583                           ;mcc_generated_files/memory.c: 165: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 166: {;mcc_generated_files/memory.c: 167:     uint8_t GIEB
      +                          itValue = INTCON0bits.GIE;
 16584                           
 16585                           ; BSR set to: 57
 16586                           ;incstack = 0
 16587  01462A  0E00               	movlw	0
 16588  01462C  BED2               	btfsc	210,7,c	;volatile
 16589  01462E  0E01               	movlw	1
 16590  014630  6E20               	movwf	DATAEE_WriteByte@GIEBitValue^0,c
 16591                           
 16592                           ; BSR set to: 0
 16593                           ;mcc_generated_files/memory.c: 169:     NVMADRH = (uint8_t)((bAdd >> 8) & 0x03);
 16594  014632  5161               	movf	(DATAEE_WriteByte@bAdd+1)& (0+255),w,b
 16595  014634  0B03               	andlw	3
 16596  014636  0139               	movlb	57	; () banked
 16597  014638  6FE1               	movwf	225,b	;volatile
 16598                           
 16599                           ; BSR set to: 57
 16600                           ;mcc_generated_files/memory.c: 170:     NVMADRL = (uint8_t)(bAdd & 0xFF);
 16601  01463A  0060  F183  F9E0   	movff	DATAEE_WriteByte@bAdd,14816	;volatile
 16602                           
 16603                           ; BSR set to: 57
 16604                           ;mcc_generated_files/memory.c: 171:     NVMDAT = bData;
 16605  014640  0060  F18B  F9E3   	movff	DATAEE_WriteByte@bData,14819	;volatile
 16606                           
 16607                           ; BSR set to: 57
 16608                           ;mcc_generated_files/memory.c: 172:     NVMCON1bits.NVMREG = 0;
 16609  014646  0E3F               	movlw	-193
 16610  014648  17E5               	andwf	229,f,b	;volsfr
 16611                           
 16612                           ; BSR set to: 57
 16613                           ;mcc_generated_files/memory.c: 173:     NVMCON1bits.WREN = 1;
 16614  01464A  85E5               	bsf	229,2,b	;volsfr
 16615                           
 16616                           ; BSR set to: 57
 16617                           ;mcc_generated_files/memory.c: 174:     INTCON0bits.GIE = 0;
 16618  01464C  9ED2               	bcf	210,7,c	;volatile
 16619                           
 16620                           ; BSR set to: 57
 16621                           ;mcc_generated_files/memory.c: 175:     NVMCON2 = 0x55;
 16622  01464E  0E55               	movlw	85
 16623  014650  6FE6               	movwf	230,b	;volsfr
 16624                           
 16625                           ; BSR set to: 57
 16626                           ;mcc_generated_files/memory.c: 176:     NVMCON2 = 0xAA;
 16627  014652  0EAA               	movlw	170
 16628  014654  6FE6               	movwf	230,b	;volsfr
 16629                           
 16630                           ; BSR set to: 57
 16631                           ;mcc_generated_files/memory.c: 177:     NVMCON1bits.WR = 1;
 16632  014656  83E5               	bsf	229,1,b	;volsfr
 16633  014658                     l1130:
 16634                           
 16635                           ; BSR set to: 57
 16636                           ;mcc_generated_files/memory.c: 179:     while (NVMCON1bits.WR)
 16637  014658  B3E5               	btfsc	229,1,b	;volsfr
 16638  01465A  D7FE               	goto	l1130
 16639                           
 16640                           ; BSR set to: 57
 16641                           ;mcc_generated_files/memory.c: 183:     NVMCON1bits.WREN = 0;
 16642  01465C  95E5               	bcf	229,2,b	;volsfr
 16643                           
 16644                           ;mcc_generated_files/memory.c: 184:     INTCON0bits.GIE = GIEBitValue;
 16645  01465E  B020               	btfsc	DATAEE_WriteByte@GIEBitValue^0,0,c
 16646  014660  D002               	bra	u11835
 16647  014662  9ED2               	bcf	210,7,c	;volatile
 16648  014664  D001               	bra	u11836
 16649  014666                     u11835:
 16650  014666  8ED2               	bsf	210,7,c	;volatile
 16651  014668                     u11836:
 16652  014668  0012               	return		;funcret
 16653  01466A                     __end_of_DATAEE_WriteByte:
 16654                           	callstack 0
 16655                           
 16656 ;; *************** function ___xxtofl *****************
 16657 ;; Defined at:
 16658 ;;		line 10 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/xxtofl.c"
 16659 ;; Parameters:    Size  Location     Type
 16660 ;;  sign            1    wreg     unsigned char 
 16661 ;;  val             4    0[BANK0 ] long 
 16662 ;; Auto vars:     Size  Location     Type
 16663 ;;  sign            1    8[BANK0 ] unsigned char 
 16664 ;;  arg             4   10[BANK0 ] unsigned long 
 16665 ;;  exp             1    9[BANK0 ] unsigned char 
 16666 ;; Return value:  Size  Location     Type
 16667 ;;                  4    0[BANK0 ] unsigned char 
 16668 ;; Registers used:
 16669 ;;		wreg, status,2, status,0
 16670 ;; Tracked objects:
 16671 ;;		On entry : 3F/0
 16672 ;;		On exit  : 3F/0
 16673 ;;		Unchanged: 0/0
 16674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16675 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16676 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16677 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16678 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16679 ;;Total ram usage:       14 bytes
 16680 ;; Hardware stack levels used: 1
 16681 ;; Hardware stack levels required when called: 7
 16682 ;; This function calls:
 16683 ;;		Nothing
 16684 ;; This function is called by:
 16685 ;;		_main
 16686 ;; This function uses a non-reentrant model
 16687 ;;
 16688                           
 16689                           	psect	text76
 16690  012E76                     __ptext76:
 16691                           	callstack 0
 16692  012E76                     ___xxtofl:
 16693                           	callstack 23
 16694                           
 16695                           ;incstack = 0
 16696                           ;___xxtofl@sign stored from wreg
 16697  012E76  6F68               	movwf	___xxtofl@sign& (0+255),b
 16698  012E78  0100               	movlb	0	; () banked
 16699  012E7A  5168               	movf	___xxtofl@sign& (0+255),w,b
 16700  012E7C  A4D8               	btfss	status,2,c
 16701                           
 16702                           ; BSR set to: 0
 16703  012E7E  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
 16704  012E80  D01A               	goto	l2457
 16705                           
 16706                           ; BSR set to: 0
 16707  012E82  C060  F064         	movff	___xxtofl@val,??___xxtofl
 16708  012E86  C061  F065         	movff	___xxtofl@val+1,??___xxtofl+1
 16709  012E8A  C062  F066         	movff	___xxtofl@val+2,??___xxtofl+2
 16710  012E8E  C063  F067         	movff	___xxtofl@val+3,??___xxtofl+3
 16711  012E92  1F64               	comf	??___xxtofl& (0+255),f,b
 16712  012E94  1F65               	comf	(??___xxtofl+1)& (0+255),f,b
 16713  012E96  1F66               	comf	(??___xxtofl+2)& (0+255),f,b
 16714  012E98  1F67               	comf	(??___xxtofl+3)& (0+255),f,b
 16715  012E9A  2B64               	incf	??___xxtofl& (0+255),f,b
 16716  012E9C  0E00               	movlw	0
 16717  012E9E  2365               	addwfc	(??___xxtofl+1)& (0+255),f,b
 16718  012EA0  2366               	addwfc	(??___xxtofl+2)& (0+255),f,b
 16719  012EA2  2367               	addwfc	(??___xxtofl+3)& (0+255),f,b
 16720  012EA4  C064  F06A         	movff	??___xxtofl,___xxtofl@arg
 16721  012EA8  C065  F06B         	movff	??___xxtofl+1,___xxtofl@arg+1
 16722  012EAC  C066  F06C         	movff	??___xxtofl+2,___xxtofl@arg+2
 16723  012EB0  C067  F06D         	movff	??___xxtofl+3,___xxtofl@arg+3
 16724  012EB4  D008               	goto	l13111
 16725  012EB6                     l2457:
 16726                           
 16727                           ; BSR set to: 0
 16728  012EB6  C060  F06A         	movff	___xxtofl@val,___xxtofl@arg
 16729  012EBA  C061  F06B         	movff	___xxtofl@val+1,___xxtofl@arg+1
 16730  012EBE  C062  F06C         	movff	___xxtofl@val+2,___xxtofl@arg+2
 16731  012EC2  C063  F06D         	movff	___xxtofl@val+3,___xxtofl@arg+3
 16732  012EC6                     l13111:
 16733                           
 16734                           ; BSR set to: 0
 16735  012EC6  5160               	movf	___xxtofl@val& (0+255),w,b
 16736  012EC8  1161               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 16737  012ECA  1162               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 16738  012ECC  1163               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 16739  012ECE  A4D8               	btfss	status,2,c
 16740  012ED0  D009               	goto	l13117
 16741                           
 16742                           ; BSR set to: 0
 16743  012ED2  0E00               	movlw	0
 16744  012ED4  6F60               	movwf	?___xxtofl& (0+255),b
 16745  012ED6  0E00               	movlw	0
 16746  012ED8  6F61               	movwf	(?___xxtofl+1)& (0+255),b
 16747  012EDA  0E00               	movlw	0
 16748  012EDC  6F62               	movwf	(?___xxtofl+2)& (0+255),b
 16749  012EDE  0E00               	movlw	0
 16750  012EE0  6F63               	movwf	(?___xxtofl+3)& (0+255),b
 16751  012EE2  0012               	return	
 16752  012EE4                     l13117:
 16753                           
 16754                           ; BSR set to: 0
 16755  012EE4  0E96               	movlw	150
 16756  012EE6  6F69               	movwf	___xxtofl@exp& (0+255),b
 16757  012EE8  D006               	goto	l13121
 16758  012EEA                     l13119:
 16759                           
 16760                           ; BSR set to: 0
 16761  012EEA  2B69               	incf	___xxtofl@exp& (0+255),f,b
 16762  012EEC  90D8               	bcf	status,0,c
 16763  012EEE  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 16764  012EF0  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 16765  012EF2  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 16766  012EF4  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 16767  012EF6                     l13121:
 16768                           
 16769                           ; BSR set to: 0
 16770  012EF6  0E00               	movlw	0
 16771  012EF8  156A               	andwf	___xxtofl@arg& (0+255),w,b
 16772  012EFA  6F64               	movwf	??___xxtofl& (0+255),b
 16773  012EFC  0E00               	movlw	0
 16774  012EFE  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 16775  012F00  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 16776  012F02  0E00               	movlw	0
 16777  012F04  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 16778  012F06  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 16779  012F08  0EFE               	movlw	254
 16780  012F0A  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 16781  012F0C  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 16782  012F0E  5164               	movf	??___xxtofl& (0+255),w,b
 16783  012F10  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 16784  012F12  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 16785  012F14  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 16786  012F16  B4D8               	btfsc	status,2,c
 16787  012F18  D00D               	goto	l2464
 16788  012F1A  D7E7               	goto	l13119
 16789  012F1C                     l13123:
 16790                           
 16791                           ; BSR set to: 0
 16792  012F1C  2B69               	incf	___xxtofl@exp& (0+255),f,b
 16793                           
 16794                           ; BSR set to: 0
 16795  012F1E  0E01               	movlw	1
 16796  012F20  276A               	addwf	___xxtofl@arg& (0+255),f,b
 16797  012F22  0E00               	movlw	0
 16798  012F24  236B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 16799  012F26  236C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 16800  012F28  236D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 16801                           
 16802                           ; BSR set to: 0
 16803  012F2A  90D8               	bcf	status,0,c
 16804  012F2C  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 16805  012F2E  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 16806  012F30  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 16807  012F32  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 16808  012F34                     l2464:
 16809                           
 16810                           ; BSR set to: 0
 16811  012F34  0E00               	movlw	0
 16812  012F36  156A               	andwf	___xxtofl@arg& (0+255),w,b
 16813  012F38  6F64               	movwf	??___xxtofl& (0+255),b
 16814  012F3A  0E00               	movlw	0
 16815  012F3C  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 16816  012F3E  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 16817  012F40  0E00               	movlw	0
 16818  012F42  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 16819  012F44  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 16820  012F46  0EFF               	movlw	255
 16821  012F48  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 16822  012F4A  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 16823  012F4C  5164               	movf	??___xxtofl& (0+255),w,b
 16824  012F4E  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 16825  012F50  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 16826  012F52  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 16827  012F54  B4D8               	btfsc	status,2,c
 16828  012F56  D007               	goto	l13131
 16829  012F58  D7E1               	goto	l13123
 16830  012F5A                     l13129:
 16831                           
 16832                           ; BSR set to: 0
 16833  012F5A  0769               	decf	___xxtofl@exp& (0+255),f,b
 16834  012F5C  90D8               	bcf	status,0,c
 16835  012F5E  376A               	rlcf	___xxtofl@arg& (0+255),f,b
 16836  012F60  376B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 16837  012F62  376C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 16838  012F64  376D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 16839  012F66                     l13131:
 16840                           
 16841                           ; BSR set to: 0
 16842  012F66  BF6C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 16843  012F68  D003               	goto	u13200
 16844                           
 16845                           ; BSR set to: 0
 16846  012F6A  0E02               	movlw	2
 16847  012F6C  6169               	cpfslt	___xxtofl@exp& (0+255),b
 16848  012F6E  D7F5               	goto	l13129
 16849  012F70                     u13200:
 16850                           
 16851                           ; BSR set to: 0
 16852  012F70  A169               	btfss	___xxtofl@exp& (0+255),0,b
 16853                           
 16854                           ; BSR set to: 0
 16855  012F72  9F6C               	bcf	(___xxtofl@arg+2)& (0+255),7,b
 16856                           
 16857                           ; BSR set to: 0
 16858  012F74  90D8               	bcf	status,0,c
 16859  012F76  3369               	rrcf	___xxtofl@exp& (0+255),f,b
 16860                           
 16861                           ; BSR set to: 0
 16862  012F78  C069  F064         	movff	___xxtofl@exp,??___xxtofl
 16863  012F7C  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 16864  012F7E  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 16865  012F80  6B67               	clrf	(??___xxtofl+3)& (0+255),b
 16866  012F82  C064  F067         	movff	??___xxtofl,??___xxtofl+3
 16867  012F86  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 16868  012F88  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 16869  012F8A  6B64               	clrf	??___xxtofl& (0+255),b
 16870  012F8C  5164               	movf	??___xxtofl& (0+255),w,b
 16871  012F8E  136A               	iorwf	___xxtofl@arg& (0+255),f,b
 16872  012F90  5165               	movf	(??___xxtofl+1)& (0+255),w,b
 16873  012F92  136B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 16874  012F94  5166               	movf	(??___xxtofl+2)& (0+255),w,b
 16875  012F96  136C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 16876  012F98  5167               	movf	(??___xxtofl+3)& (0+255),w,b
 16877  012F9A  136D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 16878                           
 16879                           ; BSR set to: 0
 16880  012F9C  5168               	movf	___xxtofl@sign& (0+255),w,b
 16881  012F9E  A4D8               	btfss	status,2,c
 16882                           
 16883                           ; BSR set to: 0
 16884  012FA0  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
 16885  012FA2  D001               	goto	l13147
 16886                           
 16887                           ; BSR set to: 0
 16888  012FA4  8F6D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 16889  012FA6                     l13147:
 16890                           
 16891                           ; BSR set to: 0
 16892  012FA6  C06A  F060         	movff	___xxtofl@arg,?___xxtofl
 16893  012FAA  C06B  F061         	movff	___xxtofl@arg+1,?___xxtofl+1
 16894  012FAE  C06C  F062         	movff	___xxtofl@arg+2,?___xxtofl+2
 16895  012FB2  C06D  F063         	movff	___xxtofl@arg+3,?___xxtofl+3
 16896                           
 16897                           ; BSR set to: 0
 16898  012FB6  0012               	return		;funcret
 16899  012FB8                     __end_of___xxtofl:
 16900                           	callstack 0
 16901                           
 16902 ;; *************** function _WaitMs *****************
 16903 ;; Defined at:
 16904 ;;		line 31 in file "timers.c"
 16905 ;; Parameters:    Size  Location     Type
 16906 ;;  numMilliseco    2    4[BANK0 ] const unsigned short 
 16907 ;; Auto vars:     Size  Location     Type
 16908 ;;		None
 16909 ;; Return value:  Size  Location     Type
 16910 ;;                  1    wreg      void 
 16911 ;; Registers used:
 16912 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16913 ;; Tracked objects:
 16914 ;;		On entry : 3F/0
 16915 ;;		On exit  : 0/0
 16916 ;;		Unchanged: 0/0
 16917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16918 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16921 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16922 ;;Total ram usage:        2 bytes
 16923 ;; Hardware stack levels used: 1
 16924 ;; Hardware stack levels required when called: 8
 16925 ;; This function calls:
 16926 ;;		_StartTimer
 16927 ;;		_TimerDone
 16928 ;; This function is called by:
 16929 ;;		_main
 16930 ;; This function uses a non-reentrant model
 16931 ;;
 16932                           
 16933                           	psect	text77
 16934  014A9C                     __ptext77:
 16935                           	callstack 0
 16936  014A9C                     _WaitMs:
 16937                           	callstack 22
 16938                           
 16939                           ; BSR set to: 0
 16940                           ;timers.c: 31: void WaitMs(const uint16_t numMilliseconds);timers.c: 32: {;timers.c: 33:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
 16941                           
 16942                           ; BSR set to: 0
 16943                           ;incstack = 0
 16944  014A9C  C064  F060         	movff	WaitMs@numMilliseconds,StartTimer@count
 16945  014AA0  C065  F061         	movff	WaitMs@numMilliseconds+1,StartTimer@count+1
 16946  014AA4  0E00               	movlw	0
 16947  014AA6  ECC7  F0A4         	call	_StartTimer
 16948                           
 16949                           ;timers.c: 34:  while (!TimerDone(TMR_INTERNAL)) {
 16950  014AAA  D005               	goto	l13023
 16951  014AAC                     l1373:
 16952                           
 16953                           ;timers.c: 35:   __nop();
 16954  014AAC  F000               	nop	
 16955                           
 16956                           ;timers.c: 36:   __nop();
 16957  014AAE  F000               	nop	
 16958                           
 16959                           ;timers.c: 37:   __nop();
 16960  014AB0  F000               	nop	
 16961                           
 16962                           ;timers.c: 38:   __nop();
 16963  014AB2  F000               	nop	
 16964  014AB4  0004               	clrwdt		;# 
 16965  014AB6                     l13023:
 16966                           
 16967                           ;timers.c: 34:  while (!TimerDone(TMR_INTERNAL)) {
 16968  014AB6  0E00               	movlw	0
 16969  014AB8  EC86  F0A5         	call	_TimerDone
 16970  014ABC  0900               	iorlw	0
 16971  014ABE  A4D8               	btfss	status,2,c
 16972  014AC0  0012               	return	
 16973  014AC2  D7F4               	goto	l1373
 16974  014AC4                     __end_of_WaitMs:
 16975                           	callstack 0
 16976                           
 16977 ;; *************** function _TimerDone *****************
 16978 ;; Defined at:
 16979 ;;		line 19 in file "timers.c"
 16980 ;; Parameters:    Size  Location     Type
 16981 ;;  timer           1    wreg     const unsigned char 
 16982 ;; Auto vars:     Size  Location     Type
 16983 ;;  timer           1   31[COMRAM] const unsigned char 
 16984 ;; Return value:  Size  Location     Type
 16985 ;;                  1    wreg      _Bool 
 16986 ;; Registers used:
 16987 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16988 ;; Tracked objects:
 16989 ;;		On entry : 0/0
 16990 ;;		On exit  : 0/0
 16991 ;;		Unchanged: 0/0
 16992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16994 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16995 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16996 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16997 ;;Total ram usage:        3 bytes
 16998 ;; Hardware stack levels used: 1
 16999 ;; Hardware stack levels required when called: 7
 17000 ;; This function calls:
 17001 ;;		Nothing
 17002 ;; This function is called by:
 17003 ;;		_WaitMs
 17004 ;; This function uses a non-reentrant model
 17005 ;;
 17006                           
 17007                           	psect	text78
 17008  014B0C                     __ptext78:
 17009                           	callstack 0
 17010  014B0C                     _TimerDone:
 17011                           	callstack 22
 17012                           
 17013                           ;incstack = 0
 17014                           ;TimerDone@timer stored from wreg
 17015  014B0C  6E20               	movwf	TimerDone@timer^0,c
 17016  014B0E  0004               	clrwdt		;# 
 17017                           
 17018                           ;timers.c: 22:  if (tickCount[timer] == 0) {
 17019  014B10  5020               	movf	TimerDone@timer^0,w,c
 17020  014B12  0D02               	mullw	2
 17021  014B14  0E0C               	movlw	low _tickCount
 17022  014B16  24F3               	addwf	243,w,c
 17023  014B18  6ED9               	movwf	fsr2l,c
 17024  014B1A  0E01               	movlw	high _tickCount
 17025  014B1C  20F4               	addwfc	prodh,w,c
 17026  014B1E  6EDA               	movwf	fsr2h,c
 17027  014B20  50DE               	movf	postinc2,w,c
 17028  014B22  10DE               	iorwf	postinc2,w,c
 17029  014B24  A4D8               	btfss	status,2,c
 17030  014B26  D002               	goto	l12807
 17031                           
 17032                           ;timers.c: 23:   return 1;
 17033  014B28  0E01               	movlw	1
 17034  014B2A  0012               	return	
 17035  014B2C                     l12807:
 17036                           
 17037                           ;timers.c: 25:  return 0;
 17038  014B2C  0E00               	movlw	0
 17039  014B2E  0012               	return		;funcret
 17040  014B30                     __end_of_TimerDone:
 17041                           	callstack 0
 17042                           
 17043 ;; *************** function _StartTimer *****************
 17044 ;; Defined at:
 17045 ;;		line 11 in file "timers.c"
 17046 ;; Parameters:    Size  Location     Type
 17047 ;;  timer           1    wreg     const unsigned char 
 17048 ;;  count           2    0[BANK0 ] const unsigned short 
 17049 ;; Auto vars:     Size  Location     Type
 17050 ;;  timer           1   31[COMRAM] const unsigned char 
 17051 ;; Return value:  Size  Location     Type
 17052 ;;                  1    wreg      void 
 17053 ;; Registers used:
 17054 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17055 ;; Tracked objects:
 17056 ;;		On entry : 3F/0
 17057 ;;		On exit  : 3F/0
 17058 ;;		Unchanged: 0/0
 17059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17060 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17061 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17062 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17063 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17064 ;;Total ram usage:        5 bytes
 17065 ;; Hardware stack levels used: 1
 17066 ;; Hardware stack levels required when called: 7
 17067 ;; This function calls:
 17068 ;;		Nothing
 17069 ;; This function is called by:
 17070 ;;		_WaitMs
 17071 ;; This function uses a non-reentrant model
 17072 ;;
 17073                           
 17074                           	psect	text79
 17075  01498E                     __ptext79:
 17076                           	callstack 0
 17077  01498E                     _StartTimer:
 17078                           	callstack 22
 17079                           
 17080                           ;incstack = 0
 17081                           ;StartTimer@timer stored from wreg
 17082  01498E  6E20               	movwf	StartTimer@timer^0,c
 17083                           
 17084                           ;timers.c: 11: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 12: 
      +                          {;timers.c: 13:  tickCount[timer] = count << 1;
 17085  014990  C060  F062         	movff	StartTimer@count,??_StartTimer
 17086  014994  C061  F063         	movff	StartTimer@count+1,??_StartTimer+1
 17087  014998  90D8               	bcf	status,0,c
 17088  01499A  0100               	movlb	0	; () banked
 17089  01499C  3762               	rlcf	??_StartTimer& (0+255),f,b
 17090  01499E  3763               	rlcf	(??_StartTimer+1)& (0+255),f,b
 17091  0149A0  5020               	movf	StartTimer@timer^0,w,c
 17092  0149A2  0D02               	mullw	2
 17093  0149A4  0E0C               	movlw	low _tickCount
 17094  0149A6  24F3               	addwf	243,w,c
 17095  0149A8  6ED9               	movwf	fsr2l,c
 17096  0149AA  0E01               	movlw	high _tickCount
 17097  0149AC  20F4               	addwfc	prodh,w,c
 17098  0149AE  6EDA               	movwf	fsr2h,c
 17099  0149B0  0060  F18B  FFDE   	movff	??_StartTimer,postinc2
 17100  0149B6  0060  F18F  FFDD   	movff	??_StartTimer+1,postdec2
 17101                           
 17102                           ; BSR set to: 0
 17103  0149BC  0012               	return		;funcret
 17104  0149BE                     __end_of_StartTimer:
 17105                           	callstack 0
 17106                           
 17107 ;; *************** function _SYSTEM_Initialize *****************
 17108 ;; Defined at:
 17109 ;;		line 50 in file "mcc_generated_files/mcc.c"
 17110 ;; Parameters:    Size  Location     Type
 17111 ;;		None
 17112 ;; Auto vars:     Size  Location     Type
 17113 ;;		None
 17114 ;; Return value:  Size  Location     Type
 17115 ;;                  1    wreg      void 
 17116 ;; Registers used:
 17117 ;;		wreg, status,2, status,0, cstack
 17118 ;; Tracked objects:
 17119 ;;		On entry : 3F/1
 17120 ;;		On exit  : 3F/39
 17121 ;;		Unchanged: 0/0
 17122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17127 ;;Total ram usage:        0 bytes
 17128 ;; Hardware stack levels used: 1
 17129 ;; Hardware stack levels required when called: 9
 17130 ;; This function calls:
 17131 ;;		_ADCC_Initialize
 17132 ;;		_DAC1_Initialize
 17133 ;;		_DMA1_Initialize
 17134 ;;		_INTERRUPT_Initialize
 17135 ;;		_OSCILLATOR_Initialize
 17136 ;;		_PIN_MANAGER_Initialize
 17137 ;;		_PMD_Initialize
 17138 ;;		_PWM5_Initialize
 17139 ;;		_PWM6_Initialize
 17140 ;;		_SPI1_Initialize
 17141 ;;		_SystemArbiter_Initialize
 17142 ;;		_TMR2_Initialize
 17143 ;;		_TMR5_Initialize
 17144 ;;		_TMR6_Initialize
 17145 ;;		_UART1_Initialize
 17146 ;; This function is called by:
 17147 ;;		_main
 17148 ;; This function uses a non-reentrant model
 17149 ;;
 17150                           
 17151                           	psect	text80
 17152  014724                     __ptext80:
 17153                           	callstack 0
 17154  014724                     _SYSTEM_Initialize:
 17155                           	callstack 21
 17156                           
 17157                           ; BSR set to: 1
 17158                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 17159                           
 17160                           ; BSR set to: 0
 17161                           ;incstack = 0
 17162  014724  ECBD  F0A1         	call	_INTERRUPT_Initialize	;wreg free
 17163                           
 17164                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 17165  014728  ECDE  F0A5         	call	_PMD_Initialize	;wreg free
 17166                           
 17167                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 17168  01472C  ECC8  F09A         	call	_PIN_MANAGER_Initialize	;wreg free
 17169                           
 17170                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 17171  014730  EC5C  F0A6         	call	_OSCILLATOR_Initialize	;wreg free
 17172                           
 17173                           ; BSR set to: 57
 17174                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 17175  014734  EC85  F09E         	call	_ADCC_Initialize	;wreg free
 17176                           
 17177                           ; BSR set to: 0
 17178                           ;mcc_generated_files/mcc.c: 57:     DMA1_Initialize();
 17179  014738  ECC6  F09F         	call	_DMA1_Initialize	;wreg free
 17180                           
 17181                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 17182  01473C  EC3E  F0A6         	call	_TMR2_Initialize	;wreg free
 17183                           
 17184                           ;mcc_generated_files/mcc.c: 59:     PWM6_Initialize();
 17185  014740  EC9D  F0A6         	call	_PWM6_Initialize	;wreg free
 17186                           
 17187                           ; BSR set to: 63
 17188                           ;mcc_generated_files/mcc.c: 60:     TMR6_Initialize();
 17189  014744  ECDF  F0A4         	call	_TMR6_Initialize	;wreg free
 17190                           
 17191                           ; BSR set to: 0
 17192                           ;mcc_generated_files/mcc.c: 61:     DAC1_Initialize();
 17193  014748  EC69  F0A7         	call	_DAC1_Initialize	;wreg free
 17194                           
 17195                           ;mcc_generated_files/mcc.c: 62:     TMR5_Initialize();
 17196  01474C  EC6F  F0A1         	call	_TMR5_Initialize	;wreg free
 17197                           
 17198                           ; BSR set to: 0
 17199                           ;mcc_generated_files/mcc.c: 63:     PWM5_Initialize();
 17200  014750  ECA9  F0A6         	call	_PWM5_Initialize	;wreg free
 17201                           
 17202                           ; BSR set to: 63
 17203                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 17204  014754  EC0E  F099         	call	_UART1_Initialize	;wreg free
 17205                           
 17206                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 17207  014758  EC84  F0A6         	call	_SPI1_Initialize	;wreg free
 17208                           
 17209                           ;mcc_generated_files/mcc.c: 66:     SystemArbiter_Initialize();
 17210  01475C  EC4E  F0A7         	call	_SystemArbiter_Initialize	;wreg free
 17211                           
 17212                           ; BSR set to: 57
 17213  014760  0012               	return		;funcret
 17214  014762                     __end_of_SYSTEM_Initialize:
 17215                           	callstack 0
 17216                           
 17217 ;; *************** function _UART1_Initialize *****************
 17218 ;; Defined at:
 17219 ;;		line 87 in file "mcc_generated_files/uart1.c"
 17220 ;; Parameters:    Size  Location     Type
 17221 ;;		None
 17222 ;; Auto vars:     Size  Location     Type
 17223 ;;		None
 17224 ;; Return value:  Size  Location     Type
 17225 ;;                  1    wreg      void 
 17226 ;; Registers used:
 17227 ;;		wreg, status,2, status,0, cstack
 17228 ;; Tracked objects:
 17229 ;;		On entry : 3F/3F
 17230 ;;		On exit  : 3F/39
 17231 ;;		Unchanged: 0/0
 17232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17237 ;;Total ram usage:        0 bytes
 17238 ;; Hardware stack levels used: 1
 17239 ;; Hardware stack levels required when called: 8
 17240 ;; This function calls:
 17241 ;;		_UART1_SetErrorHandler
 17242 ;;		_UART1_SetFramingErrorHandler
 17243 ;;		_UART1_SetFramingErrorInterruptHandler
 17244 ;;		_UART1_SetOverrunErrorHandler
 17245 ;;		_UART1_SetRxInterruptHandler
 17246 ;;		_UART1_SetTxInterruptHandler
 17247 ;;		_UART1_SetUartInterruptHandler
 17248 ;; This function is called by:
 17249 ;;		_SYSTEM_Initialize
 17250 ;; This function uses a non-reentrant model
 17251 ;;
 17252                           
 17253                           	psect	text81
 17254  01321C                     __ptext81:
 17255                           	callstack 0
 17256  01321C                     _UART1_Initialize:
 17257                           	callstack 21
 17258                           
 17259                           ; BSR set to: 63
 17260                           ;mcc_generated_files/uart1.c: 90:     PIE3bits.U1RXIE = 0;
 17261                           
 17262                           ; BSR set to: 57
 17263                           ;incstack = 0
 17264  01321C  0139               	movlb	57	; () banked
 17265  01321E  9793               	bcf	147,3,b	;volatile
 17266                           
 17267                           ; BSR set to: 57
 17268                           ;mcc_generated_files/uart1.c: 91:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 17269  013220  0EC4               	movlw	low _UART1_Receive_ISR
 17270  013222  0100               	movlb	0	; () banked
 17271  013224  6F60               	movwf	UART1_SetRxInterruptHandler@InterruptHandler& (0+255),b
 17272  013226  0E3A               	movlw	high _UART1_Receive_ISR
 17273  013228  6F61               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)& (0+255),b
 17274  01322A  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 17275  01322C  6F62               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+2)& (0+255),b
 17276  01322E  EC1D  F0A7         	call	_UART1_SetRxInterruptHandler	;wreg free
 17277                           
 17278                           ; BSR set to: 0
 17279                           ;mcc_generated_files/uart1.c: 92:     PIE3bits.U1TXIE = 0;
 17280  013232  0139               	movlb	57	; () banked
 17281  013234  9993               	bcf	147,4,b	;volatile
 17282                           
 17283                           ;mcc_generated_files/uart1.c: 93:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 17284  013236  0E1C               	movlw	low _UART1_Transmit_ISR
 17285  013238  0100               	movlb	0	; () banked
 17286  01323A  6F60               	movwf	UART1_SetTxInterruptHandler@InterruptHandler& (0+255),b
 17287  01323C  0E4A               	movlw	high _UART1_Transmit_ISR
 17288  01323E  6F61               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)& (0+255),b
 17289  013240  0E01               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 17290  013242  6F62               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+2)& (0+255),b
 17291  013244  EC16  F0A7         	call	_UART1_SetTxInterruptHandler	;wreg free
 17292                           
 17293                           ; BSR set to: 0
 17294                           ;mcc_generated_files/uart1.c: 94:     PIE3bits.U1EIE = 0;
 17295  013248  0139               	movlb	57	; () banked
 17296  01324A  9B93               	bcf	147,5,b	;volatile
 17297                           
 17298                           ;mcc_generated_files/uart1.c: 95:     UART1_SetFramingErrorInterruptHandler(UART1_Framin
      +                          gError_ISR);
 17299  01324C  0EF4               	movlw	low _UART1_FramingError_ISR
 17300  01324E  0100               	movlb	0	; () banked
 17301  013250  6F60               	movwf	UART1_SetFramingErrorInterruptHandler@InterruptHandler& (0+255),b
 17302  013252  0E4E               	movlw	high _UART1_FramingError_ISR
 17303  013254  6F61               	movwf	(UART1_SetFramingErrorInterruptHandler@InterruptHandler+1)& (0+255),b
 17304  013256  0E01               	movlw	low (_UART1_FramingError_ISR shr (0+16))
 17305  013258  6F62               	movwf	(UART1_SetFramingErrorInterruptHandler@InterruptHandler+2)& (0+255),b
 17306  01325A  EC2B  F0A7         	call	_UART1_SetFramingErrorInterruptHandler	;wreg free
 17307                           
 17308                           ; BSR set to: 0
 17309                           ;mcc_generated_files/uart1.c: 96:     PIE3bits.U1IE = 0;
 17310  01325E  0139               	movlb	57	; () banked
 17311  013260  9D93               	bcf	147,6,b	;volatile
 17312                           
 17313                           ;mcc_generated_files/uart1.c: 97:     UART1_SetUartInterruptHandler(UART1_UartInterrupt_
      +                          ISR);
 17314  013262  0E14               	movlw	low _UART1_UartInterrupt_ISR
 17315  013264  0100               	movlb	0	; () banked
 17316  013266  6F60               	movwf	UART1_SetUartInterruptHandler@InterruptHandler& (0+255),b
 17317  013268  0E4F               	movlw	high _UART1_UartInterrupt_ISR
 17318  01326A  6F61               	movwf	(UART1_SetUartInterruptHandler@InterruptHandler+1)& (0+255),b
 17319  01326C  0E01               	movlw	low (_UART1_UartInterrupt_ISR shr (0+16))
 17320  01326E  6F62               	movwf	(UART1_SetUartInterruptHandler@InterruptHandler+2)& (0+255),b
 17321  013270  EC0F  F0A7         	call	_UART1_SetUartInterruptHandler	;wreg free
 17322                           
 17323                           ; BSR set to: 0
 17324                           ;mcc_generated_files/uart1.c: 102:     U1P1L = 0x00;
 17325  013274  0E00               	movlw	0
 17326  013276  013D               	movlb	61	; () banked
 17327  013278  6FEC               	movwf	236,b	;volatile
 17328                           
 17329                           ; BSR set to: 61
 17330                           ;mcc_generated_files/uart1.c: 105:     U1P1H = 0x00;
 17331  01327A  0E00               	movlw	0
 17332  01327C  6FED               	movwf	237,b	;volatile
 17333                           
 17334                           ; BSR set to: 61
 17335                           ;mcc_generated_files/uart1.c: 108:     U1P2L = 0x00;
 17336  01327E  0E00               	movlw	0
 17337  013280  6FEE               	movwf	238,b	;volatile
 17338                           
 17339                           ; BSR set to: 61
 17340                           ;mcc_generated_files/uart1.c: 111:     U1P2H = 0x00;
 17341  013282  0E00               	movlw	0
 17342  013284  6FEF               	movwf	239,b	;volatile
 17343                           
 17344                           ; BSR set to: 61
 17345                           ;mcc_generated_files/uart1.c: 114:     U1P3L = 0x00;
 17346  013286  0E00               	movlw	0
 17347  013288  6FF0               	movwf	240,b	;volatile
 17348                           
 17349                           ; BSR set to: 61
 17350                           ;mcc_generated_files/uart1.c: 117:     U1P3H = 0x00;
 17351  01328A  0E00               	movlw	0
 17352  01328C  6FF1               	movwf	241,b	;volatile
 17353                           
 17354                           ; BSR set to: 61
 17355                           ;mcc_generated_files/uart1.c: 120:     U1CON0 = 0xB0;
 17356  01328E  0EB0               	movlw	176
 17357  013290  6FF2               	movwf	242,b	;volatile
 17358                           
 17359                           ; BSR set to: 61
 17360                           ;mcc_generated_files/uart1.c: 123:     U1CON1 = 0x90;
 17361  013292  0E90               	movlw	144
 17362  013294  6FF3               	movwf	243,b	;volatile
 17363                           
 17364                           ; BSR set to: 61
 17365                           ;mcc_generated_files/uart1.c: 126:     U1CON2 = 0x00;
 17366  013296  0E00               	movlw	0
 17367  013298  6FF4               	movwf	244,b	;volatile
 17368                           
 17369                           ; BSR set to: 61
 17370                           ;mcc_generated_files/uart1.c: 129:     U1BRGL = 0x8A;
 17371  01329A  0E8A               	movlw	138
 17372  01329C  6FF5               	movwf	245,b	;volatile
 17373                           
 17374                           ; BSR set to: 61
 17375                           ;mcc_generated_files/uart1.c: 132:     U1BRGH = 0x00;
 17376  01329E  0E00               	movlw	0
 17377  0132A0  6FF6               	movwf	246,b	;volatile
 17378                           
 17379                           ; BSR set to: 61
 17380                           ;mcc_generated_files/uart1.c: 135:     U1FIFO = 0x00;
 17381  0132A2  0E00               	movlw	0
 17382  0132A4  6FF7               	movwf	247,b	;volatile
 17383                           
 17384                           ; BSR set to: 61
 17385                           ;mcc_generated_files/uart1.c: 138:     U1UIR = 0x00;
 17386  0132A6  0E00               	movlw	0
 17387  0132A8  6FF8               	movwf	248,b	;volatile
 17388                           
 17389                           ; BSR set to: 61
 17390                           ;mcc_generated_files/uart1.c: 141:     U1ERRIR = 0x00;
 17391  0132AA  0E00               	movlw	0
 17392  0132AC  6FF9               	movwf	249,b	;volatile
 17393                           
 17394                           ; BSR set to: 61
 17395                           ;mcc_generated_files/uart1.c: 144:     U1ERRIE = 0x00;
 17396  0132AE  0E00               	movlw	0
 17397  0132B0  6FFA               	movwf	250,b	;volatile
 17398                           
 17399                           ; BSR set to: 61
 17400                           ;mcc_generated_files/uart1.c: 147:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
 17401  0132B2  0E24               	movlw	low _UART1_DefaultFramingErrorHandler
 17402  0132B4  0100               	movlb	0	; () banked
 17403  0132B6  6F60               	movwf	UART1_SetFramingErrorHandler@interruptHandler& (0+255),b
 17404  0132B8  0E4F               	movlw	high _UART1_DefaultFramingErrorHandler
 17405  0132BA  6F61               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
 17406  0132BC  0E01               	movlw	low (_UART1_DefaultFramingErrorHandler shr (0+16))
 17407  0132BE  6F62               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+2)& (0+255),b
 17408  0132C0  EC32  F0A7         	call	_UART1_SetFramingErrorHandler	;wreg free
 17409                           
 17410                           ; BSR set to: 0
 17411                           ;mcc_generated_files/uart1.c: 148:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
 17412  0132C4  0E22               	movlw	low _UART1_DefaultOverrunErrorHandler
 17413  0132C6  6F60               	movwf	UART1_SetOverrunErrorHandler@interruptHandler& (0+255),b
 17414  0132C8  0E4F               	movlw	high _UART1_DefaultOverrunErrorHandler
 17415  0132CA  6F61               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
 17416  0132CC  0E01               	movlw	low (_UART1_DefaultOverrunErrorHandler shr (0+16))
 17417  0132CE  6F62               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+2)& (0+255),b
 17418  0132D0  EC24  F0A7         	call	_UART1_SetOverrunErrorHandler	;wreg free
 17419                           
 17420                           ; BSR set to: 0
 17421                           ;mcc_generated_files/uart1.c: 149:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
 17422  0132D4  0E0E               	movlw	low _UART1_DefaultErrorHandler
 17423  0132D6  6F60               	movwf	UART1_SetErrorHandler@interruptHandler& (0+255),b
 17424  0132D8  0E4F               	movlw	high _UART1_DefaultErrorHandler
 17425  0132DA  6F61               	movwf	(UART1_SetErrorHandler@interruptHandler+1)& (0+255),b
 17426  0132DC  0E01               	movlw	low (_UART1_DefaultErrorHandler shr (0+16))
 17427  0132DE  6F62               	movwf	(UART1_SetErrorHandler@interruptHandler+2)& (0+255),b
 17428  0132E0  EC39  F0A7         	call	_UART1_SetErrorHandler	;wreg free
 17429                           
 17430                           ;mcc_generated_files/uart1.c: 151:     uart1RxLastError.status = 0;
 17431  0132E4  0E00               	movlw	0
 17432  0132E6  6E38               	movwf	_uart1RxLastError^0,c	;volatile
 17433                           
 17434                           ;mcc_generated_files/uart1.c: 154:     uart1TxHead = 0;
 17435  0132E8  0E00               	movlw	0
 17436  0132EA  6E3E               	movwf	_uart1TxHead^0,c	;volatile
 17437                           
 17438                           ;mcc_generated_files/uart1.c: 155:     uart1TxTail = 0;
 17439  0132EC  0E00               	movlw	0
 17440  0132EE  6E3D               	movwf	_uart1TxTail^0,c	;volatile
 17441                           
 17442                           ;mcc_generated_files/uart1.c: 156:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 17443  0132F0  0E40               	movlw	64
 17444  0132F2  6E3C               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 17445                           
 17446                           ;mcc_generated_files/uart1.c: 157:     uart1RxHead = 0;
 17447  0132F4  0E00               	movlw	0
 17448  0132F6  6E3B               	movwf	_uart1RxHead^0,c	;volatile
 17449                           
 17450                           ;mcc_generated_files/uart1.c: 158:     uart1RxTail = 0;
 17451  0132F8  0E00               	movlw	0
 17452  0132FA  6E3A               	movwf	_uart1RxTail^0,c	;volatile
 17453                           
 17454                           ;mcc_generated_files/uart1.c: 159:     uart1RxCount = 0;
 17455  0132FC  0E00               	movlw	0
 17456  0132FE  6E39               	movwf	_uart1RxCount^0,c	;volatile
 17457                           
 17458                           ; BSR set to: 0
 17459                           ;mcc_generated_files/uart1.c: 162:     PIE3bits.U1RXIE = 1;
 17460  013300  0139               	movlb	57	; () banked
 17461  013302  8793               	bsf	147,3,b	;volatile
 17462                           
 17463                           ; BSR set to: 57
 17464                           ;mcc_generated_files/uart1.c: 164:     PIE3bits.U1EIE = 1;
 17465  013304  8B93               	bsf	147,5,b	;volatile
 17466                           
 17467                           ; BSR set to: 57
 17468                           ;mcc_generated_files/uart1.c: 166:     PIE3bits.U1IE = 1;
 17469  013306  8D93               	bsf	147,6,b	;volatile
 17470                           
 17471                           ; BSR set to: 57
 17472  013308  0012               	return		;funcret
 17473  01330A                     __end_of_UART1_Initialize:
 17474                           	callstack 0
 17475                           
 17476 ;; *************** function _UART1_SetUartInterruptHandler *****************
 17477 ;; Defined at:
 17478 ;;		line 378 in file "mcc_generated_files/uart1.c"
 17479 ;; Parameters:    Size  Location     Type
 17480 ;;  InterruptHan    3    0[BANK0 ] PTR FTN()void 
 17481 ;;		 -> UART1_UartInterrupt_ISR(1), 
 17482 ;; Auto vars:     Size  Location     Type
 17483 ;;		None
 17484 ;; Return value:  Size  Location     Type
 17485 ;;                  1    wreg      void 
 17486 ;; Registers used:
 17487 ;;		wreg, status,2, status,0
 17488 ;; Tracked objects:
 17489 ;;		On entry : 3F/0
 17490 ;;		On exit  : 3F/0
 17491 ;;		Unchanged: 3F/0
 17492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17493 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17496 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17497 ;;Total ram usage:        3 bytes
 17498 ;; Hardware stack levels used: 1
 17499 ;; Hardware stack levels required when called: 7
 17500 ;; This function calls:
 17501 ;;		Nothing
 17502 ;; This function is called by:
 17503 ;;		_UART1_Initialize
 17504 ;; This function uses a non-reentrant model
 17505 ;;
 17506                           
 17507                           	psect	text82
 17508  014E1E                     __ptext82:
 17509                           	callstack 0
 17510  014E1E                     _UART1_SetUartInterruptHandler:
 17511                           	callstack 21
 17512                           
 17513                           ; BSR set to: 0
 17514                           ;mcc_generated_files/uart1.c: 379:     UART1_UARTInterruptHandler = InterruptHandler;
 17515                           
 17516                           ; BSR set to: 57
 17517                           ;incstack = 0
 17518  014E1E  C060  F021         	movff	UART1_SetUartInterruptHandler@InterruptHandler,_UART1_UARTInterruptHandler
 17519  014E22  C061  F022         	movff	UART1_SetUartInterruptHandler@InterruptHandler+1,_UART1_UARTInterruptHandler+1
 17520  014E26  C062  F023         	movff	UART1_SetUartInterruptHandler@InterruptHandler+2,_UART1_UARTInterruptHandler+2
 17521                           
 17522                           ; BSR set to: 0
 17523  014E2A  0012               	return		;funcret
 17524  014E2C                     __end_of_UART1_SetUartInterruptHandler:
 17525                           	callstack 0
 17526                           
 17527 ;; *************** function _UART1_SetTxInterruptHandler *****************
 17528 ;; Defined at:
 17529 ;;		line 370 in file "mcc_generated_files/uart1.c"
 17530 ;; Parameters:    Size  Location     Type
 17531 ;;  InterruptHan    3    0[BANK0 ] PTR FTN()void 
 17532 ;;		 -> UART1_Transmit_ISR(1), 
 17533 ;; Auto vars:     Size  Location     Type
 17534 ;;		None
 17535 ;; Return value:  Size  Location     Type
 17536 ;;                  1    wreg      void 
 17537 ;; Registers used:
 17538 ;;		wreg, status,2, status,0
 17539 ;; Tracked objects:
 17540 ;;		On entry : 3F/0
 17541 ;;		On exit  : 3F/0
 17542 ;;		Unchanged: 3F/0
 17543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17544 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17547 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17548 ;;Total ram usage:        3 bytes
 17549 ;; Hardware stack levels used: 1
 17550 ;; Hardware stack levels required when called: 7
 17551 ;; This function calls:
 17552 ;;		Nothing
 17553 ;; This function is called by:
 17554 ;;		_UART1_Initialize
 17555 ;; This function uses a non-reentrant model
 17556 ;;
 17557                           
 17558                           	psect	text83
 17559  014E2C                     __ptext83:
 17560                           	callstack 0
 17561  014E2C                     _UART1_SetTxInterruptHandler:
 17562                           	callstack 21
 17563                           
 17564                           ; BSR set to: 0
 17565                           ;mcc_generated_files/uart1.c: 371:     UART1_TxInterruptHandler = InterruptHandler;
 17566                           
 17567                           ; BSR set to: 0
 17568                           ;incstack = 0
 17569  014E2C  C060  F027         	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
 17570  014E30  C061  F028         	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
 17571  014E34  C062  F029         	movff	UART1_SetTxInterruptHandler@InterruptHandler+2,_UART1_TxInterruptHandler+2
 17572                           
 17573                           ; BSR set to: 0
 17574  014E38  0012               	return		;funcret
 17575  014E3A                     __end_of_UART1_SetTxInterruptHandler:
 17576                           	callstack 0
 17577                           
 17578 ;; *************** function _UART1_SetRxInterruptHandler *****************
 17579 ;; Defined at:
 17580 ;;		line 366 in file "mcc_generated_files/uart1.c"
 17581 ;; Parameters:    Size  Location     Type
 17582 ;;  InterruptHan    3    0[BANK0 ] PTR FTN()void 
 17583 ;;		 -> UART1_Receive_ISR(1), 
 17584 ;; Auto vars:     Size  Location     Type
 17585 ;;		None
 17586 ;; Return value:  Size  Location     Type
 17587 ;;                  1    wreg      void 
 17588 ;; Registers used:
 17589 ;;		wreg, status,2, status,0
 17590 ;; Tracked objects:
 17591 ;;		On entry : 3F/0
 17592 ;;		On exit  : 3F/0
 17593 ;;		Unchanged: 3F/0
 17594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17595 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17598 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17599 ;;Total ram usage:        3 bytes
 17600 ;; Hardware stack levels used: 1
 17601 ;; Hardware stack levels required when called: 7
 17602 ;; This function calls:
 17603 ;;		Nothing
 17604 ;; This function is called by:
 17605 ;;		_UART1_Initialize
 17606 ;; This function uses a non-reentrant model
 17607 ;;
 17608                           
 17609                           	psect	text84
 17610  014E3A                     __ptext84:
 17611                           	callstack 0
 17612  014E3A                     _UART1_SetRxInterruptHandler:
 17613                           	callstack 21
 17614                           
 17615                           ; BSR set to: 0
 17616                           ;mcc_generated_files/uart1.c: 367:     UART1_RxInterruptHandler = InterruptHandler;
 17617                           
 17618                           ; BSR set to: 0
 17619                           ;incstack = 0
 17620  014E3A  C060  F02A         	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
 17621  014E3E  C061  F02B         	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
 17622  014E42  C062  F02C         	movff	UART1_SetRxInterruptHandler@InterruptHandler+2,_UART1_RxInterruptHandler+2
 17623                           
 17624                           ; BSR set to: 0
 17625  014E46  0012               	return		;funcret
 17626  014E48                     __end_of_UART1_SetRxInterruptHandler:
 17627                           	callstack 0
 17628                           
 17629 ;; *************** function _UART1_SetOverrunErrorHandler *****************
 17630 ;; Defined at:
 17631 ;;		line 341 in file "mcc_generated_files/uart1.c"
 17632 ;; Parameters:    Size  Location     Type
 17633 ;;  interruptHan    3    0[BANK0 ] PTR FTN()void 
 17634 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
 17635 ;; Auto vars:     Size  Location     Type
 17636 ;;		None
 17637 ;; Return value:  Size  Location     Type
 17638 ;;                  1    wreg      void 
 17639 ;; Registers used:
 17640 ;;		wreg, status,2, status,0
 17641 ;; Tracked objects:
 17642 ;;		On entry : 3F/0
 17643 ;;		On exit  : 3F/0
 17644 ;;		Unchanged: 3F/0
 17645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17646 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17649 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17650 ;;Total ram usage:        3 bytes
 17651 ;; Hardware stack levels used: 1
 17652 ;; Hardware stack levels required when called: 7
 17653 ;; This function calls:
 17654 ;;		Nothing
 17655 ;; This function is called by:
 17656 ;;		_UART1_Initialize
 17657 ;; This function uses a non-reentrant model
 17658 ;;
 17659                           
 17660                           	psect	text85
 17661  014E48                     __ptext85:
 17662                           	callstack 0
 17663  014E48                     _UART1_SetOverrunErrorHandler:
 17664                           	callstack 21
 17665                           
 17666                           ; BSR set to: 0
 17667                           ;mcc_generated_files/uart1.c: 342:     UART1_OverrunErrorHandler = interruptHandler;
 17668                           
 17669                           ; BSR set to: 0
 17670                           ;incstack = 0
 17671  014E48  C060  F12F         	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
 17672  014E4C  C061  F130         	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
 17673  014E50  C062  F131         	movff	UART1_SetOverrunErrorHandler@interruptHandler+2,_UART1_OverrunErrorHandler+2
 17674                           
 17675                           ; BSR set to: 0
 17676  014E54  0012               	return		;funcret
 17677  014E56                     __end_of_UART1_SetOverrunErrorHandler:
 17678                           	callstack 0
 17679                           
 17680 ;; *************** function _UART1_SetFramingErrorInterruptHandler *****************
 17681 ;; Defined at:
 17682 ;;		line 374 in file "mcc_generated_files/uart1.c"
 17683 ;; Parameters:    Size  Location     Type
 17684 ;;  InterruptHan    3    0[BANK0 ] PTR FTN()void 
 17685 ;;		 -> UART1_FramingError_ISR(1), 
 17686 ;; Auto vars:     Size  Location     Type
 17687 ;;		None
 17688 ;; Return value:  Size  Location     Type
 17689 ;;                  1    wreg      void 
 17690 ;; Registers used:
 17691 ;;		wreg, status,2, status,0
 17692 ;; Tracked objects:
 17693 ;;		On entry : 3F/0
 17694 ;;		On exit  : 3F/0
 17695 ;;		Unchanged: 3F/0
 17696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17697 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17700 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17701 ;;Total ram usage:        3 bytes
 17702 ;; Hardware stack levels used: 1
 17703 ;; Hardware stack levels required when called: 7
 17704 ;; This function calls:
 17705 ;;		Nothing
 17706 ;; This function is called by:
 17707 ;;		_UART1_Initialize
 17708 ;; This function uses a non-reentrant model
 17709 ;;
 17710                           
 17711                           	psect	text86
 17712  014E56                     __ptext86:
 17713                           	callstack 0
 17714  014E56                     _UART1_SetFramingErrorInterruptHandler:
 17715                           	callstack 21
 17716                           
 17717                           ; BSR set to: 0
 17718                           ;mcc_generated_files/uart1.c: 375:     UART1_FramingErrorInterruptHandler = InterruptHan
      +                          dler;
 17719                           
 17720                           ; BSR set to: 0
 17721                           ;incstack = 0
 17722  014E56  C060  F024         	movff	UART1_SetFramingErrorInterruptHandler@InterruptHandler,_UART1_FramingErrorInterru
      +                          ptHandler
 17723  014E5A  C061  F025         	movff	UART1_SetFramingErrorInterruptHandler@InterruptHandler+1,_UART1_FramingErrorInter
      +                          ruptHandler+1
 17724  014E5E  C062  F026         	movff	UART1_SetFramingErrorInterruptHandler@InterruptHandler+2,_UART1_FramingErrorInter
      +                          ruptHandler+2
 17725                           
 17726                           ; BSR set to: 0
 17727  014E62  0012               	return		;funcret
 17728  014E64                     __end_of_UART1_SetFramingErrorInterruptHandler:
 17729                           	callstack 0
 17730                           
 17731 ;; *************** function _UART1_SetFramingErrorHandler *****************
 17732 ;; Defined at:
 17733 ;;		line 337 in file "mcc_generated_files/uart1.c"
 17734 ;; Parameters:    Size  Location     Type
 17735 ;;  interruptHan    3    0[BANK0 ] PTR FTN()void 
 17736 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
 17737 ;; Auto vars:     Size  Location     Type
 17738 ;;		None
 17739 ;; Return value:  Size  Location     Type
 17740 ;;                  1    wreg      void 
 17741 ;; Registers used:
 17742 ;;		wreg, status,2, status,0
 17743 ;; Tracked objects:
 17744 ;;		On entry : 3F/0
 17745 ;;		On exit  : 3F/0
 17746 ;;		Unchanged: 3F/0
 17747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17748 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17751 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17752 ;;Total ram usage:        3 bytes
 17753 ;; Hardware stack levels used: 1
 17754 ;; Hardware stack levels required when called: 7
 17755 ;; This function calls:
 17756 ;;		Nothing
 17757 ;; This function is called by:
 17758 ;;		_UART1_Initialize
 17759 ;; This function uses a non-reentrant model
 17760 ;;
 17761                           
 17762                           	psect	text87
 17763  014E64                     __ptext87:
 17764                           	callstack 0
 17765  014E64                     _UART1_SetFramingErrorHandler:
 17766                           	callstack 21
 17767                           
 17768                           ; BSR set to: 0
 17769                           ;mcc_generated_files/uart1.c: 338:     UART1_FramingErrorHandler = interruptHandler;
 17770                           
 17771                           ; BSR set to: 0
 17772                           ;incstack = 0
 17773  014E64  C060  F132         	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
 17774  014E68  C061  F133         	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
 17775  014E6C  C062  F134         	movff	UART1_SetFramingErrorHandler@interruptHandler+2,_UART1_FramingErrorHandler+2
 17776                           
 17777                           ; BSR set to: 0
 17778  014E70  0012               	return		;funcret
 17779  014E72                     __end_of_UART1_SetFramingErrorHandler:
 17780                           	callstack 0
 17781                           
 17782 ;; *************** function _UART1_SetErrorHandler *****************
 17783 ;; Defined at:
 17784 ;;		line 345 in file "mcc_generated_files/uart1.c"
 17785 ;; Parameters:    Size  Location     Type
 17786 ;;  interruptHan    3    0[BANK0 ] PTR FTN()void 
 17787 ;;		 -> UART1_DefaultErrorHandler(1), 
 17788 ;; Auto vars:     Size  Location     Type
 17789 ;;		None
 17790 ;; Return value:  Size  Location     Type
 17791 ;;                  1    wreg      void 
 17792 ;; Registers used:
 17793 ;;		wreg, status,2, status,0
 17794 ;; Tracked objects:
 17795 ;;		On entry : 3F/0
 17796 ;;		On exit  : 3F/0
 17797 ;;		Unchanged: 3F/0
 17798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17799 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17802 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17803 ;;Total ram usage:        3 bytes
 17804 ;; Hardware stack levels used: 1
 17805 ;; Hardware stack levels required when called: 7
 17806 ;; This function calls:
 17807 ;;		Nothing
 17808 ;; This function is called by:
 17809 ;;		_UART1_Initialize
 17810 ;; This function uses a non-reentrant model
 17811 ;;
 17812                           
 17813                           	psect	text88
 17814  014E72                     __ptext88:
 17815                           	callstack 0
 17816  014E72                     _UART1_SetErrorHandler:
 17817                           	callstack 21
 17818                           
 17819                           ; BSR set to: 0
 17820                           ;mcc_generated_files/uart1.c: 346:     UART1_ErrorHandler = interruptHandler;
 17821                           
 17822                           ; BSR set to: 0
 17823                           ;incstack = 0
 17824  014E72  C060  F12C         	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
 17825  014E76  C061  F12D         	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
 17826  014E7A  C062  F12E         	movff	UART1_SetErrorHandler@interruptHandler+2,_UART1_ErrorHandler+2
 17827                           
 17828                           ; BSR set to: 0
 17829  014E7E  0012               	return		;funcret
 17830  014E80                     __end_of_UART1_SetErrorHandler:
 17831                           	callstack 0
 17832                           
 17833 ;; *************** function _TMR6_Initialize *****************
 17834 ;; Defined at:
 17835 ;;		line 65 in file "mcc_generated_files/tmr6.c"
 17836 ;; Parameters:    Size  Location     Type
 17837 ;;		None
 17838 ;; Auto vars:     Size  Location     Type
 17839 ;;		None
 17840 ;; Return value:  Size  Location     Type
 17841 ;;                  1    wreg      void 
 17842 ;; Registers used:
 17843 ;;		wreg, status,2, status,0, cstack
 17844 ;; Tracked objects:
 17845 ;;		On entry : 3F/3F
 17846 ;;		On exit  : 3F/0
 17847 ;;		Unchanged: 0/0
 17848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17853 ;;Total ram usage:        0 bytes
 17854 ;; Hardware stack levels used: 1
 17855 ;; Hardware stack levels required when called: 8
 17856 ;; This function calls:
 17857 ;;		_TMR6_SetInterruptHandler
 17858 ;; This function is called by:
 17859 ;;		_SYSTEM_Initialize
 17860 ;; This function uses a non-reentrant model
 17861 ;;
 17862                           
 17863                           	psect	text89
 17864  0149BE                     __ptext89:
 17865                           	callstack 0
 17866  0149BE                     _TMR6_Initialize:
 17867                           	callstack 21
 17868                           
 17869                           ; BSR set to: 63
 17870                           ;mcc_generated_files/tmr6.c: 70:     T6CLKCON = 0x01;
 17871                           
 17872                           ; BSR set to: 0
 17873                           ;incstack = 0
 17874  0149BE  0E01               	movlw	1
 17875  0149C0  6E96               	movwf	150,c	;volatile
 17876                           
 17877                           ;mcc_generated_files/tmr6.c: 73:     T6HLT = 0x20;
 17878  0149C2  0E20               	movlw	32
 17879  0149C4  6E95               	movwf	149,c	;volatile
 17880                           
 17881                           ;mcc_generated_files/tmr6.c: 76:     T6RST = 0x00;
 17882  0149C6  0E00               	movlw	0
 17883  0149C8  6E97               	movwf	151,c	;volatile
 17884                           
 17885                           ;mcc_generated_files/tmr6.c: 79:     T6PR = 0x4D;
 17886  0149CA  0E4D               	movlw	77
 17887  0149CC  6E93               	movwf	147,c	;volatile
 17888                           
 17889                           ;mcc_generated_files/tmr6.c: 82:     T6TMR = 0x00;
 17890  0149CE  0E00               	movlw	0
 17891  0149D0  6E92               	movwf	146,c	;volatile
 17892                           
 17893                           ; BSR set to: 63
 17894                           ;mcc_generated_files/tmr6.c: 85:     PIR9bits.TMR6IF = 0;
 17895  0149D2  0139               	movlb	57	; () banked
 17896  0149D4  91A9               	bcf	169,0,b	;volatile
 17897                           
 17898                           ; BSR set to: 57
 17899                           ;mcc_generated_files/tmr6.c: 88:     PIE9bits.TMR6IE = 1;
 17900  0149D6  8199               	bsf	153,0,b	;volatile
 17901                           
 17902                           ; BSR set to: 57
 17903                           ;mcc_generated_files/tmr6.c: 91:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 17904  0149D8  0E28               	movlw	low _TMR6_DefaultInterruptHandler
 17905  0149DA  0100               	movlb	0	; () banked
 17906  0149DC  6F60               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
 17907  0149DE  0E4F               	movlw	high _TMR6_DefaultInterruptHandler
 17908  0149E0  6F61               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 17909  0149E2  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 17910  0149E4  6F62               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 17911  0149E6  EC40  F0A7         	call	_TMR6_SetInterruptHandler	;wreg free
 17912                           
 17913                           ; BSR set to: 0
 17914                           ;mcc_generated_files/tmr6.c: 94:     T6CON = 0xFF;
 17915  0149EA  6894               	setf	148,c	;volatile
 17916                           
 17917                           ; BSR set to: 0
 17918  0149EC  0012               	return		;funcret
 17919  0149EE                     __end_of_TMR6_Initialize:
 17920                           	callstack 0
 17921                           
 17922 ;; *************** function _TMR6_SetInterruptHandler *****************
 17923 ;; Defined at:
 17924 ;;		line 194 in file "mcc_generated_files/tmr6.c"
 17925 ;; Parameters:    Size  Location     Type
 17926 ;;  InterruptHan    3    0[BANK0 ] PTR FTN()void 
 17927 ;;		 -> Led_Blink(1), TMR6_DefaultInterruptHandler(1), 
 17928 ;; Auto vars:     Size  Location     Type
 17929 ;;		None
 17930 ;; Return value:  Size  Location     Type
 17931 ;;                  1    wreg      void 
 17932 ;; Registers used:
 17933 ;;		wreg, status,2, status,0
 17934 ;; Tracked objects:
 17935 ;;		On entry : 3F/0
 17936 ;;		On exit  : 3F/0
 17937 ;;		Unchanged: 3F/0
 17938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17939 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17942 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17943 ;;Total ram usage:        3 bytes
 17944 ;; Hardware stack levels used: 1
 17945 ;; Hardware stack levels required when called: 7
 17946 ;; This function calls:
 17947 ;;		Nothing
 17948 ;; This function is called by:
 17949 ;;		_TMR6_Initialize
 17950 ;;		_main
 17951 ;; This function uses a non-reentrant model
 17952 ;;
 17953                           
 17954                           	psect	text90
 17955  014E80                     __ptext90:
 17956                           	callstack 0
 17957  014E80                     _TMR6_SetInterruptHandler:
 17958                           	callstack 23
 17959                           
 17960                           ; BSR set to: 0
 17961                           ;mcc_generated_files/tmr6.c: 195:     TMR6_InterruptHandler = InterruptHandler;
 17962                           
 17963                           ; BSR set to: 0
 17964                           ;incstack = 0
 17965  014E80  C060  F13B         	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
 17966  014E84  C061  F13C         	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
 17967  014E88  C062  F13D         	movff	TMR6_SetInterruptHandler@InterruptHandler+2,_TMR6_InterruptHandler+2
 17968                           
 17969                           ; BSR set to: 0
 17970  014E8C  0012               	return		;funcret
 17971  014E8E                     __end_of_TMR6_SetInterruptHandler:
 17972                           	callstack 0
 17973                           
 17974 ;; *************** function _TMR5_Initialize *****************
 17975 ;; Defined at:
 17976 ;;		line 65 in file "mcc_generated_files/tmr5.c"
 17977 ;; Parameters:    Size  Location     Type
 17978 ;;		None
 17979 ;; Auto vars:     Size  Location     Type
 17980 ;;		None
 17981 ;; Return value:  Size  Location     Type
 17982 ;;                  1    wreg      void 
 17983 ;; Registers used:
 17984 ;;		wreg, status,2, status,0, cstack
 17985 ;; Tracked objects:
 17986 ;;		On entry : 3F/3E
 17987 ;;		On exit  : 3F/0
 17988 ;;		Unchanged: 0/0
 17989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17992 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17993 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17994 ;;Total ram usage:        2 bytes
 17995 ;; Hardware stack levels used: 1
 17996 ;; Hardware stack levels required when called: 8
 17997 ;; This function calls:
 17998 ;;		_TMR5_SetInterruptHandler
 17999 ;; This function is called by:
 18000 ;;		_SYSTEM_Initialize
 18001 ;; This function uses a non-reentrant model
 18002 ;;
 18003                           
 18004                           	psect	text91
 18005  0142DE                     __ptext91:
 18006                           	callstack 0
 18007  0142DE                     _TMR5_Initialize:
 18008                           	callstack 21
 18009                           
 18010                           ; BSR set to: 62
 18011                           ;mcc_generated_files/tmr5.c: 70:     T5GCON = 0x00;
 18012                           
 18013                           ; BSR set to: 0
 18014                           ;incstack = 0
 18015  0142DE  0E00               	movlw	0
 18016  0142E0  6E9B               	movwf	155,c	;volatile
 18017                           
 18018                           ;mcc_generated_files/tmr5.c: 73:     T5GATE = 0x00;
 18019  0142E2  0E00               	movlw	0
 18020  0142E4  6E9C               	movwf	156,c	;volatile
 18021                           
 18022                           ;mcc_generated_files/tmr5.c: 76:     T5CLK = 0x02;
 18023  0142E6  0E02               	movlw	2
 18024  0142E8  6E9D               	movwf	157,c	;volatile
 18025                           
 18026                           ;mcc_generated_files/tmr5.c: 79:     TMR5H = 0x83;
 18027  0142EA  0E83               	movlw	131
 18028  0142EC  6E99               	movwf	153,c	;volatile
 18029                           
 18030                           ;mcc_generated_files/tmr5.c: 82:     TMR5L = 0x00;
 18031  0142EE  0E00               	movlw	0
 18032  0142F0  6E98               	movwf	152,c	;volatile
 18033                           
 18034                           ; BSR set to: 62
 18035                           ;mcc_generated_files/tmr5.c: 85:     PIR8bits.TMR5IF = 0;
 18036  0142F2  0139               	movlb	57	; () banked
 18037  0142F4  9DA8               	bcf	168,6,b	;volatile
 18038                           
 18039                           ; BSR set to: 57
 18040                           ;mcc_generated_files/tmr5.c: 88:     timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 18041  0142F6  5098               	movf	152,w,c	;volatile
 18042  0142F8  006F FE64  F063    	movff	16281,??_TMR5_Initialize	;volatile
 18043  0142FE  0100               	movlb	0	; () banked
 18044  014300  6B64               	clrf	(??_TMR5_Initialize+1)& (0+255),b
 18045  014302  C063  F064         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 18046  014306  6B63               	clrf	??_TMR5_Initialize& (0+255),b
 18047  014308  1163               	iorwf	??_TMR5_Initialize& (0+255),w,b
 18048  01430A  6E2F               	movwf	_timer5ReloadVal^0,c	;volatile
 18049  01430C  5164               	movf	(??_TMR5_Initialize+1)& (0+255),w,b
 18050  01430E  6E30               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 18051                           
 18052                           ; BSR set to: 0
 18053                           ;mcc_generated_files/tmr5.c: 91:     PIE8bits.TMR5IE = 1;
 18054  014310  0139               	movlb	57	; () banked
 18055  014312  8D98               	bsf	152,6,b	;volatile
 18056                           
 18057                           ; BSR set to: 57
 18058                           ;mcc_generated_files/tmr5.c: 94:     TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandl
      +                          er);
 18059  014314  0E2E               	movlw	low _TMR5_DefaultInterruptHandler
 18060  014316  0100               	movlb	0	; () banked
 18061  014318  6F60               	movwf	TMR5_SetInterruptHandler@InterruptHandler& (0+255),b
 18062  01431A  0E4F               	movlw	high _TMR5_DefaultInterruptHandler
 18063  01431C  6F61               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 18064  01431E  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 18065  014320  6F62               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 18066  014322  EC47  F0A7         	call	_TMR5_SetInterruptHandler	;wreg free
 18067                           
 18068                           ; BSR set to: 0
 18069                           ;mcc_generated_files/tmr5.c: 97:     T5CON = 0x01;
 18070  014326  0E01               	movlw	1
 18071  014328  6E9A               	movwf	154,c	;volatile
 18072                           
 18073                           ; BSR set to: 0
 18074  01432A  0012               	return		;funcret
 18075  01432C                     __end_of_TMR5_Initialize:
 18076                           	callstack 0
 18077                           
 18078 ;; *************** function _TMR5_SetInterruptHandler *****************
 18079 ;; Defined at:
 18080 ;;		line 179 in file "mcc_generated_files/tmr5.c"
 18081 ;; Parameters:    Size  Location     Type
 18082 ;;  InterruptHan    3    0[BANK0 ] PTR FTN()void 
 18083 ;;		 -> Timers_Isr(1), TMR5_DefaultInterruptHandler(1), 
 18084 ;; Auto vars:     Size  Location     Type
 18085 ;;		None
 18086 ;; Return value:  Size  Location     Type
 18087 ;;                  1    wreg      void 
 18088 ;; Registers used:
 18089 ;;		wreg, status,2, status,0
 18090 ;; Tracked objects:
 18091 ;;		On entry : 3F/0
 18092 ;;		On exit  : 3F/0
 18093 ;;		Unchanged: 3F/0
 18094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18095 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18098 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18099 ;;Total ram usage:        3 bytes
 18100 ;; Hardware stack levels used: 1
 18101 ;; Hardware stack levels required when called: 7
 18102 ;; This function calls:
 18103 ;;		Nothing
 18104 ;; This function is called by:
 18105 ;;		_TMR5_Initialize
 18106 ;;		_main
 18107 ;; This function uses a non-reentrant model
 18108 ;;
 18109                           
 18110                           	psect	text92
 18111  014E8E                     __ptext92:
 18112                           	callstack 0
 18113  014E8E                     _TMR5_SetInterruptHandler:
 18114                           	callstack 23
 18115                           
 18116                           ; BSR set to: 0
 18117                           ;mcc_generated_files/tmr5.c: 180:     TMR5_InterruptHandler = InterruptHandler;
 18118                           
 18119                           ; BSR set to: 0
 18120                           ;incstack = 0
 18121  014E8E  C060  F138         	movff	TMR5_SetInterruptHandler@InterruptHandler,_TMR5_InterruptHandler
 18122  014E92  C061  F139         	movff	TMR5_SetInterruptHandler@InterruptHandler+1,_TMR5_InterruptHandler+1
 18123  014E96  C062  F13A         	movff	TMR5_SetInterruptHandler@InterruptHandler+2,_TMR5_InterruptHandler+2
 18124                           
 18125                           ; BSR set to: 0
 18126  014E9A  0012               	return		;funcret
 18127  014E9C                     __end_of_TMR5_SetInterruptHandler:
 18128                           	callstack 0
 18129                           
 18130 ;; *************** function _TMR2_Initialize *****************
 18131 ;; Defined at:
 18132 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 18133 ;; Parameters:    Size  Location     Type
 18134 ;;		None
 18135 ;; Auto vars:     Size  Location     Type
 18136 ;;		None
 18137 ;; Return value:  Size  Location     Type
 18138 ;;                  1    wreg      void 
 18139 ;; Registers used:
 18140 ;;		wreg, status,2
 18141 ;; Tracked objects:
 18142 ;;		On entry : 3F/3B
 18143 ;;		On exit  : 3F/39
 18144 ;;		Unchanged: 0/0
 18145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18150 ;;Total ram usage:        0 bytes
 18151 ;; Hardware stack levels used: 1
 18152 ;; Hardware stack levels required when called: 7
 18153 ;; This function calls:
 18154 ;;		Nothing
 18155 ;; This function is called by:
 18156 ;;		_SYSTEM_Initialize
 18157 ;; This function uses a non-reentrant model
 18158 ;;
 18159                           
 18160                           	psect	text93
 18161  014C7C                     __ptext93:
 18162                           	callstack 0
 18163  014C7C                     _TMR2_Initialize:
 18164                           	callstack 22
 18165                           
 18166                           ; BSR set to: 59
 18167                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 18168                           
 18169                           ; BSR set to: 0
 18170                           ;incstack = 0
 18171  014C7C  0E01               	movlw	1
 18172  014C7E  6EAE               	movwf	174,c	;volatile
 18173                           
 18174                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 18175  014C80  0E00               	movlw	0
 18176  014C82  6EAD               	movwf	173,c	;volatile
 18177                           
 18178                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 18179  014C84  0E00               	movlw	0
 18180  014C86  6EAF               	movwf	175,c	;volatile
 18181                           
 18182                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x9F;
 18183  014C88  0E9F               	movlw	159
 18184  014C8A  6EAB               	movwf	171,c	;volatile
 18185                           
 18186                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 18187  014C8C  0E00               	movlw	0
 18188  014C8E  6EAA               	movwf	170,c	;volatile
 18189                           
 18190                           ; BSR set to: 59
 18191                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 18192  014C90  0139               	movlb	57	; () banked
 18193  014C92  95A4               	bcf	164,2,b	;volatile
 18194                           
 18195                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0x80;
 18196  014C94  0E80               	movlw	128
 18197  014C96  6EAC               	movwf	172,c	;volatile
 18198                           
 18199                           ; BSR set to: 57
 18200  014C98  0012               	return		;funcret
 18201  014C9A                     __end_of_TMR2_Initialize:
 18202                           	callstack 0
 18203                           
 18204 ;; *************** function _SystemArbiter_Initialize *****************
 18205 ;; Defined at:
 18206 ;;		line 108 in file "mcc_generated_files/mcc.c"
 18207 ;; Parameters:    Size  Location     Type
 18208 ;;		None
 18209 ;; Auto vars:     Size  Location     Type
 18210 ;;		None
 18211 ;; Return value:  Size  Location     Type
 18212 ;;                  1    wreg      void 
 18213 ;; Registers used:
 18214 ;;		wreg, status,2
 18215 ;; Tracked objects:
 18216 ;;		On entry : 3F/3D
 18217 ;;		On exit  : 3F/39
 18218 ;;		Unchanged: 0/0
 18219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18224 ;;Total ram usage:        0 bytes
 18225 ;; Hardware stack levels used: 1
 18226 ;; Hardware stack levels required when called: 7
 18227 ;; This function calls:
 18228 ;;		Nothing
 18229 ;; This function is called by:
 18230 ;;		_SYSTEM_Initialize
 18231 ;; This function uses a non-reentrant model
 18232 ;;
 18233                           
 18234                           	psect	text94
 18235  014E9C                     __ptext94:
 18236                           	callstack 0
 18237  014E9C                     _SystemArbiter_Initialize:
 18238                           	callstack 22
 18239                           
 18240                           ; BSR set to: 61
 18241                           ;mcc_generated_files/mcc.c: 111:     PRLOCK = 0x55;
 18242                           
 18243                           ; BSR set to: 57
 18244                           ;incstack = 0
 18245  014E9C  0E55               	movlw	85
 18246  014E9E  0139               	movlb	57	; () banked
 18247  014EA0  6FEF               	movwf	239,b	;volatile
 18248                           
 18249                           ;mcc_generated_files/mcc.c: 112:     PRLOCK = 0xAA;
 18250  014EA2  0EAA               	movlw	170
 18251  014EA4  6FEF               	movwf	239,b	;volatile
 18252                           
 18253                           ; BSR set to: 57
 18254                           ;mcc_generated_files/mcc.c: 113:     PRLOCKbits.PRLOCKED = 1;
 18255  014EA6  81EF               	bsf	239,0,b	;volatile
 18256                           
 18257                           ; BSR set to: 57
 18258  014EA8  0012               	return		;funcret
 18259  014EAA                     __end_of_SystemArbiter_Initialize:
 18260                           	callstack 0
 18261                           
 18262 ;; *************** function _SPI1_Initialize *****************
 18263 ;; Defined at:
 18264 ;;		line 64 in file "mcc_generated_files/spi1.c"
 18265 ;; Parameters:    Size  Location     Type
 18266 ;;		None
 18267 ;; Auto vars:     Size  Location     Type
 18268 ;;		None
 18269 ;; Return value:  Size  Location     Type
 18270 ;;                  1    wreg      void 
 18271 ;; Registers used:
 18272 ;;		wreg, status,2
 18273 ;; Tracked objects:
 18274 ;;		On entry : 3F/39
 18275 ;;		On exit  : 3F/3D
 18276 ;;		Unchanged: 0/0
 18277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18282 ;;Total ram usage:        0 bytes
 18283 ;; Hardware stack levels used: 1
 18284 ;; Hardware stack levels required when called: 7
 18285 ;; This function calls:
 18286 ;;		Nothing
 18287 ;; This function is called by:
 18288 ;;		_SYSTEM_Initialize
 18289 ;; This function uses a non-reentrant model
 18290 ;;
 18291                           
 18292                           	psect	text95
 18293  014D08                     __ptext95:
 18294                           	callstack 0
 18295  014D08                     _SPI1_Initialize:
 18296                           	callstack 22
 18297                           
 18298                           ; BSR set to: 57
 18299                           ;mcc_generated_files/spi1.c: 67:     SPI1CON0 = 0x02;
 18300                           
 18301                           ; BSR set to: 57
 18302                           ;incstack = 0
 18303  014D08  0E02               	movlw	2
 18304  014D0A  013D               	movlb	61	; () banked
 18305  014D0C  6F14               	movwf	20,b	;volatile
 18306                           
 18307                           ;mcc_generated_files/spi1.c: 69:     SPI1CON1 = 0x40;
 18308  014D0E  0E40               	movlw	64
 18309  014D10  6F15               	movwf	21,b	;volatile
 18310                           
 18311                           ;mcc_generated_files/spi1.c: 71:     SPI1CON2 = 0x00;
 18312  014D12  0E00               	movlw	0
 18313  014D14  6F16               	movwf	22,b	;volatile
 18314                           
 18315                           ;mcc_generated_files/spi1.c: 73:     SPI1CLK = 0x00;
 18316  014D16  0E00               	movlw	0
 18317  014D18  6F1C               	movwf	28,b	;volatile
 18318                           
 18319                           ;mcc_generated_files/spi1.c: 75:     SPI1BAUD = 0x50;
 18320  014D1A  0E50               	movlw	80
 18321  014D1C  6F19               	movwf	25,b	;volatile
 18322                           
 18323                           ; BSR set to: 61
 18324                           ;mcc_generated_files/spi1.c: 76:     TRISCbits.TRISC3 = 0;
 18325  014D1E  96C4               	bcf	196,3,c	;volatile
 18326                           
 18327                           ; BSR set to: 61
 18328  014D20  0012               	return		;funcret
 18329  014D22                     __end_of_SPI1_Initialize:
 18330                           	callstack 0
 18331                           
 18332 ;; *************** function _PWM6_Initialize *****************
 18333 ;; Defined at:
 18334 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 18335 ;; Parameters:    Size  Location     Type
 18336 ;;		None
 18337 ;; Auto vars:     Size  Location     Type
 18338 ;;		None
 18339 ;; Return value:  Size  Location     Type
 18340 ;;                  1    wreg      void 
 18341 ;; Registers used:
 18342 ;;		wreg, status,2
 18343 ;; Tracked objects:
 18344 ;;		On entry : 3F/39
 18345 ;;		On exit  : 3F/3F
 18346 ;;		Unchanged: 0/0
 18347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18352 ;;Total ram usage:        0 bytes
 18353 ;; Hardware stack levels used: 1
 18354 ;; Hardware stack levels required when called: 7
 18355 ;; This function calls:
 18356 ;;		Nothing
 18357 ;; This function is called by:
 18358 ;;		_SYSTEM_Initialize
 18359 ;; This function uses a non-reentrant model
 18360 ;;
 18361                           
 18362                           	psect	text96
 18363  014D3A                     __ptext96:
 18364                           	callstack 0
 18365  014D3A                     _PWM6_Initialize:
 18366                           	callstack 22
 18367                           
 18368                           ; BSR set to: 57
 18369                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
 18370                           
 18371                           ; BSR set to: 61
 18372                           ;incstack = 0
 18373  014D3A  0E80               	movlw	128
 18374  014D3C  6E6A               	movwf	106,c	;volatile
 18375                           
 18376                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x4F;
 18377  014D3E  0E4F               	movlw	79
 18378  014D40  6E69               	movwf	105,c	;volatile
 18379                           
 18380                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0xC0;
 18381  014D42  0EC0               	movlw	192
 18382  014D44  6E68               	movwf	104,c	;volatile
 18383                           
 18384                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
 18385  014D46  013F               	movlb	63	; () banked
 18386  014D48  515F               	movf	95,w,b	;volatile
 18387  014D4A  0BF3               	andlw	-13
 18388  014D4C  0904               	iorlw	4
 18389  014D4E  6F5F               	movwf	95,b	;volatile
 18390                           
 18391                           ; BSR set to: 63
 18392  014D50  0012               	return		;funcret
 18393  014D52                     __end_of_PWM6_Initialize:
 18394                           	callstack 0
 18395                           
 18396 ;; *************** function _PWM5_Initialize *****************
 18397 ;; Defined at:
 18398 ;;		line 58 in file "mcc_generated_files/pwm5.c"
 18399 ;; Parameters:    Size  Location     Type
 18400 ;;		None
 18401 ;; Auto vars:     Size  Location     Type
 18402 ;;		None
 18403 ;; Return value:  Size  Location     Type
 18404 ;;                  1    wreg      void 
 18405 ;; Registers used:
 18406 ;;		wreg, status,2
 18407 ;; Tracked objects:
 18408 ;;		On entry : 3F/0
 18409 ;;		On exit  : 3F/3F
 18410 ;;		Unchanged: 0/0
 18411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18416 ;;Total ram usage:        0 bytes
 18417 ;; Hardware stack levels used: 1
 18418 ;; Hardware stack levels required when called: 7
 18419 ;; This function calls:
 18420 ;;		Nothing
 18421 ;; This function is called by:
 18422 ;;		_SYSTEM_Initialize
 18423 ;; This function uses a non-reentrant model
 18424 ;;
 18425                           
 18426                           	psect	text97
 18427  014D52                     __ptext97:
 18428                           	callstack 0
 18429  014D52                     _PWM5_Initialize:
 18430                           	callstack 22
 18431                           
 18432                           ; BSR set to: 0
 18433                           ;mcc_generated_files/pwm5.c: 62:     PWM5CON = 0x80;
 18434                           
 18435                           ; BSR set to: 63
 18436                           ;incstack = 0
 18437  014D52  0E80               	movlw	128
 18438  014D54  6E6E               	movwf	110,c	;volatile
 18439                           
 18440                           ;mcc_generated_files/pwm5.c: 65:     PWM5DCH = 0x4F;
 18441  014D56  0E4F               	movlw	79
 18442  014D58  6E6D               	movwf	109,c	;volatile
 18443                           
 18444                           ;mcc_generated_files/pwm5.c: 68:     PWM5DCL = 0xC0;
 18445  014D5A  0EC0               	movlw	192
 18446  014D5C  6E6C               	movwf	108,c	;volatile
 18447                           
 18448                           ;mcc_generated_files/pwm5.c: 71:     CCPTMRS1bits.P5TSEL = 1;
 18449  014D5E  013F               	movlb	63	; () banked
 18450  014D60  515F               	movf	95,w,b	;volatile
 18451  014D62  0BFC               	andlw	-4
 18452  014D64  0901               	iorlw	1
 18453  014D66  6F5F               	movwf	95,b	;volatile
 18454                           
 18455                           ; BSR set to: 63
 18456  014D68  0012               	return		;funcret
 18457  014D6A                     __end_of_PWM5_Initialize:
 18458                           	callstack 0
 18459                           
 18460 ;; *************** function _PMD_Initialize *****************
 18461 ;; Defined at:
 18462 ;;		line 87 in file "mcc_generated_files/mcc.c"
 18463 ;; Parameters:    Size  Location     Type
 18464 ;;		None
 18465 ;; Auto vars:     Size  Location     Type
 18466 ;;		None
 18467 ;; Return value:  Size  Location     Type
 18468 ;;                  1    wreg      void 
 18469 ;; Registers used:
 18470 ;;		wreg, status,2
 18471 ;; Tracked objects:
 18472 ;;		On entry : 3F/39
 18473 ;;		On exit  : 3F/39
 18474 ;;		Unchanged: 0/0
 18475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18480 ;;Total ram usage:        0 bytes
 18481 ;; Hardware stack levels used: 1
 18482 ;; Hardware stack levels required when called: 7
 18483 ;; This function calls:
 18484 ;;		Nothing
 18485 ;; This function is called by:
 18486 ;;		_SYSTEM_Initialize
 18487 ;; This function uses a non-reentrant model
 18488 ;;
 18489                           
 18490                           	psect	text98
 18491  014BBC                     __ptext98:
 18492                           	callstack 0
 18493  014BBC                     _PMD_Initialize:
 18494                           	callstack 22
 18495                           
 18496                           ; BSR set to: 57
 18497                           ;mcc_generated_files/mcc.c: 90:     PMD0 = 0x00;
 18498                           
 18499                           ; BSR set to: 63
 18500                           ;incstack = 0
 18501  014BBC  0E00               	movlw	0
 18502  014BBE  6FC0               	movwf	192,b	;volatile
 18503                           
 18504                           ;mcc_generated_files/mcc.c: 92:     PMD1 = 0x00;
 18505  014BC0  0E00               	movlw	0
 18506  014BC2  6FC1               	movwf	193,b	;volatile
 18507                           
 18508                           ;mcc_generated_files/mcc.c: 94:     PMD2 = 0x00;
 18509  014BC4  0E00               	movlw	0
 18510  014BC6  6FC2               	movwf	194,b	;volatile
 18511                           
 18512                           ;mcc_generated_files/mcc.c: 96:     PMD3 = 0x00;
 18513  014BC8  0E00               	movlw	0
 18514  014BCA  6FC3               	movwf	195,b	;volatile
 18515                           
 18516                           ;mcc_generated_files/mcc.c: 98:     PMD4 = 0x00;
 18517  014BCC  0E00               	movlw	0
 18518  014BCE  6FC4               	movwf	196,b	;volatile
 18519                           
 18520                           ;mcc_generated_files/mcc.c: 100:     PMD5 = 0x00;
 18521  014BD0  0E00               	movlw	0
 18522  014BD2  6FC5               	movwf	197,b	;volatile
 18523                           
 18524                           ;mcc_generated_files/mcc.c: 102:     PMD6 = 0x00;
 18525  014BD4  0E00               	movlw	0
 18526  014BD6  6FC6               	movwf	198,b	;volatile
 18527                           
 18528                           ;mcc_generated_files/mcc.c: 104:     PMD7 = 0x00;
 18529  014BD8  0E00               	movlw	0
 18530  014BDA  6FC7               	movwf	199,b	;volatile
 18531                           
 18532                           ; BSR set to: 57
 18533  014BDC  0012               	return		;funcret
 18534  014BDE                     __end_of_PMD_Initialize:
 18535                           	callstack 0
 18536                           
 18537 ;; *************** function _PIN_MANAGER_Initialize *****************
 18538 ;; Defined at:
 18539 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 18540 ;; Parameters:    Size  Location     Type
 18541 ;;		None
 18542 ;; Auto vars:     Size  Location     Type
 18543 ;;		None
 18544 ;; Return value:  Size  Location     Type
 18545 ;;                  1    wreg      void 
 18546 ;; Registers used:
 18547 ;;		wreg, status,2
 18548 ;; Tracked objects:
 18549 ;;		On entry : 3F/39
 18550 ;;		On exit  : 3F/3A
 18551 ;;		Unchanged: 0/0
 18552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18557 ;;Total ram usage:        0 bytes
 18558 ;; Hardware stack levels used: 1
 18559 ;; Hardware stack levels required when called: 7
 18560 ;; This function calls:
 18561 ;;		Nothing
 18562 ;; This function is called by:
 18563 ;;		_SYSTEM_Initialize
 18564 ;; This function uses a non-reentrant model
 18565 ;;
 18566                           
 18567                           	psect	text99
 18568  013590                     __ptext99:
 18569                           	callstack 0
 18570  013590                     _PIN_MANAGER_Initialize:
 18571                           	callstack 22
 18572                           
 18573                           ; BSR set to: 57
 18574                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 18575                           
 18576                           ; BSR set to: 57
 18577                           ;incstack = 0
 18578  013590  0E00               	movlw	0
 18579  013592  6EBE               	movwf	190,c	;volatile
 18580                           
 18581                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x11;
 18582  013594  0E11               	movlw	17
 18583  013596  6EBD               	movwf	189,c	;volatile
 18584                           
 18585                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x20;
 18586  013598  0E20               	movlw	32
 18587  01359A  6EBA               	movwf	186,c	;volatile
 18588                           
 18589                           ;mcc_generated_files/pin_manager.c: 63:     LATF = 0x00;
 18590  01359C  0E00               	movlw	0
 18591  01359E  6EBF               	movwf	191,c	;volatile
 18592                           
 18593                           ;mcc_generated_files/pin_manager.c: 64:     LATB = 0x00;
 18594  0135A0  0E00               	movlw	0
 18595  0135A2  6EBB               	movwf	187,c	;volatile
 18596                           
 18597                           ;mcc_generated_files/pin_manager.c: 65:     LATC = 0x07;
 18598  0135A4  0E07               	movlw	7
 18599  0135A6  6EBC               	movwf	188,c	;volatile
 18600                           
 18601                           ;mcc_generated_files/pin_manager.c: 70:     TRISE = 0x02;
 18602  0135A8  0E02               	movlw	2
 18603  0135AA  6EC6               	movwf	198,c	;volatile
 18604                           
 18605                           ;mcc_generated_files/pin_manager.c: 71:     TRISF = 0x0B;
 18606  0135AC  0E0B               	movlw	11
 18607  0135AE  6EC7               	movwf	199,c	;volatile
 18608                           
 18609                           ;mcc_generated_files/pin_manager.c: 72:     TRISA = 0xDF;
 18610  0135B0  0EDF               	movlw	223
 18611  0135B2  6EC2               	movwf	194,c	;volatile
 18612                           
 18613                           ; BSR set to: 57
 18614                           ;mcc_generated_files/pin_manager.c: 73:     TRISB = 0xFF;
 18615  0135B4  68C3               	setf	195,c	;volatile
 18616                           
 18617                           ;mcc_generated_files/pin_manager.c: 74:     TRISC = 0x90;
 18618  0135B6  0E90               	movlw	144
 18619  0135B8  6EC4               	movwf	196,c	;volatile
 18620                           
 18621                           ;mcc_generated_files/pin_manager.c: 75:     TRISD = 0x08;
 18622  0135BA  0E08               	movlw	8
 18623  0135BC  6EC5               	movwf	197,c	;volatile
 18624                           
 18625                           ;mcc_generated_files/pin_manager.c: 80:     ANSELD = 0x08;
 18626  0135BE  0E08               	movlw	8
 18627  0135C0  013A               	movlb	58	; () banked
 18628  0135C2  6F70               	movwf	112,b	;volatile
 18629                           
 18630                           ;mcc_generated_files/pin_manager.c: 81:     ANSELC = 0x00;
 18631  0135C4  0E00               	movlw	0
 18632  0135C6  6F60               	movwf	96,b	;volatile
 18633                           
 18634                           ;mcc_generated_files/pin_manager.c: 82:     ANSELB = 0xFE;
 18635  0135C8  0EFE               	movlw	254
 18636  0135CA  6F50               	movwf	80,b	;volatile
 18637                           
 18638                           ;mcc_generated_files/pin_manager.c: 83:     ANSELE = 0x02;
 18639  0135CC  0E02               	movlw	2
 18640  0135CE  6F80               	movwf	128,b	;volatile
 18641                           
 18642                           ;mcc_generated_files/pin_manager.c: 84:     ANSELF = 0x0B;
 18643  0135D0  0E0B               	movlw	11
 18644  0135D2  6F90               	movwf	144,b	;volatile
 18645                           
 18646                           ;mcc_generated_files/pin_manager.c: 85:     ANSELA = 0x8F;
 18647  0135D4  0E8F               	movlw	143
 18648  0135D6  6F40               	movwf	64,b	;volatile
 18649                           
 18650                           ;mcc_generated_files/pin_manager.c: 90:     WPUD = 0x00;
 18651  0135D8  0E00               	movlw	0
 18652  0135DA  6F71               	movwf	113,b	;volatile
 18653                           
 18654                           ;mcc_generated_files/pin_manager.c: 91:     WPUF = 0x00;
 18655  0135DC  0E00               	movlw	0
 18656  0135DE  6F91               	movwf	145,b	;volatile
 18657                           
 18658                           ;mcc_generated_files/pin_manager.c: 92:     WPUE = 0x00;
 18659  0135E0  0E00               	movlw	0
 18660  0135E2  6F81               	movwf	129,b	;volatile
 18661                           
 18662                           ;mcc_generated_files/pin_manager.c: 93:     WPUB = 0x01;
 18663  0135E4  0E01               	movlw	1
 18664  0135E6  6F51               	movwf	81,b	;volatile
 18665                           
 18666                           ;mcc_generated_files/pin_manager.c: 94:     WPUA = 0x50;
 18667  0135E8  0E50               	movlw	80
 18668  0135EA  6F41               	movwf	65,b	;volatile
 18669                           
 18670                           ;mcc_generated_files/pin_manager.c: 95:     WPUC = 0x00;
 18671  0135EC  0E00               	movlw	0
 18672  0135EE  6F61               	movwf	97,b	;volatile
 18673                           
 18674                           ;mcc_generated_files/pin_manager.c: 100:     RB1I2C = 0x00;
 18675  0135F0  0E00               	movlw	0
 18676  0135F2  6F5A               	movwf	90,b	;volatile
 18677                           
 18678                           ;mcc_generated_files/pin_manager.c: 101:     RB2I2C = 0x00;
 18679  0135F4  0E00               	movlw	0
 18680  0135F6  6F5B               	movwf	91,b	;volatile
 18681                           
 18682                           ;mcc_generated_files/pin_manager.c: 102:     RC3I2C = 0x00;
 18683  0135F8  0E00               	movlw	0
 18684  0135FA  6F6A               	movwf	106,b	;volatile
 18685                           
 18686                           ;mcc_generated_files/pin_manager.c: 103:     RC4I2C = 0x00;
 18687  0135FC  0E00               	movlw	0
 18688  0135FE  6F6B               	movwf	107,b	;volatile
 18689                           
 18690                           ;mcc_generated_files/pin_manager.c: 104:     RD0I2C = 0x00;
 18691  013600  0E00               	movlw	0
 18692  013602  6F7A               	movwf	122,b	;volatile
 18693                           
 18694                           ;mcc_generated_files/pin_manager.c: 105:     RD1I2C = 0x00;
 18695  013604  0E00               	movlw	0
 18696  013606  6F7B               	movwf	123,b	;volatile
 18697                           
 18698                           ;mcc_generated_files/pin_manager.c: 110:     ODCONE = 0x00;
 18699  013608  0E00               	movlw	0
 18700  01360A  6F82               	movwf	130,b	;volatile
 18701                           
 18702                           ;mcc_generated_files/pin_manager.c: 111:     ODCONF = 0x00;
 18703  01360C  0E00               	movlw	0
 18704  01360E  6F92               	movwf	146,b	;volatile
 18705                           
 18706                           ;mcc_generated_files/pin_manager.c: 112:     ODCONA = 0x00;
 18707  013610  0E00               	movlw	0
 18708  013612  6F42               	movwf	66,b	;volatile
 18709                           
 18710                           ;mcc_generated_files/pin_manager.c: 113:     ODCONB = 0x00;
 18711  013614  0E00               	movlw	0
 18712  013616  6F52               	movwf	82,b	;volatile
 18713                           
 18714                           ;mcc_generated_files/pin_manager.c: 114:     ODCONC = 0x00;
 18715  013618  0E00               	movlw	0
 18716  01361A  6F62               	movwf	98,b	;volatile
 18717                           
 18718                           ;mcc_generated_files/pin_manager.c: 115:     ODCOND = 0x00;
 18719  01361C  0E00               	movlw	0
 18720  01361E  6F72               	movwf	114,b	;volatile
 18721                           
 18722                           ; BSR set to: 58
 18723                           ;mcc_generated_files/pin_manager.c: 120:     SLRCONA = 0xFF;
 18724  013620  6943               	setf	67,b	;volatile
 18725                           
 18726                           ; BSR set to: 58
 18727                           ;mcc_generated_files/pin_manager.c: 121:     SLRCONB = 0xFF;
 18728  013622  6953               	setf	83,b	;volatile
 18729                           
 18730                           ; BSR set to: 58
 18731                           ;mcc_generated_files/pin_manager.c: 122:     SLRCONC = 0xFF;
 18732  013624  6963               	setf	99,b	;volatile
 18733                           
 18734                           ; BSR set to: 58
 18735                           ;mcc_generated_files/pin_manager.c: 123:     SLRCOND = 0xFF;
 18736  013626  6973               	setf	115,b	;volatile
 18737                           
 18738                           ;mcc_generated_files/pin_manager.c: 124:     SLRCONE = 0x07;
 18739  013628  0E07               	movlw	7
 18740  01362A  6F83               	movwf	131,b	;volatile
 18741                           
 18742                           ; BSR set to: 58
 18743                           ;mcc_generated_files/pin_manager.c: 125:     SLRCONF = 0xFF;
 18744  01362C  6993               	setf	147,b	;volatile
 18745                           
 18746                           ; BSR set to: 58
 18747                           ;mcc_generated_files/pin_manager.c: 130:     INLVLA = 0xFF;
 18748  01362E  6944               	setf	68,b	;volatile
 18749                           
 18750                           ; BSR set to: 58
 18751                           ;mcc_generated_files/pin_manager.c: 131:     INLVLB = 0xFF;
 18752  013630  6954               	setf	84,b	;volatile
 18753                           
 18754                           ; BSR set to: 58
 18755                           ;mcc_generated_files/pin_manager.c: 132:     INLVLC = 0xFF;
 18756  013632  6964               	setf	100,b	;volatile
 18757                           
 18758                           ; BSR set to: 58
 18759                           ;mcc_generated_files/pin_manager.c: 133:     INLVLD = 0xFF;
 18760  013634  6974               	setf	116,b	;volatile
 18761                           
 18762                           ;mcc_generated_files/pin_manager.c: 134:     INLVLE = 0x0F;
 18763  013636  0E0F               	movlw	15
 18764  013638  6F84               	movwf	132,b	;volatile
 18765                           
 18766                           ; BSR set to: 58
 18767                           ;mcc_generated_files/pin_manager.c: 135:     INLVLF = 0xFF;
 18768  01363A  6994               	setf	148,b	;volatile
 18769                           
 18770                           ;mcc_generated_files/pin_manager.c: 144:     RD2PPS = 0x0E;
 18771  01363C  0E0E               	movlw	14
 18772  01363E  6F1A               	movwf	26,b	;volatile
 18773                           
 18774                           ;mcc_generated_files/pin_manager.c: 145:     SPI1SCKPPS = 0x13;
 18775  013640  0E13               	movlw	19
 18776  013642  6FDE               	movwf	222,b	;volatile
 18777                           
 18778                           ;mcc_generated_files/pin_manager.c: 146:     RC3PPS = 0x1E;
 18779  013644  0E1E               	movlw	30
 18780  013646  6F13               	movwf	19,b	;volatile
 18781                           
 18782                           ;mcc_generated_files/pin_manager.c: 147:     RC5PPS = 0x1F;
 18783  013648  0E1F               	movlw	31
 18784  01364A  6F15               	movwf	21,b	;volatile
 18785                           
 18786                           ;mcc_generated_files/pin_manager.c: 148:     RC6PPS = 0x13;
 18787  01364C  0E13               	movlw	19
 18788  01364E  6F16               	movwf	22,b	;volatile
 18789                           
 18790                           ;mcc_generated_files/pin_manager.c: 149:     U1RXPPS = 0x17;
 18791  013650  0E17               	movlw	23
 18792  013652  6FE5               	movwf	229,b	;volatile
 18793                           
 18794                           ;mcc_generated_files/pin_manager.c: 150:     RF2PPS = 0x0D;
 18795  013654  0E0D               	movlw	13
 18796  013656  6F2A               	movwf	42,b	;volatile
 18797                           
 18798                           ;mcc_generated_files/pin_manager.c: 151:     SPI1SDIPPS = 0x14;
 18799  013658  0E14               	movlw	20
 18800  01365A  6FDF               	movwf	223,b	;volatile
 18801                           
 18802                           ; BSR set to: 58
 18803  01365C  0012               	return		;funcret
 18804  01365E                     __end_of_PIN_MANAGER_Initialize:
 18805                           	callstack 0
 18806                           
 18807 ;; *************** function _OSCILLATOR_Initialize *****************
 18808 ;; Defined at:
 18809 ;;		line 69 in file "mcc_generated_files/mcc.c"
 18810 ;; Parameters:    Size  Location     Type
 18811 ;;		None
 18812 ;; Auto vars:     Size  Location     Type
 18813 ;;		None
 18814 ;; Return value:  Size  Location     Type
 18815 ;;                  1    wreg      void 
 18816 ;; Registers used:
 18817 ;;		wreg, status,2
 18818 ;; Tracked objects:
 18819 ;;		On entry : 3F/3A
 18820 ;;		On exit  : 3F/39
 18821 ;;		Unchanged: 0/0
 18822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18827 ;;Total ram usage:        0 bytes
 18828 ;; Hardware stack levels used: 1
 18829 ;; Hardware stack levels required when called: 7
 18830 ;; This function calls:
 18831 ;;		Nothing
 18832 ;; This function is called by:
 18833 ;;		_SYSTEM_Initialize
 18834 ;; This function uses a non-reentrant model
 18835 ;;
 18836                           
 18837                           	psect	text100
 18838  014CB8                     __ptext100:
 18839                           	callstack 0
 18840  014CB8                     _OSCILLATOR_Initialize:
 18841                           	callstack 22
 18842                           
 18843                           ; BSR set to: 58
 18844                           ;mcc_generated_files/mcc.c: 72:     OSCCON1 = 0x20;
 18845                           
 18846                           ; BSR set to: 58
 18847                           ;incstack = 0
 18848  014CB8  0E20               	movlw	32
 18849  014CBA  0139               	movlb	57	; () banked
 18850  014CBC  6FD9               	movwf	217,b	;volatile
 18851                           
 18852                           ;mcc_generated_files/mcc.c: 74:     OSCCON3 = 0x00;
 18853  014CBE  0E00               	movlw	0
 18854  014CC0  6FDB               	movwf	219,b	;volatile
 18855                           
 18856                           ;mcc_generated_files/mcc.c: 76:     OSCEN = 0x00;
 18857  014CC2  0E00               	movlw	0
 18858  014CC4  6FDD               	movwf	221,b	;volatile
 18859                           
 18860                           ;mcc_generated_files/mcc.c: 78:     OSCFRQ = 0x05;
 18861  014CC6  0E05               	movlw	5
 18862  014CC8  6FDF               	movwf	223,b	;volatile
 18863                           
 18864                           ;mcc_generated_files/mcc.c: 80:     OSCTUNE = 0x00;
 18865  014CCA  0E00               	movlw	0
 18866  014CCC  6FDE               	movwf	222,b	;volatile
 18867  014CCE                     l209:
 18868                           
 18869                           ; BSR set to: 57
 18870                           ;mcc_generated_files/mcc.c: 82:     while(PLLR == 0)
 18871  014CCE  B1DC               	btfsc	220,0,b	;volatile
 18872  014CD0  0012               	return	
 18873  014CD2  D7FD               	goto	l209
 18874  014CD4                     __end_of_OSCILLATOR_Initialize:
 18875                           	callstack 0
 18876                           
 18877 ;; *************** function _INTERRUPT_Initialize *****************
 18878 ;; Defined at:
 18879 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 18880 ;; Parameters:    Size  Location     Type
 18881 ;;		None
 18882 ;; Auto vars:     Size  Location     Type
 18883 ;;  state           1   31[COMRAM] _Bool 
 18884 ;; Return value:  Size  Location     Type
 18885 ;;                  1    wreg      void 
 18886 ;; Registers used:
 18887 ;;		wreg, status,2
 18888 ;; Tracked objects:
 18889 ;;		On entry : 3F/1
 18890 ;;		On exit  : 3F/39
 18891 ;;		Unchanged: 0/0
 18892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18894 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18896 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18897 ;;Total ram usage:        1 bytes
 18898 ;; Hardware stack levels used: 1
 18899 ;; Hardware stack levels required when called: 7
 18900 ;; This function calls:
 18901 ;;		Nothing
 18902 ;; This function is called by:
 18903 ;;		_SYSTEM_Initialize
 18904 ;; This function uses a non-reentrant model
 18905 ;;
 18906                           
 18907                           	psect	text101
 18908  01437A                     __ptext101:
 18909                           	callstack 0
 18910  01437A                     _INTERRUPT_Initialize:
 18911                           	callstack 22
 18912                           
 18913                           ; BSR set to: 1
 18914                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 18915                           
 18916                           ; BSR set to: 57
 18917                           ;incstack = 0
 18918  01437A  8AD2               	bsf	210,5,c	;volatile
 18919                           
 18920                           ; BSR set to: 1
 18921                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 18922  01437C  0E00               	movlw	0
 18923  01437E  BED2               	btfsc	16338,7,c	;volatile
 18924  014380  0E01               	movlw	1
 18925  014382  6E20               	movwf	INTERRUPT_Initialize@state^0,c
 18926                           
 18927                           ; BSR set to: 1
 18928                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 18929  014384  9ED2               	bcf	16338,7,c	;volatile
 18930                           
 18931                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 18932  014386  0E55               	movlw	85
 18933  014388  6ED4               	movwf	212,c	;volatile
 18934                           
 18935                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 18936  01438A  0EAA               	movlw	170
 18937  01438C  6ED4               	movwf	212,c	;volatile
 18938                           
 18939                           ; BSR set to: 1
 18940                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 18941  01438E  90D4               	bcf	212,0,c	;volatile
 18942                           
 18943                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTBASEU = 0;
 18944  014390  0E00               	movlw	0
 18945  014392  6ED7               	movwf	215,c	;volatile
 18946                           
 18947                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTBASEH = 0;
 18948  014394  0E00               	movlw	0
 18949  014396  6ED6               	movwf	214,c	;volatile
 18950                           
 18951                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTBASEL = 8;
 18952  014398  0E08               	movlw	8
 18953  01439A  6ED5               	movwf	213,c	;volatile
 18954                           
 18955                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 18956  01439C  0E55               	movlw	85
 18957  01439E  6ED4               	movwf	212,c	;volatile
 18958                           
 18959                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 18960  0143A0  0EAA               	movlw	170
 18961  0143A2  6ED4               	movwf	212,c	;volatile
 18962                           
 18963                           ; BSR set to: 1
 18964                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 18965  0143A4  80D4               	bsf	212,0,c	;volatile
 18966                           
 18967                           ; BSR set to: 1
 18968                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 18969  0143A6  B020               	btfsc	INTERRUPT_Initialize@state^0,0,c
 18970  0143A8  D002               	bra	u12965
 18971  0143AA  9ED2               	bcf	16338,7,c	;volatile
 18972  0143AC  D001               	bra	u12966
 18973  0143AE                     u12965:
 18974  0143AE  8ED2               	bsf	16338,7,c	;volatile
 18975  0143B0                     u12966:
 18976                           
 18977                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1SCNTIP = 1;
 18978  0143B0  0139               	movlb	57	; () banked
 18979  0143B2  8182               	bsf	130,0,b	;volatile
 18980                           
 18981                           ; BSR set to: 57
 18982                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR3bits.U1IP = 1;
 18983  0143B4  8D83               	bsf	131,6,b	;volatile
 18984                           
 18985                           ; BSR set to: 57
 18986                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR3bits.U1TXIP = 0;
 18987  0143B6  9983               	bcf	131,4,b	;volatile
 18988                           
 18989                           ; BSR set to: 57
 18990                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR3bits.U1EIP = 1;
 18991  0143B8  8B83               	bsf	131,5,b	;volatile
 18992                           
 18993                           ; BSR set to: 57
 18994                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR3bits.U1RXIP = 0;
 18995  0143BA  9783               	bcf	131,3,b	;volatile
 18996                           
 18997                           ; BSR set to: 57
 18998                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR9bits.TMR6IP = 1;
 18999  0143BC  8189               	bsf	137,0,b	;volatile
 19000                           
 19001                           ; BSR set to: 57
 19002                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR8bits.TMR5IP = 1;
 19003  0143BE  8D88               	bsf	136,6,b	;volatile
 19004                           
 19005                           ; BSR set to: 57
 19006                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.ADIP = 1;
 19007  0143C0  8581               	bsf	129,2,b	;volatile
 19008                           
 19009                           ; BSR set to: 57
 19010  0143C2  0012               	return		;funcret
 19011  0143C4                     __end_of_INTERRUPT_Initialize:
 19012                           	callstack 0
 19013                           
 19014 ;; *************** function _DMA1_Initialize *****************
 19015 ;; Defined at:
 19016 ;;		line 60 in file "mcc_generated_files/dma1.c"
 19017 ;; Parameters:    Size  Location     Type
 19018 ;;		None
 19019 ;; Auto vars:     Size  Location     Type
 19020 ;;		None
 19021 ;; Return value:  Size  Location     Type
 19022 ;;                  1    wreg      void 
 19023 ;; Registers used:
 19024 ;;		wreg, status,2, status,0, cstack
 19025 ;; Tracked objects:
 19026 ;;		On entry : 3F/0
 19027 ;;		On exit  : 3F/3B
 19028 ;;		Unchanged: 0/0
 19029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19034 ;;Total ram usage:        0 bytes
 19035 ;; Hardware stack levels used: 1
 19036 ;; Hardware stack levels required when called: 8
 19037 ;; This function calls:
 19038 ;;		_DMA1_SetSCNTIInterruptHandler
 19039 ;; This function is called by:
 19040 ;;		_SYSTEM_Initialize
 19041 ;; This function uses a non-reentrant model
 19042 ;;
 19043                           
 19044                           	psect	text102
 19045  013F8C                     __ptext102:
 19046                           	callstack 0
 19047  013F8C                     _DMA1_Initialize:
 19048                           	callstack 21
 19049                           
 19050                           ; BSR set to: 0
 19051                           ;mcc_generated_files/dma1.c: 63:     DMA1SSA = &SrcVarName0;
 19052                           
 19053                           ; BSR set to: 57
 19054                           ;incstack = 0
 19055  013F8C  0E93               	movlw	low _SrcVarName0
 19056  013F8E  013B               	movlb	59	; () banked
 19057  013F90  6FF9               	movwf	249,b	;volatile
 19058  013F92  0E01               	movlw	high _SrcVarName0
 19059  013F94  6FFA               	movwf	250,b	;volatile
 19060  013F96  0E00               	movlw	low (_SrcVarName0 shr (0+16))
 19061  013F98  6FFB               	movwf	251,b	;volatile
 19062                           
 19063                           ;mcc_generated_files/dma1.c: 65:     DMA1DSA = &SPI1TXB;
 19064  013F9A  0E3D               	movlw	61
 19065  013F9C  6FF1               	movwf	241,b	;volatile
 19066  013F9E  0E11               	movlw	17
 19067  013FA0  6FF0               	movwf	240,b	;volatile
 19068                           
 19069                           ;mcc_generated_files/dma1.c: 67:     DMA1CON1 = 0x03;
 19070  013FA2  0E03               	movlw	3
 19071  013FA4  6FFD               	movwf	253,b	;volatile
 19072                           
 19073                           ;mcc_generated_files/dma1.c: 69:     DMA1SSZ = 1;
 19074  013FA6  0E00               	movlw	0
 19075  013FA8  6FF8               	movwf	248,b	;volatile
 19076  013FAA  0E01               	movlw	1
 19077  013FAC  6FF7               	movwf	247,b	;volatile
 19078                           
 19079                           ;mcc_generated_files/dma1.c: 71:     DMA1DSZ = 1;
 19080  013FAE  0E00               	movlw	0
 19081  013FB0  6FEF               	movwf	239,b	;volatile
 19082  013FB2  0E01               	movlw	1
 19083  013FB4  6FEE               	movwf	238,b	;volatile
 19084                           
 19085                           ;mcc_generated_files/dma1.c: 73:     DMA1SIRQ = 0x15;
 19086  013FB6  0E15               	movlw	21
 19087  013FB8  6FFF               	movwf	255,b	;volatile
 19088                           
 19089                           ;mcc_generated_files/dma1.c: 75:     DMA1AIRQ = 0x00;
 19090  013FBA  0E00               	movlw	0
 19091  013FBC  6FFE               	movwf	254,b	;volatile
 19092                           
 19093                           ; BSR set to: 59
 19094                           ;mcc_generated_files/dma1.c: 78:     PIR2bits.DMA1DCNTIF = 0;
 19095  013FBE  0139               	movlb	57	; () banked
 19096  013FC0  93A2               	bcf	162,1,b	;volatile
 19097                           
 19098                           ; BSR set to: 57
 19099                           ;mcc_generated_files/dma1.c: 80:     PIR2bits.DMA1SCNTIF = 0;
 19100  013FC2  91A2               	bcf	162,0,b	;volatile
 19101                           
 19102                           ; BSR set to: 57
 19103                           ;mcc_generated_files/dma1.c: 82:     PIR2bits.DMA1AIF = 0;
 19104  013FC4  97A2               	bcf	162,3,b	;volatile
 19105                           
 19106                           ; BSR set to: 57
 19107                           ;mcc_generated_files/dma1.c: 84:     PIR2bits.DMA1ORIF =0;
 19108  013FC6  95A2               	bcf	162,2,b	;volatile
 19109                           
 19110                           ; BSR set to: 57
 19111                           ;mcc_generated_files/dma1.c: 86:     PIE2bits.DMA1DCNTIE = 0;
 19112  013FC8  9392               	bcf	146,1,b	;volatile
 19113                           
 19114                           ; BSR set to: 57
 19115                           ;mcc_generated_files/dma1.c: 87:     PIE2bits.DMA1SCNTIE = 1;
 19116  013FCA  8192               	bsf	146,0,b	;volatile
 19117                           
 19118                           ; BSR set to: 57
 19119                           ;mcc_generated_files/dma1.c: 88:  DMA1_SetSCNTIInterruptHandler(DMA1_DefaultInterruptHan
      +                          dler);
 19120  013FCC  0E30               	movlw	low _DMA1_DefaultInterruptHandler
 19121  013FCE  0100               	movlb	0	; () banked
 19122  013FD0  6F60               	movwf	DMA1_SetSCNTIInterruptHandler@InterruptHandler& (0+255),b
 19123  013FD2  0E4F               	movlw	high _DMA1_DefaultInterruptHandler
 19124  013FD4  6F61               	movwf	(DMA1_SetSCNTIInterruptHandler@InterruptHandler+1)& (0+255),b
 19125  013FD6  0E01               	movlw	low (_DMA1_DefaultInterruptHandler shr (0+16))
 19126  013FD8  6F62               	movwf	(DMA1_SetSCNTIInterruptHandler@InterruptHandler+2)& (0+255),b
 19127  013FDA  EC55  F0A7         	call	_DMA1_SetSCNTIInterruptHandler	;wreg free
 19128                           
 19129                           ; BSR set to: 0
 19130                           ;mcc_generated_files/dma1.c: 89:     PIE2bits.DMA1AIE = 0;
 19131  013FDE  0139               	movlb	57	; () banked
 19132  013FE0  9792               	bcf	146,3,b	;volatile
 19133                           
 19134                           ; BSR set to: 57
 19135                           ;mcc_generated_files/dma1.c: 90:     PIE2bits.DMA1ORIE = 0;
 19136  013FE2  9592               	bcf	146,2,b	;volatile
 19137                           
 19138                           ; BSR set to: 57
 19139                           ;mcc_generated_files/dma1.c: 93:     DMA1CON0 = 0xC0;
 19140  013FE4  0EC0               	movlw	192
 19141  013FE6  013B               	movlb	59	; () banked
 19142  013FE8  6FFC               	movwf	252,b	;volatile
 19143                           
 19144                           ; BSR set to: 59
 19145  013FEA  0012               	return		;funcret
 19146  013FEC                     __end_of_DMA1_Initialize:
 19147                           	callstack 0
 19148                           
 19149 ;; *************** function _DMA1_SetSCNTIInterruptHandler *****************
 19150 ;; Defined at:
 19151 ;;		line 179 in file "mcc_generated_files/dma1.c"
 19152 ;; Parameters:    Size  Location     Type
 19153 ;;  InterruptHan    3    0[BANK0 ] PTR FTN()void 
 19154 ;;		 -> source_dma_done(1), DMA1_DefaultInterruptHandler(1), 
 19155 ;; Auto vars:     Size  Location     Type
 19156 ;;		None
 19157 ;; Return value:  Size  Location     Type
 19158 ;;                  1    wreg      void 
 19159 ;; Registers used:
 19160 ;;		wreg, status,2, status,0
 19161 ;; Tracked objects:
 19162 ;;		On entry : 3F/0
 19163 ;;		On exit  : 3F/0
 19164 ;;		Unchanged: 3F/0
 19165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19166 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19169 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19170 ;;Total ram usage:        3 bytes
 19171 ;; Hardware stack levels used: 1
 19172 ;; Hardware stack levels required when called: 7
 19173 ;; This function calls:
 19174 ;;		Nothing
 19175 ;; This function is called by:
 19176 ;;		_DMA1_Initialize
 19177 ;;		_main
 19178 ;; This function uses a non-reentrant model
 19179 ;;
 19180                           
 19181                           	psect	text103
 19182  014EAA                     __ptext103:
 19183                           	callstack 0
 19184  014EAA                     _DMA1_SetSCNTIInterruptHandler:
 19185                           	callstack 21
 19186                           
 19187                           ; BSR set to: 0
 19188                           ;mcc_generated_files/dma1.c: 179: void DMA1_SetSCNTIInterruptHandler(void (* InterruptHa
      +                          ndler)(void));mcc_generated_files/dma1.c: 180: {;mcc_generated_files/dma1.c: 181:   DMA1
      +                          _SCNTI_InterruptHandler = InterruptHandler;
 19189                           
 19190                           ; BSR set to: 59
 19191                           ;incstack = 0
 19192  014EAA  C060  F135         	movff	DMA1_SetSCNTIInterruptHandler@InterruptHandler,_DMA1_SCNTI_InterruptHandler
 19193  014EAE  C061  F136         	movff	DMA1_SetSCNTIInterruptHandler@InterruptHandler+1,_DMA1_SCNTI_InterruptHandler+1
 19194  014EB2  C062  F137         	movff	DMA1_SetSCNTIInterruptHandler@InterruptHandler+2,_DMA1_SCNTI_InterruptHandler+2
 19195                           
 19196                           ; BSR set to: 0
 19197  014EB6  0012               	return		;funcret
 19198  014EB8                     __end_of_DMA1_SetSCNTIInterruptHandler:
 19199                           	callstack 0
 19200                           
 19201 ;; *************** function _DAC1_Initialize *****************
 19202 ;; Defined at:
 19203 ;;		line 58 in file "mcc_generated_files/dac1.c"
 19204 ;; Parameters:    Size  Location     Type
 19205 ;;		None
 19206 ;; Auto vars:     Size  Location     Type
 19207 ;;		None
 19208 ;; Return value:  Size  Location     Type
 19209 ;;                  1    wreg      void 
 19210 ;; Registers used:
 19211 ;;		wreg, status,2
 19212 ;; Tracked objects:
 19213 ;;		On entry : 3F/0
 19214 ;;		On exit  : 3F/3E
 19215 ;;		Unchanged: 0/0
 19216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19221 ;;Total ram usage:        0 bytes
 19222 ;; Hardware stack levels used: 1
 19223 ;; Hardware stack levels required when called: 7
 19224 ;; This function calls:
 19225 ;;		Nothing
 19226 ;; This function is called by:
 19227 ;;		_SYSTEM_Initialize
 19228 ;; This function uses a non-reentrant model
 19229 ;;
 19230                           
 19231                           	psect	text104
 19232  014ED2                     __ptext104:
 19233                           	callstack 0
 19234  014ED2                     _DAC1_Initialize:
 19235                           	callstack 22
 19236                           
 19237                           ; BSR set to: 0
 19238                           ;mcc_generated_files/dac1.c: 61:     DAC1CON0 = 0xA4;
 19239                           
 19240                           ; BSR set to: 0
 19241                           ;incstack = 0
 19242  014ED2  0EA4               	movlw	164
 19243  014ED4  013E               	movlb	62	; () banked
 19244  014ED6  6F9E               	movwf	158,b	;volatile
 19245                           
 19246                           ;mcc_generated_files/dac1.c: 63:     DAC1CON1 = 0x1F;
 19247  014ED8  0E1F               	movlw	31
 19248  014EDA  6F9C               	movwf	156,b	;volatile
 19249                           
 19250                           ; BSR set to: 62
 19251  014EDC  0012               	return		;funcret
 19252  014EDE                     __end_of_DAC1_Initialize:
 19253                           	callstack 0
 19254                           
 19255 ;; *************** function _ADCC_Initialize *****************
 19256 ;; Defined at:
 19257 ;;		line 64 in file "mcc_generated_files/adcc.c"
 19258 ;; Parameters:    Size  Location     Type
 19259 ;;		None
 19260 ;; Auto vars:     Size  Location     Type
 19261 ;;		None
 19262 ;; Return value:  Size  Location     Type
 19263 ;;                  1    wreg      void 
 19264 ;; Registers used:
 19265 ;;		wreg, status,2, status,0, cstack
 19266 ;; Tracked objects:
 19267 ;;		On entry : 3F/39
 19268 ;;		On exit  : 3F/0
 19269 ;;		Unchanged: 0/0
 19270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19275 ;;Total ram usage:        0 bytes
 19276 ;; Hardware stack levels used: 1
 19277 ;; Hardware stack levels required when called: 8
 19278 ;; This function calls:
 19279 ;;		_ADCC_SetADIInterruptHandler
 19280 ;; This function is called by:
 19281 ;;		_SYSTEM_Initialize
 19282 ;; This function uses a non-reentrant model
 19283 ;;
 19284                           
 19285                           	psect	text105
 19286  013D0A                     __ptext105:
 19287                           	callstack 0
 19288  013D0A                     _ADCC_Initialize:
 19289                           	callstack 21
 19290                           
 19291                           ; BSR set to: 57
 19292                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 19293                           
 19294                           ; BSR set to: 62
 19295                           ;incstack = 0
 19296  013D0A  0E00               	movlw	0
 19297  013D0C  013E               	movlb	62	; () banked
 19298  013D0E  6FDE               	movwf	222,b	;volatile
 19299                           
 19300                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 19301  013D10  0E00               	movlw	0
 19302  013D12  6FDF               	movwf	223,b	;volatile
 19303                           
 19304                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 19305  013D14  0E00               	movlw	0
 19306  013D16  6FE0               	movwf	224,b	;volatile
 19307                           
 19308                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 19309  013D18  0E00               	movlw	0
 19310  013D1A  6FE1               	movwf	225,b	;volatile
 19311                           
 19312                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 19313  013D1C  0E00               	movlw	0
 19314  013D1E  6FE4               	movwf	228,b	;volatile
 19315                           
 19316                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 19317  013D20  0E00               	movlw	0
 19318  013D22  6FE5               	movwf	229,b	;volatile
 19319                           
 19320                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 19321  013D24  0E00               	movlw	0
 19322  013D26  6FEA               	movwf	234,b	;volatile
 19323                           
 19324                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 19325  013D28  0E00               	movlw	0
 19326  013D2A  6FEC               	movwf	236,b	;volatile
 19327                           
 19328                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 19329  013D2C  0E00               	movlw	0
 19330  013D2E  6FF1               	movwf	241,b	;volatile
 19331                           
 19332                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x10;
 19333  013D30  0E10               	movlw	16
 19334  013D32  6FF3               	movwf	243,b	;volatile
 19335                           
 19336                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 19337  013D34  0E00               	movlw	0
 19338  013D36  6FF4               	movwf	244,b	;volatile
 19339                           
 19340                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 19341  013D38  0E00               	movlw	0
 19342  013D3A  6FF5               	movwf	245,b	;volatile
 19343                           
 19344                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 19345  013D3C  0E00               	movlw	0
 19346  013D3E  6FF6               	movwf	246,b	;volatile
 19347                           
 19348                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 19349  013D40  0E00               	movlw	0
 19350  013D42  6FF7               	movwf	247,b	;volatile
 19351                           
 19352                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 19353  013D44  0E00               	movlw	0
 19354  013D46  6FF9               	movwf	249,b	;volatile
 19355                           
 19356                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x00;
 19357  013D48  0E00               	movlw	0
 19358  013D4A  6FFA               	movwf	250,b	;volatile
 19359                           
 19360                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x20;
 19361  013D4C  0E20               	movlw	32
 19362  013D4E  6FFB               	movwf	251,b	;volatile
 19363                           
 19364                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 19365  013D50  0E00               	movlw	0
 19366  013D52  6FFC               	movwf	252,b	;volatile
 19367                           
 19368                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x02;
 19369  013D54  0E02               	movlw	2
 19370  013D56  6FFD               	movwf	253,b	;volatile
 19371                           
 19372                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x07;
 19373  013D58  0E07               	movlw	7
 19374  013D5A  6FFE               	movwf	254,b	;volatile
 19375                           
 19376                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x1F;
 19377  013D5C  0E1F               	movlw	31
 19378  013D5E  6FFF               	movwf	255,b	;volatile
 19379                           
 19380                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0x84;
 19381  013D60  0E84               	movlw	132
 19382  013D62  6FF8               	movwf	248,b	;volatile
 19383                           
 19384                           ; BSR set to: 62
 19385                           ;mcc_generated_files/adcc.c: 113:     PIR1bits.ADIF = 0;
 19386  013D64  0139               	movlb	57	; () banked
 19387  013D66  95A1               	bcf	161,2,b	;volatile
 19388                           
 19389                           ; BSR set to: 57
 19390                           ;mcc_generated_files/adcc.c: 115:     PIE1bits.ADIE = 1;
 19391  013D68  8591               	bsf	145,2,b	;volatile
 19392                           
 19393                           ; BSR set to: 57
 19394                           ;mcc_generated_files/adcc.c: 117:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 19395  013D6A  0E26               	movlw	low _ADCC_DefaultInterruptHandler
 19396  013D6C  0100               	movlb	0	; () banked
 19397  013D6E  6F60               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler& (0+255),b
 19398  013D70  0E4F               	movlw	high _ADCC_DefaultInterruptHandler
 19399  013D72  6F61               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)& (0+255),b
 19400  013D74  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 19401  013D76  6F62               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+2)& (0+255),b
 19402  013D78  EC5C  F0A7         	call	_ADCC_SetADIInterruptHandler	;wreg free
 19403                           
 19404                           ; BSR set to: 0
 19405  013D7C  0012               	return		;funcret
 19406  013D7E                     __end_of_ADCC_Initialize:
 19407                           	callstack 0
 19408                           
 19409 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 19410 ;; Defined at:
 19411 ;;		line 316 in file "mcc_generated_files/adcc.c"
 19412 ;; Parameters:    Size  Location     Type
 19413 ;;  InterruptHan    3    0[BANK0 ] PTR FTN()void 
 19414 ;;		 -> Adc_Isr(1), ADCC_DefaultInterruptHandler(1), 
 19415 ;; Auto vars:     Size  Location     Type
 19416 ;;		None
 19417 ;; Return value:  Size  Location     Type
 19418 ;;                  1    wreg      void 
 19419 ;; Registers used:
 19420 ;;		wreg, status,2, status,0
 19421 ;; Tracked objects:
 19422 ;;		On entry : 3F/0
 19423 ;;		On exit  : 3F/0
 19424 ;;		Unchanged: 3F/0
 19425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19426 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19429 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19430 ;;Total ram usage:        3 bytes
 19431 ;; Hardware stack levels used: 1
 19432 ;; Hardware stack levels required when called: 7
 19433 ;; This function calls:
 19434 ;;		Nothing
 19435 ;; This function is called by:
 19436 ;;		_ADCC_Initialize
 19437 ;;		_main
 19438 ;; This function uses a non-reentrant model
 19439 ;;
 19440                           
 19441                           	psect	text106
 19442  014EB8                     __ptext106:
 19443                           	callstack 0
 19444  014EB8                     _ADCC_SetADIInterruptHandler:
 19445                           	callstack 21
 19446                           
 19447                           ; BSR set to: 0
 19448                           ;mcc_generated_files/adcc.c: 317:     ADCC_ADI_InterruptHandler = InterruptHandler;
 19449                           
 19450                           ; BSR set to: 0
 19451                           ;incstack = 0
 19452  014EB8  C060  F13E         	movff	ADCC_SetADIInterruptHandler@InterruptHandler,_ADCC_ADI_InterruptHandler
 19453  014EBC  C061  F13F         	movff	ADCC_SetADIInterruptHandler@InterruptHandler+1,_ADCC_ADI_InterruptHandler+1
 19454  014EC0  C062  F140         	movff	ADCC_SetADIInterruptHandler@InterruptHandler+2,_ADCC_ADI_InterruptHandler+2
 19455                           
 19456                           ; BSR set to: 0
 19457  014EC4  0012               	return		;funcret
 19458  014EC6                     __end_of_ADCC_SetADIInterruptHandler:
 19459                           	callstack 0
 19460                           
 19461 ;; *************** function _PWM6_LoadDutyValue *****************
 19462 ;; Defined at:
 19463 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 19464 ;; Parameters:    Size  Location     Type
 19465 ;;  dutyValue       2    0[BANK0 ] unsigned short 
 19466 ;; Auto vars:     Size  Location     Type
 19467 ;;		None
 19468 ;; Return value:  Size  Location     Type
 19469 ;;                  1    wreg      void 
 19470 ;; Registers used:
 19471 ;;		wreg, status,2, status,0
 19472 ;; Tracked objects:
 19473 ;;		On entry : 3F/0
 19474 ;;		On exit  : 3F/0
 19475 ;;		Unchanged: 0/0
 19476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19477 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19479 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19480 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19481 ;;Total ram usage:        4 bytes
 19482 ;; Hardware stack levels used: 1
 19483 ;; Hardware stack levels required when called: 7
 19484 ;; This function calls:
 19485 ;;		Nothing
 19486 ;; This function is called by:
 19487 ;;		_main
 19488 ;; This function uses a non-reentrant model
 19489 ;;
 19490                           
 19491                           	psect	text107
 19492  01492A                     __ptext107:
 19493                           	callstack 0
 19494  01492A                     _PWM6_LoadDutyValue:
 19495                           	callstack 23
 19496                           
 19497                           ; BSR set to: 0
 19498                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 19499                           
 19500                           ; BSR set to: 0
 19501                           ;incstack = 0
 19502  01492A  C060  F062         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
 19503  01492E  C061  F063         	movff	PWM6_LoadDutyValue@dutyValue+1,??_PWM6_LoadDutyValue+1
 19504  014932  90D8               	bcf	status,0,c
 19505  014934  3363               	rrcf	(??_PWM6_LoadDutyValue+1)& (0+255),f,b
 19506  014936  3362               	rrcf	??_PWM6_LoadDutyValue& (0+255),f,b
 19507  014938  90D8               	bcf	status,0,c
 19508  01493A  3363               	rrcf	(??_PWM6_LoadDutyValue+1)& (0+255),f,b
 19509  01493C  3362               	rrcf	??_PWM6_LoadDutyValue& (0+255),f,b
 19510  01493E  5162               	movf	??_PWM6_LoadDutyValue& (0+255),w,b
 19511  014940  6E69               	movwf	105,c	;volatile
 19512                           
 19513                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
 19514  014942  C060  F062         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
 19515  014946  0E03               	movlw	3
 19516  014948  1762               	andwf	??_PWM6_LoadDutyValue& (0+255),f,b
 19517  01494A  0E06               	movlw	6
 19518  01494C  6F63               	movwf	(??_PWM6_LoadDutyValue+1)& (0+255),b
 19519  01494E                     u13095:
 19520  01494E  90D8               	bcf	status,0,c
 19521  014950  3762               	rlcf	??_PWM6_LoadDutyValue& (0+255),f,b
 19522  014952  2F63               	decfsz	(??_PWM6_LoadDutyValue+1)& (0+255),f,b
 19523  014954  D7FC               	goto	u13095
 19524  014956  5162               	movf	??_PWM6_LoadDutyValue& (0+255),w,b
 19525  014958  6E68               	movwf	104,c	;volatile
 19526                           
 19527                           ; BSR set to: 0
 19528  01495A  0012               	return		;funcret
 19529  01495C                     __end_of_PWM6_LoadDutyValue:
 19530                           	callstack 0
 19531                           
 19532 ;; *************** function _PWM5_LoadDutyValue *****************
 19533 ;; Defined at:
 19534 ;;		line 74 in file "mcc_generated_files/pwm5.c"
 19535 ;; Parameters:    Size  Location     Type
 19536 ;;  dutyValue       2    0[BANK0 ] unsigned short 
 19537 ;; Auto vars:     Size  Location     Type
 19538 ;;		None
 19539 ;; Return value:  Size  Location     Type
 19540 ;;                  1    wreg      void 
 19541 ;; Registers used:
 19542 ;;		wreg, status,2, status,0
 19543 ;; Tracked objects:
 19544 ;;		On entry : 3F/0
 19545 ;;		On exit  : 3F/0
 19546 ;;		Unchanged: 0/0
 19547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19548 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19550 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19551 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19552 ;;Total ram usage:        4 bytes
 19553 ;; Hardware stack levels used: 1
 19554 ;; Hardware stack levels required when called: 7
 19555 ;; This function calls:
 19556 ;;		Nothing
 19557 ;; This function is called by:
 19558 ;;		_main
 19559 ;; This function uses a non-reentrant model
 19560 ;;
 19561                           
 19562                           	psect	text108
 19563  01495C                     __ptext108:
 19564                           	callstack 0
 19565  01495C                     _PWM5_LoadDutyValue:
 19566                           	callstack 23
 19567                           
 19568                           ; BSR set to: 0
 19569                           ;mcc_generated_files/pwm5.c: 74:  void PWM5_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm5.c: 75:  {;mcc_generated_files/pwm5.c: 77:      PWM5DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 19570                           
 19571                           ; BSR set to: 0
 19572                           ;incstack = 0
 19573  01495C  C060  F062         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
 19574  014960  C061  F063         	movff	PWM5_LoadDutyValue@dutyValue+1,??_PWM5_LoadDutyValue+1
 19575  014964  90D8               	bcf	status,0,c
 19576  014966  3363               	rrcf	(??_PWM5_LoadDutyValue+1)& (0+255),f,b
 19577  014968  3362               	rrcf	??_PWM5_LoadDutyValue& (0+255),f,b
 19578  01496A  90D8               	bcf	status,0,c
 19579  01496C  3363               	rrcf	(??_PWM5_LoadDutyValue+1)& (0+255),f,b
 19580  01496E  3362               	rrcf	??_PWM5_LoadDutyValue& (0+255),f,b
 19581  014970  5162               	movf	??_PWM5_LoadDutyValue& (0+255),w,b
 19582  014972  6E6D               	movwf	109,c	;volatile
 19583                           
 19584                           ;mcc_generated_files/pwm5.c: 80:      PWM5DCL = (dutyValue & 0x0003)<<6;
 19585  014974  C060  F062         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
 19586  014978  0E03               	movlw	3
 19587  01497A  1762               	andwf	??_PWM5_LoadDutyValue& (0+255),f,b
 19588  01497C  0E06               	movlw	6
 19589  01497E  6F63               	movwf	(??_PWM5_LoadDutyValue+1)& (0+255),b
 19590  014980                     u13085:
 19591  014980  90D8               	bcf	status,0,c
 19592  014982  3762               	rlcf	??_PWM5_LoadDutyValue& (0+255),f,b
 19593  014984  2F63               	decfsz	(??_PWM5_LoadDutyValue+1)& (0+255),f,b
 19594  014986  D7FC               	goto	u13085
 19595  014988  5162               	movf	??_PWM5_LoadDutyValue& (0+255),w,b
 19596  01498A  6E6C               	movwf	108,c	;volatile
 19597                           
 19598                           ; BSR set to: 0
 19599  01498C  0012               	return		;funcret
 19600  01498E                     __end_of_PWM5_LoadDutyValue:
 19601                           	callstack 0
 19602                           
 19603 ;; *************** function _DATAEE_ReadByte *****************
 19604 ;; Defined at:
 19605 ;;		line 187 in file "mcc_generated_files/memory.c"
 19606 ;; Parameters:    Size  Location     Type
 19607 ;;  bAdd            2    0[BANK0 ] unsigned short 
 19608 ;; Auto vars:     Size  Location     Type
 19609 ;;		None
 19610 ;; Return value:  Size  Location     Type
 19611 ;;                  1    wreg      unsigned char 
 19612 ;; Registers used:
 19613 ;;		wreg, status,2, status,0
 19614 ;; Tracked objects:
 19615 ;;		On entry : 3F/0
 19616 ;;		On exit  : 3F/39
 19617 ;;		Unchanged: 0/0
 19618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19619 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19622 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19623 ;;Total ram usage:        2 bytes
 19624 ;; Hardware stack levels used: 1
 19625 ;; Hardware stack levels required when called: 7
 19626 ;; This function calls:
 19627 ;;		Nothing
 19628 ;; This function is called by:
 19629 ;;		_main
 19630 ;; This function uses a non-reentrant model
 19631 ;;
 19632                           
 19633                           	psect	text109
 19634  014C9A                     __ptext109:
 19635                           	callstack 0
 19636  014C9A                     _DATAEE_ReadByte:
 19637                           	callstack 23
 19638                           
 19639                           ; BSR set to: 0
 19640                           ;mcc_generated_files/memory.c: 187: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 188: {;mcc_generated_files/memory.c: 189:     NVMADRH = (uint8_t)((bAdd
      +                           >> 8) & 0x03);
 19641                           
 19642                           ; BSR set to: 0
 19643                           ;incstack = 0
 19644  014C9A  5161               	movf	(DATAEE_ReadByte@bAdd+1)& (0+255),w,b
 19645  014C9C  0B03               	andlw	3
 19646  014C9E  0139               	movlb	57	; () banked
 19647  014CA0  6FE1               	movwf	225,b	;volatile
 19648                           
 19649                           ; BSR set to: 57
 19650                           ;mcc_generated_files/memory.c: 190:     NVMADRL = (uint8_t)(bAdd & 0xFF);
 19651  014CA2  0060  F183  F9E0   	movff	DATAEE_ReadByte@bAdd,14816	;volatile
 19652                           
 19653                           ; BSR set to: 57
 19654                           ;mcc_generated_files/memory.c: 191:     NVMCON1bits.NVMREG = 0;
 19655  014CA8  0E3F               	movlw	-193
 19656  014CAA  17E5               	andwf	229,f,b	;volsfr
 19657                           
 19658                           ; BSR set to: 57
 19659                           ;mcc_generated_files/memory.c: 192:     NVMCON1bits.RD = 1;
 19660  014CAC  81E5               	bsf	229,0,b	;volsfr
 19661                           
 19662                           ; BSR set to: 57
 19663                           ;mcc_generated_files/memory.c: 193:     __nop();
 19664  014CAE  F000               	nop	
 19665                           
 19666                           ;mcc_generated_files/memory.c: 194:     __nop();
 19667  014CB0  F000               	nop	
 19668                           
 19669                           ;mcc_generated_files/memory.c: 196:     return (NVMDAT);
 19670  014CB2  0139               	movlb	57	; () banked
 19671  014CB4  51E3               	movf	227,w,b	;volatile
 19672                           
 19673                           ; BSR set to: 57
 19674  014CB6  0012               	return		;funcret
 19675  014CB8                     __end_of_DATAEE_ReadByte:
 19676                           	callstack 0
 19677                           
 19678 ;; *************** function _DAC1_SetOutput *****************
 19679 ;; Defined at:
 19680 ;;		line 66 in file "mcc_generated_files/dac1.c"
 19681 ;; Parameters:    Size  Location     Type
 19682 ;;  inputData       1    wreg     unsigned char 
 19683 ;; Auto vars:     Size  Location     Type
 19684 ;;  inputData       1   31[COMRAM] unsigned char 
 19685 ;; Return value:  Size  Location     Type
 19686 ;;                  1    wreg      void 
 19687 ;; Registers used:
 19688 ;;		wreg
 19689 ;; Tracked objects:
 19690 ;;		On entry : 3F/0
 19691 ;;		On exit  : 0/0
 19692 ;;		Unchanged: 0/0
 19693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19695 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19697 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19698 ;;Total ram usage:        1 bytes
 19699 ;; Hardware stack levels used: 1
 19700 ;; Hardware stack levels required when called: 7
 19701 ;; This function calls:
 19702 ;;		Nothing
 19703 ;; This function is called by:
 19704 ;;		_main
 19705 ;; This function uses a non-reentrant model
 19706 ;;
 19707                           
 19708                           	psect	text110
 19709  014EEA                     __ptext110:
 19710                           	callstack 0
 19711  014EEA                     _DAC1_SetOutput:
 19712                           	callstack 23
 19713                           
 19714                           ; BSR set to: 57
 19715                           ;incstack = 0
 19716                           ;DAC1_SetOutput@inputData stored from wreg
 19717  014EEA  6E20               	movwf	DAC1_SetOutput@inputData^0,c
 19718                           
 19719                           ;mcc_generated_files/dac1.c: 66: void DAC1_SetOutput(uint8_t inputData);mcc_generated_fi
      +                          les/dac1.c: 67: {;mcc_generated_files/dac1.c: 68:     DAC1CON1 = inputData;
 19720  014EEC  0060  F083  FE9C   	movff	DAC1_SetOutput@inputData,16028	;volatile
 19721  014EF2  0012               	return		;funcret
 19722  014EF4                     __end_of_DAC1_SetOutput:
 19723                           	callstack 0
 19724                           
 19725 ;; *************** function _DAC1_GetOutput *****************
 19726 ;; Defined at:
 19727 ;;		line 71 in file "mcc_generated_files/dac1.c"
 19728 ;; Parameters:    Size  Location     Type
 19729 ;;		None
 19730 ;; Auto vars:     Size  Location     Type
 19731 ;;		None
 19732 ;; Return value:  Size  Location     Type
 19733 ;;                  1    wreg      unsigned char 
 19734 ;; Registers used:
 19735 ;;		wreg, status,2
 19736 ;; Tracked objects:
 19737 ;;		On entry : 3F/1
 19738 ;;		On exit  : 3F/3E
 19739 ;;		Unchanged: 0/0
 19740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19745 ;;Total ram usage:        0 bytes
 19746 ;; Hardware stack levels used: 1
 19747 ;; Hardware stack levels required when called: 7
 19748 ;; This function calls:
 19749 ;;		Nothing
 19750 ;; This function is called by:
 19751 ;;		_main
 19752 ;; This function uses a non-reentrant model
 19753 ;;
 19754                           
 19755                           	psect	text111
 19756  014F08                     __ptext111:
 19757                           	callstack 0
 19758  014F08                     _DAC1_GetOutput:
 19759                           	callstack 23
 19760                           
 19761                           ; BSR set to: 1
 19762                           ;mcc_generated_files/dac1.c: 73:     return DAC1CON1;
 19763                           
 19764                           ;incstack = 0
 19765  014F08  013E               	movlb	62	; () banked
 19766  014F0A  519C               	movf	156,w,b	;volatile
 19767                           
 19768                           ; BSR set to: 62
 19769  014F0C  0012               	return		;funcret
 19770  014F0E                     __end_of_DAC1_GetOutput:
 19771                           	callstack 0
 19772                           
 19773 ;; *************** function _UART1_tx_vect_isr *****************
 19774 ;; Defined at:
 19775 ;;		line 243 in file "mcc_generated_files/uart1.c"
 19776 ;; Parameters:    Size  Location     Type
 19777 ;;		None
 19778 ;; Auto vars:     Size  Location     Type
 19779 ;;		None
 19780 ;; Return value:  Size  Location     Type
 19781 ;;                  1    wreg      void 
 19782 ;; Registers used:
 19783 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 19784 ;; Tracked objects:
 19785 ;;		On entry : 0/0
 19786 ;;		On exit  : 0/0
 19787 ;;		Unchanged: 0/0
 19788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19791 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19792 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19793 ;;Total ram usage:        3 bytes
 19794 ;; Hardware stack levels used: 1
 19795 ;; Hardware stack levels required when called: 4
 19796 ;; This function calls:
 19797 ;;		Absolute function
 19798 ;;		_UART1_Transmit_ISR
 19799 ;; This function is called by:
 19800 ;;		Interrupt level 1
 19801 ;; This function uses a non-reentrant model
 19802 ;;
 19803                           
 19804                           	psect	text112
 19805  01440C                     __ptext112:
 19806                           	callstack 0
 19807  01440C                     _UART1_tx_vect_isr:
 19808                           	callstack 17
 19809                           
 19810                           ; BSR set to: 62
 19811                           ;incstack = 0
 19812  01440C  006F FF60  F01A    	movff	status,??_UART1_tx_vect_isr
 19813  014412  006F FFE8  F01B    	movff	pclath,??_UART1_tx_vect_isr+1
 19814  014418  006F FFEC  F01C    	movff	pclatu,??_UART1_tx_vect_isr+2
 19815                           
 19816                           ;mcc_generated_files/uart1.c: 245:     if(UART1_TxInterruptHandler)
 19817  01441E  5027               	movf	_UART1_TxInterruptHandler^0,w,c
 19818  014420  1028               	iorwf	(_UART1_TxInterruptHandler+1)^0,w,c
 19819  014422  1029               	iorwf	(_UART1_TxInterruptHandler+2)^0,w,c
 19820  014424  B4D8               	btfsc	status,2,c
 19821  014426  D00C               	goto	i1u678_29
 19822                           
 19823                           ;mcc_generated_files/uart1.c: 246:     {;mcc_generated_files/uart1.c: 247:         UART1
      +                          _TxInterruptHandler();
 19824  014428  D801               	call	i1u678_28
 19825  01442A  D00A               	goto	i1u678_29
 19826  01442C                     i1u678_28:
 19827  01442C  0005               	push	
 19828  01442E  6EFA               	movwf	pclath,c
 19829  014430  5027               	movf	_UART1_TxInterruptHandler^0,w,c
 19830  014432  6EFD               	movwf	tosl,c
 19831  014434  5028               	movf	(_UART1_TxInterruptHandler+1)^0,w,c
 19832  014436  6EFE               	movwf	tosh,c
 19833  014438  5029               	movf	(_UART1_TxInterruptHandler+2)^0,w,c
 19834  01443A  6EFF               	movwf	tosu,c
 19835  01443C  50FA               	movf	pclath,w,c
 19836  01443E  0012               	return		;indir
 19837  014440                     i1u678_29:
 19838  014440  0060  F073  FFFB   	movff	??_UART1_tx_vect_isr+2,pclatu
 19839  014446  0060  F06F  FFFA   	movff	??_UART1_tx_vect_isr+1,pclath
 19840  01444C  0060  F06B  FFD8   	movff	??_UART1_tx_vect_isr,status
 19841  014452  0011               	retfie		f
 19842  014454                     __end_of_UART1_tx_vect_isr:
 19843                           	callstack 0
 19844                           
 19845 ;; *************** function _UART1_Transmit_ISR *****************
 19846 ;; Defined at:
 19847 ;;		line 275 in file "mcc_generated_files/uart1.c"
 19848 ;; Parameters:    Size  Location     Type
 19849 ;;		None
 19850 ;; Auto vars:     Size  Location     Type
 19851 ;;		None
 19852 ;; Return value:  Size  Location     Type
 19853 ;;                  1    wreg      void 
 19854 ;; Registers used:
 19855 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19856 ;; Tracked objects:
 19857 ;;		On entry : 0/0
 19858 ;;		On exit  : 3B/39
 19859 ;;		Unchanged: 0/0
 19860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19865 ;;Total ram usage:        0 bytes
 19866 ;; Hardware stack levels used: 1
 19867 ;; Hardware stack levels required when called: 3
 19868 ;; This function calls:
 19869 ;;		Nothing
 19870 ;; This function is called by:
 19871 ;;		_UART1_Initialize
 19872 ;;		_UART1_tx_vect_isr
 19873 ;; This function uses a non-reentrant model
 19874 ;;
 19875                           
 19876                           	psect	text113
 19877  014A1C                     __ptext113:
 19878                           	callstack 0
 19879  014A1C                     _UART1_Transmit_ISR:
 19880                           	callstack 17
 19881                           
 19882                           ;mcc_generated_files/uart1.c: 278:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
 19883                           
 19884                           ;incstack = 0
 19885  014A1C  0E40               	movlw	64
 19886  014A1E  603C               	cpfslt	_uart1TxBufferRemaining^0,c
 19887  014A20  D011               	goto	i1l1027
 19888                           
 19889                           ;mcc_generated_files/uart1.c: 279:     {;mcc_generated_files/uart1.c: 280:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
 19890  014A22  0E40               	movlw	low _uart1TxBuffer
 19891  014A24  243D               	addwf	_uart1TxTail^0,w,c	;volatile
 19892  014A26  6ED9               	movwf	fsr2l,c
 19893  014A28  6ADA               	clrf	fsr2h,c
 19894  014A2A  0E02               	movlw	high _uart1TxBuffer
 19895  014A2C  22DA               	addwfc	fsr2h,f,c
 19896  014A2E  50DF               	movf	indf2,w,c
 19897  014A30  013D               	movlb	61	; () banked
 19898  014A32  6FEA               	movwf	234,b	;volatile
 19899                           
 19900                           ; BSR set to: 61
 19901  014A34  2A3D               	incf	_uart1TxTail^0,f,c	;volatile
 19902                           
 19903                           ; BSR set to: 61
 19904                           ;mcc_generated_files/uart1.c: 281:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
 19905  014A36  0E3F               	movlw	63
 19906  014A38  643D               	cpfsgt	_uart1TxTail^0,c
 19907  014A3A  D002               	goto	i1l7643
 19908                           
 19909                           ; BSR set to: 61
 19910                           ;mcc_generated_files/uart1.c: 282:         {;mcc_generated_files/uart1.c: 283:          
      +                             uart1TxTail = 0;
 19911  014A3C  0E00               	movlw	0
 19912  014A3E  6E3D               	movwf	_uart1TxTail^0,c	;volatile
 19913  014A40                     i1l7643:
 19914                           
 19915                           ; BSR set to: 61
 19916                           ;mcc_generated_files/uart1.c: 285:         uart1TxBufferRemaining++;
 19917  014A40  2A3C               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 19918                           
 19919                           ;mcc_generated_files/uart1.c: 286:     }
 19920  014A42  0012               	return	
 19921  014A44                     i1l1027:
 19922                           
 19923                           ;mcc_generated_files/uart1.c: 288:     {;mcc_generated_files/uart1.c: 289:         PIE3b
      +                          its.U1TXIE = 0;
 19924  014A44  0139               	movlb	57	; () banked
 19925  014A46  9993               	bcf	147,4,b	;volatile
 19926  014A48  0012               	return		;funcret
 19927  014A4A                     __end_of_UART1_Transmit_ISR:
 19928                           	callstack 0
 19929                           
 19930 ;; *************** function _UART1_rx_vect_isr *****************
 19931 ;; Defined at:
 19932 ;;		line 251 in file "mcc_generated_files/uart1.c"
 19933 ;; Parameters:    Size  Location     Type
 19934 ;;		None
 19935 ;; Auto vars:     Size  Location     Type
 19936 ;;		None
 19937 ;; Return value:  Size  Location     Type
 19938 ;;                  1    wreg      void 
 19939 ;; Registers used:
 19940 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 19941 ;; Tracked objects:
 19942 ;;		On entry : 0/0
 19943 ;;		On exit  : 0/0
 19944 ;;		Unchanged: 0/0
 19945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19948 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19949 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19950 ;;Total ram usage:        3 bytes
 19951 ;; Hardware stack levels used: 1
 19952 ;; Hardware stack levels required when called: 6
 19953 ;; This function calls:
 19954 ;;		Absolute function
 19955 ;;		_UART1_Receive_ISR
 19956 ;; This function is called by:
 19957 ;;		Interrupt level 1
 19958 ;; This function uses a non-reentrant model
 19959 ;;
 19960                           
 19961                           	psect	text114
 19962  014454                     __ptext114:
 19963                           	callstack 0
 19964  014454                     _UART1_rx_vect_isr:
 19965                           	callstack 15
 19966                           
 19967                           ;incstack = 0
 19968  014454  006F FF60  F01D    	movff	status,??_UART1_rx_vect_isr
 19969  01445A  006F FFE8  F01E    	movff	pclath,??_UART1_rx_vect_isr+1
 19970  014460  006F FFEC  F01F    	movff	pclatu,??_UART1_rx_vect_isr+2
 19971                           
 19972                           ;mcc_generated_files/uart1.c: 253:     if(UART1_RxInterruptHandler)
 19973  014466  502A               	movf	_UART1_RxInterruptHandler^0,w,c
 19974  014468  102B               	iorwf	(_UART1_RxInterruptHandler+1)^0,w,c
 19975  01446A  102C               	iorwf	(_UART1_RxInterruptHandler+2)^0,w,c
 19976  01446C  B4D8               	btfsc	status,2,c
 19977  01446E  D00C               	goto	i1u1006_29
 19978                           
 19979                           ;mcc_generated_files/uart1.c: 254:     {;mcc_generated_files/uart1.c: 255:         UART1
      +                          _RxInterruptHandler();
 19980  014470  D801               	call	i1u1006_28
 19981  014472  D00A               	goto	i1u1006_29
 19982  014474                     i1u1006_28:
 19983  014474  0005               	push	
 19984  014476  6EFA               	movwf	pclath,c
 19985  014478  502A               	movf	_UART1_RxInterruptHandler^0,w,c
 19986  01447A  6EFD               	movwf	tosl,c
 19987  01447C  502B               	movf	(_UART1_RxInterruptHandler+1)^0,w,c
 19988  01447E  6EFE               	movwf	tosh,c
 19989  014480  502C               	movf	(_UART1_RxInterruptHandler+2)^0,w,c
 19990  014482  6EFF               	movwf	tosu,c
 19991  014484  50FA               	movf	pclath,w,c
 19992  014486  0012               	return		;indir
 19993  014488                     i1u1006_29:
 19994  014488  0060  F07F  FFFB   	movff	??_UART1_rx_vect_isr+2,pclatu
 19995  01448E  0060  F07B  FFFA   	movff	??_UART1_rx_vect_isr+1,pclath
 19996  014494  0060  F077  FFD8   	movff	??_UART1_rx_vect_isr,status
 19997  01449A  0011               	retfie		f
 19998  01449C                     __end_of_UART1_rx_vect_isr:
 19999                           	callstack 0
 20000                           
 20001 ;; *************** function _UART1_Receive_ISR *****************
 20002 ;; Defined at:
 20003 ;;		line 295 in file "mcc_generated_files/uart1.c"
 20004 ;; Parameters:    Size  Location     Type
 20005 ;;		None
 20006 ;; Auto vars:     Size  Location     Type
 20007 ;;		None
 20008 ;; Return value:  Size  Location     Type
 20009 ;;                  1    wreg      void 
 20010 ;; Registers used:
 20011 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 20012 ;; Tracked objects:
 20013 ;;		On entry : 0/0
 20014 ;;		On exit  : 0/0
 20015 ;;		Unchanged: 0/0
 20016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20021 ;;Total ram usage:        0 bytes
 20022 ;; Hardware stack levels used: 1
 20023 ;; Hardware stack levels required when called: 5
 20024 ;; This function calls:
 20025 ;;		Absolute function
 20026 ;;		_UART1_DefaultErrorHandler
 20027 ;;		_UART1_DefaultFramingErrorHandler
 20028 ;;		_UART1_DefaultOverrunErrorHandler
 20029 ;;		_UART1_RxDataHandler
 20030 ;; This function is called by:
 20031 ;;		_UART1_Initialize
 20032 ;;		_UART1_rx_vect_isr
 20033 ;; This function uses a non-reentrant model
 20034 ;;
 20035                           
 20036                           	psect	text115
 20037  013AC4                     __ptext115:
 20038                           	callstack 0
 20039  013AC4                     _UART1_Receive_ISR:
 20040                           	callstack 15
 20041                           
 20042                           ;mcc_generated_files/uart1.c: 298:     uart1RxStatusBuffer[uart1RxHead].status = 0;
 20043                           
 20044                           ;incstack = 0
 20045  013AC4  0E00               	movlw	low _uart1RxStatusBuffer
 20046  013AC6  243B               	addwf	_uart1RxHead^0,w,c	;volatile
 20047  013AC8  6ED9               	movwf	fsr2l,c
 20048  013ACA  6ADA               	clrf	fsr2h,c
 20049  013ACC  0E02               	movlw	high _uart1RxStatusBuffer
 20050  013ACE  22DA               	addwfc	fsr2h,f,c
 20051  013AD0  0E00               	movlw	0
 20052  013AD2  6EDF               	movwf	indf2,c
 20053                           
 20054                           ;mcc_generated_files/uart1.c: 300:     if(U1ERRIRbits.FERIF){
 20055  013AD4  013D               	movlb	61	; () banked
 20056  013AD6  A7F9               	btfss	249,3,b	;volatile
 20057  013AD8  D015               	goto	i1u986_29
 20058                           
 20059                           ; BSR set to: 61
 20060                           ;mcc_generated_files/uart1.c: 301:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
 20061  013ADA  0E00               	movlw	low _uart1RxStatusBuffer
 20062  013ADC  243B               	addwf	_uart1RxHead^0,w,c	;volatile
 20063  013ADE  6ED9               	movwf	fsr2l,c
 20064  013AE0  6ADA               	clrf	fsr2h,c
 20065  013AE2  0E02               	movlw	high _uart1RxStatusBuffer
 20066  013AE4  22DA               	addwfc	fsr2h,f,c
 20067  013AE6  0102               	movlb	2	; () banked
 20068  013AE8  82DF               	bsf	indf2,1,c
 20069                           
 20070                           ; BSR set to: 2
 20071                           ;mcc_generated_files/uart1.c: 302:         UART1_FramingErrorHandler();
 20072  013AEA  D801               	call	i1u986_28
 20073  013AEC  D00B               	goto	i1u986_29
 20074  013AEE                     i1u986_28:
 20075  013AEE  0005               	push	
 20076  013AF0  6EFA               	movwf	pclath,c
 20077  013AF2  0101               	movlb	1	; () banked
 20078  013AF4  5132               	movf	_UART1_FramingErrorHandler& (0+255),w,b
 20079  013AF6  6EFD               	movwf	tosl,c
 20080  013AF8  5133               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
 20081  013AFA  6EFE               	movwf	tosh,c
 20082  013AFC  5134               	movf	(_UART1_FramingErrorHandler+2)& (0+255),w,b
 20083  013AFE  6EFF               	movwf	tosu,c
 20084  013B00  50FA               	movf	pclath,w,c
 20085  013B02  0012               	return		;indir
 20086  013B04                     i1u986_29:
 20087                           
 20088                           ;mcc_generated_files/uart1.c: 305:     if(U1ERRIRbits.RXFOIF){
 20089  013B04  013D               	movlb	61	; () banked
 20090  013B06  A3F9               	btfss	249,1,b	;volatile
 20091  013B08  D015               	goto	i1u988_29
 20092                           
 20093                           ; BSR set to: 61
 20094                           ;mcc_generated_files/uart1.c: 306:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
 20095  013B0A  0E00               	movlw	low _uart1RxStatusBuffer
 20096  013B0C  243B               	addwf	_uart1RxHead^0,w,c	;volatile
 20097  013B0E  6ED9               	movwf	fsr2l,c
 20098  013B10  6ADA               	clrf	fsr2h,c
 20099  013B12  0E02               	movlw	high _uart1RxStatusBuffer
 20100  013B14  22DA               	addwfc	fsr2h,f,c
 20101  013B16  0102               	movlb	2	; () banked
 20102  013B18  84DF               	bsf	indf2,2,c
 20103                           
 20104                           ; BSR set to: 2
 20105                           ;mcc_generated_files/uart1.c: 307:         UART1_OverrunErrorHandler();
 20106  013B1A  D801               	call	i1u988_28
 20107  013B1C  D00B               	goto	i1u988_29
 20108  013B1E                     i1u988_28:
 20109  013B1E  0005               	push	
 20110  013B20  6EFA               	movwf	pclath,c
 20111  013B22  0101               	movlb	1	; () banked
 20112  013B24  512F               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
 20113  013B26  6EFD               	movwf	tosl,c
 20114  013B28  5130               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
 20115  013B2A  6EFE               	movwf	tosh,c
 20116  013B2C  5131               	movf	(_UART1_OverrunErrorHandler+2)& (0+255),w,b
 20117  013B2E  6EFF               	movwf	tosu,c
 20118  013B30  50FA               	movf	pclath,w,c
 20119  013B32  0012               	return		;indir
 20120  013B34                     i1u988_29:
 20121                           
 20122                           ;mcc_generated_files/uart1.c: 310:     if(uart1RxStatusBuffer[uart1RxHead].status){
 20123  013B34  0E00               	movlw	low _uart1RxStatusBuffer
 20124  013B36  243B               	addwf	_uart1RxHead^0,w,c	;volatile
 20125  013B38  6ED9               	movwf	fsr2l,c
 20126  013B3A  6ADA               	clrf	fsr2h,c
 20127  013B3C  0E02               	movlw	high _uart1RxStatusBuffer
 20128  013B3E  22DA               	addwfc	fsr2h,f,c
 20129  013B40  50DF               	movf	indf2,w,c
 20130  013B42  B4D8               	btfsc	status,2,c
 20131  013B44  D00D               	goto	i1l10363
 20132                           
 20133                           ;mcc_generated_files/uart1.c: 311:         UART1_ErrorHandler();
 20134  013B46  D801               	call	i1u990_28
 20135  013B48  0012               	return	
 20136  013B4A                     i1u990_28:
 20137  013B4A  0005               	push	
 20138  013B4C  6EFA               	movwf	pclath,c
 20139  013B4E  0101               	movlb	1	; () banked
 20140  013B50  512C               	movf	_UART1_ErrorHandler& (0+255),w,b
 20141  013B52  6EFD               	movwf	tosl,c
 20142  013B54  512D               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
 20143  013B56  6EFE               	movwf	tosh,c
 20144  013B58  512E               	movf	(_UART1_ErrorHandler+2)& (0+255),w,b
 20145  013B5A  6EFF               	movwf	tosu,c
 20146  013B5C  50FA               	movf	pclath,w,c
 20147  013B5E  0012               	return		;indir
 20148  013B60                     i1l10363:
 20149                           
 20150                           ;mcc_generated_files/uart1.c: 313:         UART1_RxDataHandler();
 20151  013B60  ECEF  F0A5         	call	_UART1_RxDataHandler	;wreg free
 20152  013B64  0012               	return		;funcret
 20153  013B66                     __end_of_UART1_Receive_ISR:
 20154                           	callstack 0
 20155                           
 20156 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
 20157 ;; Defined at:
 20158 ;;		line 331 in file "mcc_generated_files/uart1.c"
 20159 ;; Parameters:    Size  Location     Type
 20160 ;;		None
 20161 ;; Auto vars:     Size  Location     Type
 20162 ;;		None
 20163 ;; Return value:  Size  Location     Type
 20164 ;;                  1    wreg      void 
 20165 ;; Registers used:
 20166 ;;		None
 20167 ;; Tracked objects:
 20168 ;;		On entry : 3F/1
 20169 ;;		On exit  : 3F/1
 20170 ;;		Unchanged: 3F/0
 20171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20176 ;;Total ram usage:        0 bytes
 20177 ;; Hardware stack levels used: 1
 20178 ;; Hardware stack levels required when called: 3
 20179 ;; This function calls:
 20180 ;;		Nothing
 20181 ;; This function is called by:
 20182 ;;		_UART1_Initialize
 20183 ;;		_UART1_Receive_ISR
 20184 ;; This function uses a non-reentrant model
 20185 ;;
 20186                           
 20187                           	psect	text116
 20188  014F22                     __ptext116:
 20189                           	callstack 0
 20190  014F22                     _UART1_DefaultOverrunErrorHandler:
 20191                           	callstack 16
 20192                           
 20193                           ; BSR set to: 1
 20194                           
 20195                           ;incstack = 0
 20196  014F22  0012               	return		;funcret
 20197  014F24                     __end_of_UART1_DefaultOverrunErrorHandler:
 20198                           	callstack 0
 20199                           
 20200 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
 20201 ;; Defined at:
 20202 ;;		line 329 in file "mcc_generated_files/uart1.c"
 20203 ;; Parameters:    Size  Location     Type
 20204 ;;		None
 20205 ;; Auto vars:     Size  Location     Type
 20206 ;;		None
 20207 ;; Return value:  Size  Location     Type
 20208 ;;                  1    wreg      void 
 20209 ;; Registers used:
 20210 ;;		None
 20211 ;; Tracked objects:
 20212 ;;		On entry : 3F/1
 20213 ;;		On exit  : 3F/1
 20214 ;;		Unchanged: 3F/0
 20215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20220 ;;Total ram usage:        0 bytes
 20221 ;; Hardware stack levels used: 1
 20222 ;; Hardware stack levels required when called: 3
 20223 ;; This function calls:
 20224 ;;		Nothing
 20225 ;; This function is called by:
 20226 ;;		_UART1_Initialize
 20227 ;;		_UART1_Receive_ISR
 20228 ;; This function uses a non-reentrant model
 20229 ;;
 20230                           
 20231                           	psect	text117
 20232  014F24                     __ptext117:
 20233                           	callstack 0
 20234  014F24                     _UART1_DefaultFramingErrorHandler:
 20235                           	callstack 16
 20236                           
 20237                           ; BSR set to: 1
 20238                           
 20239                           ; BSR set to: 1
 20240                           ;incstack = 0
 20241  014F24  0012               	return		;funcret
 20242  014F26                     __end_of_UART1_DefaultFramingErrorHandler:
 20243                           	callstack 0
 20244                           
 20245 ;; *************** function _UART1_DefaultErrorHandler *****************
 20246 ;; Defined at:
 20247 ;;		line 333 in file "mcc_generated_files/uart1.c"
 20248 ;; Parameters:    Size  Location     Type
 20249 ;;		None
 20250 ;; Auto vars:     Size  Location     Type
 20251 ;;		None
 20252 ;; Return value:  Size  Location     Type
 20253 ;;                  1    wreg      void 
 20254 ;; Registers used:
 20255 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20256 ;; Tracked objects:
 20257 ;;		On entry : 3F/1
 20258 ;;		On exit  : 0/0
 20259 ;;		Unchanged: 0/0
 20260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20265 ;;Total ram usage:        0 bytes
 20266 ;; Hardware stack levels used: 1
 20267 ;; Hardware stack levels required when called: 4
 20268 ;; This function calls:
 20269 ;;		_UART1_RxDataHandler
 20270 ;; This function is called by:
 20271 ;;		_UART1_Initialize
 20272 ;;		_UART1_Receive_ISR
 20273 ;; This function uses a non-reentrant model
 20274 ;;
 20275                           
 20276                           	psect	text118
 20277  014F0E                     __ptext118:
 20278                           	callstack 0
 20279  014F0E                     _UART1_DefaultErrorHandler:
 20280                           	callstack 15
 20281                           
 20282                           ; BSR set to: 1
 20283                           ;mcc_generated_files/uart1.c: 334:     UART1_RxDataHandler();
 20284                           
 20285                           ; BSR set to: 1
 20286                           ;incstack = 0
 20287  014F0E  ECEF  F0A5         	call	_UART1_RxDataHandler	;wreg free
 20288  014F12  0012               	return		;funcret
 20289  014F14                     __end_of_UART1_DefaultErrorHandler:
 20290                           	callstack 0
 20291                           
 20292 ;; *************** function _UART1_RxDataHandler *****************
 20293 ;; Defined at:
 20294 ;;		line 319 in file "mcc_generated_files/uart1.c"
 20295 ;; Parameters:    Size  Location     Type
 20296 ;;		None
 20297 ;; Auto vars:     Size  Location     Type
 20298 ;;		None
 20299 ;; Return value:  Size  Location     Type
 20300 ;;                  1    wreg      void 
 20301 ;; Registers used:
 20302 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20303 ;; Tracked objects:
 20304 ;;		On entry : 0/3D
 20305 ;;		On exit  : 0/0
 20306 ;;		Unchanged: 0/0
 20307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20312 ;;Total ram usage:        0 bytes
 20313 ;; Hardware stack levels used: 1
 20314 ;; Hardware stack levels required when called: 3
 20315 ;; This function calls:
 20316 ;;		Nothing
 20317 ;; This function is called by:
 20318 ;;		_UART1_Receive_ISR
 20319 ;;		_UART1_DefaultErrorHandler
 20320 ;; This function uses a non-reentrant model
 20321 ;;
 20322                           
 20323                           	psect	text119
 20324  014BDE                     __ptext119:
 20325                           	callstack 0
 20326  014BDE                     _UART1_RxDataHandler:
 20327                           	callstack 16
 20328                           
 20329                           ;mcc_generated_files/uart1.c: 321:     uart1RxBuffer[uart1RxHead++] = U1RXB;
 20330                           
 20331                           ;incstack = 0
 20332  014BDE  0E00               	movlw	low _uart1RxBuffer
 20333  014BE0  243B               	addwf	_uart1RxHead^0,w,c	;volatile
 20334  014BE2  6ED9               	movwf	fsr2l,c
 20335  014BE4  6ADA               	clrf	fsr2h,c
 20336  014BE6  0E03               	movlw	high _uart1RxBuffer
 20337  014BE8  22DA               	addwfc	fsr2h,f,c
 20338  014BEA  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 20339  014BF0  2A3B               	incf	_uart1RxHead^0,f,c	;volatile
 20340                           
 20341                           ;mcc_generated_files/uart1.c: 322:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 20342  014BF2  0E3F               	movlw	63
 20343  014BF4  643B               	cpfsgt	_uart1RxHead^0,c
 20344  014BF6  D002               	goto	i1l9765
 20345                           
 20346                           ;mcc_generated_files/uart1.c: 323:     {;mcc_generated_files/uart1.c: 324:         uart1
      +                          RxHead = 0;
 20347  014BF8  0E00               	movlw	0
 20348  014BFA  6E3B               	movwf	_uart1RxHead^0,c	;volatile
 20349  014BFC                     i1l9765:
 20350                           
 20351                           ;mcc_generated_files/uart1.c: 326:     uart1RxCount++;
 20352  014BFC  2A39               	incf	_uart1RxCount^0,f,c	;volatile
 20353  014BFE  0012               	return		;funcret
 20354  014C00                     __end_of_UART1_RxDataHandler:
 20355                           	callstack 0
 20356                           
 20357 ;; *************** function _ADCC_ISR *****************
 20358 ;; Defined at:
 20359 ;;		line 307 in file "mcc_generated_files/adcc.c"
 20360 ;; Parameters:    Size  Location     Type
 20361 ;;		None
 20362 ;; Auto vars:     Size  Location     Type
 20363 ;;		None
 20364 ;; Return value:  Size  Location     Type
 20365 ;;                  1    wreg      void 
 20366 ;; Registers used:
 20367 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 20368 ;; Tracked objects:
 20369 ;;		On entry : 0/0
 20370 ;;		On exit  : 0/0
 20371 ;;		Unchanged: 0/0
 20372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20375 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20376 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20377 ;;Total ram usage:        2 bytes
 20378 ;; Hardware stack levels used: 1
 20379 ;; Hardware stack levels required when called: 2
 20380 ;; This function calls:
 20381 ;;		Absolute function
 20382 ;;		_ADCC_DefaultInterruptHandler
 20383 ;;		_Adc_Isr
 20384 ;; This function is called by:
 20385 ;;		Interrupt level 2
 20386 ;; This function uses a non-reentrant model
 20387 ;;
 20388                           
 20389                           	psect	text120
 20390  014524                     __ptext120:
 20391                           	callstack 0
 20392  014524                     _ADCC_ISR:
 20393                           	callstack 15
 20394                           
 20395                           ;incstack = 0
 20396  014524  006F FFE8  F009    	movff	pclath,??_ADCC_ISR
 20397  01452A  006F FFEC  F00A    	movff	pclatu,??_ADCC_ISR+1
 20398                           
 20399                           ;mcc_generated_files/adcc.c: 310:     PIR1bits.ADIF = 0;
 20400  014530  0139               	movlb	57	; () banked
 20401  014532  95A1               	bcf	161,2,b	;volatile
 20402                           
 20403                           ; BSR set to: 57
 20404                           ;mcc_generated_files/adcc.c: 312:     if (ADCC_ADI_InterruptHandler)
 20405  014534  0101               	movlb	1	; () banked
 20406  014536  513E               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 20407  014538  113F               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 20408  01453A  1140               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 20409  01453C  B4D8               	btfsc	status,2,c
 20410  01453E  D00C               	goto	i2u671_49
 20411                           
 20412                           ; BSR set to: 1
 20413                           ;mcc_generated_files/adcc.c: 313:             ADCC_ADI_InterruptHandler();
 20414  014540  D801               	call	i2u671_48
 20415  014542  D00A               	goto	i2u671_49
 20416  014544                     i2u671_48:
 20417  014544  0005               	push	
 20418  014546  6EFA               	movwf	pclath,c
 20419  014548  513E               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 20420  01454A  6EFD               	movwf	tosl,c
 20421  01454C  513F               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 20422  01454E  6EFE               	movwf	tosh,c
 20423  014550  5140               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 20424  014552  6EFF               	movwf	tosu,c
 20425  014554  50FA               	movf	pclath,w,c
 20426  014556  0012               	return		;indir
 20427  014558                     i2u671_49:
 20428  014558  0060  F02B  FFFB   	movff	??_ADCC_ISR+1,pclatu
 20429  01455E  0060  F027  FFFA   	movff	??_ADCC_ISR,pclath
 20430  014564  0011               	retfie		f
 20431  014566                     __end_of_ADCC_ISR:
 20432                           	callstack 0
 20433                           
 20434 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 20435 ;; Defined at:
 20436 ;;		line 320 in file "mcc_generated_files/adcc.c"
 20437 ;; Parameters:    Size  Location     Type
 20438 ;;		None
 20439 ;; Auto vars:     Size  Location     Type
 20440 ;;		None
 20441 ;; Return value:  Size  Location     Type
 20442 ;;                  1    wreg      void 
 20443 ;; Registers used:
 20444 ;;		None
 20445 ;; Tracked objects:
 20446 ;;		On entry : 3F/1
 20447 ;;		On exit  : 3F/1
 20448 ;;		Unchanged: 3F/0
 20449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20454 ;;Total ram usage:        0 bytes
 20455 ;; Hardware stack levels used: 1
 20456 ;; This function calls:
 20457 ;;		Nothing
 20458 ;; This function is called by:
 20459 ;;		_ADCC_Initialize
 20460 ;;		_ADCC_ISR
 20461 ;; This function uses a non-reentrant model
 20462 ;;
 20463                           
 20464                           	psect	text121
 20465  014F26                     __ptext121:
 20466                           	callstack 0
 20467  014F26                     _ADCC_DefaultInterruptHandler:
 20468                           	callstack 16
 20469                           
 20470                           ; BSR set to: 1
 20471                           
 20472                           ;incstack = 0
 20473  014F26  0012               	return		;funcret
 20474  014F28                     __end_of_ADCC_DefaultInterruptHandler:
 20475                           	callstack 0
 20476                           
 20477 ;; *************** function _Adc_Isr *****************
 20478 ;; Defined at:
 20479 ;;		line 109 in file "main.c"
 20480 ;; Parameters:    Size  Location     Type
 20481 ;;		None
 20482 ;; Auto vars:     Size  Location     Type
 20483 ;;		None
 20484 ;; Return value:  Size  Location     Type
 20485 ;;                  1    wreg      void 
 20486 ;; Registers used:
 20487 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20488 ;; Tracked objects:
 20489 ;;		On entry : 3F/1
 20490 ;;		On exit  : 3F/0
 20491 ;;		Unchanged: 0/0
 20492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20495 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20496 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20497 ;;Total ram usage:        4 bytes
 20498 ;; Hardware stack levels used: 1
 20499 ;; Hardware stack levels required when called: 1
 20500 ;; This function calls:
 20501 ;;		_ADCC_GetConversionResult
 20502 ;; This function is called by:
 20503 ;;		_main
 20504 ;;		_ADCC_ISR
 20505 ;; This function uses a non-reentrant model
 20506 ;;
 20507                           
 20508                           	psect	text122
 20509  01330A                     __ptext122:
 20510                           	callstack 0
 20511  01330A                     _Adc_Isr:
 20512                           	callstack 15
 20513                           
 20514                           ; BSR set to: 1
 20515                           ;main.c: 111:  static adcc_channel_t c_adc_chan = PS_V_ANA;;main.c: 113:  a[a_index].ana
      +                          [c_adc_chan] = ADCC_GetConversionResult();
 20516                           
 20517                           ; BSR set to: 1
 20518                           ;incstack = 0
 20519  01330A  ECD6  F0A6         	call	_ADCC_GetConversionResult	;wreg free
 20520  01330E  5033               	movf	Adc_Isr@c_adc_chan^0,w,c
 20521  013310  0D02               	mullw	2
 20522  013312  006F FFCC  F005    	movff	prodl,??_Adc_Isr
 20523  013318  006F FFD0  F006    	movff	prodh,??_Adc_Isr+1
 20524  01331E  5037               	movf	_a_index^0,w,c	;volatile
 20525  013320  0D7E               	mullw	126
 20526  013322  0E83               	movlw	low _a
 20527  013324  6E07               	movwf	(??_Adc_Isr+2)^0,c
 20528  013326  0E05               	movlw	high _a
 20529  013328  6E08               	movwf	(??_Adc_Isr+3)^0,c
 20530  01332A  50F3               	movf	243,w,c
 20531  01332C  2607               	addwf	(??_Adc_Isr+2)^0,f,c
 20532  01332E  50F4               	movf	244,w,c
 20533  013330  2208               	addwfc	(??_Adc_Isr+3)^0,f,c
 20534  013332  5005               	movf	??_Adc_Isr^0,w,c
 20535  013334  2407               	addwf	(??_Adc_Isr+2)^0,w,c
 20536  013336  6ED9               	movwf	fsr2l,c
 20537  013338  5006               	movf	(??_Adc_Isr+1)^0,w,c
 20538  01333A  2008               	addwfc	(??_Adc_Isr+3)^0,w,c
 20539  01333C  6EDA               	movwf	fsr2h,c
 20540  01333E  0060  F007  FFDE   	movff	?_ADCC_GetConversionResult,postinc2
 20541  013344  0060  F00B  FFDD   	movff	?_ADCC_GetConversionResult+1,postdec2
 20542                           
 20543                           ;main.c: 114:  a[i_index].ana[c_adc_chan] = ADCC_GetConversionResult();
 20544  01334A  ECD6  F0A6         	call	_ADCC_GetConversionResult	;wreg free
 20545  01334E  5033               	movf	Adc_Isr@c_adc_chan^0,w,c
 20546  013350  0D02               	mullw	2
 20547  013352  006F FFCC  F005    	movff	prodl,??_Adc_Isr
 20548  013358  006F FFD0  F006    	movff	prodh,??_Adc_Isr+1
 20549  01335E  5036               	movf	_i_index^0,w,c	;volatile
 20550  013360  0D7E               	mullw	126
 20551  013362  0E83               	movlw	low _a
 20552  013364  6E07               	movwf	(??_Adc_Isr+2)^0,c
 20553  013366  0E05               	movlw	high _a
 20554  013368  6E08               	movwf	(??_Adc_Isr+3)^0,c
 20555  01336A  50F3               	movf	243,w,c
 20556  01336C  2607               	addwf	(??_Adc_Isr+2)^0,f,c
 20557  01336E  50F4               	movf	244,w,c
 20558  013370  2208               	addwfc	(??_Adc_Isr+3)^0,f,c
 20559  013372  5005               	movf	??_Adc_Isr^0,w,c
 20560  013374  2407               	addwf	(??_Adc_Isr+2)^0,w,c
 20561  013376  6ED9               	movwf	fsr2l,c
 20562  013378  5006               	movf	(??_Adc_Isr+1)^0,w,c
 20563  01337A  2008               	addwfc	(??_Adc_Isr+3)^0,w,c
 20564  01337C  6EDA               	movwf	fsr2h,c
 20565  01337E  0060  F007  FFDE   	movff	?_ADCC_GetConversionResult,postinc2
 20566  013384  0060  F00B  FFDD   	movff	?_ADCC_GetConversionResult+1,postdec2
 20567                           
 20568                           ;main.c: 119:  switch (c_adc_chan) {
 20569  01338A  D014               	goto	i2l7703
 20570  01338C                     i2l7683:
 20571                           
 20572                           ; BSR set to: 62
 20573                           ;main.c: 121:   c_adc_chan = PS_I_ANA;
 20574  01338C  0E01               	movlw	1
 20575  01338E  D005               	goto	L19
 20576  013390                     i2l7685:
 20577                           
 20578                           ; BSR set to: 62
 20579                           ;main.c: 124:   c_adc_chan = channel_DAC1;
 20580  013390  0E3D               	movlw	61
 20581  013392  D003               	goto	L19
 20582  013394                     i2l7687:
 20583                           
 20584                           ; BSR set to: 62
 20585                           ;main.c: 127:   c_adc_chan = PWM5_ANA;
 20586  013394  0E28               	movlw	40
 20587  013396  D001               	goto	L19
 20588  013398                     i2l7689:
 20589                           
 20590                           ; BSR set to: 62
 20591                           ;main.c: 130:   c_adc_chan = PWM6_ANA;
 20592  013398  0E29               	movlw	41
 20593  01339A                     L19:
 20594  01339A  6E33               	movwf	Adc_Isr@c_adc_chan^0,c
 20595                           
 20596                           ;main.c: 131:   break;
 20597  01339C  D023               	goto	i2l1265
 20598  01339E                     i2l7691:
 20599                           
 20600                           ; BSR set to: 62
 20601                           ;main.c: 134:   c_adc_chan = PS_V_ANA;
 20602  01339E  0E00               	movlw	0
 20603  0133A0  6E33               	movwf	Adc_Isr@c_adc_chan^0,c
 20604                           
 20605                           ; BSR set to: 62
 20606                           ;main.c: 135:   if (mode != roll_mode) {
 20607  0133A2  0435               	decf	_mode^0,w,c
 20608  0133A4  A4D8               	btfss	status,2,c
 20609                           
 20610                           ; BSR set to: 62
 20611                           ;main.c: 136:    i_index++;
 20612  0133A6  2A36               	incf	_i_index^0,f,c	;volatile
 20613                           
 20614                           ; BSR set to: 62
 20615                           ;main.c: 138:   if (i_index >= 32) {
 20616  0133A8  0E1F               	movlw	31
 20617  0133AA  6436               	cpfsgt	_i_index^0,c	;volatile
 20618  0133AC  D01B               	goto	i2l1265
 20619                           
 20620                           ; BSR set to: 62
 20621                           ;main.c: 139:    i_index = 0;
 20622  0133AE  0E00               	movlw	0
 20623  0133B0  6E36               	movwf	_i_index^0,c	;volatile
 20624  0133B2  D018               	goto	i2l1265
 20625  0133B4                     i2l7703:
 20626                           
 20627                           ; BSR set to: 62
 20628  0133B4  5033               	movf	Adc_Isr@c_adc_chan^0,w,c
 20629  0133B6  6E05               	movwf	??_Adc_Isr^0,c
 20630  0133B8  6A06               	clrf	(??_Adc_Isr+1)^0,c
 20631                           
 20632                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20633                           ; Switch size 1, requested type "simple"
 20634                           ; Number of cases is 1, Range of values is 0 to 0
 20635                           ; switch strategies available:
 20636                           ; Name         Instructions Cycles
 20637                           ; simple_byte            4     3 (average)
 20638                           ;	Chosen strategy is simple_byte
 20639  0133BA  5006               	movf	(??_Adc_Isr+1)^0,w,c
 20640  0133BC  0A00               	xorlw	0	; case 0
 20641  0133BE  A4D8               	btfss	status,2,c
 20642  0133C0  D7EE               	goto	i2l7691
 20643                           
 20644                           ; BSR set to: 62
 20645                           ; Switch size 1, requested type "simple"
 20646                           ; Number of cases is 5, Range of values is 0 to 61
 20647                           ; switch strategies available:
 20648                           ; Name         Instructions Cycles
 20649                           ; simple_byte           16     9 (average)
 20650                           ;	Chosen strategy is simple_byte
 20651  0133C2  5005               	movf	??_Adc_Isr^0,w,c
 20652  0133C4  0A00               	xorlw	0	; case 0
 20653  0133C6  B4D8               	btfsc	status,2,c
 20654  0133C8  D7E1               	goto	i2l7683
 20655  0133CA  0A01               	xorlw	1	; case 1
 20656  0133CC  B4D8               	btfsc	status,2,c
 20657  0133CE  D7E0               	goto	i2l7685
 20658  0133D0  0A29               	xorlw	41	; case 40
 20659  0133D2  B4D8               	btfsc	status,2,c
 20660  0133D4  D7E1               	goto	i2l7689
 20661  0133D6  0A01               	xorlw	1	; case 41
 20662  0133D8  B4D8               	btfsc	status,2,c
 20663  0133DA  D7E1               	goto	i2l7691
 20664  0133DC  0A14               	xorlw	20	; case 61
 20665  0133DE  B4D8               	btfsc	status,2,c
 20666  0133E0  D7D9               	goto	i2l7687
 20667  0133E2  D7DD               	goto	i2l7691
 20668  0133E4                     i2l1265:
 20669                           
 20670                           ; BSR set to: 62
 20671                           ;main.c: 143:  ADPCH = c_adc_chan;
 20672  0133E4  0060  F0CF  FEF1   	movff	Adc_Isr@c_adc_chan,16113	;volatile
 20673                           
 20674                           ; BSR set to: 62
 20675                           ;main.c: 147:  adc_tick = 1;
 20676  0133EA  0E01               	movlw	1
 20677  0133EC  0100               	movlb	0	; () banked
 20678  0133EE  6FFB               	movwf	_adc_tick& (0+255),b	;volatile
 20679                           
 20680                           ; BSR set to: 0
 20681  0133F0  0012               	return		;funcret
 20682  0133F2                     __end_of_Adc_Isr:
 20683                           	callstack 0
 20684                           
 20685 ;; *************** function _ADCC_GetConversionResult *****************
 20686 ;; Defined at:
 20687 ;;		line 139 in file "mcc_generated_files/adcc.c"
 20688 ;; Parameters:    Size  Location     Type
 20689 ;;		None
 20690 ;; Auto vars:     Size  Location     Type
 20691 ;;		None
 20692 ;; Return value:  Size  Location     Type
 20693 ;;                  2    0[COMRAM] unsigned short 
 20694 ;; Registers used:
 20695 ;;		wreg, status,2, status,0
 20696 ;; Tracked objects:
 20697 ;;		On entry : 0/1
 20698 ;;		On exit  : 3F/3E
 20699 ;;		Unchanged: 0/0
 20700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20701 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20703 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20704 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20705 ;;Total ram usage:        4 bytes
 20706 ;; Hardware stack levels used: 1
 20707 ;; This function calls:
 20708 ;;		Nothing
 20709 ;; This function is called by:
 20710 ;;		_Adc_Isr
 20711 ;; This function uses a non-reentrant model
 20712 ;;
 20713                           
 20714                           	psect	text123
 20715  014DAC                     __ptext123:
 20716                           	callstack 0
 20717  014DAC                     _ADCC_GetConversionResult:
 20718                           	callstack 15
 20719                           
 20720                           ;mcc_generated_files/adcc.c: 142:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 20721                           
 20722                           ; BSR set to: 0
 20723                           ;incstack = 0
 20724  014DAC  013E               	movlb	62	; () banked
 20725  014DAE  51F0               	movf	240,w,b	;volatile
 20726  014DB0  6E04               	movwf	(??_ADCC_GetConversionResult+1)^0,c
 20727  014DB2  6A03               	clrf	??_ADCC_GetConversionResult^0,c
 20728  014DB4  51EF               	movf	239,w,b	;volatile
 20729  014DB6  2403               	addwf	??_ADCC_GetConversionResult^0,w,c
 20730  014DB8  6E01               	movwf	?_ADCC_GetConversionResult^0,c
 20731  014DBA  0E00               	movlw	0
 20732  014DBC  2004               	addwfc	(??_ADCC_GetConversionResult+1)^0,w,c
 20733  014DBE  6E02               	movwf	(?_ADCC_GetConversionResult+1)^0,c
 20734                           
 20735                           ; BSR set to: 62
 20736  014DC0  0012               	return		;funcret
 20737  014DC2                     __end_of_ADCC_GetConversionResult:
 20738                           	callstack 0
 20739                           
 20740 ;; *************** function _TMR6_ISR *****************
 20741 ;; Defined at:
 20742 ;;		line 166 in file "mcc_generated_files/tmr6.c"
 20743 ;; Parameters:    Size  Location     Type
 20744 ;;		None
 20745 ;; Auto vars:     Size  Location     Type
 20746 ;;		None
 20747 ;; Return value:  Size  Location     Type
 20748 ;;                  1    wreg      void 
 20749 ;; Registers used:
 20750 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 20751 ;; Tracked objects:
 20752 ;;		On entry : 0/0
 20753 ;;		On exit  : 0/0
 20754 ;;		Unchanged: 0/0
 20755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20758 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20759 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20760 ;;Total ram usage:        2 bytes
 20761 ;; Hardware stack levels used: 1
 20762 ;; Hardware stack levels required when called: 2
 20763 ;; This function calls:
 20764 ;;		_TMR6_CallBack
 20765 ;; This function is called by:
 20766 ;;		Interrupt level 2
 20767 ;; This function uses a non-reentrant model
 20768 ;;
 20769                           
 20770                           	psect	text124
 20771  01488C                     __ptext124:
 20772                           	callstack 0
 20773  01488C                     _TMR6_ISR:
 20774                           	callstack 15
 20775                           
 20776                           ; BSR set to: 62
 20777                           ;incstack = 0
 20778  01488C  006F FFE8  F00C    	movff	pclath,??_TMR6_ISR
 20779  014892  006F FFEC  F00D    	movff	pclatu,??_TMR6_ISR+1
 20780                           
 20781                           ;mcc_generated_files/tmr6.c: 168:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr6.c: 171:     PIR9bits.TMR6IF = 0;
 20782  014898  0139               	movlb	57	; () banked
 20783  01489A  91A9               	bcf	169,0,b	;volatile
 20784                           
 20785                           ; BSR set to: 57
 20786                           ;mcc_generated_files/tmr6.c: 174:     if (++CountCallBack >= 23)
 20787  01489C  4A31               	infsnz	TMR6_ISR@CountCallBack^0,f,c	;volatile
 20788  01489E  2A32               	incf	(TMR6_ISR@CountCallBack+1)^0,f,c	;volatile
 20789  0148A0  5032               	movf	(TMR6_ISR@CountCallBack+1)^0,w,c	;volatile
 20790  0148A2  E104               	bnz	i2u672_40
 20791  0148A4  0E17               	movlw	23
 20792  0148A6  5C31               	subwf	TMR6_ISR@CountCallBack^0,w,c	;volatile
 20793  0148A8  A0D8               	btfss	status,0,c
 20794  0148AA  D006               	goto	i2l481
 20795  0148AC                     i2u672_40:
 20796                           
 20797                           ; BSR set to: 57
 20798                           ;mcc_generated_files/tmr6.c: 175:     {;mcc_generated_files/tmr6.c: 177:         TMR6_Ca
      +                          llBack();
 20799  0148AC  EC98  F0A5         	call	_TMR6_CallBack	;wreg free
 20800                           
 20801                           ;mcc_generated_files/tmr6.c: 180:         CountCallBack = 0;
 20802  0148B0  0E00               	movlw	0
 20803  0148B2  6E32               	movwf	(TMR6_ISR@CountCallBack+1)^0,c	;volatile
 20804  0148B4  0E00               	movlw	0
 20805  0148B6  6E31               	movwf	TMR6_ISR@CountCallBack^0,c	;volatile
 20806  0148B8                     i2l481:
 20807  0148B8  0060  F037  FFFB   	movff	??_TMR6_ISR+1,pclatu
 20808  0148BE  0060  F033  FFFA   	movff	??_TMR6_ISR,pclath
 20809  0148C4  0011               	retfie		f
 20810  0148C6                     __end_of_TMR6_ISR:
 20811                           	callstack 0
 20812                           
 20813 ;; *************** function _TMR6_CallBack *****************
 20814 ;; Defined at:
 20815 ;;		line 184 in file "mcc_generated_files/tmr6.c"
 20816 ;; Parameters:    Size  Location     Type
 20817 ;;		None
 20818 ;; Auto vars:     Size  Location     Type
 20819 ;;		None
 20820 ;; Return value:  Size  Location     Type
 20821 ;;                  1    wreg      void 
 20822 ;; Registers used:
 20823 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 20824 ;; Tracked objects:
 20825 ;;		On entry : 3F/39
 20826 ;;		On exit  : 0/0
 20827 ;;		Unchanged: 0/0
 20828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20833 ;;Total ram usage:        0 bytes
 20834 ;; Hardware stack levels used: 1
 20835 ;; Hardware stack levels required when called: 1
 20836 ;; This function calls:
 20837 ;;		Absolute function
 20838 ;;		_Led_Blink
 20839 ;;		_TMR6_DefaultInterruptHandler
 20840 ;; This function is called by:
 20841 ;;		_TMR6_ISR
 20842 ;; This function uses a non-reentrant model
 20843 ;;
 20844                           
 20845                           	psect	text125
 20846  014B30                     __ptext125:
 20847                           	callstack 0
 20848  014B30                     _TMR6_CallBack:
 20849                           	callstack 15
 20850                           
 20851                           ; BSR set to: 57
 20852                           ;mcc_generated_files/tmr6.c: 188:     if(TMR6_InterruptHandler)
 20853                           
 20854                           ;incstack = 0
 20855  014B30  0101               	movlb	1	; () banked
 20856  014B32  513B               	movf	_TMR6_InterruptHandler& (0+255),w,b
 20857  014B34  113C               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 20858  014B36  113D               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 20859  014B38  B4D8               	btfsc	status,2,c
 20860  014B3A  0012               	return	
 20861                           
 20862                           ; BSR set to: 1
 20863                           ;mcc_generated_files/tmr6.c: 189:     {;mcc_generated_files/tmr6.c: 190:         TMR6_In
      +                          terruptHandler();
 20864  014B3C  D801               	call	i2u640_48
 20865  014B3E  0012               	return	
 20866  014B40                     i2u640_48:
 20867  014B40  0005               	push	
 20868  014B42  6EFA               	movwf	pclath,c
 20869  014B44  513B               	movf	_TMR6_InterruptHandler& (0+255),w,b
 20870  014B46  6EFD               	movwf	tosl,c
 20871  014B48  513C               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 20872  014B4A  6EFE               	movwf	tosh,c
 20873  014B4C  513D               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 20874  014B4E  6EFF               	movwf	tosu,c
 20875  014B50  50FA               	movf	pclath,w,c
 20876  014B52  0012               	return		;indir
 20877  014B54                     __end_of_TMR6_CallBack:
 20878                           	callstack 0
 20879                           
 20880 ;; *************** function _Led_Blink *****************
 20881 ;; Defined at:
 20882 ;;		line 93 in file "main.c"
 20883 ;; Parameters:    Size  Location     Type
 20884 ;;		None
 20885 ;; Auto vars:     Size  Location     Type
 20886 ;;		None
 20887 ;; Return value:  Size  Location     Type
 20888 ;;                  1    wreg      void 
 20889 ;; Registers used:
 20890 ;;		wreg, status,2, status,0
 20891 ;; Tracked objects:
 20892 ;;		On entry : 3F/1
 20893 ;;		On exit  : 3F/0
 20894 ;;		Unchanged: 0/0
 20895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20898 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20899 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20900 ;;Total ram usage:        1 bytes
 20901 ;; Hardware stack levels used: 1
 20902 ;; This function calls:
 20903 ;;		Nothing
 20904 ;; This function is called by:
 20905 ;;		_main
 20906 ;;		_TMR6_CallBack
 20907 ;; This function uses a non-reentrant model
 20908 ;;
 20909                           
 20910                           	psect	text126
 20911  014C20                     __ptext126:
 20912                           	callstack 0
 20913  014C20                     _Led_Blink:
 20914                           	callstack 15
 20915                           
 20916                           ; BSR set to: 1
 20917                           
 20918                           ; BSR set to: 1
 20919                           
 20920                           ;incstack = 0
 20921                           ;main.c: 95:  do { LATEbits.LATE0 = ~LATEbits.LATE0; } while(0);
 20922  014C20  A0BE               	btfss	190,0,c	;volatile
 20923  014C22  D002               	goto	i2u628_40
 20924  014C24  0E01               	movlw	1
 20925  014C26  D001               	goto	i2u628_46
 20926  014C28                     i2u628_40:
 20927  014C28  0E00               	movlw	0
 20928  014C2A                     i2u628_46:
 20929  014C2A  0AFF               	xorlw	255
 20930  014C2C  6E0B               	movwf	??_Led_Blink^0,c
 20931  014C2E  50BE               	movf	190,w,c	;volatile
 20932  014C30  180B               	xorwf	??_Led_Blink^0,w,c
 20933  014C32  0BFE               	andlw	-2
 20934  014C34  180B               	xorwf	??_Led_Blink^0,w,c
 20935  014C36  6EBE               	movwf	190,c	;volatile
 20936                           
 20937                           ; BSR set to: 1
 20938                           ;main.c: 99:  disp_tick = 1;
 20939  014C38  0E01               	movlw	1
 20940  014C3A  0100               	movlb	0	; () banked
 20941  014C3C  6FFC               	movwf	_disp_tick& (0+255),b	;volatile
 20942                           
 20943                           ; BSR set to: 0
 20944  014C3E  0012               	return		;funcret
 20945  014C40                     __end_of_Led_Blink:
 20946                           	callstack 0
 20947                           
 20948 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 20949 ;; Defined at:
 20950 ;;		line 198 in file "mcc_generated_files/tmr6.c"
 20951 ;; Parameters:    Size  Location     Type
 20952 ;;		None
 20953 ;; Auto vars:     Size  Location     Type
 20954 ;;		None
 20955 ;; Return value:  Size  Location     Type
 20956 ;;                  1    wreg      void 
 20957 ;; Registers used:
 20958 ;;		None
 20959 ;; Tracked objects:
 20960 ;;		On entry : 3F/1
 20961 ;;		On exit  : 3F/1
 20962 ;;		Unchanged: 3F/0
 20963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20968 ;;Total ram usage:        0 bytes
 20969 ;; Hardware stack levels used: 1
 20970 ;; This function calls:
 20971 ;;		Nothing
 20972 ;; This function is called by:
 20973 ;;		_TMR6_Initialize
 20974 ;;		_TMR6_CallBack
 20975 ;; This function uses a non-reentrant model
 20976 ;;
 20977                           
 20978                           	psect	text127
 20979  014F28                     __ptext127:
 20980                           	callstack 0
 20981  014F28                     _TMR6_DefaultInterruptHandler:
 20982                           	callstack 15
 20983                           
 20984                           ; BSR set to: 1
 20985                           
 20986                           ; BSR set to: 0
 20987                           ;incstack = 0
 20988  014F28  0012               	return		;funcret
 20989  014F2A                     __end_of_TMR6_DefaultInterruptHandler:
 20990                           	callstack 0
 20991                           
 20992 ;; *************** function _Default_ISR *****************
 20993 ;; Defined at:
 20994 ;;		line 82 in file "mcc_generated_files/interrupt_manager.c"
 20995 ;; Parameters:    Size  Location     Type
 20996 ;;		None
 20997 ;; Auto vars:     Size  Location     Type
 20998 ;;		None
 20999 ;; Return value:  Size  Location     Type
 21000 ;;                  1    wreg      void 
 21001 ;; Registers used:
 21002 ;;		None
 21003 ;; Tracked objects:
 21004 ;;		On entry : 0/0
 21005 ;;		On exit  : 0/0
 21006 ;;		Unchanged: 0/0
 21007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21012 ;;Total ram usage:        0 bytes
 21013 ;; Hardware stack levels used: 1
 21014 ;; This function calls:
 21015 ;;		Nothing
 21016 ;; This function is called by:
 21017 ;;		Interrupt level 2
 21018 ;; This function uses a non-reentrant model
 21019 ;;
 21020                           
 21021                           	psect	text128
 21022  014F2C                     __ptext128:
 21023                           	callstack 0
 21024  014F2C                     _Default_ISR:
 21025                           	callstack 17
 21026                           
 21027                           ; BSR set to: 1
 21028                           ;incstack = 0
 21029  014F2C  0011               	retfie		f
 21030  014F2E                     __end_of_Default_ISR:
 21031                           	callstack 0
 21032                           
 21033 ;; *************** function _TMR5_ISR *****************
 21034 ;; Defined at:
 21035 ;;		line 165 in file "mcc_generated_files/tmr5.c"
 21036 ;; Parameters:    Size  Location     Type
 21037 ;;		None
 21038 ;; Auto vars:     Size  Location     Type
 21039 ;;		None
 21040 ;; Return value:  Size  Location     Type
 21041 ;;                  1    wreg      void 
 21042 ;; Registers used:
 21043 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 21044 ;; Tracked objects:
 21045 ;;		On entry : 0/0
 21046 ;;		On exit  : 0/0
 21047 ;;		Unchanged: 0/0
 21048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21051 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21052 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21053 ;;Total ram usage:        2 bytes
 21054 ;; Hardware stack levels used: 1
 21055 ;; Hardware stack levels required when called: 1
 21056 ;; This function calls:
 21057 ;;		Absolute function
 21058 ;;		_TMR5_DefaultInterruptHandler
 21059 ;;		_TMR5_WriteTimer
 21060 ;;		_Timers_Isr
 21061 ;; This function is called by:
 21062 ;;		Interrupt level 2
 21063 ;; This function uses a non-reentrant model
 21064 ;;
 21065                           
 21066                           	psect	text129
 21067  01432C                     __ptext129:
 21068                           	callstack 0
 21069  01432C                     _TMR5_ISR:
 21070                           	callstack 16
 21071                           
 21072                           ;incstack = 0
 21073  01432C  006F FFE8  F012    	movff	pclath,??_TMR5_ISR
 21074  014332  006F FFEC  F013    	movff	pclatu,??_TMR5_ISR+1
 21075                           
 21076                           ;mcc_generated_files/tmr5.c: 169:     PIR8bits.TMR5IF = 0;
 21077  014338  0139               	movlb	57	; () banked
 21078  01433A  9DA8               	bcf	168,6,b	;volatile
 21079                           
 21080                           ; BSR set to: 57
 21081                           ;mcc_generated_files/tmr5.c: 170:     TMR5_WriteTimer(timer5ReloadVal);
 21082  01433C  C02F  F00E         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 21083  014340  C030  F00F         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 21084  014344  ECAA  F0A5         	call	_TMR5_WriteTimer	;wreg free
 21085                           
 21086                           ; BSR set to: 57
 21087                           ;mcc_generated_files/tmr5.c: 172:     if(TMR5_InterruptHandler)
 21088  014348  0101               	movlb	1	; () banked
 21089  01434A  5138               	movf	_TMR5_InterruptHandler& (0+255),w,b
 21090  01434C  1139               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 21091  01434E  113A               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 21092  014350  B4D8               	btfsc	status,2,c
 21093  014352  D00C               	goto	i2u674_49
 21094                           
 21095                           ; BSR set to: 1
 21096                           ;mcc_generated_files/tmr5.c: 173:     {;mcc_generated_files/tmr5.c: 174:         TMR5_In
      +                          terruptHandler();
 21097  014354  D801               	call	i2u674_48
 21098  014356  D00A               	goto	i2u674_49
 21099  014358                     i2u674_48:
 21100  014358  0005               	push	
 21101  01435A  6EFA               	movwf	pclath,c
 21102  01435C  5138               	movf	_TMR5_InterruptHandler& (0+255),w,b
 21103  01435E  6EFD               	movwf	tosl,c
 21104  014360  5139               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 21105  014362  6EFE               	movwf	tosh,c
 21106  014364  513A               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 21107  014366  6EFF               	movwf	tosu,c
 21108  014368  50FA               	movf	pclath,w,c
 21109  01436A  0012               	return		;indir
 21110  01436C                     i2u674_49:
 21111  01436C  0060  F04F  FFFB   	movff	??_TMR5_ISR+1,pclatu
 21112  014372  0060  F04B  FFFA   	movff	??_TMR5_ISR,pclath
 21113  014378  0011               	retfie		f
 21114  01437A                     __end_of_TMR5_ISR:
 21115                           	callstack 0
 21116                           
 21117 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 21118 ;; Defined at:
 21119 ;;		line 183 in file "mcc_generated_files/tmr5.c"
 21120 ;; Parameters:    Size  Location     Type
 21121 ;;		None
 21122 ;; Auto vars:     Size  Location     Type
 21123 ;;		None
 21124 ;; Return value:  Size  Location     Type
 21125 ;;                  1    wreg      void 
 21126 ;; Registers used:
 21127 ;;		None
 21128 ;; Tracked objects:
 21129 ;;		On entry : 3F/1
 21130 ;;		On exit  : 3F/1
 21131 ;;		Unchanged: 3F/0
 21132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21137 ;;Total ram usage:        0 bytes
 21138 ;; Hardware stack levels used: 1
 21139 ;; This function calls:
 21140 ;;		Nothing
 21141 ;; This function is called by:
 21142 ;;		_TMR5_Initialize
 21143 ;;		_TMR5_ISR
 21144 ;; This function uses a non-reentrant model
 21145 ;;
 21146                           
 21147                           	psect	text130
 21148  014F2E                     __ptext130:
 21149                           	callstack 0
 21150  014F2E                     _TMR5_DefaultInterruptHandler:
 21151                           	callstack 16
 21152                           
 21153                           ; BSR set to: 1
 21154                           
 21155                           ;incstack = 0
 21156  014F2E  0012               	return		;funcret
 21157  014F30                     __end_of_TMR5_DefaultInterruptHandler:
 21158                           	callstack 0
 21159                           
 21160 ;; *************** function _Timers_Isr *****************
 21161 ;; Defined at:
 21162 ;;		line 48 in file "timers.c"
 21163 ;; Parameters:    Size  Location     Type
 21164 ;;		None
 21165 ;; Auto vars:     Size  Location     Type
 21166 ;;  i               2   15[COMRAM] int 
 21167 ;; Return value:  Size  Location     Type
 21168 ;;                  1    wreg      void 
 21169 ;; Registers used:
 21170 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21171 ;; Tracked objects:
 21172 ;;		On entry : 3F/1
 21173 ;;		On exit  : 3F/1
 21174 ;;		Unchanged: 3F/0
 21175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21177 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21178 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21179 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21180 ;;Total ram usage:        4 bytes
 21181 ;; Hardware stack levels used: 1
 21182 ;; This function calls:
 21183 ;;		Nothing
 21184 ;; This function is called by:
 21185 ;;		_main
 21186 ;;		_TMR5_ISR
 21187 ;; This function uses a non-reentrant model
 21188 ;;
 21189                           
 21190                           	psect	text131
 21191  0141A0                     __ptext131:
 21192                           	callstack 0
 21193  0141A0                     _Timers_Isr:
 21194                           	callstack 16
 21195                           
 21196                           ; BSR set to: 1
 21197                           ;timers.c: 51:  for (int i = 0; i < TMR_COUNT; i++) {
 21198                           
 21199                           ; BSR set to: 1
 21200                           ;incstack = 0
 21201  0141A0  0E00               	movlw	0
 21202  0141A2  6E11               	movwf	(Timers_Isr@i+1)^0,c
 21203  0141A4  0E00               	movlw	0
 21204  0141A6  6E10               	movwf	Timers_Isr@i^0,c
 21205  0141A8                     i2l7877:
 21206                           
 21207                           ; BSR set to: 1
 21208                           ;timers.c: 52:   if (tickCount[i] != 0) {
 21209  0141A8  90D8               	bcf	status,0,c
 21210  0141AA  3410               	rlcf	Timers_Isr@i^0,w,c
 21211  0141AC  6ED9               	movwf	fsr2l,c
 21212  0141AE  3411               	rlcf	(Timers_Isr@i+1)^0,w,c
 21213  0141B0  6EDA               	movwf	fsr2h,c
 21214  0141B2  0E0C               	movlw	low _tickCount
 21215  0141B4  26D9               	addwf	fsr2l,f,c
 21216  0141B6  0E01               	movlw	high _tickCount
 21217  0141B8  22DA               	addwfc	fsr2h,f,c
 21218  0141BA  50DE               	movf	postinc2,w,c
 21219  0141BC  10DE               	iorwf	postinc2,w,c
 21220  0141BE  B4D8               	btfsc	status,2,c
 21221  0141C0  D00C               	goto	i2l7881
 21222                           
 21223                           ; BSR set to: 1
 21224                           ;timers.c: 53:    tickCount[i]--;
 21225  0141C2  90D8               	bcf	status,0,c
 21226  0141C4  3410               	rlcf	Timers_Isr@i^0,w,c
 21227  0141C6  6ED9               	movwf	fsr2l,c
 21228  0141C8  3411               	rlcf	(Timers_Isr@i+1)^0,w,c
 21229  0141CA  6EDA               	movwf	fsr2h,c
 21230  0141CC  0E0C               	movlw	low _tickCount
 21231  0141CE  26D9               	addwf	fsr2l,f,c
 21232  0141D0  0E01               	movlw	high _tickCount
 21233  0141D2  22DA               	addwfc	fsr2h,f,c
 21234  0141D4  06DE               	decf	postinc2,f,c
 21235  0141D6  0E00               	movlw	0
 21236  0141D8  5ADD               	subwfb	postdec2,f,c
 21237  0141DA                     i2l7881:
 21238                           
 21239                           ; BSR set to: 1
 21240                           ;timers.c: 55:  }
 21241  0141DA  4A10               	infsnz	Timers_Isr@i^0,f,c
 21242  0141DC  2A11               	incf	(Timers_Isr@i+1)^0,f,c
 21243                           
 21244                           ; BSR set to: 1
 21245  0141DE  BE11               	btfsc	(Timers_Isr@i+1)^0,7,c
 21246  0141E0  D7E3               	goto	i2l7877
 21247  0141E2  5011               	movf	(Timers_Isr@i+1)^0,w,c
 21248  0141E4  E105               	bnz	i2u659_40
 21249  0141E6  0E06               	movlw	6
 21250  0141E8  5C10               	subwf	Timers_Isr@i^0,w,c
 21251  0141EA  B0D8               	btfsc	status,0,c
 21252  0141EC  0012               	return	
 21253  0141EE  D7DC               	goto	i2l7877
 21254  0141F0                     i2u659_40:
 21255                           
 21256                           ; BSR set to: 1
 21257  0141F0  0012               	return		;funcret
 21258  0141F2                     __end_of_Timers_Isr:
 21259                           	callstack 0
 21260                           
 21261 ;; *************** function _TMR5_WriteTimer *****************
 21262 ;; Defined at:
 21263 ;;		line 128 in file "mcc_generated_files/tmr5.c"
 21264 ;; Parameters:    Size  Location     Type
 21265 ;;  timerVal        2   13[COMRAM] unsigned short 
 21266 ;; Auto vars:     Size  Location     Type
 21267 ;;		None
 21268 ;; Return value:  Size  Location     Type
 21269 ;;                  1    wreg      void 
 21270 ;; Registers used:
 21271 ;;		None
 21272 ;; Tracked objects:
 21273 ;;		On entry : 3F/39
 21274 ;;		On exit  : 3F/39
 21275 ;;		Unchanged: 3E/0
 21276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21277 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21280 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21281 ;;Total ram usage:        2 bytes
 21282 ;; Hardware stack levels used: 1
 21283 ;; This function calls:
 21284 ;;		Nothing
 21285 ;; This function is called by:
 21286 ;;		_TMR5_ISR
 21287 ;; This function uses a non-reentrant model
 21288 ;;
 21289                           
 21290                           	psect	text132
 21291  014B54                     __ptext132:
 21292                           	callstack 0
 21293  014B54                     _TMR5_WriteTimer:
 21294                           	callstack 16
 21295                           
 21296                           ; BSR set to: 57
 21297                           ;mcc_generated_files/tmr5.c: 128: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 129: {;mcc_generated_files/tmr5.c: 130:     if (T5CONbits.NOT_SYNC == 1)
 21298                           
 21299                           ; BSR set to: 1
 21300                           ;incstack = 0
 21301  014B54  A49A               	btfss	154,2,c	;volatile
 21302  014B56  D009               	goto	i2l576
 21303                           
 21304                           ; BSR set to: 57
 21305                           ;mcc_generated_files/tmr5.c: 131:     {;mcc_generated_files/tmr5.c: 133:         T5CONbi
      +                          ts.TMR5ON = 0;
 21306  014B58  909A               	bcf	154,0,c	;volatile
 21307                           
 21308                           ;mcc_generated_files/tmr5.c: 136:         TMR5H = (uint8_t)(timerVal >> 8);
 21309  014B5A  0060  F03F  FF99   	movff	TMR5_WriteTimer@timerVal+1,16281	;volatile
 21310                           
 21311                           ;mcc_generated_files/tmr5.c: 137:         TMR5L = (uint8_t)timerVal;
 21312  014B60  0060  F03B  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 21313                           
 21314                           ;mcc_generated_files/tmr5.c: 140:         T5CONbits.TMR5ON =1;
 21315  014B66  809A               	bsf	154,0,c	;volatile
 21316                           
 21317                           ;mcc_generated_files/tmr5.c: 141:     }
 21318  014B68  0012               	return	
 21319  014B6A                     i2l576:
 21320                           
 21321                           ; BSR set to: 57
 21322                           ;mcc_generated_files/tmr5.c: 143:     {;mcc_generated_files/tmr5.c: 145:         TMR5H =
      +                           (uint8_t)(timerVal >> 8);
 21323  014B6A  0060  F03F  FF99   	movff	TMR5_WriteTimer@timerVal+1,16281	;volatile
 21324                           
 21325                           ;mcc_generated_files/tmr5.c: 146:         TMR5L = (uint8_t)timerVal;
 21326  014B70  0060  F03B  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 21327                           
 21328                           ; BSR set to: 57
 21329  014B76  0012               	return		;funcret
 21330  014B78                     __end_of_TMR5_WriteTimer:
 21331                           	callstack 0
 21332                           
 21333 ;; *************** function _DMA1_DMASCNTI_ISR *****************
 21334 ;; Defined at:
 21335 ;;		line 170 in file "mcc_generated_files/dma1.c"
 21336 ;; Parameters:    Size  Location     Type
 21337 ;;		None
 21338 ;; Auto vars:     Size  Location     Type
 21339 ;;		None
 21340 ;; Return value:  Size  Location     Type
 21341 ;;                  1    wreg      void 
 21342 ;; Registers used:
 21343 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 21344 ;; Tracked objects:
 21345 ;;		On entry : 0/0
 21346 ;;		On exit  : 0/0
 21347 ;;		Unchanged: 0/0
 21348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21351 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21352 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21353 ;;Total ram usage:        2 bytes
 21354 ;; Hardware stack levels used: 1
 21355 ;; Hardware stack levels required when called: 1
 21356 ;; This function calls:
 21357 ;;		Absolute function
 21358 ;;		_DMA1_DefaultInterruptHandler
 21359 ;;		_source_dma_done
 21360 ;; This function is called by:
 21361 ;;		Interrupt level 2
 21362 ;; This function uses a non-reentrant model
 21363 ;;
 21364                           
 21365                           	psect	text133
 21366  014568                     __ptext133:
 21367                           	callstack 0
 21368  014568                     _DMA1_DMASCNTI_ISR:
 21369                           	callstack 16
 21370                           
 21371                           ; BSR set to: 57
 21372                           ;incstack = 0
 21373  014568  006F FFE8  F014    	movff	pclath,??_DMA1_DMASCNTI_ISR
 21374  01456E  006F FFEC  F015    	movff	pclatu,??_DMA1_DMASCNTI_ISR+1
 21375                           
 21376                           ;mcc_generated_files/dma1.c: 173:     PIR2bits.DMA1SCNTIF = 0;
 21377  014574  0139               	movlb	57	; () banked
 21378  014576  91A2               	bcf	162,0,b	;volatile
 21379                           
 21380                           ; BSR set to: 57
 21381                           ;mcc_generated_files/dma1.c: 175:     if (DMA1_SCNTI_InterruptHandler)
 21382  014578  0101               	movlb	1	; () banked
 21383  01457A  5135               	movf	_DMA1_SCNTI_InterruptHandler& (0+255),w,b
 21384  01457C  1136               	iorwf	(_DMA1_SCNTI_InterruptHandler+1)& (0+255),w,b
 21385  01457E  1137               	iorwf	(_DMA1_SCNTI_InterruptHandler+2)& (0+255),w,b
 21386  014580  B4D8               	btfsc	status,2,c
 21387  014582  D00C               	goto	i2u676_49
 21388                           
 21389                           ; BSR set to: 1
 21390                           ;mcc_generated_files/dma1.c: 176:             DMA1_SCNTI_InterruptHandler();
 21391  014584  D801               	call	i2u676_48
 21392  014586  D00A               	goto	i2u676_49
 21393  014588                     i2u676_48:
 21394  014588  0005               	push	
 21395  01458A  6EFA               	movwf	pclath,c
 21396  01458C  5135               	movf	_DMA1_SCNTI_InterruptHandler& (0+255),w,b
 21397  01458E  6EFD               	movwf	tosl,c
 21398  014590  5136               	movf	(_DMA1_SCNTI_InterruptHandler+1)& (0+255),w,b
 21399  014592  6EFE               	movwf	tosh,c
 21400  014594  5137               	movf	(_DMA1_SCNTI_InterruptHandler+2)& (0+255),w,b
 21401  014596  6EFF               	movwf	tosu,c
 21402  014598  50FA               	movf	pclath,w,c
 21403  01459A  0012               	return		;indir
 21404  01459C                     i2u676_49:
 21405  01459C  0060  F057  FFFB   	movff	??_DMA1_DMASCNTI_ISR+1,pclatu
 21406  0145A2  0060  F053  FFFA   	movff	??_DMA1_DMASCNTI_ISR,pclath
 21407  0145A8  0011               	retfie		f
 21408  0145AA                     __end_of_DMA1_DMASCNTI_ISR:
 21409                           	callstack 0
 21410                           
 21411 ;; *************** function _DMA1_DefaultInterruptHandler *****************
 21412 ;; Defined at:
 21413 ;;		line 184 in file "mcc_generated_files/dma1.c"
 21414 ;; Parameters:    Size  Location     Type
 21415 ;;		None
 21416 ;; Auto vars:     Size  Location     Type
 21417 ;;		None
 21418 ;; Return value:  Size  Location     Type
 21419 ;;                  1    wreg      void 
 21420 ;; Registers used:
 21421 ;;		None
 21422 ;; Tracked objects:
 21423 ;;		On entry : 3F/1
 21424 ;;		On exit  : 3F/1
 21425 ;;		Unchanged: 3F/0
 21426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21431 ;;Total ram usage:        0 bytes
 21432 ;; Hardware stack levels used: 1
 21433 ;; This function calls:
 21434 ;;		Nothing
 21435 ;; This function is called by:
 21436 ;;		_DMA1_Initialize
 21437 ;;		_DMA1_DMASCNTI_ISR
 21438 ;; This function uses a non-reentrant model
 21439 ;;
 21440                           
 21441                           	psect	text134
 21442  014F30                     __ptext134:
 21443                           	callstack 0
 21444  014F30                     _DMA1_DefaultInterruptHandler:
 21445                           	callstack 16
 21446                           
 21447                           ; BSR set to: 1
 21448                           
 21449                           ;incstack = 0
 21450  014F30  0012               	return		;funcret
 21451  014F32                     __end_of_DMA1_DefaultInterruptHandler:
 21452                           	callstack 0
 21453                           
 21454 ;; *************** function _source_dma_done *****************
 21455 ;; Defined at:
 21456 ;;		line 304 in file "eadog.c"
 21457 ;; Parameters:    Size  Location     Type
 21458 ;;		None
 21459 ;; Auto vars:     Size  Location     Type
 21460 ;;		None
 21461 ;; Return value:  Size  Location     Type
 21462 ;;                  1    wreg      void 
 21463 ;; Registers used:
 21464 ;;		None
 21465 ;; Tracked objects:
 21466 ;;		On entry : 3F/1
 21467 ;;		On exit  : 3F/1
 21468 ;;		Unchanged: 0/0
 21469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21474 ;;Total ram usage:        0 bytes
 21475 ;; Hardware stack levels used: 1
 21476 ;; This function calls:
 21477 ;;		Nothing
 21478 ;; This function is called by:
 21479 ;;		_main
 21480 ;;		_DMA1_DMASCNTI_ISR
 21481 ;; This function uses a non-reentrant model
 21482 ;;
 21483                           
 21484                           	psect	text135
 21485  014F1A                     __ptext135:
 21486                           	callstack 0
 21487  014F1A                     _source_dma_done:
 21488                           	callstack 16
 21489                           
 21490                           ; BSR set to: 1
 21491                           ;eadog.c: 306:  spi_link.LCD_DATA = 0;
 21492                           
 21493                           ; BSR set to: 1
 21494                           ;incstack = 0
 21495  014F1A  9700               	bcf	_spi_link& (0+255),3,b	;volatile
 21496                           
 21497                           ; BSR set to: 1
 21498  014F1C  0012               	return		;funcret
 21499  014F1E                     __end_of_source_dma_done:
 21500                           	callstack 0
 21501                           
 21502 ;; *************** function _UART1_framing_err_vect_isr *****************
 21503 ;; Defined at:
 21504 ;;		line 259 in file "mcc_generated_files/uart1.c"
 21505 ;; Parameters:    Size  Location     Type
 21506 ;;		None
 21507 ;; Auto vars:     Size  Location     Type
 21508 ;;		None
 21509 ;; Return value:  Size  Location     Type
 21510 ;;                  1    wreg      void 
 21511 ;; Registers used:
 21512 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 21513 ;; Tracked objects:
 21514 ;;		On entry : 0/0
 21515 ;;		On exit  : 0/0
 21516 ;;		Unchanged: 0/0
 21517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21520 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21521 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21522 ;;Total ram usage:        2 bytes
 21523 ;; Hardware stack levels used: 1
 21524 ;; Hardware stack levels required when called: 1
 21525 ;; This function calls:
 21526 ;;		Absolute function
 21527 ;;		_UART1_FramingError_ISR
 21528 ;; This function is called by:
 21529 ;;		Interrupt level 2
 21530 ;; This function uses a non-reentrant model
 21531 ;;
 21532                           
 21533                           	psect	text136
 21534  0147A0                     __ptext136:
 21535                           	callstack 0
 21536  0147A0                     _UART1_framing_err_vect_isr:
 21537                           	callstack 16
 21538                           
 21539                           ; BSR set to: 1
 21540                           ;incstack = 0
 21541  0147A0  006F FFE8  F016    	movff	pclath,??_UART1_framing_err_vect_isr
 21542  0147A6  006F FFEC  F017    	movff	pclatu,??_UART1_framing_err_vect_isr+1
 21543                           
 21544                           ;mcc_generated_files/uart1.c: 261:     if(UART1_FramingErrorInterruptHandler)
 21545  0147AC  5024               	movf	_UART1_FramingErrorInterruptHandler^0,w,c
 21546  0147AE  1025               	iorwf	(_UART1_FramingErrorInterruptHandler+1)^0,w,c
 21547  0147B0  1026               	iorwf	(_UART1_FramingErrorInterruptHandler+2)^0,w,c
 21548  0147B2  B4D8               	btfsc	status,2,c
 21549  0147B4  D00C               	goto	i2u333_49
 21550                           
 21551                           ;mcc_generated_files/uart1.c: 262:     {;mcc_generated_files/uart1.c: 263:         UART1
      +                          _FramingErrorInterruptHandler();
 21552  0147B6  D801               	call	i2u333_48
 21553  0147B8  D00A               	goto	i2u333_49
 21554  0147BA                     i2u333_48:
 21555  0147BA  0005               	push	
 21556  0147BC  6EFA               	movwf	pclath,c
 21557  0147BE  5024               	movf	_UART1_FramingErrorInterruptHandler^0,w,c
 21558  0147C0  6EFD               	movwf	tosl,c
 21559  0147C2  5025               	movf	(_UART1_FramingErrorInterruptHandler+1)^0,w,c
 21560  0147C4  6EFE               	movwf	tosh,c
 21561  0147C6  5026               	movf	(_UART1_FramingErrorInterruptHandler+2)^0,w,c
 21562  0147C8  6EFF               	movwf	tosu,c
 21563  0147CA  50FA               	movf	pclath,w,c
 21564  0147CC  0012               	return		;indir
 21565  0147CE                     i2u333_49:
 21566  0147CE  0060  F05F  FFFB   	movff	??_UART1_framing_err_vect_isr+1,pclatu
 21567  0147D4  0060  F05B  FFFA   	movff	??_UART1_framing_err_vect_isr,pclath
 21568  0147DA  0011               	retfie		f
 21569  0147DC                     __end_of_UART1_framing_err_vect_isr:
 21570                           	callstack 0
 21571                           
 21572 ;; *************** function _UART1_FramingError_ISR *****************
 21573 ;; Defined at:
 21574 ;;		line 349 in file "mcc_generated_files/uart1.c"
 21575 ;; Parameters:    Size  Location     Type
 21576 ;;		None
 21577 ;; Auto vars:     Size  Location     Type
 21578 ;;		None
 21579 ;; Return value:  Size  Location     Type
 21580 ;;                  1    wreg      void 
 21581 ;; Registers used:
 21582 ;;		wreg, status,2
 21583 ;; Tracked objects:
 21584 ;;		On entry : 0/0
 21585 ;;		On exit  : 3F/3D
 21586 ;;		Unchanged: 0/0
 21587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21592 ;;Total ram usage:        0 bytes
 21593 ;; Hardware stack levels used: 1
 21594 ;; This function calls:
 21595 ;;		Nothing
 21596 ;; This function is called by:
 21597 ;;		_UART1_Initialize
 21598 ;;		_UART1_framing_err_vect_isr
 21599 ;; This function uses a non-reentrant model
 21600 ;;
 21601                           
 21602                           	psect	text137
 21603  014EF4                     __ptext137:
 21604                           	callstack 0
 21605  014EF4                     _UART1_FramingError_ISR:
 21606                           	callstack 16
 21607                           
 21608                           ;mcc_generated_files/uart1.c: 352:     U1ERRIR = 0;
 21609                           
 21610                           ;incstack = 0
 21611  014EF4  0E00               	movlw	0
 21612  014EF6  013D               	movlb	61	; () banked
 21613  014EF8  6FF9               	movwf	249,b	;volatile
 21614                           
 21615                           ; BSR set to: 61
 21616  014EFA  0012               	return		;funcret
 21617  014EFC                     __end_of_UART1_FramingError_ISR:
 21618                           	callstack 0
 21619                           
 21620 ;; *************** function _UART1_vect_isr *****************
 21621 ;; Defined at:
 21622 ;;		line 267 in file "mcc_generated_files/uart1.c"
 21623 ;; Parameters:    Size  Location     Type
 21624 ;;		None
 21625 ;; Auto vars:     Size  Location     Type
 21626 ;;		None
 21627 ;; Return value:  Size  Location     Type
 21628 ;;                  1    wreg      void 
 21629 ;; Registers used:
 21630 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 21631 ;; Tracked objects:
 21632 ;;		On entry : 0/0
 21633 ;;		On exit  : 0/0
 21634 ;;		Unchanged: 0/0
 21635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21638 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21639 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21640 ;;Total ram usage:        2 bytes
 21641 ;; Hardware stack levels used: 1
 21642 ;; Hardware stack levels required when called: 1
 21643 ;; This function calls:
 21644 ;;		Absolute function
 21645 ;;		_UART1_UartInterrupt_ISR
 21646 ;; This function is called by:
 21647 ;;		Interrupt level 2
 21648 ;; This function uses a non-reentrant model
 21649 ;;
 21650                           
 21651                           	psect	text138
 21652  0147DC                     __ptext138:
 21653                           	callstack 0
 21654  0147DC                     _UART1_vect_isr:
 21655                           	callstack 16
 21656                           
 21657                           ; BSR set to: 61
 21658                           ;incstack = 0
 21659  0147DC  006F FFE8  F018    	movff	pclath,??_UART1_vect_isr
 21660  0147E2  006F FFEC  F019    	movff	pclatu,??_UART1_vect_isr+1
 21661                           
 21662                           ;mcc_generated_files/uart1.c: 269:     if(UART1_UARTInterruptHandler)
 21663  0147E8  5021               	movf	_UART1_UARTInterruptHandler^0,w,c
 21664  0147EA  1022               	iorwf	(_UART1_UARTInterruptHandler+1)^0,w,c
 21665  0147EC  1023               	iorwf	(_UART1_UARTInterruptHandler+2)^0,w,c
 21666  0147EE  B4D8               	btfsc	status,2,c
 21667  0147F0  D00C               	goto	i2u335_49
 21668                           
 21669                           ;mcc_generated_files/uart1.c: 270:     {;mcc_generated_files/uart1.c: 271:         UART1
      +                          _UARTInterruptHandler();
 21670  0147F2  D801               	call	i2u335_48
 21671  0147F4  D00A               	goto	i2u335_49
 21672  0147F6                     i2u335_48:
 21673  0147F6  0005               	push	
 21674  0147F8  6EFA               	movwf	pclath,c
 21675  0147FA  5021               	movf	_UART1_UARTInterruptHandler^0,w,c
 21676  0147FC  6EFD               	movwf	tosl,c
 21677  0147FE  5022               	movf	(_UART1_UARTInterruptHandler+1)^0,w,c
 21678  014800  6EFE               	movwf	tosh,c
 21679  014802  5023               	movf	(_UART1_UARTInterruptHandler+2)^0,w,c
 21680  014804  6EFF               	movwf	tosu,c
 21681  014806  50FA               	movf	pclath,w,c
 21682  014808  0012               	return		;indir
 21683  01480A                     i2u335_49:
 21684  01480A  0060  F067  FFFB   	movff	??_UART1_vect_isr+1,pclatu
 21685  014810  0060  F063  FFFA   	movff	??_UART1_vect_isr,pclath
 21686  014816  0011               	retfie		f
 21687  014818                     __end_of_UART1_vect_isr:
 21688                           	callstack 0
 21689                           
 21690 ;; *************** function _UART1_UartInterrupt_ISR *****************
 21691 ;; Defined at:
 21692 ;;		line 358 in file "mcc_generated_files/uart1.c"
 21693 ;; Parameters:    Size  Location     Type
 21694 ;;		None
 21695 ;; Auto vars:     Size  Location     Type
 21696 ;;		None
 21697 ;; Return value:  Size  Location     Type
 21698 ;;                  1    wreg      void 
 21699 ;; Registers used:
 21700 ;;		None
 21701 ;; Tracked objects:
 21702 ;;		On entry : 0/0
 21703 ;;		On exit  : 3F/3D
 21704 ;;		Unchanged: 0/0
 21705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21710 ;;Total ram usage:        0 bytes
 21711 ;; Hardware stack levels used: 1
 21712 ;; This function calls:
 21713 ;;		Nothing
 21714 ;; This function is called by:
 21715 ;;		_UART1_Initialize
 21716 ;;		_UART1_vect_isr
 21717 ;; This function uses a non-reentrant model
 21718 ;;
 21719                           
 21720                           	psect	text139
 21721  014F14                     __ptext139:
 21722                           	callstack 0
 21723  014F14                     _UART1_UartInterrupt_ISR:
 21724                           	callstack 16
 21725                           
 21726                           ;mcc_generated_files/uart1.c: 361:     U1UIRbits.WUIF = 0;
 21727                           
 21728                           ;incstack = 0
 21729  014F14  013D               	movlb	61	; () banked
 21730  014F16  9FF8               	bcf	248,7,b	;volatile
 21731                           
 21732                           ; BSR set to: 61
 21733  014F18  0012               	return		;funcret
 21734  014F1A                     __end_of_UART1_UartInterrupt_ISR:
 21735                           	callstack 0
 21736                           
 21737                           ;
 21738                           ; Interrupt Vector Table @ 0x8
 21739                           ;
 21740                           
 21741                           	psect	ivt0x8
 21742  000008                     __pivt0x8:
 21743                           	callstack 0
 21744  000008                     ivt0x8_base:
 21745                           	callstack 0
 21746                           
 21747                           ; Vector 0 : SWINT
 21748  000008  53CB               	dw	_Default_ISR shr (0+2)
 21749                           
 21750                           ; Vector 1 : HLVD
 21751  00000A  53CB               	dw	_Default_ISR shr (0+2)
 21752                           
 21753                           ; Vector 2 : OSF
 21754  00000C  53CB               	dw	_Default_ISR shr (0+2)
 21755                           
 21756                           ; Vector 3 : CSW
 21757  00000E  53CB               	dw	_Default_ISR shr (0+2)
 21758                           
 21759                           ; Vector 4 : NVM
 21760  000010  53CB               	dw	_Default_ISR shr (0+2)
 21761                           
 21762                           ; Vector 5 : SCAN
 21763  000012  53CB               	dw	_Default_ISR shr (0+2)
 21764                           
 21765                           ; Vector 6 : CRC
 21766  000014  53CB               	dw	_Default_ISR shr (0+2)
 21767                           
 21768                           ; Vector 7 : IOC
 21769  000016  53CB               	dw	_Default_ISR shr (0+2)
 21770                           
 21771                           ; Vector 8 : INT0
 21772  000018  53CB               	dw	_Default_ISR shr (0+2)
 21773                           
 21774                           ; Vector 9 : ZCD
 21775  00001A  53CB               	dw	_Default_ISR shr (0+2)
 21776                           
 21777                           ; Vector 10 : AD
 21778  00001C  5149               	dw	_ADCC_ISR shr (0+2)
 21779                           
 21780                           ; Vector 11 : ADT
 21781  00001E  53CB               	dw	_Default_ISR shr (0+2)
 21782                           
 21783                           ; Vector 12 : CMP1
 21784  000020  53CB               	dw	_Default_ISR shr (0+2)
 21785                           
 21786                           ; Vector 13 : SMT1
 21787  000022  53CB               	dw	_Default_ISR shr (0+2)
 21788                           
 21789                           ; Vector 14 : SMT1PRA
 21790  000024  53CB               	dw	_Default_ISR shr (0+2)
 21791                           
 21792                           ; Vector 15 : SMT1PRW
 21793  000026  53CB               	dw	_Default_ISR shr (0+2)
 21794                           
 21795                           ; Vector 16 : DMA1SCNT
 21796  000028  515A               	dw	_DMA1_DMASCNTI_ISR shr (0+2)
 21797                           
 21798                           ; Vector 17 : DMA1DCNT
 21799  00002A  53CB               	dw	_Default_ISR shr (0+2)
 21800                           
 21801                           ; Vector 18 : DMA1OR
 21802  00002C  53CB               	dw	_Default_ISR shr (0+2)
 21803                           
 21804                           ; Vector 19 : DMA1A
 21805  00002E  53CB               	dw	_Default_ISR shr (0+2)
 21806                           
 21807                           ; Vector 20 : SPI1RX
 21808  000030  53CB               	dw	_Default_ISR shr (0+2)
 21809                           
 21810                           ; Vector 21 : SPI1TX
 21811  000032  53CB               	dw	_Default_ISR shr (0+2)
 21812                           
 21813                           ; Vector 22 : SPI1
 21814  000034  53CB               	dw	_Default_ISR shr (0+2)
 21815                           
 21816                           ; Vector 23 : I2C1RX
 21817  000036  53CB               	dw	_Default_ISR shr (0+2)
 21818                           
 21819                           ; Vector 24 : I2C1TX
 21820  000038  53CB               	dw	_Default_ISR shr (0+2)
 21821                           
 21822                           ; Vector 25 : I2C1
 21823  00003A  53CB               	dw	_Default_ISR shr (0+2)
 21824                           
 21825                           ; Vector 26 : I2C1E
 21826  00003C  53CB               	dw	_Default_ISR shr (0+2)
 21827                           
 21828                           ; Vector 27 : U1RX
 21829  00003E  5115               	dw	_UART1_rx_vect_isr shr (0+2)
 21830                           
 21831                           ; Vector 28 : U1TX
 21832  000040  5103               	dw	_UART1_tx_vect_isr shr (0+2)
 21833                           
 21834                           ; Vector 29 : U1E
 21835  000042  51E8               	dw	_UART1_framing_err_vect_isr shr (0+2)
 21836                           
 21837                           ; Vector 30 : U1
 21838  000044  51F7               	dw	_UART1_vect_isr shr (0+2)
 21839                           
 21840                           ; Vector 31 : TMR0
 21841  000046  53CB               	dw	_Default_ISR shr (0+2)
 21842                           
 21843                           ; Vector 32 : TMR1
 21844  000048  53CB               	dw	_Default_ISR shr (0+2)
 21845                           
 21846                           ; Vector 33 : TMR1G
 21847  00004A  53CB               	dw	_Default_ISR shr (0+2)
 21848                           
 21849                           ; Vector 34 : TMR2
 21850  00004C  53CB               	dw	_Default_ISR shr (0+2)
 21851                           
 21852                           ; Vector 35 : CCP1
 21853  00004E  53CB               	dw	_Default_ISR shr (0+2)
 21854                           
 21855                           ; Vector 36 : Undefined
 21856  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 21857                           
 21858                           ; Vector 37 : NCO1
 21859  000052  53CB               	dw	_Default_ISR shr (0+2)
 21860                           
 21861                           ; Vector 38 : CWG1
 21862  000054  53CB               	dw	_Default_ISR shr (0+2)
 21863                           
 21864                           ; Vector 39 : CLC1
 21865  000056  53CB               	dw	_Default_ISR shr (0+2)
 21866                           
 21867                           ; Vector 40 : INT1
 21868  000058  53CB               	dw	_Default_ISR shr (0+2)
 21869                           
 21870                           ; Vector 41 : CMP2
 21871  00005A  53CB               	dw	_Default_ISR shr (0+2)
 21872                           
 21873                           ; Vector 42 : DMA2SCNT
 21874  00005C  53CB               	dw	_Default_ISR shr (0+2)
 21875                           
 21876                           ; Vector 43 : DMA2DCNT
 21877  00005E  53CB               	dw	_Default_ISR shr (0+2)
 21878                           
 21879                           ; Vector 44 : DMA2OR
 21880  000060  53CB               	dw	_Default_ISR shr (0+2)
 21881                           
 21882                           ; Vector 45 : DMA2A
 21883  000062  53CB               	dw	_Default_ISR shr (0+2)
 21884                           
 21885                           ; Vector 46 : I2C2RX
 21886  000064  53CB               	dw	_Default_ISR shr (0+2)
 21887                           
 21888                           ; Vector 47 : I2C2TX
 21889  000066  53CB               	dw	_Default_ISR shr (0+2)
 21890                           
 21891                           ; Vector 48 : I2C2
 21892  000068  53CB               	dw	_Default_ISR shr (0+2)
 21893                           
 21894                           ; Vector 49 : I2C2E
 21895  00006A  53CB               	dw	_Default_ISR shr (0+2)
 21896                           
 21897                           ; Vector 50 : U2RX
 21898  00006C  53CB               	dw	_Default_ISR shr (0+2)
 21899                           
 21900                           ; Vector 51 : U2TX
 21901  00006E  53CB               	dw	_Default_ISR shr (0+2)
 21902                           
 21903                           ; Vector 52 : U2E
 21904  000070  53CB               	dw	_Default_ISR shr (0+2)
 21905                           
 21906                           ; Vector 53 : U2
 21907  000072  53CB               	dw	_Default_ISR shr (0+2)
 21908                           
 21909                           ; Vector 54 : TMR3
 21910  000074  53CB               	dw	_Default_ISR shr (0+2)
 21911                           
 21912                           ; Vector 55 : TMR3G
 21913  000076  53CB               	dw	_Default_ISR shr (0+2)
 21914                           
 21915                           ; Vector 56 : TMR4
 21916  000078  53CB               	dw	_Default_ISR shr (0+2)
 21917                           
 21918                           ; Vector 57 : CCP2
 21919  00007A  53CB               	dw	_Default_ISR shr (0+2)
 21920                           
 21921                           ; Vector 58 : Undefined
 21922  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 21923                           
 21924                           ; Vector 59 : CWG2
 21925  00007E  53CB               	dw	_Default_ISR shr (0+2)
 21926                           
 21927                           ; Vector 60 : CLC2
 21928  000080  53CB               	dw	_Default_ISR shr (0+2)
 21929                           
 21930                           ; Vector 61 : INT2
 21931  000082  53CB               	dw	_Default_ISR shr (0+2)
 21932                           
 21933                           ; Vector 62 : Undefined
 21934  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 21935                           
 21936                           ; Vector 63 : Undefined
 21937  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 21938                           
 21939                           ; Vector 64 : Undefined
 21940  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 21941                           
 21942                           ; Vector 65 : Undefined
 21943  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 21944                           
 21945                           ; Vector 66 : Undefined
 21946  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 21947                           
 21948                           ; Vector 67 : Undefined
 21949  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 21950                           
 21951                           ; Vector 68 : Undefined
 21952  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 21953                           
 21954                           ; Vector 69 : Undefined
 21955  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 21956                           
 21957                           ; Vector 70 : TMR5
 21958  000094  50CB               	dw	_TMR5_ISR shr (0+2)
 21959                           
 21960                           ; Vector 71 : TMR5G
 21961  000096  53CB               	dw	_Default_ISR shr (0+2)
 21962                           
 21963                           ; Vector 72 : TMR6
 21964  000098  5223               	dw	_TMR6_ISR shr (0+2)
 21965                           
 21966                           ; Vector 73 : CCP3
 21967  00009A  53CB               	dw	_Default_ISR shr (0+2)
 21968                           
 21969                           ; Vector 74 : CWG3
 21970  00009C  53CB               	dw	_Default_ISR shr (0+2)
 21971                           
 21972                           ; Vector 75 : CLC3
 21973  00009E  53CB               	dw	_Default_ISR shr (0+2)
 21974                           
 21975                           ; Vector 76 : Undefined
 21976  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 21977                           
 21978                           ; Vector 77 : Undefined
 21979  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 21980                           
 21981                           ; Vector 78 : Undefined
 21982  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 21983                           
 21984                           ; Vector 79 : Undefined
 21985  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 21986                           
 21987                           ; Vector 80 : CCP4
 21988  0000A8  53CB               	dw	_Default_ISR shr (0+2)
 21989                           
 21990                           ; Vector 81 : CLC4
 21991  0000AA  53CB               	dw	_Default_ISR shr (0+2)
 21992  0000AC                     ivt0x8_undefint:
 21993                           	callstack 0
 21994  0000AC  00FF               	reset	
 21995                           
 21996                           	psect	text140
 21997  000000                     __ptext140:
 21998                           	callstack 0
 21999                           
 22000                           	psect	rparam
 22001  0000                     
 22002                           	psect	idloc
 22003                           
 22004                           ;Config register IDLOC0 @ 0x200000
 22005                           ;	unspecified, using default values
 22006  200000                     	org	2097152
 22007  200000  0FFF               	dw	4095
 22008                           
 22009                           ;Config register IDLOC1 @ 0x200002
 22010                           ;	unspecified, using default values
 22011  200002                     	org	2097154
 22012  200002  0FFF               	dw	4095
 22013                           
 22014                           ;Config register IDLOC2 @ 0x200004
 22015                           ;	unspecified, using default values
 22016  200004                     	org	2097156
 22017  200004  0FFF               	dw	4095
 22018                           
 22019                           ;Config register IDLOC3 @ 0x200006
 22020                           ;	unspecified, using default values
 22021  200006                     	org	2097158
 22022  200006  0FFF               	dw	4095
 22023                           
 22024                           ;Config register IDLOC4 @ 0x200008
 22025                           ;	unspecified, using default values
 22026  200008                     	org	2097160
 22027  200008  0FFF               	dw	4095
 22028                           
 22029                           ;Config register IDLOC5 @ 0x20000A
 22030                           ;	unspecified, using default values
 22031  20000A                     	org	2097162
 22032  20000A  0FFF               	dw	4095
 22033                           
 22034                           ;Config register IDLOC6 @ 0x20000C
 22035                           ;	unspecified, using default values
 22036  20000C                     	org	2097164
 22037  20000C  0FFF               	dw	4095
 22038                           
 22039                           ;Config register IDLOC7 @ 0x20000E
 22040                           ;	unspecified, using default values
 22041  20000E                     	org	2097166
 22042  20000E  0FFF               	dw	4095
 22043                           
 22044                           	psect	config
 22045                           
 22046                           ;Config register CONFIG1L @ 0x300000
 22047                           ;	External Oscillator Selection
 22048                           ;	FEXTOSC = ECH, EC (external clock) above 8 MHz; PFM set to high power
 22049                           ;	Reset Oscillator Selection
 22050                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 22051  300000                     	org	3145728
 22052  300000  AF                 	db	175
 22053                           
 22054                           ;Config register CONFIG1H @ 0x300001
 22055                           ;	Clock out Enable bit
 22056                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 22057                           ;	PRLOCKED One-Way Set Enable bit
 22058                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
 22059                           ;	Clock Switch Enable bit
 22060                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 22061                           ;	Fail-Safe Clock Monitor Enable bit
 22062                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 22063  300001                     	org	3145729
 22064  300001  FF                 	db	255
 22065                           
 22066                           ;Config register CONFIG2L @ 0x300002
 22067                           ;	MCLR Enable bit
 22068                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 22069                           ;	Power-up timer selection bits
 22070                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 22071                           ;	Multi-vector enable bit
 22072                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 22073                           ;	IVTLOCK bit One-way set enable bit
 22074                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 22075                           ;	Low Power BOR Enable bit
 22076                           ;	LPBOREN = OFF, ULPBOR disabled
 22077                           ;	Brown-out Reset Enable bits
 22078                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 22079  300002                     	org	3145730
 22080  300002  FF                 	db	255
 22081                           
 22082                           ;Config register CONFIG2H @ 0x300003
 22083                           ;	Brown-out Reset Voltage Selection bits
 22084                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 22085                           ;	ZCD Disable bit
 22086                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 22087                           ;	PPSLOCK bit One-Way Set Enable bit
 22088                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 22089                           ;	Stack Full/Underflow Reset Enable bit
 22090                           ;	STVREN = ON, Stack full/underflow will cause Reset
 22091                           ;	Debugger Enable bit
 22092                           ;	DEBUG = OFF, Background debugger disabled
 22093                           ;	Extended Instruction Set Enable bit
 22094                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 22095  300003                     	org	3145731
 22096  300003  FF                 	db	255
 22097                           
 22098                           ;Config register CONFIG3L @ 0x300004
 22099                           ;	WDT Period selection bits
 22100                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 22101                           ;	WDT operating mode
 22102                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 22103  300004                     	org	3145732
 22104  300004  9F                 	db	159
 22105                           
 22106                           ;Config register CONFIG3H @ 0x300005
 22107                           ;	WDT Window Select bits
 22108                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 22109                           ;	WDT input clock selector
 22110                           ;	WDTCCS = SC, Software Control
 22111  300005                     	org	3145733
 22112  300005  FF                 	db	255
 22113                           
 22114                           ;Config register CONFIG4L @ 0x300006
 22115                           ;	Boot Block Size selection bits
 22116                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 22117                           ;	Boot Block enable bit
 22118                           ;	BBEN = OFF, Boot block disabled
 22119                           ;	Storage Area Flash enable bit
 22120                           ;	SAFEN = OFF, SAF disabled
 22121                           ;	Application Block write protection bit
 22122                           ;	WRTAPP = OFF, Application Block not write protected
 22123  300006                     	org	3145734
 22124  300006  FF                 	db	255
 22125                           
 22126                           ;Config register CONFIG4H @ 0x300007
 22127                           ;	Boot Block Write Protection bit
 22128                           ;	WRTB = OFF, Boot Block not write-protected
 22129                           ;	Configuration Register Write Protection bit
 22130                           ;	WRTC = OFF, Configuration registers not write-protected
 22131                           ;	Data EEPROM Write Protection bit
 22132                           ;	WRTD = OFF, Data EEPROM not write-protected
 22133                           ;	SAF Write protection bit
 22134                           ;	WRTSAF = OFF, SAF not Write Protected
 22135                           ;	Low Voltage Programming Enable bit
 22136                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
 22137  300007                     	org	3145735
 22138  300007  DF                 	db	223
 22139                           
 22140                           ;Config register CONFIG5L @ 0x300008
 22141                           ;	PFM and Data EEPROM Code Protection bit
 22142                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 22143  300008                     	org	3145736
 22144  300008  FF                 	db	255
 22145                           
 22146                           ;Config register CONFIG5H @ 0x300009
 22147                           ;	unspecified, using default values
 22148  300009                     	org	3145737
 22149  300009  FF                 	db	255
 22150                           tosu	equ	0x3FFF
 22151                           tosh	equ	0x3FFE
 22152                           tosl	equ	0x3FFD
 22153                           stkptr	equ	0x3FFC
 22154                           pclatu	equ	0x3FFB
 22155                           pclath	equ	0x3FFA
 22156                           pcl	equ	0x3FF9
 22157                           tblptru	equ	0x3FF8
 22158                           tblptrh	equ	0x3FF7
 22159                           tblptrl	equ	0x3FF6
 22160                           tablat	equ	0x3FF5
 22161                           prodh	equ	0x3FF4
 22162                           prodl	equ	0x3FF3
 22163                           indf0	equ	0x3FEF
 22164                           postinc0	equ	0x3FEE
 22165                           postdec0	equ	0x3FED
 22166                           preinc0	equ	0x3FEC
 22167                           plusw0	equ	0x3FEB
 22168                           fsr0h	equ	0x3FEA
 22169                           fsr0l	equ	0x3FE9
 22170                           wreg	equ	0x3FE8
 22171                           indf1	equ	0x3FE7
 22172                           postinc1	equ	0x3FE6
 22173                           postdec1	equ	0x3FE5
 22174                           preinc1	equ	0x3FE4
 22175                           plusw1	equ	0x3FE3
 22176                           fsr1h	equ	0x3FE2
 22177                           fsr1l	equ	0x3FE1
 22178                           bsr	equ	0x3FE0
 22179                           indf2	equ	0x3FDF
 22180                           postinc2	equ	0x3FDE
 22181                           postdec2	equ	0x3FDD
 22182                           preinc2	equ	0x3FDC
 22183                           plusw2	equ	0x3FDB
 22184                           fsr2h	equ	0x3FDA
 22185                           fsr2l	equ	0x3FD9
 22186                           status	equ	0x3FD8

Data Sizes:
    Strings     473
    Constant    47
    Data        1129
    BSS         4873
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     32      64
    BANK0           160    148     159
    BANK1           256     35     203
    BANK2           256      0     218
    BANK3           256      0     131
    BANK4           256      0     255
    BANK5           256      0     131
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    cli_ctx.cmds.fh	PTR FTN(PTR void ,)void  size(3) Largest target is 0
		 -> fh_p1(), fh_p0(), fh_pl(), fh_pd(), 
		 -> fh_pu(), fh_pp(), fh_po(), fh_ps(), 
		 -> fh_pr(), Absolute function(), 

    cli_ctx.cmds.cmd	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), STR_28(CODE[3]), STR_27(CODE[3]), STR_26(CODE[3]), 
		 -> STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[3]), STR_22(CODE[3]), 
		 -> STR_21(CODE[3]), STR_20(CODE[3]), 

    fh_ps@a_data	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK5[131]), 

    fh_po@a_data	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK5[131]), 

    fh_pp@a_data	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK5[131]), 

    fh_pu@a_data	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK5[131]), 

    fh_pd@a_data	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK5[131]), 

    fh_pl@a_data	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK5[131]), 

    fh_p0@a_data	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK5[131]), 

    fh_p1@a_data	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK5[131]), 

    S2693$1$0	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK5[131]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 132
		 -> cli_ctx.cmd(BANK5[128]), STR_45(CODE[4]), STR_40(CODE[3]), cli_ctx(BANK5[131]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 132
		 -> cli_ctx.cmd(BANK5[128]), STR_45(CODE[4]), STR_40(CODE[3]), cli_ctx(BANK5[131]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 107
		 -> vfpfcnvrt@ct(BANK0[3]), NULL(NULL[0]), STR_28(CODE[3]), STR_27(CODE[3]), 
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[3]), 
		 -> STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[3]), STR_19(CODE[23]), 
		 -> STR_18(CODE[24]), STR_17(CODE[24]), STR_16(CODE[24]), STR_15(CODE[107]), 
		 -> STR_14(CODE[3]), STR_13(CODE[6]), STR_12(CODE[17]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 107
		 -> vfpfcnvrt@ct(BANK0[3]), NULL(NULL[0]), STR_28(CODE[3]), STR_27(CODE[3]), 
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[3]), 
		 -> STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[3]), STR_19(CODE[23]), 
		 -> STR_18(CODE[24]), STR_17(CODE[24]), STR_16(CODE[24]), STR_15(CODE[107]), 
		 -> STR_14(CODE[3]), STR_13(CODE[6]), STR_12(CODE[17]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 255
		 -> cli_ctx.cmd(BANK5[128]), ?_printf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK1[80]), 
		 -> ?_sprintf(BANK1[2]), NULL(NULL[0]), STR_28(CODE[3]), STR_27(CODE[3]), 
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[3]), 
		 -> STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[3]), cli_ctx(BANK5[131]), 
		 -> build_version(CODE[14]), buff1(BANK4[255]), STR_2(CODE[9]), STR_1(CODE[12]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 255
		 -> cli_ctx.cmd(BANK5[128]), ?_printf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK1[80]), 
		 -> ?_sprintf(BANK1[2]), NULL(NULL[0]), STR_28(CODE[3]), STR_27(CODE[3]), 
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[3]), 
		 -> STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[3]), cli_ctx(BANK5[131]), 
		 -> build_version(CODE[14]), buff1(BANK4[255]), STR_2(CODE[9]), STR_1(CODE[12]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_35(CODE[4]), STR_34(CODE[4]), STR_31(CODE[4]), STR_30(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_35(CODE[4]), STR_34(CODE[4]), STR_31(CODE[4]), STR_30(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    puts@s	PTR const unsigned char  size(2) Largest target is 255
		 -> STR_29(CODE[3]), cli_read@i(BANK0[1]), cmdm(CODE[28]), cli_ctx(BANK5[131]), 
		 -> buff1(BANK4[255]), STR_11(CODE[31]), STR_10(CODE[29]), STR_9(CODE[18]), 
		 -> STR_8(CODE[19]), STR_7(CODE[17]), STR_6(CODE[22]), STR_5(CODE[18]), 
		 -> STR_4(CODE[29]), STR_3(CODE[18]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 107
		 -> STR_15(CODE[107]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 255
		 -> dbuf(BANK1[80]), STR_29(CODE[3]), cli_read@i(BANK0[1]), cmdm(CODE[28]), 
		 -> cli_ctx(BANK5[131]), buff1(BANK4[255]), STR_11(CODE[31]), STR_10(CODE[29]), 
		 -> STR_9(CODE[18]), STR_8(CODE[19]), STR_7(CODE[17]), STR_6(CODE[22]), 
		 -> STR_5(CODE[18]), STR_4(CODE[29]), STR_3(CODE[18]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), NULL(NULL[0]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 107
		 -> STR_19(CODE[23]), STR_18(CODE[24]), STR_17(CODE[24]), STR_16(CODE[24]), 
		 -> STR_15(CODE[107]), STR_14(CODE[3]), STR_13(CODE[6]), STR_12(CODE[17]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 1
		 -> printf@ap(BANK0[2]), sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 107
		 -> STR_19(CODE[23]), STR_18(CODE[24]), STR_17(CODE[24]), STR_16(CODE[24]), 
		 -> STR_15(CODE[107]), STR_14(CODE[3]), STR_13(CODE[6]), STR_12(CODE[17]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 107
		 -> STR_19(CODE[23]), STR_18(CODE[24]), STR_17(CODE[24]), STR_16(CODE[24]), 
		 -> STR_15(CODE[107]), STR_14(CODE[3]), STR_13(CODE[6]), STR_12(CODE[17]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), build_version(CODE[14]), STR_2(CODE[9]), 
		 -> STR_1(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 1
		 -> printf@ap(BANK0[2]), sprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), build_version(CODE[14]), STR_2(CODE[9]), 
		 -> STR_1(CODE[12]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK1[2]), stoa@nuls(BANK0[7]), ?_sprintf(BANK1[2]), build_version(CODE[14]), 
		 -> STR_2(CODE[9]), STR_1(CODE[12]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_19(CODE[23]), STR_18(CODE[24]), STR_17(CODE[24]), STR_16(CODE[24]), 
		 -> STR_14(CODE[3]), STR_13(CODE[6]), STR_12(CODE[17]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 255
		 -> buff1(BANK4[255]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), 

    S4048$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S4048$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memset@dest	PTR void  size(2) Largest target is 132
		 -> ring_buf1(BANK3[67]), cli_ctx(BANK5[131]), 

    memset@s	PTR unsigned char  size(2) Largest target is 132
		 -> ring_buf1(BANK3[67]), cli_ctx(BANK5[131]), 

    memcpy@d1	PTR void  size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    memcpy@s1	PTR const void  size(2) Largest target is 255
		 -> buff1(BANK4[255]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 255
		 -> buff1(BANK4[255]), 

    ringBufS_flush@_this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memcpy	PTR void  size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    ringBufS_put_dma_cpy@ptr	PTR const unsigned char  size(2) Largest target is 255
		 -> buff1(BANK4[255]), 

    ringBufS_put_dma_cpy@_this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    ringBufS_put_dma@_this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    ringBufS_init@_this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 1024
		 -> port_data(BIGRAM[1024]), 

    eaDogM_WriteStringAtPos@strPtr	PTR unsigned char  size(2) Largest target is 255
		 -> buff1(BANK4[255]), 

    eaDogM_WriteString@strPtr	PTR unsigned char  size(2) Largest target is 255
		 -> buff1(BANK4[255]), 

    S3093spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S3093spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 0

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 0

    cli_read@a_ctx.cmds	PTR struct _t_cmd size(2) Largest target is 60
		 -> g_cmds(BANK2[50]), 

    cli_read@a_ctx	PTR struct _t_cli_ctx size(2) Largest target is 132
		 -> cli_ctx(BANK5[131]), 

    _cli_interpret_cmd@a_ctx.cmds.fh	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> fh_p1(), fh_p0(), fh_pl(), fh_pd(), 
		 -> fh_pu(), fh_pp(), fh_po(), fh_ps(), 
		 -> fh_pr(), Absolute function(), 

    _cli_interpret_cmd@a_ctx.cmds.cmd	PTR const unsigned char  size(2) Largest target is 3
		 -> NULL(NULL[0]), STR_28(CODE[3]), STR_27(CODE[3]), STR_26(CODE[3]), 
		 -> STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[3]), STR_22(CODE[3]), 
		 -> STR_21(CODE[3]), STR_20(CODE[3]), 

    _cli_interpret_cmd@a_ctx.cmds	PTR struct _t_cmd size(2) Largest target is 60
		 -> g_cmds(BANK2[50]), 

    _cli_interpret_cmd@a_ctx	PTR struct _t_cli_ctx size(2) Largest target is 132
		 -> cli_ctx(BANK5[131]), 

    linux_putc@data	PTR unsigned char  size(2) Largest target is 3
		 -> STR_29(CODE[3]), cli_read@i(BANK0[1]), 

    linux_getc@a_data	PTR unsigned char  size(2) Largest target is 1
		 -> cli_read@i(BANK0[1]), main@i(BANK1[1]), 

    cli_init@a_ctx.cmds.fh	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> fh_p1(), fh_p0(), fh_pl(), fh_pd(), 
		 -> fh_pu(), fh_pp(), fh_po(), fh_ps(), 
		 -> fh_pr(), Absolute function(), 

    cli_init@a_ctx.cmds.cmd	PTR const unsigned char  size(2) Largest target is 3
		 -> NULL(NULL[0]), STR_28(CODE[3]), STR_27(CODE[3]), STR_26(CODE[3]), 
		 -> STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[3]), STR_22(CODE[3]), 
		 -> STR_21(CODE[3]), STR_20(CODE[3]), 

    cli_init@a_ctx.cmds	PTR struct _t_cmd size(2) Largest target is 60
		 -> g_cmds(BANK2[50]), 

    cli_init@a_cmds	PTR struct _t_cmd size(2) Largest target is 60
		 -> g_cmds(BANK2[50]), 

    sp__memset	PTR void  size(2) Largest target is 132
		 -> ring_buf1(BANK3[67]), cli_ctx(BANK5[131]), 

    cli_init@a_ctx	PTR struct _t_cli_ctx size(2) Largest target is 132
		 -> cli_ctx(BANK5[131]), 

    S2693_t_cmd$fh	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> fh_p1(), fh_p0(), fh_pl(), fh_pd(), 
		 -> fh_pu(), fh_pp(), fh_po(), fh_ps(), 
		 -> fh_pr(), Absolute function(), 

    g_cmds.fh	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> fh_p1(), fh_p0(), fh_pl(), fh_pd(), 
		 -> fh_pu(), fh_pp(), fh_po(), fh_ps(), 
		 -> fh_pr(), Absolute function(), 

    S2693_t_cmd$cmd	PTR const unsigned char  size(2) Largest target is 3
		 -> NULL(NULL[0]), STR_28(CODE[3]), STR_27(CODE[3]), STR_26(CODE[3]), 
		 -> STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[3]), STR_22(CODE[3]), 
		 -> STR_21(CODE[3]), STR_20(CODE[3]), 

    g_cmds.cmd	PTR const unsigned char  size(2) Largest target is 3
		 -> NULL(NULL[0]), STR_28(CODE[3]), STR_27(CODE[3]), STR_26(CODE[3]), 
		 -> STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[3]), STR_22(CODE[3]), 
		 -> STR_21(CODE[3]), STR_20(CODE[3]), 

    fh_pr@a_data	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK5[131]), 

    ps_type_ptr	PTR struct PS_TYPE size(2) Largest target is 40
		 -> ps_type(BANK2[40]), 

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_2(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    S2700_t_cli_ctx$cmds	PTR struct _t_cmd size(2) Largest target is 60
		 -> g_cmds(BANK2[50]), 

    cli_ctx.cmds	PTR struct _t_cmd size(2) Largest target is 60
		 -> g_cmds(BANK2[50]), 

    UART1_SetUartInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_UartInterrupt_ISR(), 

    UART1_SetFramingErrorInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_FramingError_ISR(), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultErrorHandler(), Absolute function(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), Absolute function(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), Absolute function(), 

    UART1_UARTInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_UartInterrupt_ISR(), Absolute function(), 

    UART1_FramingErrorInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_FramingError_ISR(), Absolute function(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    DMA1_SetSCNTIInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> source_dma_done(), DMA1_DefaultInterruptHandler(), 

    DMA1_SCNTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> source_dma_done(), DMA1_DefaultInterruptHandler(), Absolute function(), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Timers_Isr(), TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Timers_Isr(), TMR5_DefaultInterruptHandler(), Absolute function(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Led_Blink(), TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Led_Blink(), TMR6_DefaultInterruptHandler(), Absolute function(), 

    ADCC_SetADIInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Adc_Isr(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Adc_Isr(), Absolute function(), ADCC_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _main->_DAC1_SetOutput
    _main->_DATAEE_WriteByte
    _main->_display_led
    _utoa->___lomod
    _atoi->_isspace
    _send_lcd_data->_SPI1_ExchangeByte
    _send_lcd_cmd_long->_SPI1_ExchangeByte
    _send_lcd_cmd->_SPI1_ExchangeByte
    _eaDogM_WriteString->_ringBufS_put_dma_cpy
    _send_lcd_data_dma->_ringBufS_put_dma
    _linux_getc->_UART1_Read
    _fh_p1->_DATAEE_WriteByte
    _fh_p0->_DATAEE_WriteByte
    _putch->_UART1_Write
    _WaitMs->_StartTimer
    _WaitMs->_TimerDone
    _SYSTEM_Initialize->_INTERRUPT_Initialize

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    _ADCC_ISR->_Adc_Isr
    _Adc_Isr->_ADCC_GetConversionResult

Critical Paths under _TMR6_ISR in COMRAM

    _TMR6_CallBack->_Led_Blink

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    _TMR5_ISR->_Timers_Isr

Critical Paths under _DMA1_DMASCNTI_ISR in COMRAM

    None.

Critical Paths under _UART1_framing_err_vect_isr in COMRAM

    None.

Critical Paths under _UART1_vect_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_printf
    _sprintf->_vfprintf
    _scmd_init->_cli_init
    _cli_init->_puts
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _utoa->_pad
    _stoa->_fputc
    _efgtoa->___flge
    _tolower->_isupper
    _pad->_fputs
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    _atoi->___wmul
    _atoi->_isdigit
    _atoi->_isspace
    _init_display->_ringBufS_init
    _send_lcd_data->_wdtdelay
    _send_lcd_cmd_long->_wdtdelay
    _send_lcd_cmd->_wdtdelay
    _ringBufS_init->_memset
    _eaDogM_WriteStringAtPos->_eaDogM_WriteString
    _eaDogM_WriteString->_ringBufS_put_dma_cpy
    _ringBufS_put_dma_cpy->_memcpy
    _eaDogM_WriteCommand->_send_lcd_cmd_dma
    _send_lcd_cmd_dma->_send_lcd_data_dma
    _send_lcd_data_dma->_ringBufS_flush
    _ringBufS_flush->_memset
    _cli_read->__cli_interpret_cmd
    _linux_putc->_puts
    __cli_interpret_cmd->_fh_p0
    __cli_interpret_cmd->_fh_p1
    __cli_interpret_cmd->_fh_pd
    __cli_interpret_cmd->_fh_pl
    __cli_interpret_cmd->_fh_po
    __cli_interpret_cmd->_fh_pp
    __cli_interpret_cmd->_fh_pr
    __cli_interpret_cmd->_fh_ps
    __cli_interpret_cmd->_fh_pu
    _strncmp->_strlen
    _fh_pu->_puts
    _fh_ps->_puts
    _fh_pr->_puts
    _fh_pp->_puts
    _fh_po->_puts
    _fh_pl->_puts
    _fh_pd->_puts
    _fh_p1->_puts
    _fh_p0->_puts
    _puts->_fputs
    _fputs->_fputc
    _fputc->_putch
    _WaitMs->_StartTimer
    _SYSTEM_Initialize->_TMR5_Initialize
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorInterruptHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _UART1_Initialize->_UART1_SetUartInterruptHandler
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _DMA1_Initialize->_DMA1_SetSCNTIInterruptHandler
    _ADCC_Initialize->_ADCC_SetADIInterruptHandler

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK0

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK0

    None.

Critical Paths under _UART1_vect_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->_vfprintf
    _printf->_vfprintf

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK1

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK1

    None.

Critical Paths under _UART1_vect_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK2

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK2

    None.

Critical Paths under _UART1_vect_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK3

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK3

    None.

Critical Paths under _UART1_vect_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK4

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK4

    None.

Critical Paths under _UART1_vect_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK5

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK5

    None.

Critical Paths under _UART1_vect_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK6

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK6

    None.

Critical Paths under _UART1_vect_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK7

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK7

    None.

Critical Paths under _UART1_vect_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK8

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK8

    None.

Critical Paths under _UART1_vect_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK9

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK9

    None.

Critical Paths under _UART1_vect_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK10

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK10

    None.

Critical Paths under _UART1_vect_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK11

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK11

    None.

Critical Paths under _UART1_vect_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK12

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK12

    None.

Critical Paths under _UART1_vect_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK13

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK13

    None.

Critical Paths under _UART1_vect_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK14

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK14

    None.

Critical Paths under _UART1_vect_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK15

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK15

    None.

Critical Paths under _UART1_vect_isr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK16

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK16

    None.

Critical Paths under _UART1_vect_isr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK17

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK17

    None.

Critical Paths under _UART1_vect_isr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK18

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK18

    None.

Critical Paths under _UART1_vect_isr in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK19

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK19

    None.

Critical Paths under _UART1_vect_isr in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK20

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK20

    None.

Critical Paths under _UART1_vect_isr in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK21

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK21

    None.

Critical Paths under _UART1_vect_isr in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK22

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK22

    None.

Critical Paths under _UART1_vect_isr in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK23

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK23

    None.

Critical Paths under _UART1_vect_isr in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK24

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK24

    None.

Critical Paths under _UART1_vect_isr in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK25

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK25

    None.

Critical Paths under _UART1_vect_isr in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK26

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK26

    None.

Critical Paths under _UART1_vect_isr in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK27

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK27

    None.

Critical Paths under _UART1_vect_isr in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK28

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK28

    None.

Critical Paths under _UART1_vect_isr in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK29

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK29

    None.

Critical Paths under _UART1_vect_isr in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK30

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK30

    None.

Critical Paths under _UART1_vect_isr in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK31

    None.

Critical Paths under _UART1_framing_err_vect_isr in BANK31

    None.

Critical Paths under _UART1_vect_isr in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  278643
                                             31 BANK1      4     4      0
        _ADCC_SetADIInterruptHandler
                     _DAC1_GetOutput
                     _DAC1_SetOutput
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
      _DMA1_SetSCNTIInterruptHandler
                 _PWM5_LoadDutyValue
                 _PWM6_LoadDutyValue
                  _SYSTEM_Initialize
           _TMR5_SetInterruptHandler
           _TMR6_SetInterruptHandler
                             _WaitMs
                            ___flmul
                           ___xxtofl
                           _cli_read
                        _display_led
                _eaDogM_WriteCommand
            _eaDogM_WriteStringAtPos
                       _init_display
                         _linux_getc
                             _printf
                               _puts
                          _scmd_init
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    15     12   72802
                                              6 BANK1     25    13     12
                     _DAC1_GetOutput (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _scmd_init                                            0     0      0    9914
                           _cli_init
 ---------------------------------------------------------------------------------
 (2) _cli_init                                             4     0      4    9914
                                             22 BANK0      4     0      4
                             _memset
                               _puts
 ---------------------------------------------------------------------------------
 (1) _printf                                              26     4     22   70730
                                            146 BANK0      2     2      0
                                              6 BANK1     22     0     22
                     _DAC1_GetOutput (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   70327
                                            144 BANK0      2     2      0
                                              0 BANK1      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           44    39      5   68698
                                            113 BANK0     31    26      5
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    9866
                                             30 BANK0     32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     536
                                             31 COMRAM     1     1      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     554
                                              0 BANK0     25     9     16
 ---------------------------------------------------------------------------------
 (4) _stoa                                                22    18      4    4250
                                             10 BANK0     22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              62    55      7   41951
                                             51 BANK0     62    55      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              6     4      2    1318
                                              6 BANK0      6     4      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     649
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4    1248
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    8006
                                             19 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     890
                                             25 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     482
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     686
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    5410
                                             39 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    4742
                                              0 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     196
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    5062
                                             14 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    1220
                                             39 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     912
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    3620
                                              0 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     818
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     842
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                10     8      2    2172
                                              6 BANK0     10     8      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     321
                                             31 COMRAM     1     1      0
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     437
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     698
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    6784
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                      _send_lcd_data
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_data                                        1     1      0    1016
                                              4 BANK0      1     1      0
                  _SPI1_ExchangeByte
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     1      0    1016
                                              4 BANK0      1     1      0
                  _SPI1_ExchangeByte
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     1      0    1016
                                              4 BANK0      1     1      0
                  _SPI1_ExchangeByte
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4     932
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _SPI1_ExchangeByte                                    1     1      0      42
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    2804
                                             12 BANK0      2     0      2
                             _memset
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteStringAtPos                              7     4      3   15150
                                             19 BANK0      7     4      3
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteString                                   3     1      2    5738
                                             16 BANK0      3     1      2
                     _ringBufS_flush
               _ringBufS_put_dma_cpy
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _ringBufS_put_dma_cpy                                 6     1      5    1262
                                             31 COMRAM     1     1      0
                                             11 BANK0      5     0      5
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              11     5      6     608
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     1      0    4034
                                             17 BANK0      1     1      0
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_dma                                     1     1      0    3992
                                             16 BANK0      1     1      0
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _send_lcd_data_dma                                    1     1      0    3950
                                             15 BANK0      1     1      0
                     _ringBufS_flush
                   _ringBufS_put_dma
                          _start_lcd
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ringBufS_put_dma                                     4     1      3     618
                                             31 COMRAM     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _ringBufS_flush                                       3     0      3    3290
                                             12 BANK0      3     0      3
                             _memset
 ---------------------------------------------------------------------------------
 (1) _display_led                                          3     3      0      42
                                             31 COMRAM     1     1      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _cli_read                                             8     6      2   79873
                                             36 BANK0      8     6      2
                 __cli_interpret_cmd
                         _linux_getc
                         _linux_putc
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                              12     6      6    2656
                                              0 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (2) _linux_putc                                           3     0      3    7386
                                             22 BANK0      3     0      3
                               _puts
 ---------------------------------------------------------------------------------
 (1) _linux_getc                                           2     0      2     308
                                              0 BANK0      2     0      2
                         _UART1_Read
                  _UART1_is_rx_ready
 ---------------------------------------------------------------------------------
 (2) _UART1_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART1_Read                                           1     1      0      54
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) __cli_interpret_cmd                                  12    10      2   68709
                                             24 BANK0     12    10      2
                   Absolute function *
                              _fh_p0 *
                              _fh_p1 *
                              _fh_pd *
                              _fh_pl *
                              _fh_po *
                              _fh_pp *
                              _fh_pr *
                              _fh_ps *
                              _fh_pu *
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             12     6      6    1404
                                              4 BANK0     12     6      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     816
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _fh_pu                                                2     0      2    6920
                                             22 BANK0      2     0      2
                               _puts
 ---------------------------------------------------------------------------------
 (3) _fh_ps                                                2     0      2    6920
                                             22 BANK0      2     0      2
                               _puts
 ---------------------------------------------------------------------------------
 (3) _fh_pr                                                2     0      2    6962
                                             22 BANK0      2     0      2
                               _puts
 ---------------------------------------------------------------------------------
 (3) _fh_pp                                                2     0      2    6920
                                             22 BANK0      2     0      2
                               _puts
 ---------------------------------------------------------------------------------
 (3) _fh_po                                                2     0      2    6920
                                             22 BANK0      2     0      2
                               _puts
 ---------------------------------------------------------------------------------
 (3) _fh_pl                                                2     0      2    6920
                                             22 BANK0      2     0      2
                               _puts
 ---------------------------------------------------------------------------------
 (3) _fh_pd                                                2     0      2    6920
                                             22 BANK0      2     0      2
                               _puts
 ---------------------------------------------------------------------------------
 (3) _fh_p1                                                2     0      2    8663
                                             22 BANK0      2     0      2
                   _DATAEE_WriteByte
                               _puts
 ---------------------------------------------------------------------------------
 (3) _fh_p0                                                2     0      2    8584
                                             22 BANK0      2     0      2
                   _DATAEE_WriteByte
                               _puts
 ---------------------------------------------------------------------------------
 (3) _puts                                                 5     3      2    6920
                                             19 BANK0      3     1      2
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                9     5      4    3148
                                             10 BANK0      9     5      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    2284
                                              1 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0     126
                                              0 BANK0      1     1      0
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (9) _UART1_Write                                          1     1      0      84
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _DATAEE_WriteByte                                     4     1      3    1664
                                             31 COMRAM     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     884
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) _WaitMs                                               2     0      2     486
                                              4 BANK0      2     0      2
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            3     3      0      42
                                             31 COMRAM     1     1      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _StartTimer                                           5     3      2     190
                                             31 COMRAM     1     1      0
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2100
                    _ADCC_Initialize
                    _DAC1_Initialize
                    _DMA1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM5_Initialize
                    _PWM6_Initialize
                    _SPI1_Initialize
           _SystemArbiter_Initialize
                    _TMR2_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0    1036
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
_UART1_SetFramingErrorInterruptHandl
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
      _UART1_SetUartInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetUartInterruptHandler                        3     0      3     148
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3     148
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3     148
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         3     0      3     148
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorInterruptHandler                3     0      3     148
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         3     0      3     148
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                3     0      3     148
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     254
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR6_SetInterruptHandler                             3     0      3     254
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0     254
                                              3 BANK0      2     2      0
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR5_SetInterruptHandler                             3     0      3     254
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SystemArbiter_Initialize                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      48
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0     254
      _DMA1_SetSCNTIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _DMA1_SetSCNTIInterruptHandler                        3     0      3     254
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _DAC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     254
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3     254
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2     190
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM5_LoadDutyValue                                   4     2      2     190
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _DATAEE_ReadByte                                      2     0      2     302
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _DAC1_SetOutput                                       1     1      0      42
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DAC1_GetOutput                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _UART1_tx_vect_isr                                   3     3      0       0
                                             25 COMRAM     3     3      0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (11) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _UART1_rx_vect_isr                                   3     3      0       0
                                             28 COMRAM     3     3      0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (11) _UART1_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _UART1_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _UART1_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _UART1_DefaultErrorHandler                           0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _UART1_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _ADCC_ISR                                            2     2      0       0
                                              8 COMRAM     2     2      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                            _Adc_Isr *
 ---------------------------------------------------------------------------------
 (15) _Adc_Isr                                             4     4      0       0
                                              4 COMRAM     4     4      0
           _ADCC_GetConversionResult
 ---------------------------------------------------------------------------------
 (16) _ADCC_GetConversionResult                            4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (15) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR6_ISR                                            2     2      0       0
                                             11 COMRAM     2     2      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (15) _TMR6_CallBack                                       0     0      0       0
                   Absolute function *
                          _Led_Blink *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR6_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _Led_Blink                                           1     1      0       0
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            2     2      0     319
                                             17 COMRAM     2     2      0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
                    _TMR5_WriteTimer
                         _Timers_Isr *
 ---------------------------------------------------------------------------------
 (15) _Timers_Isr                                          4     4      0      90
                                             13 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2     229
                                             13 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (15) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _DMA1_DMASCNTI_ISR                                   2     2      0       0
                                             19 COMRAM     2     2      0
                   Absolute function *
       _DMA1_DefaultInterruptHandler *
                    _source_dma_done *
 ---------------------------------------------------------------------------------
 (15) _source_dma_done                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _DMA1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _UART1_framing_err_vect_isr                          2     2      0       0
                                             21 COMRAM     2     2      0
                   Absolute function *
             _UART1_FramingError_ISR *
 ---------------------------------------------------------------------------------
 (15) _UART1_FramingError_ISR                              0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _UART1_vect_isr                                      2     2      0       0
                                             23 COMRAM     2     2      0
                   Absolute function *
            _UART1_UartInterrupt_ISR *
 ---------------------------------------------------------------------------------
 (15) _UART1_UartInterrupt_ISR                             0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_SetADIInterruptHandler
   _DAC1_GetOutput
   _DAC1_SetOutput
   _DATAEE_ReadByte
   _DATAEE_WriteByte
   _DMA1_SetSCNTIInterruptHandler
   _PWM5_LoadDutyValue
   _PWM6_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _DAC1_Initialize
     _DMA1_Initialize
       _DMA1_SetSCNTIInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM5_Initialize
     _PWM6_Initialize
     _SPI1_Initialize
     _SystemArbiter_Initialize
     _TMR2_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetFramingErrorInterruptHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
       _UART1_SetUartInterruptHandler
   _TMR5_SetInterruptHandler
   _TMR6_SetInterruptHandler
   _WaitMs
     _StartTimer
     _TimerDone
   ___flmul
     ___xxtofl (ARG)
   ___xxtofl
   _cli_read
     __cli_interpret_cmd
       Absolute function(Fake) *
       _fh_p0 *
         _DATAEE_WriteByte
         _puts
           _fputc
             _putch
               _UART1_Write
           _fputs
             _fputc
       _fh_p1 *
         _DATAEE_WriteByte
         _puts
       _fh_pd *
         _puts
       _fh_pl *
         _puts
       _fh_po *
         _puts
       _fh_pp *
         _puts
       _fh_pr *
         _puts
       _fh_ps *
         _puts
       _fh_pu *
         _puts
       _strlen *
       _strncmp *
         _strlen (ARG)
     _linux_getc
       _UART1_Read
       _UART1_is_rx_ready
     _linux_putc
       _puts
     _memset
   _display_led
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _send_lcd_data_dma
         _ringBufS_flush
           _memset
         _ringBufS_put_dma
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
   _eaDogM_WriteStringAtPos
     _eaDogM_WriteString
       _ringBufS_flush
       _ringBufS_put_dma_cpy
         _memcpy
       _start_lcd
       _strlen
       _wait_lcd_set
     _send_lcd_cmd_dma
     _send_lcd_data_dma
     _wait_lcd_done
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_ExchangeByte
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_ExchangeByte
       _wdtdelay
     _send_lcd_data
       _SPI1_ExchangeByte
       _wdtdelay
     _wdtdelay
   _linux_getc
   _printf
     _DAC1_GetOutput (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
             _fputs
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
         _isdigit
         _isupper
         _stoa
           _fputc
           _strlen
         _strncmp
         _tolower
         _utoa
           ___lodiv
           ___lomod
           _pad
   _puts
   _scmd_init
     _cli_init
       _memset
       _puts
   _sprintf
     _DAC1_GetOutput (ARG)
     _vfprintf (ARG)

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _Adc_Isr *
     _ADCC_GetConversionResult

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _Led_Blink *
     _TMR6_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _TMR5_ISR (ROOT)
   Absolute function(Fake) *
   _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer *
   _Timers_Isr *

 _DMA1_DMASCNTI_ISR (ROOT)
   Absolute function(Fake) *
   _DMA1_DefaultInterruptHandler *
   _source_dma_done *

 _UART1_framing_err_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_FramingError_ISR *

 _UART1_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_UartInterrupt_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0    13C0     125       61.7%
EEDATA             400      0       0       0        0.0%
BITBIGSFRllllll    181      0       0     123        0.0%
BITBIGSFRllhhhh    110      0       0      90        0.0%
BITBANK31          100      0       0      66        0.0%
BANK31             100      0       0      67        0.0%
BITBANK30          100      0       0      64        0.0%
BANK30             100      0       0      65        0.0%
BITBANK29          100      0       0      62        0.0%
BANK29             100      0       0      63        0.0%
BITBANK28          100      0       0      60        0.0%
BANK28             100      0       0      61        0.0%
BITBANK27          100      0       0      58        0.0%
BANK27             100      0       0      59        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      83      15       51.2%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      FF      13       99.6%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      83      11       51.2%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      DA       9       85.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100     23      CB       7       79.3%
BITBIGSFRllhhhh     E8      0       0      94        0.0%
BITBIGSFRllhhhh     CB      0       0      86        0.0%
BITBIGSFRllhhhh     A1      0       0      83        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     94      9F       5       99.4%
BITBIGSFRllhhhh     5F      0       0      79        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     20      40       1       67.4%
BITBIGSFRllhhhl     49      0       0      96        0.0%
BITBIGSFRllhhhh     3F      0       0      81        0.0%
BITBIGSFRllhhhh     23      0       0      76        0.0%
BITBIGSFRllllll     1F      0       0     109        0.0%
BITBIGSFRhhhhhl     1D      0       0      69        0.0%
BITBIGSFRllllll     16      0       0     116        0.0%
BITBIGSFRllllll     15      0       0     105        0.0%
BITBIGSFRllllll     11      0       0     115        0.0%
BITBIGSFRllllll      F      0       0     106        0.0%
BITBIGSFRllhhhh      E      0       0      92        0.0%
BITBIGSFRllhhhh      C      0       0      75        0.0%
BITBIGSFRlllllh      B      0       0     104        0.0%
BITBIGSFRllhhl       B      0       0      97        0.0%
BITBIGSFRllhhhh      A      0       0      74        0.0%
BITBIGSFRllllll      8      0       0     111        0.0%
BITBIGSFRllhhhh      8      0       0      78        0.0%
BITBIGSFRhhhhhh      7      0       0      68        0.0%
BITBIGSFRllllll      7      0       0     121        0.0%
BITBIGSFRhhlh        6      0       0      71        0.0%
BITBIGSFRllllll      6      0       0     119        0.0%
BITBIGSFRllhhhh      5      0       0      93        0.0%
BITBIGSFRllhhhh      5      0       0      95        0.0%
BITBIGSFRllllhl      5      0       0     103        0.0%
BITBIGSFRlllhl       5      0       0     101        0.0%
BITBIGSFRllhll       5      0       0      99        0.0%
BITBIGSFRllllll      4      0       0     122        0.0%
BITBIGSFRllllll      4      0       0     120        0.0%
BITBIGSFRllhlh       4      0       0      98        0.0%
BITBIGSFRlllhh       4      0       0     100        0.0%
BITBIGSFRllllhh      4      0       0     102        0.0%
BITBIGSFRllllll      3      0       0     117        0.0%
BITBIGSFRllllll      3      0       0     110        0.0%
BITBIGSFRllllll      3      0       0     107        0.0%
BITBIGSFRllhhhh      2      0       0      91        0.0%
BITBIGSFRhhll        2      0       0      72        0.0%
BITBIGSFRhll         2      0       0      73        0.0%
BITBIGSFRllllll      1      0       0     112        0.0%
BITBIGSFRllllll      1      0       0     113        0.0%
BITBIGSFRllhhhh      1      0       0      85        0.0%
BITBIGSFRllhhhh      1      0       0      84        0.0%
BITBIGSFRllhhhh      1      0       0      77        0.0%
BITBIGSFRllhhhh      1      0       0      89        0.0%
BITBIGSFRllhhhh      1      0       0      87        0.0%
BITBIGSFRllhhhh      1      0       0      88        0.0%
BITBIGSFRhhhl        1      0       0      70        0.0%
BITBIGSFRllllll      1      0       0     118        0.0%
BITBIGSFRllhhhh      1      0       0      80        0.0%
BITBIGSFRllllll      1      0       0     114        0.0%
BITBIGSFRllhhhh      1      0       0      82        0.0%
BITBIGSFRllllll      1      0       0     108        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     489     124        0.0%
DATA                 0      0    1849       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Apr  5 16:45:32 2022

                                    _SPI1_ExchangeByte 4CD4  
                                         ___fldiv@aexp 0078  
                                         ___fldiv@bexp 0077  
                                                    _a 0583  
                     __end_of_TMR5_SetInterruptHandler 4E9C  
                                         ___fldiv@sign 0070  
                                         ?_display_led 0001  
                                         ___awdiv@sign 0065  
                                   ?_SPI1_ExchangeByte 0001  
                                  ___wmul@multiplicand 0062  
                                        _build_version FE18  
                                    ??_TMR5_WriteTimer 0010  
                                      _DAC1_Initialize 4ED2  
                                                  l209 4CCE  
                                                  l636 4CE2  
                                                  l991 4778  
                                                  _GIE 01FE97  
                                                  _pad 3B66  
                                                  _res 00F8  
                        eaDogM_WriteStringAtPos@strPtr 0074  
                                         ___awmod@sign 0065  
                                  ??_SPI1_ExchangeByte 0020  
                                      _TMR2_Initialize 4C7C  
                                                  prod 003FF3  
                                                  tosl 003FFD  
                                                  wreg 003FE8  
                                       _DAC1_SetOutput 4EEA  
                                         ___flmul@aexp 007B  
                                         ___flmul@bexp 007C  
                                      send_lcd_cmd@cmd 0064  
                         ?_ADCC_SetADIInterruptHandler 0060  
                                   _UART1_Transmit_ISR 4A1C  
                                         ___flmul@sign 007A  
                                         ___flmul@temp 0085  
                                         ___flmul@prod 0081  
                                     ?_source_dma_done 0001  
                               __end_of_DAC1_GetOutput 4F0E  
                                         ___fltol@exp1 0069  
                                                 l1130 4658  
                                                 l1402 38AA  
                                                 l1413 38B6  
                                                 l1423 38C2  
                                                 l1408 38B0  
                                                 l2240 356E  
                                                 l1433 38CE  
                                                 l1418 38BC  
                                                 l2250 3AA2  
                                                 l1338 16AE  
                                                 l1443 38DA  
                                                 l2067 3486  
                                                 l2331 1FBE  
                                                 l1428 38C8  
                                                 l2332 1F9C  
                                                 l1373 4AAC  
                                                 l1453 38E6  
                                                 l1438 38D4  
                                                 l1463 38F2  
                                                 l1448 38E0  
                                                 l2416 1BAC  
                                                 l1553 25C4  
                                                 l2433 1E48  
                                                 l2425 1DC2  
                                                 l1458 38EC  
                                                 l2426 1DBE  
                                                 l2602 066E  
                                                 l2347 2090  
                                                 l2356 20F6  
                                                 l2357 20F2  
                                                 l1567 2AEA  
                                                 l2464 2F34  
                                                 l2457 2EB6  
                                                 l2537 3B94  
                                                 l1658 43D6  
                                                 l2386 22FA  
                                                 l2397 2368  
                                                 l2398 2364  
                                                 l2574 030A  
                                                 l2638 2D92  
                                                 l2657 25E4  
                                                 l2755 30EE  
                                                 l2659 25EC  
                                                 l2853 4848  
                                                 ?_pad 0073  
                                                 l2767 288A  
                                                 STR_1 FFB2  
                                                 STR_2 FFBE  
                                                 STR_3 FF6C  
                                                 STR_4 FECD  
                                                 STR_5 FF5A  
                                                 STR_6 FF31  
                                                 STR_7 FF90  
                                                 STR_8 FF47  
                                                 STR_9 FF7E  
                                                 _LATA 003FBA  
                                                 _LATB 003FBB  
                                                 _LATC 003FBC  
                                                 _LATD 003FBD  
                                                 _LATE 003FBE  
                                                 _LATF 003FBF  
                                                 _T2PR 003FAB  
                                                 _T6PR 003F93  
                                                 _PMD0 0039C0  
                                                 _PMD1 0039C1  
                                                 _PMD2 0039C2  
                                                 _PMD3 0039C3  
                                                 _PMD4 0039C4  
                                                 _PMD5 0039C5  
                                                 _PMD6 0039C6  
                                                 _PMD7 0039C7  
                                                 _PLLR 01CEE0  
                                                 _WPUA 003A41  
                                                 _WPUB 003A51  
                                                 _WPUC 003A61  
                                                 _WPUD 003A71  
                                                 _WPUE 003A81  
                                                 _WPUF 003A91  
                                     __end_of_ADCC_ISR 4566  
                                  ?_UART1_Transmit_ISR 0001  
                                                 _dbuf 0143  
                                                 _cmdm FDFC  
                                                 _atoi 2FB8  
                                                 _main 10A4  
                                                 _ival 0124  
                                                 _mode 0035  
                                      __end_of_Adc_Isr 33F2  
                                                 _prec 00F6  
                                                 _nout 0141  
                                                 pad@i 007A  
                                                 pad@p 0077  
                                                 fsr1h 003FE2  
                                                 fsr2h 003FDA  
                                                 indf1 003FE7  
                                                 indf2 003FDF  
                                                 fsr1l 003FE1  
                                                 pad@w 007C  
                                                 fsr2l 003FD9  
                                                 _stoa 2D2C  
                                                 _puts 4852  
                                                 _vval 0128  
                                                 _utoa 25C8  
                            ringBufS_put_dma_cpy@_this 006B  
                                        ___fpclassifyf 365E  
                                                 prodh 003FF4  
                                                 prodl 003FF3  
                                                 start 00AE  
                                      _timer5ReloadVal 002F  
                                      ___fldiv@new_exp 0071  
                                      _PWM5_Initialize 4D52  
                            __end_of_SPI1_ExchangeByte 4CEE  
                        ??_UART1_SetTxInterruptHandler 0020  
                                       _SPI1STATUSbits 003D17  
                                    _UART1_rx_vect_isr 4454  
                                         ___param_bank 000000  
                           __end_of_PWM5_LoadDutyValue 498E  
                                          ?_UART1_Read 0001  
                                   ?_UART1_rx_vect_isr 0001  
                                                ??_pad 0079  
                             __end_of_ringBufS_put_dma 414C  
                                 ??_UART1_Transmit_ISR 001A  
                        __end_of_OSCILLATOR_Initialize 4CD4  
                                                l11011 1EF0  
                                                l11023 1F14  
                                                l11015 1EF4  
                                                l12001 0366  
                                                l11211 2CD4  
                                                l12011 0384  
                                                l11213 2D06  
                                                l11205 2C98  
                                                l11117 20B4  
                                                l11133 20D4  
                                                l11109 2080  
                                                l11053 1F50  
                                                l12101 0756  
                                                l12021 03B8  
                                                l11303 22D2  
                                                l11127 20CA  
                                                l11321 232E  
                                                l11161 2162  
                                                l11153 213C  
                                                l11081 1FE2  
                                                l11065 1FAA  
                                                l12017 03A8  
                                                l12201 2D56  
                                                l11219 2D22  
                                                l11315 2310  
                                                l11243 21B8  
                                                l11091 2008  
                                                l11067 1FAE  
                                                l12027 03E2  
                                                l12035 04D6  
                                                l12211 2DA8  
                                                l11341 23AC  
                                                l11309 22F8  
                                                l11405 1BCA  
                                                l11165 216A  
                                                l12109 077A  
                                                l12117 0810  
                                                l12061 0644  
                                                l13023 4AB6  
                                                l13111 2EC6  
                                                l11183 3E7C  
                                                l13031 3ED2  
                                                l11271 222C  
                                                l11263 21F8  
                                                l11239 21B4  
                                                l11167 216C  
                                                l12215 2DC0  
                                                l13121 2EF6  
                                                l13033 3ED6  
                                                l13041 3F08  
                                                l11521 3CC0  
                                                l11345 23D0  
                                                l11601 3426  
                                                l11089 2004  
                                                l12145 089E  
                                                l12129 0852  
                                                l12081 0708  
                                                l12049 0580  
                                                l12233 2E58  
                                                l12225 2E26  
                                                l13131 2F66  
                                                l13123 2F1C  
                                                l11179 3E66  
                                                l13027 3ECA  
                                                l11523 3CC8  
                                                l11515 3CAA  
                                                l11355 2406  
                                                l11259 21F4  
                                                l11099 201A  
                                                l12147 08A8  
                                                l12067 0666  
                                                l12219 2DDE  
                                                l13117 2EE4  
                                                l13029 3ECE  
                                                l11541 3D00  
                                                l11533 3CE8  
                                                l11509 3C9A  
                                                l11357 2408  
                                                l11349 23FA  
                                                l11285 225A  
                                                l11277 2242  
                                                l11605 345A  
                                                l11453 1D88  
                                                l11381 1B6C  
                                                l12181 0978  
                                                l12157 08FC  
                                                l12093 0736  
                                                l12069 0688  
                                                l12229 2E40  
                                                l13119 2EEA  
                                                l11199 2C2C  
                                                l13039 3EDC  
                                                l11295 22AA  
                                                l11615 34BE  
                                                l11447 1D6A  
                                                l11623 4A0A  
                                                l12167 0928  
                                                l12247 2624  
                                                l13129 2F5A  
                                                l12345 4718  
                                                l13081 2ACE  
                                                l13057 3904  
                                                l12281 301E  
                                                l12273 2FCA  
                                                l11537 3CF2  
                                                l11561 3DAC  
                                                l11553 3D92  
                                                l11609 3470  
                                                l11473 1E06  
                                                l11377 1B58  
                                                l11633 380A  
                                                l11713 3B7E  
                                                l11705 3A8C  
                                                l12257 2710  
                                                l13147 2FA6  
                                                l13091 2B56  
                                                l12283 3026  
                                                l11563 3DB4  
                                                l11395 1B98  
                                                l11379 1B5C  
                                                l11723 3BB6  
                                                l13077 2AA4  
                                                l12293 3098  
                                                l12285 302C  
                                                l12277 2FCE  
                                                l11573 3DD6  
                                                l11557 3D9E  
                                                l11477 1E24  
                                                l11397 1B9C  
                                                l11661 3878  
                                                l11653 3864  
                                                l11717 3B8C  
                                                l10943 4798  
                                                l11807 45E2  
                                                l12287 305C  
                                                l11743 36E0  
                                                l11727 3BE2  
                                                l11719 3B9E  
                                                l10945 479A  
                                                l10929 4764  
                                                l10961 3A0C  
                                                l11577 3DE4  
                                                l11569 3DCC  
                                                l11593 3C82  
                                                l11585 3C30  
                                                l11489 1E66  
                                                l11649 3854  
                                                l13521 0A14  
                                                l13513 0A00  
                                                l10955 3978  
                                                l13099 2BB4  
                                                l11667 3894  
                                                l11659 386C  
                                                l11739 36D6  
                                                l11755 3F3A  
                                                l11931 0104  
                                                l13515 0A02  
                                                l11589 3C64  
                                                l11749 3720  
                                                l11773 27F0  
                                                l11909 0074  
                                                l11917 008A  
                                                l11677 34E8  
                                                l13533 0A20  
                                                l13525 0A18  
                                                l13517 0A10  
                                                l12807 4B2C  
                                                l10967 41FC  
                                                l11847 294C  
                                                l10991 1EAC  
                                                l11791 2910  
                                                l11783 28AC  
                                                l11927 00E2  
                                                l11935 012C  
                                                l11679 34FC  
                                                l13623 0EF2  
                                                l13615 0E7C  
                                                l13551 0AF2  
                                                l10969 4202  
                                                l11849 295C  
                                                l12841 254A  
                                                l11945 0184  
                                                l11953 019E  
                                                l11929 00FA  
                                                l11689 3558  
                                                l11697 3A30  
                                                l13641 100C  
                                                l13633 0F5E  
                                                l13609 0E28  
                                                l13553 0B12  
                                                l13537 0A2A  
                                                l13529 0A1C  
                                                l12835 2454  
                                                l10987 1EA8  
                                                l11787 28E2  
                                                l11963 0218  
                                                l11699 3A44  
                                                l13651 1056  
                                                l13571 0C12  
                                                l13539 0A72  
                                                l13811 168A  
                                                l12829 2434  
                                                l11877 42A2  
                                                l11885 42CC  
                                                l11981 02F2  
                                                l11965 0266  
                                                l13557 0B1E  
                                                l13725 112C  
                                                l12839 2548  
                                                l11991 031A  
                                                l11959 01E0  
                                                l13647 104C  
                                                l13575 0C1E  
                                                l13831 16BE  
                                                l13823 16AA  
                                                l13751 127E  
                                                l12793 4B08  
                                                l12881 3E30  
                                                l11985 0314  
                                                l11969 02A0  
                                                l11897 0048  
                                                l13569 0BF2  
                                                l13657 106C  
                                                l13673 3FFE  
                                                l13817 169E  
                                                l13841 16D4  
                                                l13761 12CE  
                                                l13595 0D74  
                                                l13587 0CFE  
                                                l13675 4026  
                                                l13827 16BA  
                                                l13843 16FA  
                                                l13771 1320  
                                                l13763 12D4  
                                                l13747 1260  
                                                l13781 133C  
                                                l13773 1326  
                                                l13757 12AA  
                                                l13749 1270  
                                                l11999 0362  
                                                l13599 0D9E  
                                                l13767 12FA  
                                                l13857 1724  
                                                l13785 1348  
                                                l13787 134E  
                                                l13779 1336  
                                        ___fltol@sign1 0068  
                                                _ADACT 003EFE  
                                                _ADCAP 003EF5  
                                                ?_atoi 0066  
                                      __end_of___fladd 2188  
                                                ?_main 0001  
                                                _ADCLK 003EFF  
                                                _ADCNT 003EEB  
                                                _ADPCH 003EF1  
                                      __end_of___fldiv 2410  
                                                _ADREF 003EFD  
                                      __end_of___awdiv 3D0A  
                                      __end_of___flneg 4A1C  
                                                STR_10 FEB0  
                                                STR_11 FE91  
                                                STR_12 FFA1  
                                                STR_20 FFF6  
                                                STR_13 FFC7  
                                                STR_21 FFF9  
                                                STR_14 FFCA  
                                                STR_30 FFCD  
                                                STR_22 FFF0  
                                                STR_31 FFD5  
                                                STR_15 FE26  
                                                STR_23 FFF3  
                                                STR_40 FFE1  
                                                STR_16 FEEA  
                                                STR_24 FFFC  
                                                STR_17 FEEA  
                                                STR_25 FFEA  
                                                STR_34 FFD1  
                                                STR_18 FF02  
                                                STR_26 FFED  
                                                STR_43 FFDD  
                                                STR_35 FFD9  
                                                STR_19 FF1A  
                                                STR_27 FFE4  
                                                STR_28 FFE7  
                                      __end_of___awmod 3DEE  
                                                STR_29 FE8E  
                                                STR_45 FFDD  
                                                STR_38 FFE1  
                                                _ADRPT 003EEC  
                                      __end_of___flmul 1E7C  
                                      __end_of___flsub 44E2  
                                      __end_of___fltol 38A6  
                                                ?_stoa 006A  
                                                ?_puts 0073  
                                                ?_utoa 007E  
                                                u11120 1DB8  
                                                u10400 1F82  
                                                u10250 3970  
                                                u10410 1F84  
                                                u12010 0064  
                                                u11220 3CCC  
                                                u10270 39B8  
                                                u10280 422C  
                                                u11160 1E14  
                                                u11080 1BB8  
                                                u10440 1FC6  
                                                u11400 37F8  
                                                u12120 0300  
                                                u11330 3C7E  
                                                u11170 1E32  
                                                u11410 3828  
                                                u13011 244E  
                                      __end_of___lodiv 3590  
                                      ___awdiv@divisor 0062  
                                                u10390 1F72  
                                                u10710 48F0  
                                                u12150 0332  
                                                u10287 421E  
                                                u11415 381E  
                                                u13200 2F70  
                                                u13040 2584  
                                                u11280 3DB8  
                                                u10720 48F2  
                                                u11520 3A48  
                                                u10650 2148  
                                                u10570 20D8  
                                                u11450 387E  
                                                u12090 02C8  
                                                _U1P1H 003DED  
                                                u12260 0570  
                                                _U1P2H 003DEF  
                                                u13038 2534  
                                                u10590 20EC  
                                                u11630 3718  
                                                u12190 0380  
                             eaDogM_WriteStringAtPos@c 0073  
                                                _U1P3H 003DF1  
                                                _U1P1L 003DEC  
                                                u11471 34C8  
                                                u11640 371A  
                                                u12440 0912  
                                                u12520 2DD4  
                                                _U1P2L 003DEE  
                                                _T2CON 003FAC  
                                                u11625 36FA  
                                                u10690 3EB2  
                                                u11810 45DE  
                                                u11730 2870  
                                                u11650 3F82  
                                                u12530 2E08  
                                                u11490 3500  
                                                u12610 273C  
                                                _U1P3L 003DF0  
                                                u11715 2808  
                                                u12611 273A  
                                                u10940 235E  
                                                u11580 369C  
                                                u11716 280E  
                                                u12460 0970  
                                                u12380 0834  
                                                u12620 274A  
                                                u13085 4980  
                                                u11717 281C  
                                                u11750 28CA  
                                                u12630 274E  
                                                u13430 0B58  
                                                u13095 494E  
                                                u11735 2866  
                                                u12471 2D36  
                                                u11920 29F0  
                                                u11680 27BE  
                                                u12560 2E6C  
                                                u10697 3EA4  
                                                u11585 3692  
                                                u11657 3F74  
                                                u12537 2DFA  
                                                u11930 2A24  
                                                u11690 27DE  
                                                u13530 0ECA  
                                                u11835 4666  
                                                u11755 28C0  
                                                u11836 4668  
                                                u11940 2A4E  
                                                u11780 4922  
                                                u12660 30CC  
                                                u10980 23BA  
                                                u12580 25DA  
                                                u13460 0C58  
                                                u11685 27B4  
                             eaDogM_WriteStringAtPos@r 0078  
                                                u11950 2A7C  
                                                u11870 2986  
                                                u12750 4DFA  
                                                u11790 4924  
                                                u10990 23DE  
                                                u11935 2A1E  
                                                u11927 29E2  
                                                _T5CLK 003F9D  
                                                u13640 1318  
                                                u11937 2A10  
                                      __end_of___lomod 3AC4  
                                                u11890 29B6  
                                                u12690 4E1A  
                                                u11947 2A40  
                                                _T2HLT 003FAD  
                                                u11957 2A6E  
                                                u11877 2978  
                                                _T5CON 003F9A  
                                                u11897 29A8  
                                                u12965 43AE  
                                                u12966 43B0  
                                                _T6CON 003F94  
                                                _T6HLT 003F95  
                                                _T2TMR 003FAA  
                                                _U1UIR 003DF8  
                                                _T2RST 003FAF  
                                                _U1RXB 003DE8  
                                                _U1TXB 003DEA  
                               __end_of_DAC1_SetOutput 4EF4  
                                                _T6TMR 003F92  
                                                i2l481 48B8  
                                                _T6RST 003F97  
                                                i2l576 4B6A  
                                  ??_UART1_rx_vect_isr 001D  
                                      ___awdiv@counter 0064  
                                                _OSCEN 0039DD  
                                         vfpfcnvrt@fmt 00D3  
                                         vfpfcnvrt@llu 00DA  
                                                _TMR5H 003F99  
                                                _TMR5L 003F98  
                                                _TRISA 003FC2  
                                                _TRISB 003FC3  
                                                _TRISC 003FC4  
                                                _TRISD 003FC5  
                                                _TRISE 003FC6  
                                                _TRISF 003FC7  
                                          _Default_ISR 4F2C  
                                      _PWM6_Initialize 4D3A  
                             eaDogM_WriteString@strPtr 0070  
                            ?_TMR6_SetInterruptHandler 0060  
                                    _UART1_tx_vect_isr 440C  
                                     __end_of_TMR5_ISR 437A  
                                         _DMA1CON0bits 003BFC  
                                     __end_of_TMR6_ISR 48C6  
                                         _DMA1CON1bits 003BFD  
                                                _dac_v 00FA  
                                                _fh_p0 4B9A  
                                                _fh_p1 4B78  
                                      _DATAEE_ReadByte 4C9A  
                                                _buff1 0400  
                                                _fh_pd 4D80  
                                                _fh_pl 4D6A  
                                                _fh_po 4DD4  
                                                _fh_pp 4DC2  
                                                _fh_pr 4C5E  
                                                _fh_ps 4CEE  
                                                _fh_pu 4D96  
                                                _flags 002D  
                                         _DMA2CON0bits 003BDC  
                                         _DMA2CON1bits 003BDD  
                                                _fputc 3960  
                                                _fputs 3E5C  
                         ??_UART1_framing_err_vect_isr 0016  
                                      __end_of_isdigit 492A  
                                      ?_DAC1_GetOutput 0001  
                                   ?_UART1_tx_vect_isr 0001  
                                                atoi@n 006E  
                                                pad@fp 0073  
                                                atoi@s 0066  
                                                _width 00F4  
                                                _putch 4EC6  
                                                main@i 01BF  
                                      __end_of_isspace 45EA  
                                      __end_of_isupper 48F8  
                                                pclath 003FFA  
                                                pclatu 003FFB  
                                                tablat 003FF5  
                            ??_eaDogM_WriteStringAtPos 0076  
                                                plusw1 003FE3  
                                                plusw2 003FDB  
                                                stoa@i 0076  
                                                stoa@l 007E  
                                                stoa@p 007C  
                                                stoa@s 006C  
                                                stoa@w 0078  
                                                puts@s 0073  
                                                utoa@d 0080  
                                                utoa@i 009C  
                                                utoa@n 0094  
                                                utoa@p 0090  
                                                utoa@w 0092  
                                                status 003FD8  
                  __end_of_UART1_SetRxInterruptHandler 4E48  
                          _UART1_SetRxInterruptHandler 4E3A  
                                      __end_of_sprintf 4290  
                                       ?___fpclassifyf 0060  
                                      __end_of_tolower 4852  
                                      __end_of_strncmp 2A8E  
                                     ___lodiv@dividend 0060  
                                       _UART1_vect_isr 47DC  
             __end_of_UART1_DefaultFramingErrorHandler 4F26  
                   ??_UART1_DefaultFramingErrorHandler 001D  
                    ?_UART1_DefaultFramingErrorHandler 0001  
                     _UART1_DefaultFramingErrorHandler 4F24  
                                  ??_UART1_tx_vect_isr 001A  
                            __end_of_UART1_rx_vect_isr 449C  
                           eaDogM_WriteStringAtPos@row 0079  
                       ??_TMR6_DefaultInterruptHandler 000B  
                                      _TMR5_Initialize 42DE  
                                __end_of_ringBufS_init 4C20  
                                      __initialization 30F8  
                                    send_lcd_data@data 0064  
                                         __end_of_cmdm FE18  
                                         __end_of_atoi 30F8  
                                         __end_of_main 172C  
                              __end_of_DAC1_Initialize 4EDE  
                                         __end_of_stoa 2E76  
                                         __end_of_puts 488C  
                                         __end_of_utoa 2778  
                          ??_UART1_DefaultErrorHandler 001D  
                              __end_of_TMR2_Initialize 4C9A  
                                __end_of_send_lcd_data 4AE8  
                                         ?_UART1_Write 0001  
                                               ??_atoi 0068  
                                               ??_main 01BC  
                             _TMR5_SetInterruptHandler 4E8E  
                                               ??_stoa 006E  
                                               ??_puts 0021  
                                               ??_utoa 0088  
                                        __activetblptr 000003  
                                      ?_DAC1_SetOutput 0001  
                            __end_of_UART1_tx_vect_isr 4454  
                                     ___lodiv@quotient 0070  
                                      _TMR6_Initialize 49BE  
                                     _UART1_Initialize 321C  
                                               ?_fh_p0 0076  
                                               ?_fh_p1 0076  
                                               ?_fh_pd 0076  
                                               _ADACCH 003EE9  
                                               _ADACCL 003EE8  
                                               ?_fh_pl 0076  
                                               ?_fh_po 0076  
                                               ?_fh_pp 0076  
                                               ?_fh_pr 0076  
                                               ?_fh_ps 0076  
                                               _ADACCU 003EEA  
                                               ?_fh_pu 0076  
                                               _ADACQH 003EF4  
                                               _ADACQL 003EF3  
                                               _ADCON0 003EF8  
                                               _ADCON1 003EF9  
                                               _ADCON2 003EFA  
                                               _ADCON3 003EFB  
                                               _ADERRH 003EE3  
                                               _ADERRL 003EE2  
                              send_lcd_data_dma@strPtr 006F  
                                            ??_Adc_Isr 0005  
                                               ?_fputc 0061  
                                               _ADLTHH 003EDF  
                                               _ADLTHL 003EDE  
                                               ?_fputs 006A  
                                               _ADRESH 003EF0  
                                               _ADRESL 003EEF  
                                               _ADPREH 003EF7  
                                               _ADPREL 003EF6  
                                               _DMA1PR 0039F3  
                                               _ADSTAT 003EFC  
                                               _ADUTHH 003EE1  
                                     ___awdiv@dividend 0060  
                                               _ADUTHL 003EE0  
                                               _ANSELA 003A40  
                                               ?_putch 0001  
                                               _ANSELB 003A50  
                                               _ANSELC 003A60  
                                               _ANSELD 003A70  
                                               _ANSELE 003A80  
                                               _ANSELF 003A90  
                                       TimerDone@timer 0020  
                                               _RB1I2C 003A5A  
                                               _RB2I2C 003A5B  
                                               _RD0I2C 003A7A  
                                               _U1CON0 003DF2  
                                               _U1CON1 003DF3  
                                               _U1CON2 003DF4  
                                               _RD1I2C 003A7B  
                                               _RC3I2C 003A6A  
                                               _RC4I2C 003A6B  
                                               _U1BRGH 003DF6  
                                               _U1FIFO 003DF7  
                                               _U1BRGL 003DF5  
                                               _T5GATE 003F9C  
                                               _T5GCON 003F9B  
                                   __cli_interpret_cmd 2410  
                                               _RC3PPS 003A13  
                                               i1l1027 4A44  
                                               _RD2PPS 003A1A  
                                               _RC5PPS 003A15  
                                               _ODCONA 003A42  
                                               _ODCONB 003A52  
                                               _RC6PPS 003A16  
                                               _ODCONC 003A62  
                                               _ODCOND 003A72  
                                               _ODCONE 003A82  
                                               _ODCONF 003A92  
                                               _RF2PPS 003A2A  
                              __end_of_PWM5_Initialize 4D6A  
                                               i2l1265 33E4  
                                               i1l7643 4A40  
                                               _INLVLA 003A44  
                                               _INLVLB 003A54  
                                               _INLVLC 003A64  
                                               _INLVLD 003A74  
                                               _INLVLE 003A84  
                                               _INLVLF 003A94  
                                               i1l9765 4BFC  
                                               _TABLAT 003FF5  
                                               i2l7703 33B4  
                                               i2l7691 339E  
                                               i2l7683 338C  
                                               i2l7685 3390  
                                               i2l7687 3394  
                                               i2l7881 41DA  
                                               i2l7689 3398  
                                               i2l7877 41A8  
                               __end_of_UART1_vect_isr 4818  
                                        ?_init_display 0001  
                                               _OSCFRQ 0039DF  
                                        vfpfcnvrt@done 00E4  
                                               _NVMDAT 0039E3  
                                               _PRLOCK 0039EF  
                                _UART1_SetErrorHandler 4E72  
                                     __end_of___xxtofl 2FB8  
                           ??_ADCC_GetConversionResult 0003  
                             __end_of_send_lcd_cmd_dma 4C5E  
                            ringBufS_flush@clearBuffer 006E  
                                  ?__cli_interpret_cmd 0078  
                      ??_DMA1_SetSCNTIInterruptHandler 0020  
                                     __end_of_cli_init 4524  
                                     __end_of_cli_read 2BE0  
                              DAC1_SetOutput@inputData 0020  
                                               _WaitMs 4A9C  
                                         _CCPTMRS1bits 003F5F  
                                         vfprintf@cfmt 00F0  
                                               ___flge 33F2  
                                               ___fleq 3BFC  
                                            ??___fladd 0068  
                                               ___wmul 4A4A  
                                            ??___fldiv 0068  
                                            ??___awdiv 0020  
                                            ??___flneg 0020  
                                            ??___awmod 0020  
                                               _g_cmds 0280  
                                            ??___flmul 0076  
                                            ??___flsub 0020  
                                            ??___fltol 0064  
                                            ??___lodiv 0020  
                                       _ringBufS_flush 414C  
                                            ??___lomod 0020  
                                               _efgtoa 0000  
                                 send_lcd_cmd_long@cmd 0064  
                                               _floorf 2778  
                                               _memcpy 4290  
                                               _memset 2BE0  
                              __end_of_PWM6_Initialize 4D52  
                                               clear_0 31A2  
                                               clear_1 31B4  
                                               clear_2 31C2  
                                               clear_3 31D4  
                                               clear_4 31E0  
                                               clear_5 31EC  
                                               clear_6 31F8  
                                               clear_7 3204  
                                     ___awdiv@quotient 0066  
                                      ___awmod@divisor 0062  
                                           _Timers_Isr 41A0  
                                               isa$std 000001  
                                      ___awmod@counter 0064  
                                               _printf 4A74  
                                               pad@buf 0075  
                                   _eaDogM_WriteString 3DEE  
                              __end_of_DATAEE_ReadByte 4CB8  
                                               _strcpy 3F2A  
                                            ?_ADCC_ISR 0001  
                                               _strlen 41F2  
                                         __pdataBIGRAM 1543  
                                      _ADCC_Initialize 3D0A  
                                               fputc@c 0061  
                                       _PMD_Initialize 4BBC  
                                 ??__cli_interpret_cmd 007A  
                                               fputs@c 0070  
                                               fputs@i 0071  
                                         __pdataCOMRAM 003F  
                                               fputs@s 006A  
                                            ??_isdigit 0062  
                                      ___fpclassifyf@e 0068  
                                      ___fpclassifyf@u 006A  
                                      ___fpclassifyf@x 0060  
                             ??_UART1_FramingError_ISR 0016  
                                         __mediumconst FDF6  
                                            ??_isspace 0062  
                                               tblptrh 003FF7  
                                            ??_isupper 0062  
                                               tblptrl 003FF6  
                      ??_UART1_SetUartInterruptHandler 0020  
                                               tblptru 003FF8  
                                  ?_eaDogM_WriteString 0070  
                                     __end_of_wdtdelay 440C  
                                               stoa@cp 007A  
                                               stoa@fp 006A  
                                     __end_of_vfprintf 404A  
                                               utoa@fp 007E  
                                        wdtdelay@delay 0060  
                                           _StartTimer 498E  
        UART1_SetUartInterruptHandler@InterruptHandler 0060  
UART1_SetFramingErrorInterruptHandler@InterruptHandler 0060  
          UART1_SetTxInterruptHandler@InterruptHandler 0060  
          UART1_SetRxInterruptHandler@InterruptHandler 0060  
        DMA1_SetSCNTIInterruptHandler@InterruptHandler 0060  
             TMR5_SetInterruptHandler@InterruptHandler 0060  
             TMR6_SetInterruptHandler@InterruptHandler 0060  
          ADCC_SetADIInterruptHandler@InterruptHandler 0060  
                 __end_of_UART1_SetOverrunErrorHandler 4E56  
                         _UART1_SetOverrunErrorHandler 4E48  
                            _UART1_DefaultErrorHandler 4F0E  
                                            ??_sprintf 0021  
                                            ??_tolower 0068  
                                            ??_strncmp 006A  
                                       ??_init_display 0021  
                                           ___flge@ff1 0087  
                                           ___flge@ff2 008B  
                                      ??___fpclassifyf 0064  
                              __end_of_TMR5_Initialize 432C  
                                         ___xxtofl@arg 006A  
                                         ___xxtofl@exp 0069  
                                    _SYSTEM_Initialize 4724  
                                         ___xxtofl@val 0060  
                                           ___fleq@ff1 0060  
                                           ___fleq@ff2 0064  
                                      ?_UART1_vect_isr 0001  
                                           __accesstop 0060  
                              __end_of__initialization 3216  
                                           ___flneg@f1 0060  
                                   ?_SYSTEM_Initialize 0001  
                                        ___rparam_used 000001  
                                           ___fltol@f1 0060  
                                      _TMR5_WriteTimer 4B54  
                                    __end_of_Led_Blink 4C40  
                                 ??_eaDogM_WriteString 0021  
                                    ??_DMA1_Initialize 0020  
                               __end_of_ringBufS_flush 41A0  
                                       __pcstackCOMRAM 0001  
                                         __pidataBANK0 4F20  
                                         __pidataBANK1 4EDE  
                                         __pidataBANK2 404A  
                                  ??_SYSTEM_Initialize 0021  
                                     ?_DAC1_Initialize 0001  
                                        __end_of_fh_p0 4BBC  
                                        __end_of_fh_p1 4B9A  
                                        __end_of_fh_pd 4D96  
                                        __end_of_fh_pl 4D80  
                                        __end_of_fh_po 4DE6  
                                        __end_of_fh_pp 4DD4  
                                        __end_of_fh_pr 4C7C  
                                        __end_of_fh_ps 4D08  
                                        __end_of_fh_pu 4DAC  
                                            ?_TMR5_ISR 0001  
                                            ?_TMR6_ISR 0001  
                                     _DATAEE_WriteByte 462A  
                                       ivt0x8_undefint 00AC  
                                        __end_of_fputc 3A16  
                                        __end_of_fputs 3EC6  
                                    ??_SPI1_Initialize 0020  
                                        __end_of_putch 4ED2  
                                     ?_TMR2_Initialize 0001  
                              __end_of_TMR6_Initialize 49EE  
                               __end_of_PMD_Initialize 4BDE  
                                SPI1_ExchangeByte@data 0020  
                                           ??_ADCC_ISR 0009  
                                __end_of_TMR6_CallBack 4B54  
                                   _spi1_configuration FDF7  
                                TMR6_ISR@CountCallBack 0031  
                          _DMA1_SCNTI_InterruptHandler 0135  
                            _UART1_FramingErrorHandler 0132  
                   __end_of_UART1_framing_err_vect_isr 47DC  
                           _UART1_framing_err_vect_isr 47A0  
                                              ??_fh_p0 0021  
                                              ??_fh_p1 0021  
                                              ??_fh_pd 0021  
                                              ??_fh_pl 0021  
                                              ??_fh_po 0021  
                                              ??_fh_pp 0021  
                                              ??_fh_pr 0021  
                                              ??_fh_ps 0021  
                                              ??_fh_pu 0021  
                                              ??_fputc 0065  
                            __end_of_SYSTEM_Initialize 4762  
                                              ??_fputs 006E  
                                      linux_putc@a_len 0078  
                                              ??_putch 0021  
                                           __pbssBANK0 00F4  
                                           __pbssBANK1 0100  
                                           __pbssBANK2 0200  
                                           __pbssBANK3 0300  
                                           __pbssBANK4 0400  
                                           __pbssBANK5 0500  
                        ?_UART1_SetOverrunErrorHandler 0060  
                               ?_UART1_SetErrorHandler 0060  
                                     ?_PWM5_Initialize 0001  
                                   ringBufS_init@_this 006C  
                             _SystemArbiter_Initialize 4E9C  
                                    __end_of_TimerDone 4B30  
                                              IVTBASEH 003FD6  
                                              IVTBASEL 003FD5  
                                              IVTBASEU 003FD7  
                                     linux_getc@a_data 0060  
                                              ?_WaitMs 0064  
                                       cli_init@a_cmds 0078  
                                      ?_ringBufS_flush 006C  
                                __end_of_wait_lcd_done 4E02  
                                              ?___flge 0087  
                                              ?___fleq 0060  
                                       main@lcd_update 01BE  
                                         ??_UART1_Read 0020  
                                              ?___wmul 0060  
                     __end_of_TMR6_SetInterruptHandler 4E8E  
                              __end_of_ADCC_Initialize 3D7E  
                           __end_of_PWM6_LoadDutyValue 495C  
                                        ?_send_lcd_cmd 0001  
                                           ??_TMR5_ISR 0012  
                                           ??_TMR6_ISR 000C  
                                              ?_efgtoa 0093  
                __end_of_DMA1_SetSCNTIInterruptHandler 4EB8  
                        _DMA1_SetSCNTIInterruptHandler 4EAA  
                                              _ADFLTRH 003EE7  
                                              ?_floorf 0079  
                                              _ADFLTRL 003EE6  
                                              ?_memcpy 0060  
                                              ?_memset 0060  
                                              _DMA1DSA 003BF0  
                                              _DMA2DSA 003BD0  
                                              _DMA1DSZ 003BEE  
                                              _DMA2DSZ 003BCE  
                                              _ADPREVH 003EEE  
                                              _ADPREVL 003EED  
                                              _DMA1SSA 003BF9  
                                              _DMA2SSA 003BD9  
                                              _DMA1SSZ 003BF7  
                                     ?_PWM6_Initialize 0001  
                                              _DMA2SSZ 003BD7  
                                          ?_Timers_Isr 0001  
                                              _ADSTPTH 003EE5  
                                              _ADSTPTL 003EE4  
                                              ?_printf 01A3  
                                      ?_PMD_Initialize 0001  
                                    ?_ringBufS_put_dma 0060  
                                    _UART1_Receive_ISR 3AC4  
                                              ?_strcpy 0060  
                                              ?_strlen 0060  
                                      StartTimer@count 0060  
                                     ?_DATAEE_ReadByte 0060  
                                              _U1ERRIE 003DFA  
                                              _U1ERRIR 003DF9  
                                      StartTimer@timer 0020  
                                              i1l10363 3B60  
                                     ??_DAC1_GetOutput 0020  
                                         ?_Default_ISR 0001  
                                   ??_ringBufS_put_dma 0020  
                                   ?_UART1_Receive_ISR 0001  
                                              _U1RXPPS 003AE5  
                                            ?___xxtofl 0060  
                                   _PWM5_LoadDutyValue 495C  
                                              _OSCCON1 0039D9  
                                              _OSCCON3 0039DB  
                                              _IVTLOCK 003FD4  
                                              _TBLPTRH 003FF7  
                                              _TBLPTRL 003FF6  
                                              _SPI1CLK 003D1C  
                                              _TBLPTRU 003FF8  
                                            ?_cli_init 0076  
                                            ?_cli_read 0084  
                                              _SPI1RXB 003D10  
                                              _NVMADRH 0039E1  
                                              _NVMADRL 0039E0  
                                              _SPI1TXB 003D11  
                                              _OSCTUNE 0039DE  
                                              _NVMCON2 0039E6  
                                              _PWM5DCH 003F6D  
                                              _PWM5DCL 003F6C  
                                              _PWM6DCH 003F69  
                                              _PWM6DCL 003F68  
                                              _PWM5CON 003F6E  
                                              _PWM6CON 003F6A  
                             ?_UART1_UartInterrupt_ISR 0001  
                                              _SLRCONA 003A43  
                                              _SLRCONB 003A53  
                                              _SLRCONC 003A63  
                                              _SLRCOND 003A73  
                                              _SLRCONE 003A83  
                                              _SLRCONF 003A93  
                                          ?_StartTimer 0060  
                           _UART1_UARTInterruptHandler 0021  
                                              _Adc_Isr 330A  
                                           _build_date 01C9  
                                  ??_UART1_Receive_ISR 001D  
                                           _build_time 01C7  
                                     ___lomod@dividend 0060  
                              __end_of_TMR5_WriteTimer 4B78  
                                  ?_PWM5_LoadDutyValue 0060  
                __end_of_UART1_SetUartInterruptHandler 4E2C  
                        _UART1_SetUartInterruptHandler 4E1E  
                                   __end_of_UART1_Read 4724  
                                     ?_TMR5_Initialize 0001  
                                 DATAEE_WriteByte@bAdd 0060  
                                ringBufS_put_dma@_this 0060  
                            INTERRUPT_Initialize@state 0020  
                         __end_of_ringBufS_put_dma_cpy 40F8  
                                              __Hparam 0000  
                                          _SrcVarName0 0193  
                                              __Lparam 0000  
                             __end_of_UART1_Initialize 330A  
                           ??_TMR5_SetInterruptHandler 0020  
                             __cli_interpret_cmd@a_ctx 0078  
                                       ??_send_lcd_cmd 0021  
                                              ___fladd 1E7C  
                                              ___fldiv 2188  
                                              ___awdiv 3C86  
                                              ___flneg 49EE  
                                              ___awmod 3D7E  
                                              ___flmul 1B2C  
                                              ___flsub 449C  
                                              ___fltol 37EC  
                                            ?_wdtdelay 0060  
                                              ___lodiv 34C2  
                                              ___lomod 3A16  
                                              _a_index 0037  
                                     ??_DAC1_SetOutput 0020  
                            __end_of_UART1_Receive_ISR 3B66  
                                            ?_vfprintf 019D  
                                 ??_PWM5_LoadDutyValue 0062  
                                 __end_of_init_display 37EC  
                                              __pcinit 30F8  
                                  _eaDogM_WriteCommand 4DE6  
                                     ?_TMR6_Initialize 0001  
                                              __ramtop 2000  
                                              _cli_ctx 0500  
                                              _i_index 0036  
                                              __ptext0 10A4  
                                              __ptext1 4242  
                                              __ptext2 4D22  
                                              __ptext3 44E2  
                                              __ptext4 4A74  
                                              __ptext5 3FEC  
                                              __ptext6 09B8  
                                              __ptext7 25C8  
                                              __ptext8 3A16  
                                              __ptext9 34C2  
                                _OSCILLATOR_Initialize 4CB8  
                                              _isdigit 48F8  
                                           ??___xxtofl 0064  
                                              _mode_sw 00F9  
                                     ___awmod@dividend 0060  
                             ??_PIN_MANAGER_Initialize 0020  
                                              _isspace 45AA  
                                          Timers_Isr@i 0010  
                                            _T5CONbits 003F9A  
                                              _isupper 48C6  
                                              efgtoa@c 0099  
                                              efgtoa@d 00B1  
                                              efgtoa@e 00C9  
                                              efgtoa@f 0095  
                                              efgtoa@g 00C3  
                                              efgtoa@h 00BB  
                                              efgtoa@i 00C7  
                                              efgtoa@l 00BF  
                                              efgtoa@m 00AB  
                                              efgtoa@n 00CB  
                                              efgtoa@p 00B5  
                                              efgtoa@t 00A5  
                                              efgtoa@u 00CD  
                                              efgtoa@w 00B8  
                                           ??_cli_init 0021  
                                           ??_cli_read 0086  
                                        ?_wait_lcd_set 0001  
                                              _ps_type 02B2  
                                              atoi@neg 006C  
                                           _linux_getc 4AE8  
                                              _sprintf 4242  
                                              _tolower 4818  
                                           _linux_putc 4E02  
                                    __end_of_scmd_init 4D3A  
                                              _strncmp 2922  
                                 end_of_initialization 3216  
                                            _U1UIRbits 003DF8  
                                              floorf@e 0087  
                                              floorf@m 0083  
                                              floorf@u 0089  
                                              floorf@x 0079  
                                 ?_eaDogM_WriteCommand 0001  
                                              memcpy@d 0067  
                                              memcpy@n 0064  
                                              memcpy@s 0069  
                                              fputc@fp 0063  
                                            i1u1006_28 4474  
                                            i1u1006_29 4488  
                                              memset@c 0062  
                                              memset@k 0068  
                                              memset@n 0064  
                                              memset@s 006A  
                  __end_of_UART1_SetTxInterruptHandler 4E3A  
                          _UART1_SetTxInterruptHandler 4E2C  
                                              fputs@fp 006C  
                                       display_led@led 0020  
                       ??_UART1_SetOverrunErrorHandler 0020  
                                    ?_send_lcd_cmd_dma 0001  
                               _UART1_FramingError_ISR 4EF4  
                                    __end_of_vfpfcnvrt 10A4  
                                           efgtoa@mode 00BA  
                                   ??_send_lcd_cmd_dma 0021  
                                           efgtoa@sign 00B3  
                                            _SPI1TCNTL 003D12  
                                              postdec1 003FE5  
                                              postdec2 003FDD  
                                              postinc0 003FEE  
                                              postinc1 003FE6  
                                              postinc2 003FDE  
                                           ??_wdtdelay 0020  
                                     ?_ADCC_Initialize 0001  
                                    __end_of_start_lcd 4F08  
                                           ??_vfprintf 0021  
                                       wdtdelay@dcount 0120  
                                    UART1_Write@txData 0020  
                                  _UART1_RxDataHandler 4BDE  
                                              strcpy@d 0068  
                                              strlen@a 0062  
                                              strcpy@s 0066  
                                              strlen@s 0060  
                                            _PORTAbits 003FCA  
                                            _PORTBbits 003FCB  
                             _TMR6_SetInterruptHandler 4E80  
                      __end_of_UART1_UartInterrupt_ISR 4F1A  
                       ?_DMA1_SetSCNTIInterruptHandler 0060  
                                _TMR5_InterruptHandler 0138  
                                          ___fladd@grs 006F  
                                WaitMs@numMilliseconds 0064  
                  __end_of_ADCC_SetADIInterruptHandler 4EC6  
                          _ADCC_SetADIInterruptHandler 4EB8  
                                        ___xxtofl@sign 0068  
                                       ??_wait_lcd_set 0020  
                                            _TRISCbits 003FC4  
                                     ??_UART1_vect_isr 0018  
                             ?_eaDogM_WriteStringAtPos 0073  
                                          ___fldiv@grs 0073  
                                          ___fldiv@rem 006C  
                             __end_of_DATAEE_WriteByte 466A  
                                      _DMA1_Initialize 3F8C  
                                 ?_UART1_RxDataHandler 0001  
                                     ?_TMR5_WriteTimer 000E  
                                ??_eaDogM_WriteCommand 0021  
                              TMR5_WriteTimer@timerVal 000E  
                                          ___flmul@grs 007D  
                       ??_DMA1_DefaultInterruptHandler 0014  
                        ??_ADCC_SetADIInterruptHandler 0020  
                   _UART1_FramingErrorInterruptHandler 0024  
                                      _SPI1_Initialize 4D08  
                       ?_UART1_SetUartInterruptHandler 0060  
                                    ??_source_dma_done 0014  
                                       __end_of_WaitMs 4AC4  
                         __end_of_INTERRUPT_Initialize 43C4  
                                            _Led_Blink 4C20  
                                        ??_display_led 0060  
                       ??_ADCC_DefaultInterruptHandler 0001  
                                       __end_of___flge 34C2  
                                       __end_of___fleq 3C86  
                                __end_of_build_version FE26  
                                        __pidataBIGRAM 172C  
                                          vfpfcnvrt@ap 00D4  
                                          vfpfcnvrt@cp 00E2  
                                          vfpfcnvrt@ct 00E9  
                                          vfpfcnvrt@fp 00D1  
                                       __end_of___wmul 4A74  
                                        __pidataCOMRAM 4F1E  
                                       __end_of_efgtoa 09B8  
                                       __end_of_floorf 2922  
                                       __end_of_memcpy 42DE  
                               ?_OSCILLATOR_Initialize 0001  
                                           floorf@F526 0118  
                                       __end_of_memset 2D2C  
                            ?_ADCC_GetConversionResult 0001  
                                       __end_of_printf 4A9C  
                                       __end_of_strcpy 3F8C  
                                       __end_of_strlen 4242  
                                  start_initialization 30F8  
                                      ___lodiv@divisor 0068  
                           ??_SystemArbiter_Initialize 0020  
                                      ___lodiv@counter 0078  
                                 _ringBufS_put_dma_cpy 40A4  
                 __end_of_TMR5_DefaultInterruptHandler 4F30  
                         _TMR5_DefaultInterruptHandler 4F2E  
                                          __end_of_pad 3BFC  
                              ??_UART1_SetErrorHandler 0020  
                          ?_UART1_framing_err_vect_isr 0001  
                                          ?_linux_getc 0060  
                                          ?_linux_putc 0076  
                                 __end_of_send_lcd_cmd 46E6  
                                ??_UART1_RxDataHandler 001D  
                                          putch@txData 0060  
                                           ivt0x8_base 0008  
                                        _uart1RxBuffer 0300  
                                __end_of___fpclassifyf 372A  
                                     ??_ringBufS_flush 0020  
                                        _uart1TxBuffer 0240  
                                  DATAEE_ReadByte@bAdd 0060  
                                             ??_WaitMs 0021  
                                          vfprintf@fmt 019F  
                                             ??___flge 008F  
                                             ??___fleq 0068  
                                     ??_PMD_Initialize 0020  
                                            _TimerDone 4B0C  
                                        _ringBufS_init 4C00  
                                             ??___wmul 0020  
                                           ?_Led_Blink 0001  
                                             ??_efgtoa 009A  
                                          __pdataBANK0 00FD  
                                          __pdataBANK1 01C0  
                                          __pdataBANK2 0280  
                                             ??_floorf 007D  
                                             ??_memcpy 0020  
                                             ??_memset 0066  
                                         ??_Timers_Isr 000E  
                                           memset@dest 0060  
                              ringBufS_put_dma_cpy@len 006F  
                              ringBufS_put_dma_cpy@ptr 006D  
                                             ??_printf 0021  
                                        _send_lcd_data 4AC4  
                                             ??_strcpy 0064  
                                             ??_strlen 0020  
                      __end_of_eaDogM_WriteStringAtPos 3F2A  
                                            ___fladd@a 0064  
                                            ___fladd@b 0060  
                                            ___fldiv@a 0064  
                                            ___fldiv@b 0060  
                                          __pbssBIGRAM 0583  
                                  __end_of_display_led 3960  
                          PWM5_LoadDutyValue@dutyValue 0060  
                              __end_of_DMA1_Initialize 3FEC  
                                            ___flmul@a 0072  
                                            ___flmul@b 006E  
                                          __pbssCOMRAM 0021  
                                            ___flsub@a 008B  
                                            ___flsub@b 0087  
                                ?_ringBufS_put_dma_cpy 006B  
                                   _UART1_ErrorHandler 012C  
                                        __pcstackBANK0 0060  
                                        __pcstackBANK1 019D  
                                   _PWM6_LoadDutyValue 492A  
                                  ringBufS_flush@_this 006C  
                                eaDogM_WriteString@len 0072  
                                         ??_StartTimer 0062  
                              __end_of_SPI1_Initialize 4D22  
                             _UART1_RxInterruptHandler 002A  
                        ?_TMR5_DefaultInterruptHandler 0001  
                                             ?_Adc_Isr 0001  
                                  ?_PWM6_LoadDutyValue 0060  
                                         _init_display 372A  
                                       linux_putc@data 0076  
                         ?_UART1_SetRxInterruptHandler 0060  
                                   __end_of_Timers_Isr 41F2  
                                _TMR6_InterruptHandler 013B  
                                          _efgtoa$4180 00A1  
                                          _efgtoa$4172 009F  
                                          _efgtoa$4181 00A3  
                               _PIN_MANAGER_Initialize 3590  
                                        cli_init@a_ctx 0076  
                                       ?_ringBufS_init 006C  
                                    ?_UART1_Initialize 0001  
                                 __end_of_wait_lcd_set 4F02  
                 __end_of_UART1_SetFramingErrorHandler 4E72  
                         _UART1_SetFramingErrorHandler 4E64  
                                           ?_TimerDone 0001  
                                        __pmediumconst FDF6  
                                        cli_read@a_ctx 0084  
                                             ?___fladd 0060  
                                  UART1_Read@readValue 0020  
                                             ?___fldiv 0060  
                                             ?___awdiv 0060  
                                            __ptext100 4CB8  
                                            __ptext101 437A  
                                            __ptext110 4EEA  
                                            __ptext102 3F8C  
                                             ?___flneg 0060  
                                            __ptext111 4F08  
                                            __ptext103 4EAA  
                                            __ptext120 4524  
                                            __ptext112 440C  
                                            __ptext104 4ED2  
                                            __ptext121 4F26  
                                            __ptext113 4A1C  
                                            __ptext105 3D0A  
                                            __ptext130 4F2E  
                                            __ptext122 330A  
                                            __ptext114 4454  
                                            __ptext106 4EB8  
                                            __ptext131 41A0  
                                            __ptext123 4DAC  
                                            __ptext115 3AC4  
                                            __ptext107 492A  
                                            __ptext140 0000  
                                            __ptext132 4B54  
                                            __ptext124 488C  
                                            __ptext116 4F22  
                                            __ptext108 495C  
                                            __ptext133 4568  
                                            __ptext125 4B30  
                                            __ptext117 4F24  
                                            __ptext109 4C9A  
                                            __ptext134 4F30  
                                            __ptext126 4C20  
                                            __ptext118 4F0E  
                                            __ptext135 4F1A  
                                            __ptext127 4F28  
                                            __ptext119 4BDE  
                                            __ptext136 47A0  
                                            __ptext128 4F2C  
                                            __ptext137 4EF4  
                                            __ptext129 432C  
                                            __ptext138 47DC  
                                            __ptext139 4F14  
                                             ?___awmod 0060  
                                             ?___flmul 006E  
                                             ?___flsub 0087  
                                             ?___fltol 0060  
                                             ?___lodiv 0060  
                                             ?___lomod 0060  
                                   ??_UART1_Initialize 0020  
                                   __end_of_StartTimer 49BE  
                                     _uart1RxLastError 0038  
                                        _cli_read$3080 0089  
                                        ??_UART1_Write 0020  
                                 ??_PWM6_LoadDutyValue 0062  
                                             _DAC1CON0 003E9E  
                                             _DAC1CON1 003E9C  
                                       ?_send_lcd_data 0001  
                                            _disp_tick 00FC  
                                             _ADCC_ISR 4524  
                                      ___lomod@divisor 0068  
                                      ___lomod@counter 0020  
             __end_of_UART1_DefaultOverrunErrorHandler 4F24  
                   ??_UART1_DefaultOverrunErrorHandler 001D  
                    ?_UART1_DefaultOverrunErrorHandler 0001  
                     _UART1_DefaultOverrunErrorHandler 4F22  
                                             ?_isdigit 0060  
                                             _DMA1CON0 003BFC  
                                             _DMA1CON1 003BFD  
                                             _DMA1AIRQ 003BFE  
                                             _DMA1DPTR 003BEC  
                                             _DMA1SIRQ 003BFF  
                                             _DMA1SPTR 003BF4  
                                             ?_isspace 0060  
                                             ?_isupper 0060  
                                             ?_sprintf 01A3  
                                             ?_tolower 0066  
                                             _T2CLKCON 003FAE  
                                    _DMA1_DMASCNTI_ISR 4568  
                                             ?_strncmp 0064  
                                          _U1ERRIRbits 003DF9  
                                    ringBufS_put_dma@c 0062  
                                 _INTERRUPT_Initialize 437A  
                                             _T6CLKCON 003F96  
                                 __cli_interpret_cmd@i 0083  
                                   ?_DMA1_DMASCNTI_ISR 0001  
                              ?_UART1_FramingError_ISR 0001  
                                       ___wmul@product 0064  
                                             _LATAbits 003FBA  
                UART1_SetErrorHandler@interruptHandler 0060  
                                             _LATCbits 003FBC  
                                             _LATDbits 003FBD  
                                             _LATEbits 003FBE  
                                            _scmd_init 4D22  
                                             _LATFbits 003FBF  
                                             _IPR1bits 003981  
                                             _IPR2bits 003982  
                                             _IPR3bits 003983  
                                             _PIE1bits 003991  
                                             _PIE2bits 003992  
                                             _PIE3bits 003993  
                                            _tickCount 010C  
                                             _IPR8bits 003988  
                                             _IPR9bits 003989  
                                             _PIE8bits 003998  
                                             _PIE9bits 003999  
                                         _SPI1CON0bits 003D14  
                                             _IVTBASEH 003FD6  
                                             _IVTBASEL 003FD5  
                                             _IVTBASEU 003FD7  
                                            cli_read@i 008B  
                        ??_UART1_SetRxInterruptHandler 0020  
                                            _ring_buf1 0340  
                                             i2u333_48 47BA  
                                             i2u333_49 47CE  
                                             _PIR0bits 0039A0  
                                             i2u335_48 47F6  
                                             i2u335_49 480A  
                                             _PIR1bits 0039A1  
                                             _PIR2bits 0039A2  
                                             _SPI1BAUD 003D19  
                                  ??_DMA1_DMASCNTI_ISR 0014  
                                             i1u678_28 442C  
                                             i1u678_29 4440  
                                             _PIR4bits 0039A4  
                                             _SPI1CON0 003D14  
                                             _SPI1CON1 003D15  
                                             _SPI1CON2 003D16  
                                             i2u640_48 4B40  
                                            _puts$4363 0075  
                                             i2u628_40 4C28  
                                             i2u628_46 4C2A  
                                             i1u990_28 3B4A  
                                             _PIR8bits 0039A8  
                                             i2u672_40 48AC  
                                             i2u671_48 4544  
                                             i2u671_49 4558  
                               send_lcd_cmd_dma@strPtr 0070  
                                             _PIR9bits 0039A9  
                                             i1u986_28 3AEE  
                                             i1u986_29 3B04  
                                             i2u659_40 41F0  
                                             i2u674_48 4358  
                                             i2u674_49 436C  
                           ??_TMR6_SetInterruptHandler 0020  
                                             i1u988_28 3B1E  
                                             i1u988_29 3B34  
                                             i2u676_48 4588  
                                             i2u676_49 459C  
                                          ??_Led_Blink 000B  
                           __end_of_UART1_Transmit_ISR 4A4A  
                                             _TMR5_ISR 432C  
                                             _TMR6_ISR 488C  
                        ?_UART1_SetFramingErrorHandler 0060  
                                          _display_led 38A6  
                                            _port_data 1543  
                                            _vfpfcnvrt 09B8  
                                         _SPI1INTFbits 003D1A  
                                    ___wmul@multiplier 0060  
                                            _static_ps 00FD  
                                            _start_lcd 4F02  
                               ??_ringBufS_put_dma_cpy 0020  
                                        _TMR6_CallBack 4B30  
                     __end_of_SystemArbiter_Initialize 4EAA  
                                     ?_DMA1_Initialize 0001  
                                          fh_p0@a_data 0076  
                                          fh_p1@a_data 0076  
                            ?_TMR5_SetInterruptHandler 0060  
                                  __end_of_UART1_Write 479E  
                            __end_of_DMA1_DMASCNTI_ISR 45AA  
                                DATAEE_WriteByte@bData 0062  
                                         _isspace$4284 0020  
                                           vfpfcnvrt@c 00E8  
                                           vfpfcnvrt@f 00EC  
                                     ?_SPI1_Initialize 0001  
                                          _INTCON0bits 003FD2  
                                            copy_data0 310C  
                                            copy_data1 3132  
                                            copy_data2 3154  
                                ?_INTERRUPT_Initialize 0001  
                                    ??_DAC1_Initialize 0020  
                       __end_of_UART1_FramingError_ISR 4EFC  
                                    ?_DATAEE_WriteByte 0060  
                               _uart1TxBufferRemaining 003C  
                                      _source_dma_done 4F1A  
                                    ??_TMR2_Initialize 0020  
                       ??_TMR5_DefaultInterruptHandler 000E  
                                   ??_DATAEE_WriteByte 0020  
                                           ?_scmd_init 0001  
                                         _uart1RxCount 0039  
                                      ??_ringBufS_init 0020  
                                             __Hrparam 0000  
                     __end_of_ADCC_GetConversionResult 4DC2  
                                            memcpy@tmp 0066  
                                           vfprintf@ap 01A1  
                                             __Lrparam 0000  
                                           vfprintf@fp 019D  
                                    Adc_Isr@c_adc_chan 0033  
                                          ??_TimerDone 0060  
                                        _wait_lcd_done 4DF4  
                                      ??_send_lcd_data 0021  
                              ??_OSCILLATOR_Initialize 0020  
                                         _send_lcd_cmd 46A8  
                                           ?_vfpfcnvrt 00D1  
                                    ??_PWM5_Initialize 0020  
                                             _adc_tick 00FB  
                                       ?_TMR6_CallBack 0001  
                                           ?_start_lcd 0001  
                                   ___fpclassifyf@F465 011C  
                                           sprintf@fmt 01A5  
                                             ___xxtofl 2E76  
                          __end_of_eaDogM_WriteCommand 4DF4  
                                             __pivt0x8 0008  
                                             _cli_init 44E2  
                                             _cli_read 2A8E  
                                             __ptext10 2D2C  
                                             __ptext11 0000  
                                             __ptext20 1E7C  
                                             __ptext12 4818  
                                             __ptext21 49EE  
                                             __ptext13 48C6  
                                             __ptext30 48F8  
                                             __ptext22 1B2C  
                                             __ptext14 3F2A  
                                             __ptext31 4A4A  
                                             __ptext23 33F2  
                                             __ptext15 3B66  
                                             __ptext40 3DEE  
                                             __ptext32 372A  
                                             __ptext24 3BFC  
                                             __ptext16 2778  
                                             __ptext41 40A4  
                                             __ptext33 4AC4  
                                             __ptext25 2188  
                                             __ptext17 365E  
                                             __ptext50 414C  
                                             __ptext42 4290  
                                             __ptext34 466A  
                                             __ptext26 3D7E  
                                             __ptext18 37EC  
                                             __ptext51 38A6  
                                             __ptext43 4DE6  
                                             __ptext35 46A8  
                                             __ptext27 3C86  
                                             __ptext19 449C  
                                             __ptext60 41F2  
                                             __ptext52 2A8E  
                                             __ptext44 4C40  
                                             __ptext36 43C4  
                                             __ptext28 2FB8  
                                             __ptext61 4B78  
                                             __ptext53 2BE0  
                                             __ptext45 4DF4  
                                             __ptext37 4CD4  
                                             __ptext29 45AA  
                                             __ptext70 4852  
                                             __ptext62 4B9A  
                                             __ptext54 4E02  
                                             __ptext46 45EA  
                                             __ptext38 4C00  
                                             __ptext71 3E5C  
                                             __ptext63 4D6A  
                                             __ptext55 4AE8  
                                             __ptext47 4EFC  
                                             __ptext39 3EC6  
                                             __ptext80 4724  
                                             __ptext72 3960  
                                             __ptext64 4D80  
                                             __ptext56 4E10  
                                             __ptext48 4F02  
                                             __ptext81 321C  
                                             __ptext73 4EC6  
                                             __ptext65 4DC2  
                                             __ptext57 46E6  
                                             __ptext49 40F8  
                                             __ptext90 4E80  
                                             __ptext82 4E1E  
                                             __ptext74 4762  
                                             __ptext66 4DD4  
                                             __ptext58 2410  
                                             __ptext91 42DE  
                                             __ptext83 4E2C  
                                             __ptext75 462A  
                                             __ptext67 4CEE  
                                             __ptext59 2922  
                                             __ptext92 4E8E  
                                             __ptext84 4E3A  
                                             __ptext76 2E76  
                                             __ptext68 4C5E  
                                             __ptext93 4C7C  
                                             __ptext85 4E48  
                                             __ptext77 4A9C  
                                             __ptext69 4D96  
                                             __ptext94 4E9C  
                                             __ptext86 4E56  
                                             __ptext78 4B0C  
                                             __ptext95 4D08  
                                             __ptext87 4E64  
                                             __ptext79 498E  
                                             __ptext96 4D3A  
                                             __ptext88 4E72  
                                             __ptext97 4D52  
                                             __ptext89 49BE  
                                             __ptext98 4BBC  
                                             __ptext99 3590  
                                         ??_linux_getc 0021  
                                         ??_linux_putc 0021  
                        __end_of_UART1_SetErrorHandler 4E80  
                          DATAEE_WriteByte@GIEBitValue 0020  
                                           strcpy@dest 0060  
                                     _ringBufS_put_dma 40F8  
                               __cli_interpret_cmd@ret 0082  
                                    ??_PWM6_Initialize 0020  
                              _UART1_UartInterrupt_ISR 4F14  
                                    ??_DATAEE_ReadByte 0020  
                                          _IVTLOCKbits 003FD4  
                                             efgtoa@fp 0093  
                                             efgtoa@ne 00A9  
                                             efgtoa@pp 00A7  
                                             efgtoa@ou 00AD  
                            _UART1_OverrunErrorHandler 012F  
                            _ADCC_ADI_InterruptHandler 013E  
                                            stoa@F1164 01C0  
         UART1_SetOverrunErrorHandler@interruptHandler 0060  
                                       ?_wait_lcd_done 0001  
                                             isa$xinst 000000  
                                             _spi_link 0100  
                                             _roll_max 00FE  
                           ?_UART1_DefaultErrorHandler 0001  
                                          fh_pd@a_data 0076  
                                             _wdtdelay 43C4  
                                             _vfprintf 3FEC  
                                            printf@fmt 01A3  
                                   __end_of_linux_getc 4B0C  
                                    _UART1_is_rx_ready 4E10  
                                   __end_of_linux_putc 4E10  
                                          _UART1_Write 4762  
                           __end_of__cli_interpret_cmd 25C8  
                 __end_of_DMA1_DefaultInterruptHandler 4F32  
                         _DMA1_DefaultInterruptHandler 4F30  
                                    ??_TMR5_Initialize 0063  
                                   ?_UART1_is_rx_ready 0001  
                                        ??_Default_ISR 000E  
                                          fh_pl@a_data 0076  
                       ??_UART1_SetFramingErrorHandler 0020  
                                       _vfpfcnvrt$4219 00E6  
                          __end_of_UART1_RxDataHandler 4C00  
                                        _ps_type_index 0034  
                                          _uart1RxHead 003B  
                                          _uart1TxHead 003E  
                                          _uart1RxTail 003A  
                                          _NVMCON1bits 0039E5  
                                          fh_po@a_data 0076  
                                          _uart1TxTail 003D  
                                             memcpy@d1 0060  
                                             memcpy@s1 0062  
                                          fh_pp@a_data 0076  
                              __end_of_source_dma_done 4F1E  
                                             isdigit@c 0060  
                               ??_INTERRUPT_Initialize 0020  
                                          fh_pr@a_data 0076  
                                         _wait_lcd_set 4EFC  
                                  ??_UART1_is_rx_ready 0020  
                                          fh_ps@a_data 0076  
                 __end_of_TMR6_DefaultInterruptHandler 4F2A  
                         _TMR6_DefaultInterruptHandler 4F28  
                                          fh_pu@a_data 0076  
                                    _send_lcd_data_dma 45EA  
                 __end_of_ADCC_DefaultInterruptHandler 4F28  
                         _ADCC_DefaultInterruptHandler 4F26  
                                             intlevel1 0000  
                                             intlevel2 0000  
                                            sprintf@ap 01AF  
                                    _send_lcd_cmd_long 466A  
                                   ?_send_lcd_data_dma 0001  
                                             isspace@c 0060  
                              ?_PIN_MANAGER_Initialize 0001  
                                    ??_TMR6_Initialize 0020  
                                          ??_scmd_init 0021  
                                   ?_send_lcd_cmd_long 0001  
                                            strcpy@src 0062  
                           __end_of_eaDogM_WriteString 3E5C  
                                             isupper@c 0060  
                                            strncmp@_l 0064  
                                            strncmp@_r 0066  
                            ?_SystemArbiter_Initialize 0001  
                                  _uart1RxStatusBuffer 0200  
                                  ??_send_lcd_data_dma 0021  
                                          efgtoa@nmode 00B7  
                                           _SPI1SDIPPS 003ADF  
                                           _SPI1SCKPPS 003ADE  
                                  ??_send_lcd_cmd_long 0021  
                                             printf@ap 00F2  
                            __end_of_UART1_is_rx_ready 4E1E  
                               eaDogM_WriteCommand@cmd 0071  
                                           _UART1_Read 46E6  
         UART1_SetFramingErrorHandler@interruptHandler 0060  
                             _ADCC_GetConversionResult 4DAC  
                    __end_of_UART1_DefaultErrorHandler 4F14  
                                          ??_vfpfcnvrt 00D6  
                                             stoa@nuls 006F  
                                      ??_TMR6_CallBack 000C  
                                          ??_start_lcd 0020  
                                             sprintf@f 01B1  
                                             tolower@c 0066  
                                             sprintf@s 01A3  
                                     _send_lcd_cmd_dma 4C40  
                                           _PRLOCKbits 0039EF  
                        ?_DMA1_DefaultInterruptHandler 0001  
                                             strncmp@l 006C  
                                             strncmp@n 0068  
                                             strncmp@r 006E  
                          PWM6_LoadDutyValue@dutyValue 0060  
                            __end_of_send_lcd_data_dma 462A  
                             _UART1_TxInterruptHandler 0027  
                            __end_of_send_lcd_cmd_long 46A8  
                                          _ps_type_ptr 003F  
                                        ___fladd@signs 006C  
                                  __end_of_Default_ISR 4F2E  
                       __end_of_PIN_MANAGER_Initialize 365E  
                                    ??_ADCC_Initialize 0020  
                                       _DAC1_GetOutput 4F08  
                        ?_TMR6_DefaultInterruptHandler 0001  
                            ??_UART1_UartInterrupt_ISR 0018  
        __end_of_UART1_SetFramingErrorInterruptHandler 4E64  
              ??_UART1_SetFramingErrorInterruptHandler 0020  
               ?_UART1_SetFramingErrorInterruptHandler 0060  
                _UART1_SetFramingErrorInterruptHandler 4E56  
                                         ___fladd@aexp 006D  
                                         ___fladd@bexp 006E  
                        ?_ADCC_DefaultInterruptHandler 0001  
                         ?_UART1_SetTxInterruptHandler 0060  
                              _eaDogM_WriteStringAtPos 3EC6  
                                      ??_wait_lcd_done 0020  
                           __end_of_spi1_configuration FDFC  
