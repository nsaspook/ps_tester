

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Mar 10 15:29:26 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=3
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=3
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=3
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=3
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=3
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,delta=1
    96                           	psect	text77,global,reloc=4,class=CODE,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1
    99                           	psect	text80,global,reloc=2,class=CODE,delta=1
   100                           	psect	text81,global,reloc=4,class=CODE,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1
   102                           	psect	text83,global,reloc=2,class=CODE,delta=1
   103                           	psect	text84,global,reloc=2,class=CODE,delta=1
   104                           	psect	text85,global,reloc=4,class=CODE,delta=1
   105                           	psect	text86,global,reloc=4,class=CODE,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,delta=1
   107                           	psect	text88,global,reloc=4,class=CODE,delta=1
   108                           	psect	text89,global,reloc=2,class=CODE,delta=1
   109                           	psect	text90,global,reloc=2,class=CODE,delta=1
   110                           	psect	text91,global,reloc=2,class=CODE,delta=1
   111                           	psect	text92,global,reloc=2,class=CODE,delta=1
   112                           	psect	text93,global,reloc=2,class=CODE,delta=1
   113                           	psect	text94,global,reloc=4,class=CODE,delta=1
   114                           	psect	text95,global,reloc=2,class=CODE,delta=1
   115                           	psect	text96,global,reloc=2,class=CODE,delta=1
   116                           	psect	text97,global,reloc=2,class=CODE,delta=1
   117                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   118                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   119                           	psect	text98,global,reloc=2,class=CODE,delta=1
   120                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   121                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   122                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   123  0000                     
   124                           ; Version 2.40
   125                           ; Generated 17/11/2021 GMT
   126                           ; 
   127                           ; Copyright © 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   128                           ; All rights reserved.
   129                           ; 
   130                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   131                           ; 
   132                           ; Redistribution and use in source and binary forms, with or without modification, are
   133                           ; permitted provided that the following conditions are met:
   134                           ; 
   135                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   136                           ;        conditions and the following disclaimer.
   137                           ; 
   138                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   139                           ;        of conditions and the following disclaimer in the documentation and/or other
   140                           ;        materials provided with the distribution. Publication is not required when
   141                           ;        this file is used in an embedded application.
   142                           ; 
   143                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   144                           ;        software without specific prior written permission.
   145                           ; 
   146                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   147                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   148                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   149                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   150                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   151                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   152                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   153                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   154                           ; 
   155                           ; 
   156                           ; Code-generator required, PIC18F57K42 Definitions
   157                           ; 
   158                           ; SFR Addresses
   159  0000                     
   160                           	psect	idataBANK0
   161  005E72                     __pidataBANK0:
   162                           	callstack 0
   163                           
   164                           ;initializer for _build_time
   165  005E72  D5                 	db	low STR_2
   166                           
   167                           ;initializer for _build_date
   168  005E73  C9                 	db	low STR_1
   169                           
   170                           	psect	idataBANK1
   171  005D8C                     __pidataBANK1:
   172                           	callstack 0
   173                           
   174                           ;initializer for stoa@F1164
   175  005D8C  28                 	db	40
   176  005D8D  6E                 	db	110
   177  005D8E  75                 	db	117
   178  005D8F  6C                 	db	108
   179  005D90  6C                 	db	108
   180  005D91  29                 	db	41
   181  005D92  00                 	db	0
   182                           
   183                           ;initializer for _g_cmds
   184  005D93  F8                 	db	low STR_7
   185  005D94  D0                 	db	low _fh_pr
   186  005D95  5B                 	db	high _fh_pr
   187  005D96  00                 	db	low (_fh_pr shr (0+16))
   188  005D97  FB                 	db	low STR_8
   189  005D98  44                 	db	low _fh_ps
   190  005D99  5D                 	db	high _fh_ps
   191  005D9A  00                 	db	low (_fh_ps shr (0+16))
   192  005D9B  F5                 	db	low STR_9
   193  005D9C  2C                 	db	low _fh_po
   194  005D9D  5D                 	db	high _fh_po
   195  005D9E  00                 	db	low (_fh_po shr (0+16))
   196  005D9F  00                 	db	0
   197  005DA0  00                 	db	0
   198  005DA1  00                 	db	0
   199  005DA2  00                 	db	0
   200                           
   201                           	psect	smallconst
   202  002000                     __psmallconst:
   203                           	callstack 0
   204  002000  00                 	db	0
   205  002001  02                 	db	2
   206  002002  40                 	db	64
   207  002003  00                 	db	0
   208  002004  08                 	db	8
   209  002005  00                 	db	0
   210  002006                     __end_of_spi1_configuration:
   211                           	callstack 0
   212  002006                     _cmdm:
   213                           	callstack 0
   214  002006  0D                 	db	13
   215  002007  0A                 	db	10
   216  002008  20                 	db	32
   217  002009  43                 	db	67
   218  00200A  6F                 	db	111
   219  00200B  6D                 	db	109
   220  00200C  6D                 	db	109
   221  00200D  61                 	db	97
   222  00200E  6E                 	db	110
   223  00200F  64                 	db	100
   224  002010  20                 	db	32
   225  002011  70                 	db	112
   226  002012  72                 	db	114
   227  002013  6F                 	db	111
   228  002014  63                 	db	99
   229  002015  65                 	db	101
   230  002016  73                 	db	115
   231  002017  73                 	db	115
   232  002018  6F                 	db	111
   233  002019  72                 	db	114
   234  00201A  20                 	db	32
   235  00201B  56                 	db	86
   236  00201C  30                 	db	48
   237  00201D  2E                 	db	46
   238  00201E  31                 	db	49
   239  00201F  0D                 	db	13
   240  002020  0A                 	db	10
   241  002021  00                 	db	0
   242  002022                     __end_of_cmdm:
   243                           	callstack 0
   244  0000                     _T2CON	set	16300
   245  0000                     _T5CON	set	16282
   246  0000                     _TMR5L	set	16280
   247  0000                     _TMR5H	set	16281
   248  0000                     _T5GCON	set	16283
   249  0000                     _IVTBASEL	set	16341
   250  0000                     _IVTBASEH	set	16342
   251  0000                     _IVTBASEU	set	16343
   252  0000                     _T6CON	set	16276
   253  0000                     _T6RST	set	16279
   254  0000                     _ADERRL	set	16098
   255  0000                     _ADERRH	set	16099
   256  0000                     _ADPREVL	set	16109
   257  0000                     _ADPREVH	set	16110
   258  0000                     _ADFLTRL	set	16102
   259  0000                     _ADFLTRH	set	16103
   260  0000                     _ADACCL	set	16104
   261  0000                     _ADACCH	set	16105
   262  0000                     _ADCNT	set	16107
   263  0000                     _ADRESL	set	16111
   264  0000                     _ADRESH	set	16112
   265  0000                     _ADCON0	set	16120
   266  0000                     _ADCON1	set	16121
   267  0000                     _ADPREH	set	16119
   268  0000                     _ADPREL	set	16118
   269  0000                     _ADCAP	set	16117
   270  0000                     _ADACQH	set	16116
   271  0000                     _ADPCH	set	16113
   272  0000                     _ADRPT	set	16108
   273  0000                     _ADACCU	set	16106
   274  0000                     _ADSTPTH	set	16101
   275  0000                     _ADSTPTL	set	16100
   276  0000                     _ADUTHH	set	16097
   277  0000                     _ADUTHL	set	16096
   278  0000                     _ADLTHH	set	16095
   279  0000                     _OSCTUNE	set	14814
   280  0000                     _OSCFRQ	set	14815
   281  0000                     _OSCEN	set	14813
   282  0000                     _TRISD	set	16325
   283  0000                     _TRISC	set	16324
   284  0000                     _TRISB	set	16323
   285  0000                     _LATC	set	16316
   286  0000                     _LATB	set	16315
   287  0000                     _PLLR	set	118496
   288  0000                     _U1ERRIRbits	set	15865
   289  0000                     _LATFbits	set	16319
   290  0000                     _LATAbits	set	16314
   291  0000                     _LATDbits	set	16317
   292  0000                     _LATEbits	set	16318
   293  0000                     _TRISCbits	set	16324
   294  0000                     _T5CONbits	set	16282
   295  0000                     _IVTLOCKbits	set	16340
   296  0000                     _GIE	set	130711
   297  0000                     _IPR1bits	set	14721
   298  0000                     _IPR3bits	set	14723
   299  0000                     _PIE1bits	set	14737
   300  0000                     _PIR1bits	set	14753
   301  0000                     _PMD0	set	14784
   302  0000                     _OSCCON1	set	14809
   303  0000                     _RC3PPS	set	14867
   304  0000                     _RD2PPS	set	14874
   305  0000                     _ANSELA	set	14912
   306  0000                     _ANSELB	set	14928
   307  0000                     _ANSELC	set	14944
   308  0000                     _ANSELD	set	14960
   309  0000                     _LATA	set	16314
   310  0000                     _LATD	set	16317
   311  0000                     _LATE	set	16318
   312  0000                     _TRISA	set	16322
   313  0000                     _TRISE	set	16326
   314  0000                     _LATF	set	16319
   315  0000                     _PORTAbits	set	16330
   316  0000                     _INTCON0bits	set	16338
   317  0000                     _TRISF	set	16327
   318  0000                     _INLVLD	set	14964
   319  0000                     _SLRCOND	set	14963
   320  0000                     _ODCOND	set	14962
   321  0000                     _RD0I2C	set	14970
   322  0000                     _WPUD	set	14961
   323  0000                     _ANSELE	set	14976
   324  0000                     _INLVLC	set	14948
   325  0000                     _SLRCONC	set	14947
   326  0000                     _ODCONC	set	14946
   327  0000                     _RC3I2C	set	14954
   328  0000                     _WPUC	set	14945
   329  0000                     _INLVLB	set	14932
   330  0000                     _SLRCONB	set	14931
   331  0000                     _ODCONB	set	14930
   332  0000                     _RB1I2C	set	14938
   333  0000                     _WPUB	set	14929
   334  0000                     _INLVLE	set	14980
   335  0000                     _SLRCONE	set	14979
   336  0000                     _ODCONE	set	14978
   337  0000                     _WPUE	set	14977
   338  0000                     _ANSELF	set	14992
   339  0000                     _SPI1SCKPPS	set	15070
   340  0000                     _INLVLF	set	14996
   341  0000                     _SLRCONF	set	14995
   342  0000                     _ODCONF	set	14994
   343  0000                     _WPUF	set	14993
   344  0000                     _INLVLA	set	14916
   345  0000                     _SLRCONA	set	14915
   346  0000                     _ODCONA	set	14914
   347  0000                     _WPUA	set	14913
   348  0000                     _RB2I2C	set	14939
   349  0000                     _RC4I2C	set	14955
   350  0000                     _RD1I2C	set	14971
   351  0000                     _RF2PPS	set	14890
   352  0000                     _SPI1SDIPPS	set	15071
   353  0000                     _U1RXPPS	set	15077
   354  0000                     _RC5PPS	set	14869
   355  0000                     _RC6PPS	set	14870
   356  0000                     _SPI1RXB	set	15632
   357  0000                     _SPI1TXB	set	15633
   358  0000                     _SPI1TCNTL	set	15634
   359  0000                     _SPI1CON0	set	15636
   360  0000                     _U1RXB	set	15848
   361  0000                     _U1TXB	set	15850
   362  0000                     _U1P1L	set	15852
   363  0000                     _DAC1CON1	set	16028
   364  0000                     _DAC1CON0	set	16030
   365  0000                     _ADLTHL	set	16094
   366  0000                     _OSCCON3	set	14811
   367  0000                     _PMD7	set	14791
   368  0000                     _PMD6	set	14790
   369  0000                     _PMD5	set	14789
   370  0000                     _PMD4	set	14788
   371  0000                     _PMD3	set	14787
   372  0000                     _PMD2	set	14786
   373  0000                     _PMD1	set	14785
   374  0000                     _ADACQL	set	16115
   375  0000                     _CCPTMRS1bits	set	16223
   376  0000                     _PWM5DCL	set	16236
   377  0000                     _PWM5DCH	set	16237
   378  0000                     _PWM5CON	set	16238
   379  0000                     _T6TMR	set	16274
   380  0000                     _T6PR	set	16275
   381  0000                     _T6HLT	set	16277
   382  0000                     _T6CLKCON	set	16278
   383  0000                     _ADCLK	set	16127
   384  0000                     _ADACT	set	16126
   385  0000                     _ADREF	set	16125
   386  0000                     _ADSTAT	set	16124
   387  0000                     _ADCON3	set	16123
   388  0000                     _ADCON2	set	16122
   389  0000                     _PIR4bits	set	14756
   390  0000                     _PIR2bits	set	14754
   391  0000                     _PIR8bits	set	14760
   392  0000                     _PIR9bits	set	14761
   393  0000                     _PIE3bits	set	14739
   394  0000                     _PIE9bits	set	14745
   395  0000                     _IVTLOCK	set	16340
   396  0000                     _IPR8bits	set	14728
   397  0000                     _IPR9bits	set	14729
   398  0000                     _PIE8bits	set	14744
   399  0000                     _U1ERRIE	set	15866
   400  0000                     _U1ERRIR	set	15865
   401  0000                     _U1UIR	set	15864
   402  0000                     _U1FIFO	set	15863
   403  0000                     _U1BRGH	set	15862
   404  0000                     _U1BRGL	set	15861
   405  0000                     _U1CON2	set	15860
   406  0000                     _U1CON1	set	15859
   407  0000                     _U1CON0	set	15858
   408  0000                     _U1P3H	set	15857
   409  0000                     _U1P3L	set	15856
   410  0000                     _U1P2H	set	15855
   411  0000                     _U1P2L	set	15854
   412  0000                     _U1P1H	set	15853
   413  0000                     _T2TMR	set	16298
   414  0000                     _T2PR	set	16299
   415  0000                     _T2HLT	set	16301
   416  0000                     _T2CLKCON	set	16302
   417  0000                     _T5CLK	set	16285
   418  0000                     _T5GATE	set	16284
   419  0000                     _SPI1BAUD	set	15641
   420  0000                     _SPI1CLK	set	15644
   421  0000                     _SPI1CON2	set	15638
   422  0000                     _SPI1CON1	set	15637
   423  0000                     _PWM6DCL	set	16232
   424  0000                     _PWM6DCH	set	16233
   425  0000                     _PWM6CON	set	16234
   426  0000                     _T2RST	set	16303
   427  0000                     _PORTBbits	set	16331
   428  002022                     STR_6:
   429                           
   430                           ; BSR set to: 0
   431  002022  20                 	db	32
   432  002023  50                 	db	80	;'P'
   433  002024  53                 	db	83	;'S'
   434  002025  20                 	db	32
   435  002026  54                 	db	84	;'T'
   436  002027  65                 	db	101	;'e'
   437  002028  73                 	db	115	;'s'
   438  002029  74                 	db	116	;'t'
   439  00202A  20                 	db	32
   440  00202B  25                 	db	37
   441  00202C  31                 	db	49	;'1'
   442  00202D  75                 	db	117	;'u'
   443  00202E  3A                 	db	58	;':'
   444  00202F  20                 	db	32
   445  002030  44                 	db	68	;'D'
   446  002031  41                 	db	65	;'A'
   447  002032  43                 	db	67	;'C'
   448  002033  20                 	db	32
   449  002034  4F                 	db	79	;'O'
   450  002035  55                 	db	85	;'U'
   451  002036  54                 	db	84	;'T'
   452  002037  3D                 	db	61	;'='
   453  002038  25                 	db	37
   454  002039  2E                 	db	46
   455  00203A  32                 	db	50	;'2'
   456  00203B  75                 	db	117	;'u'
   457  00203C  2C                 	db	44
   458  00203D  20                 	db	32
   459  00203E  53                 	db	83	;'S'
   460  00203F  75                 	db	117	;'u'
   461  002040  70                 	db	112	;'p'
   462  002041  70                 	db	112	;'p'
   463  002042  6C                 	db	108	;'l'
   464  002043  79                 	db	121	;'y'
   465  002044  20                 	db	32
   466  002045  52                 	db	82	;'R'
   467  002046  65                 	db	101	;'e'
   468  002047  61                 	db	97	;'a'
   469  002048  64                 	db	100	;'d'
   470  002049  42                 	db	66	;'B'
   471  00204A  61                 	db	97	;'a'
   472  00204B  63                 	db	99	;'c'
   473  00204C  6B                 	db	107	;'k'
   474  00204D  20                 	db	32
   475  00204E  25                 	db	37
   476  00204F  34                 	db	52	;'4'
   477  002050  2E                 	db	46
   478  002051  34                 	db	52	;'4'
   479  002052  75                 	db	117	;'u'
   480  002053  20                 	db	32
   481  002054  56                 	db	86	;'V'
   482  002055  3D                 	db	61	;'='
   483  002056  25                 	db	37
   484  002057  2B                 	db	43
   485  002058  36                 	db	54	;'6'
   486  002059  2E                 	db	46
   487  00205A  31                 	db	49	;'1'
   488  00205B  66                 	db	102	;'f'
   489  00205C  56                 	db	86	;'V'
   490  00205D  20                 	db	32
   491  00205E  25                 	db	37
   492  00205F  34                 	db	52	;'4'
   493  002060  2E                 	db	46
   494  002061  34                 	db	52	;'4'
   495  002062  75                 	db	117	;'u'
   496  002063  20                 	db	32
   497  002064  49                 	db	73	;'I'
   498  002065  3D                 	db	61	;'='
   499  002066  25                 	db	37
   500  002067  2B                 	db	43
   501  002068  33                 	db	51	;'3'
   502  002069  2E                 	db	46
   503  00206A  31                 	db	49	;'1'
   504  00206B  66                 	db	102	;'f'
   505  00206C  6D                 	db	109	;'m'
   506  00206D  41                 	db	65	;'A'
   507  00206E  0D                 	db	13
   508  00206F  0A                 	db	10
   509  002070  00                 	db	0
   510  002071                     STR_3:
   511                           
   512                           ; BSR set to: 0
   513  002071  0D                 	db	13
   514  002072  0A                 	db	10
   515  002073  20                 	db	32
   516  002074  52                 	db	82	;'R'
   517  002075  61                 	db	97	;'a'
   518  002076  6D                 	db	109	;'m'
   519  002077  70                 	db	112	;'p'
   520  002078  20                 	db	32
   521  002079  74                 	db	116	;'t'
   522  00207A  6F                 	db	111	;'o'
   523  00207B  20                 	db	32
   524  00207C  31                 	db	49	;'1'
   525  00207D  30                 	db	48	;'0'
   526  00207E  30                 	db	48	;'0'
   527  00207F  30                 	db	48	;'0'
   528  002080  56                 	db	86	;'V'
   529  002081  44                 	db	68	;'D'
   530  002082  43                 	db	67	;'C'
   531  002083  20                 	db	32
   532  002084  4F                 	db	79	;'O'
   533  002085  4E                 	db	78	;'N'
   534  002086  20                 	db	32
   535  002087  0D                 	db	13
   536  002088  0A                 	db	10
   537  002089  00                 	db	0
   538  00208A                     STR_4:
   539                           
   540                           ; BSR set to: 0
   541  00208A  0D                 	db	13
   542  00208B  0A                 	db	10
   543  00208C  20                 	db	32
   544  00208D  53                 	db	83	;'S'
   545  00208E  74                 	db	116	;'t'
   546  00208F  65                 	db	101	;'e'
   547  002090  61                 	db	97	;'a'
   548  002091  64                 	db	100	;'d'
   549  002092  79                 	db	121	;'y'
   550  002093  20                 	db	32
   551  002094  31                 	db	49	;'1'
   552  002095  30                 	db	48	;'0'
   553  002096  30                 	db	48	;'0'
   554  002097  30                 	db	48	;'0'
   555  002098  56                 	db	86	;'V'
   556  002099  44                 	db	68	;'D'
   557  00209A  43                 	db	67	;'C'
   558  00209B  20                 	db	32
   559  00209C  4F                 	db	79	;'O'
   560  00209D  4E                 	db	78	;'N'
   561  00209E  20                 	db	32
   562  00209F  0D                 	db	13
   563  0020A0  0A                 	db	10
   564  0020A1  00                 	db	0
   565  0020A2                     STR_10:
   566                           
   567                           ; BSR set to: 0
   568  0020A2  0D                 	db	13
   569  0020A3  0A                 	db	10
   570  0020A4  20                 	db	32
   571  0020A5  50                 	db	80	;'P'
   572  0020A6  73                 	db	115	;'s'
   573  0020A7  20                 	db	32
   574  0020A8  54                 	db	84	;'T'
   575  0020A9  65                 	db	101	;'e'
   576  0020AA  73                 	db	115	;'s'
   577  0020AB  74                 	db	116	;'t'
   578  0020AC  65                 	db	101	;'e'
   579  0020AD  72                 	db	114	;'r'
   580  0020AE  20                 	db	32
   581  0020AF  25                 	db	37
   582  0020B0  73                 	db	115	;'s'
   583  0020B1  20                 	db	32
   584  0020B2  25                 	db	37
   585  0020B3  73                 	db	115	;'s'
   586  0020B4  0D                 	db	13
   587  0020B5  0A                 	db	10
   588  0020B6  00                 	db	0
   589  0020B7                     STR_5:
   590                           
   591                           ; BSR set to: 0
   592  0020B7  0D                 	db	13
   593  0020B8  0A                 	db	10
   594  0020B9  20                 	db	32
   595  0020BA  56                 	db	86	;'V'
   596  0020BB  6F                 	db	111	;'o'
   597  0020BC  6C                 	db	108	;'l'
   598  0020BD  74                 	db	116	;'t'
   599  0020BE  61                 	db	97	;'a'
   600  0020BF  67                 	db	103	;'g'
   601  0020C0  65                 	db	101	;'e'
   602  0020C1  20                 	db	32
   603  0020C2  4F                 	db	79	;'O'
   604  0020C3  46                 	db	70	;'F'
   605  0020C4  46                 	db	70	;'F'
   606  0020C5  20                 	db	32
   607  0020C6  0D                 	db	13
   608  0020C7  0A                 	db	10
   609  0020C8  00                 	db	0
   610  0020C9                     STR_1:
   611                           
   612                           ; BSR set to: 0
   613  0020C9  4D                 	db	77	;'M'
   614  0020CA  61                 	db	97	;'a'
   615  0020CB  72                 	db	114	;'r'
   616  0020CC  20                 	db	32
   617  0020CD  31                 	db	49	;'1'
   618  0020CE  30                 	db	48	;'0'
   619  0020CF  20                 	db	32
   620  0020D0  32                 	db	50	;'2'
   621  0020D1  30                 	db	48	;'0'
   622  0020D2  32                 	db	50	;'2'
   623  0020D3  32                 	db	50	;'2'
   624  0020D4  00                 	db	0
   625  0020D5                     STR_2:
   626                           
   627                           ; BSR set to: 0
   628  0020D5  31                 	db	49	;'1'
   629  0020D6  35                 	db	53	;'5'
   630  0020D7  3A                 	db	58	;':'
   631  0020D8  32                 	db	50	;'2'
   632  0020D9  39                 	db	57	;'9'
   633  0020DA  3A                 	db	58	;':'
   634  0020DB  31                 	db	49	;'1'
   635  0020DC  35                 	db	53	;'5'
   636  0020DD  00                 	db	0
   637  0020DE                     STR_12:
   638                           
   639                           ; BSR set to: 0
   640  0020DE  49                 	db	73	;'I'
   641  0020DF  4E                 	db	78	;'N'
   642  0020E0  46                 	db	70	;'F'
   643  0020E1  00                 	db	0
   644  0020E2                     STR_16:
   645                           
   646                           ; BSR set to: 0
   647  0020E2  4E                 	db	78	;'N'
   648  0020E3  41                 	db	65	;'A'
   649  0020E4  4E                 	db	78	;'N'
   650  0020E5  00                 	db	0
   651  0020E6                     STR_13:
   652                           
   653                           ; BSR set to: 0
   654  0020E6  69                 	db	105	;'i'
   655  0020E7  6E                 	db	110	;'n'
   656  0020E8  66                 	db	102	;'f'
   657  0020E9  00                 	db	0
   658  0020EA                     STR_17:
   659                           
   660                           ; BSR set to: 0
   661  0020EA  6E                 	db	110	;'n'
   662  0020EB  61                 	db	97	;'a'
   663  0020EC  6E                 	db	110	;'n'
   664  0020ED  00                 	db	0
   665  0020EE                     STR_25:
   666                           
   667                           ; BSR set to: 0
   668  0020EE  6C                 	db	108	;'l'
   669  0020EF  6C                 	db	108	;'l'
   670  0020F0  73                 	db	115	;'s'
   671  0020F1  00                 	db	0
   672  0020F2                     STR_20:
   673                           
   674                           ; BSR set to: 0
   675  0020F2  6C                 	db	108	;'l'
   676  0020F3  66                 	db	102	;'f'
   677  0020F4  00                 	db	0
   678  0020F5                     STR_9:
   679                           
   680                           ; BSR set to: 0
   681  0020F5  70                 	db	112	;'p'
   682  0020F6  6F                 	db	111	;'o'
   683  0020F7  00                 	db	0
   684  0020F8                     STR_7:
   685                           
   686                           ; BSR set to: 0
   687  0020F8  70                 	db	112	;'p'
   688  0020F9  72                 	db	114	;'r'
   689  0020FA  00                 	db	0
   690  0020FB                     STR_8:
   691                           
   692                           ; BSR set to: 0
   693  0020FB  70                 	db	112	;'p'
   694  0020FC  73                 	db	115	;'s'
   695  0020FD  00                 	db	0
   696  0020FE  00                 	db	0	; dummy byte at the end
   697  0000                     
   698                           ; #config settings
   699                           
   700                           	psect	cinit
   701  00516C                     __pcinit:
   702                           	callstack 0
   703  00516C                     start_initialization:
   704                           	callstack 0
   705  00516C                     __initialization:
   706                           	callstack 0
   707                           
   708                           ; Initialize objects allocated to BANK1 (23 bytes)
   709                           ; load TBLPTR registers with __pidataBANK1
   710  00516C  0E8C               	movlw	low __pidataBANK1
   711  00516E  6EF6               	movwf	tblptrl,c
   712  005170  0E5D               	movlw	high __pidataBANK1
   713  005172  6EF7               	movwf	tblptrh,c
   714  005174  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   715  005176  6EF8               	movwf	tblptru,c
   716  005178  EE00  F1E8         	lfsr	0,__pdataBANK1
   717  00517C  EE10 F017          	lfsr	1,23
   718  005180                     copy_data0:
   719  005180  0009               	tblrd		*+
   720  005182  006F FFD7 FFEE     	movff	tablat,postinc0
   721  005188  50E5               	movf	postdec1,w,c
   722  00518A  50E1               	movf	fsr1l,w,c
   723  00518C  E1F9               	bnz	copy_data0
   724                           
   725                           ; Initialize objects allocated to BANK0 (2 bytes)
   726                           ; load TBLPTR registers with __pidataBANK0
   727  00518E  0E72               	movlw	low __pidataBANK0
   728  005190  6EF6               	movwf	tblptrl,c
   729  005192  0E5E               	movlw	high __pidataBANK0
   730  005194  6EF7               	movwf	tblptrh,c
   731  005196  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   732  005198  6EF8               	movwf	tblptru,c
   733  00519A  0009               	tblrd		*+	;fetch initializer
   734  00519C  006F FFD4  F0FE    	movff	tablat,__pdataBANK0
   735  0051A2  0009               	tblrd		*+	;fetch initializer
   736  0051A4  006F FFD4  F0FF    	movff	tablat,__pdataBANK0+1
   737                           
   738                           ; Clear objects allocated to BANK3 (255 bytes)
   739  0051AA  EE00  F300         	lfsr	0,__pbssBANK3
   740  0051AE  EE10 F0FF          	lfsr	1,255
   741  0051B2                     clear_0:
   742  0051B2  6AEE               	clrf	postinc0,c
   743  0051B4  50E5               	movf	postdec1,w,c
   744  0051B6  50E1               	movf	fsr1l,w,c
   745  0051B8  E1FC               	bnz	clear_0
   746  0051BA  50E2               	movf	fsr1h,w,c
   747  0051BC  E1FA               	bnz	clear_0
   748                           
   749                           ; Clear objects allocated to BANK2 (195 bytes)
   750  0051BE  EE00  F200         	lfsr	0,__pbssBANK2
   751  0051C2  0EC3               	movlw	195
   752  0051C4                     clear_1:
   753  0051C4  6AEE               	clrf	postinc0,c
   754  0051C6  06E8               	decf	wreg,f,c
   755  0051C8  E1FD               	bnz	clear_1
   756                           
   757                           ; Clear objects allocated to BANK1 (232 bytes)
   758  0051CA  EE00  F100         	lfsr	0,__pbssBANK1
   759  0051CE  0EE8               	movlw	232
   760  0051D0                     clear_2:
   761  0051D0  6AEE               	clrf	postinc0,c
   762  0051D2  06E8               	decf	wreg,f,c
   763  0051D4  E1FD               	bnz	clear_2
   764                           
   765                           ; Clear objects allocated to BANK0 (37 bytes)
   766  0051D6  EE00  F0D9         	lfsr	0,__pbssBANK0
   767  0051DA  0E25               	movlw	37
   768  0051DC                     clear_3:
   769  0051DC  6AEE               	clrf	postinc0,c
   770  0051DE  06E8               	decf	wreg,f,c
   771  0051E0  E1FD               	bnz	clear_3
   772                           
   773                           ; Clear objects allocated to COMRAM (19 bytes)
   774  0051E2  EE00  F039         	lfsr	0,__pbssCOMRAM
   775  0051E6  0E13               	movlw	19
   776  0051E8                     clear_4:
   777  0051E8  6AEE               	clrf	postinc0,c
   778  0051EA  06E8               	decf	wreg,f,c
   779  0051EC  E1FD               	bnz	clear_4
   780                           
   781                           ;
   782                           ; Setup IVTBASE
   783                           ;
   784  0051EE  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   785  0051F0  6ED5               	movwf	213,c
   786  0051F2  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   787  0051F4  6ED6               	movwf	214,c
   788  0051F6  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   789  0051F8  6ED7               	movwf	215,c
   790  0051FA                     end_of_initialization:
   791                           	callstack 0
   792  0051FA                     __end_of__initialization:
   793                           	callstack 0
   794  0051FA  0100               	movlb	0
   795  0051FC  EF15  F01D         	goto	_main	;jump to C main() function
   796                           
   797                           	psect	bssCOMRAM
   798  000039                     __pbssCOMRAM:
   799                           	callstack 0
   800  000039                     _ana:
   801                           	callstack 0
   802  000039                     	ds	4
   803  00003D                     _flags:
   804                           	callstack 0
   805  00003D                     	ds	2
   806  00003F                     _timer5ReloadVal:
   807                           	callstack 0
   808  00003F                     	ds	2
   809  000041                     TMR6_ISR@CountCallBack:
   810                           	callstack 0
   811  000041                     	ds	2
   812  000043                     _res:
   813                           	callstack 0
   814  000043                     	ds	1
   815  000044                     _adc_chan:
   816                           	callstack 0
   817  000044                     	ds	1
   818  000045                     _uart1RxLastError:
   819                           	callstack 0
   820  000045                     	ds	1
   821  000046                     _uart1RxCount:
   822                           	callstack 0
   823  000046                     	ds	1
   824  000047                     _uart1RxTail:
   825                           	callstack 0
   826  000047                     	ds	1
   827  000048                     _uart1RxHead:
   828                           	callstack 0
   829  000048                     	ds	1
   830  000049                     _uart1TxBufferRemaining:
   831                           	callstack 0
   832  000049                     	ds	1
   833  00004A                     _uart1TxTail:
   834                           	callstack 0
   835  00004A                     	ds	1
   836  00004B                     _uart1TxHead:
   837                           	callstack 0
   838  00004B                     	ds	1
   839                           
   840                           	psect	bssBANK0
   841  0000D9                     __pbssBANK0:
   842                           	callstack 0
   843  0000D9                     _vval:
   844                           	callstack 0
   845  0000D9                     	ds	4
   846  0000DD                     _TMR5_InterruptHandler:
   847                           	callstack 0
   848  0000DD                     	ds	3
   849  0000E0                     _UART1_ErrorHandler:
   850                           	callstack 0
   851  0000E0                     	ds	3
   852  0000E3                     _UART1_OverrunErrorHandler:
   853                           	callstack 0
   854  0000E3                     	ds	3
   855  0000E6                     _UART1_FramingErrorHandler:
   856                           	callstack 0
   857  0000E6                     	ds	3
   858  0000E9                     _TMR6_InterruptHandler:
   859                           	callstack 0
   860  0000E9                     	ds	3
   861  0000EC                     _ADCC_ADI_InterruptHandler:
   862                           	callstack 0
   863  0000EC                     	ds	3
   864  0000EF                     _UART1_TxInterruptHandler:
   865                           	callstack 0
   866  0000EF                     	ds	3
   867  0000F2                     _UART1_RxInterruptHandler:
   868                           	callstack 0
   869  0000F2                     	ds	3
   870  0000F5                     _nout:
   871                           	callstack 0
   872  0000F5                     	ds	2
   873  0000F7                     _width:
   874                           	callstack 0
   875  0000F7                     	ds	2
   876  0000F9                     _prec:
   877                           	callstack 0
   878  0000F9                     	ds	2
   879  0000FB                     _mode:
   880                           	callstack 0
   881  0000FB                     	ds	1
   882  0000FC                     _adc_tick:
   883                           	callstack 0
   884  0000FC                     	ds	1
   885  0000FD                     _disp_tick:
   886                           	callstack 0
   887  0000FD                     	ds	1
   888                           
   889                           	psect	dataBANK0
   890  0000FE                     __pdataBANK0:
   891                           	callstack 0
   892  0000FE                     _build_time:
   893                           	callstack 0
   894  0000FE                     	ds	1
   895  0000FF                     _build_date:
   896                           	callstack 0
   897  0000FF                     	ds	1
   898                           
   899                           	psect	bssBANK1
   900  000100                     __pbssBANK1:
   901                           	callstack 0
   902  000100                     _uart1RxStatusBuffer:
   903                           	callstack 0
   904  000100                     	ds	64
   905  000140                     _uart1TxBuffer:
   906                           	callstack 0
   907  000140                     	ds	64
   908  000180                     _tickCount:
   909                           	callstack 0
   910  000180                     	ds	12
   911  00018C                     floorf@F526:
   912                           	callstack 0
   913  00018C                     	ds	4
   914  000190                     ___fpclassifyf@F465:
   915                           	callstack 0
   916  000190                     	ds	4
   917  000194                     _ival:
   918                           	callstack 0
   919  000194                     	ds	4
   920  000198                     _dbuf:
   921                           	callstack 0
   922  000198                     	ds	80
   923                           
   924                           	psect	dataBANK1
   925  0001E8                     __pdataBANK1:
   926                           	callstack 0
   927  0001E8                     stoa@F1164:
   928                           	callstack 0
   929  0001E8                     	ds	7
   930  0001EF                     _g_cmds:
   931                           	callstack 0
   932  0001EF                     	ds	16
   933                           
   934                           	psect	bssBANK2
   935  000200                     __pbssBANK2:
   936                           	callstack 0
   937  000200                     _uart1RxBuffer:
   938                           	callstack 0
   939  000200                     	ds	64
   940  000240                     _cli_ctx:
   941                           	callstack 0
   942  000240                     	ds	131
   943                           
   944                           	psect	bssBANK3
   945  000300                     __pbssBANK3:
   946                           	callstack 0
   947  000300                     _buff1:
   948                           	callstack 0
   949  000300                     	ds	255
   950                           
   951                           	psect	cstackBANK2
   952  0002C3                     __pcstackBANK2:
   953                           	callstack 0
   954  0002C3                     ?_printf:
   955                           	callstack 0
   956  0002C3                     ?_sprintf:
   957                           	callstack 0
   958  0002C3                     printf@fmt:
   959                           	callstack 0
   960  0002C3                     sprintf@s:
   961                           	callstack 0
   962                           
   963                           ; 2 bytes @ 0x0
   964  0002C3                     	ds	2
   965  0002C5                     sprintf@fmt:
   966                           	callstack 0
   967                           
   968                           ; 1 bytes @ 0x2
   969  0002C5                     	ds	5
   970  0002CA                     sprintf@ap:
   971                           	callstack 0
   972                           
   973                           ; 2 bytes @ 0x7
   974  0002CA                     	ds	2
   975  0002CC                     sprintf@f:
   976                           	callstack 0
   977                           
   978                           ; 11 bytes @ 0x9
   979  0002CC                     	ds	11
   980  0002D7                     cli_init@a_ctx:
   981                           	callstack 0
   982                           
   983                           ; 2 bytes @ 0x14
   984  0002D7                     	ds	2
   985  0002D9                     cli_init@a_cmds:
   986                           	callstack 0
   987                           
   988                           ; 2 bytes @ 0x16
   989  0002D9                     	ds	2
   990                           
   991                           	psect	cstackBANK0
   992  000060                     __pcstackBANK0:
   993                           	callstack 0
   994  000060                     ??__cli_interpret_cmd:
   995  000060                     ?_utoa:
   996                           	callstack 0
   997  000060                     ___flmul@sign:
   998                           	callstack 0
   999  000060                     utoa@fp:
  1000                           	callstack 0
  1001  000060                     floorf@m:
  1002                           	callstack 0
  1003                           
  1004                           ; 4 bytes @ 0x0
  1005  000060                     	ds	1
  1006  000061                     ___flmul@aexp:
  1007                           	callstack 0
  1008                           
  1009                           ; 1 bytes @ 0x1
  1010  000061                     	ds	1
  1011  000062                     ___flmul@bexp:
  1012                           	callstack 0
  1013  000062                     utoa@d:
  1014                           	callstack 0
  1015                           
  1016                           ; 8 bytes @ 0x2
  1017  000062                     	ds	1
  1018  000063                     ___flmul@grs:
  1019                           	callstack 0
  1020                           
  1021                           ; 4 bytes @ 0x3
  1022  000063                     	ds	1
  1023  000064                     floorf@e:
  1024                           	callstack 0
  1025                           
  1026                           ; 2 bytes @ 0x4
  1027  000064                     	ds	2
  1028  000066                     floorf@u:
  1029                           	callstack 0
  1030                           
  1031                           ; 4 bytes @ 0x6
  1032  000066                     	ds	1
  1033  000067                     ___flmul@prod:
  1034                           	callstack 0
  1035                           
  1036                           ; 4 bytes @ 0x7
  1037  000067                     	ds	3
  1038  00006A                     ??_utoa:
  1039  00006A                     _cli_read$2504:
  1040                           	callstack 0
  1041                           
  1042                           ; 2 bytes @ 0xA
  1043  00006A                     	ds	1
  1044  00006B                     ___flmul@temp:
  1045                           	callstack 0
  1046                           
  1047                           ; 2 bytes @ 0xB
  1048  00006B                     	ds	1
  1049  00006C                     cli_read@i:
  1050                           	callstack 0
  1051                           
  1052                           ; 1 bytes @ 0xC
  1053  00006C                     	ds	1
  1054  00006D                     ??___flge:
  1055                           
  1056                           ; 1 bytes @ 0xD
  1057  00006D                     	ds	4
  1058  000071                     ?_efgtoa:
  1059                           	callstack 0
  1060  000071                     efgtoa@fp:
  1061                           	callstack 0
  1062                           
  1063                           ; 2 bytes @ 0x11
  1064  000071                     	ds	1
  1065  000072                     utoa@p:
  1066                           	callstack 0
  1067                           
  1068                           ; 2 bytes @ 0x12
  1069  000072                     	ds	1
  1070  000073                     efgtoa@f:
  1071                           	callstack 0
  1072                           
  1073                           ; 4 bytes @ 0x13
  1074  000073                     	ds	1
  1075  000074                     utoa@w:
  1076                           	callstack 0
  1077                           
  1078                           ; 2 bytes @ 0x14
  1079  000074                     	ds	2
  1080  000076                     utoa@n:
  1081                           	callstack 0
  1082                           
  1083                           ; 8 bytes @ 0x16
  1084  000076                     	ds	1
  1085  000077                     efgtoa@c:
  1086                           	callstack 0
  1087                           
  1088                           ; 1 bytes @ 0x17
  1089  000077                     	ds	1
  1090  000078                     ??_efgtoa:
  1091                           
  1092                           ; 1 bytes @ 0x18
  1093  000078                     	ds	5
  1094  00007D                     _efgtoa$3076:
  1095                           	callstack 0
  1096                           
  1097                           ; 2 bytes @ 0x1D
  1098  00007D                     	ds	1
  1099  00007E                     utoa@i:
  1100                           	callstack 0
  1101                           
  1102                           ; 2 bytes @ 0x1E
  1103  00007E                     	ds	1
  1104  00007F                     _efgtoa$3084:
  1105                           	callstack 0
  1106                           
  1107                           ; 2 bytes @ 0x1F
  1108  00007F                     	ds	2
  1109  000081                     _efgtoa$3085:
  1110                           	callstack 0
  1111                           
  1112                           ; 2 bytes @ 0x21
  1113  000081                     	ds	2
  1114  000083                     efgtoa@t:
  1115                           	callstack 0
  1116                           
  1117                           ; 2 bytes @ 0x23
  1118  000083                     	ds	2
  1119  000085                     efgtoa@pp:
  1120                           	callstack 0
  1121                           
  1122                           ; 2 bytes @ 0x25
  1123  000085                     	ds	2
  1124  000087                     efgtoa@ne:
  1125                           	callstack 0
  1126                           
  1127                           ; 2 bytes @ 0x27
  1128  000087                     	ds	2
  1129  000089                     efgtoa@m:
  1130                           	callstack 0
  1131                           
  1132                           ; 2 bytes @ 0x29
  1133  000089                     	ds	2
  1134  00008B                     efgtoa@ou:
  1135                           	callstack 0
  1136                           
  1137                           ; 4 bytes @ 0x2B
  1138  00008B                     	ds	4
  1139  00008F                     efgtoa@d:
  1140                           	callstack 0
  1141                           
  1142                           ; 2 bytes @ 0x2F
  1143  00008F                     	ds	2
  1144  000091                     efgtoa@sign:
  1145                           	callstack 0
  1146                           
  1147                           ; 2 bytes @ 0x31
  1148  000091                     	ds	2
  1149  000093                     efgtoa@p:
  1150                           	callstack 0
  1151                           
  1152                           ; 2 bytes @ 0x33
  1153  000093                     	ds	2
  1154  000095                     efgtoa@nmode:
  1155                           	callstack 0
  1156                           
  1157                           ; 1 bytes @ 0x35
  1158  000095                     	ds	1
  1159  000096                     efgtoa@w:
  1160                           	callstack 0
  1161                           
  1162                           ; 2 bytes @ 0x36
  1163  000096                     	ds	2
  1164  000098                     efgtoa@mode:
  1165                           	callstack 0
  1166                           
  1167                           ; 1 bytes @ 0x38
  1168  000098                     	ds	1
  1169  000099                     efgtoa@h:
  1170                           	callstack 0
  1171                           
  1172                           ; 4 bytes @ 0x39
  1173  000099                     	ds	4
  1174  00009D                     efgtoa@l:
  1175                           	callstack 0
  1176                           
  1177                           ; 4 bytes @ 0x3D
  1178  00009D                     	ds	4
  1179  0000A1                     efgtoa@g:
  1180                           	callstack 0
  1181                           
  1182                           ; 4 bytes @ 0x41
  1183  0000A1                     	ds	4
  1184  0000A5                     efgtoa@i:
  1185                           	callstack 0
  1186                           
  1187                           ; 2 bytes @ 0x45
  1188  0000A5                     	ds	2
  1189  0000A7                     efgtoa@e:
  1190                           	callstack 0
  1191                           
  1192                           ; 2 bytes @ 0x47
  1193  0000A7                     	ds	2
  1194  0000A9                     efgtoa@n:
  1195                           	callstack 0
  1196                           
  1197                           ; 2 bytes @ 0x49
  1198  0000A9                     	ds	2
  1199  0000AB                     efgtoa@u:
  1200                           	callstack 0
  1201                           
  1202                           ; 4 bytes @ 0x4B
  1203  0000AB                     	ds	4
  1204  0000AF                     ?_vfpfcnvrt:
  1205                           	callstack 0
  1206  0000AF                     vfpfcnvrt@fp:
  1207                           	callstack 0
  1208                           
  1209                           ; 2 bytes @ 0x4F
  1210  0000AF                     	ds	2
  1211  0000B1                     vfpfcnvrt@fmt:
  1212                           	callstack 0
  1213                           
  1214                           ; 1 bytes @ 0x51
  1215  0000B1                     	ds	1
  1216  0000B2                     vfpfcnvrt@ap:
  1217                           	callstack 0
  1218                           
  1219                           ; 2 bytes @ 0x52
  1220  0000B2                     	ds	2
  1221  0000B4                     ??_vfpfcnvrt:
  1222                           
  1223                           ; 1 bytes @ 0x54
  1224  0000B4                     	ds	4
  1225  0000B8                     vfpfcnvrt@llu:
  1226                           	callstack 0
  1227                           
  1228                           ; 8 bytes @ 0x58
  1229  0000B8                     	ds	8
  1230  0000C0                     vfpfcnvrt@cp:
  1231                           	callstack 0
  1232                           
  1233                           ; 2 bytes @ 0x60
  1234  0000C0                     	ds	2
  1235  0000C2                     vfpfcnvrt@done:
  1236                           	callstack 0
  1237                           
  1238                           ; 2 bytes @ 0x62
  1239  0000C2                     	ds	2
  1240  0000C4                     _vfpfcnvrt$3123:
  1241                           	callstack 0
  1242                           
  1243                           ; 2 bytes @ 0x64
  1244  0000C4                     	ds	2
  1245  0000C6                     vfpfcnvrt@c:
  1246                           	callstack 0
  1247                           
  1248                           ; 1 bytes @ 0x66
  1249  0000C6                     	ds	1
  1250  0000C7                     vfpfcnvrt@f:
  1251                           	callstack 0
  1252                           
  1253                           ; 4 bytes @ 0x67
  1254  0000C7                     	ds	4
  1255  0000CB                     vfpfcnvrt@ct:
  1256                           	callstack 0
  1257                           
  1258                           ; 3 bytes @ 0x6B
  1259  0000CB                     	ds	3
  1260  0000CE                     ?_vfprintf:
  1261                           	callstack 0
  1262  0000CE                     vfprintf@fp:
  1263                           	callstack 0
  1264                           
  1265                           ; 2 bytes @ 0x6E
  1266  0000CE                     	ds	2
  1267  0000D0                     vfprintf@fmt:
  1268                           	callstack 0
  1269                           
  1270                           ; 1 bytes @ 0x70
  1271  0000D0                     	ds	1
  1272  0000D1                     vfprintf@ap:
  1273                           	callstack 0
  1274                           
  1275                           ; 2 bytes @ 0x71
  1276  0000D1                     	ds	2
  1277  0000D3                     printf@ap:
  1278                           	callstack 0
  1279                           
  1280                           ; 2 bytes @ 0x73
  1281  0000D3                     	ds	2
  1282  0000D5                     ??_main:
  1283                           
  1284                           ; 1 bytes @ 0x75
  1285  0000D5                     	ds	2
  1286  0000D7                     main@mode_sw:
  1287                           	callstack 0
  1288                           
  1289                           ; 1 bytes @ 0x77
  1290  0000D7                     	ds	1
  1291  0000D8                     main@dac_v:
  1292                           	callstack 0
  1293                           
  1294                           ; 1 bytes @ 0x78
  1295  0000D8                     	ds	1
  1296                           
  1297                           	psect	cstackCOMRAM
  1298  000001                     __pcstackCOMRAM:
  1299                           	callstack 0
  1300  000001                     ?_ADCC_GetConversionResult:
  1301                           	callstack 0
  1302                           
  1303                           ; 2 bytes @ 0x0
  1304  000001                     	ds	2
  1305  000003                     ??_ADCC_GetConversionResult:
  1306                           
  1307                           ; 1 bytes @ 0x2
  1308  000003                     	ds	2
  1309  000005                     ??_Adc_Isr:
  1310                           
  1311                           ; 1 bytes @ 0x4
  1312  000005                     	ds	1
  1313  000006                     ??_ADCC_ISR:
  1314                           
  1315                           ; 1 bytes @ 0x5
  1316  000006                     	ds	2
  1317  000008                     ??_Led_Blink:
  1318                           
  1319                           ; 1 bytes @ 0x7
  1320  000008                     	ds	1
  1321  000009                     ??_TMR6_ISR:
  1322                           
  1323                           ; 1 bytes @ 0x8
  1324  000009                     	ds	2
  1325  00000B                     ??_UART1_tx_vect_isr:
  1326                           
  1327                           ; 1 bytes @ 0xA
  1328  00000B                     	ds	2
  1329  00000D                     ??_UART1_rx_vect_isr:
  1330                           
  1331                           ; 1 bytes @ 0xC
  1332  00000D                     	ds	2
  1333  00000F                     TMR5_WriteTimer@timerVal:
  1334                           	callstack 0
  1335                           
  1336                           ; 2 bytes @ 0xE
  1337  00000F                     	ds	2
  1338  000011                     Timers_Isr@i:
  1339                           	callstack 0
  1340                           
  1341                           ; 2 bytes @ 0x10
  1342  000011                     	ds	2
  1343  000013                     ??_TMR5_ISR:
  1344                           
  1345                           ; 1 bytes @ 0x12
  1346  000013                     	ds	2
  1347  000015                     ??_display_led:
  1348  000015                     ?_strlen:
  1349                           	callstack 0
  1350  000015                     ?___fpclassifyf:
  1351                           	callstack 0
  1352  000015                     ?_isupper:
  1353                           	callstack 0
  1354  000015                     ?_isdigit:
  1355                           	callstack 0
  1356  000015                     ?_isspace:
  1357                           	callstack 0
  1358  000015                     ?___wmul:
  1359                           	callstack 0
  1360  000015                     ?___awdiv:
  1361                           	callstack 0
  1362  000015                     ?___awmod:
  1363                           	callstack 0
  1364  000015                     ?___fladd:
  1365                           	callstack 0
  1366  000015                     ?___fldiv:
  1367                           	callstack 0
  1368  000015                     ?___flneg:
  1369                           	callstack 0
  1370  000015                     ?___fltol:
  1371                           	callstack 0
  1372  000015                     ?___xxtofl:
  1373                           	callstack 0
  1374  000015                     ?___lodiv:
  1375                           	callstack 0
  1376  000015                     ?___lomod:
  1377                           	callstack 0
  1378  000015                     DAC1_SetOutput@inputData:
  1379                           	callstack 0
  1380  000015                     INTERRUPT_Initialize@state:
  1381                           	callstack 0
  1382  000015                     UART1_Read@readValue:
  1383                           	callstack 0
  1384  000015                     UART1_Write@txData:
  1385                           	callstack 0
  1386  000015                     PWM5_LoadDutyValue@dutyValue:
  1387                           	callstack 0
  1388  000015                     PWM6_LoadDutyValue@dutyValue:
  1389                           	callstack 0
  1390  000015                     ___wmul@multiplier:
  1391                           	callstack 0
  1392  000015                     ___awdiv@dividend:
  1393                           	callstack 0
  1394  000015                     ___awmod@dividend:
  1395                           	callstack 0
  1396  000015                     memset@dest:
  1397                           	callstack 0
  1398  000015                     isdigit@c:
  1399                           	callstack 0
  1400  000015                     isspace@c:
  1401                           	callstack 0
  1402  000015                     isupper@c:
  1403                           	callstack 0
  1404  000015                     strcpy@dest:
  1405                           	callstack 0
  1406  000015                     strlen@s:
  1407                           	callstack 0
  1408  000015                     ADCC_SetADIInterruptHandler@InterruptHandler:
  1409                           	callstack 0
  1410  000015                     TMR6_SetInterruptHandler@InterruptHandler:
  1411                           	callstack 0
  1412  000015                     UART1_SetFramingErrorHandler@interruptHandler:
  1413                           	callstack 0
  1414  000015                     UART1_SetOverrunErrorHandler@interruptHandler:
  1415                           	callstack 0
  1416  000015                     UART1_SetErrorHandler@interruptHandler:
  1417                           	callstack 0
  1418  000015                     UART1_SetRxInterruptHandler@InterruptHandler:
  1419                           	callstack 0
  1420  000015                     UART1_SetTxInterruptHandler@InterruptHandler:
  1421                           	callstack 0
  1422  000015                     TMR5_SetInterruptHandler@InterruptHandler:
  1423                           	callstack 0
  1424  000015                     ___fleq@ff1:
  1425                           	callstack 0
  1426  000015                     ___flneg@f1:
  1427                           	callstack 0
  1428  000015                     ___fltol@f1:
  1429                           	callstack 0
  1430  000015                     ___fladd@b:
  1431                           	callstack 0
  1432  000015                     ___fldiv@b:
  1433                           	callstack 0
  1434  000015                     ___xxtofl@val:
  1435                           	callstack 0
  1436  000015                     ___fpclassifyf@x:
  1437                           	callstack 0
  1438  000015                     ___lodiv@dividend:
  1439                           	callstack 0
  1440  000015                     ___lomod@dividend:
  1441                           	callstack 0
  1442                           
  1443                           ; 8 bytes @ 0x14
  1444  000015                     	ds	1
  1445  000016                     putch@txData:
  1446                           	callstack 0
  1447  000016                     linux_getc@a_data:
  1448                           	callstack 0
  1449                           
  1450                           ; 1 bytes @ 0x15
  1451  000016                     	ds	1
  1452  000017                     ??_isupper:
  1453  000017                     ??_isdigit:
  1454  000017                     ??_isspace:
  1455  000017                     ??_PWM5_LoadDutyValue:
  1456  000017                     ??_PWM6_LoadDutyValue:
  1457  000017                     ??_linux_getc:
  1458  000017                     ?_fputc:
  1459                           	callstack 0
  1460  000017                     display_led@led:
  1461                           	callstack 0
  1462  000017                     ___wmul@multiplicand:
  1463                           	callstack 0
  1464  000017                     ___awdiv@divisor:
  1465                           	callstack 0
  1466  000017                     ___awmod@divisor:
  1467                           	callstack 0
  1468  000017                     memset@c:
  1469                           	callstack 0
  1470  000017                     fputc@c:
  1471                           	callstack 0
  1472  000017                     strcpy@src:
  1473                           	callstack 0
  1474  000017                     strlen@a:
  1475                           	callstack 0
  1476                           
  1477                           ; 2 bytes @ 0x16
  1478  000017                     	ds	1
  1479  000018                     ??_TMR5_Initialize:
  1480  000018                     
  1481                           ; 1 bytes @ 0x17
  1482  000018                     	ds	1
  1483  000019                     ??___fpclassifyf:
  1484  000019                     ??_strcpy:
  1485  000019                     ??___fltol:
  1486  000019                     ??___xxtofl:
  1487  000019                     ?_strncmp:
  1488                           	callstack 0
  1489  000019                     ___awdiv@counter:
  1490                           	callstack 0
  1491  000019                     ___awmod@counter:
  1492                           	callstack 0
  1493  000019                     ___wmul@product:
  1494                           	callstack 0
  1495  000019                     memset@n:
  1496                           	callstack 0
  1497  000019                     fputc@fp:
  1498                           	callstack 0
  1499  000019                     strncmp@_l:
  1500                           	callstack 0
  1501  000019                     ___fleq@ff2:
  1502                           	callstack 0
  1503  000019                     ___fladd@a:
  1504                           	callstack 0
  1505  000019                     ___fldiv@a:
  1506                           	callstack 0
  1507                           
  1508                           ; 4 bytes @ 0x18
  1509  000019                     	ds	1
  1510  00001A                     ___awdiv@sign:
  1511                           	callstack 0
  1512  00001A                     ___awmod@sign:
  1513                           	callstack 0
  1514                           
  1515                           ; 1 bytes @ 0x19
  1516  00001A                     	ds	1
  1517  00001B                     ??_memset:
  1518  00001B                     ??_fputc:
  1519  00001B                     ?_tolower:
  1520                           	callstack 0
  1521  00001B                     _isspace$3188:
  1522                           	callstack 0
  1523  00001B                     ___awdiv@quotient:
  1524                           	callstack 0
  1525  00001B                     strcpy@s:
  1526                           	callstack 0
  1527  00001B                     strncmp@_r:
  1528                           	callstack 0
  1529  00001B                     tolower@c:
  1530                           	callstack 0
  1531                           
  1532                           ; 2 bytes @ 0x1A
  1533  00001B                     	ds	1
  1534  00001C                     ?_atoi:
  1535                           	callstack 0
  1536  00001C                     atoi@s:
  1537                           	callstack 0
  1538                           
  1539                           ; 1 bytes @ 0x1B
  1540  00001C                     	ds	1
  1541  00001D                     ??___fladd:
  1542  00001D                     ??___fldiv:
  1543  00001D                     ??_tolower:
  1544  00001D                     ??___fleq:
  1545  00001D                     ___fltol@sign1:
  1546                           	callstack 0
  1547  00001D                     ___xxtofl@sign:
  1548                           	callstack 0
  1549  00001D                     memset@k:
  1550                           	callstack 0
  1551  00001D                     ___fpclassifyf@e:
  1552                           	callstack 0
  1553  00001D                     strcpy@d:
  1554                           	callstack 0
  1555  00001D                     strncmp@n:
  1556                           	callstack 0
  1557  00001D                     ___lodiv@divisor:
  1558                           	callstack 0
  1559  00001D                     ___lomod@divisor:
  1560                           	callstack 0
  1561                           
  1562                           ; 8 bytes @ 0x1C
  1563  00001D                     	ds	1
  1564  00001E                     ??_atoi:
  1565  00001E                     ___fltol@exp1:
  1566                           	callstack 0
  1567  00001E                     ___xxtofl@exp:
  1568                           	callstack 0
  1569                           
  1570                           ; 1 bytes @ 0x1D
  1571  00001E                     	ds	1
  1572  00001F                     ??_strncmp:
  1573  00001F                     memset@s:
  1574                           	callstack 0
  1575  00001F                     ___xxtofl@arg:
  1576                           	callstack 0
  1577  00001F                     ___fpclassifyf@u:
  1578                           	callstack 0
  1579                           
  1580                           ; 4 bytes @ 0x1E
  1581  00001F                     	ds	1
  1582  000020                     ?_fputs:
  1583                           	callstack 0
  1584  000020                     ?_stoa:
  1585                           	callstack 0
  1586  000020                     stoa@fp:
  1587                           	callstack 0
  1588  000020                     fputs@s:
  1589                           	callstack 0
  1590                           
  1591                           ; 2 bytes @ 0x1F
  1592  000020                     	ds	1
  1593  000021                     ___fladd@signs:
  1594                           	callstack 0
  1595  000021                     strncmp@l:
  1596                           	callstack 0
  1597  000021                     ___fldiv@rem:
  1598                           	callstack 0
  1599                           
  1600                           ; 4 bytes @ 0x20
  1601  000021                     	ds	1
  1602  000022                     ___fladd@aexp:
  1603                           	callstack 0
  1604  000022                     stoa@s:
  1605                           	callstack 0
  1606  000022                     atoi@neg:
  1607                           	callstack 0
  1608  000022                     fputs@fp:
  1609                           	callstack 0
  1610                           
  1611                           ; 2 bytes @ 0x21
  1612  000022                     	ds	1
  1613  000023                     ?___flmul:
  1614                           	callstack 0
  1615  000023                     ___fladd@bexp:
  1616                           	callstack 0
  1617  000023                     strncmp@r:
  1618                           	callstack 0
  1619  000023                     ___flmul@b:
  1620                           	callstack 0
  1621                           
  1622                           ; 4 bytes @ 0x22
  1623  000023                     	ds	1
  1624  000024                     ??_fputs:
  1625  000024                     ??_stoa:
  1626  000024                     ___fladd@grs:
  1627                           	callstack 0
  1628  000024                     atoi@n:
  1629                           	callstack 0
  1630                           
  1631                           ; 2 bytes @ 0x23
  1632  000024                     	ds	1
  1633  000025                     ___lomod@counter:
  1634                           	callstack 0
  1635  000025                     ___fldiv@sign:
  1636                           	callstack 0
  1637  000025                     stoa@nuls:
  1638                           	callstack 0
  1639  000025                     ___lodiv@quotient:
  1640                           	callstack 0
  1641                           
  1642                           ; 8 bytes @ 0x24
  1643  000025                     	ds	1
  1644  000026                     fputs@c:
  1645                           	callstack 0
  1646  000026                     ___fldiv@new_exp:
  1647                           	callstack 0
  1648                           
  1649                           ; 2 bytes @ 0x25
  1650  000026                     	ds	1
  1651  000027                     fputs@i:
  1652                           	callstack 0
  1653  000027                     ___flmul@a:
  1654                           	callstack 0
  1655                           
  1656                           ; 4 bytes @ 0x26
  1657  000027                     	ds	1
  1658  000028                     ___fldiv@grs:
  1659                           	callstack 0
  1660                           
  1661                           ; 4 bytes @ 0x27
  1662  000028                     	ds	1
  1663  000029                     ?_pad:
  1664                           	callstack 0
  1665  000029                     pad@fp:
  1666                           	callstack 0
  1667  000029                     puts@s:
  1668                           	callstack 0
  1669                           
  1670                           ; 2 bytes @ 0x28
  1671  000029                     	ds	2
  1672  00002B                     ??___flmul:
  1673  00002B                     _puts$3267:
  1674                           	callstack 0
  1675  00002B                     pad@buf:
  1676                           	callstack 0
  1677                           
  1678                           ; 2 bytes @ 0x2A
  1679  00002B                     	ds	1
  1680  00002C                     ___fldiv@bexp:
  1681                           	callstack 0
  1682  00002C                     fh_pr@a_data:
  1683                           	callstack 0
  1684  00002C                     fh_po@a_data:
  1685                           	callstack 0
  1686  00002C                     linux_putc@data:
  1687                           	callstack 0
  1688  00002C                     stoa@i:
  1689                           	callstack 0
  1690                           
  1691                           ; 2 bytes @ 0x2B
  1692  00002C                     	ds	1
  1693  00002D                     ___lodiv@counter:
  1694                           	callstack 0
  1695  00002D                     ___fldiv@aexp:
  1696                           	callstack 0
  1697  00002D                     pad@p:
  1698                           	callstack 0
  1699                           
  1700                           ; 2 bytes @ 0x2C
  1701  00002D                     	ds	1
  1702  00002E                     ?_floorf:
  1703                           	callstack 0
  1704  00002E                     linux_putc@a_len:
  1705                           	callstack 0
  1706  00002E                     __cli_interpret_cmd@a_ctx:
  1707                           	callstack 0
  1708  00002E                     stoa@w:
  1709                           	callstack 0
  1710  00002E                     floorf@x:
  1711                           	callstack 0
  1712                           
  1713                           ; 4 bytes @ 0x2D
  1714  00002E                     	ds	1
  1715  00002F                     ??_pad:
  1716  00002F                     ?___flsub:
  1717                           	callstack 0
  1718  00002F                     ___flge@ff1:
  1719                           	callstack 0
  1720  00002F                     ___flsub@b:
  1721                           	callstack 0
  1722                           
  1723                           ; 4 bytes @ 0x2E
  1724  00002F                     	ds	1
  1725  000030                     __cli_interpret_cmd@ret:
  1726                           	callstack 0
  1727  000030                     pad@i:
  1728                           	callstack 0
  1729  000030                     stoa@cp:
  1730                           	callstack 0
  1731                           
  1732                           ; 2 bytes @ 0x2F
  1733  000030                     	ds	1
  1734  000031                     __cli_interpret_cmd@i:
  1735                           	callstack 0
  1736                           
  1737                           ; 1 bytes @ 0x30
  1738  000031                     	ds	1
  1739  000032                     ??_floorf:
  1740  000032                     cli_read@a_ctx:
  1741                           	callstack 0
  1742  000032                     pad@w:
  1743                           	callstack 0
  1744  000032                     stoa@p:
  1745                           	callstack 0
  1746                           
  1747                           ; 2 bytes @ 0x31
  1748  000032                     	ds	1
  1749  000033                     ___flge@ff2:
  1750                           	callstack 0
  1751  000033                     ___flsub@a:
  1752                           	callstack 0
  1753                           
  1754                           ; 4 bytes @ 0x32
  1755  000033                     	ds	1
  1756  000034                     ??_cli_read:
  1757  000034                     stoa@l:
  1758                           	callstack 0
  1759                           
  1760                           ; 2 bytes @ 0x33
  1761  000034                     	ds	3
  1762  000037                     
  1763                           ; 1 bytes @ 0x36
  1764  000037                     	ds	1
  1765  000038                     vfprintf@cfmt:
  1766                           	callstack 0
  1767                           
  1768                           ; 1 bytes @ 0x37
  1769  000038                     	ds	1
  1770  000039                     
  1771                           ; 1 bytes @ 0x38
  1772 ;;
  1773 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1774 ;;
  1775 ;; *************** function _main *****************
  1776 ;; Defined at:
  1777 ;;		line 121 in file "main.c"
  1778 ;; Parameters:    Size  Location     Type
  1779 ;;		None
  1780 ;; Auto vars:     Size  Location     Type
  1781 ;;  dac_v           1  120[BANK0 ] unsigned char 
  1782 ;;  mode_sw         1  119[BANK0 ] unsigned char 
  1783 ;; Return value:  Size  Location     Type
  1784 ;;                  1    wreg      void 
  1785 ;; Registers used:
  1786 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  1787 ;; Tracked objects:
  1788 ;;		On entry : 0/0
  1789 ;;		On exit  : 3F/0
  1790 ;;		Unchanged: 0/0
  1791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1793 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1794 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1795 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1796 ;;Total ram usage:        4 bytes
  1797 ;; Hardware stack levels required when called: 15
  1798 ;; This function calls:
  1799 ;;		_ADCC_SetADIInterruptHandler
  1800 ;;		_DAC1_GetOutput
  1801 ;;		_DAC1_SetOutput
  1802 ;;		_PWM5_LoadDutyValue
  1803 ;;		_PWM6_LoadDutyValue
  1804 ;;		_SYSTEM_Initialize
  1805 ;;		_TMR5_SetInterruptHandler
  1806 ;;		_TMR6_SetInterruptHandler
  1807 ;;		___flmul
  1808 ;;		___xxtofl
  1809 ;;		_cli_read
  1810 ;;		_display_led
  1811 ;;		_printf
  1812 ;;		_scmd_init
  1813 ;; This function is called by:
  1814 ;;		Startup code after reset
  1815 ;; This function uses a non-reentrant model
  1816 ;;
  1817                           
  1818                           	psect	text0
  1819  003A2A                     __ptext0:
  1820                           	callstack 0
  1821  003A2A                     _main:
  1822                           	callstack 16
  1823                           
  1824                           ;main.c: 123:  uint8_t dac_v = 0, mode_sw = 0;
  1825                           
  1826                           ;incstack = 0
  1827  003A2A  0E00               	movlw	0
  1828  003A2C  0100               	movlb	0	; () banked
  1829  003A2E  6FD8               	movwf	main@dac_v& (0+255),b
  1830  003A30  0E00               	movlw	0
  1831  003A32  6FD7               	movwf	main@mode_sw& (0+255),b
  1832                           
  1833                           ; BSR set to: 0
  1834                           ;main.c: 125:  SYSTEM_Initialize();
  1835  003A34  ECFF  F02C         	call	_SYSTEM_Initialize	;wreg free
  1836                           
  1837                           ; BSR set to: 61
  1838  003A38  92BD               	bcf	189,1,c	;volatile
  1839                           
  1840                           ; BSR set to: 61
  1841  003A3A  94BE               	bcf	190,2,c	;volatile
  1842                           
  1843                           ; BSR set to: 61
  1844                           ;main.c: 129:  TMR6_SetInterruptHandler(Led_Blink);
  1845  003A3C  0EC0               	movlw	low _Led_Blink
  1846  003A3E  6E15               	movwf	TMR6_SetInterruptHandler@InterruptHandler^0,c
  1847  003A40  0E5C               	movlw	high _Led_Blink
  1848  003A42  6E16               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)^0,c
  1849  003A44  0E00               	movlw	low (_Led_Blink shr (0+16))
  1850  003A46  6E17               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)^0,c
  1851  003A48  EC0E  F02F         	call	_TMR6_SetInterruptHandler	;wreg free
  1852                           
  1853                           ;main.c: 130:  TMR5_SetInterruptHandler(Timers_Isr);
  1854  003A4C  0E8E               	movlw	low _Timers_Isr
  1855  003A4E  6E15               	movwf	TMR5_SetInterruptHandler@InterruptHandler^0,c
  1856  003A50  0E55               	movlw	high _Timers_Isr
  1857  003A52  6E16               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)^0,c
  1858  003A54  0E00               	movlw	low (_Timers_Isr shr (0+16))
  1859  003A56  6E17               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)^0,c
  1860  003A58  EC15  F02F         	call	_TMR5_SetInterruptHandler	;wreg free
  1861                           
  1862                           ;main.c: 131:  ADCC_SetADIInterruptHandler(Adc_Isr);
  1863  003A5C  0E8A               	movlw	low _Adc_Isr
  1864  003A5E  6E15               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler^0,c
  1865  003A60  0E59               	movlw	high _Adc_Isr
  1866  003A62  6E16               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)^0,c
  1867  003A64  0E00               	movlw	low (_Adc_Isr shr (0+16))
  1868  003A66  6E17               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+2)^0,c
  1869  003A68  EC1C  F02F         	call	_ADCC_SetADIInterruptHandler	;wreg free
  1870                           
  1871                           ;main.c: 132:  ADPCH = adc_chan;
  1872  003A6C  0060  F113  FEF1   	movff	_adc_chan,16113	;volatile
  1873                           
  1874                           ;main.c: 133:  PWM5_LoadDutyValue(0);
  1875  003A72  0E00               	movlw	0
  1876  003A74  6E16               	movwf	(PWM5_LoadDutyValue@dutyValue+1)^0,c
  1877  003A76  0E00               	movlw	0
  1878  003A78  6E15               	movwf	PWM5_LoadDutyValue@dutyValue^0,c
  1879  003A7A  EC33  F02D         	call	_PWM5_LoadDutyValue	;wreg free
  1880                           
  1881                           ;main.c: 134:  PWM6_LoadDutyValue(0);
  1882  003A7E  0E00               	movlw	0
  1883  003A80  6E16               	movwf	(PWM6_LoadDutyValue@dutyValue+1)^0,c
  1884  003A82  0E00               	movlw	0
  1885  003A84  6E15               	movwf	PWM6_LoadDutyValue@dutyValue^0,c
  1886  003A86  EC1A  F02D         	call	_PWM6_LoadDutyValue	;wreg free
  1887                           
  1888                           ;main.c: 139:  scmd_init();
  1889  003A8A  EC8A  F02E         	call	_scmd_init	;wreg free
  1890                           
  1891                           ;main.c: 142:  (INTCON0bits.GIEH = 1);
  1892  003A8E  8ED2               	bsf	210,7,c	;volatile
  1893                           
  1894                           ;main.c: 147:  DAC1_SetOutput(dac_v);
  1895  003A90  0E00               	movlw	0
  1896  003A92  EC2E  F02F         	call	_DAC1_SetOutput
  1897  003A96                     l10797:
  1898                           
  1899                           ;main.c: 150:   if (adc_tick) {
  1900  003A96  0100               	movlb	0	; () banked
  1901  003A98  51FC               	movf	_adc_tick& (0+255),w,b	;volatile
  1902  003A9A  B4D8               	btfsc	status,2,c
  1903  003A9C  D7FC               	goto	l10797
  1904                           
  1905                           ; BSR set to: 0
  1906                           ;main.c: 151:    if (ana[0] < 900) {
  1907  003A9E  0E84               	movlw	132
  1908  003AA0  5C39               	subwf	_ana^0,w,c	;volatile
  1909  003AA2  0E03               	movlw	3
  1910  003AA4  583A               	subwfb	(_ana+1)^0,w,c	;volatile
  1911  003AA6  B0D8               	btfsc	status,0,c
  1912  003AA8  D004               	goto	l10803
  1913                           
  1914                           ; BSR set to: 0
  1915                           ;main.c: 152:     display_led(oo00_off);
  1916  003AAA  0E00               	movlw	0
  1917  003AAC  ECB3  F026         	call	_display_led
  1918                           
  1919                           ;main.c: 153:    } else {
  1920  003AB0  D00D               	goto	l10809
  1921  003AB2                     l10803:
  1922                           
  1923                           ; BSR set to: 0
  1924                           ;main.c: 154:     if (ana[0] > 1800) {
  1925  003AB2  0E09               	movlw	9
  1926  003AB4  5C39               	subwf	_ana^0,w,c	;volatile
  1927  003AB6  0E07               	movlw	7
  1928  003AB8  583A               	subwfb	(_ana+1)^0,w,c	;volatile
  1929  003ABA  A0D8               	btfss	status,0,c
  1930  003ABC  D004               	goto	l10807
  1931                           
  1932                           ; BSR set to: 0
  1933                           ;main.c: 155:      display_led(oo00_g);
  1934  003ABE  0E01               	movlw	1
  1935  003AC0  ECB3  F026         	call	_display_led
  1936                           
  1937                           ;main.c: 156:     } else {
  1938  003AC4  D003               	goto	l10809
  1939  003AC6                     l10807:
  1940                           
  1941                           ; BSR set to: 0
  1942                           ;main.c: 157:      display_led(oo00_r);
  1943  003AC6  0E02               	movlw	2
  1944  003AC8  ECB3  F026         	call	_display_led
  1945  003ACC                     l10809:
  1946                           
  1947                           ;main.c: 161:    if (ana[1] < 50) {
  1948  003ACC  503C               	movf	(_ana+3)^0,w,c	;volatile
  1949  003ACE  E108               	bnz	l10813
  1950  003AD0  0E32               	movlw	50
  1951  003AD2  5C3B               	subwf	(_ana+2)^0,w,c	;volatile
  1952  003AD4  B0D8               	btfsc	status,0,c
  1953  003AD6  D004               	goto	l10813
  1954                           
  1955                           ;main.c: 162:     display_led(oo10_off);
  1956  003AD8  0E03               	movlw	3
  1957  003ADA  ECB3  F026         	call	_display_led
  1958                           
  1959                           ;main.c: 163:    } else {
  1960  003ADE  D00D               	goto	l10819
  1961  003AE0                     l10813:
  1962                           
  1963                           ;main.c: 164:     if (ana[1] > 150) {
  1964  003AE0  503C               	movf	(_ana+3)^0,w,c	;volatile
  1965  003AE2  E104               	bnz	u12480
  1966  003AE4  0E97               	movlw	151
  1967  003AE6  5C3B               	subwf	(_ana+2)^0,w,c	;volatile
  1968  003AE8  A0D8               	btfss	status,0,c
  1969  003AEA  D004               	goto	l10817
  1970  003AEC                     u12480:
  1971                           
  1972                           ;main.c: 165:      display_led(oo10_g);
  1973  003AEC  0E04               	movlw	4
  1974  003AEE  ECB3  F026         	call	_display_led
  1975                           
  1976                           ;main.c: 166:     } else {
  1977  003AF2  D003               	goto	l10819
  1978  003AF4                     l10817:
  1979                           
  1980                           ;main.c: 167:      display_led(oo10_r);
  1981  003AF4  0E05               	movlw	5
  1982  003AF6  ECB3  F026         	call	_display_led
  1983  003AFA                     l10819:
  1984                           
  1985                           ;main.c: 170:    adc_tick = 0;
  1986  003AFA  0E00               	movlw	0
  1987  003AFC  0100               	movlb	0	; () banked
  1988  003AFE  6FFC               	movwf	_adc_tick& (0+255),b	;volatile
  1989                           
  1990                           ; BSR set to: 0
  1991                           ;main.c: 172:    if (!PORTAbits.RA6) {
  1992  003B00  BCCA               	btfsc	202,6,c	;volatile
  1993  003B02  D004               	goto	l10825
  1994                           
  1995                           ; BSR set to: 0
  1996                           ;main.c: 173:     display_led(oo30_r);
  1997  003B04  0E0B               	movlw	11
  1998  003B06  ECB3  F026         	call	_display_led
  1999                           
  2000                           ;main.c: 174:    } else {
  2001  003B0A  D003               	goto	l10827
  2002  003B0C                     l10825:
  2003                           
  2004                           ; BSR set to: 0
  2005                           ;main.c: 175:     display_led(oo30_off);
  2006  003B0C  0E09               	movlw	9
  2007  003B0E  ECB3  F026         	call	_display_led
  2008  003B12                     l10827:
  2009                           
  2010                           ;main.c: 179:    if (!PORTAbits.RA4) {
  2011  003B12  B8CA               	btfsc	202,4,c	;volatile
  2012  003B14  D004               	goto	l10831
  2013                           
  2014                           ;main.c: 180:     display_led(oo20_g);
  2015  003B16  0E07               	movlw	7
  2016  003B18  ECB3  F026         	call	_display_led
  2017                           
  2018                           ;main.c: 181:    } else {
  2019  003B1C  D003               	goto	l10833
  2020  003B1E                     l10831:
  2021                           
  2022                           ;main.c: 182:     display_led(oo20_off);
  2023  003B1E  0E06               	movlw	6
  2024  003B20  ECB3  F026         	call	_display_led
  2025  003B24                     l10833:
  2026                           
  2027                           ;main.c: 185:    if (disp_tick) {
  2028  003B24  0100               	movlb	0	; () banked
  2029  003B26  51FD               	movf	_disp_tick& (0+255),w,b	;volatile
  2030  003B28  B4D8               	btfsc	status,2,c
  2031  003B2A  D7B5               	goto	l10797
  2032                           
  2033                           ; BSR set to: 0
  2034                           ;main.c: 186:     vval = (double) ana[0] * 0.405194;
  2035  003B2C  C039  F015         	movff	_ana,___xxtofl@val	;volatile
  2036  003B30  C03A  F016         	movff	_ana+1,___xxtofl@val+1	;volatile
  2037  003B34  6A17               	clrf	(___xxtofl@val+2)^0,c
  2038  003B36  6A18               	clrf	(___xxtofl@val+3)^0,c
  2039  003B38  0E00               	movlw	0
  2040  003B3A  EC81  F023         	call	___xxtofl
  2041  003B3E  C015  F023         	movff	?___xxtofl,___flmul@b
  2042  003B42  C016  F024         	movff	?___xxtofl+1,___flmul@b+1
  2043  003B46  C017  F025         	movff	?___xxtofl+2,___flmul@b+2
  2044  003B4A  C018  F026         	movff	?___xxtofl+3,___flmul@b+3
  2045  003B4E  0E97               	movlw	151
  2046  003B50  6E27               	movwf	___flmul@a^0,c
  2047  003B52  0E75               	movlw	117
  2048  003B54  6E28               	movwf	(___flmul@a+1)^0,c
  2049  003B56  0ECF               	movlw	207
  2050  003B58  6E29               	movwf	(___flmul@a+2)^0,c
  2051  003B5A  0E3E               	movlw	62
  2052  003B5C  6E2A               	movwf	(___flmul@a+3)^0,c
  2053  003B5E  ECA2  F018         	call	___flmul	;wreg free
  2054  003B62  C023  F0D9         	movff	?___flmul,_vval
  2055  003B66  C024  F0DA         	movff	?___flmul+1,_vval+1
  2056  003B6A  C025  F0DB         	movff	?___flmul+2,_vval+2
  2057  003B6E  C026  F0DC         	movff	?___flmul+3,_vval+3
  2058                           
  2059                           ;main.c: 187:     ival = (double) ana[1] * 0.004;
  2060  003B72  C03B  F015         	movff	_ana+2,___xxtofl@val	;volatile
  2061  003B76  C03C  F016         	movff	_ana+3,___xxtofl@val+1	;volatile
  2062  003B7A  6A17               	clrf	(___xxtofl@val+2)^0,c
  2063  003B7C  6A18               	clrf	(___xxtofl@val+3)^0,c
  2064  003B7E  0E00               	movlw	0
  2065  003B80  EC81  F023         	call	___xxtofl
  2066  003B84  C015  F023         	movff	?___xxtofl,___flmul@b
  2067  003B88  C016  F024         	movff	?___xxtofl+1,___flmul@b+1
  2068  003B8C  C017  F025         	movff	?___xxtofl+2,___flmul@b+2
  2069  003B90  C018  F026         	movff	?___xxtofl+3,___flmul@b+3
  2070  003B94  0E6F               	movlw	111
  2071  003B96  6E27               	movwf	___flmul@a^0,c
  2072  003B98  0E12               	movlw	18
  2073  003B9A  6E28               	movwf	(___flmul@a+1)^0,c
  2074  003B9C  0E83               	movlw	131
  2075  003B9E  6E29               	movwf	(___flmul@a+2)^0,c
  2076  003BA0  0E3B               	movlw	59
  2077  003BA2  6E2A               	movwf	(___flmul@a+3)^0,c
  2078  003BA4  ECA2  F018         	call	___flmul	;wreg free
  2079  003BA8  C023  F194         	movff	?___flmul,_ival
  2080  003BAC  C024  F195         	movff	?___flmul+1,_ival+1
  2081  003BB0  C025  F196         	movff	?___flmul+2,_ival+2
  2082  003BB4  C026  F197         	movff	?___flmul+3,_ival+3
  2083                           
  2084                           ; BSR set to: 0
  2085                           ;main.c: 188:     printf(" PS Test %1u: DAC OUT=%.2u, Supply ReadBack %4.4u V=%+6.1fV %4
      +                          .4u I=%+3.1fmA\r\n", mode, (uint16_t) DAC1_GetOutput(), ana[0], vval, ana[1], ival);
  2086  003BB8  0E22               	movlw	low STR_6
  2087  003BBA  0102               	movlb	2	; () banked
  2088  003BBC  6FC3               	movwf	printf@fmt& (0+255),b
  2089  003BBE  C0FB  F2C4         	movff	_mode,?_printf+1
  2090  003BC2  6BC5               	clrf	(?_printf+2)& (0+255),b
  2091  003BC4  EC33  F02F         	call	_DAC1_GetOutput	;wreg free
  2092  003BC8  0100               	movlb	0	; () banked
  2093  003BCA  6FD5               	movwf	??_main& (0+255),b
  2094  003BCC  51D5               	movf	??_main& (0+255),w,b
  2095  003BCE  0102               	movlb	2	; () banked
  2096  003BD0  6FC6               	movwf	(?_printf+3)& (0+255),b
  2097  003BD2  6BC7               	clrf	(?_printf+4)& (0+255),b
  2098  003BD4  C039  F2C8         	movff	_ana,?_printf+5	;volatile
  2099  003BD8  C03A  F2C9         	movff	_ana+1,?_printf+6	;volatile
  2100  003BDC  C0D9  F2CA         	movff	_vval,?_printf+7
  2101  003BE0  C0DA  F2CB         	movff	_vval+1,?_printf+8
  2102  003BE4  C0DB  F2CC         	movff	_vval+2,?_printf+9
  2103  003BE8  C0DC  F2CD         	movff	_vval+3,?_printf+10
  2104  003BEC  C03B  F2CE         	movff	_ana+2,?_printf+11	;volatile
  2105  003BF0  C03C  F2CF         	movff	_ana+3,?_printf+12	;volatile
  2106  003BF4  C194  F2D0         	movff	_ival,?_printf+13
  2107  003BF8  C195  F2D1         	movff	_ival+1,?_printf+14
  2108  003BFC  C196  F2D2         	movff	_ival+2,?_printf+15
  2109  003C00  C197  F2D3         	movff	_ival+3,?_printf+16
  2110  003C04  EC1E  F02E         	call	_printf	;wreg free
  2111                           
  2112                           ;main.c: 193:     switch (mode) {
  2113  003C08  D01D               	goto	l10867
  2114  003C0A                     l10839:
  2115                           
  2116                           ; BSR set to: 0
  2117                           ;main.c: 195:      if (dac_v > 19) {
  2118  003C0A  0E13               	movlw	19
  2119  003C0C  65D8               	cpfsgt	main@dac_v& (0+255),b
  2120  003C0E  D002               	goto	l10843
  2121                           
  2122                           ; BSR set to: 0
  2123                           ;main.c: 196:       dac_v = 0;
  2124  003C10  0E00               	movlw	0
  2125  003C12  6FD8               	movwf	main@dac_v& (0+255),b
  2126  003C14                     l10843:
  2127                           
  2128                           ; BSR set to: 0
  2129                           ;main.c: 198:      DAC1_SetOutput(++dac_v);
  2130  003C14  2BD8               	incf	main@dac_v& (0+255),f,b
  2131  003C16  51D8               	movf	main@dac_v& (0+255),w,b
  2132  003C18  EC2E  F02F         	call	_DAC1_SetOutput
  2133  003C1C  D007               	goto	l10853
  2134  003C1E                     l10847:
  2135  003C1E  9ABA               	bcf	186,5,c	;volatile
  2136  003C20  D023               	goto	l10869
  2137  003C22                     l10849:
  2138                           
  2139                           ; BSR set to: 0
  2140                           ;main.c: 203:      dac_v = 20;
  2141  003C22  0E14               	movlw	20
  2142  003C24  6FD8               	movwf	main@dac_v& (0+255),b
  2143                           
  2144                           ; BSR set to: 0
  2145                           ;main.c: 204:      DAC1_SetOutput(dac_v);
  2146  003C26  0E14               	movlw	20
  2147  003C28  EC2E  F02F         	call	_DAC1_SetOutput
  2148  003C2C                     l10853:
  2149  003C2C  82BD               	bsf	189,1,c	;volatile
  2150  003C2E  D7F7               	goto	l10847
  2151  003C30                     l10857:
  2152                           
  2153                           ; BSR set to: 0
  2154                           ;main.c: 210:      mode = off_mode;
  2155  003C30  0E00               	movlw	0
  2156  003C32  6FFB               	movwf	_mode& (0+255),b
  2157                           
  2158                           ;main.c: 211:      dac_v = 0;
  2159  003C34  0E00               	movlw	0
  2160  003C36  6FD8               	movwf	main@dac_v& (0+255),b
  2161                           
  2162                           ; BSR set to: 0
  2163                           ;main.c: 212:      DAC1_SetOutput(dac_v);
  2164  003C38  0E00               	movlw	0
  2165  003C3A  EC2E  F02F         	call	_DAC1_SetOutput
  2166  003C3E  92BD               	bcf	189,1,c	;volatile
  2167  003C40  8ABA               	bsf	186,5,c	;volatile
  2168  003C42  D012               	goto	l10869
  2169  003C44                     l10867:
  2170                           
  2171                           ; BSR set to: 0
  2172  003C44  51FB               	movf	_mode& (0+255),w,b
  2173  003C46  6FD5               	movwf	??_main& (0+255),b
  2174  003C48  6BD6               	clrf	(??_main+1)& (0+255),b
  2175                           
  2176                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2177                           ; Switch size 1, requested type "simple"
  2178                           ; Number of cases is 1, Range of values is 0 to 0
  2179                           ; switch strategies available:
  2180                           ; Name         Instructions Cycles
  2181                           ; simple_byte            4     3 (average)
  2182                           ;	Chosen strategy is simple_byte
  2183  003C4A  51D6               	movf	(??_main+1)& (0+255),w,b
  2184  003C4C  0A00               	xorlw	0	; case 0
  2185  003C4E  A4D8               	btfss	status,2,c
  2186  003C50  D7EF               	goto	l10857
  2187                           
  2188                           ; BSR set to: 0
  2189                           ; Switch size 1, requested type "simple"
  2190                           ; Number of cases is 3, Range of values is 0 to 2
  2191                           ; switch strategies available:
  2192                           ; Name         Instructions Cycles
  2193                           ; simple_byte           10     6 (average)
  2194                           ;	Chosen strategy is simple_byte
  2195  003C52  51D5               	movf	??_main& (0+255),w,b
  2196  003C54  0A00               	xorlw	0	; case 0
  2197  003C56  B4D8               	btfsc	status,2,c
  2198  003C58  D7EB               	goto	l10857
  2199  003C5A  0A01               	xorlw	1	; case 1
  2200  003C5C  B4D8               	btfsc	status,2,c
  2201  003C5E  D7D5               	goto	l10839
  2202  003C60  0A03               	xorlw	3	; case 2
  2203  003C62  B4D8               	btfsc	status,2,c
  2204  003C64  D7DE               	goto	l10849
  2205  003C66  D7E4               	goto	l10857
  2206  003C68                     l10869:
  2207                           
  2208                           ;main.c: 222:     cli_read(&cli_ctx);
  2209  003C68  0E40               	movlw	low _cli_ctx
  2210  003C6A  6E32               	movwf	cli_read@a_ctx^0,c
  2211  003C6C  0E02               	movlw	high _cli_ctx
  2212  003C6E  6E33               	movwf	(cli_read@a_ctx+1)^0,c
  2213  003C70  EC8C  F021         	call	_cli_read	;wreg free
  2214                           
  2215                           ;main.c: 223:     disp_tick = 0;
  2216  003C74  0E00               	movlw	0
  2217  003C76  0100               	movlb	0	; () banked
  2218  003C78  6FFD               	movwf	_disp_tick& (0+255),b	;volatile
  2219                           
  2220                           ; BSR set to: 0
  2221                           ;main.c: 224:     if (!PORTBbits.RB0) {
  2222  003C7A  B0CB               	btfsc	203,0,c	;volatile
  2223  003C7C  D009               	goto	l10883
  2224                           
  2225                           ; BSR set to: 0
  2226                           ;main.c: 225:      if (++mode_sw > 4) {
  2227  003C7E  2BD7               	incf	main@mode_sw& (0+255),f,b
  2228  003C80  0E04               	movlw	4
  2229  003C82  65D7               	cpfsgt	main@mode_sw& (0+255),b
  2230  003C84  D708               	goto	l10797
  2231                           
  2232                           ; BSR set to: 0
  2233                           ;main.c: 226:       mode++;
  2234  003C86  2BFB               	incf	_mode& (0+255),f,b
  2235                           
  2236                           ; BSR set to: 0
  2237                           ;main.c: 227:       mode_sw = 0;
  2238  003C88  0E00               	movlw	0
  2239  003C8A  6FD7               	movwf	main@mode_sw& (0+255),b
  2240                           
  2241                           ; BSR set to: 0
  2242  003C8C  84BE               	bsf	190,2,c	;volatile
  2243  003C8E  D703               	goto	l10797
  2244  003C90                     l10883:
  2245                           
  2246                           ; BSR set to: 0
  2247                           ;main.c: 231:      mode_sw = 0;
  2248  003C90  0E00               	movlw	0
  2249  003C92  6FD7               	movwf	main@mode_sw& (0+255),b
  2250                           
  2251                           ; BSR set to: 0
  2252  003C94  94BE               	bcf	190,2,c	;volatile
  2253  003C96  D6FF               	goto	l10797
  2254  003C98                     __end_of_main:
  2255                           	callstack 0
  2256                           
  2257 ;; *************** function _scmd_init *****************
  2258 ;; Defined at:
  2259 ;;		line 32 in file "scdm.c"
  2260 ;; Parameters:    Size  Location     Type
  2261 ;;		None
  2262 ;; Auto vars:     Size  Location     Type
  2263 ;;		None
  2264 ;; Return value:  Size  Location     Type
  2265 ;;                  1    wreg      void 
  2266 ;; Registers used:
  2267 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2268 ;; Tracked objects:
  2269 ;;		On entry : 3B/3D
  2270 ;;		On exit  : 0/0
  2271 ;;		Unchanged: 0/0
  2272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2277 ;;Total ram usage:        0 bytes
  2278 ;; Hardware stack levels used: 1
  2279 ;; Hardware stack levels required when called: 14
  2280 ;; This function calls:
  2281 ;;		_cli_init
  2282 ;; This function is called by:
  2283 ;;		_main
  2284 ;; This function uses a non-reentrant model
  2285 ;;
  2286                           
  2287                           	psect	text1
  2288  005D14                     __ptext1:
  2289                           	callstack 0
  2290  005D14                     _scmd_init:
  2291                           	callstack 16
  2292                           
  2293                           ;scdm.c: 34:  cli_init(&cli_ctx, g_cmds);
  2294                           
  2295                           ; BSR set to: 0
  2296                           ;incstack = 0
  2297  005D14  0E40               	movlw	low _cli_ctx
  2298  005D16  0102               	movlb	2	; () banked
  2299  005D18  6FD7               	movwf	cli_init@a_ctx& (0+255),b
  2300  005D1A  0E02               	movlw	high _cli_ctx
  2301  005D1C  6FD8               	movwf	(cli_init@a_ctx+1)& (0+255),b
  2302  005D1E  0EEF               	movlw	low _g_cmds
  2303  005D20  6FD9               	movwf	cli_init@a_cmds& (0+255),b
  2304  005D22  0E01               	movlw	high _g_cmds
  2305  005D24  6FDA               	movwf	(cli_init@a_cmds+1)& (0+255),b
  2306  005D26  EC45  F029         	call	_cli_init	;wreg free
  2307  005D2A  0012               	return		;funcret
  2308  005D2C                     __end_of_scmd_init:
  2309                           	callstack 0
  2310                           
  2311 ;; *************** function _cli_init *****************
  2312 ;; Defined at:
  2313 ;;		line 20 in file "scdm.c"
  2314 ;; Parameters:    Size  Location     Type
  2315 ;;  a_ctx           2   20[BANK2 ] PTR struct _t_cli_ctx
  2316 ;;		 -> cli_ctx(131), 
  2317 ;;  a_cmds          2   22[BANK2 ] PTR struct _t_cmd
  2318 ;;		 -> g_cmds(16), 
  2319 ;; Auto vars:     Size  Location     Type
  2320 ;;		None
  2321 ;; Return value:  Size  Location     Type
  2322 ;;                  1    wreg      void 
  2323 ;; Registers used:
  2324 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2325 ;; Tracked objects:
  2326 ;;		On entry : 3F/2
  2327 ;;		On exit  : 0/0
  2328 ;;		Unchanged: 0/0
  2329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2330 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2333 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2334 ;;Total ram usage:        4 bytes
  2335 ;; Hardware stack levels used: 1
  2336 ;; Hardware stack levels required when called: 13
  2337 ;; This function calls:
  2338 ;;		_memset
  2339 ;;		_puts
  2340 ;;		_sprintf
  2341 ;; This function is called by:
  2342 ;;		_scmd_init
  2343 ;; This function uses a non-reentrant model
  2344 ;;
  2345                           
  2346                           	psect	text2
  2347  00528A                     __ptext2:
  2348                           	callstack 0
  2349  00528A                     _cli_init:
  2350                           	callstack 16
  2351                           
  2352                           ; BSR set to: 2
  2353                           ;scdm.c: 20: static void cli_init(t_cli_ctx *a_ctx, t_cmd *a_cmds);scdm.c: 21: {;scdm.c:
      +                           22:  memset(a_ctx, 0x00, sizeof(t_cli_ctx));
  2354                           
  2355                           ;incstack = 0
  2356  00528A  C2D7  F015         	movff	cli_init@a_ctx,memset@dest
  2357  00528E  C2D8  F016         	movff	cli_init@a_ctx+1,memset@dest+1
  2358  005292  0E00               	movlw	0
  2359  005294  6E18               	movwf	(memset@c+1)^0,c
  2360  005296  0E00               	movlw	0
  2361  005298  6E17               	movwf	memset@c^0,c
  2362  00529A  0E00               	movlw	0
  2363  00529C  6E1A               	movwf	(memset@n+1)^0,c
  2364  00529E  0E83               	movlw	131
  2365  0052A0  6E19               	movwf	memset@n^0,c
  2366  0052A2  EC37  F022         	call	_memset	;wreg free
  2367                           
  2368                           ;scdm.c: 23:  a_ctx->cmds = a_cmds;
  2369  0052A6  0060  FB5F  FFD9   	movff	cli_init@a_ctx,fsr2l
  2370  0052AC  0060  FB63  FFDA   	movff	cli_init@a_ctx+1,fsr2h
  2371  0052B2  0060  FB67  FFDE   	movff	cli_init@a_cmds,postinc2
  2372  0052B8  0060  FB6B  FFDD   	movff	cli_init@a_cmds+1,postdec2
  2373  0052BE  0E02               	movlw	2
  2374  0052C0  0102               	movlb	2	; () banked
  2375  0052C2  25D7               	addwf	cli_init@a_ctx& (0+255),w,b
  2376  0052C4  6FC3               	movwf	sprintf@s& (0+255),b
  2377  0052C6  0E00               	movlw	0
  2378  0052C8  21D8               	addwfc	(cli_init@a_ctx+1)& (0+255),w,b
  2379  0052CA  6FC4               	movwf	(sprintf@s+1)& (0+255),b
  2380  0052CC  0EA2               	movlw	low STR_10
  2381  0052CE  6FC5               	movwf	sprintf@fmt& (0+255),b
  2382  0052D0  0EC9               	movlw	low STR_1
  2383  0052D2  6FC6               	movwf	(?_sprintf+3)& (0+255),b
  2384  0052D4  51C6               	movf	(?_sprintf+3)& (0+255),w,b
  2385  0052D6  A4D8               	btfss	status,2,c
  2386  0052D8  0E20               	movlw	high __smallconst
  2387  0052DA  6FC7               	movwf	(?_sprintf+4)& (0+255),b
  2388  0052DC  0ED5               	movlw	low STR_2
  2389  0052DE  6FC8               	movwf	(?_sprintf+5)& (0+255),b
  2390  0052E0  51C8               	movf	(?_sprintf+5)& (0+255),w,b
  2391  0052E2  A4D8               	btfss	status,2,c
  2392  0052E4  0E20               	movlw	high __smallconst
  2393  0052E6  6FC9               	movwf	(?_sprintf+6)& (0+255),b
  2394  0052E8  ECF0  F02A         	call	_sprintf	;wreg free
  2395                           
  2396                           ; BSR set to: 2
  2397                           ;scdm.c: 28:  puts(a_ctx->cmd);
  2398  0052EC  0E02               	movlw	2
  2399  0052EE  25D7               	addwf	cli_init@a_ctx& (0+255),w,b
  2400  0052F0  6E29               	movwf	puts@s^0,c
  2401  0052F2  0E00               	movlw	0
  2402  0052F4  21D8               	addwfc	(cli_init@a_ctx+1)& (0+255),w,b
  2403  0052F6  6E2A               	movwf	(puts@s+1)^0,c
  2404  0052F8  ECA8  F02C         	call	_puts	;wreg free
  2405                           
  2406                           ;scdm.c: 29:  puts(cmdm);
  2407  0052FC  0E06               	movlw	low _cmdm
  2408  0052FE  6E29               	movwf	puts@s^0,c
  2409  005300  5029               	movf	puts@s^0,w,c
  2410  005302  A4D8               	btfss	status,2,c
  2411  005304  0E20               	movlw	high __smallconst
  2412  005306  6E2A               	movwf	(puts@s+1)^0,c
  2413  005308  ECA8  F02C         	call	_puts	;wreg free
  2414  00530C  0012               	return		;funcret
  2415  00530E                     __end_of_cli_init:
  2416                           	callstack 0
  2417                           
  2418 ;; *************** function _sprintf *****************
  2419 ;; Defined at:
  2420 ;;		line 9 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/nf_sprintf.c"
  2421 ;; Parameters:    Size  Location     Type
  2422 ;;  s               2    0[BANK2 ] PTR unsigned char 
  2423 ;;		 -> cli_ctx(131), 
  2424 ;;  fmt             1    2[BANK2 ] PTR const unsigned char 
  2425 ;;		 -> STR_10(21), 
  2426 ;; Auto vars:     Size  Location     Type
  2427 ;;  f              11    9[BANK2 ] struct _IO_FILE
  2428 ;;  ap              2    7[BANK2 ] PTR void [1]
  2429 ;;		 -> ?_printf(2), ?_sprintf(2), 
  2430 ;;  ret             2    0        int 
  2431 ;; Return value:  Size  Location     Type
  2432 ;;                  2    0[BANK2 ] int 
  2433 ;; Registers used:
  2434 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2435 ;; Tracked objects:
  2436 ;;		On entry : 3F/2
  2437 ;;		On exit  : 3F/2
  2438 ;;		Unchanged: 0/0
  2439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2440 ;;      Params:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2441 ;;      Locals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2443 ;;      Totals:         0       0       0      20       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2444 ;;Total ram usage:       20 bytes
  2445 ;; Hardware stack levels used: 1
  2446 ;; Hardware stack levels required when called: 12
  2447 ;; This function calls:
  2448 ;;		_vfprintf
  2449 ;; This function is called by:
  2450 ;;		_cli_init
  2451 ;; This function uses a non-reentrant model
  2452 ;;
  2453                           
  2454                           	psect	text3
  2455  0055E0                     __ptext3:
  2456                           	callstack 0
  2457  0055E0                     _sprintf:
  2458                           	callstack 16
  2459                           
  2460                           ; BSR set to: 2
  2461                           
  2462                           ;incstack = 0
  2463  0055E0  0EC6               	movlw	low (?_sprintf+3)
  2464  0055E2  6FCA               	movwf	sprintf@ap& (0+255),b
  2465  0055E4  0E02               	movlw	high (?_sprintf+3)
  2466  0055E6  6FCB               	movwf	(sprintf@ap+1)& (0+255),b
  2467  0055E8  C2C3  F2CC         	movff	sprintf@s,sprintf@f
  2468  0055EC  C2C4  F2CD         	movff	sprintf@s+1,sprintf@f+1
  2469                           
  2470                           ; BSR set to: 2
  2471  0055F0  0E00               	movlw	0
  2472  0055F2  6FD0               	movwf	(sprintf@f+4)& (0+255),b
  2473  0055F4  0E00               	movlw	0
  2474  0055F6  6FCF               	movwf	(sprintf@f+3)& (0+255),b
  2475                           
  2476                           ; BSR set to: 2
  2477  0055F8  0E00               	movlw	0
  2478  0055FA  6FD6               	movwf	(sprintf@f+10)& (0+255),b
  2479  0055FC  0E00               	movlw	0
  2480  0055FE  6FD5               	movwf	(sprintf@f+9)& (0+255),b
  2481                           
  2482                           ; BSR set to: 2
  2483  005600  0ECC               	movlw	low sprintf@f
  2484  005602  0100               	movlb	0	; () banked
  2485  005604  6FCE               	movwf	vfprintf@fp& (0+255),b
  2486  005606  0E02               	movlw	high sprintf@f
  2487  005608  6FCF               	movwf	(vfprintf@fp+1)& (0+255),b
  2488  00560A  C2C5  F0D0         	movff	sprintf@fmt,vfprintf@fmt
  2489  00560E  0ECA               	movlw	low sprintf@ap
  2490  005610  6FD1               	movwf	vfprintf@ap& (0+255),b
  2491  005612  0E02               	movlw	high sprintf@ap
  2492  005614  6FD2               	movwf	(vfprintf@ap+1)& (0+255),b
  2493  005616  EC9E  F02A         	call	_vfprintf	;wreg free
  2494                           
  2495                           ; BSR set to: 0
  2496  00561A  0102               	movlb	2	; () banked
  2497  00561C  51CF               	movf	(sprintf@f+3)& (0+255),w,b
  2498  00561E  25C3               	addwf	sprintf@s& (0+255),w,b
  2499  005620  6ED9               	movwf	fsr2l,c
  2500  005622  51D0               	movf	(sprintf@f+4)& (0+255),w,b
  2501  005624  21C4               	addwfc	(sprintf@s+1)& (0+255),w,b
  2502  005626  6EDA               	movwf	fsr2h,c
  2503  005628  0E00               	movlw	0
  2504  00562A  6EDF               	movwf	indf2,c
  2505                           
  2506                           ; BSR set to: 2
  2507  00562C  0012               	return		;funcret
  2508  00562E                     __end_of_sprintf:
  2509                           	callstack 0
  2510                           
  2511 ;; *************** function _printf *****************
  2512 ;; Defined at:
  2513 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/printf.c"
  2514 ;; Parameters:    Size  Location     Type
  2515 ;;  fmt             1    0[BANK2 ] PTR const unsigned char 
  2516 ;;		 -> STR_6(79), 
  2517 ;; Auto vars:     Size  Location     Type
  2518 ;;  ap              2  115[BANK0 ] PTR void [1]
  2519 ;;		 -> ?_printf(2), ?_sprintf(2), 
  2520 ;;  ret             2    0        int 
  2521 ;; Return value:  Size  Location     Type
  2522 ;;                  2    0[BANK2 ] int 
  2523 ;; Registers used:
  2524 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2525 ;; Tracked objects:
  2526 ;;		On entry : 3F/2
  2527 ;;		On exit  : 3F/0
  2528 ;;		Unchanged: 0/0
  2529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2530 ;;      Params:         0       0       0      17       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2531 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2533 ;;      Totals:         0       2       0      17       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2534 ;;Total ram usage:       19 bytes
  2535 ;; Hardware stack levels used: 1
  2536 ;; Hardware stack levels required when called: 12
  2537 ;; This function calls:
  2538 ;;		_vfprintf
  2539 ;; This function is called by:
  2540 ;;		_main
  2541 ;; This function uses a non-reentrant model
  2542 ;;
  2543                           
  2544                           	psect	text4
  2545  005C3C                     __ptext4:
  2546                           	callstack 0
  2547  005C3C                     _printf:
  2548                           	callstack 18
  2549                           
  2550                           ; BSR set to: 2
  2551                           
  2552                           ; BSR set to: 2
  2553                           ;incstack = 0
  2554  005C3C  0EC4               	movlw	low (?_printf+1)
  2555  005C3E  0100               	movlb	0	; () banked
  2556  005C40  6FD3               	movwf	printf@ap& (0+255),b
  2557  005C42  0E02               	movlw	high (?_printf+1)
  2558  005C44  6FD4               	movwf	(printf@ap+1)& (0+255),b
  2559                           
  2560                           ; BSR set to: 0
  2561  005C46  0E00               	movlw	0
  2562  005C48  6FCE               	movwf	vfprintf@fp& (0+255),b
  2563  005C4A  0E00               	movlw	0
  2564  005C4C  6FCF               	movwf	(vfprintf@fp+1)& (0+255),b
  2565  005C4E  C2C3  F0D0         	movff	printf@fmt,vfprintf@fmt
  2566  005C52  0ED3               	movlw	low printf@ap
  2567  005C54  6FD1               	movwf	vfprintf@ap& (0+255),b
  2568  005C56  6BD2               	clrf	(vfprintf@ap+1)& (0+255),b
  2569  005C58  EC9E  F02A         	call	_vfprintf	;wreg free
  2570                           
  2571                           ; BSR set to: 0
  2572  005C5C  0012               	return		;funcret
  2573  005C5E                     __end_of_printf:
  2574                           	callstack 0
  2575                           
  2576 ;; *************** function _vfprintf *****************
  2577 ;; Defined at:
  2578 ;;		line 1390 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  2579 ;; Parameters:    Size  Location     Type
  2580 ;;  fp              2  110[BANK0 ] PTR struct _IO_FILE
  2581 ;;		 -> sprintf@f(11), NULL(0), 
  2582 ;;  fmt             1  112[BANK0 ] PTR const unsigned char 
  2583 ;;		 -> STR_10(21), STR_6(79), 
  2584 ;;  ap              2  113[BANK0 ] PTR PTR void 
  2585 ;;		 -> printf@ap(2), sprintf@ap(2), 
  2586 ;; Auto vars:     Size  Location     Type
  2587 ;;  cfmt            1   55[COMRAM] PTR unsigned char 
  2588 ;;		 -> STR_10(21), STR_6(79), 
  2589 ;; Return value:  Size  Location     Type
  2590 ;;                  2  110[BANK0 ] int 
  2591 ;; Registers used:
  2592 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2593 ;; Tracked objects:
  2594 ;;		On entry : 3F/0
  2595 ;;		On exit  : 3F/0
  2596 ;;		Unchanged: 0/0
  2597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2598 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2599 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2601 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2602 ;;Total ram usage:        6 bytes
  2603 ;; Hardware stack levels used: 1
  2604 ;; Hardware stack levels required when called: 11
  2605 ;; This function calls:
  2606 ;;		_vfpfcnvrt
  2607 ;; This function is called by:
  2608 ;;		_sprintf
  2609 ;;		_printf
  2610 ;; This function uses a non-reentrant model
  2611 ;;
  2612                           
  2613                           	psect	text5
  2614  00553C                     __ptext5:
  2615                           	callstack 0
  2616  00553C                     _vfprintf:
  2617                           	callstack 16
  2618                           
  2619                           ; BSR set to: 0
  2620                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1390: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1
      +                          391: {;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1393:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1395:     cfmt = (char *)fmt;
  2621                           
  2622                           ; BSR set to: 0
  2623                           ;incstack = 0
  2624  00553C  C0D0  F038         	movff	vfprintf@fmt,vfprintf@cfmt
  2625                           
  2626                           ; BSR set to: 0
  2627                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1396:     nout = 0;
  2628  005540  0E00               	movlw	0
  2629  005542  6FF6               	movwf	(_nout+1)& (0+255),b
  2630  005544  0E00               	movlw	0
  2631  005546  6FF5               	movwf	_nout& (0+255),b
  2632                           
  2633                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1397:     while (*cfmt) {
  2634  005548  D011               	goto	l10355
  2635  00554A                     l10353:
  2636                           
  2637                           ; BSR set to: 0
  2638                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1398:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  2639  00554A  C0CE  F0AF         	movff	vfprintf@fp,vfpfcnvrt@fp
  2640  00554E  C0CF  F0B0         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2641  005552  0E38               	movlw	low vfprintf@cfmt
  2642  005554  6FB1               	movwf	vfpfcnvrt@fmt& (0+255),b
  2643  005556  C0D1  F0B2         	movff	vfprintf@ap,vfpfcnvrt@ap
  2644  00555A  C0D2  F0B3         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2645  00555E  EC66  F015         	call	_vfpfcnvrt	;wreg free
  2646  005562  0100               	movlb	0	; () banked
  2647  005564  51AF               	movf	?_vfpfcnvrt& (0+255),w,b
  2648  005566  27F5               	addwf	_nout& (0+255),f,b
  2649  005568  51B0               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2650  00556A  23F6               	addwfc	(_nout+1)& (0+255),f,b
  2651  00556C                     l10355:
  2652                           
  2653                           ; BSR set to: 0
  2654                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1397:     while (*cfmt) {
  2655  00556C  0060  F0E3  FFF6   	movff	vfprintf@cfmt,tblptrl
  2656  005572                     	if	1	;There is more than 1 active tblptr byte
  2657  005572  0E20               	movlw	high __smallconst
  2658  005574  6EF7               	movwf	tblptrh,c
  2659  005576                     	endif
  2660  005576                     	if	0	;tblptru may be non-zero
  2661  005576                     	endif
  2662  005576                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2663  005576  0E00               	movlw	low (__smallconst shr (0+16))
  2664  005578  6EF8               	movwf	tblptru,c
  2665  00557A                     	endif
  2666  00557A  0008               	tblrd		*
  2667  00557C  50F5               	movf	tablat,w,c
  2668  00557E  0900               	iorlw	0
  2669  005580  A4D8               	btfss	status,2,c
  2670  005582  D7E3               	goto	l10353
  2671                           
  2672                           ; BSR set to: 0
  2673                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1400:     return nout;
  2674  005584  C0F5  F0CE         	movff	_nout,?_vfprintf
  2675  005588  C0F6  F0CF         	movff	_nout+1,?_vfprintf+1
  2676                           
  2677                           ; BSR set to: 0
  2678  00558C  0012               	return		;funcret
  2679  00558E                     __end_of_vfprintf:
  2680                           	callstack 0
  2681                           
  2682 ;; *************** function _vfpfcnvrt *****************
  2683 ;; Defined at:
  2684 ;;		line 692 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  2685 ;; Parameters:    Size  Location     Type
  2686 ;;  fp              2   79[BANK0 ] PTR struct _IO_FILE
  2687 ;;		 -> sprintf@f(11), NULL(0), 
  2688 ;;  fmt             1   81[BANK0 ] PTR PTR unsigned char 
  2689 ;;		 -> vfprintf@cfmt(1), 
  2690 ;;  ap              2   82[BANK0 ] PTR PTR void 
  2691 ;;		 -> printf@ap(2), sprintf@ap(2), 
  2692 ;; Auto vars:     Size  Location     Type
  2693 ;;  llu             8   88[BANK0 ] unsigned long long 
  2694 ;;  ll              8    0        long long 
  2695 ;;  f               4  103[BANK0 ] long long 
  2696 ;;  ct              3  107[BANK0 ] unsigned char [3]
  2697 ;;  vp              3    0        PTR void 
  2698 ;;  done            2   98[BANK0 ] int 
  2699 ;;  cp              2   96[BANK0 ] PTR unsigned char 
  2700 ;;		 -> ?_printf(2), ?_sprintf(2), STR_2(9), STR_1(12), 
  2701 ;;  i               2    0        int 
  2702 ;;  c               1  102[BANK0 ] unsigned char 
  2703 ;; Return value:  Size  Location     Type
  2704 ;;                  2   79[BANK0 ] int 
  2705 ;; Registers used:
  2706 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2707 ;; Tracked objects:
  2708 ;;		On entry : 3F/0
  2709 ;;		On exit  : 0/0
  2710 ;;		Unchanged: 0/0
  2711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2712 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2713 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2714 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2715 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2716 ;;Total ram usage:       31 bytes
  2717 ;; Hardware stack levels used: 1
  2718 ;; Hardware stack levels required when called: 10
  2719 ;; This function calls:
  2720 ;;		_atoi
  2721 ;;		_efgtoa
  2722 ;;		_fputc
  2723 ;;		_isdigit
  2724 ;;		_isupper
  2725 ;;		_stoa
  2726 ;;		_strncmp
  2727 ;;		_tolower
  2728 ;;		_utoa
  2729 ;; This function is called by:
  2730 ;;		_vfprintf
  2731 ;; This function uses a non-reentrant model
  2732 ;;
  2733                           
  2734                           	psect	text6
  2735  002ACC                     __ptext6:
  2736                           	callstack 0
  2737  002ACC                     _vfpfcnvrt:
  2738                           	callstack 16
  2739                           
  2740                           ; BSR set to: 0
  2741                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 692: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c
      +                          : 693: {;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 694:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 695:     int done, i;;
      +                          /opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 696:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 697:     unsigned long long llu;
  2742                           
  2743                           ; BSR set to: 0
  2744                           ;incstack = 0
  2745  002ACC  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2746  002ACE  6ED9               	movwf	fsr2l,c
  2747  002AD0  6ADA               	clrf	fsr2h,c
  2748  002AD2  006F FF7F FFF6     	movff	indf2,tblptrl
  2749  002AD8                     	if	1	;There is more than 1 active tblptr byte
  2750  002AD8  0E20               	movlw	high __smallconst
  2751  002ADA  6EF7               	movwf	tblptrh,c
  2752  002ADC                     	endif
  2753  002ADC                     	if	0	;tblptru may be non-zero
  2754  002ADC                     	endif
  2755  002ADC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2756  002ADC  0E00               	movlw	low (__smallconst shr (0+16))
  2757  002ADE  6EF8               	movwf	tblptru,c
  2758  002AE0                     	endif
  2759  002AE0  0008               	tblrd		*
  2760  002AE2  50F5               	movf	tablat,w,c
  2761  002AE4  0A25               	xorlw	37
  2762  002AE6  A4D8               	btfss	status,2,c
  2763  002AE8  D313               	goto	l10327
  2764                           
  2765                           ; BSR set to: 0
  2766                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 703:         ++*fmt;
  2767  002AEA  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2768  002AEC  6ED9               	movwf	fsr2l,c
  2769  002AEE  6ADA               	clrf	fsr2h,c
  2770  002AF0  2ADF               	incf	indf2,f,c
  2771                           
  2772                           ; BSR set to: 0
  2773                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 705:         flags = width = 
      +                          0;
  2774  002AF2  0E00               	movlw	0
  2775  002AF4  6FF8               	movwf	(_width+1)& (0+255),b
  2776  002AF6  0E00               	movlw	0
  2777  002AF8  6FF7               	movwf	_width& (0+255),b
  2778  002AFA  C0F7  F03D         	movff	_width,_flags
  2779  002AFE  C0F8  F03E         	movff	_width+1,_flags+1
  2780                           
  2781                           ; BSR set to: 0
  2782                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 706:         prec = -1;
  2783  002B02  69F9               	setf	_prec& (0+255),b
  2784  002B04  69FA               	setf	(_prec+1)& (0+255),b
  2785                           
  2786                           ; BSR set to: 0
  2787                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 710:         done = 0;
  2788  002B06  0E00               	movlw	0
  2789  002B08  6FC3               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2790  002B0A  0E00               	movlw	0
  2791  002B0C  D011               	goto	L1
  2792  002B0E                     l10181:
  2793                           
  2794                           ; BSR set to: 0
  2795                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 714:                     flag
      +                          s |= (1 << 0);
  2796  002B0E  803D               	bsf	_flags^0,0,c
  2797  002B10                     l10183:
  2798                           
  2799                           ; BSR set to: 0
  2800                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 715:                     ++*f
      +                          mt;
  2801  002B10  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2802  002B12  6ED9               	movwf	fsr2l,c
  2803  002B14  6ADA               	clrf	fsr2h,c
  2804  002B16  2ADF               	incf	indf2,f,c
  2805                           
  2806                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 716:                     brea
      +                          k;
  2807  002B18  D030               	goto	l10207
  2808  002B1A                     l10185:
  2809                           
  2810                           ; BSR set to: 0
  2811                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 718:                     flag
      +                          s |= (1 << 1);
  2812  002B1A  823D               	bsf	_flags^0,1,c
  2813  002B1C  D7F9               	goto	l10183
  2814  002B1E                     l10189:
  2815                           
  2816                           ; BSR set to: 0
  2817                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 722:                     flag
      +                          s |= (1 << 2);
  2818  002B1E  843D               	bsf	_flags^0,2,c
  2819  002B20  D7F7               	goto	l10183
  2820  002B22                     l10193:
  2821                           
  2822                           ; BSR set to: 0
  2823                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 726:                     flag
      +                          s |= (1 << 3);
  2824  002B22  863D               	bsf	_flags^0,3,c
  2825  002B24  D7F5               	goto	l10183
  2826  002B26                     l10197:
  2827                           
  2828                           ; BSR set to: 0
  2829                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 730:                     flag
      +                          s |= (1 << 4);
  2830  002B26  883D               	bsf	_flags^0,4,c
  2831  002B28  D7F3               	goto	l10183
  2832  002B2A                     l10201:
  2833                           
  2834                           ; BSR set to: 0
  2835                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 734:                     done
      +                           = 1;
  2836  002B2A  0E00               	movlw	0
  2837  002B2C  6FC3               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2838  002B2E  0E01               	movlw	1
  2839  002B30                     L1:
  2840  002B30  6FC2               	movwf	vfpfcnvrt@done& (0+255),b
  2841                           
  2842                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 735:                     brea
      +                          k;
  2843  002B32  D023               	goto	l10207
  2844  002B34                     l10205:
  2845                           
  2846                           ; BSR set to: 0
  2847  002B34  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2848  002B36  6ED9               	movwf	fsr2l,c
  2849  002B38  6ADA               	clrf	fsr2h,c
  2850  002B3A  006F FF7F FFF6     	movff	indf2,tblptrl
  2851  002B40                     	if	1	;There is more than 1 active tblptr byte
  2852  002B40  0E20               	movlw	high __smallconst
  2853  002B42  6EF7               	movwf	tblptrh,c
  2854  002B44                     	endif
  2855  002B44                     	if	0	;tblptru may be non-zero
  2856  002B44                     	endif
  2857  002B44                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2858  002B44  0E00               	movlw	low (__smallconst shr (0+16))
  2859  002B46  6EF8               	movwf	tblptru,c
  2860  002B48                     	endif
  2861  002B48  0008               	tblrd		*
  2862  002B4A  50F5               	movf	tablat,w,c
  2863  002B4C  6FB4               	movwf	??_vfpfcnvrt& (0+255),b
  2864  002B4E  6BB5               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2865                           
  2866                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2867                           ; Switch size 1, requested type "simple"
  2868                           ; Number of cases is 1, Range of values is 0 to 0
  2869                           ; switch strategies available:
  2870                           ; Name         Instructions Cycles
  2871                           ; simple_byte            4     3 (average)
  2872                           ;	Chosen strategy is simple_byte
  2873  002B50  51B5               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2874  002B52  0A00               	xorlw	0	; case 0
  2875  002B54  A4D8               	btfss	status,2,c
  2876  002B56  D7E9               	goto	l10201
  2877                           
  2878                           ; BSR set to: 0
  2879                           ; Switch size 1, requested type "simple"
  2880                           ; Number of cases is 5, Range of values is 32 to 48
  2881                           ; switch strategies available:
  2882                           ; Name         Instructions Cycles
  2883                           ; simple_byte           16     9 (average)
  2884                           ;	Chosen strategy is simple_byte
  2885  002B58  51B4               	movf	??_vfpfcnvrt& (0+255),w,b
  2886  002B5A  0A20               	xorlw	32	; case 32
  2887  002B5C  B4D8               	btfsc	status,2,c
  2888  002B5E  D7E1               	goto	l10193
  2889  002B60  0A03               	xorlw	3	; case 35
  2890  002B62  B4D8               	btfsc	status,2,c
  2891  002B64  D7E0               	goto	l10197
  2892  002B66  0A08               	xorlw	8	; case 43
  2893  002B68  B4D8               	btfsc	status,2,c
  2894  002B6A  D7D9               	goto	l10189
  2895  002B6C  0A06               	xorlw	6	; case 45
  2896  002B6E  B4D8               	btfsc	status,2,c
  2897  002B70  D7CE               	goto	l10181
  2898  002B72  0A1D               	xorlw	29	; case 48
  2899  002B74  B4D8               	btfsc	status,2,c
  2900  002B76  D7D1               	goto	l10185
  2901  002B78  D7D8               	goto	l10201
  2902  002B7A                     l10207:
  2903                           
  2904                           ; BSR set to: 0
  2905                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 711:         while (!done) {
  2906  002B7A  51C2               	movf	vfpfcnvrt@done& (0+255),w,b
  2907  002B7C  11C3               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  2908  002B7E  B4D8               	btfsc	status,2,c
  2909  002B80  D7D9               	goto	l10205
  2910                           
  2911                           ; BSR set to: 0
  2912                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 738:         if (flags & (1 <
      +                          < 0)) {
  2913  002B82  B03D               	btfsc	_flags^0,0,c
  2914                           
  2915                           ; BSR set to: 0
  2916                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 739:             flags &= ~(1
      +                           << 1);
  2917  002B84  923D               	bcf	_flags^0,1,c
  2918                           
  2919                           ; BSR set to: 0
  2920                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 745:         if ((*fmt)[0] ==
      +                           '*') {
  2921  002B86  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2922  002B88  6ED9               	movwf	fsr2l,c
  2923  002B8A  6ADA               	clrf	fsr2h,c
  2924  002B8C  006F FF7F FFF6     	movff	indf2,tblptrl
  2925  002B92                     	if	1	;There is more than 1 active tblptr byte
  2926  002B92  0E20               	movlw	high __smallconst
  2927  002B94  6EF7               	movwf	tblptrh,c
  2928  002B96                     	endif
  2929  002B96                     	if	0	;tblptru may be non-zero
  2930  002B96                     	endif
  2931  002B96                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2932  002B96  0E00               	movlw	low (__smallconst shr (0+16))
  2933  002B98  6EF8               	movwf	tblptru,c
  2934  002B9A                     	endif
  2935  002B9A  0008               	tblrd		*
  2936  002B9C  50F5               	movf	tablat,w,c
  2937  002B9E  0A2A               	xorlw	42
  2938  002BA0  A4D8               	btfss	status,2,c
  2939  002BA2  D028               	goto	l10219
  2940                           
  2941                           ; BSR set to: 0
  2942                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 746:             ++*fmt;
  2943  002BA4  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2944  002BA6  6ED9               	movwf	fsr2l,c
  2945  002BA8  6ADA               	clrf	fsr2h,c
  2946  002BAA  2ADF               	incf	indf2,f,c
  2947                           
  2948                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 747:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  2949  002BAC  0060  F2CB  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  2950  002BB2  0060  F2CF  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  2951  002BB8  006F FF7C  F0B4    	movff	indf2,??_vfpfcnvrt
  2952  002BBE  0E02               	movlw	2
  2953  002BC0  26DE               	addwf	postinc2,f,c
  2954  002BC2  006F FF7C  F0B5    	movff	indf2,??_vfpfcnvrt+1
  2955  002BC8  0E00               	movlw	0
  2956  002BCA  22DD               	addwfc	postdec2,f,c
  2957  002BCC  0060  F2D3  FFD9   	movff	??_vfpfcnvrt,fsr2l
  2958  002BD2  0060  F2D7  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  2959  002BD8  006F FF78  F0F7    	movff	postinc2,_width
  2960  002BDE  006F FF74  F0F8    	movff	postdec2,_width+1
  2961                           
  2962                           ; BSR set to: 0
  2963                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 748:             if (width < 
      +                          0) {
  2964  002BE4  AFF8               	btfss	(_width+1)& (0+255),7,b
  2965  002BE6  D033               	goto	u11940
  2966                           
  2967                           ; BSR set to: 0
  2968                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 749:                 flags |=
      +                           (1 << 0);
  2969  002BE8  803D               	bsf	_flags^0,0,c
  2970                           
  2971                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 750:                 width = 
      +                          -width;
  2972  002BEA  6DF7               	negf	_width& (0+255),b
  2973  002BEC  1FF8               	comf	(_width+1)& (0+255),f,b
  2974  002BEE  B0D8               	btfsc	status,0,c
  2975  002BF0  2BF8               	incf	(_width+1)& (0+255),f,b
  2976  002BF2  D02D               	goto	u11940
  2977  002BF4                     l10219:
  2978                           
  2979                           ; BSR set to: 0
  2980                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 753:             width = atoi
      +                          (*fmt);
  2981  002BF4  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2982  002BF6  6ED9               	movwf	fsr2l,c
  2983  002BF8  6ADA               	clrf	fsr2h,c
  2984  002BFA  50DF               	movf	indf2,w,c
  2985  002BFC  6E1C               	movwf	atoi@s^0,c
  2986  002BFE  EC21  F024         	call	_atoi	;wreg free
  2987  002C02  C01C  F0F7         	movff	?_atoi,_width
  2988  002C06  C01D  F0F8         	movff	?_atoi+1,_width+1
  2989                           
  2990                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 754:             while ((0 &&
      +                           isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  2991  002C0A  D004               	goto	l10225
  2992  002C0C                     l10221:
  2993                           
  2994                           ; BSR set to: 0
  2995                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 755:                 ++*fmt;
  2996  002C0C  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2997  002C0E  6ED9               	movwf	fsr2l,c
  2998  002C10  6ADA               	clrf	fsr2h,c
  2999  002C12  2ADF               	incf	indf2,f,c
  3000  002C14                     l10225:
  3001  002C14  0ED0               	movlw	208
  3002  002C16  0100               	movlb	0	; () banked
  3003  002C18  6FB4               	movwf	??_vfpfcnvrt& (0+255),b
  3004  002C1A  0EFF               	movlw	255
  3005  002C1C  6FB5               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3006  002C1E  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3007  002C20  6ED9               	movwf	fsr2l,c
  3008  002C22  6ADA               	clrf	fsr2h,c
  3009  002C24  006F FF7F FFF6     	movff	indf2,tblptrl
  3010  002C2A                     	if	1	;There is more than 1 active tblptr byte
  3011  002C2A  0E20               	movlw	high __smallconst
  3012  002C2C  6EF7               	movwf	tblptrh,c
  3013  002C2E                     	endif
  3014  002C2E                     	if	0	;tblptru may be non-zero
  3015  002C2E                     	endif
  3016  002C2E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3017  002C2E  0E00               	movlw	low (__smallconst shr (0+16))
  3018  002C30  6EF8               	movwf	tblptru,c
  3019  002C32                     	endif
  3020  002C32  0008               	tblrd		*
  3021  002C34  50F5               	movf	tablat,w,c
  3022  002C36  6FB6               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3023  002C38  6BB7               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3024  002C3A  51B4               	movf	??_vfpfcnvrt& (0+255),w,b
  3025  002C3C  27B6               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3026  002C3E  51B5               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3027  002C40  23B7               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3028  002C42  51B7               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3029  002C44  E104               	bnz	u11940
  3030  002C46  0E0A               	movlw	10
  3031  002C48  5DB6               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3032  002C4A  A0D8               	btfss	status,0,c
  3033  002C4C  D7DF               	goto	l10221
  3034  002C4E                     u11940:
  3035                           
  3036                           ; BSR set to: 0
  3037                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 762:         if ((*fmt)[0] ==
      +                           '.') {
  3038  002C4E  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3039  002C50  6ED9               	movwf	fsr2l,c
  3040  002C52  6ADA               	clrf	fsr2h,c
  3041  002C54  006F FF7F FFF6     	movff	indf2,tblptrl
  3042  002C5A                     	if	1	;There is more than 1 active tblptr byte
  3043  002C5A  0E20               	movlw	high __smallconst
  3044  002C5C  6EF7               	movwf	tblptrh,c
  3045  002C5E                     	endif
  3046  002C5E                     	if	0	;tblptru may be non-zero
  3047  002C5E                     	endif
  3048  002C5E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3049  002C5E  0E00               	movlw	low (__smallconst shr (0+16))
  3050  002C60  6EF8               	movwf	tblptru,c
  3051  002C62                     	endif
  3052  002C62  0008               	tblrd		*
  3053  002C64  50F5               	movf	tablat,w,c
  3054  002C66  0A2E               	xorlw	46
  3055  002C68  A4D8               	btfss	status,2,c
  3056  002C6A  D065               	goto	u11970
  3057                           
  3058                           ; BSR set to: 0
  3059                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 763:             prec = 0;
  3060  002C6C  0E00               	movlw	0
  3061  002C6E  6FFA               	movwf	(_prec+1)& (0+255),b
  3062  002C70  0E00               	movlw	0
  3063  002C72  6FF9               	movwf	_prec& (0+255),b
  3064                           
  3065                           ; BSR set to: 0
  3066                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 764:             ++*fmt;
  3067  002C74  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3068  002C76  6ED9               	movwf	fsr2l,c
  3069  002C78  6ADA               	clrf	fsr2h,c
  3070  002C7A  2ADF               	incf	indf2,f,c
  3071                           
  3072                           ; BSR set to: 0
  3073                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 765:             if ((*fmt)[0
      +                          ] == '*') {
  3074  002C7C  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3075  002C7E  6ED9               	movwf	fsr2l,c
  3076  002C80  6ADA               	clrf	fsr2h,c
  3077  002C82  006F FF7F FFF6     	movff	indf2,tblptrl
  3078  002C88                     	if	1	;There is more than 1 active tblptr byte
  3079  002C88  0E20               	movlw	high __smallconst
  3080  002C8A  6EF7               	movwf	tblptrh,c
  3081  002C8C                     	endif
  3082  002C8C                     	if	0	;tblptru may be non-zero
  3083  002C8C                     	endif
  3084  002C8C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3085  002C8C  0E00               	movlw	low (__smallconst shr (0+16))
  3086  002C8E  6EF8               	movwf	tblptru,c
  3087  002C90                     	endif
  3088  002C90  0008               	tblrd		*
  3089  002C92  50F5               	movf	tablat,w,c
  3090  002C94  0A2A               	xorlw	42
  3091  002C96  A4D8               	btfss	status,2,c
  3092  002C98  D021               	goto	l10237
  3093                           
  3094                           ; BSR set to: 0
  3095                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 766:                 ++*fmt;
  3096  002C9A  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3097  002C9C  6ED9               	movwf	fsr2l,c
  3098  002C9E  6ADA               	clrf	fsr2h,c
  3099  002CA0  2ADF               	incf	indf2,f,c
  3100                           
  3101                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 767:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  3102  002CA2  0060  F2CB  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3103  002CA8  0060  F2CF  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3104  002CAE  006F FF7C  F0B4    	movff	indf2,??_vfpfcnvrt
  3105  002CB4  0E02               	movlw	2
  3106  002CB6  26DE               	addwf	postinc2,f,c
  3107  002CB8  006F FF7C  F0B5    	movff	indf2,??_vfpfcnvrt+1
  3108  002CBE  0E00               	movlw	0
  3109  002CC0  22DD               	addwfc	postdec2,f,c
  3110  002CC2  0060  F2D3  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3111  002CC8  0060  F2D7  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3112  002CCE  006F FF78  F0F9    	movff	postinc2,_prec
  3113  002CD4  006F FF74  F0FA    	movff	postdec2,_prec+1
  3114                           
  3115                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 768:             } else {
  3116  002CDA  D02D               	goto	u11970
  3117  002CDC                     l10237:
  3118                           
  3119                           ; BSR set to: 0
  3120                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 769:                 prec = a
      +                          toi(*fmt);
  3121  002CDC  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3122  002CDE  6ED9               	movwf	fsr2l,c
  3123  002CE0  6ADA               	clrf	fsr2h,c
  3124  002CE2  50DF               	movf	indf2,w,c
  3125  002CE4  6E1C               	movwf	atoi@s^0,c
  3126  002CE6  EC21  F024         	call	_atoi	;wreg free
  3127  002CEA  C01C  F0F9         	movff	?_atoi,_prec
  3128  002CEE  C01D  F0FA         	movff	?_atoi+1,_prec+1
  3129                           
  3130                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 770:                 while ((
      +                          0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  3131  002CF2  D004               	goto	l10243
  3132  002CF4                     l10239:
  3133                           
  3134                           ; BSR set to: 0
  3135                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 771:                     ++*f
      +                          mt;
  3136  002CF4  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3137  002CF6  6ED9               	movwf	fsr2l,c
  3138  002CF8  6ADA               	clrf	fsr2h,c
  3139  002CFA  2ADF               	incf	indf2,f,c
  3140  002CFC                     l10243:
  3141  002CFC  0ED0               	movlw	208
  3142  002CFE  0100               	movlb	0	; () banked
  3143  002D00  6FB4               	movwf	??_vfpfcnvrt& (0+255),b
  3144  002D02  0EFF               	movlw	255
  3145  002D04  6FB5               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3146  002D06  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3147  002D08  6ED9               	movwf	fsr2l,c
  3148  002D0A  6ADA               	clrf	fsr2h,c
  3149  002D0C  006F FF7F FFF6     	movff	indf2,tblptrl
  3150  002D12                     	if	1	;There is more than 1 active tblptr byte
  3151  002D12  0E20               	movlw	high __smallconst
  3152  002D14  6EF7               	movwf	tblptrh,c
  3153  002D16                     	endif
  3154  002D16                     	if	0	;tblptru may be non-zero
  3155  002D16                     	endif
  3156  002D16                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3157  002D16  0E00               	movlw	low (__smallconst shr (0+16))
  3158  002D18  6EF8               	movwf	tblptru,c
  3159  002D1A                     	endif
  3160  002D1A  0008               	tblrd		*
  3161  002D1C  50F5               	movf	tablat,w,c
  3162  002D1E  6FB6               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3163  002D20  6BB7               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3164  002D22  51B4               	movf	??_vfpfcnvrt& (0+255),w,b
  3165  002D24  27B6               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3166  002D26  51B5               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3167  002D28  23B7               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3168  002D2A  51B7               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3169  002D2C  E104               	bnz	u11970
  3170  002D2E  0E0A               	movlw	10
  3171  002D30  5DB6               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3172  002D32  A0D8               	btfss	status,0,c
  3173  002D34  D7DF               	goto	l10239
  3174  002D36                     u11970:
  3175                           
  3176                           ; BSR set to: 0
  3177                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 779:         ct[0] = (char)to
      +                          lower((int)(*fmt)[0]);
  3178  002D36  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3179  002D38  6ED9               	movwf	fsr2l,c
  3180  002D3A  6ADA               	clrf	fsr2h,c
  3181  002D3C  006F FF7F FFF6     	movff	indf2,tblptrl
  3182  002D42                     	if	1	;There is more than 1 active tblptr byte
  3183  002D42  0E20               	movlw	high __smallconst
  3184  002D44  6EF7               	movwf	tblptrh,c
  3185  002D46                     	endif
  3186  002D46                     	if	0	;tblptru may be non-zero
  3187  002D46                     	endif
  3188  002D46                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3189  002D46  0E00               	movlw	low (__smallconst shr (0+16))
  3190  002D48  6EF8               	movwf	tblptru,c
  3191  002D4A                     	endif
  3192  002D4A  0008               	tblrd		*
  3193  002D4C  50F5               	movf	tablat,w,c
  3194  002D4E  6E1B               	movwf	tolower@c^0,c
  3195  002D50  6A1C               	clrf	(tolower@c+1)^0,c
  3196  002D52  EC8B  F02C         	call	_tolower	;wreg free
  3197  002D56  501B               	movf	?_tolower^0,w,c
  3198  002D58  6FCB               	movwf	vfpfcnvrt@ct& (0+255),b
  3199                           
  3200                           ; BSR set to: 0
  3201                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 780:         if (ct[0]) {
  3202  002D5A  51CB               	movf	vfpfcnvrt@ct& (0+255),w,b
  3203  002D5C  B4D8               	btfsc	status,2,c
  3204  002D5E  D02F               	goto	l10255
  3205                           
  3206                           ; BSR set to: 0
  3207                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 781:             ct[1] = (cha
      +                          r)tolower((int)(*fmt)[1]);
  3208  002D60  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3209  002D62  6ED9               	movwf	fsr2l,c
  3210  002D64  6ADA               	clrf	fsr2h,c
  3211  002D66  50DF               	movf	indf2,w,c
  3212  002D68  6FB4               	movwf	??_vfpfcnvrt& (0+255),b
  3213  002D6A  0E01               	movlw	1
  3214  002D6C  27B4               	addwf	??_vfpfcnvrt& (0+255),f,b
  3215  002D6E  0060  F2D3  FFF6   	movff	??_vfpfcnvrt,tblptrl
  3216  002D74                     	if	1	;There is more than 1 active tblptr byte
  3217  002D74  0E20               	movlw	high __smallconst
  3218  002D76  6EF7               	movwf	tblptrh,c
  3219  002D78                     	endif
  3220  002D78                     	if	0	;tblptru may be non-zero
  3221  002D78                     	endif
  3222  002D78                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3223  002D78  0E00               	movlw	low (__smallconst shr (0+16))
  3224  002D7A  6EF8               	movwf	tblptru,c
  3225  002D7C                     	endif
  3226  002D7C  0008               	tblrd		*
  3227  002D7E  50F5               	movf	tablat,w,c
  3228  002D80  6E1B               	movwf	tolower@c^0,c
  3229  002D82  6A1C               	clrf	(tolower@c+1)^0,c
  3230  002D84  EC8B  F02C         	call	_tolower	;wreg free
  3231  002D88  501B               	movf	?_tolower^0,w,c
  3232  002D8A  6FCC               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  3233                           
  3234                           ; BSR set to: 0
  3235                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 782:             if (ct[1]) {
  3236  002D8C  51CC               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  3237  002D8E  B4D8               	btfsc	status,2,c
  3238  002D90  D016               	goto	l10255
  3239                           
  3240                           ; BSR set to: 0
  3241                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 783:                 ct[2] = 
      +                          (char)tolower((int)(*fmt)[2]);
  3242  002D92  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3243  002D94  6ED9               	movwf	fsr2l,c
  3244  002D96  6ADA               	clrf	fsr2h,c
  3245  002D98  50DF               	movf	indf2,w,c
  3246  002D9A  6FB4               	movwf	??_vfpfcnvrt& (0+255),b
  3247  002D9C  0E02               	movlw	2
  3248  002D9E  27B4               	addwf	??_vfpfcnvrt& (0+255),f,b
  3249  002DA0  0060  F2D3  FFF6   	movff	??_vfpfcnvrt,tblptrl
  3250  002DA6                     	if	1	;There is more than 1 active tblptr byte
  3251  002DA6  0E20               	movlw	high __smallconst
  3252  002DA8  6EF7               	movwf	tblptrh,c
  3253  002DAA                     	endif
  3254  002DAA                     	if	0	;tblptru may be non-zero
  3255  002DAA                     	endif
  3256  002DAA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3257  002DAA  0E00               	movlw	low (__smallconst shr (0+16))
  3258  002DAC  6EF8               	movwf	tblptru,c
  3259  002DAE                     	endif
  3260  002DAE  0008               	tblrd		*
  3261  002DB0  50F5               	movf	tablat,w,c
  3262  002DB2  6E1B               	movwf	tolower@c^0,c
  3263  002DB4  6A1C               	clrf	(tolower@c+1)^0,c
  3264  002DB6  EC8B  F02C         	call	_tolower	;wreg free
  3265  002DBA  501B               	movf	?_tolower^0,w,c
  3266  002DBC  6FCD               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  3267  002DBE                     l10255:
  3268                           
  3269                           ; BSR set to: 0
  3270                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 942:         if (ct[0] == 'f'
      +                          ) {
  3271  002DBE  0E66               	movlw	102
  3272  002DC0  19CB               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  3273  002DC2  A4D8               	btfss	status,2,c
  3274  002DC4  D049               	goto	l10267
  3275                           
  3276                           ; BSR set to: 0
  3277                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 944:             c = (*fmt)[0
      +                          ];
  3278  002DC6  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3279  002DC8  6ED9               	movwf	fsr2l,c
  3280  002DCA  6ADA               	clrf	fsr2h,c
  3281  002DCC  006F FF7F FFF6     	movff	indf2,tblptrl
  3282  002DD2                     	if	1	;There is more than 1 active tblptr byte
  3283  002DD2  0E20               	movlw	high __smallconst
  3284  002DD4  6EF7               	movwf	tblptrh,c
  3285  002DD6                     	endif
  3286  002DD6                     	if	0	;tblptru may be non-zero
  3287  002DD6                     	endif
  3288  002DD6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3289  002DD6  0E00               	movlw	low (__smallconst shr (0+16))
  3290  002DD8  6EF8               	movwf	tblptru,c
  3291  002DDA                     	endif
  3292  002DDA  0008               	tblrd		*
  3293  002DDC  006F FFD4  F0C6    	movff	tablat,vfpfcnvrt@c
  3294                           
  3295                           ; BSR set to: 0
  3296                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 945:             ++*fmt;
  3297  002DE2  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3298  002DE4  6ED9               	movwf	fsr2l,c
  3299  002DE6  6ADA               	clrf	fsr2h,c
  3300  002DE8  2ADF               	incf	indf2,f,c
  3301                           
  3302                           ; BSR set to: 0
  3303                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 946:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  3304  002DEA  0060  F2CB  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3305  002DF0  0060  F2CF  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3306  002DF6  006F FF7C  F0B4    	movff	indf2,??_vfpfcnvrt
  3307  002DFC  0E04               	movlw	4
  3308  002DFE  26DE               	addwf	postinc2,f,c
  3309  002E00  006F FF7C  F0B5    	movff	indf2,??_vfpfcnvrt+1
  3310  002E06  0E00               	movlw	0
  3311  002E08  22DD               	addwfc	postdec2,f,c
  3312  002E0A  0060  F2D3  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3313  002E10  0060  F2D7  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3314  002E16  006F FF78  F0C7    	movff	postinc2,vfpfcnvrt@f
  3315  002E1C  006F FF78  F0C8    	movff	postinc2,vfpfcnvrt@f+1
  3316  002E22  006F FF78  F0C9    	movff	postinc2,vfpfcnvrt@f+2
  3317  002E28  006F FF78  F0CA    	movff	postinc2,vfpfcnvrt@f+3
  3318  002E2E                     l10263:
  3319                           
  3320                           ; BSR set to: 0
  3321                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 948:             return efgto
      +                          a(fp, f, c);
  3322  002E2E  C0AF  F071         	movff	vfpfcnvrt@fp,efgtoa@fp
  3323  002E32  C0B0  F072         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3324  002E36  C0C7  F073         	movff	vfpfcnvrt@f,efgtoa@f
  3325  002E3A  C0C8  F074         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3326  002E3E  C0C9  F075         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3327  002E42  C0CA  F076         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3328  002E46  C0C6  F077         	movff	vfpfcnvrt@c,efgtoa@c
  3329  002E4A  EC80  F010         	call	_efgtoa	;wreg free
  3330  002E4E  C071  F0AF         	movff	?_efgtoa,?_vfpfcnvrt
  3331  002E52  C072  F0B0         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3332  002E56  0012               	return	
  3333  002E58                     l10267:
  3334                           
  3335                           ; BSR set to: 0
  3336                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 950:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3337  002E58  0ECB               	movlw	low vfpfcnvrt@ct
  3338  002E5A  6E19               	movwf	strncmp@_l^0,c
  3339  002E5C  6A1A               	clrf	(strncmp@_l+1)^0,c
  3340  002E5E  0EF2               	movlw	low STR_20
  3341  002E60  6E1B               	movwf	strncmp@_r^0,c
  3342  002E62  501B               	movf	strncmp@_r^0,w,c
  3343  002E64  A4D8               	btfss	status,2,c
  3344  002E66  0E20               	movlw	high __smallconst
  3345  002E68  6E1C               	movwf	(strncmp@_r+1)^0,c
  3346  002E6A  0E00               	movlw	0
  3347  002E6C  6E1E               	movwf	(strncmp@n+1)^0,c
  3348  002E6E  0E02               	movlw	2
  3349  002E70  6E1D               	movwf	strncmp@n^0,c
  3350  002E72  ECDB  F020         	call	_strncmp	;wreg free
  3351  002E76  5019               	movf	?_strncmp^0,w,c
  3352  002E78  101A               	iorwf	(?_strncmp+1)^0,w,c
  3353  002E7A  A4D8               	btfss	status,2,c
  3354  002E7C  D055               	goto	l10285
  3355                           
  3356                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 952:             c = (*fmt)[1
      +                          ];
  3357  002E7E  0100               	movlb	0	; () banked
  3358  002E80  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3359  002E82  6ED9               	movwf	fsr2l,c
  3360  002E84  6ADA               	clrf	fsr2h,c
  3361  002E86  50DF               	movf	indf2,w,c
  3362  002E88  6FB4               	movwf	??_vfpfcnvrt& (0+255),b
  3363  002E8A  0E01               	movlw	1
  3364  002E8C  27B4               	addwf	??_vfpfcnvrt& (0+255),f,b
  3365  002E8E  0060  F2D3  FFF6   	movff	??_vfpfcnvrt,tblptrl
  3366  002E94                     	if	1	;There is more than 1 active tblptr byte
  3367  002E94  0E20               	movlw	high __smallconst
  3368  002E96  6EF7               	movwf	tblptrh,c
  3369  002E98                     	endif
  3370  002E98                     	if	0	;tblptru may be non-zero
  3371  002E98                     	endif
  3372  002E98                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3373  002E98  0E00               	movlw	low (__smallconst shr (0+16))
  3374  002E9A  6EF8               	movwf	tblptru,c
  3375  002E9C                     	endif
  3376  002E9C  0008               	tblrd		*
  3377  002E9E  006F FFD4  F0C6    	movff	tablat,vfpfcnvrt@c
  3378                           
  3379                           ; BSR set to: 0
  3380                           
  3381                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 953:             if ((0 && is
      +                          upper((int)(*fmt)[0]), ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3382  002EA4  0EBF               	movlw	191
  3383  002EA6  6FB4               	movwf	??_vfpfcnvrt& (0+255),b
  3384  002EA8  0EFF               	movlw	255
  3385  002EAA  6FB5               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3386  002EAC  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3387  002EAE  6ED9               	movwf	fsr2l,c
  3388  002EB0  6ADA               	clrf	fsr2h,c
  3389  002EB2  006F FF7F FFF6     	movff	indf2,tblptrl
  3390  002EB8                     	if	1	;There is more than 1 active tblptr byte
  3391  002EB8  0E20               	movlw	high __smallconst
  3392  002EBA  6EF7               	movwf	tblptrh,c
  3393  002EBC                     	endif
  3394  002EBC                     	if	0	;tblptru may be non-zero
  3395  002EBC                     	endif
  3396  002EBC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3397  002EBC  0E00               	movlw	low (__smallconst shr (0+16))
  3398  002EBE  6EF8               	movwf	tblptru,c
  3399  002EC0                     	endif
  3400  002EC0  0008               	tblrd		*
  3401  002EC2  50F5               	movf	tablat,w,c
  3402  002EC4  6FB6               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3403  002EC6  6BB7               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3404  002EC8  51B4               	movf	??_vfpfcnvrt& (0+255),w,b
  3405  002ECA  27B6               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3406  002ECC  51B5               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3407  002ECE  23B7               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3408  002ED0  51B7               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3409  002ED2  E102               	bnz	l10277
  3410  002ED4  0E1A               	movlw	26
  3411  002ED6  5DB6               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3412  002ED8                     l10277:
  3413                           
  3414                           ; BSR set to: 0
  3415                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 956:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3416  002ED8  0060  F2CB  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3417  002EDE  0060  F2CF  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3418  002EE4  006F FF7C  F0B4    	movff	indf2,??_vfpfcnvrt
  3419  002EEA  0E04               	movlw	4
  3420  002EEC  26DE               	addwf	postinc2,f,c
  3421  002EEE  006F FF7C  F0B5    	movff	indf2,??_vfpfcnvrt+1
  3422  002EF4  0E00               	movlw	0
  3423  002EF6  22DD               	addwfc	postdec2,f,c
  3424  002EF8  0060  F2D3  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3425  002EFE  0060  F2D7  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3426  002F04  006F FF78  F0C7    	movff	postinc2,vfpfcnvrt@f
  3427  002F0A  006F FF78  F0C8    	movff	postinc2,vfpfcnvrt@f+1
  3428  002F10  006F FF78  F0C9    	movff	postinc2,vfpfcnvrt@f+2
  3429  002F16  006F FF78  F0CA    	movff	postinc2,vfpfcnvrt@f+3
  3430                           
  3431                           ; BSR set to: 0
  3432                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 958:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  3433  002F1C  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3434  002F1E  6ED9               	movwf	fsr2l,c
  3435  002F20  6ADA               	clrf	fsr2h,c
  3436  002F22  0E02               	movlw	2
  3437  002F24  26DF               	addwf	indf2,f,c
  3438  002F26  D783               	goto	l10263
  3439  002F28                     l10285:
  3440                           
  3441                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1171:         if (*fmt[0] == 
      +                          's' || !strncmp(*fmt, "lls", ((sizeof("lls")/sizeof("lls"[0]))-1))) {
  3442  002F28  0100               	movlb	0	; () banked
  3443  002F2A  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3444  002F2C  6ED9               	movwf	fsr2l,c
  3445  002F2E  6ADA               	clrf	fsr2h,c
  3446  002F30  006F FF7F FFF6     	movff	indf2,tblptrl
  3447  002F36                     	if	1	;There is more than 1 active tblptr byte
  3448  002F36  0E20               	movlw	high __smallconst
  3449  002F38  6EF7               	movwf	tblptrh,c
  3450  002F3A                     	endif
  3451  002F3A                     	if	0	;tblptru may be non-zero
  3452  002F3A                     	endif
  3453  002F3A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3454  002F3A  0E00               	movlw	low (__smallconst shr (0+16))
  3455  002F3C  6EF8               	movwf	tblptru,c
  3456  002F3E                     	endif
  3457  002F3E  0008               	tblrd		*
  3458  002F40  50F5               	movf	tablat,w,c
  3459  002F42  0A73               	xorlw	115
  3460  002F44  B4D8               	btfsc	status,2,c
  3461  002F46  D01B               	goto	u12040
  3462                           
  3463                           ; BSR set to: 0
  3464  002F48  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3465  002F4A  6ED9               	movwf	fsr2l,c
  3466  002F4C  6ADA               	clrf	fsr2h,c
  3467  002F4E  50DF               	movf	indf2,w,c
  3468  002F50  6FB4               	movwf	??_vfpfcnvrt& (0+255),b
  3469  002F52  C0B4  F019         	movff	??_vfpfcnvrt,strncmp@_l
  3470  002F56  5019               	movf	strncmp@_l^0,w,c
  3471  002F58  A4D8               	btfss	status,2,c
  3472  002F5A  0E20               	movlw	high __smallconst
  3473  002F5C  6E1A               	movwf	(strncmp@_l+1)^0,c
  3474  002F5E  0EEE               	movlw	low STR_25
  3475  002F60  6E1B               	movwf	strncmp@_r^0,c
  3476  002F62  501B               	movf	strncmp@_r^0,w,c
  3477  002F64  A4D8               	btfss	status,2,c
  3478  002F66  0E20               	movlw	high __smallconst
  3479  002F68  6E1C               	movwf	(strncmp@_r+1)^0,c
  3480  002F6A  0E00               	movlw	0
  3481  002F6C  6E1E               	movwf	(strncmp@n+1)^0,c
  3482  002F6E  0E03               	movlw	3
  3483  002F70  6E1D               	movwf	strncmp@n^0,c
  3484  002F72  ECDB  F020         	call	_strncmp	;wreg free
  3485  002F76  5019               	movf	?_strncmp^0,w,c
  3486  002F78  101A               	iorwf	(?_strncmp+1)^0,w,c
  3487  002F7A  A4D8               	btfss	status,2,c
  3488  002F7C  D048               	goto	l10303
  3489  002F7E                     u12040:
  3490                           
  3491                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1173:    *fmt += *fmt[0] == '
      +                          s' ? 1 : ((sizeof("lls")/sizeof("lls"[0]))-1);
  3492  002F7E  0100               	movlb	0	; () banked
  3493  002F80  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3494  002F82  6ED9               	movwf	fsr2l,c
  3495  002F84  6ADA               	clrf	fsr2h,c
  3496  002F86  006F FF7F FFF6     	movff	indf2,tblptrl
  3497  002F8C                     	if	1	;There is more than 1 active tblptr byte
  3498  002F8C  0E20               	movlw	high __smallconst
  3499  002F8E  6EF7               	movwf	tblptrh,c
  3500  002F90                     	endif
  3501  002F90                     	if	0	;tblptru may be non-zero
  3502  002F90                     	endif
  3503  002F90                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3504  002F90  0E00               	movlw	low (__smallconst shr (0+16))
  3505  002F92  6EF8               	movwf	tblptru,c
  3506  002F94                     	endif
  3507  002F94  0008               	tblrd		*
  3508  002F96  50F5               	movf	tablat,w,c
  3509  002F98  0A73               	xorlw	115
  3510  002F9A  B4D8               	btfsc	status,2,c
  3511  002F9C  D004               	goto	l10293
  3512                           
  3513                           ; BSR set to: 0
  3514  002F9E  0E00               	movlw	0
  3515  002FA0  6FC5               	movwf	(_vfpfcnvrt$3123+1)& (0+255),b
  3516  002FA2  0E03               	movlw	3
  3517  002FA4  D003               	goto	L2
  3518  002FA6                     l10293:
  3519                           
  3520                           ; BSR set to: 0
  3521  002FA6  0E00               	movlw	0
  3522  002FA8  6FC5               	movwf	(_vfpfcnvrt$3123+1)& (0+255),b
  3523  002FAA  0E01               	movlw	1
  3524  002FAC                     L2:
  3525  002FAC  6FC4               	movwf	_vfpfcnvrt$3123& (0+255),b
  3526                           
  3527                           ; BSR set to: 0
  3528  002FAE  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3529  002FB0  6ED9               	movwf	fsr2l,c
  3530  002FB2  6ADA               	clrf	fsr2h,c
  3531  002FB4  51C4               	movf	_vfpfcnvrt$3123& (0+255),w,b
  3532  002FB6  26DF               	addwf	indf2,f,c
  3533                           
  3534                           ; BSR set to: 0
  3535                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1174:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  3536  002FB8  0060  F2CB  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3537  002FBE  0060  F2CF  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3538  002FC4  006F FF7C  F0B4    	movff	indf2,??_vfpfcnvrt
  3539  002FCA  0E02               	movlw	2
  3540  002FCC  26DE               	addwf	postinc2,f,c
  3541  002FCE  006F FF7C  F0B5    	movff	indf2,??_vfpfcnvrt+1
  3542  002FD4  0E00               	movlw	0
  3543  002FD6  22DD               	addwfc	postdec2,f,c
  3544  002FD8  0060  F2D3  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3545  002FDE  0060  F2D7  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3546  002FE4  006F FF78  F0C0    	movff	postinc2,vfpfcnvrt@cp
  3547  002FEA  006F FF74  F0C1    	movff	postdec2,vfpfcnvrt@cp+1
  3548                           
  3549                           ; BSR set to: 0
  3550                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1176:             return stoa
      +                          (fp, cp);
  3551  002FF0  C0AF  F020         	movff	vfpfcnvrt@fp,stoa@fp
  3552  002FF4  C0B0  F021         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  3553  002FF8  C0C0  F022         	movff	vfpfcnvrt@cp,stoa@s
  3554  002FFC  C0C1  F023         	movff	vfpfcnvrt@cp+1,stoa@s+1
  3555  003000  ECDD  F022         	call	_stoa	;wreg free
  3556  003004  C020  F0AF         	movff	?_stoa,?_vfpfcnvrt
  3557  003008  C021  F0B0         	movff	?_stoa+1,?_vfpfcnvrt+1
  3558  00300C  0012               	return	
  3559  00300E                     l10303:
  3560                           
  3561                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1204:         if (*fmt[0] == 
      +                          'u') {
  3562  00300E  0100               	movlb	0	; () banked
  3563  003010  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3564  003012  6ED9               	movwf	fsr2l,c
  3565  003014  6ADA               	clrf	fsr2h,c
  3566  003016  006F FF7F FFF6     	movff	indf2,tblptrl
  3567  00301C                     	if	1	;There is more than 1 active tblptr byte
  3568  00301C  0E20               	movlw	high __smallconst
  3569  00301E  6EF7               	movwf	tblptrh,c
  3570  003020                     	endif
  3571  003020                     	if	0	;tblptru may be non-zero
  3572  003020                     	endif
  3573  003020                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3574  003020  0E00               	movlw	low (__smallconst shr (0+16))
  3575  003022  6EF8               	movwf	tblptru,c
  3576  003024                     	endif
  3577  003024  0008               	tblrd		*
  3578  003026  50F5               	movf	tablat,w,c
  3579  003028  0A75               	xorlw	117
  3580  00302A  A4D8               	btfss	status,2,c
  3581  00302C  D045               	goto	l10311
  3582                           
  3583                           ; BSR set to: 0
  3584                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1206:             ++*fmt;
  3585  00302E  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3586  003030  6ED9               	movwf	fsr2l,c
  3587  003032  6ADA               	clrf	fsr2h,c
  3588  003034  2ADF               	incf	indf2,f,c
  3589                           
  3590                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1207:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  3591  003036  0060  F2CB  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3592  00303C  0060  F2CF  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3593  003042  006F FF7C  F0B4    	movff	indf2,??_vfpfcnvrt
  3594  003048  0E02               	movlw	2
  3595  00304A  26DE               	addwf	postinc2,f,c
  3596  00304C  006F FF7C  F0B5    	movff	indf2,??_vfpfcnvrt+1
  3597  003052  0E00               	movlw	0
  3598  003054  22DD               	addwfc	postdec2,f,c
  3599  003056  0060  F2D3  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3600  00305C  0060  F2D7  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3601  003062  006F FF78  F0B6    	movff	postinc2,??_vfpfcnvrt+2
  3602  003068  006F FF74  F0B7    	movff	postdec2,??_vfpfcnvrt+3
  3603  00306E  C0B6  F0B8         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3604  003072  C0B7  F0B9         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3605  003076  6BBA               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3606  003078  6BBB               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3607  00307A  6BBC               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3608  00307C  6BBD               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3609  00307E  6BBE               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3610  003080  6BBF               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3611                           
  3612                           ; BSR set to: 0
  3613                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1209:             return utoa
      +                          (fp, llu);
  3614  003082  C0AF  F060         	movff	vfpfcnvrt@fp,utoa@fp
  3615  003086  C0B0  F061         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  3616  00308A  C0B8  F062         	movff	vfpfcnvrt@llu,utoa@d
  3617  00308E  C0B9  F063         	movff	vfpfcnvrt@llu+1,utoa@d+1
  3618  003092  C0BA  F064         	movff	vfpfcnvrt@llu+2,utoa@d+2
  3619  003096  C0BB  F065         	movff	vfpfcnvrt@llu+3,utoa@d+3
  3620  00309A  C0BC  F066         	movff	vfpfcnvrt@llu+4,utoa@d+4
  3621  00309E  C0BD  F067         	movff	vfpfcnvrt@llu+5,utoa@d+5
  3622  0030A2  C0BE  F068         	movff	vfpfcnvrt@llu+6,utoa@d+6
  3623  0030A6  C0BF  F069         	movff	vfpfcnvrt@llu+7,utoa@d+7
  3624  0030AA  EC2E  F01F         	call	_utoa	;wreg free
  3625  0030AE  C060  F0AF         	movff	?_utoa,?_vfpfcnvrt
  3626  0030B2  C061  F0B0         	movff	?_utoa+1,?_vfpfcnvrt+1
  3627  0030B6  0012               	return	
  3628  0030B8                     l10311:
  3629                           
  3630                           ; BSR set to: 0
  3631                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1372:         if ((*fmt)[0] =
      +                          = '%') {
  3632  0030B8  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3633  0030BA  6ED9               	movwf	fsr2l,c
  3634  0030BC  6ADA               	clrf	fsr2h,c
  3635  0030BE  006F FF7F FFF6     	movff	indf2,tblptrl
  3636  0030C4                     	if	1	;There is more than 1 active tblptr byte
  3637  0030C4  0E20               	movlw	high __smallconst
  3638  0030C6  6EF7               	movwf	tblptrh,c
  3639  0030C8                     	endif
  3640  0030C8                     	if	0	;tblptru may be non-zero
  3641  0030C8                     	endif
  3642  0030C8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3643  0030C8  0E00               	movlw	low (__smallconst shr (0+16))
  3644  0030CA  6EF8               	movwf	tblptru,c
  3645  0030CC                     	endif
  3646  0030CC  0008               	tblrd		*
  3647  0030CE  50F5               	movf	tablat,w,c
  3648  0030D0  0A25               	xorlw	37
  3649  0030D2  A4D8               	btfss	status,2,c
  3650  0030D4  D014               	goto	l10321
  3651                           
  3652                           ; BSR set to: 0
  3653                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1373:             ++*fmt;
  3654  0030D6  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3655  0030D8  6ED9               	movwf	fsr2l,c
  3656  0030DA  6ADA               	clrf	fsr2h,c
  3657  0030DC  2ADF               	incf	indf2,f,c
  3658                           
  3659                           ; BSR set to: 0
  3660                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1374:             fputc((int)
      +                          '%', fp);
  3661  0030DE  0E00               	movlw	0
  3662  0030E0  6E18               	movwf	(fputc@c+1)^0,c
  3663  0030E2  0E25               	movlw	37
  3664  0030E4  6E17               	movwf	fputc@c^0,c
  3665  0030E6  C0AF  F019         	movff	vfpfcnvrt@fp,fputc@fp
  3666  0030EA  C0B0  F01A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3667  0030EE  EC0F  F027         	call	_fputc	;wreg free
  3668  0030F2                     l10317:
  3669                           
  3670                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1375:             return 1;
  3671  0030F2  0E00               	movlw	0
  3672  0030F4  0100               	movlb	0	; () banked
  3673  0030F6  6FB0               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3674  0030F8  0E01               	movlw	1
  3675  0030FA  6FAF               	movwf	?_vfpfcnvrt& (0+255),b
  3676  0030FC  0012               	return	
  3677  0030FE                     l10321:
  3678                           
  3679                           ; BSR set to: 0
  3680                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1379:         ++*fmt;
  3681  0030FE  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3682  003100  6ED9               	movwf	fsr2l,c
  3683  003102  6ADA               	clrf	fsr2h,c
  3684  003104  2ADF               	incf	indf2,f,c
  3685                           
  3686                           ; BSR set to: 0
  3687                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1380:         return 0;
  3688  003106  0E00               	movlw	0
  3689  003108  6FB0               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3690  00310A  0E00               	movlw	0
  3691  00310C  6FAF               	movwf	?_vfpfcnvrt& (0+255),b
  3692  00310E  0012               	return	
  3693  003110                     l10327:
  3694                           
  3695                           ; BSR set to: 0
  3696                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1384:     fputc((int)(*fmt)[0
      +                          ], fp);
  3697  003110  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3698  003112  6ED9               	movwf	fsr2l,c
  3699  003114  6ADA               	clrf	fsr2h,c
  3700  003116  006F FF7F FFF6     	movff	indf2,tblptrl
  3701  00311C                     	if	1	;There is more than 1 active tblptr byte
  3702  00311C  0E20               	movlw	high __smallconst
  3703  00311E  6EF7               	movwf	tblptrh,c
  3704  003120                     	endif
  3705  003120                     	if	0	;tblptru may be non-zero
  3706  003120                     	endif
  3707  003120                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3708  003120  0E00               	movlw	low (__smallconst shr (0+16))
  3709  003122  6EF8               	movwf	tblptru,c
  3710  003124                     	endif
  3711  003124  0008               	tblrd		*
  3712  003126  50F5               	movf	tablat,w,c
  3713  003128  6E17               	movwf	fputc@c^0,c
  3714  00312A  6A18               	clrf	(fputc@c+1)^0,c
  3715  00312C  C0AF  F019         	movff	vfpfcnvrt@fp,fputc@fp
  3716  003130  C0B0  F01A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3717  003134  EC0F  F027         	call	_fputc	;wreg free
  3718                           
  3719                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1385:     ++*fmt;
  3720  003138  0100               	movlb	0	; () banked
  3721  00313A  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3722  00313C  6ED9               	movwf	fsr2l,c
  3723  00313E  6ADA               	clrf	fsr2h,c
  3724  003140  2ADF               	incf	indf2,f,c
  3725  003142  D7D7               	goto	l10317
  3726  003144                     __end_of_vfpfcnvrt:
  3727                           	callstack 0
  3728                           
  3729 ;; *************** function _utoa *****************
  3730 ;; Defined at:
  3731 ;;		line 615 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  3732 ;; Parameters:    Size  Location     Type
  3733 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  3734 ;;		 -> sprintf@f(11), NULL(0), 
  3735 ;;  d               8    2[BANK0 ] unsigned long long 
  3736 ;; Auto vars:     Size  Location     Type
  3737 ;;  n               8   22[BANK0 ] unsigned long long 
  3738 ;;  i               2   30[BANK0 ] int 
  3739 ;;  w               2   20[BANK0 ] int 
  3740 ;;  p               2   18[BANK0 ] int 
  3741 ;; Return value:  Size  Location     Type
  3742 ;;                  2    0[BANK0 ] int 
  3743 ;; Registers used:
  3744 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3745 ;; Tracked objects:
  3746 ;;		On entry : 3F/0
  3747 ;;		On exit  : 0/0
  3748 ;;		Unchanged: 0/0
  3749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3750 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3751 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3752 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3753 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3754 ;;Total ram usage:       32 bytes
  3755 ;; Hardware stack levels used: 1
  3756 ;; Hardware stack levels required when called: 9
  3757 ;; This function calls:
  3758 ;;		___lodiv
  3759 ;;		___lomod
  3760 ;;		_pad
  3761 ;; This function is called by:
  3762 ;;		_vfpfcnvrt
  3763 ;; This function uses a non-reentrant model
  3764 ;;
  3765                           
  3766                           	psect	text7
  3767  003E5C                     __ptext7:
  3768                           	callstack 0
  3769  003E5C                     _utoa:
  3770                           	callstack 16
  3771                           
  3772                           ; BSR set to: 0
  3773                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 615: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 616: {
      +                          ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 617:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 618:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 621:     if (!(prec < 0)) {
  3774                           
  3775                           ;incstack = 0
  3776  003E5C  AFFA               	btfss	(_prec+1)& (0+255),7,b
  3777                           
  3778                           ; BSR set to: 0
  3779                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 622:         flags &= ~(1 << 
      +                          1);
  3780  003E5E  923D               	bcf	_flags^0,1,c
  3781                           
  3782                           ; BSR set to: 0
  3783                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 624:     p = (0 < prec) ? pre
      +                          c : 1;
  3784  003E60  BFFA               	btfsc	(_prec+1)& (0+255),7,b
  3785  003E62  D005               	goto	u11790
  3786  003E64  51FA               	movf	(_prec+1)& (0+255),w,b
  3787  003E66  E108               	bnz	l2097
  3788  003E68  05F9               	decf	_prec& (0+255),w,b
  3789  003E6A  B0D8               	btfsc	status,0,c
  3790  003E6C  D005               	goto	l2097
  3791  003E6E                     u11790:
  3792                           
  3793                           ; BSR set to: 0
  3794  003E6E  0E00               	movlw	0
  3795  003E70  6F73               	movwf	(utoa@p+1)& (0+255),b
  3796  003E72  0E01               	movlw	1
  3797  003E74  6F72               	movwf	utoa@p& (0+255),b
  3798  003E76  D004               	goto	l2099
  3799  003E78                     l2097:
  3800                           
  3801                           ; BSR set to: 0
  3802  003E78  C0F9  F072         	movff	_prec,utoa@p
  3803  003E7C  C0FA  F073         	movff	_prec+1,utoa@p+1
  3804  003E80                     l2099:
  3805                           
  3806                           ; BSR set to: 0
  3807                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 625:     w = width;
  3808  003E80  C0F7  F074         	movff	_width,utoa@w
  3809  003E84  C0F8  F075         	movff	_width+1,utoa@w+1
  3810                           
  3811                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 628:     n = d;
  3812  003E88  C062  F076         	movff	utoa@d,utoa@n
  3813  003E8C  C063  F077         	movff	utoa@d+1,utoa@n+1
  3814  003E90  C064  F078         	movff	utoa@d+2,utoa@n+2
  3815  003E94  C065  F079         	movff	utoa@d+3,utoa@n+3
  3816  003E98  C066  F07A         	movff	utoa@d+4,utoa@n+4
  3817  003E9C  C067  F07B         	movff	utoa@d+5,utoa@n+5
  3818  003EA0  C068  F07C         	movff	utoa@d+6,utoa@n+6
  3819  003EA4  C069  F07D         	movff	utoa@d+7,utoa@n+7
  3820                           
  3821                           ; BSR set to: 0
  3822                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 629:     i = sizeof(dbuf) - 1
      +                          ;
  3823  003EA8  0E00               	movlw	0
  3824  003EAA  6F7F               	movwf	(utoa@i+1)& (0+255),b
  3825  003EAC  0E4F               	movlw	79
  3826  003EAE  6F7E               	movwf	utoa@i& (0+255),b
  3827                           
  3828                           ; BSR set to: 0
  3829                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 630:     dbuf[i] = '\0';
  3830  003EB0  0E00               	movlw	0
  3831  003EB2  0101               	movlb	1	; () banked
  3832  003EB4  6FE7               	movwf	(_dbuf+79)& (0+255),b
  3833                           
  3834                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 631:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  3835  003EB6  D076               	goto	l10123
  3836  003EB8                     l10113:
  3837                           
  3838                           ; BSR set to: 0
  3839                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 632:         --i;
  3840  003EB8  077E               	decf	utoa@i& (0+255),f,b
  3841  003EBA  A0D8               	btfss	status,0,c
  3842  003EBC  077F               	decf	(utoa@i+1)& (0+255),f,b
  3843                           
  3844                           ; BSR set to: 0
  3845                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 633:         dbuf[i] = '0' + 
      +                          (n % 10);
  3846  003EBE  0E98               	movlw	low _dbuf
  3847  003EC0  257E               	addwf	utoa@i& (0+255),w,b
  3848  003EC2  6ED9               	movwf	fsr2l,c
  3849  003EC4  0E01               	movlw	high _dbuf
  3850  003EC6  217F               	addwfc	(utoa@i+1)& (0+255),w,b
  3851  003EC8  6EDA               	movwf	fsr2h,c
  3852  003ECA  C076  F015         	movff	utoa@n,___lomod@dividend
  3853  003ECE  C077  F016         	movff	utoa@n+1,___lomod@dividend+1
  3854  003ED2  C078  F017         	movff	utoa@n+2,___lomod@dividend+2
  3855  003ED6  C079  F018         	movff	utoa@n+3,___lomod@dividend+3
  3856  003EDA  C07A  F019         	movff	utoa@n+4,___lomod@dividend+4
  3857  003EDE  C07B  F01A         	movff	utoa@n+5,___lomod@dividend+5
  3858  003EE2  C07C  F01B         	movff	utoa@n+6,___lomod@dividend+6
  3859  003EE6  C07D  F01C         	movff	utoa@n+7,___lomod@dividend+7
  3860  003EEA  0E0A               	movlw	10
  3861  003EEC  6E1D               	movwf	___lomod@divisor^0,c
  3862  003EEE  0E00               	movlw	0
  3863  003EF0  6E1E               	movwf	(___lomod@divisor+1)^0,c
  3864  003EF2  0E00               	movlw	0
  3865  003EF4  6E1F               	movwf	(___lomod@divisor+2)^0,c
  3866  003EF6  0E00               	movlw	0
  3867  003EF8  6E20               	movwf	(___lomod@divisor+3)^0,c
  3868  003EFA  0E00               	movlw	0
  3869  003EFC  6E21               	movwf	(___lomod@divisor+4)^0,c
  3870  003EFE  0E00               	movlw	0
  3871  003F00  6E22               	movwf	(___lomod@divisor+5)^0,c
  3872  003F02  0E00               	movlw	0
  3873  003F04  6E23               	movwf	(___lomod@divisor+6)^0,c
  3874  003F06  0E00               	movlw	0
  3875  003F08  6E24               	movwf	(___lomod@divisor+7)^0,c
  3876  003F0A  ECC3  F027         	call	___lomod	;wreg free
  3877  003F0E  C015  F06A         	movff	?___lomod,??_utoa
  3878  003F12  C016  F06B         	movff	?___lomod+1,??_utoa+1
  3879  003F16  C017  F06C         	movff	?___lomod+2,??_utoa+2
  3880  003F1A  C018  F06D         	movff	?___lomod+3,??_utoa+3
  3881  003F1E  C019  F06E         	movff	?___lomod+4,??_utoa+4
  3882  003F22  C01A  F06F         	movff	?___lomod+5,??_utoa+5
  3883  003F26  C01B  F070         	movff	?___lomod+6,??_utoa+6
  3884  003F2A  C01C  F071         	movff	?___lomod+7,??_utoa+7
  3885  003F2E  516A               	movf	??_utoa& (0+255),w,b
  3886  003F30  0F30               	addlw	48
  3887  003F32  6EDF               	movwf	indf2,c
  3888                           
  3889                           ; BSR set to: 0
  3890                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 634:         --p;
  3891  003F34  0772               	decf	utoa@p& (0+255),f,b
  3892  003F36  A0D8               	btfss	status,0,c
  3893  003F38  0773               	decf	(utoa@p+1)& (0+255),f,b
  3894                           
  3895                           ; BSR set to: 0
  3896                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 635:         --w;
  3897  003F3A  0774               	decf	utoa@w& (0+255),f,b
  3898  003F3C  A0D8               	btfss	status,0,c
  3899  003F3E  0775               	decf	(utoa@w+1)& (0+255),f,b
  3900                           
  3901                           ; BSR set to: 0
  3902                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 636:         n = n / 10;
  3903  003F40  C076  F015         	movff	utoa@n,___lodiv@dividend
  3904  003F44  C077  F016         	movff	utoa@n+1,___lodiv@dividend+1
  3905  003F48  C078  F017         	movff	utoa@n+2,___lodiv@dividend+2
  3906  003F4C  C079  F018         	movff	utoa@n+3,___lodiv@dividend+3
  3907  003F50  C07A  F019         	movff	utoa@n+4,___lodiv@dividend+4
  3908  003F54  C07B  F01A         	movff	utoa@n+5,___lodiv@dividend+5
  3909  003F58  C07C  F01B         	movff	utoa@n+6,___lodiv@dividend+6
  3910  003F5C  C07D  F01C         	movff	utoa@n+7,___lodiv@dividend+7
  3911  003F60  0E0A               	movlw	10
  3912  003F62  6E1D               	movwf	___lodiv@divisor^0,c
  3913  003F64  0E00               	movlw	0
  3914  003F66  6E1E               	movwf	(___lodiv@divisor+1)^0,c
  3915  003F68  0E00               	movlw	0
  3916  003F6A  6E1F               	movwf	(___lodiv@divisor+2)^0,c
  3917  003F6C  0E00               	movlw	0
  3918  003F6E  6E20               	movwf	(___lodiv@divisor+3)^0,c
  3919  003F70  0E00               	movlw	0
  3920  003F72  6E21               	movwf	(___lodiv@divisor+4)^0,c
  3921  003F74  0E00               	movlw	0
  3922  003F76  6E22               	movwf	(___lodiv@divisor+5)^0,c
  3923  003F78  0E00               	movlw	0
  3924  003F7A  6E23               	movwf	(___lodiv@divisor+6)^0,c
  3925  003F7C  0E00               	movlw	0
  3926  003F7E  6E24               	movwf	(___lodiv@divisor+7)^0,c
  3927  003F80  EC22  F025         	call	___lodiv	;wreg free
  3928  003F84  C015  F076         	movff	?___lodiv,utoa@n
  3929  003F88  C016  F077         	movff	?___lodiv+1,utoa@n+1
  3930  003F8C  C017  F078         	movff	?___lodiv+2,utoa@n+2
  3931  003F90  C018  F079         	movff	?___lodiv+3,utoa@n+3
  3932  003F94  C019  F07A         	movff	?___lodiv+4,utoa@n+4
  3933  003F98  C01A  F07B         	movff	?___lodiv+5,utoa@n+5
  3934  003F9C  C01B  F07C         	movff	?___lodiv+6,utoa@n+6
  3935  003FA0  C01C  F07D         	movff	?___lodiv+7,utoa@n+7
  3936  003FA4                     l10123:
  3937                           
  3938                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 631:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  3939  003FA4  0100               	movlb	0	; () banked
  3940  003FA6  517E               	movf	utoa@i& (0+255),w,b
  3941  003FA8  117F               	iorwf	(utoa@i+1)& (0+255),w,b
  3942  003FAA  B4D8               	btfsc	status,2,c
  3943  003FAC  D01A               	goto	u11840
  3944                           
  3945                           ; BSR set to: 0
  3946  003FAE  5176               	movf	utoa@n& (0+255),w,b
  3947  003FB0  1177               	iorwf	(utoa@n+1)& (0+255),w,b
  3948  003FB2  1178               	iorwf	(utoa@n+2)& (0+255),w,b
  3949  003FB4  1179               	iorwf	(utoa@n+3)& (0+255),w,b
  3950  003FB6  117A               	iorwf	(utoa@n+4)& (0+255),w,b
  3951  003FB8  117B               	iorwf	(utoa@n+5)& (0+255),w,b
  3952  003FBA  117C               	iorwf	(utoa@n+6)& (0+255),w,b
  3953  003FBC  117D               	iorwf	(utoa@n+7)& (0+255),w,b
  3954  003FBE  A4D8               	btfss	status,2,c
  3955  003FC0  D77B               	goto	l10113
  3956                           
  3957                           ; BSR set to: 0
  3958  003FC2  BF73               	btfsc	(utoa@p+1)& (0+255),7,b
  3959  003FC4  D005               	goto	u11820
  3960  003FC6  5173               	movf	(utoa@p+1)& (0+255),w,b
  3961  003FC8  E102               	bnz	u11821
  3962  003FCA  0572               	decf	utoa@p& (0+255),w,b
  3963  003FCC  B0D8               	btfsc	status,0,c
  3964  003FCE                     u11821:
  3965  003FCE  D774               	goto	l10113
  3966  003FD0                     u11820:
  3967                           
  3968                           ; BSR set to: 0
  3969  003FD0  BF75               	btfsc	(utoa@w+1)& (0+255),7,b
  3970  003FD2  D007               	goto	u11840
  3971  003FD4  5175               	movf	(utoa@w+1)& (0+255),w,b
  3972  003FD6  E103               	bnz	u11830
  3973  003FD8  0574               	decf	utoa@w& (0+255),w,b
  3974  003FDA  A0D8               	btfss	status,0,c
  3975  003FDC  D002               	goto	u11840
  3976  003FDE                     u11830:
  3977                           
  3978                           ; BSR set to: 0
  3979  003FDE  B23D               	btfsc	_flags^0,1,c
  3980  003FE0  D76B               	goto	l10113
  3981  003FE2                     u11840:
  3982                           
  3983                           ; BSR set to: 0
  3984                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 640:     return pad(fp, &dbuf
      +                          [i], w);
  3985  003FE2  C060  F029         	movff	utoa@fp,pad@fp
  3986  003FE6  C061  F02A         	movff	utoa@fp+1,pad@fp+1
  3987  003FEA  0E98               	movlw	low _dbuf
  3988  003FEC  257E               	addwf	utoa@i& (0+255),w,b
  3989  003FEE  6E2B               	movwf	pad@buf^0,c
  3990  003FF0  0E01               	movlw	high _dbuf
  3991  003FF2  217F               	addwfc	(utoa@i+1)& (0+255),w,b
  3992  003FF4  6E2C               	movwf	(pad@buf+1)^0,c
  3993  003FF6  C074  F02D         	movff	utoa@w,pad@p
  3994  003FFA  C075  F02E         	movff	utoa@w+1,pad@p+1
  3995  003FFE  EC6B  F028         	call	_pad	;wreg free
  3996  004002  C029  F060         	movff	?_pad,?_utoa
  3997  004006  C02A  F061         	movff	?_pad+1,?_utoa+1
  3998  00400A  0012               	return		;funcret
  3999  00400C                     __end_of_utoa:
  4000                           	callstack 0
  4001                           
  4002 ;; *************** function ___lomod *****************
  4003 ;; Defined at:
  4004 ;;		line 9 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/lomod.c"
  4005 ;; Parameters:    Size  Location     Type
  4006 ;;  dividend        8   20[COMRAM] unsigned long long 
  4007 ;;  divisor         8   28[COMRAM] unsigned long long 
  4008 ;; Auto vars:     Size  Location     Type
  4009 ;;  counter         1   36[COMRAM] unsigned char 
  4010 ;; Return value:  Size  Location     Type
  4011 ;;                  8   20[COMRAM] unsigned long long 
  4012 ;; Registers used:
  4013 ;;		wreg, status,2, status,0
  4014 ;; Tracked objects:
  4015 ;;		On entry : 3F/0
  4016 ;;		On exit  : 3F/0
  4017 ;;		Unchanged: 3F/0
  4018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4019 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4020 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4022 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4023 ;;Total ram usage:       17 bytes
  4024 ;; Hardware stack levels used: 1
  4025 ;; Hardware stack levels required when called: 4
  4026 ;; This function calls:
  4027 ;;		Nothing
  4028 ;; This function is called by:
  4029 ;;		_utoa
  4030 ;; This function uses a non-reentrant model
  4031 ;;
  4032                           
  4033                           	psect	text8
  4034  004F86                     __ptext8:
  4035                           	callstack 0
  4036  004F86                     ___lomod:
  4037                           	callstack 20
  4038                           
  4039                           ; BSR set to: 0
  4040                           
  4041                           ;incstack = 0
  4042  004F86  501D               	movf	___lomod@divisor^0,w,c
  4043  004F88  101E               	iorwf	(___lomod@divisor+1)^0,w,c
  4044  004F8A  101F               	iorwf	(___lomod@divisor+2)^0,w,c
  4045  004F8C  1020               	iorwf	(___lomod@divisor+3)^0,w,c
  4046  004F8E  1021               	iorwf	(___lomod@divisor+4)^0,w,c
  4047  004F90  1022               	iorwf	(___lomod@divisor+5)^0,w,c
  4048  004F92  1023               	iorwf	(___lomod@divisor+6)^0,w,c
  4049  004F94  1024               	iorwf	(___lomod@divisor+7)^0,w,c
  4050  004F96  B4D8               	btfsc	status,2,c
  4051  004F98  D03C               	goto	l1696
  4052                           
  4053                           ; BSR set to: 0
  4054  004F9A  0E01               	movlw	1
  4055  004F9C  6E25               	movwf	___lomod@counter^0,c
  4056  004F9E  D00A               	goto	l9621
  4057  004FA0                     l9619:
  4058                           
  4059                           ; BSR set to: 0
  4060  004FA0  90D8               	bcf	status,0,c
  4061  004FA2  361D               	rlcf	___lomod@divisor^0,f,c
  4062  004FA4  361E               	rlcf	(___lomod@divisor+1)^0,f,c
  4063  004FA6  361F               	rlcf	(___lomod@divisor+2)^0,f,c
  4064  004FA8  3620               	rlcf	(___lomod@divisor+3)^0,f,c
  4065  004FAA  3621               	rlcf	(___lomod@divisor+4)^0,f,c
  4066  004FAC  3622               	rlcf	(___lomod@divisor+5)^0,f,c
  4067  004FAE  3623               	rlcf	(___lomod@divisor+6)^0,f,c
  4068  004FB0  3624               	rlcf	(___lomod@divisor+7)^0,f,c
  4069  004FB2  2A25               	incf	___lomod@counter^0,f,c
  4070  004FB4                     l9621:
  4071                           
  4072                           ; BSR set to: 0
  4073  004FB4  AE24               	btfss	(___lomod@divisor+7)^0,7,c
  4074  004FB6  D7F4               	goto	l9619
  4075  004FB8                     u10800:
  4076                           
  4077                           ; BSR set to: 0
  4078  004FB8  501D               	movf	___lomod@divisor^0,w,c
  4079  004FBA  5C15               	subwf	___lomod@dividend^0,w,c
  4080  004FBC  501E               	movf	(___lomod@divisor+1)^0,w,c
  4081  004FBE  5816               	subwfb	(___lomod@dividend+1)^0,w,c
  4082  004FC0  501F               	movf	(___lomod@divisor+2)^0,w,c
  4083  004FC2  5817               	subwfb	(___lomod@dividend+2)^0,w,c
  4084  004FC4  5020               	movf	(___lomod@divisor+3)^0,w,c
  4085  004FC6  5818               	subwfb	(___lomod@dividend+3)^0,w,c
  4086  004FC8  5021               	movf	(___lomod@divisor+4)^0,w,c
  4087  004FCA  5819               	subwfb	(___lomod@dividend+4)^0,w,c
  4088  004FCC  5022               	movf	(___lomod@divisor+5)^0,w,c
  4089  004FCE  581A               	subwfb	(___lomod@dividend+5)^0,w,c
  4090  004FD0  5023               	movf	(___lomod@divisor+6)^0,w,c
  4091  004FD2  581B               	subwfb	(___lomod@dividend+6)^0,w,c
  4092  004FD4  5024               	movf	(___lomod@divisor+7)^0,w,c
  4093  004FD6  581C               	subwfb	(___lomod@dividend+7)^0,w,c
  4094  004FD8  A0D8               	btfss	status,0,c
  4095  004FDA  D010               	goto	l9627
  4096                           
  4097                           ; BSR set to: 0
  4098  004FDC  501D               	movf	___lomod@divisor^0,w,c
  4099  004FDE  5E15               	subwf	___lomod@dividend^0,f,c
  4100  004FE0  501E               	movf	(___lomod@divisor+1)^0,w,c
  4101  004FE2  5A16               	subwfb	(___lomod@dividend+1)^0,f,c
  4102  004FE4  501F               	movf	(___lomod@divisor+2)^0,w,c
  4103  004FE6  5A17               	subwfb	(___lomod@dividend+2)^0,f,c
  4104  004FE8  5020               	movf	(___lomod@divisor+3)^0,w,c
  4105  004FEA  5A18               	subwfb	(___lomod@dividend+3)^0,f,c
  4106  004FEC  5021               	movf	(___lomod@divisor+4)^0,w,c
  4107  004FEE  5A19               	subwfb	(___lomod@dividend+4)^0,f,c
  4108  004FF0  5022               	movf	(___lomod@divisor+5)^0,w,c
  4109  004FF2  5A1A               	subwfb	(___lomod@dividend+5)^0,f,c
  4110  004FF4  5023               	movf	(___lomod@divisor+6)^0,w,c
  4111  004FF6  5A1B               	subwfb	(___lomod@dividend+6)^0,f,c
  4112  004FF8  5024               	movf	(___lomod@divisor+7)^0,w,c
  4113  004FFA  5A1C               	subwfb	(___lomod@dividend+7)^0,f,c
  4114  004FFC                     l9627:
  4115                           
  4116                           ; BSR set to: 0
  4117  004FFC  90D8               	bcf	status,0,c
  4118  004FFE  3224               	rrcf	(___lomod@divisor+7)^0,f,c
  4119  005000  3223               	rrcf	(___lomod@divisor+6)^0,f,c
  4120  005002  3222               	rrcf	(___lomod@divisor+5)^0,f,c
  4121  005004  3221               	rrcf	(___lomod@divisor+4)^0,f,c
  4122  005006  3220               	rrcf	(___lomod@divisor+3)^0,f,c
  4123  005008  321F               	rrcf	(___lomod@divisor+2)^0,f,c
  4124  00500A  321E               	rrcf	(___lomod@divisor+1)^0,f,c
  4125  00500C  321D               	rrcf	___lomod@divisor^0,f,c
  4126                           
  4127                           ; BSR set to: 0
  4128  00500E  2E25               	decfsz	___lomod@counter^0,f,c
  4129  005010  D7D3               	goto	u10800
  4130  005012                     l1696:
  4131                           
  4132                           ; BSR set to: 0
  4133  005012  C015  F015         	movff	___lomod@dividend,?___lomod
  4134  005016  C016  F016         	movff	___lomod@dividend+1,?___lomod+1
  4135  00501A  C017  F017         	movff	___lomod@dividend+2,?___lomod+2
  4136  00501E  C018  F018         	movff	___lomod@dividend+3,?___lomod+3
  4137  005022  C019  F019         	movff	___lomod@dividend+4,?___lomod+4
  4138  005026  C01A  F01A         	movff	___lomod@dividend+5,?___lomod+5
  4139  00502A  C01B  F01B         	movff	___lomod@dividend+6,?___lomod+6
  4140  00502E  C01C  F01C         	movff	___lomod@dividend+7,?___lomod+7
  4141                           
  4142                           ; BSR set to: 0
  4143  005032  0012               	return		;funcret
  4144  005034                     __end_of___lomod:
  4145                           	callstack 0
  4146                           
  4147 ;; *************** function ___lodiv *****************
  4148 ;; Defined at:
  4149 ;;		line 9 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/lodiv.c"
  4150 ;; Parameters:    Size  Location     Type
  4151 ;;  dividend        8   20[COMRAM] unsigned long long 
  4152 ;;  divisor         8   28[COMRAM] unsigned long long 
  4153 ;; Auto vars:     Size  Location     Type
  4154 ;;  quotient        8   36[COMRAM] unsigned long long 
  4155 ;;  counter         1   44[COMRAM] unsigned char 
  4156 ;; Return value:  Size  Location     Type
  4157 ;;                  8   20[COMRAM] unsigned long long 
  4158 ;; Registers used:
  4159 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4160 ;; Tracked objects:
  4161 ;;		On entry : 3F/0
  4162 ;;		On exit  : 3F/0
  4163 ;;		Unchanged: 3F/0
  4164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4165 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4166 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4168 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4169 ;;Total ram usage:       25 bytes
  4170 ;; Hardware stack levels used: 1
  4171 ;; Hardware stack levels required when called: 4
  4172 ;; This function calls:
  4173 ;;		Nothing
  4174 ;; This function is called by:
  4175 ;;		_utoa
  4176 ;; This function uses a non-reentrant model
  4177 ;;
  4178                           
  4179                           	psect	text9
  4180  004A44                     __ptext9:
  4181                           	callstack 0
  4182  004A44                     ___lodiv:
  4183                           	callstack 20
  4184                           
  4185                           ; BSR set to: 0
  4186                           
  4187                           ; BSR set to: 0
  4188                           ;incstack = 0
  4189  004A44  EE20  F025         	lfsr	2,___lodiv@quotient
  4190  004A48  0E07               	movlw	7
  4191  004A4A                     u10751:
  4192  004A4A  6ADE               	clrf	postinc2,c
  4193  004A4C  06E8               	decf	wreg,f,c
  4194  004A4E  E2FD               	bc	u10751
  4195                           
  4196                           ; BSR set to: 0
  4197  004A50  501D               	movf	___lodiv@divisor^0,w,c
  4198  004A52  101E               	iorwf	(___lodiv@divisor+1)^0,w,c
  4199  004A54  101F               	iorwf	(___lodiv@divisor+2)^0,w,c
  4200  004A56  1020               	iorwf	(___lodiv@divisor+3)^0,w,c
  4201  004A58  1021               	iorwf	(___lodiv@divisor+4)^0,w,c
  4202  004A5A  1022               	iorwf	(___lodiv@divisor+5)^0,w,c
  4203  004A5C  1023               	iorwf	(___lodiv@divisor+6)^0,w,c
  4204  004A5E  1024               	iorwf	(___lodiv@divisor+7)^0,w,c
  4205  004A60  B4D8               	btfsc	status,2,c
  4206  004A62  D046               	goto	l1686
  4207                           
  4208                           ; BSR set to: 0
  4209  004A64  0E01               	movlw	1
  4210  004A66  6E2D               	movwf	___lodiv@counter^0,c
  4211  004A68  D00A               	goto	l9601
  4212  004A6A                     l9599:
  4213                           
  4214                           ; BSR set to: 0
  4215  004A6A  90D8               	bcf	status,0,c
  4216  004A6C  361D               	rlcf	___lodiv@divisor^0,f,c
  4217  004A6E  361E               	rlcf	(___lodiv@divisor+1)^0,f,c
  4218  004A70  361F               	rlcf	(___lodiv@divisor+2)^0,f,c
  4219  004A72  3620               	rlcf	(___lodiv@divisor+3)^0,f,c
  4220  004A74  3621               	rlcf	(___lodiv@divisor+4)^0,f,c
  4221  004A76  3622               	rlcf	(___lodiv@divisor+5)^0,f,c
  4222  004A78  3623               	rlcf	(___lodiv@divisor+6)^0,f,c
  4223  004A7A  3624               	rlcf	(___lodiv@divisor+7)^0,f,c
  4224  004A7C  2A2D               	incf	___lodiv@counter^0,f,c
  4225  004A7E                     l9601:
  4226                           
  4227                           ; BSR set to: 0
  4228  004A7E  AE24               	btfss	(___lodiv@divisor+7)^0,7,c
  4229  004A80  D7F4               	goto	l9599
  4230  004A82                     u10770:
  4231                           
  4232                           ; BSR set to: 0
  4233  004A82  90D8               	bcf	status,0,c
  4234  004A84  3625               	rlcf	___lodiv@quotient^0,f,c
  4235  004A86  3626               	rlcf	(___lodiv@quotient+1)^0,f,c
  4236  004A88  3627               	rlcf	(___lodiv@quotient+2)^0,f,c
  4237  004A8A  3628               	rlcf	(___lodiv@quotient+3)^0,f,c
  4238  004A8C  3629               	rlcf	(___lodiv@quotient+4)^0,f,c
  4239  004A8E  362A               	rlcf	(___lodiv@quotient+5)^0,f,c
  4240  004A90  362B               	rlcf	(___lodiv@quotient+6)^0,f,c
  4241  004A92  362C               	rlcf	(___lodiv@quotient+7)^0,f,c
  4242                           
  4243                           ; BSR set to: 0
  4244  004A94  501D               	movf	___lodiv@divisor^0,w,c
  4245  004A96  5C15               	subwf	___lodiv@dividend^0,w,c
  4246  004A98  501E               	movf	(___lodiv@divisor+1)^0,w,c
  4247  004A9A  5816               	subwfb	(___lodiv@dividend+1)^0,w,c
  4248  004A9C  501F               	movf	(___lodiv@divisor+2)^0,w,c
  4249  004A9E  5817               	subwfb	(___lodiv@dividend+2)^0,w,c
  4250  004AA0  5020               	movf	(___lodiv@divisor+3)^0,w,c
  4251  004AA2  5818               	subwfb	(___lodiv@dividend+3)^0,w,c
  4252  004AA4  5021               	movf	(___lodiv@divisor+4)^0,w,c
  4253  004AA6  5819               	subwfb	(___lodiv@dividend+4)^0,w,c
  4254  004AA8  5022               	movf	(___lodiv@divisor+5)^0,w,c
  4255  004AAA  581A               	subwfb	(___lodiv@dividend+5)^0,w,c
  4256  004AAC  5023               	movf	(___lodiv@divisor+6)^0,w,c
  4257  004AAE  581B               	subwfb	(___lodiv@dividend+6)^0,w,c
  4258  004AB0  5024               	movf	(___lodiv@divisor+7)^0,w,c
  4259  004AB2  581C               	subwfb	(___lodiv@dividend+7)^0,w,c
  4260  004AB4  A0D8               	btfss	status,0,c
  4261  004AB6  D011               	goto	l9611
  4262                           
  4263                           ; BSR set to: 0
  4264  004AB8  501D               	movf	___lodiv@divisor^0,w,c
  4265  004ABA  5E15               	subwf	___lodiv@dividend^0,f,c
  4266  004ABC  501E               	movf	(___lodiv@divisor+1)^0,w,c
  4267  004ABE  5A16               	subwfb	(___lodiv@dividend+1)^0,f,c
  4268  004AC0  501F               	movf	(___lodiv@divisor+2)^0,w,c
  4269  004AC2  5A17               	subwfb	(___lodiv@dividend+2)^0,f,c
  4270  004AC4  5020               	movf	(___lodiv@divisor+3)^0,w,c
  4271  004AC6  5A18               	subwfb	(___lodiv@dividend+3)^0,f,c
  4272  004AC8  5021               	movf	(___lodiv@divisor+4)^0,w,c
  4273  004ACA  5A19               	subwfb	(___lodiv@dividend+4)^0,f,c
  4274  004ACC  5022               	movf	(___lodiv@divisor+5)^0,w,c
  4275  004ACE  5A1A               	subwfb	(___lodiv@dividend+5)^0,f,c
  4276  004AD0  5023               	movf	(___lodiv@divisor+6)^0,w,c
  4277  004AD2  5A1B               	subwfb	(___lodiv@dividend+6)^0,f,c
  4278  004AD4  5024               	movf	(___lodiv@divisor+7)^0,w,c
  4279  004AD6  5A1C               	subwfb	(___lodiv@dividend+7)^0,f,c
  4280                           
  4281                           ; BSR set to: 0
  4282  004AD8  8025               	bsf	___lodiv@quotient^0,0,c
  4283  004ADA                     l9611:
  4284                           
  4285                           ; BSR set to: 0
  4286  004ADA  90D8               	bcf	status,0,c
  4287  004ADC  3224               	rrcf	(___lodiv@divisor+7)^0,f,c
  4288  004ADE  3223               	rrcf	(___lodiv@divisor+6)^0,f,c
  4289  004AE0  3222               	rrcf	(___lodiv@divisor+5)^0,f,c
  4290  004AE2  3221               	rrcf	(___lodiv@divisor+4)^0,f,c
  4291  004AE4  3220               	rrcf	(___lodiv@divisor+3)^0,f,c
  4292  004AE6  321F               	rrcf	(___lodiv@divisor+2)^0,f,c
  4293  004AE8  321E               	rrcf	(___lodiv@divisor+1)^0,f,c
  4294  004AEA  321D               	rrcf	___lodiv@divisor^0,f,c
  4295                           
  4296                           ; BSR set to: 0
  4297  004AEC  2E2D               	decfsz	___lodiv@counter^0,f,c
  4298  004AEE  D7C9               	goto	u10770
  4299  004AF0                     l1686:
  4300                           
  4301                           ; BSR set to: 0
  4302  004AF0  C025  F015         	movff	___lodiv@quotient,?___lodiv
  4303  004AF4  C026  F016         	movff	___lodiv@quotient+1,?___lodiv+1
  4304  004AF8  C027  F017         	movff	___lodiv@quotient+2,?___lodiv+2
  4305  004AFC  C028  F018         	movff	___lodiv@quotient+3,?___lodiv+3
  4306  004B00  C029  F019         	movff	___lodiv@quotient+4,?___lodiv+4
  4307  004B04  C02A  F01A         	movff	___lodiv@quotient+5,?___lodiv+5
  4308  004B08  C02B  F01B         	movff	___lodiv@quotient+6,?___lodiv+6
  4309  004B0C  C02C  F01C         	movff	___lodiv@quotient+7,?___lodiv+7
  4310                           
  4311                           ; BSR set to: 0
  4312  004B10  0012               	return		;funcret
  4313  004B12                     __end_of___lodiv:
  4314                           	callstack 0
  4315                           
  4316 ;; *************** function _stoa *****************
  4317 ;; Defined at:
  4318 ;;		line 568 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  4319 ;; Parameters:    Size  Location     Type
  4320 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  4321 ;;		 -> sprintf@f(11), NULL(0), 
  4322 ;;  s               2   33[COMRAM] PTR unsigned char 
  4323 ;;		 -> ?_printf(2), ?_sprintf(2), STR_2(9), STR_1(12), 
  4324 ;; Auto vars:     Size  Location     Type
  4325 ;;  nuls            7   36[COMRAM] unsigned char [7]
  4326 ;;  l               2   51[COMRAM] int 
  4327 ;;  p               2   49[COMRAM] int 
  4328 ;;  cp              2   47[COMRAM] PTR unsigned char 
  4329 ;;		 -> ?_printf(2), stoa@nuls(7), ?_sprintf(2), STR_2(9), 
  4330 ;;		 -> STR_1(12), 
  4331 ;;  w               2   45[COMRAM] int 
  4332 ;;  i               2   43[COMRAM] int 
  4333 ;; Return value:  Size  Location     Type
  4334 ;;                  2   31[COMRAM] int 
  4335 ;; Registers used:
  4336 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4337 ;; Tracked objects:
  4338 ;;		On entry : 3F/0
  4339 ;;		On exit  : 0/0
  4340 ;;		Unchanged: 0/0
  4341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4342 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4343 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4344 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4345 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4346 ;;Total ram usage:       22 bytes
  4347 ;; Hardware stack levels used: 1
  4348 ;; Hardware stack levels required when called: 7
  4349 ;; This function calls:
  4350 ;;		_fputc
  4351 ;;		_strlen
  4352 ;; This function is called by:
  4353 ;;		_vfpfcnvrt
  4354 ;; This function uses a non-reentrant model
  4355 ;;
  4356                           
  4357                           	psect	text10
  4358  0045BA                     __ptext10:
  4359                           	callstack 0
  4360  0045BA                     _stoa:
  4361                           	callstack 18
  4362                           
  4363                           ; BSR set to: 0
  4364                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 568: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 569: {;/opt/microch
      +                          ip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 570:     char *cp, nuls[] = "(null)";
  4365                           
  4366                           ; BSR set to: 0
  4367                           ;incstack = 0
  4368  0045BA  EE20  F1E8         	lfsr	2,stoa@F1164
  4369  0045BE  EE10  F025         	lfsr	1,stoa@nuls
  4370  0045C2  0E06               	movlw	6
  4371  0045C4                     u11681:
  4372  0045C4  006F FF6F FFE3     	movff	plusw2,plusw1
  4373  0045CA  06E8               	decf	wreg,f,c
  4374  0045CC  E2FB               	bc	u11681
  4375                           
  4376                           ; BSR set to: 0
  4377                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 571:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 574:     cp = s;
  4378  0045CE  C022  F030         	movff	stoa@s,stoa@cp
  4379  0045D2  C023  F031         	movff	stoa@s+1,stoa@cp+1
  4380                           
  4381                           ; BSR set to: 0
  4382                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 575:     if (!cp) {
  4383  0045D6  5030               	movf	stoa@cp^0,w,c
  4384  0045D8  1031               	iorwf	(stoa@cp+1)^0,w,c
  4385  0045DA  A4D8               	btfss	status,2,c
  4386  0045DC  D003               	goto	l10067
  4387                           
  4388                           ; BSR set to: 0
  4389                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 576:         cp = nuls;
  4390  0045DE  0E25               	movlw	low stoa@nuls
  4391  0045E0  6E30               	movwf	stoa@cp^0,c
  4392  0045E2  6A31               	clrf	(stoa@cp+1)^0,c
  4393  0045E4                     l10067:
  4394                           
  4395                           ; BSR set to: 0
  4396                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 580:     l = (int)strlen(cp);
  4397  0045E4  C030  F015         	movff	stoa@cp,strlen@s
  4398  0045E8  C031  F016         	movff	stoa@cp+1,strlen@s+1
  4399  0045EC  EC3F  F02B         	call	_strlen	;wreg free
  4400  0045F0  C015  F034         	movff	?_strlen,stoa@l
  4401  0045F4  C016  F035         	movff	?_strlen+1,stoa@l+1
  4402                           
  4403                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 581:     p = prec;
  4404  0045F8  C0F9  F032         	movff	_prec,stoa@p
  4405  0045FC  C0FA  F033         	movff	_prec+1,stoa@p+1
  4406                           
  4407                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 582:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  4408  004600  BE33               	btfsc	(stoa@p+1)^0,7,c
  4409  004602  D00E               	goto	l2078
  4410  004604  5034               	movf	stoa@l^0,w,c
  4411  004606  5C32               	subwf	stoa@p^0,w,c
  4412  004608  5033               	movf	(stoa@p+1)^0,w,c
  4413  00460A  0A80               	xorlw	128
  4414  00460C  6E24               	movwf	??_stoa^0,c
  4415  00460E  5035               	movf	(stoa@l+1)^0,w,c
  4416  004610  0A80               	xorlw	128
  4417  004612  5824               	subwfb	??_stoa^0,w,c
  4418  004614  B0D8               	btfsc	status,0,c
  4419  004616  D004               	goto	l2078
  4420  004618  C032  F034         	movff	stoa@p,stoa@l
  4421  00461C  C033  F035         	movff	stoa@p+1,stoa@l+1
  4422  004620                     l2078:
  4423                           
  4424                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 583:     p = l;
  4425  004620  C034  F032         	movff	stoa@l,stoa@p
  4426  004624  C035  F033         	movff	stoa@l+1,stoa@p+1
  4427                           
  4428                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 584:     w = width;
  4429  004628  C0F7  F02E         	movff	_width,stoa@w
  4430  00462C  C0F8  F02F         	movff	_width+1,stoa@w+1
  4431                           
  4432                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 587:     if (!(flags & (1 << 
      +                          0))) {
  4433  004630  A03D               	btfss	_flags^0,0,c
  4434  004632  D00D               	goto	l10081
  4435  004634  D016               	goto	u11730
  4436  004636                     l10077:
  4437                           
  4438                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 589:             fputc(' ', f
      +                          p);
  4439  004636  0E00               	movlw	0
  4440  004638  6E18               	movwf	(fputc@c+1)^0,c
  4441  00463A  0E20               	movlw	32
  4442  00463C  6E17               	movwf	fputc@c^0,c
  4443  00463E  C020  F019         	movff	stoa@fp,fputc@fp
  4444  004642  C021  F01A         	movff	stoa@fp+1,fputc@fp+1
  4445  004646  EC0F  F027         	call	_fputc	;wreg free
  4446                           
  4447                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 590:             ++l;
  4448  00464A  4A34               	infsnz	stoa@l^0,f,c
  4449  00464C  2A35               	incf	(stoa@l+1)^0,f,c
  4450  00464E                     l10081:
  4451                           
  4452                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 588:         while (l < w) {
  4453  00464E  502E               	movf	stoa@w^0,w,c
  4454  004650  5C34               	subwf	stoa@l^0,w,c
  4455  004652  5035               	movf	(stoa@l+1)^0,w,c
  4456  004654  0A80               	xorlw	128
  4457  004656  6E24               	movwf	??_stoa^0,c
  4458  004658  502F               	movf	(stoa@w+1)^0,w,c
  4459  00465A  0A80               	xorlw	128
  4460  00465C  5824               	subwfb	??_stoa^0,w,c
  4461  00465E  A0D8               	btfss	status,0,c
  4462  004660  D7EA               	goto	l10077
  4463  004662                     u11730:
  4464                           
  4465                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 595:     i = 0;
  4466  004662  0E00               	movlw	0
  4467  004664  6E2D               	movwf	(stoa@i+1)^0,c
  4468  004666  0E00               	movlw	0
  4469  004668  6E2C               	movwf	stoa@i^0,c
  4470                           
  4471                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 596:     while (i < p) {
  4472  00466A  D023               	goto	l10091
  4473  00466C                     l10085:
  4474                           
  4475                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 597:         fputc(*cp, fp);
  4476  00466C  0060  F0C3  FFF6   	movff	stoa@cp,tblptrl
  4477  004672  0060  F0C7  FFF7   	movff	stoa@cp+1,tblptrh
  4478  004678  0E00               	movlw	low (__smallconst shr (0+16))
  4479  00467A  6EF8               	movwf	tblptru,c
  4480  00467C  0E1F               	movlw	(high __ramtop+-1)
  4481  00467E  64F7               	cpfsgt	tblptrh,c
  4482  004680  D003               	bra	u11747
  4483  004682  0008               	tblrd		*
  4484  004684  50F5               	movf	tablat,w,c
  4485  004686  D007               	bra	u11740
  4486  004688                     u11747:
  4487  004688  006F FFDB FFE1     	movff	tblptrl,fsr1l
  4488  00468E  006F FFDF FFE2     	movff	tblptrh,fsr1h
  4489  004694  50E7               	movf	indf1,w,c
  4490  004696                     u11740:
  4491  004696  6E24               	movwf	??_stoa^0,c
  4492  004698  5024               	movf	??_stoa^0,w,c
  4493  00469A  6E17               	movwf	fputc@c^0,c
  4494  00469C  6A18               	clrf	(fputc@c+1)^0,c
  4495  00469E  C020  F019         	movff	stoa@fp,fputc@fp
  4496  0046A2  C021  F01A         	movff	stoa@fp+1,fputc@fp+1
  4497  0046A6  EC0F  F027         	call	_fputc	;wreg free
  4498                           
  4499                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 598:         ++cp;
  4500  0046AA  4A30               	infsnz	stoa@cp^0,f,c
  4501  0046AC  2A31               	incf	(stoa@cp+1)^0,f,c
  4502                           
  4503                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 599:         ++i;
  4504  0046AE  4A2C               	infsnz	stoa@i^0,f,c
  4505  0046B0  2A2D               	incf	(stoa@i+1)^0,f,c
  4506  0046B2                     l10091:
  4507                           
  4508                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 596:     while (i < p) {
  4509  0046B2  5032               	movf	stoa@p^0,w,c
  4510  0046B4  5C2C               	subwf	stoa@i^0,w,c
  4511  0046B6  502D               	movf	(stoa@i+1)^0,w,c
  4512  0046B8  0A80               	xorlw	128
  4513  0046BA  6E24               	movwf	??_stoa^0,c
  4514  0046BC  5033               	movf	(stoa@p+1)^0,w,c
  4515  0046BE  0A80               	xorlw	128
  4516  0046C0  5824               	subwfb	??_stoa^0,w,c
  4517  0046C2  A0D8               	btfss	status,0,c
  4518  0046C4  D7D3               	goto	l10085
  4519                           
  4520                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 603:     if (flags & (1 << 0)
      +                          ) {
  4521  0046C6  B03D               	btfsc	_flags^0,0,c
  4522  0046C8  D00D               	goto	l10099
  4523  0046CA  D016               	goto	u11770
  4524  0046CC                     l10095:
  4525                           
  4526                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 605:             fputc(' ', f
      +                          p);
  4527  0046CC  0E00               	movlw	0
  4528  0046CE  6E18               	movwf	(fputc@c+1)^0,c
  4529  0046D0  0E20               	movlw	32
  4530  0046D2  6E17               	movwf	fputc@c^0,c
  4531  0046D4  C020  F019         	movff	stoa@fp,fputc@fp
  4532  0046D8  C021  F01A         	movff	stoa@fp+1,fputc@fp+1
  4533  0046DC  EC0F  F027         	call	_fputc	;wreg free
  4534                           
  4535                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 606:             ++l;
  4536  0046E0  4A34               	infsnz	stoa@l^0,f,c
  4537  0046E2  2A35               	incf	(stoa@l+1)^0,f,c
  4538  0046E4                     l10099:
  4539                           
  4540                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 604:         while (l < w) {
  4541  0046E4  502E               	movf	stoa@w^0,w,c
  4542  0046E6  5C34               	subwf	stoa@l^0,w,c
  4543  0046E8  5035               	movf	(stoa@l+1)^0,w,c
  4544  0046EA  0A80               	xorlw	128
  4545  0046EC  6E24               	movwf	??_stoa^0,c
  4546  0046EE  502F               	movf	(stoa@w+1)^0,w,c
  4547  0046F0  0A80               	xorlw	128
  4548  0046F2  5824               	subwfb	??_stoa^0,w,c
  4549  0046F4  A0D8               	btfss	status,0,c
  4550  0046F6  D7EA               	goto	l10095
  4551  0046F8                     u11770:
  4552                           
  4553                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 610:     return l;
  4554                           
  4555                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 608:     }
  4556  0046F8  C034  F020         	movff	stoa@l,?_stoa
  4557  0046FC  C035  F021         	movff	stoa@l+1,?_stoa+1
  4558  004700  0012               	return		;funcret
  4559  004702                     __end_of_stoa:
  4560                           	callstack 0
  4561                           
  4562 ;; *************** function _efgtoa *****************
  4563 ;; Defined at:
  4564 ;;		line 332 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  4565 ;; Parameters:    Size  Location     Type
  4566 ;;  fp              2   17[BANK0 ] PTR struct _IO_FILE
  4567 ;;		 -> sprintf@f(11), NULL(0), 
  4568 ;;  f               4   19[BANK0 ] PTR struct _IO_FILE
  4569 ;;  c               1   23[BANK0 ] unsigned char 
  4570 ;; Auto vars:     Size  Location     Type
  4571 ;;  u               4   75[BANK0 ] unsigned char 
  4572 ;;  g               4   65[BANK0 ] unsigned char 
  4573 ;;  l               4   61[BANK0 ] unsigned char 
  4574 ;;  h               4   57[BANK0 ] unsigned char 
  4575 ;;  ou              4   43[BANK0 ] unsigned char 
  4576 ;;  n               2   73[BANK0 ] int 
  4577 ;;  e               2   71[BANK0 ] int 
  4578 ;;  i               2   69[BANK0 ] int 
  4579 ;;  w               2   54[BANK0 ] int 
  4580 ;;  p               2   51[BANK0 ] int 
  4581 ;;  sign            2   49[BANK0 ] int 
  4582 ;;  d               2   47[BANK0 ] int 
  4583 ;;  m               2   41[BANK0 ] int 
  4584 ;;  ne              2   39[BANK0 ] int 
  4585 ;;  pp              2   37[BANK0 ] int 
  4586 ;;  t               2   35[BANK0 ] int 
  4587 ;;  mode            1   56[BANK0 ] unsigned char 
  4588 ;;  nmode           1   53[BANK0 ] unsigned char 
  4589 ;; Return value:  Size  Location     Type
  4590 ;;                  2   17[BANK0 ] int 
  4591 ;; Registers used:
  4592 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4593 ;; Tracked objects:
  4594 ;;		On entry : 3F/0
  4595 ;;		On exit  : 0/0
  4596 ;;		Unchanged: 0/0
  4597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4598 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4599 ;;      Locals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4600 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4601 ;;      Totals:         0      62       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4602 ;;Total ram usage:       62 bytes
  4603 ;; Hardware stack levels used: 1
  4604 ;; Hardware stack levels required when called: 9
  4605 ;; This function calls:
  4606 ;;		___awdiv
  4607 ;;		___awmod
  4608 ;;		___fladd
  4609 ;;		___fldiv
  4610 ;;		___fleq
  4611 ;;		___flge
  4612 ;;		___flmul
  4613 ;;		___flneg
  4614 ;;		___flsub
  4615 ;;		___fltol
  4616 ;;		___fpclassifyf
  4617 ;;		_floorf
  4618 ;;		_isupper
  4619 ;;		_pad
  4620 ;;		_strcpy
  4621 ;;		_tolower
  4622 ;; This function is called by:
  4623 ;;		_vfpfcnvrt
  4624 ;; This function uses a non-reentrant model
  4625 ;;
  4626                           
  4627                           	psect	text11
  4628  002100                     __ptext11:
  4629                           	callstack 0
  4630  002100                     _efgtoa:
  4631                           	callstack 16
  4632                           
  4633                           ; BSR set to: 0
  4634                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 332: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 333
      +                          : {;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 334:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 335:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 336:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 3
      +                          39:     sign = 0;
  4635                           
  4636                           ;incstack = 0
  4637  002100  0E00               	movlw	0
  4638  002102  6F92               	movwf	(efgtoa@sign+1)& (0+255),b
  4639  002104  0E00               	movlw	0
  4640  002106  6F91               	movwf	efgtoa@sign& (0+255),b
  4641                           
  4642                           ; BSR set to: 0
  4643                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 340:     g = f;
  4644  002108  C073  F0A1         	movff	efgtoa@f,efgtoa@g
  4645  00210C  C074  F0A2         	movff	efgtoa@f+1,efgtoa@g+1
  4646  002110  C075  F0A3         	movff	efgtoa@f+2,efgtoa@g+2
  4647  002114  C076  F0A4         	movff	efgtoa@f+3,efgtoa@g+3
  4648                           
  4649                           ; BSR set to: 0
  4650                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 341:     if (g < 0.0) {
  4651  002118  AFA4               	btfss	(efgtoa@g+3)& (0+255),7,b
  4652  00211A  D016               	goto	l9763
  4653                           
  4654                           ; BSR set to: 0
  4655                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 342:         sign = 1;
  4656  00211C  0E00               	movlw	0
  4657  00211E  6F92               	movwf	(efgtoa@sign+1)& (0+255),b
  4658  002120  0E01               	movlw	1
  4659  002122  6F91               	movwf	efgtoa@sign& (0+255),b
  4660                           
  4661                           ; BSR set to: 0
  4662                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 343:         g = -g;
  4663  002124  C0A1  F015         	movff	efgtoa@g,___flneg@f1
  4664  002128  C0A2  F016         	movff	efgtoa@g+1,___flneg@f1+1
  4665  00212C  C0A3  F017         	movff	efgtoa@g+2,___flneg@f1+2
  4666  002130  C0A4  F018         	movff	efgtoa@g+3,___flneg@f1+3
  4667  002134  EC7C  F02D         	call	___flneg	;wreg free
  4668  002138  C015  F0A1         	movff	?___flneg,efgtoa@g
  4669  00213C  C016  F0A2         	movff	?___flneg+1,efgtoa@g+1
  4670  002140  C017  F0A3         	movff	?___flneg+2,efgtoa@g+2
  4671  002144  C018  F0A4         	movff	?___flneg+3,efgtoa@g+3
  4672  002148                     l9763:
  4673                           
  4674                           ; BSR set to: 0
  4675                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 347:     n = 0;
  4676  002148  0E00               	movlw	0
  4677  00214A  6FAA               	movwf	(efgtoa@n+1)& (0+255),b
  4678  00214C  0E00               	movlw	0
  4679  00214E  6FA9               	movwf	efgtoa@n& (0+255),b
  4680                           
  4681                           ; BSR set to: 0
  4682                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 348:     w = width;
  4683  002150  C0F7  F096         	movff	_width,efgtoa@w
  4684  002154  C0F8  F097         	movff	_width+1,efgtoa@w+1
  4685                           
  4686                           ; BSR set to: 0
  4687                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 349:     if (sign || (flags &
      +                           (1 << 2))) {
  4688  002158  5191               	movf	efgtoa@sign& (0+255),w,b
  4689  00215A  1192               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4690  00215C  A4D8               	btfss	status,2,c
  4691  00215E  D002               	goto	u11220
  4692                           
  4693                           ; BSR set to: 0
  4694  002160  A43D               	btfss	_flags^0,2,c
  4695  002162  D013               	goto	l9783
  4696  002164                     u11220:
  4697                           
  4698                           ; BSR set to: 0
  4699                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 350:         dbuf[n] = sign ?
      +                           '-' : '+';
  4700  002164  5191               	movf	efgtoa@sign& (0+255),w,b
  4701  002166  1192               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4702  002168  A4D8               	btfss	status,2,c
  4703  00216A  D004               	goto	l9775
  4704                           
  4705                           ; BSR set to: 0
  4706  00216C  0E00               	movlw	0
  4707  00216E  6F7E               	movwf	(_efgtoa$3076+1)& (0+255),b
  4708  002170  0E2B               	movlw	43
  4709  002172  D003               	goto	L3
  4710  002174                     l9775:
  4711                           
  4712                           ; BSR set to: 0
  4713  002174  0E00               	movlw	0
  4714  002176  6F7E               	movwf	(_efgtoa$3076+1)& (0+255),b
  4715  002178  0E2D               	movlw	45
  4716  00217A                     L3:
  4717  00217A  6F7D               	movwf	_efgtoa$3076& (0+255),b
  4718                           
  4719                           ; BSR set to: 0
  4720  00217C  C07D  F198         	movff	_efgtoa$3076,_dbuf
  4721                           
  4722                           ; BSR set to: 0
  4723                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 351:         ++n;
  4724  002180  4BA9               	infsnz	efgtoa@n& (0+255),f,b
  4725  002182  2BAA               	incf	(efgtoa@n+1)& (0+255),f,b
  4726                           
  4727                           ; BSR set to: 0
  4728                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 352:         --w;
  4729  002184  0796               	decf	efgtoa@w& (0+255),f,b
  4730  002186  A0D8               	btfss	status,0,c
  4731  002188  0797               	decf	(efgtoa@w+1)& (0+255),f,b
  4732  00218A                     l9783:
  4733                           
  4734                           ; BSR set to: 0
  4735                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 356:     if (( __fpclassifyf(
      +                          g) == 1 )) {
  4736  00218A  C0A1  F015         	movff	efgtoa@g,___fpclassifyf@x
  4737  00218E  C0A2  F016         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4738  002192  C0A3  F017         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4739  002196  C0A4  F018         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4740  00219A  ECF0  F025         	call	___fpclassifyf	;wreg free
  4741  00219E  0415               	decf	?___fpclassifyf^0,w,c
  4742  0021A0  1016               	iorwf	(?___fpclassifyf+1)^0,w,c
  4743  0021A2  A4D8               	btfss	status,2,c
  4744  0021A4  D047               	goto	l9801
  4745  0021A6  0EBF               	movlw	191
  4746  0021A8  0100               	movlb	0	; () banked
  4747  0021AA  6F78               	movwf	??_efgtoa& (0+255),b
  4748  0021AC  0EFF               	movlw	255
  4749  0021AE  6F79               	movwf	(??_efgtoa+1)& (0+255),b
  4750  0021B0  5177               	movf	efgtoa@c& (0+255),w,b
  4751  0021B2  6F7A               	movwf	(??_efgtoa+2)& (0+255),b
  4752  0021B4  6B7B               	clrf	(??_efgtoa+3)& (0+255),b
  4753  0021B6  5178               	movf	??_efgtoa& (0+255),w,b
  4754  0021B8  277A               	addwf	(??_efgtoa+2)& (0+255),f,b
  4755  0021BA  5179               	movf	(??_efgtoa+1)& (0+255),w,b
  4756  0021BC  237B               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4757  0021BE  517B               	movf	(??_efgtoa+3)& (0+255),w,b
  4758  0021C0  E113               	bnz	l9793
  4759  0021C2  0E1A               	movlw	26
  4760  0021C4  5D7A               	subwf	(??_efgtoa+2)& (0+255),w,b
  4761  0021C6  B0D8               	btfsc	status,0,c
  4762  0021C8  D00F               	goto	l9793
  4763                           
  4764                           ; BSR set to: 0
  4765                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 358:             strcpy(&dbuf
      +                          [n], "INF");
  4766  0021CA  0E98               	movlw	low _dbuf
  4767  0021CC  25A9               	addwf	efgtoa@n& (0+255),w,b
  4768  0021CE  6E15               	movwf	strcpy@dest^0,c
  4769  0021D0  0E01               	movlw	high _dbuf
  4770  0021D2  21AA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4771  0021D4  6E16               	movwf	(strcpy@dest+1)^0,c
  4772  0021D6  0EDE               	movlw	low STR_12
  4773  0021D8  6E17               	movwf	strcpy@src^0,c
  4774  0021DA  5017               	movf	strcpy@src^0,w,c
  4775  0021DC  A4D8               	btfss	status,2,c
  4776  0021DE  0E20               	movlw	high __smallconst
  4777  0021E0  6E18               	movwf	(strcpy@src+1)^0,c
  4778  0021E2  EC6E  F02A         	call	_strcpy	;wreg free
  4779                           
  4780                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 359:         } else {
  4781  0021E6  D00E               	goto	l9795
  4782  0021E8                     l9793:
  4783                           
  4784                           ; BSR set to: 0
  4785                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 360:             strcpy(&dbuf
      +                          [n], "inf");
  4786  0021E8  0E98               	movlw	low _dbuf
  4787  0021EA  25A9               	addwf	efgtoa@n& (0+255),w,b
  4788  0021EC  6E15               	movwf	strcpy@dest^0,c
  4789  0021EE  0E01               	movlw	high _dbuf
  4790  0021F0  21AA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4791  0021F2  6E16               	movwf	(strcpy@dest+1)^0,c
  4792  0021F4  0EE6               	movlw	low STR_13
  4793  0021F6  6E17               	movwf	strcpy@src^0,c
  4794  0021F8  5017               	movf	strcpy@src^0,w,c
  4795  0021FA  A4D8               	btfss	status,2,c
  4796  0021FC  0E20               	movlw	high __smallconst
  4797  0021FE  6E18               	movwf	(strcpy@src+1)^0,c
  4798  002200  EC6E  F02A         	call	_strcpy	;wreg free
  4799  002204                     l9795:
  4800                           
  4801                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 362:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
  4802  002204  0100               	movlb	0	; () banked
  4803  002206  0EFD               	movlw	253
  4804  002208  2796               	addwf	efgtoa@w& (0+255),f,b
  4805  00220A  0EFF               	movlw	255
  4806  00220C  2397               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4807  00220E                     l9797:
  4808                           
  4809                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 363:         return pad(fp, &
      +                          dbuf[0], w);
  4810  00220E  C071  F029         	movff	efgtoa@fp,pad@fp
  4811  002212  C072  F02A         	movff	efgtoa@fp+1,pad@fp+1
  4812  002216  0E98               	movlw	low _dbuf
  4813  002218  6E2B               	movwf	pad@buf^0,c
  4814  00221A  0E01               	movlw	high _dbuf
  4815  00221C  6E2C               	movwf	(pad@buf+1)^0,c
  4816  00221E  C096  F02D         	movff	efgtoa@w,pad@p
  4817  002222  C097  F02E         	movff	efgtoa@w+1,pad@p+1
  4818  002226  EC6B  F028         	call	_pad	;wreg free
  4819  00222A  C029  F071         	movff	?_pad,?_efgtoa
  4820  00222E  C02A  F072         	movff	?_pad+1,?_efgtoa+1
  4821  002232  0012               	return	
  4822  002234                     l9801:
  4823                           
  4824                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 365:     if (( __fpclassifyf(
      +                          g) == 0 )) {
  4825  002234  C0A1  F015         	movff	efgtoa@g,___fpclassifyf@x
  4826  002238  C0A2  F016         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4827  00223C  C0A3  F017         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4828  002240  C0A4  F018         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4829  002244  ECF0  F025         	call	___fpclassifyf	;wreg free
  4830  002248  5015               	movf	?___fpclassifyf^0,w,c
  4831  00224A  1016               	iorwf	(?___fpclassifyf+1)^0,w,c
  4832  00224C  A4D8               	btfss	status,2,c
  4833  00224E  D030               	goto	l9819
  4834  002250  0EBF               	movlw	191
  4835  002252  0100               	movlb	0	; () banked
  4836  002254  6F78               	movwf	??_efgtoa& (0+255),b
  4837  002256  0EFF               	movlw	255
  4838  002258  6F79               	movwf	(??_efgtoa+1)& (0+255),b
  4839  00225A  5177               	movf	efgtoa@c& (0+255),w,b
  4840  00225C  6F7A               	movwf	(??_efgtoa+2)& (0+255),b
  4841  00225E  6B7B               	clrf	(??_efgtoa+3)& (0+255),b
  4842  002260  5178               	movf	??_efgtoa& (0+255),w,b
  4843  002262  277A               	addwf	(??_efgtoa+2)& (0+255),f,b
  4844  002264  5179               	movf	(??_efgtoa+1)& (0+255),w,b
  4845  002266  237B               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4846  002268  517B               	movf	(??_efgtoa+3)& (0+255),w,b
  4847  00226A  E113               	bnz	l9811
  4848  00226C  0E1A               	movlw	26
  4849  00226E  5D7A               	subwf	(??_efgtoa+2)& (0+255),w,b
  4850  002270  B0D8               	btfsc	status,0,c
  4851  002272  D00F               	goto	l9811
  4852                           
  4853                           ; BSR set to: 0
  4854                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 367:             strcpy(&dbuf
      +                          [n], "NAN");
  4855  002274  0E98               	movlw	low _dbuf
  4856  002276  25A9               	addwf	efgtoa@n& (0+255),w,b
  4857  002278  6E15               	movwf	strcpy@dest^0,c
  4858  00227A  0E01               	movlw	high _dbuf
  4859  00227C  21AA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4860  00227E  6E16               	movwf	(strcpy@dest+1)^0,c
  4861  002280  0EE2               	movlw	low STR_16
  4862  002282  6E17               	movwf	strcpy@src^0,c
  4863  002284  5017               	movf	strcpy@src^0,w,c
  4864  002286  A4D8               	btfss	status,2,c
  4865  002288  0E20               	movlw	high __smallconst
  4866  00228A  6E18               	movwf	(strcpy@src+1)^0,c
  4867  00228C  EC6E  F02A         	call	_strcpy	;wreg free
  4868                           
  4869                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 368:         } else {
  4870  002290  D7B9               	goto	l9795
  4871  002292                     l9811:
  4872                           
  4873                           ; BSR set to: 0
  4874                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 369:             strcpy(&dbuf
      +                          [n], "nan");
  4875  002292  0E98               	movlw	low _dbuf
  4876  002294  25A9               	addwf	efgtoa@n& (0+255),w,b
  4877  002296  6E15               	movwf	strcpy@dest^0,c
  4878  002298  0E01               	movlw	high _dbuf
  4879  00229A  21AA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4880  00229C  6E16               	movwf	(strcpy@dest+1)^0,c
  4881  00229E  0EEA               	movlw	low STR_17
  4882  0022A0  6E17               	movwf	strcpy@src^0,c
  4883  0022A2  5017               	movf	strcpy@src^0,w,c
  4884  0022A4  A4D8               	btfss	status,2,c
  4885  0022A6  0E20               	movlw	high __smallconst
  4886  0022A8  6E18               	movwf	(strcpy@src+1)^0,c
  4887  0022AA  EC6E  F02A         	call	_strcpy	;wreg free
  4888  0022AE  D7AA               	goto	l9795
  4889  0022B0                     l9819:
  4890                           
  4891                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 376:     u = 1.0;
  4892  0022B0  0E00               	movlw	0
  4893  0022B2  0100               	movlb	0	; () banked
  4894  0022B4  6FAB               	movwf	efgtoa@u& (0+255),b
  4895  0022B6  0E00               	movlw	0
  4896  0022B8  6FAC               	movwf	(efgtoa@u+1)& (0+255),b
  4897  0022BA  0E80               	movlw	128
  4898  0022BC  6FAD               	movwf	(efgtoa@u+2)& (0+255),b
  4899  0022BE  0E3F               	movlw	63
  4900  0022C0  6FAE               	movwf	(efgtoa@u+3)& (0+255),b
  4901                           
  4902                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 377:     e = 0;
  4903  0022C2  0E00               	movlw	0
  4904  0022C4  6FA8               	movwf	(efgtoa@e+1)& (0+255),b
  4905  0022C6  0E00               	movlw	0
  4906  0022C8  6FA7               	movwf	efgtoa@e& (0+255),b
  4907                           
  4908                           ; BSR set to: 0
  4909                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 378:     if (!(g == 0.0)) {
  4910  0022CA  C0A1  F015         	movff	efgtoa@g,___fleq@ff1
  4911  0022CE  C0A2  F016         	movff	efgtoa@g+1,___fleq@ff1+1
  4912  0022D2  C0A3  F017         	movff	efgtoa@g+2,___fleq@ff1+2
  4913  0022D6  C0A4  F018         	movff	efgtoa@g+3,___fleq@ff1+3
  4914  0022DA  0E00               	movlw	0
  4915  0022DC  6E19               	movwf	___fleq@ff2^0,c
  4916  0022DE  0E00               	movlw	0
  4917  0022E0  6E1A               	movwf	(___fleq@ff2+1)^0,c
  4918  0022E2  0E00               	movlw	0
  4919  0022E4  6E1B               	movwf	(___fleq@ff2+2)^0,c
  4920  0022E6  0E00               	movlw	0
  4921  0022E8  6E1C               	movwf	(___fleq@ff2+3)^0,c
  4922  0022EA  EC00  F029         	call	___fleq	;wreg free
  4923  0022EE  A0D8               	btfss	status,0,c
  4924  0022F0  D01D               	goto	l9829
  4925  0022F2  D074               	goto	u11300
  4926  0022F4                     l9825:
  4927                           
  4928                           ; BSR set to: 0
  4929                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 380:             u = u*10.0;
  4930  0022F4  C0AB  F023         	movff	efgtoa@u,___flmul@b
  4931  0022F8  C0AC  F024         	movff	efgtoa@u+1,___flmul@b+1
  4932  0022FC  C0AD  F025         	movff	efgtoa@u+2,___flmul@b+2
  4933  002300  C0AE  F026         	movff	efgtoa@u+3,___flmul@b+3
  4934  002304  0E00               	movlw	0
  4935  002306  6E27               	movwf	___flmul@a^0,c
  4936  002308  0E00               	movlw	0
  4937  00230A  6E28               	movwf	(___flmul@a+1)^0,c
  4938  00230C  0E20               	movlw	32
  4939  00230E  6E29               	movwf	(___flmul@a+2)^0,c
  4940  002310  0E41               	movlw	65
  4941  002312  6E2A               	movwf	(___flmul@a+3)^0,c
  4942  002314  ECA2  F018         	call	___flmul	;wreg free
  4943  002318  C023  F0AB         	movff	?___flmul,efgtoa@u
  4944  00231C  C024  F0AC         	movff	?___flmul+1,efgtoa@u+1
  4945  002320  C025  F0AD         	movff	?___flmul+2,efgtoa@u+2
  4946  002324  C026  F0AE         	movff	?___flmul+3,efgtoa@u+3
  4947                           
  4948                           ; BSR set to: 0
  4949                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 381:             ++e;
  4950  002328  4BA7               	infsnz	efgtoa@e& (0+255),f,b
  4951  00232A  2BA8               	incf	(efgtoa@e+1)& (0+255),f,b
  4952  00232C                     l9829:
  4953                           
  4954                           ; BSR set to: 0
  4955                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 379:         while (!(g < (u*
      +                          10.0))) {
  4956  00232C  C0A1  F02F         	movff	efgtoa@g,___flge@ff1
  4957  002330  C0A2  F030         	movff	efgtoa@g+1,___flge@ff1+1
  4958  002334  C0A3  F031         	movff	efgtoa@g+2,___flge@ff1+2
  4959  002338  C0A4  F032         	movff	efgtoa@g+3,___flge@ff1+3
  4960  00233C  0E00               	movlw	0
  4961  00233E  6E27               	movwf	___flmul@a^0,c
  4962  002340  0E00               	movlw	0
  4963  002342  6E28               	movwf	(___flmul@a+1)^0,c
  4964  002344  0E20               	movlw	32
  4965  002346  6E29               	movwf	(___flmul@a+2)^0,c
  4966  002348  0E41               	movlw	65
  4967  00234A  6E2A               	movwf	(___flmul@a+3)^0,c
  4968  00234C  C0AB  F023         	movff	efgtoa@u,___flmul@b
  4969  002350  C0AC  F024         	movff	efgtoa@u+1,___flmul@b+1
  4970  002354  C0AD  F025         	movff	efgtoa@u+2,___flmul@b+2
  4971  002358  C0AE  F026         	movff	efgtoa@u+3,___flmul@b+3
  4972  00235C  ECA2  F018         	call	___flmul	;wreg free
  4973  002360  C023  F033         	movff	?___flmul,___flge@ff2
  4974  002364  C024  F034         	movff	?___flmul+1,___flge@ff2+1
  4975  002368  C025  F035         	movff	?___flmul+2,___flge@ff2+2
  4976  00236C  C026  F036         	movff	?___flmul+3,___flge@ff2+3
  4977  002370  ECBA  F024         	call	___flge	;wreg free
  4978  002374  A0D8               	btfss	status,0,c
  4979  002376  D01E               	goto	l9835
  4980  002378  D7BD               	goto	l9825
  4981  00237A                     l9831:
  4982                           
  4983                           ; BSR set to: 0
  4984                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 384:             u = u/10.0;
  4985  00237A  C0AB  F015         	movff	efgtoa@u,___fldiv@b
  4986  00237E  C0AC  F016         	movff	efgtoa@u+1,___fldiv@b+1
  4987  002382  C0AD  F017         	movff	efgtoa@u+2,___fldiv@b+2
  4988  002386  C0AE  F018         	movff	efgtoa@u+3,___fldiv@b+3
  4989  00238A  0E00               	movlw	0
  4990  00238C  6E19               	movwf	___fldiv@a^0,c
  4991  00238E  0E00               	movlw	0
  4992  002390  6E1A               	movwf	(___fldiv@a+1)^0,c
  4993  002392  0E20               	movlw	32
  4994  002394  6E1B               	movwf	(___fldiv@a+2)^0,c
  4995  002396  0E41               	movlw	65
  4996  002398  6E1C               	movwf	(___fldiv@a+3)^0,c
  4997  00239A  ECD1  F01B         	call	___fldiv	;wreg free
  4998  00239E  C015  F0AB         	movff	?___fldiv,efgtoa@u
  4999  0023A2  C016  F0AC         	movff	?___fldiv+1,efgtoa@u+1
  5000  0023A6  C017  F0AD         	movff	?___fldiv+2,efgtoa@u+2
  5001  0023AA  C018  F0AE         	movff	?___fldiv+3,efgtoa@u+3
  5002                           
  5003                           ; BSR set to: 0
  5004                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 385:             --e;
  5005  0023AE  07A7               	decf	efgtoa@e& (0+255),f,b
  5006  0023B0  A0D8               	btfss	status,0,c
  5007  0023B2  07A8               	decf	(efgtoa@e+1)& (0+255),f,b
  5008  0023B4                     l9835:
  5009                           
  5010                           ; BSR set to: 0
  5011                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 383:         while (g < u) {
  5012  0023B4  C0A1  F02F         	movff	efgtoa@g,___flge@ff1
  5013  0023B8  C0A2  F030         	movff	efgtoa@g+1,___flge@ff1+1
  5014  0023BC  C0A3  F031         	movff	efgtoa@g+2,___flge@ff1+2
  5015  0023C0  C0A4  F032         	movff	efgtoa@g+3,___flge@ff1+3
  5016  0023C4  C0AB  F033         	movff	efgtoa@u,___flge@ff2
  5017  0023C8  C0AC  F034         	movff	efgtoa@u+1,___flge@ff2+1
  5018  0023CC  C0AD  F035         	movff	efgtoa@u+2,___flge@ff2+2
  5019  0023D0  C0AE  F036         	movff	efgtoa@u+3,___flge@ff2+3
  5020  0023D4  ECBA  F024         	call	___flge	;wreg free
  5021  0023D8  A0D8               	btfss	status,0,c
  5022  0023DA  D7CF               	goto	l9831
  5023  0023DC                     u11300:
  5024                           
  5025                           ; BSR set to: 0
  5026                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 390:     mode = (char)tolower
      +                          ((int)c);
  5027  0023DC  C077  F01B         	movff	efgtoa@c,tolower@c
  5028  0023E0  6A1C               	clrf	(tolower@c+1)^0,c
  5029  0023E2  EC8B  F02C         	call	_tolower	;wreg free
  5030  0023E6  501B               	movf	?_tolower^0,w,c
  5031  0023E8  6F98               	movwf	efgtoa@mode& (0+255),b
  5032                           
  5033                           ; BSR set to: 0
  5034                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 391:     nmode = mode;
  5035  0023EA  C098  F095         	movff	efgtoa@mode,efgtoa@nmode
  5036                           
  5037                           ; BSR set to: 0
  5038                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 392:     if (mode == 'g') {
  5039  0023EE  0E67               	movlw	103
  5040  0023F0  1998               	xorwf	efgtoa@mode& (0+255),w,b
  5041  0023F2  A4D8               	btfss	status,2,c
  5042  0023F4  D019               	goto	l9851
  5043                           
  5044                           ; BSR set to: 0
  5045                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 393:   if (prec == 0) {
  5046  0023F6  51F9               	movf	_prec& (0+255),w,b
  5047  0023F8  11FA               	iorwf	(_prec+1)& (0+255),w,b
  5048  0023FA  A4D8               	btfss	status,2,c
  5049  0023FC  D004               	goto	l9847
  5050                           
  5051                           ; BSR set to: 0
  5052                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 394:    prec = 1;
  5053  0023FE  0E00               	movlw	0
  5054  002400  6FFA               	movwf	(_prec+1)& (0+255),b
  5055  002402  0E01               	movlw	1
  5056  002404  6FF9               	movwf	_prec& (0+255),b
  5057  002406                     l9847:
  5058                           
  5059                           ; BSR set to: 0
  5060                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 396:         p = (0 < prec) ?
      +                           prec : 6;
  5061  002406  BFFA               	btfsc	(_prec+1)& (0+255),7,b
  5062  002408  D005               	goto	u11330
  5063  00240A  51FA               	movf	(_prec+1)& (0+255),w,b
  5064  00240C  E108               	bnz	l2014
  5065  00240E  05F9               	decf	_prec& (0+255),w,b
  5066  002410  B0D8               	btfsc	status,0,c
  5067  002412  D005               	goto	l2014
  5068  002414                     u11330:
  5069                           
  5070                           ; BSR set to: 0
  5071  002414  0E00               	movlw	0
  5072  002416  6F94               	movwf	(efgtoa@p+1)& (0+255),b
  5073  002418  0E06               	movlw	6
  5074  00241A  6F93               	movwf	efgtoa@p& (0+255),b
  5075  00241C  D008               	goto	l9857
  5076  00241E                     l2014:
  5077                           
  5078                           ; BSR set to: 0
  5079  00241E  C0F9  F093         	movff	_prec,efgtoa@p
  5080  002422  C0FA  F094         	movff	_prec+1,efgtoa@p+1
  5081  002426  D003               	goto	l9857
  5082  002428                     l9851:
  5083                           
  5084                           ; BSR set to: 0
  5085                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 398:         p = (prec < 0) ?
      +                           6 : prec;
  5086  002428  AFFA               	btfss	(_prec+1)& (0+255),7,b
  5087  00242A  D7F9               	goto	l2014
  5088  00242C  D7F3               	goto	u11330
  5089  00242E                     l9857:
  5090                           
  5091                           ; BSR set to: 0
  5092                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 402:     if (mode == 'g') {
  5093  00242E  0E67               	movlw	103
  5094  002430  1998               	xorwf	efgtoa@mode& (0+255),w,b
  5095  002432  A4D8               	btfss	status,2,c
  5096  002434  D022               	goto	l9867
  5097                           
  5098                           ; BSR set to: 0
  5099                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 403:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
  5100  002436  AFA8               	btfss	(efgtoa@e+1)& (0+255),7,b
  5101  002438  D006               	goto	u11360
  5102  00243A  0EFC               	movlw	252
  5103  00243C  5DA7               	subwf	efgtoa@e& (0+255),w,b
  5104  00243E  0EFF               	movlw	255
  5105  002440  59A8               	subwfb	(efgtoa@e+1)& (0+255),w,b
  5106  002442  A0D8               	btfss	status,0,c
  5107  002444  D018               	goto	l9865
  5108  002446                     u11360:
  5109                           
  5110                           ; BSR set to: 0
  5111  002446  0EFF               	movlw	255
  5112  002448  6F78               	movwf	??_efgtoa& (0+255),b
  5113  00244A  0EFF               	movlw	255
  5114  00244C  6F79               	movwf	(??_efgtoa+1)& (0+255),b
  5115  00244E  C093  F07A         	movff	efgtoa@p,??_efgtoa+2
  5116  002452  C094  F07B         	movff	efgtoa@p+1,??_efgtoa+3
  5117  002456  5178               	movf	??_efgtoa& (0+255),w,b
  5118  002458  277A               	addwf	(??_efgtoa+2)& (0+255),f,b
  5119  00245A  5179               	movf	(??_efgtoa+1)& (0+255),w,b
  5120  00245C  237B               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5121  00245E  51A7               	movf	efgtoa@e& (0+255),w,b
  5122  002460  5D7A               	subwf	(??_efgtoa+2)& (0+255),w,b
  5123  002462  517B               	movf	(??_efgtoa+3)& (0+255),w,b
  5124  002464  0A80               	xorlw	128
  5125  002466  6F7C               	movwf	(??_efgtoa+4)& (0+255),b
  5126  002468  51A8               	movf	(efgtoa@e+1)& (0+255),w,b
  5127  00246A  0A80               	xorlw	128
  5128  00246C  597C               	subwfb	(??_efgtoa+4)& (0+255),w,b
  5129  00246E  A0D8               	btfss	status,0,c
  5130  002470  D002               	goto	l9865
  5131                           
  5132                           ; BSR set to: 0
  5133                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 404:             nmode = 'f';
  5134  002472  0E66               	movlw	102
  5135  002474  D001               	goto	L4
  5136  002476                     l9865:
  5137                           
  5138                           ; BSR set to: 0
  5139                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 406:             nmode = 'e';
  5140  002476  0E65               	movlw	101
  5141  002478                     L4:
  5142  002478  6F95               	movwf	efgtoa@nmode& (0+255),b
  5143  00247A                     l9867:
  5144                           
  5145                           ; BSR set to: 0
  5146                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 411:     m = p;
  5147  00247A  C093  F089         	movff	efgtoa@p,efgtoa@m
  5148  00247E  C094  F08A         	movff	efgtoa@p+1,efgtoa@m+1
  5149                           
  5150                           ; BSR set to: 0
  5151                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 412:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
  5152  002482  0E67               	movlw	103
  5153  002484  1998               	xorwf	efgtoa@mode& (0+255),w,b
  5154  002486  A4D8               	btfss	status,2,c
  5155  002488  D005               	goto	u11400
  5156                           
  5157                           ; BSR set to: 0
  5158  00248A  0E66               	movlw	102
  5159  00248C  1995               	xorwf	efgtoa@nmode& (0+255),w,b
  5160  00248E  B4D8               	btfsc	status,2,c
  5161                           
  5162                           ; BSR set to: 0
  5163  002490  AFA8               	btfss	(efgtoa@e+1)& (0+255),7,b
  5164  002492  D002               	goto	l9877
  5165  002494                     u11400:
  5166                           
  5167                           ; BSR set to: 0
  5168                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 413:         ++m;
  5169  002494  4B89               	infsnz	efgtoa@m& (0+255),f,b
  5170  002496  2B8A               	incf	(efgtoa@m+1)& (0+255),f,b
  5171  002498                     l9877:
  5172                           
  5173                           ; BSR set to: 0
  5174                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 417:     if (nmode == 'f') {
  5175  002498  0E66               	movlw	102
  5176  00249A  1995               	xorwf	efgtoa@nmode& (0+255),w,b
  5177  00249C  A4D8               	btfss	status,2,c
  5178  00249E  D016               	goto	l9887
  5179                           
  5180                           ; BSR set to: 0
  5181                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 418:         if (e < 0) {
  5182  0024A0  AFA8               	btfss	(efgtoa@e+1)& (0+255),7,b
  5183  0024A2  D00C               	goto	l9883
  5184                           
  5185                           ; BSR set to: 0
  5186                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 419:             u = 1.0;
  5187  0024A4  0E00               	movlw	0
  5188  0024A6  6FAB               	movwf	efgtoa@u& (0+255),b
  5189  0024A8  0E00               	movlw	0
  5190  0024AA  6FAC               	movwf	(efgtoa@u+1)& (0+255),b
  5191  0024AC  0E80               	movlw	128
  5192  0024AE  6FAD               	movwf	(efgtoa@u+2)& (0+255),b
  5193  0024B0  0E3F               	movlw	63
  5194  0024B2  6FAE               	movwf	(efgtoa@u+3)& (0+255),b
  5195                           
  5196                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 420:             e = 0;
  5197  0024B4  0E00               	movlw	0
  5198  0024B6  6FA8               	movwf	(efgtoa@e+1)& (0+255),b
  5199  0024B8  0E00               	movlw	0
  5200  0024BA  6FA7               	movwf	efgtoa@e& (0+255),b
  5201  0024BC                     l9883:
  5202                           
  5203                           ; BSR set to: 0
  5204                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 422:         if (!(mode == 'g
      +                          ')) {
  5205  0024BC  0E67               	movlw	103
  5206  0024BE  1998               	xorwf	efgtoa@mode& (0+255),w,b
  5207  0024C0  B4D8               	btfsc	status,2,c
  5208  0024C2  D004               	goto	l9887
  5209                           
  5210                           ; BSR set to: 0
  5211                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 423:             m += e;
  5212  0024C4  51A7               	movf	efgtoa@e& (0+255),w,b
  5213  0024C6  2789               	addwf	efgtoa@m& (0+255),f,b
  5214  0024C8  51A8               	movf	(efgtoa@e+1)& (0+255),w,b
  5215  0024CA  238A               	addwfc	(efgtoa@m+1)& (0+255),f,b
  5216  0024CC                     l9887:
  5217                           
  5218                           ; BSR set to: 0
  5219                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 428:     i = 0;
  5220  0024CC  0E00               	movlw	0
  5221  0024CE  6FA6               	movwf	(efgtoa@i+1)& (0+255),b
  5222  0024D0  0E00               	movlw	0
  5223  0024D2  6FA5               	movwf	efgtoa@i& (0+255),b
  5224                           
  5225                           ; BSR set to: 0
  5226                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 429:     h = g;
  5227  0024D4  C0A1  F099         	movff	efgtoa@g,efgtoa@h
  5228  0024D8  C0A2  F09A         	movff	efgtoa@g+1,efgtoa@h+1
  5229  0024DC  C0A3  F09B         	movff	efgtoa@g+2,efgtoa@h+2
  5230  0024E0  C0A4  F09C         	movff	efgtoa@g+3,efgtoa@h+3
  5231                           
  5232                           ; BSR set to: 0
  5233                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 430:     ou = u;
  5234  0024E4  C0AB  F08B         	movff	efgtoa@u,efgtoa@ou
  5235  0024E8  C0AC  F08C         	movff	efgtoa@u+1,efgtoa@ou+1
  5236  0024EC  C0AD  F08D         	movff	efgtoa@u+2,efgtoa@ou+2
  5237  0024F0  C0AE  F08E         	movff	efgtoa@u+3,efgtoa@ou+3
  5238                           
  5239                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 431:     while (i < m) {
  5240  0024F4  D07A               	goto	l9901
  5241  0024F6                     l9893:
  5242                           
  5243                           ; BSR set to: 0
  5244                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 432:         l = floorf(h/u);
  5245  0024F6  C099  F015         	movff	efgtoa@h,___fldiv@b
  5246  0024FA  C09A  F016         	movff	efgtoa@h+1,___fldiv@b+1
  5247  0024FE  C09B  F017         	movff	efgtoa@h+2,___fldiv@b+2
  5248  002502  C09C  F018         	movff	efgtoa@h+3,___fldiv@b+3
  5249  002506  C0AB  F019         	movff	efgtoa@u,___fldiv@a
  5250  00250A  C0AC  F01A         	movff	efgtoa@u+1,___fldiv@a+1
  5251  00250E  C0AD  F01B         	movff	efgtoa@u+2,___fldiv@a+2
  5252  002512  C0AE  F01C         	movff	efgtoa@u+3,___fldiv@a+3
  5253  002516  ECD1  F01B         	call	___fldiv	;wreg free
  5254  00251A  C015  F02E         	movff	?___fldiv,floorf@x
  5255  00251E  C016  F02F         	movff	?___fldiv+1,floorf@x+1
  5256  002522  C017  F030         	movff	?___fldiv+2,floorf@x+2
  5257  002526  C018  F031         	movff	?___fldiv+3,floorf@x+3
  5258  00252A  EC06  F020         	call	_floorf	;wreg free
  5259  00252E  C02E  F09D         	movff	?_floorf,efgtoa@l
  5260  002532  C02F  F09E         	movff	?_floorf+1,efgtoa@l+1
  5261  002536  C030  F09F         	movff	?_floorf+2,efgtoa@l+2
  5262  00253A  C031  F0A0         	movff	?_floorf+3,efgtoa@l+3
  5263                           
  5264                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 433:         d = (int)l;
  5265  00253E  C09D  F015         	movff	efgtoa@l,___fltol@f1
  5266  002542  C09E  F016         	movff	efgtoa@l+1,___fltol@f1+1
  5267  002546  C09F  F017         	movff	efgtoa@l+2,___fltol@f1+2
  5268  00254A  C0A0  F018         	movff	efgtoa@l+3,___fltol@f1+3
  5269  00254E  EC56  F026         	call	___fltol	;wreg free
  5270  002552  C015  F08F         	movff	?___fltol,efgtoa@d
  5271  002556  C016  F090         	movff	?___fltol+1,efgtoa@d+1
  5272                           
  5273                           ; BSR set to: 0
  5274                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 434:         h -= l*u;
  5275  00255A  C099  F02F         	movff	efgtoa@h,___flsub@b
  5276  00255E  C09A  F030         	movff	efgtoa@h+1,___flsub@b+1
  5277  002562  C09B  F031         	movff	efgtoa@h+2,___flsub@b+2
  5278  002566  C09C  F032         	movff	efgtoa@h+3,___flsub@b+3
  5279  00256A  C0AB  F027         	movff	efgtoa@u,___flmul@a
  5280  00256E  C0AC  F028         	movff	efgtoa@u+1,___flmul@a+1
  5281  002572  C0AD  F029         	movff	efgtoa@u+2,___flmul@a+2
  5282  002576  C0AE  F02A         	movff	efgtoa@u+3,___flmul@a+3
  5283  00257A  C09D  F023         	movff	efgtoa@l,___flmul@b
  5284  00257E  C09E  F024         	movff	efgtoa@l+1,___flmul@b+1
  5285  002582  C09F  F025         	movff	efgtoa@l+2,___flmul@b+2
  5286  002586  C0A0  F026         	movff	efgtoa@l+3,___flmul@b+3
  5287  00258A  ECA2  F018         	call	___flmul	;wreg free
  5288  00258E  C023  F033         	movff	?___flmul,___flsub@a
  5289  002592  C024  F034         	movff	?___flmul+1,___flsub@a+1
  5290  002596  C025  F035         	movff	?___flmul+2,___flsub@a+2
  5291  00259A  C026  F036         	movff	?___flmul+3,___flsub@a+3
  5292  00259E  EC89  F02B         	call	___flsub	;wreg free
  5293  0025A2  C02F  F099         	movff	?___flsub,efgtoa@h
  5294  0025A6  C030  F09A         	movff	?___flsub+1,efgtoa@h+1
  5295  0025AA  C031  F09B         	movff	?___flsub+2,efgtoa@h+2
  5296  0025AE  C032  F09C         	movff	?___flsub+3,efgtoa@h+3
  5297                           
  5298                           ; BSR set to: 0
  5299                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 435:         u = u/10.0;
  5300  0025B2  C0AB  F015         	movff	efgtoa@u,___fldiv@b
  5301  0025B6  C0AC  F016         	movff	efgtoa@u+1,___fldiv@b+1
  5302  0025BA  C0AD  F017         	movff	efgtoa@u+2,___fldiv@b+2
  5303  0025BE  C0AE  F018         	movff	efgtoa@u+3,___fldiv@b+3
  5304  0025C2  0E00               	movlw	0
  5305  0025C4  6E19               	movwf	___fldiv@a^0,c
  5306  0025C6  0E00               	movlw	0
  5307  0025C8  6E1A               	movwf	(___fldiv@a+1)^0,c
  5308  0025CA  0E20               	movlw	32
  5309  0025CC  6E1B               	movwf	(___fldiv@a+2)^0,c
  5310  0025CE  0E41               	movlw	65
  5311  0025D0  6E1C               	movwf	(___fldiv@a+3)^0,c
  5312  0025D2  ECD1  F01B         	call	___fldiv	;wreg free
  5313  0025D6  C015  F0AB         	movff	?___fldiv,efgtoa@u
  5314  0025DA  C016  F0AC         	movff	?___fldiv+1,efgtoa@u+1
  5315  0025DE  C017  F0AD         	movff	?___fldiv+2,efgtoa@u+2
  5316  0025E2  C018  F0AE         	movff	?___fldiv+3,efgtoa@u+3
  5317                           
  5318                           ; BSR set to: 0
  5319                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 436:         ++i;
  5320  0025E6  4BA5               	infsnz	efgtoa@i& (0+255),f,b
  5321  0025E8  2BA6               	incf	(efgtoa@i+1)& (0+255),f,b
  5322  0025EA                     l9901:
  5323                           
  5324                           ; BSR set to: 0
  5325                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 431:     while (i < m) {
  5326  0025EA  5189               	movf	efgtoa@m& (0+255),w,b
  5327  0025EC  5DA5               	subwf	efgtoa@i& (0+255),w,b
  5328  0025EE  51A6               	movf	(efgtoa@i+1)& (0+255),w,b
  5329  0025F0  0A80               	xorlw	128
  5330  0025F2  6F78               	movwf	??_efgtoa& (0+255),b
  5331  0025F4  518A               	movf	(efgtoa@m+1)& (0+255),w,b
  5332  0025F6  0A80               	xorlw	128
  5333  0025F8  5978               	subwfb	??_efgtoa& (0+255),w,b
  5334  0025FA  A0D8               	btfss	status,0,c
  5335  0025FC  D77C               	goto	l9893
  5336                           
  5337                           ; BSR set to: 0
  5338                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 440:     l = u*5.0;
  5339  0025FE  C0AB  F023         	movff	efgtoa@u,___flmul@b
  5340  002602  C0AC  F024         	movff	efgtoa@u+1,___flmul@b+1
  5341  002606  C0AD  F025         	movff	efgtoa@u+2,___flmul@b+2
  5342  00260A  C0AE  F026         	movff	efgtoa@u+3,___flmul@b+3
  5343  00260E  0E00               	movlw	0
  5344  002610  6E27               	movwf	___flmul@a^0,c
  5345  002612  0E00               	movlw	0
  5346  002614  6E28               	movwf	(___flmul@a+1)^0,c
  5347  002616  0EA0               	movlw	160
  5348  002618  6E29               	movwf	(___flmul@a+2)^0,c
  5349  00261A  0E40               	movlw	64
  5350  00261C  6E2A               	movwf	(___flmul@a+3)^0,c
  5351  00261E  ECA2  F018         	call	___flmul	;wreg free
  5352  002622  C023  F09D         	movff	?___flmul,efgtoa@l
  5353  002626  C024  F09E         	movff	?___flmul+1,efgtoa@l+1
  5354  00262A  C025  F09F         	movff	?___flmul+2,efgtoa@l+2
  5355  00262E  C026  F0A0         	movff	?___flmul+3,efgtoa@l+3
  5356                           
  5357                           ; BSR set to: 0
  5358                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 441:     if (h < l) {
  5359  002632  C099  F02F         	movff	efgtoa@h,___flge@ff1
  5360  002636  C09A  F030         	movff	efgtoa@h+1,___flge@ff1+1
  5361  00263A  C09B  F031         	movff	efgtoa@h+2,___flge@ff1+2
  5362  00263E  C09C  F032         	movff	efgtoa@h+3,___flge@ff1+3
  5363  002642  C09D  F033         	movff	efgtoa@l,___flge@ff2
  5364  002646  C09E  F034         	movff	efgtoa@l+1,___flge@ff2+1
  5365  00264A  C09F  F035         	movff	efgtoa@l+2,___flge@ff2+2
  5366  00264E  C0A0  F036         	movff	efgtoa@l+3,___flge@ff2+3
  5367  002652  ECBA  F024         	call	___flge	;wreg free
  5368  002656  A0D8               	btfss	status,0,c
  5369  002658  D015               	goto	u11470
  5370                           
  5371                           ; BSR set to: 0
  5372                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 445:         if ((h == l) && 
      +                          !(d % 2)) {
  5373                           
  5374                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 443:     } else {
  5375                           
  5376                           ; BSR set to: 0
  5377                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 442:         l = 0.0;
  5378  00265A  C099  F015         	movff	efgtoa@h,___fleq@ff1
  5379  00265E  C09A  F016         	movff	efgtoa@h+1,___fleq@ff1+1
  5380  002662  C09B  F017         	movff	efgtoa@h+2,___fleq@ff1+2
  5381  002666  C09C  F018         	movff	efgtoa@h+3,___fleq@ff1+3
  5382  00266A  C09D  F019         	movff	efgtoa@l,___fleq@ff2
  5383  00266E  C09E  F01A         	movff	efgtoa@l+1,___fleq@ff2+1
  5384  002672  C09F  F01B         	movff	efgtoa@l+2,___fleq@ff2+2
  5385  002676  C0A0  F01C         	movff	efgtoa@l+3,___fleq@ff2+3
  5386  00267A  EC00  F029         	call	___fleq	;wreg free
  5387  00267E  B0D8               	btfsc	status,0,c
  5388                           
  5389                           ; BSR set to: 0
  5390  002680  B18F               	btfsc	efgtoa@d& (0+255),0,b
  5391  002682  D008               	goto	l9915
  5392  002684                     u11470:
  5393                           
  5394                           ; BSR set to: 0
  5395                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 446:             l = 0.0;
  5396  002684  0E00               	movlw	0
  5397  002686  6F9D               	movwf	efgtoa@l& (0+255),b
  5398  002688  0E00               	movlw	0
  5399  00268A  6F9E               	movwf	(efgtoa@l+1)& (0+255),b
  5400  00268C  0E00               	movlw	0
  5401  00268E  6F9F               	movwf	(efgtoa@l+2)& (0+255),b
  5402  002690  0E00               	movlw	0
  5403  002692  6FA0               	movwf	(efgtoa@l+3)& (0+255),b
  5404  002694                     l9915:
  5405                           
  5406                           ; BSR set to: 0
  5407                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 451:     h = g + l;
  5408  002694  C0A1  F015         	movff	efgtoa@g,___fladd@b
  5409  002698  C0A2  F016         	movff	efgtoa@g+1,___fladd@b+1
  5410  00269C  C0A3  F017         	movff	efgtoa@g+2,___fladd@b+2
  5411  0026A0  C0A4  F018         	movff	efgtoa@g+3,___fladd@b+3
  5412  0026A4  C09D  F019         	movff	efgtoa@l,___fladd@a
  5413  0026A8  C09E  F01A         	movff	efgtoa@l+1,___fladd@a+1
  5414  0026AC  C09F  F01B         	movff	efgtoa@l+2,___fladd@a+2
  5415  0026B0  C0A0  F01C         	movff	efgtoa@l+3,___fladd@a+3
  5416  0026B4  EC4B  F01A         	call	___fladd	;wreg free
  5417  0026B8  C015  F099         	movff	?___fladd,efgtoa@h
  5418  0026BC  C016  F09A         	movff	?___fladd+1,efgtoa@h+1
  5419  0026C0  C017  F09B         	movff	?___fladd+2,efgtoa@h+2
  5420  0026C4  C018  F09C         	movff	?___fladd+3,efgtoa@h+3
  5421                           
  5422                           ; BSR set to: 0
  5423                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 453:  if (h >= (ou*10.0)) {
  5424  0026C8  C099  F02F         	movff	efgtoa@h,___flge@ff1
  5425  0026CC  C09A  F030         	movff	efgtoa@h+1,___flge@ff1+1
  5426  0026D0  C09B  F031         	movff	efgtoa@h+2,___flge@ff1+2
  5427  0026D4  C09C  F032         	movff	efgtoa@h+3,___flge@ff1+3
  5428  0026D8  0E00               	movlw	0
  5429  0026DA  6E27               	movwf	___flmul@a^0,c
  5430  0026DC  0E00               	movlw	0
  5431  0026DE  6E28               	movwf	(___flmul@a+1)^0,c
  5432  0026E0  0E20               	movlw	32
  5433  0026E2  6E29               	movwf	(___flmul@a+2)^0,c
  5434  0026E4  0E41               	movlw	65
  5435  0026E6  6E2A               	movwf	(___flmul@a+3)^0,c
  5436  0026E8  C08B  F023         	movff	efgtoa@ou,___flmul@b
  5437  0026EC  C08C  F024         	movff	efgtoa@ou+1,___flmul@b+1
  5438  0026F0  C08D  F025         	movff	efgtoa@ou+2,___flmul@b+2
  5439  0026F4  C08E  F026         	movff	efgtoa@ou+3,___flmul@b+3
  5440  0026F8  ECA2  F018         	call	___flmul	;wreg free
  5441  0026FC  C023  F033         	movff	?___flmul,___flge@ff2
  5442  002700  C024  F034         	movff	?___flmul+1,___flge@ff2+1
  5443  002704  C025  F035         	movff	?___flmul+2,___flge@ff2+2
  5444  002708  C026  F036         	movff	?___flmul+3,___flge@ff2+3
  5445  00270C  ECBA  F024         	call	___flge	;wreg free
  5446  002710  A0D8               	btfss	status,0,c
  5447  002712  D022               	goto	l9927
  5448                           
  5449                           ; BSR set to: 0
  5450                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 454:   e++;
  5451  002714  4BA7               	infsnz	efgtoa@e& (0+255),f,b
  5452  002716  2BA8               	incf	(efgtoa@e+1)& (0+255),f,b
  5453                           
  5454                           ; BSR set to: 0
  5455                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 455:   ou *= 10.0;
  5456  002718  C08B  F023         	movff	efgtoa@ou,___flmul@b
  5457  00271C  C08C  F024         	movff	efgtoa@ou+1,___flmul@b+1
  5458  002720  C08D  F025         	movff	efgtoa@ou+2,___flmul@b+2
  5459  002724  C08E  F026         	movff	efgtoa@ou+3,___flmul@b+3
  5460  002728  0E00               	movlw	0
  5461  00272A  6E27               	movwf	___flmul@a^0,c
  5462  00272C  0E00               	movlw	0
  5463  00272E  6E28               	movwf	(___flmul@a+1)^0,c
  5464  002730  0E20               	movlw	32
  5465  002732  6E29               	movwf	(___flmul@a+2)^0,c
  5466  002734  0E41               	movlw	65
  5467  002736  6E2A               	movwf	(___flmul@a+3)^0,c
  5468  002738  ECA2  F018         	call	___flmul	;wreg free
  5469  00273C  C023  F08B         	movff	?___flmul,efgtoa@ou
  5470  002740  C024  F08C         	movff	?___flmul+1,efgtoa@ou+1
  5471  002744  C025  F08D         	movff	?___flmul+2,efgtoa@ou+2
  5472  002748  C026  F08E         	movff	?___flmul+3,efgtoa@ou+3
  5473                           
  5474                           ; BSR set to: 0
  5475                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 456:   if (nmode == 'f') {
  5476  00274C  0E66               	movlw	102
  5477  00274E  1995               	xorwf	efgtoa@nmode& (0+255),w,b
  5478  002750  A4D8               	btfss	status,2,c
  5479  002752  D002               	goto	l9927
  5480                           
  5481                           ; BSR set to: 0
  5482                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 458:    m++;
  5483  002754  4B89               	infsnz	efgtoa@m& (0+255),f,b
  5484  002756  2B8A               	incf	(efgtoa@m+1)& (0+255),f,b
  5485  002758                     l9927:
  5486                           
  5487                           ; BSR set to: 0
  5488                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 463:     u = ou;
  5489  002758  C08B  F0AB         	movff	efgtoa@ou,efgtoa@u
  5490  00275C  C08C  F0AC         	movff	efgtoa@ou+1,efgtoa@u+1
  5491  002760  C08D  F0AD         	movff	efgtoa@ou+2,efgtoa@u+2
  5492  002764  C08E  F0AE         	movff	efgtoa@ou+3,efgtoa@u+3
  5493                           
  5494                           ; BSR set to: 0
  5495                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 464:     ne = (nmode == 'e') 
      +                          ? 0 : e;
  5496  002768  0E65               	movlw	101
  5497  00276A  1995               	xorwf	efgtoa@nmode& (0+255),w,b
  5498  00276C  B4D8               	btfsc	status,2,c
  5499  00276E  D005               	goto	l9933
  5500                           
  5501                           ; BSR set to: 0
  5502  002770  C0A7  F087         	movff	efgtoa@e,efgtoa@ne
  5503  002774  C0A8  F088         	movff	efgtoa@e+1,efgtoa@ne+1
  5504  002778  D004               	goto	l2042
  5505  00277A                     l9933:
  5506                           
  5507                           ; BSR set to: 0
  5508  00277A  0E00               	movlw	0
  5509  00277C  6F88               	movwf	(efgtoa@ne+1)& (0+255),b
  5510  00277E  0E00               	movlw	0
  5511  002780  6F87               	movwf	efgtoa@ne& (0+255),b
  5512  002782                     l2042:
  5513                           
  5514                           ; BSR set to: 0
  5515                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 465:     pp = 0;
  5516  002782  0E00               	movlw	0
  5517  002784  6F86               	movwf	(efgtoa@pp+1)& (0+255),b
  5518  002786  0E00               	movlw	0
  5519  002788  6F85               	movwf	efgtoa@pp& (0+255),b
  5520                           
  5521                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 466:     t = 0;
  5522  00278A  0E00               	movlw	0
  5523  00278C  6F84               	movwf	(efgtoa@t+1)& (0+255),b
  5524  00278E  0E00               	movlw	0
  5525  002790  6F83               	movwf	efgtoa@t& (0+255),b
  5526                           
  5527                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 467:     i = 0;
  5528  002792  0E00               	movlw	0
  5529  002794  6FA6               	movwf	(efgtoa@i+1)& (0+255),b
  5530  002796  0E00               	movlw	0
  5531  002798  6FA5               	movwf	efgtoa@i& (0+255),b
  5532                           
  5533                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 468:     while ((i < m) && (n
      +                           < (80 - 5))) {
  5534  00279A  D0C4               	goto	l9983
  5535  00279C                     l9935:
  5536                           
  5537                           ; BSR set to: 0
  5538                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 469:         l = floorf(h/u);
  5539  00279C  C099  F015         	movff	efgtoa@h,___fldiv@b
  5540  0027A0  C09A  F016         	movff	efgtoa@h+1,___fldiv@b+1
  5541  0027A4  C09B  F017         	movff	efgtoa@h+2,___fldiv@b+2
  5542  0027A8  C09C  F018         	movff	efgtoa@h+3,___fldiv@b+3
  5543  0027AC  C0AB  F019         	movff	efgtoa@u,___fldiv@a
  5544  0027B0  C0AC  F01A         	movff	efgtoa@u+1,___fldiv@a+1
  5545  0027B4  C0AD  F01B         	movff	efgtoa@u+2,___fldiv@a+2
  5546  0027B8  C0AE  F01C         	movff	efgtoa@u+3,___fldiv@a+3
  5547  0027BC  ECD1  F01B         	call	___fldiv	;wreg free
  5548  0027C0  C015  F02E         	movff	?___fldiv,floorf@x
  5549  0027C4  C016  F02F         	movff	?___fldiv+1,floorf@x+1
  5550  0027C8  C017  F030         	movff	?___fldiv+2,floorf@x+2
  5551  0027CC  C018  F031         	movff	?___fldiv+3,floorf@x+3
  5552  0027D0  EC06  F020         	call	_floorf	;wreg free
  5553  0027D4  C02E  F09D         	movff	?_floorf,efgtoa@l
  5554  0027D8  C02F  F09E         	movff	?_floorf+1,efgtoa@l+1
  5555  0027DC  C030  F09F         	movff	?_floorf+2,efgtoa@l+2
  5556  0027E0  C031  F0A0         	movff	?_floorf+3,efgtoa@l+3
  5557                           
  5558                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 470:         d = (int)l;
  5559  0027E4  C09D  F015         	movff	efgtoa@l,___fltol@f1
  5560  0027E8  C09E  F016         	movff	efgtoa@l+1,___fltol@f1+1
  5561  0027EC  C09F  F017         	movff	efgtoa@l+2,___fltol@f1+2
  5562  0027F0  C0A0  F018         	movff	efgtoa@l+3,___fltol@f1+3
  5563  0027F4  EC56  F026         	call	___fltol	;wreg free
  5564  0027F8  C015  F08F         	movff	?___fltol,efgtoa@d
  5565  0027FC  C016  F090         	movff	?___fltol+1,efgtoa@d+1
  5566                           
  5567                           ; BSR set to: 0
  5568                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 471:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
  5569  002800  B83D               	btfsc	_flags^0,4,c
  5570  002802  D00C               	goto	l9947
  5571                           
  5572                           ; BSR set to: 0
  5573  002804  518F               	movf	efgtoa@d& (0+255),w,b
  5574  002806  1190               	iorwf	(efgtoa@d+1)& (0+255),w,b
  5575  002808  A4D8               	btfss	status,2,c
  5576  00280A  D008               	goto	l9947
  5577                           
  5578                           ; BSR set to: 0
  5579  00280C  0E67               	movlw	103
  5580  00280E  1998               	xorwf	efgtoa@mode& (0+255),w,b
  5581  002810  B4D8               	btfsc	status,2,c
  5582                           
  5583                           ; BSR set to: 0
  5584  002812  AF88               	btfss	(efgtoa@ne+1)& (0+255),7,b
  5585  002814  D003               	goto	l9947
  5586                           
  5587                           ; BSR set to: 0
  5588                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 472:             ++t;
  5589  002816  4B83               	infsnz	efgtoa@t& (0+255),f,b
  5590  002818  2B84               	incf	(efgtoa@t+1)& (0+255),f,b
  5591                           
  5592                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 473:         } else {
  5593  00281A  D039               	goto	l9975
  5594  00281C                     l9947:
  5595                           
  5596                           ; BSR set to: 0
  5597                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 474:             if (!pp && (
      +                          ne < 0)) {
  5598  00281C  5185               	movf	efgtoa@pp& (0+255),w,b
  5599  00281E  1186               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5600  002820  B4D8               	btfsc	status,2,c
  5601                           
  5602                           ; BSR set to: 0
  5603  002822  AF88               	btfss	(efgtoa@ne+1)& (0+255),7,b
  5604  002824  D022               	goto	l9967
  5605                           
  5606                           ; BSR set to: 0
  5607                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 475:                 dbuf[n++
      +                          ] = '.';
  5608  002826  0E98               	movlw	low _dbuf
  5609  002828  25A9               	addwf	efgtoa@n& (0+255),w,b
  5610  00282A  6ED9               	movwf	fsr2l,c
  5611  00282C  0E01               	movlw	high _dbuf
  5612  00282E  21AA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5613  002830  6EDA               	movwf	fsr2h,c
  5614  002832  0E2E               	movlw	46
  5615  002834  6EDF               	movwf	indf2,c
  5616                           
  5617                           ; BSR set to: 0
  5618  002836  4BA9               	infsnz	efgtoa@n& (0+255),f,b
  5619  002838  2BAA               	incf	(efgtoa@n+1)& (0+255),f,b
  5620                           
  5621                           ; BSR set to: 0
  5622                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 476:                 --w;
  5623  00283A  0796               	decf	efgtoa@w& (0+255),f,b
  5624  00283C  A0D8               	btfss	status,0,c
  5625  00283E  0797               	decf	(efgtoa@w+1)& (0+255),f,b
  5626                           
  5627                           ; BSR set to: 0
  5628                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 477:                 pp = 1;
  5629  002840  0E00               	movlw	0
  5630  002842  6F86               	movwf	(efgtoa@pp+1)& (0+255),b
  5631  002844  0E01               	movlw	1
  5632  002846  6F85               	movwf	efgtoa@pp& (0+255),b
  5633  002848  D010               	goto	l9967
  5634  00284A                     l9959:
  5635                           
  5636                           ; BSR set to: 0
  5637                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 480:                 dbuf[n++
      +                          ] = '0';
  5638  00284A  0E98               	movlw	low _dbuf
  5639  00284C  25A9               	addwf	efgtoa@n& (0+255),w,b
  5640  00284E  6ED9               	movwf	fsr2l,c
  5641  002850  0E01               	movlw	high _dbuf
  5642  002852  21AA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5643  002854  6EDA               	movwf	fsr2h,c
  5644  002856  0E30               	movlw	48
  5645  002858  6EDF               	movwf	indf2,c
  5646                           
  5647                           ; BSR set to: 0
  5648  00285A  4BA9               	infsnz	efgtoa@n& (0+255),f,b
  5649  00285C  2BAA               	incf	(efgtoa@n+1)& (0+255),f,b
  5650                           
  5651                           ; BSR set to: 0
  5652                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 481:                 --w;
  5653  00285E  0796               	decf	efgtoa@w& (0+255),f,b
  5654  002860  A0D8               	btfss	status,0,c
  5655  002862  0797               	decf	(efgtoa@w+1)& (0+255),f,b
  5656                           
  5657                           ; BSR set to: 0
  5658                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 482:                 --t;
  5659  002864  0783               	decf	efgtoa@t& (0+255),f,b
  5660  002866  A0D8               	btfss	status,0,c
  5661  002868  0784               	decf	(efgtoa@t+1)& (0+255),f,b
  5662  00286A                     l9967:
  5663                           
  5664                           ; BSR set to: 0
  5665                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 479:             while (t) {
  5666  00286A  5183               	movf	efgtoa@t& (0+255),w,b
  5667  00286C  1184               	iorwf	(efgtoa@t+1)& (0+255),w,b
  5668  00286E  A4D8               	btfss	status,2,c
  5669  002870  D7EC               	goto	l9959
  5670                           
  5671                           ; BSR set to: 0
  5672                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 484:             dbuf[n++] = 
      +                          (char)((int)'0' + d);
  5673  002872  0E98               	movlw	low _dbuf
  5674  002874  25A9               	addwf	efgtoa@n& (0+255),w,b
  5675  002876  6ED9               	movwf	fsr2l,c
  5676  002878  0E01               	movlw	high _dbuf
  5677  00287A  21AA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5678  00287C  6EDA               	movwf	fsr2h,c
  5679  00287E  518F               	movf	efgtoa@d& (0+255),w,b
  5680  002880  0F30               	addlw	48
  5681  002882  6EDF               	movwf	indf2,c
  5682                           
  5683                           ; BSR set to: 0
  5684  002884  4BA9               	infsnz	efgtoa@n& (0+255),f,b
  5685  002886  2BAA               	incf	(efgtoa@n+1)& (0+255),f,b
  5686                           
  5687                           ; BSR set to: 0
  5688                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 485:             --w;
  5689  002888  0796               	decf	efgtoa@w& (0+255),f,b
  5690  00288A  A0D8               	btfss	status,0,c
  5691  00288C  0797               	decf	(efgtoa@w+1)& (0+255),f,b
  5692  00288E                     l9975:
  5693                           
  5694                           ; BSR set to: 0
  5695                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 487:         h -= l*u;
  5696  00288E  C099  F02F         	movff	efgtoa@h,___flsub@b
  5697  002892  C09A  F030         	movff	efgtoa@h+1,___flsub@b+1
  5698  002896  C09B  F031         	movff	efgtoa@h+2,___flsub@b+2
  5699  00289A  C09C  F032         	movff	efgtoa@h+3,___flsub@b+3
  5700  00289E  C0AB  F027         	movff	efgtoa@u,___flmul@a
  5701  0028A2  C0AC  F028         	movff	efgtoa@u+1,___flmul@a+1
  5702  0028A6  C0AD  F029         	movff	efgtoa@u+2,___flmul@a+2
  5703  0028AA  C0AE  F02A         	movff	efgtoa@u+3,___flmul@a+3
  5704  0028AE  C09D  F023         	movff	efgtoa@l,___flmul@b
  5705  0028B2  C09E  F024         	movff	efgtoa@l+1,___flmul@b+1
  5706  0028B6  C09F  F025         	movff	efgtoa@l+2,___flmul@b+2
  5707  0028BA  C0A0  F026         	movff	efgtoa@l+3,___flmul@b+3
  5708  0028BE  ECA2  F018         	call	___flmul	;wreg free
  5709  0028C2  C023  F033         	movff	?___flmul,___flsub@a
  5710  0028C6  C024  F034         	movff	?___flmul+1,___flsub@a+1
  5711  0028CA  C025  F035         	movff	?___flmul+2,___flsub@a+2
  5712  0028CE  C026  F036         	movff	?___flmul+3,___flsub@a+3
  5713  0028D2  EC89  F02B         	call	___flsub	;wreg free
  5714  0028D6  C02F  F099         	movff	?___flsub,efgtoa@h
  5715  0028DA  C030  F09A         	movff	?___flsub+1,efgtoa@h+1
  5716  0028DE  C031  F09B         	movff	?___flsub+2,efgtoa@h+2
  5717  0028E2  C032  F09C         	movff	?___flsub+3,efgtoa@h+3
  5718                           
  5719                           ; BSR set to: 0
  5720                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 488:         u = u/10.0;
  5721  0028E6  C0AB  F015         	movff	efgtoa@u,___fldiv@b
  5722  0028EA  C0AC  F016         	movff	efgtoa@u+1,___fldiv@b+1
  5723  0028EE  C0AD  F017         	movff	efgtoa@u+2,___fldiv@b+2
  5724  0028F2  C0AE  F018         	movff	efgtoa@u+3,___fldiv@b+3
  5725  0028F6  0E00               	movlw	0
  5726  0028F8  6E19               	movwf	___fldiv@a^0,c
  5727  0028FA  0E00               	movlw	0
  5728  0028FC  6E1A               	movwf	(___fldiv@a+1)^0,c
  5729  0028FE  0E20               	movlw	32
  5730  002900  6E1B               	movwf	(___fldiv@a+2)^0,c
  5731  002902  0E41               	movlw	65
  5732  002904  6E1C               	movwf	(___fldiv@a+3)^0,c
  5733  002906  ECD1  F01B         	call	___fldiv	;wreg free
  5734  00290A  C015  F0AB         	movff	?___fldiv,efgtoa@u
  5735  00290E  C016  F0AC         	movff	?___fldiv+1,efgtoa@u+1
  5736  002912  C017  F0AD         	movff	?___fldiv+2,efgtoa@u+2
  5737  002916  C018  F0AE         	movff	?___fldiv+3,efgtoa@u+3
  5738                           
  5739                           ; BSR set to: 0
  5740                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 489:         --ne;
  5741  00291A  0787               	decf	efgtoa@ne& (0+255),f,b
  5742  00291C  A0D8               	btfss	status,0,c
  5743  00291E  0788               	decf	(efgtoa@ne+1)& (0+255),f,b
  5744                           
  5745                           ; BSR set to: 0
  5746                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 490:         ++i;
  5747  002920  4BA5               	infsnz	efgtoa@i& (0+255),f,b
  5748  002922  2BA6               	incf	(efgtoa@i+1)& (0+255),f,b
  5749  002924                     l9983:
  5750                           
  5751                           ; BSR set to: 0
  5752                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 468:     while ((i < m) && (n
      +                           < (80 - 5))) {
  5753  002924  5189               	movf	efgtoa@m& (0+255),w,b
  5754  002926  5DA5               	subwf	efgtoa@i& (0+255),w,b
  5755  002928  51A6               	movf	(efgtoa@i+1)& (0+255),w,b
  5756  00292A  0A80               	xorlw	128
  5757  00292C  6F78               	movwf	??_efgtoa& (0+255),b
  5758  00292E  518A               	movf	(efgtoa@m+1)& (0+255),w,b
  5759  002930  0A80               	xorlw	128
  5760  002932  5978               	subwfb	??_efgtoa& (0+255),w,b
  5761  002934  B0D8               	btfsc	status,0,c
  5762  002936  D008               	goto	u11590
  5763                           
  5764                           ; BSR set to: 0
  5765  002938  BFAA               	btfsc	(efgtoa@n+1)& (0+255),7,b
  5766  00293A  D730               	goto	l9935
  5767  00293C  51AA               	movf	(efgtoa@n+1)& (0+255),w,b
  5768  00293E  E104               	bnz	u11590
  5769  002940  0E4B               	movlw	75
  5770  002942  5DA9               	subwf	efgtoa@n& (0+255),w,b
  5771  002944  A0D8               	btfss	status,0,c
  5772  002946  D72A               	goto	l9935
  5773  002948                     u11590:
  5774                           
  5775                           ; BSR set to: 0
  5776                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 492:     if (!pp && (flags & 
      +                          (1 << 4))) {
  5777  002948  5185               	movf	efgtoa@pp& (0+255),w,b
  5778  00294A  1186               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5779  00294C  B4D8               	btfsc	status,2,c
  5780                           
  5781                           ; BSR set to: 0
  5782  00294E  A83D               	btfss	_flags^0,4,c
  5783  002950  D00A               	goto	l9995
  5784                           
  5785                           ; BSR set to: 0
  5786                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 493:         dbuf[n++] = '.';
  5787  002952  0E98               	movlw	low _dbuf
  5788  002954  25A9               	addwf	efgtoa@n& (0+255),w,b
  5789  002956  6ED9               	movwf	fsr2l,c
  5790  002958  0E01               	movlw	high _dbuf
  5791  00295A  21AA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5792  00295C  6EDA               	movwf	fsr2h,c
  5793  00295E  0E2E               	movlw	46
  5794  002960  6EDF               	movwf	indf2,c
  5795                           
  5796                           ; BSR set to: 0
  5797  002962  4BA9               	infsnz	efgtoa@n& (0+255),f,b
  5798  002964  2BAA               	incf	(efgtoa@n+1)& (0+255),f,b
  5799  002966                     l9995:
  5800                           
  5801                           ; BSR set to: 0
  5802                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 495:     dbuf[n] = '\0';
  5803  002966  0E98               	movlw	low _dbuf
  5804  002968  25A9               	addwf	efgtoa@n& (0+255),w,b
  5805  00296A  6ED9               	movwf	fsr2l,c
  5806  00296C  0E01               	movlw	high _dbuf
  5807  00296E  21AA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5808  002970  6EDA               	movwf	fsr2h,c
  5809  002972  0E00               	movlw	0
  5810  002974  6EDF               	movwf	indf2,c
  5811                           
  5812                           ; BSR set to: 0
  5813                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 498:     if (nmode == 'e') {
  5814  002976  0E65               	movlw	101
  5815  002978  1995               	xorwf	efgtoa@nmode& (0+255),w,b
  5816  00297A  A4D8               	btfss	status,2,c
  5817  00297C  D448               	goto	l9797
  5818                           
  5819                           ; BSR set to: 0
  5820                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 499:         i = sizeof(dbuf)
      +                           - 1;
  5821  00297E  0E00               	movlw	0
  5822  002980  6FA6               	movwf	(efgtoa@i+1)& (0+255),b
  5823  002982  0E4F               	movlw	79
  5824  002984  6FA5               	movwf	efgtoa@i& (0+255),b
  5825                           
  5826                           ; BSR set to: 0
  5827                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 500:         dbuf[i] = '\0';
  5828  002986  0E98               	movlw	low _dbuf
  5829  002988  25A5               	addwf	efgtoa@i& (0+255),w,b
  5830  00298A  6ED9               	movwf	fsr2l,c
  5831  00298C  0E01               	movlw	high _dbuf
  5832  00298E  21A6               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5833  002990  6EDA               	movwf	fsr2h,c
  5834  002992  0E00               	movlw	0
  5835  002994  6EDF               	movwf	indf2,c
  5836                           
  5837                           ; BSR set to: 0
  5838                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 501:         sign = 0;
  5839  002996  0E00               	movlw	0
  5840  002998  6F92               	movwf	(efgtoa@sign+1)& (0+255),b
  5841  00299A  0E00               	movlw	0
  5842  00299C  6F91               	movwf	efgtoa@sign& (0+255),b
  5843                           
  5844                           ; BSR set to: 0
  5845                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 502:         if (e < 0) {
  5846  00299E  AFA8               	btfss	(efgtoa@e+1)& (0+255),7,b
  5847  0029A0  D008               	goto	l10011
  5848                           
  5849                           ; BSR set to: 0
  5850                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 503:             sign = 1;
  5851  0029A2  0E00               	movlw	0
  5852  0029A4  6F92               	movwf	(efgtoa@sign+1)& (0+255),b
  5853  0029A6  0E01               	movlw	1
  5854  0029A8  6F91               	movwf	efgtoa@sign& (0+255),b
  5855                           
  5856                           ; BSR set to: 0
  5857                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 504:             e = -e;
  5858  0029AA  6DA7               	negf	efgtoa@e& (0+255),b
  5859  0029AC  1FA8               	comf	(efgtoa@e+1)& (0+255),f,b
  5860  0029AE  B0D8               	btfsc	status,0,c
  5861  0029B0  2BA8               	incf	(efgtoa@e+1)& (0+255),f,b
  5862  0029B2                     l10011:
  5863                           
  5864                           ; BSR set to: 0
  5865                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 506:         p = 2;
  5866  0029B2  0E00               	movlw	0
  5867  0029B4  6F94               	movwf	(efgtoa@p+1)& (0+255),b
  5868  0029B6  0E02               	movlw	2
  5869  0029B8  6F93               	movwf	efgtoa@p& (0+255),b
  5870                           
  5871                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 507:         while (e || (0 <
      +                           p)) {
  5872  0029BA  D02A               	goto	l10023
  5873  0029BC                     l10013:
  5874                           
  5875                           ; BSR set to: 0
  5876                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 508:             --i;
  5877  0029BC  07A5               	decf	efgtoa@i& (0+255),f,b
  5878  0029BE  A0D8               	btfss	status,0,c
  5879  0029C0  07A6               	decf	(efgtoa@i+1)& (0+255),f,b
  5880                           
  5881                           ; BSR set to: 0
  5882                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 509:             dbuf[i] = '0
      +                          ' + (e % 10);
  5883  0029C2  0E98               	movlw	low _dbuf
  5884  0029C4  25A5               	addwf	efgtoa@i& (0+255),w,b
  5885  0029C6  6ED9               	movwf	fsr2l,c
  5886  0029C8  0E01               	movlw	high _dbuf
  5887  0029CA  21A6               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5888  0029CC  6EDA               	movwf	fsr2h,c
  5889  0029CE  C0A7  F015         	movff	efgtoa@e,___awmod@dividend
  5890  0029D2  C0A8  F016         	movff	efgtoa@e+1,___awmod@dividend+1
  5891  0029D6  0E00               	movlw	0
  5892  0029D8  6E18               	movwf	(___awmod@divisor+1)^0,c
  5893  0029DA  0E0A               	movlw	10
  5894  0029DC  6E17               	movwf	___awmod@divisor^0,c
  5895  0029DE  EC02  F02A         	call	___awmod	;wreg free
  5896  0029E2  5015               	movf	?___awmod^0,w,c
  5897  0029E4  0F30               	addlw	48
  5898  0029E6  6EDF               	movwf	indf2,c
  5899                           
  5900                           ; BSR set to: 0
  5901                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 510:             e = e / 10;
  5902  0029E8  C0A7  F015         	movff	efgtoa@e,___awdiv@dividend
  5903  0029EC  C0A8  F016         	movff	efgtoa@e+1,___awdiv@dividend+1
  5904  0029F0  0E00               	movlw	0
  5905  0029F2  6E18               	movwf	(___awdiv@divisor+1)^0,c
  5906  0029F4  0E0A               	movlw	10
  5907  0029F6  6E17               	movwf	___awdiv@divisor^0,c
  5908  0029F8  EC87  F029         	call	___awdiv	;wreg free
  5909  0029FC  C015  F0A7         	movff	?___awdiv,efgtoa@e
  5910  002A00  C016  F0A8         	movff	?___awdiv+1,efgtoa@e+1
  5911                           
  5912                           ; BSR set to: 0
  5913                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 511:             --p;
  5914  002A04  0793               	decf	efgtoa@p& (0+255),f,b
  5915  002A06  A0D8               	btfss	status,0,c
  5916  002A08  0794               	decf	(efgtoa@p+1)& (0+255),f,b
  5917                           
  5918                           ; BSR set to: 0
  5919                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 512:             --w;
  5920  002A0A  0796               	decf	efgtoa@w& (0+255),f,b
  5921  002A0C  A0D8               	btfss	status,0,c
  5922  002A0E  0797               	decf	(efgtoa@w+1)& (0+255),f,b
  5923  002A10                     l10023:
  5924                           
  5925                           ; BSR set to: 0
  5926                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 507:         while (e || (0 <
      +                           p)) {
  5927  002A10  51A7               	movf	efgtoa@e& (0+255),w,b
  5928  002A12  11A8               	iorwf	(efgtoa@e+1)& (0+255),w,b
  5929  002A14  A4D8               	btfss	status,2,c
  5930  002A16  D7D2               	goto	l10013
  5931                           
  5932                           ; BSR set to: 0
  5933  002A18  BF94               	btfsc	(efgtoa@p+1)& (0+255),7,b
  5934  002A1A  D005               	goto	u11650
  5935  002A1C  5194               	movf	(efgtoa@p+1)& (0+255),w,b
  5936  002A1E  E1CE               	bnz	l10013
  5937  002A20  0593               	decf	efgtoa@p& (0+255),w,b
  5938  002A22  B0D8               	btfsc	status,0,c
  5939  002A24  D7CB               	goto	l10013
  5940  002A26                     u11650:
  5941                           
  5942                           ; BSR set to: 0
  5943                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 514:         --i;
  5944  002A26  07A5               	decf	efgtoa@i& (0+255),f,b
  5945  002A28  A0D8               	btfss	status,0,c
  5946  002A2A  07A6               	decf	(efgtoa@i+1)& (0+255),f,b
  5947                           
  5948                           ; BSR set to: 0
  5949                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 515:         dbuf[i] = sign ?
      +                           '-' : '+';
  5950  002A2C  5191               	movf	efgtoa@sign& (0+255),w,b
  5951  002A2E  1192               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5952  002A30  A4D8               	btfss	status,2,c
  5953  002A32  D004               	goto	l10033
  5954                           
  5955                           ; BSR set to: 0
  5956  002A34  0E00               	movlw	0
  5957  002A36  6F80               	movwf	(_efgtoa$3084+1)& (0+255),b
  5958  002A38  0E2B               	movlw	43
  5959  002A3A  D003               	goto	L5
  5960  002A3C                     l10033:
  5961                           
  5962                           ; BSR set to: 0
  5963  002A3C  0E00               	movlw	0
  5964  002A3E  6F80               	movwf	(_efgtoa$3084+1)& (0+255),b
  5965  002A40  0E2D               	movlw	45
  5966  002A42                     L5:
  5967  002A42  6F7F               	movwf	_efgtoa$3084& (0+255),b
  5968                           
  5969                           ; BSR set to: 0
  5970  002A44  0E98               	movlw	low _dbuf
  5971  002A46  25A5               	addwf	efgtoa@i& (0+255),w,b
  5972  002A48  6ED9               	movwf	fsr2l,c
  5973  002A4A  0E01               	movlw	high _dbuf
  5974  002A4C  21A6               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5975  002A4E  6EDA               	movwf	fsr2h,c
  5976  002A50  0060  F1FF  FFDF   	movff	_efgtoa$3084,indf2
  5977                           
  5978                           ; BSR set to: 0
  5979                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 516:         --w;
  5980  002A56  0796               	decf	efgtoa@w& (0+255),f,b
  5981  002A58  A0D8               	btfss	status,0,c
  5982  002A5A  0797               	decf	(efgtoa@w+1)& (0+255),f,b
  5983                           
  5984                           ; BSR set to: 0
  5985                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 517:         --i;
  5986  002A5C  07A5               	decf	efgtoa@i& (0+255),f,b
  5987  002A5E  A0D8               	btfss	status,0,c
  5988  002A60  07A6               	decf	(efgtoa@i+1)& (0+255),f,b
  5989                           
  5990                           ; BSR set to: 0
  5991                           
  5992                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 518:         dbuf[i] = (0 && 
      +                          isupper((int)c), ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  5993  002A62  0EBF               	movlw	191
  5994  002A64  6F78               	movwf	??_efgtoa& (0+255),b
  5995  002A66  0EFF               	movlw	255
  5996  002A68  6F79               	movwf	(??_efgtoa+1)& (0+255),b
  5997  002A6A  5177               	movf	efgtoa@c& (0+255),w,b
  5998  002A6C  6F7A               	movwf	(??_efgtoa+2)& (0+255),b
  5999  002A6E  6B7B               	clrf	(??_efgtoa+3)& (0+255),b
  6000  002A70  5178               	movf	??_efgtoa& (0+255),w,b
  6001  002A72  277A               	addwf	(??_efgtoa+2)& (0+255),f,b
  6002  002A74  5179               	movf	(??_efgtoa+1)& (0+255),w,b
  6003  002A76  237B               	addwfc	(??_efgtoa+3)& (0+255),f,b
  6004  002A78  517B               	movf	(??_efgtoa+3)& (0+255),w,b
  6005  002A7A  E104               	bnz	u11670
  6006  002A7C  0E1A               	movlw	26
  6007  002A7E  5D7A               	subwf	(??_efgtoa+2)& (0+255),w,b
  6008  002A80  A0D8               	btfss	status,0,c
  6009  002A82  D004               	goto	l10047
  6010  002A84                     u11670:
  6011                           
  6012                           ; BSR set to: 0
  6013  002A84  0E00               	movlw	0
  6014  002A86  6F82               	movwf	(_efgtoa$3085+1)& (0+255),b
  6015  002A88  0E65               	movlw	101
  6016  002A8A  D003               	goto	L6
  6017  002A8C                     l10047:
  6018                           
  6019                           ; BSR set to: 0
  6020  002A8C  0E00               	movlw	0
  6021  002A8E  6F82               	movwf	(_efgtoa$3085+1)& (0+255),b
  6022  002A90  0E45               	movlw	69
  6023  002A92                     L6:
  6024  002A92  6F81               	movwf	_efgtoa$3085& (0+255),b
  6025                           
  6026                           ; BSR set to: 0
  6027  002A94  0E98               	movlw	low _dbuf
  6028  002A96  25A5               	addwf	efgtoa@i& (0+255),w,b
  6029  002A98  6ED9               	movwf	fsr2l,c
  6030  002A9A  0E01               	movlw	high _dbuf
  6031  002A9C  21A6               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6032  002A9E  6EDA               	movwf	fsr2h,c
  6033  002AA0  0060  F207  FFDF   	movff	_efgtoa$3085,indf2
  6034                           
  6035                           ; BSR set to: 0
  6036                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 519:         --w;
  6037  002AA6  0796               	decf	efgtoa@w& (0+255),f,b
  6038  002AA8  A0D8               	btfss	status,0,c
  6039  002AAA  0797               	decf	(efgtoa@w+1)& (0+255),f,b
  6040                           
  6041                           ; BSR set to: 0
  6042                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 520:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
  6043  002AAC  0E98               	movlw	low _dbuf
  6044  002AAE  25A9               	addwf	efgtoa@n& (0+255),w,b
  6045  002AB0  6E15               	movwf	strcpy@dest^0,c
  6046  002AB2  0E01               	movlw	high _dbuf
  6047  002AB4  21AA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6048  002AB6  6E16               	movwf	(strcpy@dest+1)^0,c
  6049  002AB8  0E98               	movlw	low _dbuf
  6050  002ABA  25A5               	addwf	efgtoa@i& (0+255),w,b
  6051  002ABC  6E17               	movwf	strcpy@src^0,c
  6052  002ABE  0E01               	movlw	high _dbuf
  6053  002AC0  21A6               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6054  002AC2  6E18               	movwf	(strcpy@src+1)^0,c
  6055  002AC4  EC6E  F02A         	call	_strcpy	;wreg free
  6056  002AC8  EF07  F011         	goto	l9797
  6057  002ACC                     __end_of_efgtoa:
  6058                           	callstack 0
  6059                           
  6060 ;; *************** function _tolower *****************
  6061 ;; Defined at:
  6062 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/tolower.c"
  6063 ;; Parameters:    Size  Location     Type
  6064 ;;  c               2   26[COMRAM] int 
  6065 ;; Auto vars:     Size  Location     Type
  6066 ;;		None
  6067 ;; Return value:  Size  Location     Type
  6068 ;;                  2   26[COMRAM] int 
  6069 ;; Registers used:
  6070 ;;		wreg, status,2, status,0
  6071 ;; Tracked objects:
  6072 ;;		On entry : 3F/0
  6073 ;;		On exit  : 3F/0
  6074 ;;		Unchanged: 3F/0
  6075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6076 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6078 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6079 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6080 ;;Total ram usage:        6 bytes
  6081 ;; Hardware stack levels used: 1
  6082 ;; Hardware stack levels required when called: 5
  6083 ;; This function calls:
  6084 ;;		_isupper
  6085 ;; This function is called by:
  6086 ;;		_efgtoa
  6087 ;;		_vfpfcnvrt
  6088 ;; This function uses a non-reentrant model
  6089 ;;
  6090                           
  6091                           	psect	text12
  6092  005916                     __ptext12:
  6093                           	callstack 0
  6094  005916                     _tolower:
  6095                           	callstack 20
  6096                           
  6097                           ; BSR set to: 0
  6098                           
  6099                           ; BSR set to: 0
  6100                           
  6101                           ;incstack = 0
  6102  005916  0EBF               	movlw	191
  6103  005918  6E1D               	movwf	??_tolower^0,c
  6104  00591A  0EFF               	movlw	255
  6105  00591C  6E1E               	movwf	(??_tolower+1)^0,c
  6106  00591E  C01B  F01F         	movff	tolower@c,??_tolower+2
  6107  005922  C01C  F020         	movff	tolower@c+1,??_tolower+3
  6108  005926  501D               	movf	??_tolower^0,w,c
  6109  005928  261F               	addwf	(??_tolower+2)^0,f,c
  6110  00592A  501E               	movf	(??_tolower+1)^0,w,c
  6111  00592C  2220               	addwfc	(??_tolower+3)^0,f,c
  6112  00592E  5020               	movf	(??_tolower+3)^0,w,c
  6113  005930  E10A               	bnz	l2293
  6114  005932  0E1A               	movlw	26
  6115  005934  5C1F               	subwf	(??_tolower+2)^0,w,c
  6116  005936  B0D8               	btfsc	status,0,c
  6117  005938  D006               	goto	l2293
  6118                           
  6119                           ; BSR set to: 0
  6120  00593A  0E20               	movlw	32
  6121  00593C  101B               	iorwf	tolower@c^0,w,c
  6122  00593E  6E1B               	movwf	?_tolower^0,c
  6123  005940  501C               	movf	(tolower@c+1)^0,w,c
  6124  005942  6E1C               	movwf	(?_tolower+1)^0,c
  6125  005944  0012               	return	
  6126  005946                     l2293:
  6127                           
  6128                           ; BSR set to: 0
  6129  005946  C01B  F01B         	movff	tolower@c,?_tolower
  6130  00594A  C01C  F01C         	movff	tolower@c+1,?_tolower+1
  6131                           
  6132                           ; BSR set to: 0
  6133  00594E  0012               	return		;funcret
  6134  005950                     __end_of_tolower:
  6135                           	callstack 0
  6136                           
  6137 ;; *************** function _isupper *****************
  6138 ;; Defined at:
  6139 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/isupper.c"
  6140 ;; Parameters:    Size  Location     Type
  6141 ;;  c               2   20[COMRAM] int 
  6142 ;; Auto vars:     Size  Location     Type
  6143 ;;		None
  6144 ;; Return value:  Size  Location     Type
  6145 ;;                  2   20[COMRAM] int 
  6146 ;; Registers used:
  6147 ;;		wreg, status,2, status,0
  6148 ;; Tracked objects:
  6149 ;;		On entry : 0/0
  6150 ;;		On exit  : 0/0
  6151 ;;		Unchanged: 0/0
  6152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6153 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6155 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6156 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6157 ;;Total ram usage:        6 bytes
  6158 ;; Hardware stack levels used: 1
  6159 ;; Hardware stack levels required when called: 4
  6160 ;; This function calls:
  6161 ;;		Nothing
  6162 ;; This function is called by:
  6163 ;;		_efgtoa
  6164 ;;		_vfpfcnvrt
  6165 ;;		_tolower
  6166 ;; This function uses a non-reentrant model
  6167 ;;
  6168                           
  6169                           	psect	text13
  6170  005A98                     __ptext13:
  6171                           	callstack 0
  6172  005A98                     _isupper:
  6173                           	callstack 20
  6174                           
  6175                           ; BSR set to: 0
  6176                           ;incstack = 0
  6177  005A98  0EBF               	movlw	191
  6178  005A9A  6E17               	movwf	??_isupper^0,c
  6179  005A9C  0EFF               	movlw	255
  6180  005A9E  6E18               	movwf	(??_isupper+1)^0,c
  6181  005AA0  C015  F019         	movff	isupper@c,??_isupper+2
  6182  005AA4  C016  F01A         	movff	isupper@c+1,??_isupper+3
  6183  005AA8  5017               	movf	??_isupper^0,w,c
  6184  005AAA  2619               	addwf	(??_isupper+2)^0,f,c
  6185  005AAC  5018               	movf	(??_isupper+1)^0,w,c
  6186  005AAE  221A               	addwfc	(??_isupper+3)^0,f,c
  6187  005AB0  501A               	movf	(??_isupper+3)^0,w,c
  6188  005AB2  E106               	bnz	u10040
  6189  005AB4  0E1A               	movlw	26
  6190  005AB6  5C19               	subwf	(??_isupper+2)^0,w,c
  6191  005AB8  B0D8               	btfsc	status,0,c
  6192  005ABA  D002               	goto	u10040
  6193  005ABC  0E01               	movlw	1
  6194  005ABE  D001               	goto	u10050
  6195  005AC0                     u10040:
  6196  005AC0  0E00               	movlw	0
  6197  005AC2                     u10050:
  6198  005AC2  6E15               	movwf	?_isupper^0,c
  6199  005AC4  6A16               	clrf	(?_isupper+1)^0,c
  6200  005AC6  0012               	return		;funcret
  6201  005AC8                     __end_of_isupper:
  6202                           	callstack 0
  6203                           
  6204 ;; *************** function _strcpy *****************
  6205 ;; Defined at:
  6206 ;;		line 3 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/strcpy.c"
  6207 ;; Parameters:    Size  Location     Type
  6208 ;;  dest            2   20[COMRAM] PTR unsigned char 
  6209 ;;		 -> dbuf(80), 
  6210 ;;  src             2   22[COMRAM] PTR const unsigned char 
  6211 ;;		 -> STR_17(4), STR_16(4), STR_13(4), STR_12(4), 
  6212 ;;		 -> dbuf(80), 
  6213 ;; Auto vars:     Size  Location     Type
  6214 ;;  d               2   28[COMRAM] PTR unsigned char 
  6215 ;;		 -> dbuf(80), 
  6216 ;;  s               2   26[COMRAM] PTR const unsigned char 
  6217 ;;		 -> STR_17(4), STR_16(4), STR_13(4), STR_12(4), 
  6218 ;;		 -> dbuf(80), 
  6219 ;; Return value:  Size  Location     Type
  6220 ;;                  2   20[COMRAM] PTR unsigned char 
  6221 ;; Registers used:
  6222 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6223 ;; Tracked objects:
  6224 ;;		On entry : 3F/0
  6225 ;;		On exit  : 0/0
  6226 ;;		Unchanged: 0/0
  6227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6228 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6229 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6230 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6231 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6232 ;;Total ram usage:       10 bytes
  6233 ;; Hardware stack levels used: 1
  6234 ;; Hardware stack levels required when called: 4
  6235 ;; This function calls:
  6236 ;;		Nothing
  6237 ;; This function is called by:
  6238 ;;		_efgtoa
  6239 ;; This function uses a non-reentrant model
  6240 ;;
  6241                           
  6242                           	psect	text14
  6243  0054DC                     __ptext14:
  6244                           	callstack 0
  6245  0054DC                     _strcpy:
  6246                           	callstack 20
  6247                           
  6248                           ; BSR set to: 0
  6249                           
  6250                           ;incstack = 0
  6251  0054DC  C017  F01B         	movff	strcpy@src,strcpy@s
  6252  0054E0  C018  F01C         	movff	strcpy@src+1,strcpy@s+1
  6253  0054E4  C015  F01D         	movff	strcpy@dest,strcpy@d
  6254  0054E8  C016  F01E         	movff	strcpy@dest+1,strcpy@d+1
  6255  0054EC                     l9677:
  6256  0054EC  501B               	movf	strcpy@s^0,w,c
  6257  0054EE  6E19               	movwf	??_strcpy^0,c
  6258  0054F0  501C               	movf	(strcpy@s+1)^0,w,c
  6259  0054F2  6E1A               	movwf	(??_strcpy+1)^0,c
  6260  0054F4  4A1B               	infsnz	strcpy@s^0,f,c
  6261  0054F6  2A1C               	incf	(strcpy@s+1)^0,f,c
  6262  0054F8  0060  F067  FFF6   	movff	??_strcpy,tblptrl
  6263  0054FE  0060  F06B  FFF7   	movff	??_strcpy+1,tblptrh
  6264  005504  0E00               	movlw	low (__smallconst shr (0+16))
  6265  005506  6EF8               	movwf	tblptru,c
  6266  005508  0060  F077  FFD9   	movff	strcpy@d,fsr2l
  6267  00550E  0060  F07B  FFDA   	movff	strcpy@d+1,fsr2h
  6268  005514  4A1D               	infsnz	strcpy@d^0,f,c
  6269  005516  2A1E               	incf	(strcpy@d+1)^0,f,c
  6270  005518  0E1F               	movlw	(high __ramtop+-1)
  6271  00551A  64F7               	cpfsgt	tblptrh,c
  6272  00551C  D003               	bra	u10937
  6273  00551E  0008               	tblrd		*
  6274  005520  50F5               	movf	tablat,w,c
  6275  005522  D007               	bra	u10930
  6276  005524                     u10937:
  6277  005524  006F FFDB FFE1     	movff	tblptrl,fsr1l
  6278  00552A  006F FFDF FFE2     	movff	tblptrh,fsr1h
  6279  005530  50E7               	movf	indf1,w,c
  6280  005532                     u10930:
  6281  005532  6EDF               	movwf	indf2,c
  6282  005534  50DF               	movf	indf2,w,c
  6283  005536  B4D8               	btfsc	status,2,c
  6284  005538  0012               	return	
  6285  00553A  D7D8               	goto	l9677
  6286  00553C                     __end_of_strcpy:
  6287                           	callstack 0
  6288                           
  6289 ;; *************** function _pad *****************
  6290 ;; Defined at:
  6291 ;;		line 72 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  6292 ;; Parameters:    Size  Location     Type
  6293 ;;  fp              2   40[COMRAM] PTR struct _IO_FILE
  6294 ;;		 -> sprintf@f(11), NULL(0), 
  6295 ;;  buf             2   42[COMRAM] PTR unsigned char 
  6296 ;;		 -> dbuf(80), 
  6297 ;;  p               2   44[COMRAM] int 
  6298 ;; Auto vars:     Size  Location     Type
  6299 ;;  w               2   49[COMRAM] int 
  6300 ;;  i               2   47[COMRAM] int 
  6301 ;; Return value:  Size  Location     Type
  6302 ;;                  2   40[COMRAM] int 
  6303 ;; Registers used:
  6304 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6305 ;; Tracked objects:
  6306 ;;		On entry : 0/0
  6307 ;;		On exit  : 0/0
  6308 ;;		Unchanged: 0/0
  6309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6310 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6311 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6312 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6313 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6314 ;;Total ram usage:       11 bytes
  6315 ;; Hardware stack levels used: 1
  6316 ;; Hardware stack levels required when called: 8
  6317 ;; This function calls:
  6318 ;;		_fputc
  6319 ;;		_fputs
  6320 ;;		_strlen
  6321 ;; This function is called by:
  6322 ;;		_efgtoa
  6323 ;;		_utoa
  6324 ;; This function uses a non-reentrant model
  6325 ;;
  6326                           
  6327                           	psect	text15
  6328  0050D6                     __ptext15:
  6329                           	callstack 0
  6330  0050D6                     _pad:
  6331                           	callstack 16
  6332                           
  6333                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.36/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  6334                           
  6335                           ;incstack = 0
  6336  0050D6  A03D               	btfss	_flags^0,0,c
  6337  0050D8  D00A               	goto	l9635
  6338                           
  6339                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  6340  0050DA  C02B  F020         	movff	pad@buf,fputs@s
  6341  0050DE  C02C  F021         	movff	pad@buf+1,fputs@s+1
  6342  0050E2  C029  F022         	movff	pad@fp,fputs@fp
  6343  0050E6  C02A  F023         	movff	pad@fp+1,fputs@fp+1
  6344  0050EA  EC3A  F02A         	call	_fputs	;wreg free
  6345  0050EE                     l9635:
  6346                           
  6347                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  6348  0050EE  BE2E               	btfsc	(pad@p+1)^0,7,c
  6349  0050F0  D005               	goto	l9639
  6350  0050F2  C02D  F032         	movff	pad@p,pad@w
  6351  0050F6  C02E  F033         	movff	pad@p+1,pad@w+1
  6352  0050FA  D004               	goto	l1977
  6353  0050FC                     l9639:
  6354  0050FC  0E00               	movlw	0
  6355  0050FE  6E33               	movwf	(pad@w+1)^0,c
  6356  005100  0E00               	movlw	0
  6357  005102  6E32               	movwf	pad@w^0,c
  6358  005104                     l1977:
  6359                           
  6360                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  6361  005104  0E00               	movlw	0
  6362  005106  6E31               	movwf	(pad@i+1)^0,c
  6363  005108  0E00               	movlw	0
  6364  00510A  6E30               	movwf	pad@i^0,c
  6365                           
  6366                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  6367  00510C  D00C               	goto	l9645
  6368  00510E                     l9641:
  6369                           
  6370                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  6371  00510E  0E00               	movlw	0
  6372  005110  6E18               	movwf	(fputc@c+1)^0,c
  6373  005112  0E20               	movlw	32
  6374  005114  6E17               	movwf	fputc@c^0,c
  6375  005116  C029  F019         	movff	pad@fp,fputc@fp
  6376  00511A  C02A  F01A         	movff	pad@fp+1,fputc@fp+1
  6377  00511E  EC0F  F027         	call	_fputc	;wreg free
  6378                           
  6379                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 86:         ++i;
  6380  005122  4A30               	infsnz	pad@i^0,f,c
  6381  005124  2A31               	incf	(pad@i+1)^0,f,c
  6382  005126                     l9645:
  6383                           
  6384                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  6385  005126  5032               	movf	pad@w^0,w,c
  6386  005128  5C30               	subwf	pad@i^0,w,c
  6387  00512A  5031               	movf	(pad@i+1)^0,w,c
  6388  00512C  0A80               	xorlw	128
  6389  00512E  6E2F               	movwf	??_pad^0,c
  6390  005130  5033               	movf	(pad@w+1)^0,w,c
  6391  005132  0A80               	xorlw	128
  6392  005134  582F               	subwfb	??_pad^0,w,c
  6393  005136  A0D8               	btfss	status,0,c
  6394  005138  D7EA               	goto	l9641
  6395                           
  6396                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  6397  00513A  B03D               	btfsc	_flags^0,0,c
  6398  00513C  D00A               	goto	l9649
  6399                           
  6400                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  6401  00513E  C02B  F020         	movff	pad@buf,fputs@s
  6402  005142  C02C  F021         	movff	pad@buf+1,fputs@s+1
  6403  005146  C029  F022         	movff	pad@fp,fputs@fp
  6404  00514A  C02A  F023         	movff	pad@fp+1,fputs@fp+1
  6405  00514E  EC3A  F02A         	call	_fputs	;wreg free
  6406  005152                     l9649:
  6407                           
  6408                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 94:     return (int)(strlen(b
      +                          uf) + (size_t)w);
  6409  005152  C02B  F015         	movff	pad@buf,strlen@s
  6410  005156  C02C  F016         	movff	pad@buf+1,strlen@s+1
  6411  00515A  EC3F  F02B         	call	_strlen	;wreg free
  6412  00515E  5032               	movf	pad@w^0,w,c
  6413  005160  2415               	addwf	?_strlen^0,w,c
  6414  005162  6E29               	movwf	?_pad^0,c
  6415  005164  5033               	movf	(pad@w+1)^0,w,c
  6416  005166  2016               	addwfc	(?_strlen+1)^0,w,c
  6417  005168  6E2A               	movwf	(?_pad+1)^0,c
  6418  00516A  0012               	return		;funcret
  6419  00516C                     __end_of_pad:
  6420                           	callstack 0
  6421                           
  6422 ;; *************** function _floorf *****************
  6423 ;; Defined at:
  6424 ;;		line 3 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/floorf.c"
  6425 ;; Parameters:    Size  Location     Type
  6426 ;;  x               4   45[COMRAM] float 
  6427 ;; Auto vars:     Size  Location     Type
  6428 ;;  u               4    6[BANK0 ] struct .
  6429 ;;  m               4    0[BANK0 ] unsigned long 
  6430 ;;  e               2    4[BANK0 ] int 
  6431 ;; Return value:  Size  Location     Type
  6432 ;;                  4   45[COMRAM] float 
  6433 ;; Registers used:
  6434 ;;		wreg, status,2, status,0
  6435 ;; Tracked objects:
  6436 ;;		On entry : 3F/0
  6437 ;;		On exit  : 3F/0
  6438 ;;		Unchanged: 0/0
  6439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6440 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6441 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6442 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6443 ;;      Totals:        10      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6444 ;;Total ram usage:       20 bytes
  6445 ;; Hardware stack levels used: 1
  6446 ;; Hardware stack levels required when called: 4
  6447 ;; This function calls:
  6448 ;;		Nothing
  6449 ;; This function is called by:
  6450 ;;		_efgtoa
  6451 ;; This function uses a non-reentrant model
  6452 ;;
  6453                           
  6454                           	psect	text16
  6455  00400C                     __ptext16:
  6456                           	callstack 0
  6457  00400C                     _floorf:
  6458                           	callstack 20
  6459                           
  6460                           ; BSR set to: 0
  6461                           
  6462                           ;incstack = 0
  6463  00400C  C18C  F066         	movff	floorf@F526,floorf@u
  6464  004010  C18D  F067         	movff	floorf@F526+1,floorf@u+1
  6465  004014  C18E  F068         	movff	floorf@F526+2,floorf@u+2
  6466  004018  C18F  F069         	movff	floorf@F526+3,floorf@u+3
  6467  00401C  C02E  F066         	movff	floorf@x,floorf@u
  6468  004020  C02F  F067         	movff	floorf@x+1,floorf@u+1
  6469  004024  C030  F068         	movff	floorf@x+2,floorf@u+2
  6470  004028  C031  F069         	movff	floorf@x+3,floorf@u+3
  6471                           
  6472                           ; BSR set to: 0
  6473  00402C  0E81               	movlw	129
  6474  00402E  6E32               	movwf	??_floorf^0,c
  6475  004030  0EFF               	movlw	255
  6476  004032  6E33               	movwf	(??_floorf+1)^0,c
  6477  004034  C066  F034         	movff	floorf@u,??_floorf+2
  6478  004038  C067  F035         	movff	floorf@u+1,??_floorf+3
  6479  00403C  C068  F036         	movff	floorf@u+2,??_floorf+4
  6480  004040  C069  F037         	movff	floorf@u+3,??_floorf+5
  6481  004044  0E18               	movlw	24
  6482  004046  D005               	goto	u10960
  6483  004048                     u10965:
  6484  004048  90D8               	bcf	status,0,c
  6485  00404A  3237               	rrcf	(??_floorf+5)^0,f,c
  6486  00404C  3236               	rrcf	(??_floorf+4)^0,f,c
  6487  00404E  3235               	rrcf	(??_floorf+3)^0,f,c
  6488  004050  3234               	rrcf	(??_floorf+2)^0,f,c
  6489  004052                     u10960:
  6490  004052  2EE8               	decfsz	wreg,f,c
  6491  004054  D7F9               	goto	u10965
  6492  004056  5034               	movf	(??_floorf+2)^0,w,c
  6493  004058  2432               	addwf	??_floorf^0,w,c
  6494  00405A  6F64               	movwf	floorf@e& (0+255),b
  6495  00405C  0E00               	movlw	0
  6496  00405E  2033               	addwfc	(??_floorf+1)^0,w,c
  6497  004060  6F65               	movwf	(floorf@e+1)& (0+255),b
  6498  004062  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  6499  004064  D00F               	goto	l9695
  6500  004066  5165               	movf	(floorf@e+1)& (0+255),w,b
  6501  004068  E104               	bnz	u10970
  6502  00406A  0E17               	movlw	23
  6503  00406C  5D64               	subwf	floorf@e& (0+255),w,b
  6504  00406E  A0D8               	btfss	status,0,c
  6505  004070  D009               	goto	l9695
  6506  004072                     u10970:
  6507                           
  6508                           ; BSR set to: 0
  6509  004072  C02E  F02E         	movff	floorf@x,?_floorf
  6510  004076  C02F  F02F         	movff	floorf@x+1,?_floorf+1
  6511  00407A  C030  F030         	movff	floorf@x+2,?_floorf+2
  6512  00407E  C031  F031         	movff	floorf@x+3,?_floorf+3
  6513  004082  0012               	return	
  6514  004084                     l9695:
  6515                           
  6516                           ; BSR set to: 0
  6517  004084  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  6518  004086  D05C               	goto	l9705
  6519                           
  6520                           ; BSR set to: 0
  6521  004088  C064  F032         	movff	floorf@e,??_floorf
  6522  00408C  0EFF               	movlw	255
  6523  00408E  6E33               	movwf	(??_floorf+1)^0,c
  6524  004090  0EFF               	movlw	255
  6525  004092  6E34               	movwf	(??_floorf+2)^0,c
  6526  004094  0E7F               	movlw	127
  6527  004096  6E35               	movwf	(??_floorf+3)^0,c
  6528  004098  0E00               	movlw	0
  6529  00409A  6E36               	movwf	(??_floorf+4)^0,c
  6530  00409C                     u10995:
  6531  00409C  6632               	tstfsz	??_floorf^0,c
  6532  00409E  D001               	goto	u10996
  6533  0040A0  D007               	goto	u10997
  6534  0040A2                     u10996:
  6535  0040A2  3436               	rlcf	(??_floorf+4)^0,w,c
  6536  0040A4  3236               	rrcf	(??_floorf+4)^0,f,c
  6537  0040A6  3235               	rrcf	(??_floorf+3)^0,f,c
  6538  0040A8  3234               	rrcf	(??_floorf+2)^0,f,c
  6539  0040AA  3233               	rrcf	(??_floorf+1)^0,f,c
  6540  0040AC  2E32               	decfsz	??_floorf^0,f,c
  6541  0040AE  D7F6               	goto	u10995
  6542  0040B0                     u10997:
  6543  0040B0  C033  F060         	movff	??_floorf+1,floorf@m
  6544  0040B4  C034  F061         	movff	??_floorf+2,floorf@m+1
  6545  0040B8  C035  F062         	movff	??_floorf+3,floorf@m+2
  6546  0040BC  C036  F063         	movff	??_floorf+4,floorf@m+3
  6547  0040C0  0100               	movlb	0	; () banked
  6548  0040C2  5160               	movf	floorf@m& (0+255),w,b
  6549  0040C4  1566               	andwf	floorf@u& (0+255),w,b
  6550  0040C6  6E32               	movwf	??_floorf^0,c
  6551  0040C8  5161               	movf	(floorf@m+1)& (0+255),w,b
  6552  0040CA  1567               	andwf	(floorf@u+1)& (0+255),w,b
  6553  0040CC  6E33               	movwf	(??_floorf+1)^0,c
  6554  0040CE  5162               	movf	(floorf@m+2)& (0+255),w,b
  6555  0040D0  1568               	andwf	(floorf@u+2)& (0+255),w,b
  6556  0040D2  6E34               	movwf	(??_floorf+2)^0,c
  6557  0040D4  5163               	movf	(floorf@m+3)& (0+255),w,b
  6558  0040D6  1569               	andwf	(floorf@u+3)& (0+255),w,b
  6559  0040D8  6E35               	movwf	(??_floorf+3)^0,c
  6560  0040DA  5032               	movf	??_floorf^0,w,c
  6561  0040DC  1033               	iorwf	(??_floorf+1)^0,w,c
  6562  0040DE  1034               	iorwf	(??_floorf+2)^0,w,c
  6563  0040E0  1035               	iorwf	(??_floorf+3)^0,w,c
  6564  0040E2  B4D8               	btfsc	status,2,c
  6565  0040E4  D7C6               	goto	u10970
  6566                           
  6567                           ; BSR set to: 0
  6568  0040E6  C066  F032         	movff	floorf@u,??_floorf
  6569  0040EA  C067  F033         	movff	floorf@u+1,??_floorf+1
  6570  0040EE  C068  F034         	movff	floorf@u+2,??_floorf+2
  6571  0040F2  C069  F035         	movff	floorf@u+3,??_floorf+3
  6572  0040F6  0E20               	movlw	32
  6573  0040F8  D005               	goto	u11010
  6574  0040FA                     u11015:
  6575  0040FA  90D8               	bcf	status,0,c
  6576  0040FC  3235               	rrcf	(??_floorf+3)^0,f,c
  6577  0040FE  3234               	rrcf	(??_floorf+2)^0,f,c
  6578  004100  3233               	rrcf	(??_floorf+1)^0,f,c
  6579  004102  3232               	rrcf	??_floorf^0,f,c
  6580  004104                     u11010:
  6581  004104  2EE8               	decfsz	wreg,f,c
  6582  004106  D7F9               	goto	u11015
  6583  004108  5032               	movf	??_floorf^0,w,c
  6584  00410A  B4D8               	btfsc	status,2,c
  6585  00410C  D008               	goto	l2207
  6586                           
  6587                           ; BSR set to: 0
  6588  00410E  5160               	movf	floorf@m& (0+255),w,b
  6589  004110  2766               	addwf	floorf@u& (0+255),f,b
  6590  004112  5161               	movf	(floorf@m+1)& (0+255),w,b
  6591  004114  2367               	addwfc	(floorf@u+1)& (0+255),f,b
  6592  004116  5162               	movf	(floorf@m+2)& (0+255),w,b
  6593  004118  2368               	addwfc	(floorf@u+2)& (0+255),f,b
  6594  00411A  5163               	movf	(floorf@m+3)& (0+255),w,b
  6595  00411C  2369               	addwfc	(floorf@u+3)& (0+255),f,b
  6596  00411E                     l2207:
  6597                           
  6598                           ; BSR set to: 0
  6599  00411E  1D60               	comf	floorf@m& (0+255),w,b
  6600  004120  6E32               	movwf	??_floorf^0,c
  6601  004122  1D61               	comf	(floorf@m+1)& (0+255),w,b
  6602  004124  6E33               	movwf	(??_floorf+1)^0,c
  6603  004126  1D62               	comf	(floorf@m+2)& (0+255),w,b
  6604  004128  6E34               	movwf	(??_floorf+2)^0,c
  6605  00412A  1D63               	comf	(floorf@m+3)& (0+255),w,b
  6606  00412C  6E35               	movwf	(??_floorf+3)^0,c
  6607  00412E  5032               	movf	??_floorf^0,w,c
  6608  004130  1766               	andwf	floorf@u& (0+255),f,b
  6609  004132  5033               	movf	(??_floorf+1)^0,w,c
  6610  004134  1767               	andwf	(floorf@u+1)& (0+255),f,b
  6611  004136  5034               	movf	(??_floorf+2)^0,w,c
  6612  004138  1768               	andwf	(floorf@u+2)& (0+255),f,b
  6613  00413A  5035               	movf	(??_floorf+3)^0,w,c
  6614  00413C  1769               	andwf	(floorf@u+3)& (0+255),f,b
  6615  00413E  D032               	goto	l9713
  6616  004140                     l9705:
  6617                           
  6618                           ; BSR set to: 0
  6619  004140  C066  F032         	movff	floorf@u,??_floorf
  6620  004144  C067  F033         	movff	floorf@u+1,??_floorf+1
  6621  004148  C068  F034         	movff	floorf@u+2,??_floorf+2
  6622  00414C  C069  F035         	movff	floorf@u+3,??_floorf+3
  6623  004150  0E20               	movlw	32
  6624  004152  D005               	goto	u11030
  6625  004154                     u11035:
  6626  004154  90D8               	bcf	status,0,c
  6627  004156  3235               	rrcf	(??_floorf+3)^0,f,c
  6628  004158  3234               	rrcf	(??_floorf+2)^0,f,c
  6629  00415A  3233               	rrcf	(??_floorf+1)^0,f,c
  6630  00415C  3232               	rrcf	??_floorf^0,f,c
  6631  00415E                     u11030:
  6632  00415E  2EE8               	decfsz	wreg,f,c
  6633  004160  D7F9               	goto	u11035
  6634  004162  6632               	tstfsz	??_floorf^0,c
  6635  004164  D008               	goto	l9709
  6636                           
  6637                           ; BSR set to: 0
  6638  004166  0E00               	movlw	0
  6639  004168  6F66               	movwf	floorf@u& (0+255),b
  6640  00416A  0E00               	movlw	0
  6641  00416C  6F67               	movwf	(floorf@u+1)& (0+255),b
  6642  00416E  0E00               	movlw	0
  6643  004170  6F68               	movwf	(floorf@u+2)& (0+255),b
  6644  004172  0E00               	movlw	0
  6645  004174  D016               	goto	L7
  6646  004176                     l9709:
  6647                           
  6648                           ; BSR set to: 0
  6649  004176  90D8               	bcf	status,0,c
  6650  004178  3566               	rlcf	floorf@u& (0+255),w,b
  6651  00417A  6E32               	movwf	??_floorf^0,c
  6652  00417C  3567               	rlcf	(floorf@u+1)& (0+255),w,b
  6653  00417E  6E33               	movwf	(??_floorf+1)^0,c
  6654  004180  3568               	rlcf	(floorf@u+2)& (0+255),w,b
  6655  004182  6E34               	movwf	(??_floorf+2)^0,c
  6656  004184  3569               	rlcf	(floorf@u+3)& (0+255),w,b
  6657  004186  6E35               	movwf	(??_floorf+3)^0,c
  6658  004188  5032               	movf	??_floorf^0,w,c
  6659  00418A  1033               	iorwf	(??_floorf+1)^0,w,c
  6660  00418C  1034               	iorwf	(??_floorf+2)^0,w,c
  6661  00418E  1035               	iorwf	(??_floorf+3)^0,w,c
  6662  004190  B4D8               	btfsc	status,2,c
  6663  004192  D008               	goto	l9713
  6664                           
  6665                           ; BSR set to: 0
  6666  004194  0E00               	movlw	0
  6667  004196  6F66               	movwf	floorf@u& (0+255),b
  6668  004198  0E00               	movlw	0
  6669  00419A  6F67               	movwf	(floorf@u+1)& (0+255),b
  6670  00419C  0E80               	movlw	128
  6671  00419E  6F68               	movwf	(floorf@u+2)& (0+255),b
  6672  0041A0  0EBF               	movlw	191
  6673  0041A2                     L7:
  6674  0041A2  6F69               	movwf	(floorf@u+3)& (0+255),b
  6675  0041A4                     l9713:
  6676                           
  6677                           ; BSR set to: 0
  6678  0041A4  C066  F02E         	movff	floorf@u,?_floorf
  6679  0041A8  C067  F02F         	movff	floorf@u+1,?_floorf+1
  6680  0041AC  C068  F030         	movff	floorf@u+2,?_floorf+2
  6681  0041B0  C069  F031         	movff	floorf@u+3,?_floorf+3
  6682                           
  6683                           ; BSR set to: 0
  6684  0041B4  0012               	return		;funcret
  6685  0041B6                     __end_of_floorf:
  6686                           	callstack 0
  6687                           
  6688 ;; *************** function ___fpclassifyf *****************
  6689 ;; Defined at:
  6690 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/__fpclassifyf.c"
  6691 ;; Parameters:    Size  Location     Type
  6692 ;;  x               4   20[COMRAM] float 
  6693 ;; Auto vars:     Size  Location     Type
  6694 ;;  u               4   30[COMRAM] struct .
  6695 ;;  e               2   28[COMRAM] int 
  6696 ;; Return value:  Size  Location     Type
  6697 ;;                  2   20[COMRAM] int 
  6698 ;; Registers used:
  6699 ;;		wreg, status,2, status,0
  6700 ;; Tracked objects:
  6701 ;;		On entry : 0/0
  6702 ;;		On exit  : 0/0
  6703 ;;		Unchanged: 0/0
  6704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6705 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6706 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6707 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6708 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6709 ;;Total ram usage:       14 bytes
  6710 ;; Hardware stack levels used: 1
  6711 ;; Hardware stack levels required when called: 4
  6712 ;; This function calls:
  6713 ;;		Nothing
  6714 ;; This function is called by:
  6715 ;;		_efgtoa
  6716 ;; This function uses a non-reentrant model
  6717 ;;
  6718                           
  6719                           	psect	text17
  6720  004BE0                     __ptext17:
  6721                           	callstack 0
  6722  004BE0                     ___fpclassifyf:
  6723                           	callstack 20
  6724                           
  6725                           ; BSR set to: 0
  6726                           ;incstack = 0
  6727  004BE0  C190  F01F         	movff	___fpclassifyf@F465,___fpclassifyf@u
  6728  004BE4  C191  F020         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  6729  004BE8  C192  F021         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  6730  004BEC  C193  F022         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  6731  004BF0  C015  F01F         	movff	___fpclassifyf@x,___fpclassifyf@u
  6732  004BF4  C016  F020         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  6733  004BF8  C017  F021         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  6734  004BFC  C018  F022         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  6735  004C00  C01F  F019         	movff	___fpclassifyf@u,??___fpclassifyf
  6736  004C04  C020  F01A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6737  004C08  C021  F01B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6738  004C0C  C022  F01C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6739  004C10  0E18               	movlw	24
  6740  004C12  D005               	goto	u10860
  6741  004C14                     u10865:
  6742  004C14  90D8               	bcf	status,0,c
  6743  004C16  321C               	rrcf	(??___fpclassifyf+3)^0,f,c
  6744  004C18  321B               	rrcf	(??___fpclassifyf+2)^0,f,c
  6745  004C1A  321A               	rrcf	(??___fpclassifyf+1)^0,f,c
  6746  004C1C  3219               	rrcf	??___fpclassifyf^0,f,c
  6747  004C1E                     u10860:
  6748  004C1E  2EE8               	decfsz	wreg,f,c
  6749  004C20  D7F9               	goto	u10865
  6750  004C22  5019               	movf	??___fpclassifyf^0,w,c
  6751  004C24  6E1D               	movwf	___fpclassifyf@e^0,c
  6752  004C26  6A1E               	clrf	(___fpclassifyf@e+1)^0,c
  6753  004C28  501D               	movf	___fpclassifyf@e^0,w,c
  6754  004C2A  101E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6755  004C2C  A4D8               	btfss	status,2,c
  6756  004C2E  D019               	goto	l9665
  6757  004C30  90D8               	bcf	status,0,c
  6758  004C32  341F               	rlcf	___fpclassifyf@u^0,w,c
  6759  004C34  6E19               	movwf	??___fpclassifyf^0,c
  6760  004C36  3420               	rlcf	(___fpclassifyf@u+1)^0,w,c
  6761  004C38  6E1A               	movwf	(??___fpclassifyf+1)^0,c
  6762  004C3A  3421               	rlcf	(___fpclassifyf@u+2)^0,w,c
  6763  004C3C  6E1B               	movwf	(??___fpclassifyf+2)^0,c
  6764  004C3E  3422               	rlcf	(___fpclassifyf@u+3)^0,w,c
  6765  004C40  6E1C               	movwf	(??___fpclassifyf+3)^0,c
  6766  004C42  5019               	movf	??___fpclassifyf^0,w,c
  6767  004C44  101A               	iorwf	(??___fpclassifyf+1)^0,w,c
  6768  004C46  101B               	iorwf	(??___fpclassifyf+2)^0,w,c
  6769  004C48  101C               	iorwf	(??___fpclassifyf+3)^0,w,c
  6770  004C4A  A4D8               	btfss	status,2,c
  6771  004C4C  D005               	goto	l9661
  6772  004C4E  0E00               	movlw	0
  6773  004C50  6E16               	movwf	(?___fpclassifyf+1)^0,c
  6774  004C52  0E02               	movlw	2
  6775  004C54  6E15               	movwf	?___fpclassifyf^0,c
  6776  004C56  0012               	return	
  6777  004C58                     l9661:
  6778  004C58  0E00               	movlw	0
  6779  004C5A  6E16               	movwf	(?___fpclassifyf+1)^0,c
  6780  004C5C  0E03               	movlw	3
  6781  004C5E  6E15               	movwf	?___fpclassifyf^0,c
  6782  004C60  0012               	return	
  6783  004C62                     l9665:
  6784  004C62  281D               	incf	___fpclassifyf@e^0,w,c
  6785  004C64  101E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6786  004C66  A4D8               	btfss	status,2,c
  6787  004C68  D01C               	goto	l9671
  6788  004C6A  C01F  F019         	movff	___fpclassifyf@u,??___fpclassifyf
  6789  004C6E  C020  F01A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6790  004C72  C021  F01B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6791  004C76  C022  F01C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6792  004C7A  0E09               	movlw	9
  6793  004C7C                     u10905:
  6794  004C7C  90D8               	bcf	status,0,c
  6795  004C7E  3619               	rlcf	??___fpclassifyf^0,f,c
  6796  004C80  361A               	rlcf	(??___fpclassifyf+1)^0,f,c
  6797  004C82  361B               	rlcf	(??___fpclassifyf+2)^0,f,c
  6798  004C84  361C               	rlcf	(??___fpclassifyf+3)^0,f,c
  6799  004C86  2EE8               	decfsz	wreg,f,c
  6800  004C88  D7F9               	goto	u10905
  6801  004C8A  5019               	movf	??___fpclassifyf^0,w,c
  6802  004C8C  101A               	iorwf	(??___fpclassifyf+1)^0,w,c
  6803  004C8E  101B               	iorwf	(??___fpclassifyf+2)^0,w,c
  6804  004C90  101C               	iorwf	(??___fpclassifyf+3)^0,w,c
  6805  004C92  A4D8               	btfss	status,2,c
  6806  004C94  D002               	goto	u10910
  6807  004C96  0E01               	movlw	1
  6808  004C98  D001               	goto	u10920
  6809  004C9A                     u10910:
  6810  004C9A  0E00               	movlw	0
  6811  004C9C                     u10920:
  6812  004C9C  6E15               	movwf	?___fpclassifyf^0,c
  6813  004C9E  6A16               	clrf	(?___fpclassifyf+1)^0,c
  6814  004CA0  0012               	return	
  6815  004CA2                     l9671:
  6816  004CA2  0E00               	movlw	0
  6817  004CA4  6E16               	movwf	(?___fpclassifyf+1)^0,c
  6818  004CA6  0E04               	movlw	4
  6819  004CA8  6E15               	movwf	?___fpclassifyf^0,c
  6820  004CAA  0012               	return		;funcret
  6821  004CAC                     __end_of___fpclassifyf:
  6822                           	callstack 0
  6823                           
  6824 ;; *************** function ___fltol *****************
  6825 ;; Defined at:
  6826 ;;		line 43 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/fltol.c"
  6827 ;; Parameters:    Size  Location     Type
  6828 ;;  f1              4   20[COMRAM] int 
  6829 ;; Auto vars:     Size  Location     Type
  6830 ;;  exp1            1   29[COMRAM] unsigned char 
  6831 ;;  sign1           1   28[COMRAM] unsigned char 
  6832 ;; Return value:  Size  Location     Type
  6833 ;;                  4   20[COMRAM] long 
  6834 ;; Registers used:
  6835 ;;		wreg, status,2, status,0
  6836 ;; Tracked objects:
  6837 ;;		On entry : 3F/0
  6838 ;;		On exit  : 3F/0
  6839 ;;		Unchanged: 3F/0
  6840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6841 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6842 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6843 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6844 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6845 ;;Total ram usage:       10 bytes
  6846 ;; Hardware stack levels used: 1
  6847 ;; Hardware stack levels required when called: 4
  6848 ;; This function calls:
  6849 ;;		Nothing
  6850 ;; This function is called by:
  6851 ;;		_efgtoa
  6852 ;; This function uses a non-reentrant model
  6853 ;;
  6854                           
  6855                           	psect	text18
  6856  004CAC                     __ptext18:
  6857                           	callstack 0
  6858  004CAC                     ___fltol:
  6859                           	callstack 20
  6860                           
  6861                           ; BSR set to: 0
  6862                           
  6863                           ;incstack = 0
  6864  004CAC  3417               	rlcf	(___fltol@f1+2)^0,w,c
  6865  004CAE  3418               	rlcf	(___fltol@f1+3)^0,w,c
  6866  004CB0  6E1E               	movwf	___fltol@exp1^0,c
  6867  004CB2  501E               	movf	___fltol@exp1^0,w,c
  6868  004CB4  A4D8               	btfss	status,2,c
  6869  004CB6  D009               	goto	l9555
  6870  004CB8                     u10680:
  6871                           
  6872                           ; BSR set to: 0
  6873  004CB8  0E00               	movlw	0
  6874  004CBA  6E15               	movwf	?___fltol^0,c
  6875  004CBC  0E00               	movlw	0
  6876  004CBE  6E16               	movwf	(?___fltol+1)^0,c
  6877  004CC0  0E00               	movlw	0
  6878  004CC2  6E17               	movwf	(?___fltol+2)^0,c
  6879  004CC4  0E00               	movlw	0
  6880  004CC6  6E18               	movwf	(?___fltol+3)^0,c
  6881  004CC8  0012               	return	
  6882  004CCA                     l9555:
  6883                           
  6884                           ; BSR set to: 0
  6885  004CCA  C015  F019         	movff	___fltol@f1,??___fltol
  6886  004CCE  C016  F01A         	movff	___fltol@f1+1,??___fltol+1
  6887  004CD2  C017  F01B         	movff	___fltol@f1+2,??___fltol+2
  6888  004CD6  C018  F01C         	movff	___fltol@f1+3,??___fltol+3
  6889  004CDA  0E20               	movlw	32
  6890  004CDC  D005               	goto	u10690
  6891  004CDE                     u10695:
  6892  004CDE  90D8               	bcf	status,0,c
  6893  004CE0  321C               	rrcf	(??___fltol+3)^0,f,c
  6894  004CE2  321B               	rrcf	(??___fltol+2)^0,f,c
  6895  004CE4  321A               	rrcf	(??___fltol+1)^0,f,c
  6896  004CE6  3219               	rrcf	??___fltol^0,f,c
  6897  004CE8                     u10690:
  6898  004CE8  2EE8               	decfsz	wreg,f,c
  6899  004CEA  D7F9               	goto	u10695
  6900  004CEC  5019               	movf	??___fltol^0,w,c
  6901  004CEE  6E1D               	movwf	___fltol@sign1^0,c
  6902                           
  6903                           ; BSR set to: 0
  6904  004CF0  8E17               	bsf	(___fltol@f1+2)^0,7,c
  6905                           
  6906                           ; BSR set to: 0
  6907  004CF2  0EFF               	movlw	255
  6908  004CF4  1615               	andwf	___fltol@f1^0,f,c
  6909  004CF6  0EFF               	movlw	255
  6910  004CF8  1616               	andwf	(___fltol@f1+1)^0,f,c
  6911  004CFA  0EFF               	movlw	255
  6912  004CFC  1617               	andwf	(___fltol@f1+2)^0,f,c
  6913  004CFE  0E00               	movlw	0
  6914  004D00  1618               	andwf	(___fltol@f1+3)^0,f,c
  6915                           
  6916                           ; BSR set to: 0
  6917  004D02  0E96               	movlw	150
  6918  004D04  5E1E               	subwf	___fltol@exp1^0,f,c
  6919                           
  6920                           ; BSR set to: 0
  6921  004D06  AE1E               	btfss	___fltol@exp1^0,7,c
  6922  004D08  D00D               	goto	l9575
  6923                           
  6924                           ; BSR set to: 0
  6925  004D0A  501E               	movf	___fltol@exp1^0,w,c
  6926  004D0C  0A80               	xorlw	128
  6927  004D0E  0F97               	addlw	151
  6928  004D10  A0D8               	btfss	status,0,c
  6929  004D12  D7D2               	goto	u10680
  6930  004D14                     l9571:
  6931                           
  6932                           ; BSR set to: 0
  6933  004D14  90D8               	bcf	status,0,c
  6934  004D16  3218               	rrcf	(___fltol@f1+3)^0,f,c
  6935  004D18  3217               	rrcf	(___fltol@f1+2)^0,f,c
  6936  004D1A  3216               	rrcf	(___fltol@f1+1)^0,f,c
  6937  004D1C  3215               	rrcf	___fltol@f1^0,f,c
  6938                           
  6939                           ; BSR set to: 0
  6940  004D1E  3E1E               	incfsz	___fltol@exp1^0,f,c
  6941  004D20  D7F9               	goto	l9571
  6942  004D22  D00D               	goto	u10730
  6943  004D24                     l9575:
  6944                           
  6945                           ; BSR set to: 0
  6946  004D24  0E1F               	movlw	31
  6947  004D26  641E               	cpfsgt	___fltol@exp1^0,c
  6948  004D28  D007               	goto	l9583
  6949  004D2A  D7C6               	goto	u10680
  6950  004D2C                     l9581:
  6951                           
  6952                           ; BSR set to: 0
  6953  004D2C  90D8               	bcf	status,0,c
  6954  004D2E  3615               	rlcf	___fltol@f1^0,f,c
  6955  004D30  3616               	rlcf	(___fltol@f1+1)^0,f,c
  6956  004D32  3617               	rlcf	(___fltol@f1+2)^0,f,c
  6957  004D34  3618               	rlcf	(___fltol@f1+3)^0,f,c
  6958  004D36  061E               	decf	___fltol@exp1^0,f,c
  6959  004D38                     l9583:
  6960                           
  6961                           ; BSR set to: 0
  6962  004D38  501E               	movf	___fltol@exp1^0,w,c
  6963  004D3A  A4D8               	btfss	status,2,c
  6964  004D3C  D7F7               	goto	l9581
  6965  004D3E                     u10730:
  6966                           
  6967                           ; BSR set to: 0
  6968  004D3E  501D               	movf	___fltol@sign1^0,w,c
  6969  004D40  B4D8               	btfsc	status,2,c
  6970  004D42  D008               	goto	l9589
  6971                           
  6972                           ; BSR set to: 0
  6973  004D44  1E18               	comf	(___fltol@f1+3)^0,f,c
  6974  004D46  1E17               	comf	(___fltol@f1+2)^0,f,c
  6975  004D48  1E16               	comf	(___fltol@f1+1)^0,f,c
  6976  004D4A  6C15               	negf	___fltol@f1^0,c
  6977  004D4C  0E00               	movlw	0
  6978  004D4E  2216               	addwfc	(___fltol@f1+1)^0,f,c
  6979  004D50  2217               	addwfc	(___fltol@f1+2)^0,f,c
  6980  004D52  2218               	addwfc	(___fltol@f1+3)^0,f,c
  6981  004D54                     l9589:
  6982                           
  6983                           ; BSR set to: 0
  6984  004D54  C015  F015         	movff	___fltol@f1,?___fltol
  6985  004D58  C016  F016         	movff	___fltol@f1+1,?___fltol+1
  6986  004D5C  C017  F017         	movff	___fltol@f1+2,?___fltol+2
  6987  004D60  C018  F018         	movff	___fltol@f1+3,?___fltol+3
  6988                           
  6989                           ; BSR set to: 0
  6990  004D64  0012               	return		;funcret
  6991  004D66                     __end_of___fltol:
  6992                           	callstack 0
  6993                           
  6994 ;; *************** function ___flsub *****************
  6995 ;; Defined at:
  6996 ;;		line 245 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/sprcadd.c"
  6997 ;; Parameters:    Size  Location     Type
  6998 ;;  b               4   46[COMRAM] long 
  6999 ;;  a               4   50[COMRAM] long 
  7000 ;; Auto vars:     Size  Location     Type
  7001 ;;		None
  7002 ;; Return value:  Size  Location     Type
  7003 ;;                  4   46[COMRAM] long 
  7004 ;; Registers used:
  7005 ;;		wreg, status,2, status,0, cstack
  7006 ;; Tracked objects:
  7007 ;;		On entry : 3F/0
  7008 ;;		On exit  : 3F/0
  7009 ;;		Unchanged: 3F/0
  7010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7011 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7014 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7015 ;;Total ram usage:        8 bytes
  7016 ;; Hardware stack levels used: 1
  7017 ;; Hardware stack levels required when called: 5
  7018 ;; This function calls:
  7019 ;;		___fladd
  7020 ;; This function is called by:
  7021 ;;		_efgtoa
  7022 ;; This function uses a non-reentrant model
  7023 ;;
  7024                           
  7025                           	psect	text19
  7026  005712                     __ptext19:
  7027                           	callstack 0
  7028  005712                     ___flsub:
  7029                           	callstack 19
  7030                           
  7031                           ; BSR set to: 0
  7032                           
  7033                           ; BSR set to: 0
  7034                           ;incstack = 0
  7035  005712  0E00               	movlw	0
  7036  005714  1A33               	xorwf	___flsub@a^0,f,c
  7037  005716  0E00               	movlw	0
  7038  005718  1A34               	xorwf	(___flsub@a+1)^0,f,c
  7039  00571A  0E00               	movlw	0
  7040  00571C  1A35               	xorwf	(___flsub@a+2)^0,f,c
  7041  00571E  0E80               	movlw	128
  7042  005720  1A36               	xorwf	(___flsub@a+3)^0,f,c
  7043                           
  7044                           ; BSR set to: 0
  7045  005722  C02F  F015         	movff	___flsub@b,___fladd@b
  7046  005726  C030  F016         	movff	___flsub@b+1,___fladd@b+1
  7047  00572A  C031  F017         	movff	___flsub@b+2,___fladd@b+2
  7048  00572E  C032  F018         	movff	___flsub@b+3,___fladd@b+3
  7049  005732  C033  F019         	movff	___flsub@a,___fladd@a
  7050  005736  C034  F01A         	movff	___flsub@a+1,___fladd@a+1
  7051  00573A  C035  F01B         	movff	___flsub@a+2,___fladd@a+2
  7052  00573E  C036  F01C         	movff	___flsub@a+3,___fladd@a+3
  7053  005742  EC4B  F01A         	call	___fladd	;wreg free
  7054  005746  C015  F02F         	movff	?___fladd,?___flsub
  7055  00574A  C016  F030         	movff	?___fladd+1,?___flsub+1
  7056  00574E  C017  F031         	movff	?___fladd+2,?___flsub+2
  7057  005752  C018  F032         	movff	?___fladd+3,?___flsub+3
  7058                           
  7059                           ; BSR set to: 0
  7060  005756  0012               	return		;funcret
  7061  005758                     __end_of___flsub:
  7062                           	callstack 0
  7063                           
  7064 ;; *************** function ___fladd *****************
  7065 ;; Defined at:
  7066 ;;		line 10 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/sprcadd.c"
  7067 ;; Parameters:    Size  Location     Type
  7068 ;;  b               4   20[COMRAM] long 
  7069 ;;  a               4   24[COMRAM] long 
  7070 ;; Auto vars:     Size  Location     Type
  7071 ;;  grs             1   35[COMRAM] unsigned char 
  7072 ;;  bexp            1   34[COMRAM] unsigned char 
  7073 ;;  aexp            1   33[COMRAM] unsigned char 
  7074 ;;  signs           1   32[COMRAM] unsigned char 
  7075 ;; Return value:  Size  Location     Type
  7076 ;;                  4   20[COMRAM] unsigned char 
  7077 ;; Registers used:
  7078 ;;		wreg, status,2, status,0
  7079 ;; Tracked objects:
  7080 ;;		On entry : 3F/0
  7081 ;;		On exit  : 3F/0
  7082 ;;		Unchanged: 3F/0
  7083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7084 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7085 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7086 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7087 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7088 ;;Total ram usage:       16 bytes
  7089 ;; Hardware stack levels used: 1
  7090 ;; Hardware stack levels required when called: 4
  7091 ;; This function calls:
  7092 ;;		Nothing
  7093 ;; This function is called by:
  7094 ;;		___flsub
  7095 ;;		_efgtoa
  7096 ;; This function uses a non-reentrant model
  7097 ;;
  7098                           
  7099                           	psect	text20
  7100  003496                     __ptext20:
  7101                           	callstack 0
  7102  003496                     ___fladd:
  7103                           	callstack 19
  7104                           
  7105                           ; BSR set to: 0
  7106                           
  7107                           ; BSR set to: 0
  7108                           ;incstack = 0
  7109  003496  5018               	movf	(___fladd@b+3)^0,w,c
  7110  003498  0B80               	andlw	128
  7111  00349A  6E21               	movwf	___fladd@signs^0,c
  7112  00349C  5018               	movf	(___fladd@b+3)^0,w,c
  7113  00349E  2418               	addwf	(___fladd@b+3)^0,w,c
  7114  0034A0  6E23               	movwf	___fladd@bexp^0,c
  7115                           
  7116                           ; BSR set to: 0
  7117  0034A2  BE17               	btfsc	(___fladd@b+2)^0,7,c
  7118                           
  7119                           ; BSR set to: 0
  7120  0034A4  8023               	bsf	___fladd@bexp^0,0,c
  7121                           
  7122                           ; BSR set to: 0
  7123  0034A6  5023               	movf	___fladd@bexp^0,w,c
  7124  0034A8  B4D8               	btfsc	status,2,c
  7125  0034AA  D00D               	goto	l8945
  7126                           
  7127                           ; BSR set to: 0
  7128  0034AC  2823               	incf	___fladd@bexp^0,w,c
  7129  0034AE  A4D8               	btfss	status,2,c
  7130  0034B0  D008               	goto	l8941
  7131                           
  7132                           ; BSR set to: 0
  7133  0034B2  0E00               	movlw	0
  7134  0034B4  6E15               	movwf	___fladd@b^0,c
  7135  0034B6  0E00               	movlw	0
  7136  0034B8  6E16               	movwf	(___fladd@b+1)^0,c
  7137  0034BA  0E00               	movlw	0
  7138  0034BC  6E17               	movwf	(___fladd@b+2)^0,c
  7139  0034BE  0E00               	movlw	0
  7140  0034C0  6E18               	movwf	(___fladd@b+3)^0,c
  7141  0034C2                     l8941:
  7142                           
  7143                           ; BSR set to: 0
  7144  0034C2  8E17               	bsf	(___fladd@b+2)^0,7,c
  7145  0034C4  D006               	goto	L8
  7146  0034C6                     l8945:
  7147                           
  7148                           ; BSR set to: 0
  7149  0034C6  0E00               	movlw	0
  7150  0034C8  6E15               	movwf	___fladd@b^0,c
  7151  0034CA  0E00               	movlw	0
  7152  0034CC  6E16               	movwf	(___fladd@b+1)^0,c
  7153  0034CE  0E00               	movlw	0
  7154  0034D0  6E17               	movwf	(___fladd@b+2)^0,c
  7155  0034D2                     L8:
  7156  0034D2  0E00               	movlw	0
  7157  0034D4  6E18               	movwf	(___fladd@b+3)^0,c
  7158                           
  7159                           ; BSR set to: 0
  7160  0034D6  501C               	movf	(___fladd@a+3)^0,w,c
  7161  0034D8  0B80               	andlw	128
  7162  0034DA  6E22               	movwf	___fladd@aexp^0,c
  7163                           
  7164                           ; BSR set to: 0
  7165  0034DC  5021               	movf	___fladd@signs^0,w,c
  7166  0034DE  1822               	xorwf	___fladd@aexp^0,w,c
  7167  0034E0  A4D8               	btfss	status,2,c
  7168                           
  7169                           ; BSR set to: 0
  7170  0034E2  8C21               	bsf	___fladd@signs^0,6,c
  7171                           
  7172                           ; BSR set to: 0
  7173  0034E4  501C               	movf	(___fladd@a+3)^0,w,c
  7174  0034E6  241C               	addwf	(___fladd@a+3)^0,w,c
  7175  0034E8  6E22               	movwf	___fladd@aexp^0,c
  7176                           
  7177                           ; BSR set to: 0
  7178  0034EA  BE1B               	btfsc	(___fladd@a+2)^0,7,c
  7179                           
  7180                           ; BSR set to: 0
  7181  0034EC  8022               	bsf	___fladd@aexp^0,0,c
  7182                           
  7183                           ; BSR set to: 0
  7184  0034EE  5022               	movf	___fladd@aexp^0,w,c
  7185  0034F0  B4D8               	btfsc	status,2,c
  7186  0034F2  D00D               	goto	l8969
  7187                           
  7188                           ; BSR set to: 0
  7189  0034F4  2822               	incf	___fladd@aexp^0,w,c
  7190  0034F6  A4D8               	btfss	status,2,c
  7191  0034F8  D008               	goto	l8965
  7192                           
  7193                           ; BSR set to: 0
  7194  0034FA  0E00               	movlw	0
  7195  0034FC  6E19               	movwf	___fladd@a^0,c
  7196  0034FE  0E00               	movlw	0
  7197  003500  6E1A               	movwf	(___fladd@a+1)^0,c
  7198  003502  0E00               	movlw	0
  7199  003504  6E1B               	movwf	(___fladd@a+2)^0,c
  7200  003506  0E00               	movlw	0
  7201  003508  6E1C               	movwf	(___fladd@a+3)^0,c
  7202  00350A                     l8965:
  7203                           
  7204                           ; BSR set to: 0
  7205  00350A  8E1B               	bsf	(___fladd@a+2)^0,7,c
  7206  00350C  D006               	goto	L9
  7207  00350E                     l8969:
  7208                           
  7209                           ; BSR set to: 0
  7210  00350E  0E00               	movlw	0
  7211  003510  6E19               	movwf	___fladd@a^0,c
  7212  003512  0E00               	movlw	0
  7213  003514  6E1A               	movwf	(___fladd@a+1)^0,c
  7214  003516  0E00               	movlw	0
  7215  003518  6E1B               	movwf	(___fladd@a+2)^0,c
  7216  00351A                     L9:
  7217  00351A  0E00               	movlw	0
  7218  00351C  6E1C               	movwf	(___fladd@a+3)^0,c
  7219                           
  7220                           ; BSR set to: 0
  7221  00351E  5023               	movf	___fladd@bexp^0,w,c
  7222  003520  5C22               	subwf	___fladd@aexp^0,w,c
  7223  003522  B0D8               	btfsc	status,0,c
  7224  003524  D022               	goto	l9007
  7225                           
  7226                           ; BSR set to: 0
  7227  003526  AC21               	btfss	___fladd@signs^0,6,c
  7228  003528  D002               	goto	l8977
  7229                           
  7230                           ; BSR set to: 0
  7231  00352A  0E80               	movlw	128
  7232  00352C  1A21               	xorwf	___fladd@signs^0,f,c
  7233  00352E                     l8977:
  7234                           
  7235                           ; BSR set to: 0
  7236  00352E  C023  F024         	movff	___fladd@bexp,___fladd@grs
  7237                           
  7238                           ; BSR set to: 0
  7239  003532  C022  F023         	movff	___fladd@aexp,___fladd@bexp
  7240                           
  7241                           ; BSR set to: 0
  7242  003536  C024  F022         	movff	___fladd@grs,___fladd@aexp
  7243                           
  7244                           ; BSR set to: 0
  7245  00353A  C015  F024         	movff	___fladd@b,___fladd@grs
  7246                           
  7247                           ; BSR set to: 0
  7248  00353E  C019  F015         	movff	___fladd@a,___fladd@b
  7249                           
  7250                           ; BSR set to: 0
  7251  003542  C024  F019         	movff	___fladd@grs,___fladd@a
  7252                           
  7253                           ; BSR set to: 0
  7254  003546  C016  F024         	movff	___fladd@b+1,___fladd@grs
  7255                           
  7256                           ; BSR set to: 0
  7257  00354A  C01A  F016         	movff	___fladd@a+1,___fladd@b+1
  7258                           
  7259                           ; BSR set to: 0
  7260  00354E  C024  F01A         	movff	___fladd@grs,___fladd@a+1
  7261                           
  7262                           ; BSR set to: 0
  7263  003552  C017  F024         	movff	___fladd@b+2,___fladd@grs
  7264                           
  7265                           ; BSR set to: 0
  7266  003556  C01B  F017         	movff	___fladd@a+2,___fladd@b+2
  7267                           
  7268                           ; BSR set to: 0
  7269  00355A  C024  F01B         	movff	___fladd@grs,___fladd@a+2
  7270                           
  7271                           ; BSR set to: 0
  7272  00355E  C018  F024         	movff	___fladd@b+3,___fladd@grs
  7273                           
  7274                           ; BSR set to: 0
  7275  003562  C01C  F018         	movff	___fladd@a+3,___fladd@b+3
  7276                           
  7277                           ; BSR set to: 0
  7278  003566  C024  F01C         	movff	___fladd@grs,___fladd@a+3
  7279  00356A                     l9007:
  7280                           
  7281                           ; BSR set to: 0
  7282  00356A  0E00               	movlw	0
  7283  00356C  6E24               	movwf	___fladd@grs^0,c
  7284                           
  7285                           ; BSR set to: 0
  7286  00356E  5023               	movf	___fladd@bexp^0,w,c
  7287  003570  C022  F01D         	movff	___fladd@aexp,??___fladd
  7288  003574  6A1E               	clrf	(??___fladd+1)^0,c
  7289  003576  5E1D               	subwf	??___fladd^0,f,c
  7290  003578  0E00               	movlw	0
  7291  00357A  5A1E               	subwfb	(??___fladd+1)^0,f,c
  7292  00357C  BE1E               	btfsc	(??___fladd+1)^0,7,c
  7293  00357E  D02C               	goto	l1777
  7294  003580  501E               	movf	(??___fladd+1)^0,w,c
  7295  003582  E104               	bnz	u9720
  7296  003584  0E1A               	movlw	26
  7297  003586  5C1D               	subwf	??___fladd^0,w,c
  7298  003588  A0D8               	btfss	status,0,c
  7299  00358A  D026               	goto	l1777
  7300  00358C                     u9720:
  7301                           
  7302                           ; BSR set to: 0
  7303  00358C  5015               	movf	___fladd@b^0,w,c
  7304  00358E  1016               	iorwf	(___fladd@b+1)^0,w,c
  7305  003590  1017               	iorwf	(___fladd@b+2)^0,w,c
  7306  003592  1018               	iorwf	(___fladd@b+3)^0,w,c
  7307  003594  B4D8               	btfsc	status,2,c
  7308  003596  D002               	goto	u9730
  7309  003598  0E01               	movlw	1
  7310  00359A  D001               	goto	u9740
  7311  00359C                     u9730:
  7312  00359C  0E00               	movlw	0
  7313  00359E                     u9740:
  7314  00359E  6E24               	movwf	___fladd@grs^0,c
  7315                           
  7316                           ; BSR set to: 0
  7317  0035A0  0E00               	movlw	0
  7318  0035A2  6E15               	movwf	___fladd@b^0,c
  7319  0035A4  0E00               	movlw	0
  7320  0035A6  6E16               	movwf	(___fladd@b+1)^0,c
  7321  0035A8  0E00               	movlw	0
  7322  0035AA  6E17               	movwf	(___fladd@b+2)^0,c
  7323  0035AC  0E00               	movlw	0
  7324  0035AE  6E18               	movwf	(___fladd@b+3)^0,c
  7325                           
  7326                           ; BSR set to: 0
  7327  0035B0  C022  F023         	movff	___fladd@aexp,___fladd@bexp
  7328  0035B4  D015               	goto	u9770
  7329  0035B6                     l1778:
  7330                           
  7331                           ; BSR set to: 0
  7332  0035B6  A024               	btfss	___fladd@grs^0,0,c
  7333  0035B8  D005               	goto	l9019
  7334                           
  7335                           ; BSR set to: 0
  7336  0035BA  90D8               	bcf	status,0,c
  7337  0035BC  3024               	rrcf	___fladd@grs^0,w,c
  7338  0035BE  0901               	iorlw	1
  7339  0035C0  6E24               	movwf	___fladd@grs^0,c
  7340  0035C2  D002               	goto	l9021
  7341  0035C4                     l9019:
  7342                           
  7343                           ; BSR set to: 0
  7344  0035C4  90D8               	bcf	status,0,c
  7345  0035C6  3224               	rrcf	___fladd@grs^0,f,c
  7346  0035C8                     l9021:
  7347                           
  7348                           ; BSR set to: 0
  7349  0035C8  B015               	btfsc	___fladd@b^0,0,c
  7350                           
  7351                           ; BSR set to: 0
  7352  0035CA  8E24               	bsf	___fladd@grs^0,7,c
  7353                           
  7354                           ; BSR set to: 0
  7355  0035CC  3418               	rlcf	(___fladd@b+3)^0,w,c
  7356  0035CE  3218               	rrcf	(___fladd@b+3)^0,f,c
  7357  0035D0  3217               	rrcf	(___fladd@b+2)^0,f,c
  7358  0035D2  3216               	rrcf	(___fladd@b+1)^0,f,c
  7359  0035D4  3215               	rrcf	___fladd@b^0,f,c
  7360                           
  7361                           ; BSR set to: 0
  7362  0035D6  2A23               	incf	___fladd@bexp^0,f,c
  7363  0035D8                     l1777:
  7364                           
  7365                           ; BSR set to: 0
  7366  0035D8  5022               	movf	___fladd@aexp^0,w,c
  7367  0035DA  5C23               	subwf	___fladd@bexp^0,w,c
  7368  0035DC  A0D8               	btfss	status,0,c
  7369  0035DE  D7EB               	goto	l1778
  7370  0035E0                     u9770:
  7371                           
  7372                           ; BSR set to: 0
  7373  0035E0  BC21               	btfsc	___fladd@signs^0,6,c
  7374  0035E2  D028               	goto	l9053
  7375                           
  7376                           ; BSR set to: 0
  7377  0035E4  5023               	movf	___fladd@bexp^0,w,c
  7378  0035E6  A4D8               	btfss	status,2,c
  7379  0035E8  D009               	goto	l9035
  7380                           
  7381                           ; BSR set to: 0
  7382  0035EA  0E00               	movlw	0
  7383  0035EC  6E15               	movwf	?___fladd^0,c
  7384  0035EE  0E00               	movlw	0
  7385  0035F0  6E16               	movwf	(?___fladd+1)^0,c
  7386  0035F2  0E00               	movlw	0
  7387  0035F4  6E17               	movwf	(?___fladd+2)^0,c
  7388  0035F6  0E00               	movlw	0
  7389  0035F8  6E18               	movwf	(?___fladd+3)^0,c
  7390  0035FA  0012               	return	
  7391  0035FC                     l9035:
  7392                           
  7393                           ; BSR set to: 0
  7394  0035FC  5019               	movf	___fladd@a^0,w,c
  7395  0035FE  2615               	addwf	___fladd@b^0,f,c
  7396  003600  501A               	movf	(___fladd@a+1)^0,w,c
  7397  003602  2216               	addwfc	(___fladd@b+1)^0,f,c
  7398  003604  501B               	movf	(___fladd@a+2)^0,w,c
  7399  003606  2217               	addwfc	(___fladd@b+2)^0,f,c
  7400  003608  501C               	movf	(___fladd@a+3)^0,w,c
  7401  00360A  2218               	addwfc	(___fladd@b+3)^0,f,c
  7402                           
  7403                           ; BSR set to: 0
  7404  00360C  A018               	btfss	(___fladd@b+3)^0,0,c
  7405  00360E  D071               	goto	u9900
  7406                           
  7407                           ; BSR set to: 0
  7408  003610  A024               	btfss	___fladd@grs^0,0,c
  7409  003612  D005               	goto	l9043
  7410                           
  7411                           ; BSR set to: 0
  7412  003614  90D8               	bcf	status,0,c
  7413  003616  3024               	rrcf	___fladd@grs^0,w,c
  7414  003618  0901               	iorlw	1
  7415  00361A  6E24               	movwf	___fladd@grs^0,c
  7416  00361C  D002               	goto	l9045
  7417  00361E                     l9043:
  7418                           
  7419                           ; BSR set to: 0
  7420  00361E  90D8               	bcf	status,0,c
  7421  003620  3224               	rrcf	___fladd@grs^0,f,c
  7422  003622                     l9045:
  7423                           
  7424                           ; BSR set to: 0
  7425  003622  B015               	btfsc	___fladd@b^0,0,c
  7426                           
  7427                           ; BSR set to: 0
  7428  003624  8E24               	bsf	___fladd@grs^0,7,c
  7429                           
  7430                           ; BSR set to: 0
  7431  003626  3418               	rlcf	(___fladd@b+3)^0,w,c
  7432  003628  3218               	rrcf	(___fladd@b+3)^0,f,c
  7433  00362A  3217               	rrcf	(___fladd@b+2)^0,f,c
  7434  00362C  3216               	rrcf	(___fladd@b+1)^0,f,c
  7435  00362E  3215               	rrcf	___fladd@b^0,f,c
  7436                           
  7437                           ; BSR set to: 0
  7438  003630  2A23               	incf	___fladd@bexp^0,f,c
  7439  003632  D05F               	goto	u9900
  7440  003634                     l9053:
  7441                           
  7442                           ; BSR set to: 0
  7443  003634  5019               	movf	___fladd@a^0,w,c
  7444  003636  5C15               	subwf	___fladd@b^0,w,c
  7445  003638  501A               	movf	(___fladd@a+1)^0,w,c
  7446  00363A  5816               	subwfb	(___fladd@b+1)^0,w,c
  7447  00363C  501B               	movf	(___fladd@a+2)^0,w,c
  7448  00363E  5817               	subwfb	(___fladd@b+2)^0,w,c
  7449  003640  5018               	movf	(___fladd@b+3)^0,w,c
  7450  003642  0A80               	xorlw	128
  7451  003644  6E1D               	movwf	??___fladd^0,c
  7452  003646  501C               	movf	(___fladd@a+3)^0,w,c
  7453  003648  0A80               	xorlw	128
  7454  00364A  581D               	subwfb	??___fladd^0,w,c
  7455  00364C  B0D8               	btfsc	status,0,c
  7456  00364E  D025               	goto	l9063
  7457                           
  7458                           ; BSR set to: 0
  7459  003650  5015               	movf	___fladd@b^0,w,c
  7460  003652  5C19               	subwf	___fladd@a^0,w,c
  7461  003654  6E1D               	movwf	??___fladd^0,c
  7462  003656  5016               	movf	(___fladd@b+1)^0,w,c
  7463  003658  581A               	subwfb	(___fladd@a+1)^0,w,c
  7464  00365A  6E1E               	movwf	(??___fladd+1)^0,c
  7465  00365C  5017               	movf	(___fladd@b+2)^0,w,c
  7466  00365E  581B               	subwfb	(___fladd@a+2)^0,w,c
  7467  003660  6E1F               	movwf	(??___fladd+2)^0,c
  7468  003662  5018               	movf	(___fladd@b+3)^0,w,c
  7469  003664  581C               	subwfb	(___fladd@a+3)^0,w,c
  7470  003666  6E20               	movwf	(??___fladd+3)^0,c
  7471  003668  0EFF               	movlw	255
  7472  00366A  241D               	addwf	??___fladd^0,w,c
  7473  00366C  6E15               	movwf	___fladd@b^0,c
  7474  00366E  0EFF               	movlw	255
  7475  003670  201E               	addwfc	(??___fladd+1)^0,w,c
  7476  003672  6E16               	movwf	(___fladd@b+1)^0,c
  7477  003674  0EFF               	movlw	255
  7478  003676  201F               	addwfc	(??___fladd+2)^0,w,c
  7479  003678  6E17               	movwf	(___fladd@b+2)^0,c
  7480  00367A  0EFF               	movlw	255
  7481  00367C  2020               	addwfc	(??___fladd+3)^0,w,c
  7482  00367E  6E18               	movwf	(___fladd@b+3)^0,c
  7483  003680  0E80               	movlw	128
  7484  003682  1A21               	xorwf	___fladd@signs^0,f,c
  7485                           
  7486                           ; BSR set to: 0
  7487  003684  6C24               	negf	___fladd@grs^0,c
  7488                           
  7489                           ; BSR set to: 0
  7490  003686  5024               	movf	___fladd@grs^0,w,c
  7491  003688  A4D8               	btfss	status,2,c
  7492  00368A  D00F               	goto	l1793
  7493                           
  7494                           ; BSR set to: 0
  7495  00368C  0E01               	movlw	1
  7496  00368E  2615               	addwf	___fladd@b^0,f,c
  7497  003690  0E00               	movlw	0
  7498  003692  2216               	addwfc	(___fladd@b+1)^0,f,c
  7499  003694  2217               	addwfc	(___fladd@b+2)^0,f,c
  7500  003696  2218               	addwfc	(___fladd@b+3)^0,f,c
  7501  003698  D008               	goto	l1793
  7502  00369A                     l9063:
  7503                           
  7504                           ; BSR set to: 0
  7505  00369A  5019               	movf	___fladd@a^0,w,c
  7506  00369C  5E15               	subwf	___fladd@b^0,f,c
  7507  00369E  501A               	movf	(___fladd@a+1)^0,w,c
  7508  0036A0  5A16               	subwfb	(___fladd@b+1)^0,f,c
  7509  0036A2  501B               	movf	(___fladd@a+2)^0,w,c
  7510  0036A4  5A17               	subwfb	(___fladd@b+2)^0,f,c
  7511  0036A6  501C               	movf	(___fladd@a+3)^0,w,c
  7512  0036A8  5A18               	subwfb	(___fladd@b+3)^0,f,c
  7513  0036AA                     l1793:
  7514                           
  7515                           ; BSR set to: 0
  7516  0036AA  5015               	movf	___fladd@b^0,w,c
  7517  0036AC  1016               	iorwf	(___fladd@b+1)^0,w,c
  7518  0036AE  1017               	iorwf	(___fladd@b+2)^0,w,c
  7519  0036B0  1018               	iorwf	(___fladd@b+3)^0,w,c
  7520  0036B2  A4D8               	btfss	status,2,c
  7521  0036B4  D01C               	goto	l9087
  7522                           
  7523                           ; BSR set to: 0
  7524  0036B6  5024               	movf	___fladd@grs^0,w,c
  7525  0036B8  A4D8               	btfss	status,2,c
  7526  0036BA  D019               	goto	l9087
  7527                           
  7528                           ; BSR set to: 0
  7529  0036BC  0E00               	movlw	0
  7530  0036BE  6E15               	movwf	?___fladd^0,c
  7531  0036C0  0E00               	movlw	0
  7532  0036C2  6E16               	movwf	(?___fladd+1)^0,c
  7533  0036C4  0E00               	movlw	0
  7534  0036C6  6E17               	movwf	(?___fladd+2)^0,c
  7535  0036C8  0E00               	movlw	0
  7536  0036CA  6E18               	movwf	(?___fladd+3)^0,c
  7537  0036CC  0012               	return	
  7538  0036CE                     l9071:
  7539                           
  7540                           ; BSR set to: 0
  7541  0036CE  90D8               	bcf	status,0,c
  7542  0036D0  3615               	rlcf	___fladd@b^0,f,c
  7543  0036D2  3616               	rlcf	(___fladd@b+1)^0,f,c
  7544  0036D4  3617               	rlcf	(___fladd@b+2)^0,f,c
  7545  0036D6  3618               	rlcf	(___fladd@b+3)^0,f,c
  7546                           
  7547                           ; BSR set to: 0
  7548  0036D8  BE24               	btfsc	___fladd@grs^0,7,c
  7549                           
  7550                           ; BSR set to: 0
  7551  0036DA  8015               	bsf	___fladd@b^0,0,c
  7552                           
  7553                           ; BSR set to: 0
  7554  0036DC  A024               	btfss	___fladd@grs^0,0,c
  7555  0036DE  D002               	goto	l9081
  7556                           
  7557                           ; BSR set to: 0
  7558  0036E0  80D8               	bsf	status,0,c
  7559  0036E2  D001               	goto	L10
  7560  0036E4                     l9081:
  7561                           
  7562                           ; BSR set to: 0
  7563  0036E4  90D8               	bcf	status,0,c
  7564  0036E6                     L10:
  7565  0036E6  3624               	rlcf	___fladd@grs^0,f,c
  7566                           
  7567                           ; BSR set to: 0
  7568  0036E8  5023               	movf	___fladd@bexp^0,w,c
  7569  0036EA  A4D8               	btfss	status,2,c
  7570                           
  7571                           ; BSR set to: 0
  7572  0036EC  0623               	decf	___fladd@bexp^0,f,c
  7573  0036EE                     l9087:
  7574                           
  7575                           ; BSR set to: 0
  7576  0036EE  AE17               	btfss	(___fladd@b+2)^0,7,c
  7577  0036F0  D7EE               	goto	l9071
  7578  0036F2                     u9900:
  7579                           
  7580                           ; BSR set to: 0
  7581  0036F2  0E00               	movlw	0
  7582  0036F4  6E22               	movwf	___fladd@aexp^0,c
  7583                           
  7584                           ; BSR set to: 0
  7585  0036F6  AE24               	btfss	___fladd@grs^0,7,c
  7586  0036F8  D00B               	goto	l1802
  7587                           
  7588                           ; BSR set to: 0
  7589  0036FA  C024  F01D         	movff	___fladd@grs,??___fladd
  7590  0036FE  0E7F               	movlw	127
  7591  003700  161D               	andwf	??___fladd^0,f,c
  7592  003702  B4D8               	btfsc	status,2,c
  7593  003704  D003               	goto	l1803
  7594  003706                     u9920:
  7595                           
  7596                           ; BSR set to: 0
  7597  003706  0E01               	movlw	1
  7598  003708  6E22               	movwf	___fladd@aexp^0,c
  7599  00370A  D002               	goto	l1802
  7600  00370C                     l1803:
  7601                           
  7602                           ; BSR set to: 0
  7603  00370C  B015               	btfsc	___fladd@b^0,0,c
  7604  00370E  D7FB               	goto	u9920
  7605  003710                     l1802:
  7606                           
  7607                           ; BSR set to: 0
  7608  003710  5022               	movf	___fladd@aexp^0,w,c
  7609  003712  B4D8               	btfsc	status,2,c
  7610  003714  D020               	goto	l9107
  7611                           
  7612                           ; BSR set to: 0
  7613  003716  0E01               	movlw	1
  7614  003718  2615               	addwf	___fladd@b^0,f,c
  7615  00371A  0E00               	movlw	0
  7616  00371C  2216               	addwfc	(___fladd@b+1)^0,f,c
  7617  00371E  2217               	addwfc	(___fladd@b+2)^0,f,c
  7618  003720  2218               	addwfc	(___fladd@b+3)^0,f,c
  7619                           
  7620                           ; BSR set to: 0
  7621  003722  A018               	btfss	(___fladd@b+3)^0,0,c
  7622  003724  D018               	goto	l9107
  7623                           
  7624                           ; BSR set to: 0
  7625  003726  C015  F01D         	movff	___fladd@b,??___fladd
  7626  00372A  C016  F01E         	movff	___fladd@b+1,??___fladd+1
  7627  00372E  C017  F01F         	movff	___fladd@b+2,??___fladd+2
  7628  003732  C018  F020         	movff	___fladd@b+3,??___fladd+3
  7629  003736  3420               	rlcf	(??___fladd+3)^0,w,c
  7630  003738  3220               	rrcf	(??___fladd+3)^0,f,c
  7631  00373A  321F               	rrcf	(??___fladd+2)^0,f,c
  7632  00373C  321E               	rrcf	(??___fladd+1)^0,f,c
  7633  00373E  321D               	rrcf	??___fladd^0,f,c
  7634  003740  C01D  F015         	movff	??___fladd,___fladd@b
  7635  003744  C01E  F016         	movff	??___fladd+1,___fladd@b+1
  7636  003748  C01F  F017         	movff	??___fladd+2,___fladd@b+2
  7637  00374C  C020  F018         	movff	??___fladd+3,___fladd@b+3
  7638  003750  2823               	incf	___fladd@bexp^0,w,c
  7639  003752  A4D8               	btfss	status,2,c
  7640                           
  7641                           ; BSR set to: 0
  7642  003754  2A23               	incf	___fladd@bexp^0,f,c
  7643  003756                     l9107:
  7644                           
  7645                           ; BSR set to: 0
  7646  003756  2823               	incf	___fladd@bexp^0,w,c
  7647  003758  B4D8               	btfsc	status,2,c
  7648  00375A  D003               	goto	u9980
  7649                           
  7650                           ; BSR set to: 0
  7651  00375C  5023               	movf	___fladd@bexp^0,w,c
  7652  00375E  A4D8               	btfss	status,2,c
  7653  003760  D00D               	goto	l9115
  7654  003762                     u9980:
  7655                           
  7656                           ; BSR set to: 0
  7657  003762  0E00               	movlw	0
  7658  003764  6E15               	movwf	___fladd@b^0,c
  7659  003766  0E00               	movlw	0
  7660  003768  6E16               	movwf	(___fladd@b+1)^0,c
  7661  00376A  0E00               	movlw	0
  7662  00376C  6E17               	movwf	(___fladd@b+2)^0,c
  7663  00376E  0E00               	movlw	0
  7664  003770  6E18               	movwf	(___fladd@b+3)^0,c
  7665  003772  5023               	movf	___fladd@bexp^0,w,c
  7666  003774  A4D8               	btfss	status,2,c
  7667  003776  D002               	goto	l9115
  7668                           
  7669                           ; BSR set to: 0
  7670  003778  0E00               	movlw	0
  7671  00377A  6E21               	movwf	___fladd@signs^0,c
  7672  00377C                     l9115:
  7673                           
  7674                           ; BSR set to: 0
  7675  00377C  A023               	btfss	___fladd@bexp^0,0,c
  7676  00377E  D002               	goto	l9119
  7677                           
  7678                           ; BSR set to: 0
  7679  003780  8E17               	bsf	(___fladd@b+2)^0,7,c
  7680  003782  D001               	goto	l9121
  7681  003784                     l9119:
  7682                           
  7683                           ; BSR set to: 0
  7684  003784  9E17               	bcf	(___fladd@b+2)^0,7,c
  7685  003786                     l9121:
  7686                           
  7687                           ; BSR set to: 0
  7688  003786  90D8               	bcf	status,0,c
  7689  003788  3023               	rrcf	___fladd@bexp^0,w,c
  7690  00378A  6E18               	movwf	(___fladd@b+3)^0,c
  7691                           
  7692                           ; BSR set to: 0
  7693  00378C  BE21               	btfsc	___fladd@signs^0,7,c
  7694                           
  7695                           ; BSR set to: 0
  7696  00378E  8E18               	bsf	(___fladd@b+3)^0,7,c
  7697                           
  7698                           ; BSR set to: 0
  7699  003790  C015  F015         	movff	___fladd@b,?___fladd
  7700  003794  C016  F016         	movff	___fladd@b+1,?___fladd+1
  7701  003798  C017  F017         	movff	___fladd@b+2,?___fladd+2
  7702  00379C  C018  F018         	movff	___fladd@b+3,?___fladd+3
  7703                           
  7704                           ; BSR set to: 0
  7705  0037A0  0012               	return		;funcret
  7706  0037A2                     __end_of___fladd:
  7707                           	callstack 0
  7708                           
  7709 ;; *************** function ___flneg *****************
  7710 ;; Defined at:
  7711 ;;		line 15 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/flneg.c"
  7712 ;; Parameters:    Size  Location     Type
  7713 ;;  f1              4   20[COMRAM] unsigned char 
  7714 ;; Auto vars:     Size  Location     Type
  7715 ;;		None
  7716 ;; Return value:  Size  Location     Type
  7717 ;;                  4   20[COMRAM] unsigned char 
  7718 ;; Registers used:
  7719 ;;		wreg, status,2, status,0
  7720 ;; Tracked objects:
  7721 ;;		On entry : 3F/0
  7722 ;;		On exit  : 3F/0
  7723 ;;		Unchanged: 3F/0
  7724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7725 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7728 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7729 ;;Total ram usage:        4 bytes
  7730 ;; Hardware stack levels used: 1
  7731 ;; Hardware stack levels required when called: 4
  7732 ;; This function calls:
  7733 ;;		Nothing
  7734 ;; This function is called by:
  7735 ;;		_efgtoa
  7736 ;; This function uses a non-reentrant model
  7737 ;;
  7738                           
  7739                           	psect	text21
  7740  005AF8                     __ptext21:
  7741                           	callstack 0
  7742  005AF8                     ___flneg:
  7743                           	callstack 20
  7744                           
  7745                           ; BSR set to: 0
  7746                           
  7747                           ; BSR set to: 0
  7748                           ;incstack = 0
  7749  005AF8  5015               	movf	___flneg@f1^0,w,c
  7750  005AFA  1016               	iorwf	(___flneg@f1+1)^0,w,c
  7751  005AFC  1017               	iorwf	(___flneg@f1+2)^0,w,c
  7752  005AFE  1018               	iorwf	(___flneg@f1+3)^0,w,c
  7753  005B00  B4D8               	btfsc	status,2,c
  7754  005B02  D008               	goto	l9545
  7755                           
  7756                           ; BSR set to: 0
  7757  005B04  0E00               	movlw	0
  7758  005B06  1A15               	xorwf	___flneg@f1^0,f,c
  7759  005B08  0E00               	movlw	0
  7760  005B0A  1A16               	xorwf	(___flneg@f1+1)^0,f,c
  7761  005B0C  0E00               	movlw	0
  7762  005B0E  1A17               	xorwf	(___flneg@f1+2)^0,f,c
  7763  005B10  0E80               	movlw	128
  7764  005B12  1A18               	xorwf	(___flneg@f1+3)^0,f,c
  7765  005B14                     l9545:
  7766                           
  7767                           ; BSR set to: 0
  7768  005B14  C015  F015         	movff	___flneg@f1,?___flneg
  7769  005B18  C016  F016         	movff	___flneg@f1+1,?___flneg+1
  7770  005B1C  C017  F017         	movff	___flneg@f1+2,?___flneg+2
  7771  005B20  C018  F018         	movff	___flneg@f1+3,?___flneg+3
  7772                           
  7773                           ; BSR set to: 0
  7774  005B24  0012               	return		;funcret
  7775  005B26                     __end_of___flneg:
  7776                           	callstack 0
  7777                           
  7778 ;; *************** function ___flmul *****************
  7779 ;; Defined at:
  7780 ;;		line 8 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/sprcmul.c"
  7781 ;; Parameters:    Size  Location     Type
  7782 ;;  b               4   34[COMRAM] unsigned char 
  7783 ;;  a               4   38[COMRAM] unsigned char 
  7784 ;; Auto vars:     Size  Location     Type
  7785 ;;  prod            4    7[BANK0 ] struct .
  7786 ;;  grs             4    3[BANK0 ] unsigned long 
  7787 ;;  temp            2   11[BANK0 ] struct .
  7788 ;;  bexp            1    2[BANK0 ] unsigned char 
  7789 ;;  aexp            1    1[BANK0 ] unsigned char 
  7790 ;;  sign            1    0[BANK0 ] unsigned char 
  7791 ;; Return value:  Size  Location     Type
  7792 ;;                  4   34[COMRAM] unsigned char 
  7793 ;; Registers used:
  7794 ;;		wreg, status,2, status,0, prodl, prodh
  7795 ;; Tracked objects:
  7796 ;;		On entry : 0/0
  7797 ;;		On exit  : 3F/0
  7798 ;;		Unchanged: 0/0
  7799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7800 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7801 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7802 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7803 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7804 ;;Total ram usage:       25 bytes
  7805 ;; Hardware stack levels used: 1
  7806 ;; Hardware stack levels required when called: 4
  7807 ;; This function calls:
  7808 ;;		Nothing
  7809 ;; This function is called by:
  7810 ;;		_main
  7811 ;;		_efgtoa
  7812 ;; This function uses a non-reentrant model
  7813 ;;
  7814                           
  7815                           	psect	text22
  7816  003144                     __ptext22:
  7817                           	callstack 0
  7818  003144                     ___flmul:
  7819                           	callstack 20
  7820                           
  7821                           ; BSR set to: 0
  7822                           ;incstack = 0
  7823  003144  5026               	movf	(___flmul@b+3)^0,w,c
  7824  003146  0B80               	andlw	128
  7825  003148  0100               	movlb	0	; () banked
  7826  00314A  6F60               	movwf	___flmul@sign& (0+255),b
  7827  00314C  5026               	movf	(___flmul@b+3)^0,w,c
  7828  00314E  2426               	addwf	(___flmul@b+3)^0,w,c
  7829  003150  6F62               	movwf	___flmul@bexp& (0+255),b
  7830                           
  7831                           ; BSR set to: 0
  7832  003152  BE25               	btfsc	(___flmul@b+2)^0,7,c
  7833                           
  7834                           ; BSR set to: 0
  7835  003154  8162               	bsf	___flmul@bexp& (0+255),0,b
  7836                           
  7837                           ; BSR set to: 0
  7838  003156  5162               	movf	___flmul@bexp& (0+255),w,b
  7839  003158  B4D8               	btfsc	status,2,c
  7840  00315A  D00D               	goto	l9301
  7841                           
  7842                           ; BSR set to: 0
  7843  00315C  2962               	incf	___flmul@bexp& (0+255),w,b
  7844  00315E  A4D8               	btfss	status,2,c
  7845  003160  D008               	goto	l9299
  7846                           
  7847                           ; BSR set to: 0
  7848  003162  0E00               	movlw	0
  7849  003164  6E23               	movwf	___flmul@b^0,c
  7850  003166  0E00               	movlw	0
  7851  003168  6E24               	movwf	(___flmul@b+1)^0,c
  7852  00316A  0E00               	movlw	0
  7853  00316C  6E25               	movwf	(___flmul@b+2)^0,c
  7854  00316E  0E00               	movlw	0
  7855  003170  6E26               	movwf	(___flmul@b+3)^0,c
  7856  003172                     l9299:
  7857                           
  7858                           ; BSR set to: 0
  7859  003172  8E25               	bsf	(___flmul@b+2)^0,7,c
  7860  003174  D008               	goto	l9303
  7861  003176                     l9301:
  7862                           
  7863                           ; BSR set to: 0
  7864  003176  0E00               	movlw	0
  7865  003178  6E23               	movwf	___flmul@b^0,c
  7866  00317A  0E00               	movlw	0
  7867  00317C  6E24               	movwf	(___flmul@b+1)^0,c
  7868  00317E  0E00               	movlw	0
  7869  003180  6E25               	movwf	(___flmul@b+2)^0,c
  7870  003182  0E00               	movlw	0
  7871  003184  6E26               	movwf	(___flmul@b+3)^0,c
  7872  003186                     l9303:
  7873                           
  7874                           ; BSR set to: 0
  7875  003186  502A               	movf	(___flmul@a+3)^0,w,c
  7876  003188  0B80               	andlw	128
  7877  00318A  1B60               	xorwf	___flmul@sign& (0+255),f,b
  7878                           
  7879                           ; BSR set to: 0
  7880  00318C  502A               	movf	(___flmul@a+3)^0,w,c
  7881  00318E  242A               	addwf	(___flmul@a+3)^0,w,c
  7882  003190  6F61               	movwf	___flmul@aexp& (0+255),b
  7883                           
  7884                           ; BSR set to: 0
  7885  003192  BE29               	btfsc	(___flmul@a+2)^0,7,c
  7886                           
  7887                           ; BSR set to: 0
  7888  003194  8161               	bsf	___flmul@aexp& (0+255),0,b
  7889                           
  7890                           ; BSR set to: 0
  7891  003196  5161               	movf	___flmul@aexp& (0+255),w,b
  7892  003198  B4D8               	btfsc	status,2,c
  7893  00319A  D00D               	goto	l9319
  7894                           
  7895                           ; BSR set to: 0
  7896  00319C  2961               	incf	___flmul@aexp& (0+255),w,b
  7897  00319E  A4D8               	btfss	status,2,c
  7898  0031A0  D008               	goto	l9317
  7899                           
  7900                           ; BSR set to: 0
  7901  0031A2  0E00               	movlw	0
  7902  0031A4  6E27               	movwf	___flmul@a^0,c
  7903  0031A6  0E00               	movlw	0
  7904  0031A8  6E28               	movwf	(___flmul@a+1)^0,c
  7905  0031AA  0E00               	movlw	0
  7906  0031AC  6E29               	movwf	(___flmul@a+2)^0,c
  7907  0031AE  0E00               	movlw	0
  7908  0031B0  6E2A               	movwf	(___flmul@a+3)^0,c
  7909  0031B2                     l9317:
  7910                           
  7911                           ; BSR set to: 0
  7912  0031B2  8E29               	bsf	(___flmul@a+2)^0,7,c
  7913  0031B4  D008               	goto	l1862
  7914  0031B6                     l9319:
  7915                           
  7916                           ; BSR set to: 0
  7917  0031B6  0E00               	movlw	0
  7918  0031B8  6E27               	movwf	___flmul@a^0,c
  7919  0031BA  0E00               	movlw	0
  7920  0031BC  6E28               	movwf	(___flmul@a+1)^0,c
  7921  0031BE  0E00               	movlw	0
  7922  0031C0  6E29               	movwf	(___flmul@a+2)^0,c
  7923  0031C2  0E00               	movlw	0
  7924  0031C4  6E2A               	movwf	(___flmul@a+3)^0,c
  7925  0031C6                     l1862:
  7926                           
  7927                           ; BSR set to: 0
  7928  0031C6  5161               	movf	___flmul@aexp& (0+255),w,b
  7929  0031C8  B4D8               	btfsc	status,2,c
  7930  0031CA  D003               	goto	u10360
  7931                           
  7932                           ; BSR set to: 0
  7933  0031CC  5162               	movf	___flmul@bexp& (0+255),w,b
  7934  0031CE  A4D8               	btfss	status,2,c
  7935  0031D0  D009               	goto	l9327
  7936  0031D2                     u10360:
  7937                           
  7938                           ; BSR set to: 0
  7939  0031D2  0E00               	movlw	0
  7940  0031D4  6E23               	movwf	?___flmul^0,c
  7941  0031D6  0E00               	movlw	0
  7942  0031D8  6E24               	movwf	(?___flmul+1)^0,c
  7943  0031DA  0E00               	movlw	0
  7944  0031DC  6E25               	movwf	(?___flmul+2)^0,c
  7945  0031DE  0E00               	movlw	0
  7946  0031E0  6E26               	movwf	(?___flmul+3)^0,c
  7947  0031E2  0012               	return	
  7948  0031E4                     l9327:
  7949                           
  7950                           ; BSR set to: 0
  7951  0031E4  5029               	movf	(___flmul@a+2)^0,w,c
  7952  0031E6  0223               	mulwf	___flmul@b^0,c
  7953  0031E8  006F FFCC  F06B    	movff	prodl,___flmul@temp
  7954  0031EE  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  7955                           
  7956                           ; BSR set to: 0
  7957  0031F4  516B               	movf	___flmul@temp& (0+255),w,b
  7958  0031F6  6F63               	movwf	___flmul@grs& (0+255),b
  7959  0031F8  6B64               	clrf	(___flmul@grs+1)& (0+255),b
  7960  0031FA  6B65               	clrf	(___flmul@grs+2)& (0+255),b
  7961  0031FC  6B66               	clrf	(___flmul@grs+3)& (0+255),b
  7962                           
  7963                           ; BSR set to: 0
  7964  0031FE  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7965  003200  6F67               	movwf	___flmul@prod& (0+255),b
  7966  003202  6B68               	clrf	(___flmul@prod+1)& (0+255),b
  7967  003204  6B69               	clrf	(___flmul@prod+2)& (0+255),b
  7968  003206  6B6A               	clrf	(___flmul@prod+3)& (0+255),b
  7969  003208  5028               	movf	(___flmul@a+1)^0,w,c
  7970  00320A  0224               	mulwf	(___flmul@b+1)^0,c
  7971  00320C  006F FFCC  F06B    	movff	prodl,___flmul@temp
  7972  003212  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  7973                           
  7974                           ; BSR set to: 0
  7975  003218  516B               	movf	___flmul@temp& (0+255),w,b
  7976  00321A  2763               	addwf	___flmul@grs& (0+255),f,b
  7977  00321C  0E00               	movlw	0
  7978  00321E  2364               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7979  003220  2365               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7980  003222  2366               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7981                           
  7982                           ; BSR set to: 0
  7983  003224  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7984  003226  2767               	addwf	___flmul@prod& (0+255),f,b
  7985  003228  0E00               	movlw	0
  7986  00322A  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7987  00322C  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7988  00322E  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7989  003230  5027               	movf	___flmul@a^0,w,c
  7990  003232  0225               	mulwf	(___flmul@b+2)^0,c
  7991  003234  006F FFCC  F06B    	movff	prodl,___flmul@temp
  7992  00323A  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  7993                           
  7994                           ; BSR set to: 0
  7995  003240  516B               	movf	___flmul@temp& (0+255),w,b
  7996  003242  2763               	addwf	___flmul@grs& (0+255),f,b
  7997  003244  0E00               	movlw	0
  7998  003246  2364               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7999  003248  2365               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8000  00324A  2366               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8001                           
  8002                           ; BSR set to: 0
  8003  00324C  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  8004  00324E  2767               	addwf	___flmul@prod& (0+255),f,b
  8005  003250  0E00               	movlw	0
  8006  003252  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8007  003254  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8008  003256  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8009                           
  8010                           ; BSR set to: 0
  8011  003258  C065  F066         	movff	___flmul@grs+2,___flmul@grs+3
  8012  00325C  C064  F065         	movff	___flmul@grs+1,___flmul@grs+2
  8013  003260  C063  F064         	movff	___flmul@grs,___flmul@grs+1
  8014  003264  6B63               	clrf	___flmul@grs& (0+255),b
  8015                           
  8016                           ; BSR set to: 0
  8017  003266  5027               	movf	___flmul@a^0,w,c
  8018  003268  0224               	mulwf	(___flmul@b+1)^0,c
  8019  00326A  006F FFCC  F06B    	movff	prodl,___flmul@temp
  8020  003270  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  8021                           
  8022                           ; BSR set to: 0
  8023  003276  516B               	movf	___flmul@temp& (0+255),w,b
  8024  003278  2763               	addwf	___flmul@grs& (0+255),f,b
  8025  00327A  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  8026  00327C  2364               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8027  00327E  0E00               	movlw	0
  8028  003280  2365               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8029  003282  0E00               	movlw	0
  8030  003284  2366               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8031                           
  8032                           ; BSR set to: 0
  8033  003286  5028               	movf	(___flmul@a+1)^0,w,c
  8034  003288  0223               	mulwf	___flmul@b^0,c
  8035  00328A  006F FFCC  F06B    	movff	prodl,___flmul@temp
  8036  003290  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  8037                           
  8038                           ; BSR set to: 0
  8039  003296  516B               	movf	___flmul@temp& (0+255),w,b
  8040  003298  2763               	addwf	___flmul@grs& (0+255),f,b
  8041  00329A  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  8042  00329C  2364               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8043  00329E  0E00               	movlw	0
  8044  0032A0  2365               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8045  0032A2  0E00               	movlw	0
  8046  0032A4  2366               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8047                           
  8048                           ; BSR set to: 0
  8049  0032A6  C065  F066         	movff	___flmul@grs+2,___flmul@grs+3
  8050  0032AA  C064  F065         	movff	___flmul@grs+1,___flmul@grs+2
  8051  0032AE  C063  F064         	movff	___flmul@grs,___flmul@grs+1
  8052  0032B2  6B63               	clrf	___flmul@grs& (0+255),b
  8053  0032B4  5027               	movf	___flmul@a^0,w,c
  8054  0032B6  0223               	mulwf	___flmul@b^0,c
  8055  0032B8  006F FFCC  F06B    	movff	prodl,___flmul@temp
  8056  0032BE  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  8057                           
  8058                           ; BSR set to: 0
  8059  0032C4  516B               	movf	___flmul@temp& (0+255),w,b
  8060  0032C6  2763               	addwf	___flmul@grs& (0+255),f,b
  8061  0032C8  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  8062  0032CA  2364               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8063  0032CC  0E00               	movlw	0
  8064  0032CE  2365               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8065  0032D0  0E00               	movlw	0
  8066  0032D2  2366               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8067                           
  8068                           ; BSR set to: 0
  8069  0032D4  5029               	movf	(___flmul@a+2)^0,w,c
  8070  0032D6  0224               	mulwf	(___flmul@b+1)^0,c
  8071  0032D8  006F FFCC  F06B    	movff	prodl,___flmul@temp
  8072  0032DE  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  8073  0032E4  516B               	movf	___flmul@temp& (0+255),w,b
  8074  0032E6  2767               	addwf	___flmul@prod& (0+255),f,b
  8075  0032E8  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  8076  0032EA  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8077  0032EC  0E00               	movlw	0
  8078  0032EE  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8079  0032F0  0E00               	movlw	0
  8080  0032F2  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8081                           
  8082                           ; BSR set to: 0
  8083  0032F4  5028               	movf	(___flmul@a+1)^0,w,c
  8084  0032F6  0225               	mulwf	(___flmul@b+2)^0,c
  8085  0032F8  006F FFCC  F06B    	movff	prodl,___flmul@temp
  8086  0032FE  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  8087                           
  8088                           ; BSR set to: 0
  8089  003304  516B               	movf	___flmul@temp& (0+255),w,b
  8090  003306  2767               	addwf	___flmul@prod& (0+255),f,b
  8091  003308  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  8092  00330A  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8093  00330C  0E00               	movlw	0
  8094  00330E  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8095  003310  0E00               	movlw	0
  8096  003312  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8097  003314  5029               	movf	(___flmul@a+2)^0,w,c
  8098  003316  0225               	mulwf	(___flmul@b+2)^0,c
  8099  003318  006F FFCC  F06B    	movff	prodl,___flmul@temp
  8100  00331E  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  8101                           
  8102                           ; BSR set to: 0
  8103  003324  516B               	movf	___flmul@temp& (0+255),w,b
  8104  003326  6E2B               	movwf	??___flmul^0,c
  8105  003328  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  8106  00332A  6E2C               	movwf	(??___flmul+1)^0,c
  8107  00332C  6A2D               	clrf	(??___flmul+2)^0,c
  8108  00332E  6A2E               	clrf	(??___flmul+3)^0,c
  8109  003330  C02D  F02E         	movff	??___flmul+2,??___flmul+3
  8110  003334  C02C  F02D         	movff	??___flmul+1,??___flmul+2
  8111  003338  C02B  F02C         	movff	??___flmul,??___flmul+1
  8112  00333C  6A2B               	clrf	??___flmul^0,c
  8113  00333E  502B               	movf	??___flmul^0,w,c
  8114  003340  2767               	addwf	___flmul@prod& (0+255),f,b
  8115  003342  502C               	movf	(??___flmul+1)^0,w,c
  8116  003344  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8117  003346  502D               	movf	(??___flmul+2)^0,w,c
  8118  003348  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8119  00334A  502E               	movf	(??___flmul+3)^0,w,c
  8120  00334C  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8121                           
  8122                           ; BSR set to: 0
  8123  00334E  5166               	movf	(___flmul@grs+3)& (0+255),w,b
  8124  003350  2767               	addwf	___flmul@prod& (0+255),f,b
  8125  003352  0E00               	movlw	0
  8126  003354  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8127  003356  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8128  003358  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8129                           
  8130                           ; BSR set to: 0
  8131  00335A  C065  F066         	movff	___flmul@grs+2,___flmul@grs+3
  8132  00335E  C064  F065         	movff	___flmul@grs+1,___flmul@grs+2
  8133  003362  C063  F064         	movff	___flmul@grs,___flmul@grs+1
  8134  003366  6B63               	clrf	___flmul@grs& (0+255),b
  8135                           
  8136                           ; BSR set to: 0
  8137  003368  5161               	movf	___flmul@aexp& (0+255),w,b
  8138  00336A  C062  F02B         	movff	___flmul@bexp,??___flmul
  8139  00336E  6A2C               	clrf	(??___flmul+1)^0,c
  8140  003370  262B               	addwf	??___flmul^0,f,c
  8141  003372  0E00               	movlw	0
  8142  003374  222C               	addwfc	(??___flmul+1)^0,f,c
  8143  003376  0E82               	movlw	130
  8144  003378  242B               	addwf	??___flmul^0,w,c
  8145  00337A  6F6B               	movwf	___flmul@temp& (0+255),b
  8146  00337C  0EFF               	movlw	255
  8147  00337E  202C               	addwfc	(??___flmul+1)^0,w,c
  8148  003380  6F6C               	movwf	(___flmul@temp+1)& (0+255),b
  8149  003382  D00F               	goto	l9375
  8150  003384                     l9369:
  8151                           
  8152                           ; BSR set to: 0
  8153  003384  90D8               	bcf	status,0,c
  8154  003386  3767               	rlcf	___flmul@prod& (0+255),f,b
  8155  003388  3768               	rlcf	(___flmul@prod+1)& (0+255),f,b
  8156  00338A  3769               	rlcf	(___flmul@prod+2)& (0+255),f,b
  8157  00338C  376A               	rlcf	(___flmul@prod+3)& (0+255),f,b
  8158                           
  8159                           ; BSR set to: 0
  8160  00338E  BF66               	btfsc	(___flmul@grs+3)& (0+255),7,b
  8161                           
  8162                           ; BSR set to: 0
  8163  003390  8167               	bsf	___flmul@prod& (0+255),0,b
  8164                           
  8165                           ; BSR set to: 0
  8166  003392  90D8               	bcf	status,0,c
  8167  003394  3763               	rlcf	___flmul@grs& (0+255),f,b
  8168  003396  3764               	rlcf	(___flmul@grs+1)& (0+255),f,b
  8169  003398  3765               	rlcf	(___flmul@grs+2)& (0+255),f,b
  8170  00339A  3766               	rlcf	(___flmul@grs+3)& (0+255),f,b
  8171  00339C  076B               	decf	___flmul@temp& (0+255),f,b
  8172  00339E  A0D8               	btfss	status,0,c
  8173  0033A0  076C               	decf	(___flmul@temp+1)& (0+255),f,b
  8174  0033A2                     l9375:
  8175                           
  8176                           ; BSR set to: 0
  8177  0033A2  AF69               	btfss	(___flmul@prod+2)& (0+255),7,b
  8178  0033A4  D7EF               	goto	l9369
  8179                           
  8180                           ; BSR set to: 0
  8181  0033A6  0E00               	movlw	0
  8182  0033A8  6F61               	movwf	___flmul@aexp& (0+255),b
  8183                           
  8184                           ; BSR set to: 0
  8185  0033AA  AF66               	btfss	(___flmul@grs+3)& (0+255),7,b
  8186  0033AC  D017               	goto	l1871
  8187                           
  8188                           ; BSR set to: 0
  8189  0033AE  0EFF               	movlw	255
  8190  0033B0  1563               	andwf	___flmul@grs& (0+255),w,b
  8191  0033B2  6E2B               	movwf	??___flmul^0,c
  8192  0033B4  0EFF               	movlw	255
  8193  0033B6  1564               	andwf	(___flmul@grs+1)& (0+255),w,b
  8194  0033B8  6E2C               	movwf	(??___flmul+1)^0,c
  8195  0033BA  0EFF               	movlw	255
  8196  0033BC  1565               	andwf	(___flmul@grs+2)& (0+255),w,b
  8197  0033BE  6E2D               	movwf	(??___flmul+2)^0,c
  8198  0033C0  0E7F               	movlw	127
  8199  0033C2  1566               	andwf	(___flmul@grs+3)& (0+255),w,b
  8200  0033C4  6E2E               	movwf	(??___flmul+3)^0,c
  8201  0033C6  502B               	movf	??___flmul^0,w,c
  8202  0033C8  102C               	iorwf	(??___flmul+1)^0,w,c
  8203  0033CA  102D               	iorwf	(??___flmul+2)^0,w,c
  8204  0033CC  102E               	iorwf	(??___flmul+3)^0,w,c
  8205  0033CE  B4D8               	btfsc	status,2,c
  8206  0033D0  D003               	goto	l1872
  8207  0033D2                     u10400:
  8208                           
  8209                           ; BSR set to: 0
  8210  0033D2  0E01               	movlw	1
  8211  0033D4  6F61               	movwf	___flmul@aexp& (0+255),b
  8212  0033D6  D002               	goto	l1871
  8213  0033D8                     l1872:
  8214                           
  8215                           ; BSR set to: 0
  8216  0033D8  B167               	btfsc	___flmul@prod& (0+255),0,b
  8217  0033DA  D7FB               	goto	u10400
  8218  0033DC                     l1871:
  8219                           
  8220                           ; BSR set to: 0
  8221  0033DC  5161               	movf	___flmul@aexp& (0+255),w,b
  8222  0033DE  B4D8               	btfsc	status,2,c
  8223  0033E0  D01F               	goto	l9395
  8224                           
  8225                           ; BSR set to: 0
  8226  0033E2  0E01               	movlw	1
  8227  0033E4  2767               	addwf	___flmul@prod& (0+255),f,b
  8228  0033E6  0E00               	movlw	0
  8229  0033E8  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8230  0033EA  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8231  0033EC  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8232                           
  8233                           ; BSR set to: 0
  8234  0033EE  A16A               	btfss	(___flmul@prod+3)& (0+255),0,b
  8235  0033F0  D017               	goto	l9395
  8236                           
  8237                           ; BSR set to: 0
  8238  0033F2  C067  F02B         	movff	___flmul@prod,??___flmul
  8239  0033F6  C068  F02C         	movff	___flmul@prod+1,??___flmul+1
  8240  0033FA  C069  F02D         	movff	___flmul@prod+2,??___flmul+2
  8241  0033FE  C06A  F02E         	movff	___flmul@prod+3,??___flmul+3
  8242  003402  342E               	rlcf	(??___flmul+3)^0,w,c
  8243  003404  322E               	rrcf	(??___flmul+3)^0,f,c
  8244  003406  322D               	rrcf	(??___flmul+2)^0,f,c
  8245  003408  322C               	rrcf	(??___flmul+1)^0,f,c
  8246  00340A  322B               	rrcf	??___flmul^0,f,c
  8247  00340C  C02B  F067         	movff	??___flmul,___flmul@prod
  8248  003410  C02C  F068         	movff	??___flmul+1,___flmul@prod+1
  8249  003414  C02D  F069         	movff	??___flmul+2,___flmul@prod+2
  8250  003418  C02E  F06A         	movff	??___flmul+3,___flmul@prod+3
  8251                           
  8252                           ; BSR set to: 0
  8253  00341C  4B6B               	infsnz	___flmul@temp& (0+255),f,b
  8254  00341E  2B6C               	incf	(___flmul@temp+1)& (0+255),f,b
  8255  003420                     l9395:
  8256                           
  8257                           ; BSR set to: 0
  8258  003420  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8259  003422  D00D               	goto	l9399
  8260  003424  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  8261  003426  E103               	bnz	u10440
  8262  003428  296B               	incf	___flmul@temp& (0+255),w,b
  8263  00342A  A0D8               	btfss	status,0,c
  8264  00342C  D008               	goto	l9399
  8265  00342E                     u10440:
  8266                           
  8267                           ; BSR set to: 0
  8268  00342E  0E00               	movlw	0
  8269  003430  6F67               	movwf	___flmul@prod& (0+255),b
  8270  003432  0E00               	movlw	0
  8271  003434  6F68               	movwf	(___flmul@prod+1)& (0+255),b
  8272  003436  0E80               	movlw	128
  8273  003438  6F69               	movwf	(___flmul@prod+2)& (0+255),b
  8274  00343A  0E7F               	movlw	127
  8275  00343C  D020               	goto	L11
  8276  00343E                     l9399:
  8277                           
  8278                           ; BSR set to: 0
  8279  00343E  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8280  003440  D005               	goto	u10450
  8281  003442  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  8282  003444  E10E               	bnz	l1879
  8283  003446  056B               	decf	___flmul@temp& (0+255),w,b
  8284  003448  B0D8               	btfsc	status,0,c
  8285  00344A  D00B               	goto	l1879
  8286  00344C                     u10450:
  8287                           
  8288                           ; BSR set to: 0
  8289  00344C  0E00               	movlw	0
  8290  00344E  6F67               	movwf	___flmul@prod& (0+255),b
  8291  003450  0E00               	movlw	0
  8292  003452  6F68               	movwf	(___flmul@prod+1)& (0+255),b
  8293  003454  0E00               	movlw	0
  8294  003456  6F69               	movwf	(___flmul@prod+2)& (0+255),b
  8295  003458  0E00               	movlw	0
  8296  00345A  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  8297  00345C  0E00               	movlw	0
  8298  00345E  6F60               	movwf	___flmul@sign& (0+255),b
  8299  003460  D00F               	goto	l9411
  8300  003462                     l1879:
  8301                           
  8302                           ; BSR set to: 0
  8303  003462  C06B  F062         	movff	___flmul@temp,___flmul@bexp
  8304                           
  8305                           ; BSR set to: 0
  8306  003466  0EFF               	movlw	255
  8307  003468  1767               	andwf	___flmul@prod& (0+255),f,b
  8308  00346A  0EFF               	movlw	255
  8309  00346C  1768               	andwf	(___flmul@prod+1)& (0+255),f,b
  8310  00346E  0E7F               	movlw	127
  8311  003470  1769               	andwf	(___flmul@prod+2)& (0+255),f,b
  8312  003472  0E00               	movlw	0
  8313  003474  176A               	andwf	(___flmul@prod+3)& (0+255),f,b
  8314                           
  8315                           ; BSR set to: 0
  8316  003476  B162               	btfsc	___flmul@bexp& (0+255),0,b
  8317                           
  8318                           ; BSR set to: 0
  8319  003478  8F69               	bsf	(___flmul@prod+2)& (0+255),7,b
  8320                           
  8321                           ; BSR set to: 0
  8322  00347A  90D8               	bcf	status,0,c
  8323  00347C  3162               	rrcf	___flmul@bexp& (0+255),w,b
  8324  00347E                     L11:
  8325  00347E  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  8326  003480                     l9411:
  8327                           
  8328                           ; BSR set to: 0
  8329  003480  5160               	movf	___flmul@sign& (0+255),w,b
  8330  003482  136A               	iorwf	(___flmul@prod+3)& (0+255),f,b
  8331                           
  8332                           ; BSR set to: 0
  8333  003484  C067  F023         	movff	___flmul@prod,?___flmul
  8334  003488  C068  F024         	movff	___flmul@prod+1,?___flmul+1
  8335  00348C  C069  F025         	movff	___flmul@prod+2,?___flmul+2
  8336  003490  C06A  F026         	movff	___flmul@prod+3,?___flmul+3
  8337                           
  8338                           ; BSR set to: 0
  8339  003494  0012               	return		;funcret
  8340  003496                     __end_of___flmul:
  8341                           	callstack 0
  8342                           
  8343 ;; *************** function ___flge *****************
  8344 ;; Defined at:
  8345 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/flge.c"
  8346 ;; Parameters:    Size  Location     Type
  8347 ;;  ff1             4   46[COMRAM] unsigned char 
  8348 ;;  ff2             4   50[COMRAM] unsigned char 
  8349 ;; Auto vars:     Size  Location     Type
  8350 ;;		None
  8351 ;; Return value:  Size  Location     Type
  8352 ;;		None               void
  8353 ;; Registers used:
  8354 ;;		wreg, status,2, status,0
  8355 ;; Tracked objects:
  8356 ;;		On entry : 3F/0
  8357 ;;		On exit  : 3F/0
  8358 ;;		Unchanged: 0/0
  8359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8360 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8362 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8363 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8364 ;;Total ram usage:       12 bytes
  8365 ;; Hardware stack levels used: 1
  8366 ;; Hardware stack levels required when called: 4
  8367 ;; This function calls:
  8368 ;;		Nothing
  8369 ;; This function is called by:
  8370 ;;		_efgtoa
  8371 ;; This function uses a non-reentrant model
  8372 ;;
  8373                           
  8374                           	psect	text23
  8375  004974                     __ptext23:
  8376                           	callstack 0
  8377  004974                     ___flge:
  8378                           	callstack 20
  8379                           
  8380                           ; BSR set to: 0
  8381                           
  8382                           ; BSR set to: 0
  8383                           ;incstack = 0
  8384  004974  0E00               	movlw	0
  8385  004976  142F               	andwf	___flge@ff1^0,w,c
  8386  004978  6F6D               	movwf	??___flge& (0+255),b
  8387  00497A  0E00               	movlw	0
  8388  00497C  1430               	andwf	(___flge@ff1+1)^0,w,c
  8389  00497E  6F6E               	movwf	(??___flge+1)& (0+255),b
  8390  004980  0E80               	movlw	128
  8391  004982  1431               	andwf	(___flge@ff1+2)^0,w,c
  8392  004984  6F6F               	movwf	(??___flge+2)& (0+255),b
  8393  004986  0E7F               	movlw	127
  8394  004988  1432               	andwf	(___flge@ff1+3)^0,w,c
  8395  00498A  6F70               	movwf	(??___flge+3)& (0+255),b
  8396  00498C  516D               	movf	??___flge& (0+255),w,b
  8397  00498E  116E               	iorwf	(??___flge+1)& (0+255),w,b
  8398  004990  116F               	iorwf	(??___flge+2)& (0+255),w,b
  8399  004992  1170               	iorwf	(??___flge+3)& (0+255),w,b
  8400  004994  A4D8               	btfss	status,2,c
  8401  004996  D008               	goto	l9523
  8402                           
  8403                           ; BSR set to: 0
  8404  004998  0E00               	movlw	0
  8405  00499A  6E2F               	movwf	___flge@ff1^0,c
  8406  00499C  0E00               	movlw	0
  8407  00499E  6E30               	movwf	(___flge@ff1+1)^0,c
  8408  0049A0  0E00               	movlw	0
  8409  0049A2  6E31               	movwf	(___flge@ff1+2)^0,c
  8410  0049A4  0E00               	movlw	0
  8411  0049A6  6E32               	movwf	(___flge@ff1+3)^0,c
  8412  0049A8                     l9523:
  8413                           
  8414                           ; BSR set to: 0
  8415  0049A8  0E00               	movlw	0
  8416  0049AA  1433               	andwf	___flge@ff2^0,w,c
  8417  0049AC  6F6D               	movwf	??___flge& (0+255),b
  8418  0049AE  0E00               	movlw	0
  8419  0049B0  1434               	andwf	(___flge@ff2+1)^0,w,c
  8420  0049B2  6F6E               	movwf	(??___flge+1)& (0+255),b
  8421  0049B4  0E80               	movlw	128
  8422  0049B6  1435               	andwf	(___flge@ff2+2)^0,w,c
  8423  0049B8  6F6F               	movwf	(??___flge+2)& (0+255),b
  8424  0049BA  0E7F               	movlw	127
  8425  0049BC  1436               	andwf	(___flge@ff2+3)^0,w,c
  8426  0049BE  6F70               	movwf	(??___flge+3)& (0+255),b
  8427  0049C0  516D               	movf	??___flge& (0+255),w,b
  8428  0049C2  116E               	iorwf	(??___flge+1)& (0+255),w,b
  8429  0049C4  116F               	iorwf	(??___flge+2)& (0+255),w,b
  8430  0049C6  1170               	iorwf	(??___flge+3)& (0+255),w,b
  8431  0049C8  A4D8               	btfss	status,2,c
  8432  0049CA  D008               	goto	l9527
  8433                           
  8434                           ; BSR set to: 0
  8435  0049CC  0E00               	movlw	0
  8436  0049CE  6E33               	movwf	___flge@ff2^0,c
  8437  0049D0  0E00               	movlw	0
  8438  0049D2  6E34               	movwf	(___flge@ff2+1)^0,c
  8439  0049D4  0E00               	movlw	0
  8440  0049D6  6E35               	movwf	(___flge@ff2+2)^0,c
  8441  0049D8  0E00               	movlw	0
  8442  0049DA  6E36               	movwf	(___flge@ff2+3)^0,c
  8443  0049DC                     l9527:
  8444                           
  8445                           ; BSR set to: 0
  8446  0049DC  AE32               	btfss	(___flge@ff1+3)^0,7,c
  8447  0049DE  D009               	goto	l9531
  8448                           
  8449                           ; BSR set to: 0
  8450  0049E0  6C2F               	negf	___flge@ff1^0,c
  8451  0049E2  1E30               	comf	(___flge@ff1+1)^0,f,c
  8452  0049E4  B0D8               	btfsc	status,0,c
  8453  0049E6  2A30               	incf	(___flge@ff1+1)^0,f,c
  8454  0049E8  1E31               	comf	(___flge@ff1+2)^0,f,c
  8455  0049EA  B0D8               	btfsc	status,0,c
  8456  0049EC  2A31               	incf	(___flge@ff1+2)^0,f,c
  8457  0049EE  0E80               	movlw	128
  8458  0049F0  5632               	subfwb	(___flge@ff1+3)^0,f,c
  8459  0049F2                     l9531:
  8460                           
  8461                           ; BSR set to: 0
  8462  0049F2  AE36               	btfss	(___flge@ff2+3)^0,7,c
  8463  0049F4  D009               	goto	l1513
  8464                           
  8465                           ; BSR set to: 0
  8466  0049F6  6C33               	negf	___flge@ff2^0,c
  8467  0049F8  1E34               	comf	(___flge@ff2+1)^0,f,c
  8468  0049FA  B0D8               	btfsc	status,0,c
  8469  0049FC  2A34               	incf	(___flge@ff2+1)^0,f,c
  8470  0049FE  1E35               	comf	(___flge@ff2+2)^0,f,c
  8471  004A00  B0D8               	btfsc	status,0,c
  8472  004A02  2A35               	incf	(___flge@ff2+2)^0,f,c
  8473  004A04  0E80               	movlw	128
  8474  004A06  5636               	subfwb	(___flge@ff2+3)^0,f,c
  8475  004A08                     l1513:
  8476                           
  8477                           ; BSR set to: 0
  8478  004A08  0E00               	movlw	0
  8479  004A0A  1A2F               	xorwf	___flge@ff1^0,f,c
  8480  004A0C  0E00               	movlw	0
  8481  004A0E  1A30               	xorwf	(___flge@ff1+1)^0,f,c
  8482  004A10  0E00               	movlw	0
  8483  004A12  1A31               	xorwf	(___flge@ff1+2)^0,f,c
  8484  004A14  0E80               	movlw	128
  8485  004A16  1A32               	xorwf	(___flge@ff1+3)^0,f,c
  8486  004A18  0E00               	movlw	0
  8487  004A1A  1A33               	xorwf	___flge@ff2^0,f,c
  8488  004A1C  0E00               	movlw	0
  8489  004A1E  1A34               	xorwf	(___flge@ff2+1)^0,f,c
  8490  004A20  0E00               	movlw	0
  8491  004A22  1A35               	xorwf	(___flge@ff2+2)^0,f,c
  8492  004A24  0E80               	movlw	128
  8493  004A26  1A36               	xorwf	(___flge@ff2+3)^0,f,c
  8494  004A28  5033               	movf	___flge@ff2^0,w,c
  8495  004A2A  5C2F               	subwf	___flge@ff1^0,w,c
  8496  004A2C  5034               	movf	(___flge@ff2+1)^0,w,c
  8497  004A2E  5830               	subwfb	(___flge@ff1+1)^0,w,c
  8498  004A30  5035               	movf	(___flge@ff2+2)^0,w,c
  8499  004A32  5831               	subwfb	(___flge@ff1+2)^0,w,c
  8500  004A34  5036               	movf	(___flge@ff2+3)^0,w,c
  8501  004A36  5832               	subwfb	(___flge@ff1+3)^0,w,c
  8502  004A38  B0D8               	btfsc	status,0,c
  8503  004A3A  D002               	goto	l9537
  8504                           
  8505                           ; BSR set to: 0
  8506  004A3C  90D8               	bcf	status,0,c
  8507  004A3E  0012               	return	
  8508  004A40                     l9537:
  8509                           
  8510                           ; BSR set to: 0
  8511  004A40  80D8               	bsf	status,0,c
  8512                           
  8513                           ; BSR set to: 0
  8514  004A42  0012               	return		;funcret
  8515  004A44                     __end_of___flge:
  8516                           	callstack 0
  8517                           
  8518 ;; *************** function ___fleq *****************
  8519 ;; Defined at:
  8520 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/fleq.c"
  8521 ;; Parameters:    Size  Location     Type
  8522 ;;  ff1             4   20[COMRAM] unsigned char 
  8523 ;;  ff2             4   24[COMRAM] unsigned char 
  8524 ;; Auto vars:     Size  Location     Type
  8525 ;;		None
  8526 ;; Return value:  Size  Location     Type
  8527 ;;		None               void
  8528 ;; Registers used:
  8529 ;;		wreg, status,2, status,0
  8530 ;; Tracked objects:
  8531 ;;		On entry : 3F/0
  8532 ;;		On exit  : 3F/0
  8533 ;;		Unchanged: 3F/0
  8534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8535 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8537 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8538 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8539 ;;Total ram usage:       12 bytes
  8540 ;; Hardware stack levels used: 1
  8541 ;; Hardware stack levels required when called: 4
  8542 ;; This function calls:
  8543 ;;		Nothing
  8544 ;; This function is called by:
  8545 ;;		_efgtoa
  8546 ;; This function uses a non-reentrant model
  8547 ;;
  8548                           
  8549                           	psect	text24
  8550  005200                     __ptext24:
  8551                           	callstack 0
  8552  005200                     ___fleq:
  8553                           	callstack 20
  8554                           
  8555                           ; BSR set to: 0
  8556                           
  8557                           ; BSR set to: 0
  8558                           ;incstack = 0
  8559  005200  0E00               	movlw	0
  8560  005202  1415               	andwf	___fleq@ff1^0,w,c
  8561  005204  6E1D               	movwf	??___fleq^0,c
  8562  005206  0E00               	movlw	0
  8563  005208  1416               	andwf	(___fleq@ff1+1)^0,w,c
  8564  00520A  6E1E               	movwf	(??___fleq+1)^0,c
  8565  00520C  0E80               	movlw	128
  8566  00520E  1417               	andwf	(___fleq@ff1+2)^0,w,c
  8567  005210  6E1F               	movwf	(??___fleq+2)^0,c
  8568  005212  0E7F               	movlw	127
  8569  005214  1418               	andwf	(___fleq@ff1+3)^0,w,c
  8570  005216  6E20               	movwf	(??___fleq+3)^0,c
  8571  005218  501D               	movf	??___fleq^0,w,c
  8572  00521A  101E               	iorwf	(??___fleq+1)^0,w,c
  8573  00521C  101F               	iorwf	(??___fleq+2)^0,w,c
  8574  00521E  1020               	iorwf	(??___fleq+3)^0,w,c
  8575  005220  A4D8               	btfss	status,2,c
  8576  005222  D008               	goto	l9507
  8577                           
  8578                           ; BSR set to: 0
  8579  005224  0E00               	movlw	0
  8580  005226  6E15               	movwf	___fleq@ff1^0,c
  8581  005228  0E00               	movlw	0
  8582  00522A  6E16               	movwf	(___fleq@ff1+1)^0,c
  8583  00522C  0E00               	movlw	0
  8584  00522E  6E17               	movwf	(___fleq@ff1+2)^0,c
  8585  005230  0E00               	movlw	0
  8586  005232  6E18               	movwf	(___fleq@ff1+3)^0,c
  8587  005234                     l9507:
  8588                           
  8589                           ; BSR set to: 0
  8590  005234  0E00               	movlw	0
  8591  005236  1419               	andwf	___fleq@ff2^0,w,c
  8592  005238  6E1D               	movwf	??___fleq^0,c
  8593  00523A  0E00               	movlw	0
  8594  00523C  141A               	andwf	(___fleq@ff2+1)^0,w,c
  8595  00523E  6E1E               	movwf	(??___fleq+1)^0,c
  8596  005240  0E80               	movlw	128
  8597  005242  141B               	andwf	(___fleq@ff2+2)^0,w,c
  8598  005244  6E1F               	movwf	(??___fleq+2)^0,c
  8599  005246  0E7F               	movlw	127
  8600  005248  141C               	andwf	(___fleq@ff2+3)^0,w,c
  8601  00524A  6E20               	movwf	(??___fleq+3)^0,c
  8602  00524C  501D               	movf	??___fleq^0,w,c
  8603  00524E  101E               	iorwf	(??___fleq+1)^0,w,c
  8604  005250  101F               	iorwf	(??___fleq+2)^0,w,c
  8605  005252  1020               	iorwf	(??___fleq+3)^0,w,c
  8606  005254  A4D8               	btfss	status,2,c
  8607  005256  D008               	goto	l9511
  8608                           
  8609                           ; BSR set to: 0
  8610  005258  0E00               	movlw	0
  8611  00525A  6E19               	movwf	___fleq@ff2^0,c
  8612  00525C  0E00               	movlw	0
  8613  00525E  6E1A               	movwf	(___fleq@ff2+1)^0,c
  8614  005260  0E00               	movlw	0
  8615  005262  6E1B               	movwf	(___fleq@ff2+2)^0,c
  8616  005264  0E00               	movlw	0
  8617  005266  6E1C               	movwf	(___fleq@ff2+3)^0,c
  8618  005268                     l9511:
  8619                           
  8620                           ; BSR set to: 0
  8621  005268  5019               	movf	___fleq@ff2^0,w,c
  8622  00526A  1815               	xorwf	___fleq@ff1^0,w,c
  8623  00526C  E10A               	bnz	u10610
  8624  00526E  501A               	movf	(___fleq@ff2+1)^0,w,c
  8625  005270  1816               	xorwf	(___fleq@ff1+1)^0,w,c
  8626  005272  E107               	bnz	u10610
  8627  005274  501B               	movf	(___fleq@ff2+2)^0,w,c
  8628  005276  1817               	xorwf	(___fleq@ff1+2)^0,w,c
  8629  005278  E104               	bnz	u10610
  8630  00527A  501C               	movf	(___fleq@ff2+3)^0,w,c
  8631  00527C  1818               	xorwf	(___fleq@ff1+3)^0,w,c
  8632  00527E  B4D8               	btfsc	status,2,c
  8633  005280  D002               	goto	l9515
  8634  005282                     u10610:
  8635                           
  8636                           ; BSR set to: 0
  8637  005282  90D8               	bcf	status,0,c
  8638  005284  0012               	return	
  8639  005286                     l9515:
  8640                           
  8641                           ; BSR set to: 0
  8642  005286  80D8               	bsf	status,0,c
  8643                           
  8644                           ; BSR set to: 0
  8645  005288  0012               	return		;funcret
  8646  00528A                     __end_of___fleq:
  8647                           	callstack 0
  8648                           
  8649 ;; *************** function ___fldiv *****************
  8650 ;; Defined at:
  8651 ;;		line 11 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/sprcdiv.c"
  8652 ;; Parameters:    Size  Location     Type
  8653 ;;  b               4   20[COMRAM] unsigned char 
  8654 ;;  a               4   24[COMRAM] unsigned char 
  8655 ;; Auto vars:     Size  Location     Type
  8656 ;;  grs             4   39[COMRAM] unsigned long 
  8657 ;;  rem             4   32[COMRAM] unsigned long 
  8658 ;;  new_exp         2   37[COMRAM] short 
  8659 ;;  aexp            1   44[COMRAM] unsigned char 
  8660 ;;  bexp            1   43[COMRAM] unsigned char 
  8661 ;;  sign            1   36[COMRAM] unsigned char 
  8662 ;; Return value:  Size  Location     Type
  8663 ;;                  4   20[COMRAM] unsigned char 
  8664 ;; Registers used:
  8665 ;;		wreg, status,2, status,0
  8666 ;; Tracked objects:
  8667 ;;		On entry : 3F/0
  8668 ;;		On exit  : 3F/0
  8669 ;;		Unchanged: 3F/0
  8670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8671 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8672 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8673 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8674 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8675 ;;Total ram usage:       25 bytes
  8676 ;; Hardware stack levels used: 1
  8677 ;; Hardware stack levels required when called: 4
  8678 ;; This function calls:
  8679 ;;		Nothing
  8680 ;; This function is called by:
  8681 ;;		_efgtoa
  8682 ;; This function uses a non-reentrant model
  8683 ;;
  8684                           
  8685                           	psect	text25
  8686  0037A2                     __ptext25:
  8687                           	callstack 0
  8688  0037A2                     ___fldiv:
  8689                           	callstack 20
  8690                           
  8691                           ; BSR set to: 0
  8692                           
  8693                           ; BSR set to: 0
  8694                           ;incstack = 0
  8695  0037A2  5018               	movf	(___fldiv@b+3)^0,w,c
  8696  0037A4  0B80               	andlw	128
  8697  0037A6  6E25               	movwf	___fldiv@sign^0,c
  8698  0037A8  5018               	movf	(___fldiv@b+3)^0,w,c
  8699  0037AA  2418               	addwf	(___fldiv@b+3)^0,w,c
  8700  0037AC  6E2C               	movwf	___fldiv@bexp^0,c
  8701                           
  8702                           ; BSR set to: 0
  8703  0037AE  BE17               	btfsc	(___fldiv@b+2)^0,7,c
  8704                           
  8705                           ; BSR set to: 0
  8706  0037B0  802C               	bsf	___fldiv@bexp^0,0,c
  8707                           
  8708                           ; BSR set to: 0
  8709  0037B2  502C               	movf	___fldiv@bexp^0,w,c
  8710  0037B4  B4D8               	btfsc	status,2,c
  8711  0037B6  D00D               	goto	l9165
  8712                           
  8713                           ; BSR set to: 0
  8714  0037B8  282C               	incf	___fldiv@bexp^0,w,c
  8715  0037BA  A4D8               	btfss	status,2,c
  8716  0037BC  D008               	goto	l9161
  8717                           
  8718                           ; BSR set to: 0
  8719  0037BE  0E00               	movlw	0
  8720  0037C0  6E15               	movwf	___fldiv@b^0,c
  8721  0037C2  0E00               	movlw	0
  8722  0037C4  6E16               	movwf	(___fldiv@b+1)^0,c
  8723  0037C6  0E00               	movlw	0
  8724  0037C8  6E17               	movwf	(___fldiv@b+2)^0,c
  8725  0037CA  0E00               	movlw	0
  8726  0037CC  6E18               	movwf	(___fldiv@b+3)^0,c
  8727  0037CE                     l9161:
  8728                           
  8729                           ; BSR set to: 0
  8730  0037CE  8E17               	bsf	(___fldiv@b+2)^0,7,c
  8731  0037D0  D006               	goto	L12
  8732  0037D2                     l9165:
  8733                           
  8734                           ; BSR set to: 0
  8735  0037D2  0E00               	movlw	0
  8736  0037D4  6E15               	movwf	___fldiv@b^0,c
  8737  0037D6  0E00               	movlw	0
  8738  0037D8  6E16               	movwf	(___fldiv@b+1)^0,c
  8739  0037DA  0E00               	movlw	0
  8740  0037DC  6E17               	movwf	(___fldiv@b+2)^0,c
  8741  0037DE                     L12:
  8742  0037DE  0E00               	movlw	0
  8743  0037E0  6E18               	movwf	(___fldiv@b+3)^0,c
  8744                           
  8745                           ; BSR set to: 0
  8746  0037E2  501C               	movf	(___fldiv@a+3)^0,w,c
  8747  0037E4  0B80               	andlw	128
  8748  0037E6  1A25               	xorwf	___fldiv@sign^0,f,c
  8749                           
  8750                           ; BSR set to: 0
  8751  0037E8  501C               	movf	(___fldiv@a+3)^0,w,c
  8752  0037EA  241C               	addwf	(___fldiv@a+3)^0,w,c
  8753  0037EC  6E2D               	movwf	___fldiv@aexp^0,c
  8754                           
  8755                           ; BSR set to: 0
  8756  0037EE  BE1B               	btfsc	(___fldiv@a+2)^0,7,c
  8757                           
  8758                           ; BSR set to: 0
  8759  0037F0  802D               	bsf	___fldiv@aexp^0,0,c
  8760                           
  8761                           ; BSR set to: 0
  8762  0037F2  502D               	movf	___fldiv@aexp^0,w,c
  8763  0037F4  B4D8               	btfsc	status,2,c
  8764  0037F6  D00D               	goto	l9185
  8765                           
  8766                           ; BSR set to: 0
  8767  0037F8  282D               	incf	___fldiv@aexp^0,w,c
  8768  0037FA  A4D8               	btfss	status,2,c
  8769  0037FC  D008               	goto	l9181
  8770                           
  8771                           ; BSR set to: 0
  8772  0037FE  0E00               	movlw	0
  8773  003800  6E19               	movwf	___fldiv@a^0,c
  8774  003802  0E00               	movlw	0
  8775  003804  6E1A               	movwf	(___fldiv@a+1)^0,c
  8776  003806  0E00               	movlw	0
  8777  003808  6E1B               	movwf	(___fldiv@a+2)^0,c
  8778  00380A  0E00               	movlw	0
  8779  00380C  6E1C               	movwf	(___fldiv@a+3)^0,c
  8780  00380E                     l9181:
  8781                           
  8782                           ; BSR set to: 0
  8783  00380E  8E1B               	bsf	(___fldiv@a+2)^0,7,c
  8784  003810  D006               	goto	L13
  8785  003812                     l9185:
  8786                           
  8787                           ; BSR set to: 0
  8788  003812  0E00               	movlw	0
  8789  003814  6E19               	movwf	___fldiv@a^0,c
  8790  003816  0E00               	movlw	0
  8791  003818  6E1A               	movwf	(___fldiv@a+1)^0,c
  8792  00381A  0E00               	movlw	0
  8793  00381C  6E1B               	movwf	(___fldiv@a+2)^0,c
  8794  00381E                     L13:
  8795  00381E  0E00               	movlw	0
  8796  003820  6E1C               	movwf	(___fldiv@a+3)^0,c
  8797                           
  8798                           ; BSR set to: 0
  8799  003822  5019               	movf	___fldiv@a^0,w,c
  8800  003824  101A               	iorwf	(___fldiv@a+1)^0,w,c
  8801  003826  101B               	iorwf	(___fldiv@a+2)^0,w,c
  8802  003828  101C               	iorwf	(___fldiv@a+3)^0,w,c
  8803  00382A  A4D8               	btfss	status,2,c
  8804  00382C  D017               	goto	l9199
  8805                           
  8806                           ; BSR set to: 0
  8807  00382E  0E00               	movlw	0
  8808  003830  6E15               	movwf	___fldiv@b^0,c
  8809  003832  0E00               	movlw	0
  8810  003834  6E16               	movwf	(___fldiv@b+1)^0,c
  8811  003836  0E00               	movlw	0
  8812  003838  6E17               	movwf	(___fldiv@b+2)^0,c
  8813  00383A  0E00               	movlw	0
  8814  00383C  6E18               	movwf	(___fldiv@b+3)^0,c
  8815                           
  8816                           ; BSR set to: 0
  8817  00383E  0E80               	movlw	128
  8818  003840  1217               	iorwf	(___fldiv@b+2)^0,f,c
  8819  003842  0E7F               	movlw	127
  8820  003844  1218               	iorwf	(___fldiv@b+3)^0,f,c
  8821  003846                     l9193:
  8822                           
  8823                           ; BSR set to: 0
  8824  003846  5025               	movf	___fldiv@sign^0,w,c
  8825  003848  1218               	iorwf	(___fldiv@b+3)^0,f,c
  8826                           
  8827                           ; BSR set to: 0
  8828  00384A  C015  F015         	movff	___fldiv@b,?___fldiv
  8829  00384E  C016  F016         	movff	___fldiv@b+1,?___fldiv+1
  8830  003852  C017  F017         	movff	___fldiv@b+2,?___fldiv+2
  8831  003856  C018  F018         	movff	___fldiv@b+3,?___fldiv+3
  8832  00385A  0012               	return	
  8833  00385C                     l9199:
  8834                           
  8835                           ; BSR set to: 0
  8836  00385C  502C               	movf	___fldiv@bexp^0,w,c
  8837  00385E  A4D8               	btfss	status,2,c
  8838  003860  D009               	goto	l9207
  8839                           
  8840                           ; BSR set to: 0
  8841                           
  8842                           ; BSR set to: 0
  8843  003862  0E00               	movlw	0
  8844  003864  6E15               	movwf	?___fldiv^0,c
  8845  003866  0E00               	movlw	0
  8846  003868  6E16               	movwf	(?___fldiv+1)^0,c
  8847  00386A  0E00               	movlw	0
  8848  00386C  6E17               	movwf	(?___fldiv+2)^0,c
  8849  00386E  0E00               	movlw	0
  8850  003870  6E18               	movwf	(?___fldiv+3)^0,c
  8851  003872  0012               	return	
  8852  003874                     l9207:
  8853                           
  8854                           ; BSR set to: 0
  8855  003874  502D               	movf	___fldiv@aexp^0,w,c
  8856  003876  C02C  F01D         	movff	___fldiv@bexp,??___fldiv
  8857  00387A  6A1E               	clrf	(??___fldiv+1)^0,c
  8858  00387C  5E1D               	subwf	??___fldiv^0,f,c
  8859  00387E  0E00               	movlw	0
  8860  003880  5A1E               	subwfb	(??___fldiv+1)^0,f,c
  8861  003882  0E7F               	movlw	127
  8862  003884  241D               	addwf	??___fldiv^0,w,c
  8863  003886  6E26               	movwf	___fldiv@new_exp^0,c
  8864  003888  0E00               	movlw	0
  8865  00388A  201E               	addwfc	(??___fldiv+1)^0,w,c
  8866  00388C  6E27               	movwf	(___fldiv@new_exp+1)^0,c
  8867                           
  8868                           ; BSR set to: 0
  8869  00388E  C015  F021         	movff	___fldiv@b,___fldiv@rem
  8870  003892  C016  F022         	movff	___fldiv@b+1,___fldiv@rem+1
  8871  003896  C017  F023         	movff	___fldiv@b+2,___fldiv@rem+2
  8872  00389A  C018  F024         	movff	___fldiv@b+3,___fldiv@rem+3
  8873                           
  8874                           ; BSR set to: 0
  8875  00389E  0E00               	movlw	0
  8876  0038A0  6E15               	movwf	___fldiv@b^0,c
  8877  0038A2  0E00               	movlw	0
  8878  0038A4  6E16               	movwf	(___fldiv@b+1)^0,c
  8879  0038A6  0E00               	movlw	0
  8880  0038A8  6E17               	movwf	(___fldiv@b+2)^0,c
  8881  0038AA  0E00               	movlw	0
  8882  0038AC  6E18               	movwf	(___fldiv@b+3)^0,c
  8883                           
  8884                           ; BSR set to: 0
  8885  0038AE  0E00               	movlw	0
  8886  0038B0  6E28               	movwf	___fldiv@grs^0,c
  8887  0038B2  0E00               	movlw	0
  8888  0038B4  6E29               	movwf	(___fldiv@grs+1)^0,c
  8889  0038B6  0E00               	movlw	0
  8890  0038B8  6E2A               	movwf	(___fldiv@grs+2)^0,c
  8891  0038BA  0E00               	movlw	0
  8892  0038BC  6E2B               	movwf	(___fldiv@grs+3)^0,c
  8893                           
  8894                           ; BSR set to: 0
  8895  0038BE  0E00               	movlw	0
  8896  0038C0  6E2D               	movwf	___fldiv@aexp^0,c
  8897  0038C2  D028               	goto	l1832
  8898  0038C4                     l9217:
  8899                           
  8900                           ; BSR set to: 0
  8901  0038C4  502D               	movf	___fldiv@aexp^0,w,c
  8902  0038C6  B4D8               	btfsc	status,2,c
  8903  0038C8  D011               	goto	l9225
  8904                           
  8905                           ; BSR set to: 0
  8906  0038CA  90D8               	bcf	status,0,c
  8907  0038CC  3621               	rlcf	___fldiv@rem^0,f,c
  8908  0038CE  3622               	rlcf	(___fldiv@rem+1)^0,f,c
  8909  0038D0  3623               	rlcf	(___fldiv@rem+2)^0,f,c
  8910  0038D2  3624               	rlcf	(___fldiv@rem+3)^0,f,c
  8911  0038D4  90D8               	bcf	status,0,c
  8912  0038D6  3615               	rlcf	___fldiv@b^0,f,c
  8913  0038D8  3616               	rlcf	(___fldiv@b+1)^0,f,c
  8914  0038DA  3617               	rlcf	(___fldiv@b+2)^0,f,c
  8915  0038DC  3618               	rlcf	(___fldiv@b+3)^0,f,c
  8916                           
  8917                           ; BSR set to: 0
  8918  0038DE  BE2B               	btfsc	(___fldiv@grs+3)^0,7,c
  8919                           
  8920                           ; BSR set to: 0
  8921  0038E0  8015               	bsf	___fldiv@b^0,0,c
  8922                           
  8923                           ; BSR set to: 0
  8924  0038E2  90D8               	bcf	status,0,c
  8925  0038E4  3628               	rlcf	___fldiv@grs^0,f,c
  8926  0038E6  3629               	rlcf	(___fldiv@grs+1)^0,f,c
  8927  0038E8  362A               	rlcf	(___fldiv@grs+2)^0,f,c
  8928  0038EA  362B               	rlcf	(___fldiv@grs+3)^0,f,c
  8929  0038EC                     l9225:
  8930                           
  8931                           ; BSR set to: 0
  8932  0038EC  5019               	movf	___fldiv@a^0,w,c
  8933  0038EE  5C21               	subwf	___fldiv@rem^0,w,c
  8934  0038F0  501A               	movf	(___fldiv@a+1)^0,w,c
  8935  0038F2  5822               	subwfb	(___fldiv@rem+1)^0,w,c
  8936  0038F4  501B               	movf	(___fldiv@a+2)^0,w,c
  8937  0038F6  5823               	subwfb	(___fldiv@rem+2)^0,w,c
  8938  0038F8  501C               	movf	(___fldiv@a+3)^0,w,c
  8939  0038FA  5824               	subwfb	(___fldiv@rem+3)^0,w,c
  8940  0038FC  A0D8               	btfss	status,0,c
  8941  0038FE  D009               	goto	l9231
  8942                           
  8943                           ; BSR set to: 0
  8944  003900  8C2B               	bsf	(___fldiv@grs+3)^0,6,c
  8945                           
  8946                           ; BSR set to: 0
  8947  003902  5019               	movf	___fldiv@a^0,w,c
  8948  003904  5E21               	subwf	___fldiv@rem^0,f,c
  8949  003906  501A               	movf	(___fldiv@a+1)^0,w,c
  8950  003908  5A22               	subwfb	(___fldiv@rem+1)^0,f,c
  8951  00390A  501B               	movf	(___fldiv@a+2)^0,w,c
  8952  00390C  5A23               	subwfb	(___fldiv@rem+2)^0,f,c
  8953  00390E  501C               	movf	(___fldiv@a+3)^0,w,c
  8954  003910  5A24               	subwfb	(___fldiv@rem+3)^0,f,c
  8955  003912                     l9231:
  8956                           
  8957                           ; BSR set to: 0
  8958  003912  2A2D               	incf	___fldiv@aexp^0,f,c
  8959  003914                     l1832:
  8960                           
  8961                           ; BSR set to: 0
  8962  003914  0E19               	movlw	25
  8963  003916  642D               	cpfsgt	___fldiv@aexp^0,c
  8964  003918  D7D5               	goto	l9217
  8965                           
  8966                           ; BSR set to: 0
  8967  00391A  5021               	movf	___fldiv@rem^0,w,c
  8968  00391C  1022               	iorwf	(___fldiv@rem+1)^0,w,c
  8969  00391E  1023               	iorwf	(___fldiv@rem+2)^0,w,c
  8970  003920  1024               	iorwf	(___fldiv@rem+3)^0,w,c
  8971  003922  B4D8               	btfsc	status,2,c
  8972  003924  D011               	goto	l9243
  8973                           
  8974                           ; BSR set to: 0
  8975  003926  8028               	bsf	___fldiv@grs^0,0,c
  8976  003928  D00F               	goto	l9243
  8977  00392A                     l9237:
  8978                           
  8979                           ; BSR set to: 0
  8980  00392A  90D8               	bcf	status,0,c
  8981  00392C  3615               	rlcf	___fldiv@b^0,f,c
  8982  00392E  3616               	rlcf	(___fldiv@b+1)^0,f,c
  8983  003930  3617               	rlcf	(___fldiv@b+2)^0,f,c
  8984  003932  3618               	rlcf	(___fldiv@b+3)^0,f,c
  8985                           
  8986                           ; BSR set to: 0
  8987  003934  BE2B               	btfsc	(___fldiv@grs+3)^0,7,c
  8988                           
  8989                           ; BSR set to: 0
  8990  003936  8015               	bsf	___fldiv@b^0,0,c
  8991                           
  8992                           ; BSR set to: 0
  8993  003938  90D8               	bcf	status,0,c
  8994  00393A  3628               	rlcf	___fldiv@grs^0,f,c
  8995  00393C  3629               	rlcf	(___fldiv@grs+1)^0,f,c
  8996  00393E  362A               	rlcf	(___fldiv@grs+2)^0,f,c
  8997  003940  362B               	rlcf	(___fldiv@grs+3)^0,f,c
  8998  003942  0626               	decf	___fldiv@new_exp^0,f,c
  8999  003944  A0D8               	btfss	status,0,c
  9000  003946  0627               	decf	(___fldiv@new_exp+1)^0,f,c
  9001  003948                     l9243:
  9002                           
  9003                           ; BSR set to: 0
  9004  003948  AE17               	btfss	(___fldiv@b+2)^0,7,c
  9005  00394A  D7EF               	goto	l9237
  9006                           
  9007                           ; BSR set to: 0
  9008  00394C  0E00               	movlw	0
  9009  00394E  6E2D               	movwf	___fldiv@aexp^0,c
  9010                           
  9011                           ; BSR set to: 0
  9012  003950  AE2B               	btfss	(___fldiv@grs+3)^0,7,c
  9013  003952  D017               	goto	l1843
  9014                           
  9015                           ; BSR set to: 0
  9016  003954  0EFF               	movlw	255
  9017  003956  1428               	andwf	___fldiv@grs^0,w,c
  9018  003958  6E1D               	movwf	??___fldiv^0,c
  9019  00395A  0EFF               	movlw	255
  9020  00395C  1429               	andwf	(___fldiv@grs+1)^0,w,c
  9021  00395E  6E1E               	movwf	(??___fldiv+1)^0,c
  9022  003960  0EFF               	movlw	255
  9023  003962  142A               	andwf	(___fldiv@grs+2)^0,w,c
  9024  003964  6E1F               	movwf	(??___fldiv+2)^0,c
  9025  003966  0E7F               	movlw	127
  9026  003968  142B               	andwf	(___fldiv@grs+3)^0,w,c
  9027  00396A  6E20               	movwf	(??___fldiv+3)^0,c
  9028  00396C  501D               	movf	??___fldiv^0,w,c
  9029  00396E  101E               	iorwf	(??___fldiv+1)^0,w,c
  9030  003970  101F               	iorwf	(??___fldiv+2)^0,w,c
  9031  003972  1020               	iorwf	(??___fldiv+3)^0,w,c
  9032  003974  B4D8               	btfsc	status,2,c
  9033  003976  D003               	goto	l1844
  9034  003978                     u10220:
  9035                           
  9036                           ; BSR set to: 0
  9037  003978  0E01               	movlw	1
  9038  00397A  6E2D               	movwf	___fldiv@aexp^0,c
  9039  00397C  D002               	goto	l1843
  9040  00397E                     l1844:
  9041                           
  9042                           ; BSR set to: 0
  9043  00397E  B015               	btfsc	___fldiv@b^0,0,c
  9044  003980  D7FB               	goto	u10220
  9045  003982                     l1843:
  9046                           
  9047                           ; BSR set to: 0
  9048  003982  502D               	movf	___fldiv@aexp^0,w,c
  9049  003984  B4D8               	btfsc	status,2,c
  9050  003986  D01F               	goto	l9263
  9051                           
  9052                           ; BSR set to: 0
  9053  003988  0E01               	movlw	1
  9054  00398A  2615               	addwf	___fldiv@b^0,f,c
  9055  00398C  0E00               	movlw	0
  9056  00398E  2216               	addwfc	(___fldiv@b+1)^0,f,c
  9057  003990  2217               	addwfc	(___fldiv@b+2)^0,f,c
  9058  003992  2218               	addwfc	(___fldiv@b+3)^0,f,c
  9059                           
  9060                           ; BSR set to: 0
  9061  003994  A018               	btfss	(___fldiv@b+3)^0,0,c
  9062  003996  D017               	goto	l9263
  9063                           
  9064                           ; BSR set to: 0
  9065  003998  C015  F01D         	movff	___fldiv@b,??___fldiv
  9066  00399C  C016  F01E         	movff	___fldiv@b+1,??___fldiv+1
  9067  0039A0  C017  F01F         	movff	___fldiv@b+2,??___fldiv+2
  9068  0039A4  C018  F020         	movff	___fldiv@b+3,??___fldiv+3
  9069  0039A8  3420               	rlcf	(??___fldiv+3)^0,w,c
  9070  0039AA  3220               	rrcf	(??___fldiv+3)^0,f,c
  9071  0039AC  321F               	rrcf	(??___fldiv+2)^0,f,c
  9072  0039AE  321E               	rrcf	(??___fldiv+1)^0,f,c
  9073  0039B0  321D               	rrcf	??___fldiv^0,f,c
  9074  0039B2  C01D  F015         	movff	??___fldiv,___fldiv@b
  9075  0039B6  C01E  F016         	movff	??___fldiv+1,___fldiv@b+1
  9076  0039BA  C01F  F017         	movff	??___fldiv+2,___fldiv@b+2
  9077  0039BE  C020  F018         	movff	??___fldiv+3,___fldiv@b+3
  9078                           
  9079                           ; BSR set to: 0
  9080  0039C2  4A26               	infsnz	___fldiv@new_exp^0,f,c
  9081  0039C4  2A27               	incf	(___fldiv@new_exp+1)^0,f,c
  9082  0039C6                     l9263:
  9083                           
  9084                           ; BSR set to: 0
  9085  0039C6  BE27               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9086  0039C8  D010               	goto	l9267
  9087  0039CA  5027               	movf	(___fldiv@new_exp+1)^0,w,c
  9088  0039CC  E103               	bnz	u10260
  9089  0039CE  2826               	incf	___fldiv@new_exp^0,w,c
  9090  0039D0  A0D8               	btfss	status,0,c
  9091  0039D2  D00B               	goto	l9267
  9092  0039D4                     u10260:
  9093                           
  9094                           ; BSR set to: 0
  9095  0039D4  0E00               	movlw	0
  9096  0039D6  6E27               	movwf	(___fldiv@new_exp+1)^0,c
  9097  0039D8  6826               	setf	___fldiv@new_exp^0,c
  9098  0039DA  0E00               	movlw	0
  9099  0039DC  6E15               	movwf	___fldiv@b^0,c
  9100  0039DE  0E00               	movlw	0
  9101  0039E0  6E16               	movwf	(___fldiv@b+1)^0,c
  9102  0039E2  0E00               	movlw	0
  9103  0039E4  6E17               	movwf	(___fldiv@b+2)^0,c
  9104  0039E6  0E00               	movlw	0
  9105  0039E8  6E18               	movwf	(___fldiv@b+3)^0,c
  9106  0039EA                     l9267:
  9107                           
  9108                           ; BSR set to: 0
  9109  0039EA  BE27               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9110  0039EC  D005               	goto	u10270
  9111  0039EE  5027               	movf	(___fldiv@new_exp+1)^0,w,c
  9112  0039F0  E111               	bnz	l9271
  9113  0039F2  0426               	decf	___fldiv@new_exp^0,w,c
  9114  0039F4  B0D8               	btfsc	status,0,c
  9115  0039F6  D00E               	goto	l9271
  9116  0039F8                     u10270:
  9117                           
  9118                           ; BSR set to: 0
  9119  0039F8  0E00               	movlw	0
  9120  0039FA  6E27               	movwf	(___fldiv@new_exp+1)^0,c
  9121  0039FC  0E00               	movlw	0
  9122  0039FE  6E26               	movwf	___fldiv@new_exp^0,c
  9123  003A00  0E00               	movlw	0
  9124  003A02  6E15               	movwf	___fldiv@b^0,c
  9125  003A04  0E00               	movlw	0
  9126  003A06  6E16               	movwf	(___fldiv@b+1)^0,c
  9127  003A08  0E00               	movlw	0
  9128  003A0A  6E17               	movwf	(___fldiv@b+2)^0,c
  9129  003A0C  0E00               	movlw	0
  9130  003A0E  6E18               	movwf	(___fldiv@b+3)^0,c
  9131  003A10  0E00               	movlw	0
  9132  003A12  6E25               	movwf	___fldiv@sign^0,c
  9133  003A14                     l9271:
  9134                           
  9135                           ; BSR set to: 0
  9136  003A14  C026  F02C         	movff	___fldiv@new_exp,___fldiv@bexp
  9137                           
  9138                           ; BSR set to: 0
  9139  003A18  A02C               	btfss	___fldiv@bexp^0,0,c
  9140  003A1A  D002               	goto	l9277
  9141                           
  9142                           ; BSR set to: 0
  9143  003A1C  8E17               	bsf	(___fldiv@b+2)^0,7,c
  9144  003A1E  D001               	goto	l9279
  9145  003A20                     l9277:
  9146                           
  9147                           ; BSR set to: 0
  9148  003A20  9E17               	bcf	(___fldiv@b+2)^0,7,c
  9149  003A22                     l9279:
  9150                           
  9151                           ; BSR set to: 0
  9152  003A22  90D8               	bcf	status,0,c
  9153  003A24  302C               	rrcf	___fldiv@bexp^0,w,c
  9154  003A26  6E18               	movwf	(___fldiv@b+3)^0,c
  9155  003A28  D70E               	goto	l9193
  9156  003A2A                     __end_of___fldiv:
  9157                           	callstack 0
  9158                           
  9159 ;; *************** function ___awmod *****************
  9160 ;; Defined at:
  9161 ;;		line 7 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/awmod.c"
  9162 ;; Parameters:    Size  Location     Type
  9163 ;;  dividend        2   20[COMRAM] int 
  9164 ;;  divisor         2   22[COMRAM] int 
  9165 ;; Auto vars:     Size  Location     Type
  9166 ;;  sign            1   25[COMRAM] unsigned char 
  9167 ;;  counter         1   24[COMRAM] unsigned char 
  9168 ;; Return value:  Size  Location     Type
  9169 ;;                  2   20[COMRAM] int 
  9170 ;; Registers used:
  9171 ;;		wreg, status,2, status,0
  9172 ;; Tracked objects:
  9173 ;;		On entry : 3F/0
  9174 ;;		On exit  : 3F/0
  9175 ;;		Unchanged: 3F/0
  9176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9177 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9178 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9180 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9181 ;;Total ram usage:        6 bytes
  9182 ;; Hardware stack levels used: 1
  9183 ;; Hardware stack levels required when called: 4
  9184 ;; This function calls:
  9185 ;;		Nothing
  9186 ;; This function is called by:
  9187 ;;		_efgtoa
  9188 ;; This function uses a non-reentrant model
  9189 ;;
  9190                           
  9191                           	psect	text26
  9192  005404                     __ptext26:
  9193                           	callstack 0
  9194  005404                     ___awmod:
  9195                           	callstack 20
  9196                           
  9197                           ; BSR set to: 0
  9198                           
  9199                           ; BSR set to: 0
  9200                           ;incstack = 0
  9201  005404  0E00               	movlw	0
  9202  005406  6E1A               	movwf	___awmod@sign^0,c
  9203                           
  9204                           ; BSR set to: 0
  9205  005408  AE16               	btfss	(___awmod@dividend+1)^0,7,c
  9206  00540A  D006               	goto	l9475
  9207                           
  9208                           ; BSR set to: 0
  9209  00540C  6C15               	negf	___awmod@dividend^0,c
  9210  00540E  1E16               	comf	(___awmod@dividend+1)^0,f,c
  9211  005410  B0D8               	btfsc	status,0,c
  9212  005412  2A16               	incf	(___awmod@dividend+1)^0,f,c
  9213                           
  9214                           ; BSR set to: 0
  9215  005414  0E01               	movlw	1
  9216  005416  6E1A               	movwf	___awmod@sign^0,c
  9217  005418                     l9475:
  9218                           
  9219                           ; BSR set to: 0
  9220  005418  AE18               	btfss	(___awmod@divisor+1)^0,7,c
  9221  00541A  D004               	goto	l9479
  9222                           
  9223                           ; BSR set to: 0
  9224  00541C  6C17               	negf	___awmod@divisor^0,c
  9225  00541E  1E18               	comf	(___awmod@divisor+1)^0,f,c
  9226  005420  B0D8               	btfsc	status,0,c
  9227  005422  2A18               	incf	(___awmod@divisor+1)^0,f,c
  9228  005424                     l9479:
  9229                           
  9230                           ; BSR set to: 0
  9231  005424  5017               	movf	___awmod@divisor^0,w,c
  9232  005426  1018               	iorwf	(___awmod@divisor+1)^0,w,c
  9233  005428  B4D8               	btfsc	status,2,c
  9234  00542A  D018               	goto	l9495
  9235                           
  9236                           ; BSR set to: 0
  9237  00542C  0E01               	movlw	1
  9238  00542E  6E19               	movwf	___awmod@counter^0,c
  9239  005430  D004               	goto	l9485
  9240  005432                     l9483:
  9241                           
  9242                           ; BSR set to: 0
  9243  005432  90D8               	bcf	status,0,c
  9244  005434  3617               	rlcf	___awmod@divisor^0,f,c
  9245  005436  3618               	rlcf	(___awmod@divisor+1)^0,f,c
  9246  005438  2A19               	incf	___awmod@counter^0,f,c
  9247  00543A                     l9485:
  9248                           
  9249                           ; BSR set to: 0
  9250  00543A  AE18               	btfss	(___awmod@divisor+1)^0,7,c
  9251  00543C  D7FA               	goto	l9483
  9252  00543E                     u10560:
  9253                           
  9254                           ; BSR set to: 0
  9255  00543E  5017               	movf	___awmod@divisor^0,w,c
  9256  005440  5C15               	subwf	___awmod@dividend^0,w,c
  9257  005442  5018               	movf	(___awmod@divisor+1)^0,w,c
  9258  005444  5816               	subwfb	(___awmod@dividend+1)^0,w,c
  9259  005446  A0D8               	btfss	status,0,c
  9260  005448  D004               	goto	l9491
  9261                           
  9262                           ; BSR set to: 0
  9263  00544A  5017               	movf	___awmod@divisor^0,w,c
  9264  00544C  5E15               	subwf	___awmod@dividend^0,f,c
  9265  00544E  5018               	movf	(___awmod@divisor+1)^0,w,c
  9266  005450  5A16               	subwfb	(___awmod@dividend+1)^0,f,c
  9267  005452                     l9491:
  9268                           
  9269                           ; BSR set to: 0
  9270  005452  90D8               	bcf	status,0,c
  9271  005454  3218               	rrcf	(___awmod@divisor+1)^0,f,c
  9272  005456  3217               	rrcf	___awmod@divisor^0,f,c
  9273                           
  9274                           ; BSR set to: 0
  9275  005458  2E19               	decfsz	___awmod@counter^0,f,c
  9276  00545A  D7F1               	goto	u10560
  9277  00545C                     l9495:
  9278                           
  9279                           ; BSR set to: 0
  9280  00545C  501A               	movf	___awmod@sign^0,w,c
  9281  00545E  B4D8               	btfsc	status,2,c
  9282  005460  D004               	goto	l9499
  9283                           
  9284                           ; BSR set to: 0
  9285  005462  6C15               	negf	___awmod@dividend^0,c
  9286  005464  1E16               	comf	(___awmod@dividend+1)^0,f,c
  9287  005466  B0D8               	btfsc	status,0,c
  9288  005468  2A16               	incf	(___awmod@dividend+1)^0,f,c
  9289  00546A                     l9499:
  9290                           
  9291                           ; BSR set to: 0
  9292  00546A  C015  F015         	movff	___awmod@dividend,?___awmod
  9293  00546E  C016  F016         	movff	___awmod@dividend+1,?___awmod+1
  9294                           
  9295                           ; BSR set to: 0
  9296  005472  0012               	return		;funcret
  9297  005474                     __end_of___awmod:
  9298                           	callstack 0
  9299                           
  9300 ;; *************** function ___awdiv *****************
  9301 ;; Defined at:
  9302 ;;		line 7 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/awdiv.c"
  9303 ;; Parameters:    Size  Location     Type
  9304 ;;  dividend        2   20[COMRAM] int 
  9305 ;;  divisor         2   22[COMRAM] int 
  9306 ;; Auto vars:     Size  Location     Type
  9307 ;;  quotient        2   26[COMRAM] int 
  9308 ;;  sign            1   25[COMRAM] unsigned char 
  9309 ;;  counter         1   24[COMRAM] unsigned char 
  9310 ;; Return value:  Size  Location     Type
  9311 ;;                  2   20[COMRAM] int 
  9312 ;; Registers used:
  9313 ;;		wreg, status,2, status,0
  9314 ;; Tracked objects:
  9315 ;;		On entry : 3F/0
  9316 ;;		On exit  : 3F/0
  9317 ;;		Unchanged: 3F/0
  9318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9319 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9320 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9322 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9323 ;;Total ram usage:        8 bytes
  9324 ;; Hardware stack levels used: 1
  9325 ;; Hardware stack levels required when called: 4
  9326 ;; This function calls:
  9327 ;;		Nothing
  9328 ;; This function is called by:
  9329 ;;		_efgtoa
  9330 ;; This function uses a non-reentrant model
  9331 ;;
  9332                           
  9333                           	psect	text27
  9334  00530E                     __ptext27:
  9335                           	callstack 0
  9336  00530E                     ___awdiv:
  9337                           	callstack 20
  9338                           
  9339                           ; BSR set to: 0
  9340                           
  9341                           ; BSR set to: 0
  9342                           ;incstack = 0
  9343  00530E  0E00               	movlw	0
  9344  005310  6E1A               	movwf	___awdiv@sign^0,c
  9345                           
  9346                           ; BSR set to: 0
  9347  005312  AE18               	btfss	(___awdiv@divisor+1)^0,7,c
  9348  005314  D006               	goto	l9431
  9349                           
  9350                           ; BSR set to: 0
  9351  005316  6C17               	negf	___awdiv@divisor^0,c
  9352  005318  1E18               	comf	(___awdiv@divisor+1)^0,f,c
  9353  00531A  B0D8               	btfsc	status,0,c
  9354  00531C  2A18               	incf	(___awdiv@divisor+1)^0,f,c
  9355                           
  9356                           ; BSR set to: 0
  9357  00531E  0E01               	movlw	1
  9358  005320  6E1A               	movwf	___awdiv@sign^0,c
  9359  005322                     l9431:
  9360                           
  9361                           ; BSR set to: 0
  9362  005322  AE16               	btfss	(___awdiv@dividend+1)^0,7,c
  9363  005324  D006               	goto	l9437
  9364                           
  9365                           ; BSR set to: 0
  9366  005326  6C15               	negf	___awdiv@dividend^0,c
  9367  005328  1E16               	comf	(___awdiv@dividend+1)^0,f,c
  9368  00532A  B0D8               	btfsc	status,0,c
  9369  00532C  2A16               	incf	(___awdiv@dividend+1)^0,f,c
  9370                           
  9371                           ; BSR set to: 0
  9372  00532E  0E01               	movlw	1
  9373  005330  1A1A               	xorwf	___awdiv@sign^0,f,c
  9374  005332                     l9437:
  9375                           
  9376                           ; BSR set to: 0
  9377  005332  0E00               	movlw	0
  9378  005334  6E1C               	movwf	(___awdiv@quotient+1)^0,c
  9379  005336  0E00               	movlw	0
  9380  005338  6E1B               	movwf	___awdiv@quotient^0,c
  9381                           
  9382                           ; BSR set to: 0
  9383  00533A  5017               	movf	___awdiv@divisor^0,w,c
  9384  00533C  1018               	iorwf	(___awdiv@divisor+1)^0,w,c
  9385  00533E  B4D8               	btfsc	status,2,c
  9386  005340  D01C               	goto	l9459
  9387                           
  9388                           ; BSR set to: 0
  9389  005342  0E01               	movlw	1
  9390  005344  6E19               	movwf	___awdiv@counter^0,c
  9391  005346  D004               	goto	l9445
  9392  005348                     l9443:
  9393                           
  9394                           ; BSR set to: 0
  9395  005348  90D8               	bcf	status,0,c
  9396  00534A  3617               	rlcf	___awdiv@divisor^0,f,c
  9397  00534C  3618               	rlcf	(___awdiv@divisor+1)^0,f,c
  9398  00534E  2A19               	incf	___awdiv@counter^0,f,c
  9399  005350                     l9445:
  9400                           
  9401                           ; BSR set to: 0
  9402  005350  AE18               	btfss	(___awdiv@divisor+1)^0,7,c
  9403  005352  D7FA               	goto	l9443
  9404  005354                     u10500:
  9405                           
  9406                           ; BSR set to: 0
  9407  005354  90D8               	bcf	status,0,c
  9408  005356  361B               	rlcf	___awdiv@quotient^0,f,c
  9409  005358  361C               	rlcf	(___awdiv@quotient+1)^0,f,c
  9410                           
  9411                           ; BSR set to: 0
  9412  00535A  5017               	movf	___awdiv@divisor^0,w,c
  9413  00535C  5C15               	subwf	___awdiv@dividend^0,w,c
  9414  00535E  5018               	movf	(___awdiv@divisor+1)^0,w,c
  9415  005360  5816               	subwfb	(___awdiv@dividend+1)^0,w,c
  9416  005362  A0D8               	btfss	status,0,c
  9417  005364  D005               	goto	l9455
  9418                           
  9419                           ; BSR set to: 0
  9420  005366  5017               	movf	___awdiv@divisor^0,w,c
  9421  005368  5E15               	subwf	___awdiv@dividend^0,f,c
  9422  00536A  5018               	movf	(___awdiv@divisor+1)^0,w,c
  9423  00536C  5A16               	subwfb	(___awdiv@dividend+1)^0,f,c
  9424                           
  9425                           ; BSR set to: 0
  9426  00536E  801B               	bsf	___awdiv@quotient^0,0,c
  9427  005370                     l9455:
  9428                           
  9429                           ; BSR set to: 0
  9430  005370  90D8               	bcf	status,0,c
  9431  005372  3218               	rrcf	(___awdiv@divisor+1)^0,f,c
  9432  005374  3217               	rrcf	___awdiv@divisor^0,f,c
  9433                           
  9434                           ; BSR set to: 0
  9435  005376  2E19               	decfsz	___awdiv@counter^0,f,c
  9436  005378  D7ED               	goto	u10500
  9437  00537A                     l9459:
  9438                           
  9439                           ; BSR set to: 0
  9440  00537A  501A               	movf	___awdiv@sign^0,w,c
  9441  00537C  B4D8               	btfsc	status,2,c
  9442  00537E  D004               	goto	l9463
  9443                           
  9444                           ; BSR set to: 0
  9445  005380  6C1B               	negf	___awdiv@quotient^0,c
  9446  005382  1E1C               	comf	(___awdiv@quotient+1)^0,f,c
  9447  005384  B0D8               	btfsc	status,0,c
  9448  005386  2A1C               	incf	(___awdiv@quotient+1)^0,f,c
  9449  005388                     l9463:
  9450                           
  9451                           ; BSR set to: 0
  9452  005388  C01B  F015         	movff	___awdiv@quotient,?___awdiv
  9453  00538C  C01C  F016         	movff	___awdiv@quotient+1,?___awdiv+1
  9454                           
  9455                           ; BSR set to: 0
  9456  005390  0012               	return		;funcret
  9457  005392                     __end_of___awdiv:
  9458                           	callstack 0
  9459                           
  9460 ;; *************** function _atoi *****************
  9461 ;; Defined at:
  9462 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/atoi.c"
  9463 ;; Parameters:    Size  Location     Type
  9464 ;;  s               1   27[COMRAM] PTR const unsigned char 
  9465 ;;		 -> STR_10(21), STR_6(79), 
  9466 ;; Auto vars:     Size  Location     Type
  9467 ;;  n               2   35[COMRAM] int 
  9468 ;;  neg             2   33[COMRAM] int 
  9469 ;; Return value:  Size  Location     Type
  9470 ;;                  2   27[COMRAM] int 
  9471 ;; Registers used:
  9472 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9473 ;; Tracked objects:
  9474 ;;		On entry : 3F/0
  9475 ;;		On exit  : 0/0
  9476 ;;		Unchanged: 0/0
  9477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9478 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9479 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9480 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9481 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9482 ;;Total ram usage:       10 bytes
  9483 ;; Hardware stack levels used: 1
  9484 ;; Hardware stack levels required when called: 5
  9485 ;; This function calls:
  9486 ;;		___wmul
  9487 ;;		_isdigit
  9488 ;;		_isspace
  9489 ;; This function is called by:
  9490 ;;		_vfpfcnvrt
  9491 ;; This function uses a non-reentrant model
  9492 ;;
  9493                           
  9494                           	psect	text28
  9495  004842                     __ptext28:
  9496                           	callstack 0
  9497  004842                     _atoi:
  9498                           	callstack 20
  9499                           
  9500                           ; BSR set to: 0
  9501                           
  9502                           ; BSR set to: 0
  9503                           ;incstack = 0
  9504  004842  0E00               	movlw	0
  9505  004844  6E25               	movwf	(atoi@n+1)^0,c
  9506  004846  0E00               	movlw	0
  9507  004848  6E24               	movwf	atoi@n^0,c
  9508  00484A  0E00               	movlw	0
  9509  00484C  6E23               	movwf	(atoi@neg+1)^0,c
  9510  00484E  0E00               	movlw	0
  9511  004850  6E22               	movwf	atoi@neg^0,c
  9512  004852  D001               	goto	l10143
  9513  004854                     l10139:
  9514                           
  9515                           ; BSR set to: 0
  9516  004854  2A1C               	incf	atoi@s^0,f,c
  9517  004856                     l10143:
  9518                           
  9519                           ; BSR set to: 0
  9520  004856  0060  F073  FFF6   	movff	atoi@s,tblptrl
  9521  00485C                     	if	1	;There is more than 1 active tblptr byte
  9522  00485C  0E20               	movlw	high __smallconst
  9523  00485E  6EF7               	movwf	tblptrh,c
  9524  004860                     	endif
  9525  004860                     	if	0	;tblptru may be non-zero
  9526  004860                     	endif
  9527  004860                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9528  004860  0E00               	movlw	low (__smallconst shr (0+16))
  9529  004862  6EF8               	movwf	tblptru,c
  9530  004864                     	endif
  9531  004864  0008               	tblrd		*
  9532  004866  50F5               	movf	tablat,w,c
  9533  004868  0A20               	xorlw	32
  9534  00486A  B4D8               	btfsc	status,2,c
  9535  00486C  D7F3               	goto	l10139
  9536                           
  9537                           ; BSR set to: 0
  9538  00486E  0EF7               	movlw	247
  9539  004870  6E1E               	movwf	??_atoi^0,c
  9540  004872  0EFF               	movlw	255
  9541  004874  6E1F               	movwf	(??_atoi+1)^0,c
  9542  004876  0060  F073  FFF6   	movff	atoi@s,tblptrl
  9543  00487C                     	if	1	;There is more than 1 active tblptr byte
  9544  00487C  0E20               	movlw	high __smallconst
  9545  00487E  6EF7               	movwf	tblptrh,c
  9546  004880                     	endif
  9547  004880                     	if	0	;tblptru may be non-zero
  9548  004880                     	endif
  9549  004880                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9550  004880  0E00               	movlw	low (__smallconst shr (0+16))
  9551  004882  6EF8               	movwf	tblptru,c
  9552  004884                     	endif
  9553  004884  0008               	tblrd		*
  9554  004886  50F5               	movf	tablat,w,c
  9555  004888  6E20               	movwf	(??_atoi+2)^0,c
  9556  00488A  6A21               	clrf	(??_atoi+3)^0,c
  9557  00488C  501E               	movf	??_atoi^0,w,c
  9558  00488E  2620               	addwf	(??_atoi+2)^0,f,c
  9559  004890  501F               	movf	(??_atoi+1)^0,w,c
  9560  004892  2221               	addwfc	(??_atoi+3)^0,f,c
  9561  004894  5021               	movf	(??_atoi+3)^0,w,c
  9562  004896  E10B               	bnz	l10151
  9563  004898  0E05               	movlw	5
  9564  00489A  5C20               	subwf	(??_atoi+2)^0,w,c
  9565  00489C  B0D8               	btfsc	status,0,c
  9566  00489E  D007               	goto	l10151
  9567  0048A0  D7D9               	goto	l10139
  9568  0048A2                     l10147:
  9569                           
  9570                           ; BSR set to: 0
  9571  0048A2  0E00               	movlw	0
  9572  0048A4  6E23               	movwf	(atoi@neg+1)^0,c
  9573  0048A6  0E01               	movlw	1
  9574  0048A8  6E22               	movwf	atoi@neg^0,c
  9575  0048AA                     l10149:
  9576  0048AA  2A1C               	incf	atoi@s^0,f,c
  9577  0048AC  D034               	goto	l10159
  9578  0048AE                     l10151:
  9579                           
  9580                           ; BSR set to: 0
  9581  0048AE  0060  F073  FFF6   	movff	atoi@s,tblptrl
  9582  0048B4                     	if	1	;There is more than 1 active tblptr byte
  9583  0048B4  0E20               	movlw	high __smallconst
  9584  0048B6  6EF7               	movwf	tblptrh,c
  9585  0048B8                     	endif
  9586  0048B8                     	if	0	;tblptru may be non-zero
  9587  0048B8                     	endif
  9588  0048B8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9589  0048B8  0E00               	movlw	low (__smallconst shr (0+16))
  9590  0048BA  6EF8               	movwf	tblptru,c
  9591  0048BC                     	endif
  9592  0048BC  0008               	tblrd		*
  9593  0048BE  50F5               	movf	tablat,w,c
  9594  0048C0  6E1E               	movwf	??_atoi^0,c
  9595  0048C2  6A1F               	clrf	(??_atoi+1)^0,c
  9596                           
  9597                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9598                           ; Switch size 1, requested type "simple"
  9599                           ; Number of cases is 1, Range of values is 0 to 0
  9600                           ; switch strategies available:
  9601                           ; Name         Instructions Cycles
  9602                           ; simple_byte            4     3 (average)
  9603                           ;	Chosen strategy is simple_byte
  9604  0048C4  501F               	movf	(??_atoi+1)^0,w,c
  9605  0048C6  0A00               	xorlw	0	; case 0
  9606  0048C8  A4D8               	btfss	status,2,c
  9607  0048CA  D025               	goto	l10159
  9608                           
  9609                           ; BSR set to: 0
  9610                           ; Switch size 1, requested type "simple"
  9611                           ; Number of cases is 2, Range of values is 43 to 45
  9612                           ; switch strategies available:
  9613                           ; Name         Instructions Cycles
  9614                           ; simple_byte            7     4 (average)
  9615                           ;	Chosen strategy is simple_byte
  9616  0048CC  501E               	movf	??_atoi^0,w,c
  9617  0048CE  0A2B               	xorlw	43	; case 43
  9618  0048D0  B4D8               	btfsc	status,2,c
  9619  0048D2  D7EB               	goto	l10149
  9620  0048D4  0A06               	xorlw	6	; case 45
  9621  0048D6  B4D8               	btfsc	status,2,c
  9622  0048D8  D7E4               	goto	l10147
  9623  0048DA  D01D               	goto	l10159
  9624  0048DC                     l10153:
  9625  0048DC  C024  F015         	movff	atoi@n,___wmul@multiplier
  9626  0048E0  C025  F016         	movff	atoi@n+1,___wmul@multiplier+1
  9627  0048E4  0E00               	movlw	0
  9628  0048E6  6E18               	movwf	(___wmul@multiplicand+1)^0,c
  9629  0048E8  0E0A               	movlw	10
  9630  0048EA  6E17               	movwf	___wmul@multiplicand^0,c
  9631  0048EC  ECC1  F02D         	call	___wmul	;wreg free
  9632  0048F0  0060  F073  FFF6   	movff	atoi@s,tblptrl
  9633  0048F6                     	if	1	;There is more than 1 active tblptr byte
  9634  0048F6  0E20               	movlw	high __smallconst
  9635  0048F8  6EF7               	movwf	tblptrh,c
  9636  0048FA                     	endif
  9637  0048FA                     	if	0	;tblptru may be non-zero
  9638  0048FA                     	endif
  9639  0048FA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9640  0048FA  0E00               	movlw	low (__smallconst shr (0+16))
  9641  0048FC  6EF8               	movwf	tblptru,c
  9642  0048FE                     	endif
  9643  0048FE  0008               	tblrd		*
  9644  004900  50F5               	movf	tablat,w,c
  9645  004902  5E15               	subwf	?___wmul^0,f,c
  9646  004904  0E00               	movlw	0
  9647  004906  5A16               	subwfb	(?___wmul+1)^0,f,c
  9648  004908  0E30               	movlw	48
  9649  00490A  2415               	addwf	?___wmul^0,w,c
  9650  00490C  6E24               	movwf	atoi@n^0,c
  9651  00490E  0E00               	movlw	0
  9652  004910  2016               	addwfc	(?___wmul+1)^0,w,c
  9653  004912  6E25               	movwf	(atoi@n+1)^0,c
  9654  004914  D7CA               	goto	l10149
  9655  004916                     l10159:
  9656  004916  0ED0               	movlw	208
  9657  004918  6E1E               	movwf	??_atoi^0,c
  9658  00491A  0EFF               	movlw	255
  9659  00491C  6E1F               	movwf	(??_atoi+1)^0,c
  9660  00491E  0060  F073  FFF6   	movff	atoi@s,tblptrl
  9661  004924                     	if	1	;There is more than 1 active tblptr byte
  9662  004924  0E20               	movlw	high __smallconst
  9663  004926  6EF7               	movwf	tblptrh,c
  9664  004928                     	endif
  9665  004928                     	if	0	;tblptru may be non-zero
  9666  004928                     	endif
  9667  004928                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9668  004928  0E00               	movlw	low (__smallconst shr (0+16))
  9669  00492A  6EF8               	movwf	tblptru,c
  9670  00492C                     	endif
  9671  00492C  0008               	tblrd		*
  9672  00492E  50F5               	movf	tablat,w,c
  9673  004930  6E20               	movwf	(??_atoi+2)^0,c
  9674  004932  6A21               	clrf	(??_atoi+3)^0,c
  9675  004934  501E               	movf	??_atoi^0,w,c
  9676  004936  2620               	addwf	(??_atoi+2)^0,f,c
  9677  004938  501F               	movf	(??_atoi+1)^0,w,c
  9678  00493A  2221               	addwfc	(??_atoi+3)^0,f,c
  9679  00493C  5021               	movf	(??_atoi+3)^0,w,c
  9680  00493E  E104               	bnz	u11870
  9681  004940  0E0A               	movlw	10
  9682  004942  5C20               	subwf	(??_atoi+2)^0,w,c
  9683  004944  A0D8               	btfss	status,0,c
  9684  004946  D7CA               	goto	l10153
  9685  004948                     u11870:
  9686  004948  5022               	movf	atoi@neg^0,w,c
  9687  00494A  1023               	iorwf	(atoi@neg+1)^0,w,c
  9688  00494C  A4D8               	btfss	status,2,c
  9689  00494E  D00D               	goto	l2195
  9690  004950  C024  F01E         	movff	atoi@n,??_atoi
  9691  004954  C025  F01F         	movff	atoi@n+1,??_atoi+1
  9692  004958  1E1E               	comf	??_atoi^0,f,c
  9693  00495A  1E1F               	comf	(??_atoi+1)^0,f,c
  9694  00495C  4A1E               	infsnz	??_atoi^0,f,c
  9695  00495E  2A1F               	incf	(??_atoi+1)^0,f,c
  9696  004960  C01E  F01C         	movff	??_atoi,?_atoi
  9697  004964  C01F  F01D         	movff	??_atoi+1,?_atoi+1
  9698  004968  0012               	return	
  9699  00496A                     l2195:
  9700  00496A  C024  F01C         	movff	atoi@n,?_atoi
  9701  00496E  C025  F01D         	movff	atoi@n+1,?_atoi+1
  9702  004972  0012               	return		;funcret
  9703  004974                     __end_of_atoi:
  9704                           	callstack 0
  9705                           
  9706 ;; *************** function _isspace *****************
  9707 ;; Defined at:
  9708 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/isspace.c"
  9709 ;; Parameters:    Size  Location     Type
  9710 ;;  c               2   20[COMRAM] int 
  9711 ;; Auto vars:     Size  Location     Type
  9712 ;;		None
  9713 ;; Return value:  Size  Location     Type
  9714 ;;                  2   20[COMRAM] int 
  9715 ;; Registers used:
  9716 ;;		wreg, status,2, status,0
  9717 ;; Tracked objects:
  9718 ;;		On entry : 0/0
  9719 ;;		On exit  : 0/0
  9720 ;;		Unchanged: 0/0
  9721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9722 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9723 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9724 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9725 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9726 ;;Total ram usage:        7 bytes
  9727 ;; Hardware stack levels used: 1
  9728 ;; Hardware stack levels required when called: 4
  9729 ;; This function calls:
  9730 ;;		Nothing
  9731 ;; This function is called by:
  9732 ;;		_atoi
  9733 ;; This function uses a non-reentrant model
  9734 ;;
  9735                           
  9736                           	psect	text29
  9737  0057DE                     __ptext29:
  9738                           	callstack 0
  9739  0057DE                     _isspace:
  9740                           	callstack 20
  9741                           
  9742                           ;incstack = 0
  9743  0057DE  0E01               	movlw	1
  9744  0057E0  6E1B               	movwf	_isspace$3188^0,c
  9745  0057E2  0E20               	movlw	32
  9746  0057E4  1815               	xorwf	isspace@c^0,w,c
  9747  0057E6  1016               	iorwf	(isspace@c+1)^0,w,c
  9748  0057E8  B4D8               	btfsc	status,2,c
  9749  0057EA  D014               	goto	l9729
  9750  0057EC  0EF7               	movlw	247
  9751  0057EE  6E17               	movwf	??_isspace^0,c
  9752  0057F0  0EFF               	movlw	255
  9753  0057F2  6E18               	movwf	(??_isspace+1)^0,c
  9754  0057F4  C015  F019         	movff	isspace@c,??_isspace+2
  9755  0057F8  C016  F01A         	movff	isspace@c+1,??_isspace+3
  9756  0057FC  5017               	movf	??_isspace^0,w,c
  9757  0057FE  2619               	addwf	(??_isspace+2)^0,f,c
  9758  005800  5018               	movf	(??_isspace+1)^0,w,c
  9759  005802  221A               	addwfc	(??_isspace+3)^0,f,c
  9760  005804  501A               	movf	(??_isspace+3)^0,w,c
  9761  005806  E104               	bnz	u11090
  9762  005808  0E05               	movlw	5
  9763  00580A  5C19               	subwf	(??_isspace+2)^0,w,c
  9764  00580C  A0D8               	btfss	status,0,c
  9765  00580E  D002               	goto	l9729
  9766  005810                     u11090:
  9767  005810  0E00               	movlw	0
  9768  005812  6E1B               	movwf	_isspace$3188^0,c
  9769  005814                     l9729:
  9770  005814  C01B  F015         	movff	_isspace$3188,?_isspace
  9771  005818  6A16               	clrf	(?_isspace+1)^0,c
  9772  00581A  0012               	return		;funcret
  9773  00581C                     __end_of_isspace:
  9774                           	callstack 0
  9775                           
  9776 ;; *************** function _isdigit *****************
  9777 ;; Defined at:
  9778 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/isdigit.c"
  9779 ;; Parameters:    Size  Location     Type
  9780 ;;  c               2   20[COMRAM] int 
  9781 ;; Auto vars:     Size  Location     Type
  9782 ;;		None
  9783 ;; Return value:  Size  Location     Type
  9784 ;;                  2   20[COMRAM] int 
  9785 ;; Registers used:
  9786 ;;		wreg, status,2, status,0
  9787 ;; Tracked objects:
  9788 ;;		On entry : 0/0
  9789 ;;		On exit  : 0/0
  9790 ;;		Unchanged: 0/0
  9791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9792 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9794 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9795 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9796 ;;Total ram usage:        6 bytes
  9797 ;; Hardware stack levels used: 1
  9798 ;; Hardware stack levels required when called: 4
  9799 ;; This function calls:
  9800 ;;		Nothing
  9801 ;; This function is called by:
  9802 ;;		_vfpfcnvrt
  9803 ;;		_atoi
  9804 ;; This function uses a non-reentrant model
  9805 ;;
  9806                           
  9807                           	psect	text30
  9808  005AC8                     __ptext30:
  9809                           	callstack 0
  9810  005AC8                     _isdigit:
  9811                           	callstack 21
  9812                           
  9813                           ;incstack = 0
  9814  005AC8  0ED0               	movlw	208
  9815  005ACA  6E17               	movwf	??_isdigit^0,c
  9816  005ACC  0EFF               	movlw	255
  9817  005ACE  6E18               	movwf	(??_isdigit+1)^0,c
  9818  005AD0  C015  F019         	movff	isdigit@c,??_isdigit+2
  9819  005AD4  C016  F01A         	movff	isdigit@c+1,??_isdigit+3
  9820  005AD8  5017               	movf	??_isdigit^0,w,c
  9821  005ADA  2619               	addwf	(??_isdigit+2)^0,f,c
  9822  005ADC  5018               	movf	(??_isdigit+1)^0,w,c
  9823  005ADE  221A               	addwfc	(??_isdigit+3)^0,f,c
  9824  005AE0  501A               	movf	(??_isdigit+3)^0,w,c
  9825  005AE2  E106               	bnz	u11060
  9826  005AE4  0E0A               	movlw	10
  9827  005AE6  5C19               	subwf	(??_isdigit+2)^0,w,c
  9828  005AE8  B0D8               	btfsc	status,0,c
  9829  005AEA  D002               	goto	u11060
  9830  005AEC  0E01               	movlw	1
  9831  005AEE  D001               	goto	u11070
  9832  005AF0                     u11060:
  9833  005AF0  0E00               	movlw	0
  9834  005AF2                     u11070:
  9835  005AF2  6E15               	movwf	?_isdigit^0,c
  9836  005AF4  6A16               	clrf	(?_isdigit+1)^0,c
  9837  005AF6  0012               	return		;funcret
  9838  005AF8                     __end_of_isdigit:
  9839                           	callstack 0
  9840                           
  9841 ;; *************** function ___wmul *****************
  9842 ;; Defined at:
  9843 ;;		line 15 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/Umul16.c"
  9844 ;; Parameters:    Size  Location     Type
  9845 ;;  multiplier      2   20[COMRAM] unsigned int 
  9846 ;;  multiplicand    2   22[COMRAM] unsigned int 
  9847 ;; Auto vars:     Size  Location     Type
  9848 ;;  product         2   24[COMRAM] unsigned int 
  9849 ;; Return value:  Size  Location     Type
  9850 ;;                  2   20[COMRAM] unsigned int 
  9851 ;; Registers used:
  9852 ;;		wreg, status,2, status,0, prodl, prodh
  9853 ;; Tracked objects:
  9854 ;;		On entry : 0/0
  9855 ;;		On exit  : 0/0
  9856 ;;		Unchanged: 0/0
  9857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9858 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9859 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9861 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9862 ;;Total ram usage:        6 bytes
  9863 ;; Hardware stack levels used: 1
  9864 ;; Hardware stack levels required when called: 4
  9865 ;; This function calls:
  9866 ;;		Nothing
  9867 ;; This function is called by:
  9868 ;;		_atoi
  9869 ;; This function uses a non-reentrant model
  9870 ;;
  9871                           
  9872                           	psect	text31
  9873  005B82                     __ptext31:
  9874                           	callstack 0
  9875  005B82                     ___wmul:
  9876                           	callstack 20
  9877                           
  9878                           ;incstack = 0
  9879  005B82  5015               	movf	___wmul@multiplier^0,w,c
  9880  005B84  0217               	mulwf	___wmul@multiplicand^0,c
  9881  005B86  006F FFCC  F019    	movff	prodl,___wmul@product
  9882  005B8C  006F FFD0  F01A    	movff	prodh,___wmul@product+1
  9883  005B92  5015               	movf	___wmul@multiplier^0,w,c
  9884  005B94  0218               	mulwf	(___wmul@multiplicand+1)^0,c
  9885  005B96  50F3               	movf	243,w,c
  9886  005B98  261A               	addwf	(___wmul@product+1)^0,f,c
  9887  005B9A  5016               	movf	(___wmul@multiplier+1)^0,w,c
  9888  005B9C  0217               	mulwf	___wmul@multiplicand^0,c
  9889  005B9E  50F3               	movf	243,w,c
  9890  005BA0  261A               	addwf	(___wmul@product+1)^0,f,c
  9891  005BA2  C019  F015         	movff	___wmul@product,?___wmul
  9892  005BA6  C01A  F016         	movff	___wmul@product+1,?___wmul+1
  9893  005BAA  0012               	return		;funcret
  9894  005BAC                     __end_of___wmul:
  9895                           	callstack 0
  9896                           
  9897 ;; *************** function _display_led *****************
  9898 ;; Defined at:
  9899 ;;		line 3 in file "disp_led.c"
  9900 ;; Parameters:    Size  Location     Type
  9901 ;;  led             1    wreg     enum E17197
  9902 ;; Auto vars:     Size  Location     Type
  9903 ;;  led             1   22[COMRAM] enum E17197
  9904 ;; Return value:  Size  Location     Type
  9905 ;;                  1    wreg      void 
  9906 ;; Registers used:
  9907 ;;		wreg, status,2, status,0
  9908 ;; Tracked objects:
  9909 ;;		On entry : 0/0
  9910 ;;		On exit  : 0/0
  9911 ;;		Unchanged: 0/0
  9912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9914 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9915 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9916 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9917 ;;Total ram usage:        3 bytes
  9918 ;; Hardware stack levels used: 1
  9919 ;; Hardware stack levels required when called: 4
  9920 ;; This function calls:
  9921 ;;		Nothing
  9922 ;; This function is called by:
  9923 ;;		_main
  9924 ;; This function uses a non-reentrant model
  9925 ;;
  9926                           
  9927                           	psect	text32
  9928  004D66                     __ptext32:
  9929                           	callstack 0
  9930  004D66                     _display_led:
  9931                           	callstack 26
  9932                           
  9933                           ;incstack = 0
  9934                           ;display_led@led stored from wreg
  9935  004D66  6E17               	movwf	display_led@led^0,c
  9936                           
  9937                           ;disp_led.c: 3: void display_led(DISPLAY_TYPES led);disp_led.c: 4: {;disp_led.c: 5:  swi
      +                          tch (led) {
  9938  004D68  D02D               	goto	l10677
  9939  004D6A                     l1092:
  9940  004D6A  98BD               	bcf	189,4,c	;volatile
  9941                           
  9942                           ;disp_led.c: 8:   do { LATDbits.LATD5 = 0; } while(0);
  9943  004D6C  9ABD               	bcf	189,5,c	;volatile
  9944  004D6E  0012               	return	
  9945  004D70                     l1098:
  9946  004D70  98BD               	bcf	189,4,c	;volatile
  9947                           
  9948                           ;disp_led.c: 12:   do { LATDbits.LATD5 = 1; } while(0);
  9949  004D72  8ABD               	bsf	189,5,c	;volatile
  9950  004D74  0012               	return	
  9951  004D76                     l1103:
  9952  004D76  88BD               	bsf	189,4,c	;volatile
  9953                           
  9954                           ;disp_led.c: 16:   do { LATDbits.LATD5 = 0; } while(0);
  9955  004D78  9ABD               	bcf	189,5,c	;volatile
  9956  004D7A  0012               	return	
  9957  004D7C                     l1108:
  9958  004D7C  9CBD               	bcf	189,6,c	;volatile
  9959                           
  9960                           ;disp_led.c: 20:   do { LATDbits.LATD7 = 0; } while(0);
  9961  004D7E  9EBD               	bcf	189,7,c	;volatile
  9962  004D80  0012               	return	
  9963  004D82                     l1113:
  9964  004D82  9CBD               	bcf	189,6,c	;volatile
  9965                           
  9966                           ;disp_led.c: 24:   do { LATDbits.LATD7 = 1; } while(0);
  9967  004D84  8EBD               	bsf	189,7,c	;volatile
  9968  004D86  0012               	return	
  9969  004D88                     l1118:
  9970  004D88  8CBD               	bsf	189,6,c	;volatile
  9971                           
  9972                           ;disp_led.c: 28:   do { LATDbits.LATD7 = 0; } while(0);
  9973  004D8A  9EBD               	bcf	189,7,c	;volatile
  9974  004D8C  0012               	return	
  9975  004D8E                     l1123:
  9976  004D8E  98BF               	bcf	191,4,c	;volatile
  9977                           
  9978                           ;disp_led.c: 32:   do { LATFbits.LATF5 = 0; } while(0);
  9979  004D90  9ABF               	bcf	191,5,c	;volatile
  9980  004D92  0012               	return	
  9981  004D94                     l1128:
  9982  004D94  98BF               	bcf	191,4,c	;volatile
  9983                           
  9984                           ;disp_led.c: 36:   do { LATFbits.LATF5 = 1; } while(0);
  9985  004D96  8ABF               	bsf	191,5,c	;volatile
  9986  004D98  0012               	return	
  9987  004D9A                     l1133:
  9988  004D9A  88BF               	bsf	191,4,c	;volatile
  9989                           
  9990                           ;disp_led.c: 40:   do { LATFbits.LATF5 = 0; } while(0);
  9991  004D9C  9ABF               	bcf	191,5,c	;volatile
  9992  004D9E  0012               	return	
  9993  004DA0                     l1138:
  9994  004DA0  9CBF               	bcf	191,6,c	;volatile
  9995                           
  9996                           ;disp_led.c: 44:   do { LATFbits.LATF7 = 0; } while(0);
  9997  004DA2  9EBF               	bcf	191,7,c	;volatile
  9998  004DA4  0012               	return	
  9999  004DA6                     l1143:
 10000  004DA6  9CBF               	bcf	191,6,c	;volatile
 10001                           
 10002                           ;disp_led.c: 48:   do { LATFbits.LATF7 = 1; } while(0);
 10003  004DA8  8EBF               	bsf	191,7,c	;volatile
 10004  004DAA  0012               	return	
 10005  004DAC                     l1148:
 10006  004DAC  8CBF               	bsf	191,6,c	;volatile
 10007                           
 10008                           ;disp_led.c: 52:   do { LATFbits.LATF7 = 0; } while(0);
 10009  004DAE  9EBF               	bcf	191,7,c	;volatile
 10010  004DB0  0012               	return	
 10011  004DB2                     l1153:
 10012  004DB2  98BD               	bcf	189,4,c	;volatile
 10013                           
 10014                           ;disp_led.c: 56:   do { LATDbits.LATD5 = 0; } while(0);
 10015  004DB4  9ABD               	bcf	189,5,c	;volatile
 10016                           
 10017                           ;disp_led.c: 57:   do { LATDbits.LATD6 = 0; } while(0);
 10018  004DB6  9CBD               	bcf	189,6,c	;volatile
 10019                           
 10020                           ;disp_led.c: 58:   do { LATDbits.LATD7 = 0; } while(0);
 10021  004DB8  9EBD               	bcf	189,7,c	;volatile
 10022                           
 10023                           ;disp_led.c: 59:   do { LATFbits.LATF4 = 0; } while(0);
 10024  004DBA  98BF               	bcf	191,4,c	;volatile
 10025                           
 10026                           ;disp_led.c: 60:   do { LATFbits.LATF5 = 0; } while(0);
 10027  004DBC  9ABF               	bcf	191,5,c	;volatile
 10028                           
 10029                           ;disp_led.c: 61:   do { LATFbits.LATF6 = 0; } while(0);
 10030  004DBE  9CBF               	bcf	191,6,c	;volatile
 10031                           
 10032                           ;disp_led.c: 62:   do { LATFbits.LATF7 = 0; } while(0);
 10033  004DC0  9EBF               	bcf	191,7,c	;volatile
 10034  004DC2  0012               	return	
 10035  004DC4                     l10677:
 10036  004DC4  5017               	movf	display_led@led^0,w,c
 10037  004DC6  6E15               	movwf	??_display_led^0,c
 10038  004DC8  6A16               	clrf	(??_display_led+1)^0,c
 10039                           
 10040                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10041                           ; Switch size 1, requested type "simple"
 10042                           ; Number of cases is 1, Range of values is 0 to 0
 10043                           ; switch strategies available:
 10044                           ; Name         Instructions Cycles
 10045                           ; simple_byte            4     3 (average)
 10046                           ;	Chosen strategy is simple_byte
 10047  004DCA  5016               	movf	(??_display_led+1)^0,w,c
 10048  004DCC  0A00               	xorlw	0	; case 0
 10049  004DCE  A4D8               	btfss	status,2,c
 10050  004DD0  D7F0               	goto	l1153
 10051                           
 10052                           ; Switch size 1, requested type "simple"
 10053                           ; Number of cases is 12, Range of values is 0 to 11
 10054                           ; switch strategies available:
 10055                           ; Name         Instructions Cycles
 10056                           ; simple_byte           37    19 (average)
 10057                           ;	Chosen strategy is simple_byte
 10058  004DD2  5015               	movf	??_display_led^0,w,c
 10059  004DD4  0A00               	xorlw	0	; case 0
 10060  004DD6  B4D8               	btfsc	status,2,c
 10061  004DD8  D7C8               	goto	l1092
 10062  004DDA  0A01               	xorlw	1	; case 1
 10063  004DDC  B4D8               	btfsc	status,2,c
 10064  004DDE  D7CB               	goto	l1103
 10065  004DE0  0A03               	xorlw	3	; case 2
 10066  004DE2  B4D8               	btfsc	status,2,c
 10067  004DE4  D7C5               	goto	l1098
 10068  004DE6  0A01               	xorlw	1	; case 3
 10069  004DE8  B4D8               	btfsc	status,2,c
 10070  004DEA  D7C8               	goto	l1108
 10071  004DEC  0A07               	xorlw	7	; case 4
 10072  004DEE  B4D8               	btfsc	status,2,c
 10073  004DF0  D7CB               	goto	l1118
 10074  004DF2  0A01               	xorlw	1	; case 5
 10075  004DF4  B4D8               	btfsc	status,2,c
 10076  004DF6  D7C5               	goto	l1113
 10077  004DF8  0A03               	xorlw	3	; case 6
 10078  004DFA  B4D8               	btfsc	status,2,c
 10079  004DFC  D7C8               	goto	l1123
 10080  004DFE  0A01               	xorlw	1	; case 7
 10081  004E00  B4D8               	btfsc	status,2,c
 10082  004E02  D7CB               	goto	l1133
 10083  004E04  0A0F               	xorlw	15	; case 8
 10084  004E06  B4D8               	btfsc	status,2,c
 10085  004E08  D7C5               	goto	l1128
 10086  004E0A  0A01               	xorlw	1	; case 9
 10087  004E0C  B4D8               	btfsc	status,2,c
 10088  004E0E  D7C8               	goto	l1138
 10089  004E10  0A03               	xorlw	3	; case 10
 10090  004E12  B4D8               	btfsc	status,2,c
 10091  004E14  D7CB               	goto	l1148
 10092  004E16  0A01               	xorlw	1	; case 11
 10093  004E18  B4D8               	btfsc	status,2,c
 10094  004E1A  D7C5               	goto	l1143
 10095  004E1C  D7CA               	goto	l1153
 10096  004E1E                     __end_of_display_led:
 10097                           	callstack 0
 10098                           
 10099 ;; *************** function _cli_read *****************
 10100 ;; Defined at:
 10101 ;;		line 82 in file "scdm.c"
 10102 ;; Parameters:    Size  Location     Type
 10103 ;;  a_ctx           2   49[COMRAM] PTR struct _t_cli_ctx
 10104 ;;		 -> cli_ctx(131), 
 10105 ;; Auto vars:     Size  Location     Type
 10106 ;;  i               1   12[BANK0 ] unsigned char 
 10107 ;; Return value:  Size  Location     Type
 10108 ;;                  1    wreg      void 
 10109 ;; Registers used:
 10110 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 10111 ;; Tracked objects:
 10112 ;;		On entry : 0/0
 10113 ;;		On exit  : 0/0
 10114 ;;		Unchanged: 0/0
 10115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10116 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10117 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10118 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10119 ;;      Totals:         5       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10120 ;;Total ram usage:        8 bytes
 10121 ;; Hardware stack levels used: 1
 10122 ;; Hardware stack levels required when called: 11
 10123 ;; This function calls:
 10124 ;;		__cli_interpret_cmd
 10125 ;;		_linux_getc
 10126 ;;		_linux_putc
 10127 ;;		_memset
 10128 ;; This function is called by:
 10129 ;;		_main
 10130 ;; This function uses a non-reentrant model
 10131 ;;
 10132                           
 10133                           	psect	text33
 10134  004318                     __ptext33:
 10135                           	callstack 0
 10136  004318                     _cli_read:
 10137                           	callstack 19
 10138                           
 10139                           ;scdm.c: 82: void cli_read(t_cli_ctx *a_ctx);scdm.c: 83: {;scdm.c: 84:  uint8_t i = 0x00
      +                          ;
 10140                           
 10141                           ;incstack = 0
 10142  004318  0E00               	movlw	0
 10143  00431A  0100               	movlb	0	; () banked
 10144  00431C  6F6C               	movwf	cli_read@i& (0+255),b
 10145                           
 10146                           ; BSR set to: 0
 10147                           ;scdm.c: 87:  if (!linux_getc(&i)) {
 10148  00431E  0E6C               	movlw	low cli_read@i
 10149  004320  6E16               	movwf	linux_getc@a_data^0,c
 10150  004322  ECD6  F02D         	call	_linux_getc	;wreg free
 10151  004326  0900               	iorlw	0
 10152  004328  B4D8               	btfsc	status,2,c
 10153  00432A  0012               	return	
 10154  00432C  D08A               	goto	l10717
 10155  00432E                     l10695:
 10156                           
 10157                           ; BSR set to: 0
 10158                           ;scdm.c: 99:   a_ctx->cmd[(((a_ctx->cpos) < (128 - 1)) ? (a_ctx->cpos + 1) : (a_ctx->cpo
      +                          s))] = '\0';
 10159  00432E  EE20 F082          	lfsr	2,130
 10160  004332  5032               	movf	cli_read@a_ctx^0,w,c
 10161  004334  26D9               	addwf	fsr2l,f,c
 10162  004336  5033               	movf	(cli_read@a_ctx+1)^0,w,c
 10163  004338  22DA               	addwfc	fsr2h,f,c
 10164  00433A  0E7E               	movlw	126
 10165  00433C  64DF               	cpfsgt	indf2,c
 10166  00433E  D00C               	goto	l10699
 10167                           
 10168                           ; BSR set to: 0
 10169  004340  EE20 F082          	lfsr	2,130
 10170  004344  5032               	movf	cli_read@a_ctx^0,w,c
 10171  004346  26D9               	addwf	fsr2l,f,c
 10172  004348  5033               	movf	(cli_read@a_ctx+1)^0,w,c
 10173  00434A  22DA               	addwfc	fsr2h,f,c
 10174  00434C  50DF               	movf	indf2,w,c
 10175  00434E  6E34               	movwf	??_cli_read^0,c
 10176  004350  5034               	movf	??_cli_read^0,w,c
 10177  004352  6F6A               	movwf	_cli_read$2504& (0+255),b
 10178  004354  6B6B               	clrf	(_cli_read$2504+1)& (0+255),b
 10179  004356  D00E               	goto	l1243
 10180  004358                     l10699:
 10181                           
 10182                           ; BSR set to: 0
 10183  004358  EE20 F082          	lfsr	2,130
 10184  00435C  5032               	movf	cli_read@a_ctx^0,w,c
 10185  00435E  26D9               	addwf	fsr2l,f,c
 10186  004360  5033               	movf	(cli_read@a_ctx+1)^0,w,c
 10187  004362  22DA               	addwfc	fsr2h,f,c
 10188  004364  50DF               	movf	indf2,w,c
 10189  004366  6E34               	movwf	??_cli_read^0,c
 10190  004368  0E01               	movlw	1
 10191  00436A  2434               	addwf	??_cli_read^0,w,c
 10192  00436C  6F6A               	movwf	_cli_read$2504& (0+255),b
 10193  00436E  6B6B               	clrf	(_cli_read$2504+1)& (0+255),b
 10194  004370  0E00               	movlw	0
 10195  004372  236B               	addwfc	(_cli_read$2504+1)& (0+255),f,b
 10196  004374                     l1243:
 10197                           
 10198                           ; BSR set to: 0
 10199  004374  516A               	movf	_cli_read$2504& (0+255),w,b
 10200  004376  2432               	addwf	cli_read@a_ctx^0,w,c
 10201  004378  6E34               	movwf	??_cli_read^0,c
 10202  00437A  516B               	movf	(_cli_read$2504+1)& (0+255),w,b
 10203  00437C  2033               	addwfc	(cli_read@a_ctx+1)^0,w,c
 10204  00437E  6E35               	movwf	(??_cli_read+1)^0,c
 10205  004380  0E02               	movlw	2
 10206  004382  2434               	addwf	??_cli_read^0,w,c
 10207  004384  6ED9               	movwf	fsr2l,c
 10208  004386  0E00               	movlw	0
 10209  004388  2035               	addwfc	(??_cli_read+1)^0,w,c
 10210  00438A  6EDA               	movwf	fsr2h,c
 10211  00438C  0E00               	movlw	0
 10212  00438E  6EDF               	movwf	indf2,c
 10213                           
 10214                           ; BSR set to: 0
 10215                           ;scdm.c: 100:   linux_putc((unsigned char *) "\r\n", 2);
 10216  004390  0EC6               	movlw	low (STR_5+15)
 10217  004392  6E2C               	movwf	linux_putc@data^0,c
 10218  004394  502C               	movf	linux_putc@data^0,w,c
 10219  004396  A4D8               	btfss	status,2,c
 10220  004398  0E20               	movlw	high __smallconst
 10221  00439A  6E2D               	movwf	(linux_putc@data+1)^0,c
 10222  00439C  0E02               	movlw	2
 10223  00439E  6E2E               	movwf	linux_putc@a_len^0,c
 10224  0043A0  ECDD  F02E         	call	_linux_putc	;wreg free
 10225                           
 10226                           ;scdm.c: 101:   res = _cli_interpret_cmd(a_ctx);
 10227  0043A4  C032  F02E         	movff	cli_read@a_ctx,__cli_interpret_cmd@a_ctx
 10228  0043A8  C033  F02F         	movff	cli_read@a_ctx+1,__cli_interpret_cmd@a_ctx+1
 10229  0043AC  EC4C  F01E         	call	__cli_interpret_cmd	;wreg free
 10230  0043B0  6E43               	movwf	_res^0,c
 10231                           
 10232                           ;scdm.c: 102:   a_ctx->cpos = 0;
 10233  0043B2  EE20 F082          	lfsr	2,130
 10234  0043B6  5032               	movf	cli_read@a_ctx^0,w,c
 10235  0043B8  26D9               	addwf	fsr2l,f,c
 10236  0043BA  5033               	movf	(cli_read@a_ctx+1)^0,w,c
 10237  0043BC  22DA               	addwfc	fsr2h,f,c
 10238  0043BE  0E00               	movlw	0
 10239  0043C0  6EDF               	movwf	indf2,c
 10240                           
 10241                           ;scdm.c: 103:   memset(a_ctx->cmd, 0x00, 128);
 10242  0043C2  0E02               	movlw	2
 10243  0043C4  2432               	addwf	cli_read@a_ctx^0,w,c
 10244  0043C6  6E15               	movwf	memset@dest^0,c
 10245  0043C8  0E00               	movlw	0
 10246  0043CA  2033               	addwfc	(cli_read@a_ctx+1)^0,w,c
 10247  0043CC  6E16               	movwf	(memset@dest+1)^0,c
 10248  0043CE  0E00               	movlw	0
 10249  0043D0  6E18               	movwf	(memset@c+1)^0,c
 10250  0043D2  0E00               	movlw	0
 10251  0043D4  6E17               	movwf	memset@c^0,c
 10252  0043D6  0E00               	movlw	0
 10253  0043D8  6E1A               	movwf	(memset@n+1)^0,c
 10254  0043DA  0E80               	movlw	128
 10255  0043DC  6E19               	movwf	memset@n^0,c
 10256  0043DE  EC37  F022         	call	_memset	;wreg free
 10257                           
 10258                           ;scdm.c: 104:   break;
 10259  0043E2  0012               	return	
 10260  0043E4                     l10709:
 10261                           
 10262                           ; BSR set to: 0
 10263                           ;scdm.c: 107:   if (a_ctx->cpos < (128 - 1)) {
 10264  0043E4  EE20 F082          	lfsr	2,130
 10265  0043E8  5032               	movf	cli_read@a_ctx^0,w,c
 10266  0043EA  26D9               	addwf	fsr2l,f,c
 10267  0043EC  5033               	movf	(cli_read@a_ctx+1)^0,w,c
 10268  0043EE  22DA               	addwfc	fsr2h,f,c
 10269  0043F0  0E7F               	movlw	127
 10270  0043F2  60DF               	cpfslt	indf2,c
 10271  0043F4  0012               	return	
 10272                           
 10273                           ; BSR set to: 0
 10274                           ;scdm.c: 108:    a_ctx->cmd[a_ctx->cpos++] = i;
 10275  0043F6  EE20 F082          	lfsr	2,130
 10276  0043FA  5032               	movf	cli_read@a_ctx^0,w,c
 10277  0043FC  26D9               	addwf	fsr2l,f,c
 10278  0043FE  5033               	movf	(cli_read@a_ctx+1)^0,w,c
 10279  004400  22DA               	addwfc	fsr2h,f,c
 10280  004402  50DF               	movf	indf2,w,c
 10281  004404  6E34               	movwf	??_cli_read^0,c
 10282  004406  5034               	movf	??_cli_read^0,w,c
 10283  004408  2432               	addwf	cli_read@a_ctx^0,w,c
 10284  00440A  6E35               	movwf	(??_cli_read+1)^0,c
 10285  00440C  0E00               	movlw	0
 10286  00440E  2033               	addwfc	(cli_read@a_ctx+1)^0,w,c
 10287  004410  6E36               	movwf	(??_cli_read+2)^0,c
 10288  004412  0E02               	movlw	2
 10289  004414  2435               	addwf	(??_cli_read+1)^0,w,c
 10290  004416  6ED9               	movwf	fsr2l,c
 10291  004418  0E00               	movlw	0
 10292  00441A  2036               	addwfc	(??_cli_read+2)^0,w,c
 10293  00441C  6EDA               	movwf	fsr2h,c
 10294  00441E  0060  F1B3  FFDF   	movff	cli_read@i,indf2
 10295  004424  EE20 F082          	lfsr	2,130
 10296  004428  5032               	movf	cli_read@a_ctx^0,w,c
 10297  00442A  26D9               	addwf	fsr2l,f,c
 10298  00442C  5033               	movf	(cli_read@a_ctx+1)^0,w,c
 10299  00442E  22DA               	addwfc	fsr2h,f,c
 10300  004430  2ADF               	incf	indf2,f,c
 10301                           
 10302                           ; BSR set to: 0
 10303                           ;scdm.c: 109:    linux_putc(&i, 1);
 10304  004432  0E6C               	movlw	low cli_read@i
 10305  004434  6E2C               	movwf	linux_putc@data^0,c
 10306  004436  6A2D               	clrf	(linux_putc@data+1)^0,c
 10307  004438  0E01               	movlw	1
 10308  00443A  6E2E               	movwf	linux_putc@a_len^0,c
 10309  00443C  ECDD  F02E         	call	_linux_putc	;wreg free
 10310  004440  0012               	return	
 10311  004442                     l10717:
 10312  004442  0100               	movlb	0	; () banked
 10313  004444  516C               	movf	cli_read@i& (0+255),w,b
 10314  004446  6E34               	movwf	??_cli_read^0,c
 10315  004448  6A35               	clrf	(??_cli_read+1)^0,c
 10316                           
 10317                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10318                           ; Switch size 1, requested type "simple"
 10319                           ; Number of cases is 1, Range of values is 0 to 0
 10320                           ; switch strategies available:
 10321                           ; Name         Instructions Cycles
 10322                           ; simple_byte            4     3 (average)
 10323                           ;	Chosen strategy is simple_byte
 10324  00444A  5035               	movf	(??_cli_read+1)^0,w,c
 10325  00444C  0A00               	xorlw	0	; case 0
 10326  00444E  A4D8               	btfss	status,2,c
 10327  004450  D7C9               	goto	l10709
 10328                           
 10329                           ; BSR set to: 0
 10330                           ; Switch size 1, requested type "simple"
 10331                           ; Number of cases is 4, Range of values is 13 to 127
 10332                           ; switch strategies available:
 10333                           ; Name         Instructions Cycles
 10334                           ; simple_byte           13     7 (average)
 10335                           ;	Chosen strategy is simple_byte
 10336  004452  5034               	movf	??_cli_read^0,w,c
 10337  004454  0A0D               	xorlw	13	; case 13
 10338  004456  B4D8               	btfsc	status,2,c
 10339  004458  D76A               	goto	l10695
 10340  00445A  0A16               	xorlw	22	; case 27
 10341  00445C  B4D8               	btfsc	status,2,c
 10342  00445E  0012               	return	
 10343  004460  0A65               	xorlw	101	; case 126
 10344  004462  B4D8               	btfsc	status,2,c
 10345  004464  0012               	return	
 10346  004466  0A01               	xorlw	1	; case 127
 10347  004468  B4D8               	btfsc	status,2,c
 10348  00446A  0012               	return		;funcret
 10349  00446C  D7BB               	goto	l10709
 10350  00446E                     __end_of_cli_read:
 10351                           	callstack 0
 10352                           
 10353 ;; *************** function _memset *****************
 10354 ;; Defined at:
 10355 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/memset.c"
 10356 ;; Parameters:    Size  Location     Type
 10357 ;;  dest            2   20[COMRAM] PTR void 
 10358 ;;		 -> cli_ctx(131), 
 10359 ;;  c               2   22[COMRAM] int 
 10360 ;;  n               2   24[COMRAM] unsigned int 
 10361 ;; Auto vars:     Size  Location     Type
 10362 ;;  s               2   30[COMRAM] PTR unsigned char 
 10363 ;;		 -> cli_ctx(131), 
 10364 ;;  k               2   28[COMRAM] unsigned int 
 10365 ;; Return value:  Size  Location     Type
 10366 ;;                  2   20[COMRAM] PTR void 
 10367 ;; Registers used:
 10368 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10369 ;; Tracked objects:
 10370 ;;		On entry : 0/2
 10371 ;;		On exit  : 0/0
 10372 ;;		Unchanged: 0/0
 10373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10374 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10375 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10376 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10377 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10378 ;;Total ram usage:       12 bytes
 10379 ;; Hardware stack levels used: 1
 10380 ;; Hardware stack levels required when called: 4
 10381 ;; This function calls:
 10382 ;;		Nothing
 10383 ;; This function is called by:
 10384 ;;		_cli_init
 10385 ;;		_cli_read
 10386 ;; This function uses a non-reentrant model
 10387 ;;
 10388                           
 10389                           	psect	text34
 10390  00446E                     __ptext34:
 10391                           	callstack 0
 10392  00446E                     _memset:
 10393                           	callstack 24
 10394                           
 10395                           ;incstack = 0
 10396  00446E  C015  F01F         	movff	memset@dest,memset@s
 10397  004472  C016  F020         	movff	memset@dest+1,memset@s+1
 10398  004476  5019               	movf	memset@n^0,w,c
 10399  004478  101A               	iorwf	(memset@n+1)^0,w,c
 10400  00447A  B4D8               	btfsc	status,2,c
 10401  00447C  0012               	return	
 10402  00447E  0060  F07F  FFD9   	movff	memset@s,fsr2l
 10403  004484  0060  F083  FFDA   	movff	memset@s+1,fsr2h
 10404  00448A  0060  F05F  FFDF   	movff	memset@c,indf2
 10405  004490  5019               	movf	memset@n^0,w,c
 10406  004492  241F               	addwf	memset@s^0,w,c
 10407  004494  6E1B               	movwf	??_memset^0,c
 10408  004496  501A               	movf	(memset@n+1)^0,w,c
 10409  004498  2020               	addwfc	(memset@s+1)^0,w,c
 10410  00449A  6E1C               	movwf	(??_memset+1)^0,c
 10411  00449C  0EFF               	movlw	255
 10412  00449E  241B               	addwf	??_memset^0,w,c
 10413  0044A0  6ED9               	movwf	fsr2l,c
 10414  0044A2  0EFF               	movlw	255
 10415  0044A4  201C               	addwfc	(??_memset+1)^0,w,c
 10416  0044A6  6EDA               	movwf	fsr2h,c
 10417  0044A8  0060  F05F  FFDF   	movff	memset@c,indf2
 10418  0044AE  501A               	movf	(memset@n+1)^0,w,c
 10419  0044B0  E104               	bnz	l10421
 10420  0044B2  0E03               	movlw	3
 10421  0044B4  5C19               	subwf	memset@n^0,w,c
 10422  0044B6  A0D8               	btfss	status,0,c
 10423  0044B8  0012               	return	
 10424  0044BA                     l10421:
 10425  0044BA  EE20 F001          	lfsr	2,1
 10426  0044BE  501F               	movf	memset@s^0,w,c
 10427  0044C0  26D9               	addwf	fsr2l,f,c
 10428  0044C2  5020               	movf	(memset@s+1)^0,w,c
 10429  0044C4  22DA               	addwfc	fsr2h,f,c
 10430  0044C6  0060  F05F  FFDF   	movff	memset@c,indf2
 10431  0044CC  EE20 F002          	lfsr	2,2
 10432  0044D0  501F               	movf	memset@s^0,w,c
 10433  0044D2  26D9               	addwf	fsr2l,f,c
 10434  0044D4  5020               	movf	(memset@s+1)^0,w,c
 10435  0044D6  22DA               	addwfc	fsr2h,f,c
 10436  0044D8  0060  F05F  FFDF   	movff	memset@c,indf2
 10437  0044DE  5019               	movf	memset@n^0,w,c
 10438  0044E0  241F               	addwf	memset@s^0,w,c
 10439  0044E2  6E1B               	movwf	??_memset^0,c
 10440  0044E4  501A               	movf	(memset@n+1)^0,w,c
 10441  0044E6  2020               	addwfc	(memset@s+1)^0,w,c
 10442  0044E8  6E1C               	movwf	(??_memset+1)^0,c
 10443  0044EA  0EFE               	movlw	254
 10444  0044EC  241B               	addwf	??_memset^0,w,c
 10445  0044EE  6ED9               	movwf	fsr2l,c
 10446  0044F0  0EFF               	movlw	255
 10447  0044F2  201C               	addwfc	(??_memset+1)^0,w,c
 10448  0044F4  6EDA               	movwf	fsr2h,c
 10449  0044F6  0060  F05F  FFDF   	movff	memset@c,indf2
 10450  0044FC  5019               	movf	memset@n^0,w,c
 10451  0044FE  241F               	addwf	memset@s^0,w,c
 10452  004500  6E1B               	movwf	??_memset^0,c
 10453  004502  501A               	movf	(memset@n+1)^0,w,c
 10454  004504  2020               	addwfc	(memset@s+1)^0,w,c
 10455  004506  6E1C               	movwf	(??_memset+1)^0,c
 10456  004508  0EFD               	movlw	253
 10457  00450A  241B               	addwf	??_memset^0,w,c
 10458  00450C  6ED9               	movwf	fsr2l,c
 10459  00450E  0EFF               	movlw	255
 10460  004510  201C               	addwfc	(??_memset+1)^0,w,c
 10461  004512  6EDA               	movwf	fsr2h,c
 10462  004514  0060  F05F  FFDF   	movff	memset@c,indf2
 10463  00451A  501A               	movf	(memset@n+1)^0,w,c
 10464  00451C  E104               	bnz	l10427
 10465  00451E  0E07               	movlw	7
 10466  004520  5C19               	subwf	memset@n^0,w,c
 10467  004522  A0D8               	btfss	status,0,c
 10468  004524  0012               	return	
 10469  004526                     l10427:
 10470  004526  EE20 F003          	lfsr	2,3
 10471  00452A  501F               	movf	memset@s^0,w,c
 10472  00452C  26D9               	addwf	fsr2l,f,c
 10473  00452E  5020               	movf	(memset@s+1)^0,w,c
 10474  004530  22DA               	addwfc	fsr2h,f,c
 10475  004532  0060  F05F  FFDF   	movff	memset@c,indf2
 10476  004538  5019               	movf	memset@n^0,w,c
 10477  00453A  241F               	addwf	memset@s^0,w,c
 10478  00453C  6E1B               	movwf	??_memset^0,c
 10479  00453E  501A               	movf	(memset@n+1)^0,w,c
 10480  004540  2020               	addwfc	(memset@s+1)^0,w,c
 10481  004542  6E1C               	movwf	(??_memset+1)^0,c
 10482  004544  0EFC               	movlw	252
 10483  004546  241B               	addwf	??_memset^0,w,c
 10484  004548  6ED9               	movwf	fsr2l,c
 10485  00454A  0EFF               	movlw	255
 10486  00454C  201C               	addwfc	(??_memset+1)^0,w,c
 10487  00454E  6EDA               	movwf	fsr2h,c
 10488  004550  0060  F05F  FFDF   	movff	memset@c,indf2
 10489  004556  501A               	movf	(memset@n+1)^0,w,c
 10490  004558  E104               	bnz	l10433
 10491  00455A  0E09               	movlw	9
 10492  00455C  5C19               	subwf	memset@n^0,w,c
 10493  00455E  A0D8               	btfss	status,0,c
 10494  004560  0012               	return	
 10495  004562                     l10433:
 10496  004562  C01F  F01B         	movff	memset@s,??_memset
 10497  004566  C020  F01C         	movff	memset@s+1,??_memset+1
 10498  00456A  1E1B               	comf	??_memset^0,f,c
 10499  00456C  1E1C               	comf	(??_memset+1)^0,f,c
 10500  00456E  4A1B               	infsnz	??_memset^0,f,c
 10501  004570  2A1C               	incf	(??_memset+1)^0,f,c
 10502  004572  0E03               	movlw	3
 10503  004574  141B               	andwf	??_memset^0,w,c
 10504  004576  6E1D               	movwf	memset@k^0,c
 10505  004578  6A1E               	clrf	(memset@k+1)^0,c
 10506  00457A  501D               	movf	memset@k^0,w,c
 10507  00457C  261F               	addwf	memset@s^0,f,c
 10508  00457E  501E               	movf	(memset@k+1)^0,w,c
 10509  004580  2220               	addwfc	(memset@s+1)^0,f,c
 10510  004582  501D               	movf	memset@k^0,w,c
 10511  004584  5E19               	subwf	memset@n^0,f,c
 10512  004586  501E               	movf	(memset@k+1)^0,w,c
 10513  004588  5A1A               	subwfb	(memset@n+1)^0,f,c
 10514  00458A  0EFC               	movlw	252
 10515  00458C  1619               	andwf	memset@n^0,f,c
 10516  00458E  0EFF               	movlw	255
 10517  004590  161A               	andwf	(memset@n+1)^0,f,c
 10518  004592  D00E               	goto	l10441
 10519  004594                     l10435:
 10520  004594  0060  F07F  FFD9   	movff	memset@s,fsr2l
 10521  00459A  0060  F083  FFDA   	movff	memset@s+1,fsr2h
 10522  0045A0  0060  F05F  FFDF   	movff	memset@c,indf2
 10523  0045A6  0619               	decf	memset@n^0,f,c
 10524  0045A8  A0D8               	btfss	status,0,c
 10525  0045AA  061A               	decf	(memset@n+1)^0,f,c
 10526  0045AC  4A1F               	infsnz	memset@s^0,f,c
 10527  0045AE  2A20               	incf	(memset@s+1)^0,f,c
 10528  0045B0                     l10441:
 10529  0045B0  5019               	movf	memset@n^0,w,c
 10530  0045B2  101A               	iorwf	(memset@n+1)^0,w,c
 10531  0045B4  B4D8               	btfsc	status,2,c
 10532  0045B6  0012               	return	
 10533  0045B8  D7ED               	goto	l10435
 10534  0045BA                     __end_of_memset:
 10535                           	callstack 0
 10536                           
 10537 ;; *************** function _linux_putc *****************
 10538 ;; Defined at:
 10539 ;;		line 47 in file "scdm.c"
 10540 ;; Parameters:    Size  Location     Type
 10541 ;;  data            2   43[COMRAM] PTR unsigned char 
 10542 ;;		 -> STR_11(3), cli_read@i(1), 
 10543 ;;  a_len           1   45[COMRAM] unsigned char 
 10544 ;; Auto vars:     Size  Location     Type
 10545 ;;		None
 10546 ;; Return value:  Size  Location     Type
 10547 ;;                  1    wreg      unsigned char 
 10548 ;; Registers used:
 10549 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10550 ;; Tracked objects:
 10551 ;;		On entry : 0/0
 10552 ;;		On exit  : 0/0
 10553 ;;		Unchanged: 0/0
 10554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10555 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10558 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10559 ;;Total ram usage:        3 bytes
 10560 ;; Hardware stack levels used: 1
 10561 ;; Hardware stack levels required when called: 9
 10562 ;; This function calls:
 10563 ;;		_puts
 10564 ;; This function is called by:
 10565 ;;		_cli_read
 10566 ;; This function uses a non-reentrant model
 10567 ;;
 10568                           
 10569                           	psect	text35
 10570  005DBA                     __ptext35:
 10571                           	callstack 0
 10572  005DBA                     _linux_putc:
 10573                           	callstack 20
 10574                           
 10575                           ;scdm.c: 47: uint8_t linux_putc(uint8_t *data, uint8_t a_len);scdm.c: 48: {;scdm.c: 49: 
      +                           puts((const char *) data);
 10576                           
 10577                           ;incstack = 0
 10578  005DBA  C02C  F029         	movff	linux_putc@data,puts@s
 10579  005DBE  C02D  F02A         	movff	linux_putc@data+1,puts@s+1
 10580  005DC2  ECA8  F02C         	call	_puts	;wreg free
 10581  005DC6  0012               	return		;funcret
 10582  005DC8                     __end_of_linux_putc:
 10583                           	callstack 0
 10584                           
 10585 ;; *************** function _linux_getc *****************
 10586 ;; Defined at:
 10587 ;;		line 37 in file "scdm.c"
 10588 ;; Parameters:    Size  Location     Type
 10589 ;;  a_data          1   21[COMRAM] PTR unsigned char 
 10590 ;;		 -> cli_read@i(1), 
 10591 ;; Auto vars:     Size  Location     Type
 10592 ;;		None
 10593 ;; Return value:  Size  Location     Type
 10594 ;;                  1    wreg      unsigned char 
 10595 ;; Registers used:
 10596 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10597 ;; Tracked objects:
 10598 ;;		On entry : 3F/0
 10599 ;;		On exit  : 6/0
 10600 ;;		Unchanged: 0/0
 10601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10602 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10604 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10605 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10606 ;;Total ram usage:        2 bytes
 10607 ;; Hardware stack levels used: 1
 10608 ;; Hardware stack levels required when called: 5
 10609 ;; This function calls:
 10610 ;;		_UART1_Read
 10611 ;;		_UART1_is_rx_ready
 10612 ;; This function is called by:
 10613 ;;		_cli_read
 10614 ;; This function uses a non-reentrant model
 10615 ;;
 10616                           
 10617                           	psect	text36
 10618  005BAC                     __ptext36:
 10619                           	callstack 0
 10620  005BAC                     _linux_getc:
 10621                           	callstack 24
 10622                           
 10623                           ; BSR set to: 0
 10624                           ;scdm.c: 37: uint8_t linux_getc(uint8_t *a_data);scdm.c: 38: {;scdm.c: 39:  if (UART1_is
      +                          _rx_ready()) {
 10625                           
 10626                           ;incstack = 0
 10627  005BAC  ECE4  F02E         	call	_UART1_is_rx_ready	;wreg free
 10628  005BB0  0900               	iorlw	0
 10629  005BB2  B4D8               	btfsc	status,2,c
 10630  005BB4  D00B               	goto	l10613
 10631                           
 10632                           ; BSR set to: 0
 10633                           ;scdm.c: 40:   a_data[0] = UART1_Read();
 10634  005BB6  EC0E  F02C         	call	_UART1_Read	;wreg free
 10635  005BBA  6E17               	movwf	??_linux_getc^0,c
 10636  005BBC  5016               	movf	linux_getc@a_data^0,w,c
 10637  005BBE  6ED9               	movwf	fsr2l,c
 10638  005BC0  6ADA               	clrf	fsr2h,c
 10639  005BC2  0060  F05F  FFDF   	movff	??_linux_getc,indf2
 10640                           
 10641                           ; BSR set to: 57
 10642                           ;scdm.c: 41:   return 1;
 10643  005BC8  0E01               	movlw	1
 10644  005BCA  0012               	return	
 10645  005BCC                     l10613:
 10646                           
 10647                           ; BSR set to: 0
 10648                           ;scdm.c: 43:   return 0;
 10649  005BCC  0E00               	movlw	0
 10650  005BCE  0012               	return		;funcret
 10651  005BD0                     __end_of_linux_getc:
 10652                           	callstack 0
 10653                           
 10654 ;; *************** function _UART1_is_rx_ready *****************
 10655 ;; Defined at:
 10656 ;;		line 161 in file "mcc_generated_files/uart1.c"
 10657 ;; Parameters:    Size  Location     Type
 10658 ;;		None
 10659 ;; Auto vars:     Size  Location     Type
 10660 ;;		None
 10661 ;; Return value:  Size  Location     Type
 10662 ;;                  1    wreg      _Bool 
 10663 ;; Registers used:
 10664 ;;		wreg, status,2
 10665 ;; Tracked objects:
 10666 ;;		On entry : 3F/0
 10667 ;;		On exit  : 3F/0
 10668 ;;		Unchanged: 3F/0
 10669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10674 ;;Total ram usage:        0 bytes
 10675 ;; Hardware stack levels used: 1
 10676 ;; Hardware stack levels required when called: 4
 10677 ;; This function calls:
 10678 ;;		Nothing
 10679 ;; This function is called by:
 10680 ;;		_linux_getc
 10681 ;; This function uses a non-reentrant model
 10682 ;;
 10683                           
 10684                           	psect	text37
 10685  005DC8                     __ptext37:
 10686                           	callstack 0
 10687  005DC8                     _UART1_is_rx_ready:
 10688                           	callstack 24
 10689                           
 10690                           ; BSR set to: 0
 10691                           ;mcc_generated_files/uart1.c: 163:     return (uart1RxCount ? 1 : 0);
 10692                           
 10693                           ;incstack = 0
 10694  005DC8  5046               	movf	_uart1RxCount^0,w,c	;volatile
 10695  005DCA  B4D8               	btfsc	status,2,c
 10696  005DCC  D002               	goto	u12110
 10697  005DCE  0E01               	movlw	1
 10698  005DD0  0012               	return	
 10699  005DD2                     u12110:
 10700  005DD2  0E00               	movlw	0
 10701                           
 10702                           ; BSR set to: 0
 10703  005DD4  0012               	return		;funcret
 10704  005DD6                     __end_of_UART1_is_rx_ready:
 10705                           	callstack 0
 10706                           
 10707 ;; *************** function _UART1_Read *****************
 10708 ;; Defined at:
 10709 ;;		line 180 in file "mcc_generated_files/uart1.c"
 10710 ;; Parameters:    Size  Location     Type
 10711 ;;		None
 10712 ;; Auto vars:     Size  Location     Type
 10713 ;;  readValue       1   20[COMRAM] unsigned char 
 10714 ;; Return value:  Size  Location     Type
 10715 ;;                  1    wreg      unsigned char 
 10716 ;; Registers used:
 10717 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10718 ;; Tracked objects:
 10719 ;;		On entry : 3F/0
 10720 ;;		On exit  : 3F/39
 10721 ;;		Unchanged: 0/0
 10722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10724 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10726 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10727 ;;Total ram usage:        1 bytes
 10728 ;; Hardware stack levels used: 1
 10729 ;; Hardware stack levels required when called: 4
 10730 ;; This function calls:
 10731 ;;		Nothing
 10732 ;; This function is called by:
 10733 ;;		_linux_getc
 10734 ;; This function uses a non-reentrant model
 10735 ;;
 10736                           
 10737                           	psect	text38
 10738  00581C                     __ptext38:
 10739                           	callstack 0
 10740  00581C                     _UART1_Read:
 10741                           	callstack 24
 10742                           
 10743                           ; BSR set to: 0
 10744                           ;mcc_generated_files/uart1.c: 184:     while(0 == uart1RxCount)
 10745                           
 10746                           ; BSR set to: 0
 10747                           ;mcc_generated_files/uart1.c: 184:     while(0 == uart1RxCount)
 10748                           
 10749                           ; BSR set to: 0
 10750                           ;incstack = 0
 10751  00581C  5046               	movf	_uart1RxCount^0,w,c	;volatile
 10752  00581E  B4D8               	btfsc	status,2,c
 10753  005820  D7FD               	goto	__ptext38
 10754                           
 10755                           ; BSR set to: 0
 10756                           ;mcc_generated_files/uart1.c: 188:     uart1RxLastError = uart1RxStatusBuffer[uart1RxTai
      +                          l];
 10757  005822  0E00               	movlw	low _uart1RxStatusBuffer
 10758  005824  2447               	addwf	_uart1RxTail^0,w,c	;volatile
 10759  005826  6ED9               	movwf	fsr2l,c
 10760  005828  6ADA               	clrf	fsr2h,c
 10761  00582A  0E01               	movlw	high _uart1RxStatusBuffer
 10762  00582C  22DA               	addwfc	fsr2h,f,c
 10763  00582E  50DF               	movf	indf2,w,c
 10764  005830  6E45               	movwf	_uart1RxLastError^0,c	;volatile
 10765                           
 10766                           ;mcc_generated_files/uart1.c: 190:     readValue = uart1RxBuffer[uart1RxTail++];
 10767  005832  0E00               	movlw	low _uart1RxBuffer
 10768  005834  2447               	addwf	_uart1RxTail^0,w,c	;volatile
 10769  005836  6ED9               	movwf	fsr2l,c
 10770  005838  6ADA               	clrf	fsr2h,c
 10771  00583A  0E02               	movlw	high _uart1RxBuffer
 10772  00583C  22DA               	addwfc	fsr2h,f,c
 10773  00583E  50DF               	movf	indf2,w,c
 10774  005840  6E15               	movwf	UART1_Read@readValue^0,c
 10775                           
 10776                           ; BSR set to: 0
 10777  005842  2A47               	incf	_uart1RxTail^0,f,c	;volatile
 10778                           
 10779                           ; BSR set to: 0
 10780                           ;mcc_generated_files/uart1.c: 191:     if(sizeof(uart1RxBuffer) <= uart1RxTail)
 10781  005844  0E3F               	movlw	63
 10782  005846  6447               	cpfsgt	_uart1RxTail^0,c
 10783  005848  D002               	goto	l10387
 10784                           
 10785                           ; BSR set to: 0
 10786                           ;mcc_generated_files/uart1.c: 192:     {;mcc_generated_files/uart1.c: 193:         uart1
      +                          RxTail = 0;
 10787  00584A  0E00               	movlw	0
 10788  00584C  6E47               	movwf	_uart1RxTail^0,c	;volatile
 10789  00584E                     l10387:
 10790                           
 10791                           ; BSR set to: 0
 10792                           ;mcc_generated_files/uart1.c: 195:     PIE3bits.U1RXIE = 0;
 10793  00584E  0139               	movlb	57	; () banked
 10794  005850  9793               	bcf	147,3,b	;volatile
 10795                           
 10796                           ; BSR set to: 57
 10797                           ;mcc_generated_files/uart1.c: 196:     uart1RxCount--;
 10798  005852  0646               	decf	_uart1RxCount^0,f,c	;volatile
 10799                           
 10800                           ; BSR set to: 57
 10801                           ;mcc_generated_files/uart1.c: 197:     PIE3bits.U1RXIE = 1;
 10802  005854  8793               	bsf	147,3,b	;volatile
 10803                           
 10804                           ; BSR set to: 57
 10805                           ;mcc_generated_files/uart1.c: 199:     return readValue;
 10806  005856  5015               	movf	UART1_Read@readValue^0,w,c
 10807                           
 10808                           ; BSR set to: 57
 10809  005858  0012               	return		;funcret
 10810  00585A                     __end_of_UART1_Read:
 10811                           	callstack 0
 10812                           
 10813 ;; *************** function __cli_interpret_cmd *****************
 10814 ;; Defined at:
 10815 ;;		line 53 in file "scdm.c"
 10816 ;; Parameters:    Size  Location     Type
 10817 ;;  a_ctx           2   45[COMRAM] PTR struct _t_cli_ctx
 10818 ;;		 -> cli_ctx(131), 
 10819 ;; Auto vars:     Size  Location     Type
 10820 ;;  i               1   48[COMRAM] unsigned char 
 10821 ;;  ret             1   47[COMRAM] unsigned char 
 10822 ;; Return value:  Size  Location     Type
 10823 ;;                  1    wreg      unsigned char 
 10824 ;; Registers used:
 10825 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 10826 ;; Tracked objects:
 10827 ;;		On entry : 0/0
 10828 ;;		On exit  : 0/0
 10829 ;;		Unchanged: 0/0
 10830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10831 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10832 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10833 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10834 ;;      Totals:         4      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10835 ;;Total ram usage:       14 bytes
 10836 ;; Hardware stack levels used: 1
 10837 ;; Hardware stack levels required when called: 10
 10838 ;; This function calls:
 10839 ;;		Absolute function
 10840 ;;		_fh_po
 10841 ;;		_fh_pr
 10842 ;;		_fh_ps
 10843 ;;		_strlen
 10844 ;;		_strncmp
 10845 ;; This function is called by:
 10846 ;;		_cli_read
 10847 ;; This function uses a non-reentrant model
 10848 ;;
 10849                           
 10850                           	psect	text39
 10851  003C98                     __ptext39:
 10852                           	callstack 0
 10853  003C98                     __cli_interpret_cmd:
 10854                           	callstack 19
 10855                           
 10856                           ;scdm.c: 53: static uint8_t _cli_interpret_cmd(t_cli_ctx *a_ctx);scdm.c: 54: {;scdm.c: 5
      +                          5:  uint8_t i = 0;
 10857                           
 10858                           ; BSR set to: 57
 10859                           ;incstack = 0
 10860  003C98  0E00               	movlw	0
 10861  003C9A  6E31               	movwf	__cli_interpret_cmd@i^0,c
 10862                           
 10863                           ;scdm.c: 56:  uint8_t ret = E_CMD_OK;
 10864  003C9C  0E00               	movlw	0
 10865  003C9E  6E30               	movwf	__cli_interpret_cmd@ret^0,c
 10866                           
 10867                           ;scdm.c: 58:  if (!strlen(a_ctx->cmd)) {
 10868  003CA0  0E02               	movlw	2
 10869  003CA2  242E               	addwf	__cli_interpret_cmd@a_ctx^0,w,c
 10870  003CA4  6E15               	movwf	strlen@s^0,c
 10871  003CA6  0E00               	movlw	0
 10872  003CA8  202F               	addwfc	(__cli_interpret_cmd@a_ctx+1)^0,w,c
 10873  003CAA  6E16               	movwf	(strlen@s+1)^0,c
 10874  003CAC  EC3F  F02B         	call	_strlen	;wreg free
 10875  003CB0  5015               	movf	?_strlen^0,w,c
 10876  003CB2  1016               	iorwf	(?_strlen+1)^0,w,c
 10877  003CB4  A4D8               	btfss	status,2,c
 10878  003CB6  D002               	goto	l10629
 10879                           
 10880                           ;scdm.c: 59:   return E_CMD_EMPTY;
 10881  003CB8  0E03               	movlw	3
 10882  003CBA  0012               	return	
 10883  003CBC                     l10629:
 10884                           
 10885                           ;scdm.c: 62:  if (strlen(a_ctx->cmd) < 2) {
 10886  003CBC  0E02               	movlw	2
 10887  003CBE  242E               	addwf	__cli_interpret_cmd@a_ctx^0,w,c
 10888  003CC0  6E15               	movwf	strlen@s^0,c
 10889  003CC2  0E00               	movlw	0
 10890  003CC4  202F               	addwfc	(__cli_interpret_cmd@a_ctx+1)^0,w,c
 10891  003CC6  6E16               	movwf	(strlen@s+1)^0,c
 10892  003CC8  EC3F  F02B         	call	_strlen	;wreg free
 10893  003CCC  5016               	movf	(?_strlen+1)^0,w,c
 10894  003CCE  E103               	bnz	u12241
 10895  003CD0  0E02               	movlw	2
 10896  003CD2  5C15               	subwf	?_strlen^0,w,c
 10897  003CD4  B0D8               	btfsc	status,0,c
 10898  003CD6                     u12241:
 10899  003CD6  D082               	goto	l10641
 10900                           
 10901                           ;scdm.c: 63:   return E_CMD_TOO_SHORT;
 10902  003CD8  0E02               	movlw	2
 10903  003CDA  0012               	return	
 10904  003CDC                     l10635:
 10905                           
 10906                           ; BSR set to: 0
 10907                           ;scdm.c: 67:   if (!strncmp(a_ctx->cmds[i].cmd, a_ctx->cmd, strlen(a_ctx->cmds[i].cmd)))
      +                           {
 10908  003CDC  5031               	movf	__cli_interpret_cmd@i^0,w,c
 10909  003CDE  0D04               	mullw	4
 10910  003CE0  006F FFCC  F060    	movff	prodl,??__cli_interpret_cmd
 10911  003CE6  006F FFD0  F061    	movff	prodh,??__cli_interpret_cmd+1
 10912  003CEC  0060  F0BB  FFD9   	movff	__cli_interpret_cmd@a_ctx,fsr2l
 10913  003CF2  0060  F0BF  FFDA   	movff	__cli_interpret_cmd@a_ctx+1,fsr2h
 10914  003CF8  006F FF78  F062    	movff	postinc2,??__cli_interpret_cmd+2
 10915  003CFE  006F FF74  F063    	movff	postdec2,??__cli_interpret_cmd+3
 10916  003D04  5160               	movf	??__cli_interpret_cmd& (0+255),w,b
 10917  003D06  2562               	addwf	(??__cli_interpret_cmd+2)& (0+255),w,b
 10918  003D08  6ED9               	movwf	fsr2l,c
 10919  003D0A  5161               	movf	(??__cli_interpret_cmd+1)& (0+255),w,b
 10920  003D0C  2163               	addwfc	(??__cli_interpret_cmd+3)& (0+255),w,b
 10921  003D0E  6EDA               	movwf	fsr2h,c
 10922  003D10  50DF               	movf	indf2,w,c
 10923  003D12  6F64               	movwf	(??__cli_interpret_cmd+4)& (0+255),b
 10924  003D14  C064  F019         	movff	??__cli_interpret_cmd+4,strncmp@_l
 10925  003D18  5019               	movf	strncmp@_l^0,w,c
 10926  003D1A  A4D8               	btfss	status,2,c
 10927  003D1C  0E20               	movlw	high __smallconst
 10928  003D1E  6E1A               	movwf	(strncmp@_l+1)^0,c
 10929  003D20  0E02               	movlw	2
 10930  003D22  242E               	addwf	__cli_interpret_cmd@a_ctx^0,w,c
 10931  003D24  6E1B               	movwf	strncmp@_r^0,c
 10932  003D26  0E00               	movlw	0
 10933  003D28  202F               	addwfc	(__cli_interpret_cmd@a_ctx+1)^0,w,c
 10934  003D2A  6E1C               	movwf	(strncmp@_r+1)^0,c
 10935  003D2C  5031               	movf	__cli_interpret_cmd@i^0,w,c
 10936  003D2E  0D04               	mullw	4
 10937  003D30  006F FFCC  F065    	movff	prodl,??__cli_interpret_cmd+5
 10938  003D36  006F FFD0  F066    	movff	prodh,??__cli_interpret_cmd+6
 10939  003D3C  0060  F0BB  FFD9   	movff	__cli_interpret_cmd@a_ctx,fsr2l
 10940  003D42  0060  F0BF  FFDA   	movff	__cli_interpret_cmd@a_ctx+1,fsr2h
 10941  003D48  006F FF78  F067    	movff	postinc2,??__cli_interpret_cmd+7
 10942  003D4E  006F FF74  F068    	movff	postdec2,??__cli_interpret_cmd+8
 10943  003D54  5165               	movf	(??__cli_interpret_cmd+5)& (0+255),w,b
 10944  003D56  2567               	addwf	(??__cli_interpret_cmd+7)& (0+255),w,b
 10945  003D58  6ED9               	movwf	fsr2l,c
 10946  003D5A  5166               	movf	(??__cli_interpret_cmd+6)& (0+255),w,b
 10947  003D5C  2168               	addwfc	(??__cli_interpret_cmd+8)& (0+255),w,b
 10948  003D5E  6EDA               	movwf	fsr2h,c
 10949  003D60  50DF               	movf	indf2,w,c
 10950  003D62  6F69               	movwf	(??__cli_interpret_cmd+9)& (0+255),b
 10951  003D64  C069  F015         	movff	??__cli_interpret_cmd+9,strlen@s
 10952  003D68  5015               	movf	strlen@s^0,w,c
 10953  003D6A  A4D8               	btfss	status,2,c
 10954  003D6C  0E20               	movlw	high __smallconst
 10955  003D6E  6E16               	movwf	(strlen@s+1)^0,c
 10956  003D70  EC3F  F02B         	call	_strlen	;wreg free
 10957  003D74  C015  F01D         	movff	?_strlen,strncmp@n
 10958  003D78  C016  F01E         	movff	?_strlen+1,strncmp@n+1
 10959  003D7C  ECDB  F020         	call	_strncmp	;wreg free
 10960  003D80  5019               	movf	?_strncmp^0,w,c
 10961  003D82  101A               	iorwf	(?_strncmp+1)^0,w,c
 10962  003D84  A4D8               	btfss	status,2,c
 10963  003D86  D029               	goto	l10639
 10964                           
 10965                           ;scdm.c: 69:    a_ctx->cmds[i].fh((void *) a_ctx);
 10966  003D88  C02E  F02C         	movff	__cli_interpret_cmd@a_ctx,fh_po@a_data
 10967  003D8C  C02F  F02D         	movff	__cli_interpret_cmd@a_ctx+1,fh_po@a_data+1
 10968  003D90  5031               	movf	__cli_interpret_cmd@i^0,w,c
 10969  003D92  0D04               	mullw	4
 10970  003D94  0060  F0BB  FFD9   	movff	__cli_interpret_cmd@a_ctx,fsr2l
 10971  003D9A  0060  F0BF  FFDA   	movff	__cli_interpret_cmd@a_ctx+1,fsr2h
 10972  003DA0  006F FF78  F060    	movff	postinc2,??__cli_interpret_cmd
 10973  003DA6  006F FF74  F061    	movff	postdec2,??__cli_interpret_cmd+1
 10974  003DAC  50F3               	movf	243,w,c
 10975  003DAE  0100               	movlb	0	; () banked
 10976  003DB0  2760               	addwf	??__cli_interpret_cmd& (0+255),f,b
 10977  003DB2  50F4               	movf	244,w,c
 10978  003DB4  2361               	addwfc	(??__cli_interpret_cmd+1)& (0+255),f,b
 10979  003DB6  0E01               	movlw	1
 10980  003DB8  2560               	addwf	??__cli_interpret_cmd& (0+255),w,b
 10981  003DBA  6ED9               	movwf	fsr2l,c
 10982  003DBC  0E00               	movlw	0
 10983  003DBE  2161               	addwfc	(??__cli_interpret_cmd+1)& (0+255),w,b
 10984  003DC0  6EDA               	movwf	fsr2h,c
 10985  003DC2  D801               	call	u12268
 10986  003DC4  D029               	goto	u12270
 10987  003DC6                     u12268:
 10988  003DC6  0005               	push	
 10989  003DC8  6EFA               	movwf	pclath,c
 10990  003DCA  50DE               	movf	postinc2,w,c
 10991  003DCC  6EFD               	movwf	tosl,c
 10992  003DCE  50DE               	movf	postinc2,w,c
 10993  003DD0  6EFE               	movwf	tosh,c
 10994  003DD2  50DE               	movf	postinc2,w,c
 10995  003DD4  6EFF               	movwf	tosu,c
 10996  003DD6  50FA               	movf	pclath,w,c
 10997  003DD8  0012               	return		;indir
 10998  003DDA                     l10639:
 10999                           
 11000                           ;scdm.c: 72:   i++;
 11001  003DDA  2A31               	incf	__cli_interpret_cmd@i^0,f,c
 11002  003DDC                     l10641:
 11003                           
 11004                           ;scdm.c: 66:  while (a_ctx->cmds[i].fh) {
 11005  003DDC  5031               	movf	__cli_interpret_cmd@i^0,w,c
 11006  003DDE  0D04               	mullw	4
 11007  003DE0  0060  F0BB  FFD9   	movff	__cli_interpret_cmd@a_ctx,fsr2l
 11008  003DE6  0060  F0BF  FFDA   	movff	__cli_interpret_cmd@a_ctx+1,fsr2h
 11009  003DEC  006F FF78  F060    	movff	postinc2,??__cli_interpret_cmd
 11010  003DF2  006F FF74  F061    	movff	postdec2,??__cli_interpret_cmd+1
 11011  003DF8  50F3               	movf	243,w,c
 11012  003DFA  0100               	movlb	0	; () banked
 11013  003DFC  2760               	addwf	??__cli_interpret_cmd& (0+255),f,b
 11014  003DFE  50F4               	movf	244,w,c
 11015  003E00  2361               	addwfc	(??__cli_interpret_cmd+1)& (0+255),f,b
 11016  003E02  0E01               	movlw	1
 11017  003E04  2560               	addwf	??__cli_interpret_cmd& (0+255),w,b
 11018  003E06  6ED9               	movwf	fsr2l,c
 11019  003E08  0E00               	movlw	0
 11020  003E0A  2161               	addwfc	(??__cli_interpret_cmd+1)& (0+255),w,b
 11021  003E0C  6EDA               	movwf	fsr2h,c
 11022  003E0E  50DE               	movf	postinc2,w,c
 11023  003E10  10DE               	iorwf	postinc2,w,c
 11024  003E12  10DE               	iorwf	postinc2,w,c
 11025  003E14  A4D8               	btfss	status,2,c
 11026  003E16  D762               	goto	l10635
 11027  003E18                     u12270:
 11028                           
 11029                           ;scdm.c: 75:  if (!a_ctx->cmds[i].fh) {
 11030  003E18  5031               	movf	__cli_interpret_cmd@i^0,w,c
 11031  003E1A  0D04               	mullw	4
 11032  003E1C  0060  F0BB  FFD9   	movff	__cli_interpret_cmd@a_ctx,fsr2l
 11033  003E22  0060  F0BF  FFDA   	movff	__cli_interpret_cmd@a_ctx+1,fsr2h
 11034  003E28  006F FF78  F060    	movff	postinc2,??__cli_interpret_cmd
 11035  003E2E  006F FF74  F061    	movff	postdec2,??__cli_interpret_cmd+1
 11036  003E34  50F3               	movf	243,w,c
 11037  003E36  0100               	movlb	0	; () banked
 11038  003E38  2760               	addwf	??__cli_interpret_cmd& (0+255),f,b
 11039  003E3A  50F4               	movf	244,w,c
 11040  003E3C  2361               	addwfc	(??__cli_interpret_cmd+1)& (0+255),f,b
 11041  003E3E  0E01               	movlw	1
 11042  003E40  2560               	addwf	??__cli_interpret_cmd& (0+255),w,b
 11043  003E42  6ED9               	movwf	fsr2l,c
 11044  003E44  0E00               	movlw	0
 11045  003E46  2161               	addwfc	(??__cli_interpret_cmd+1)& (0+255),w,b
 11046  003E48  6EDA               	movwf	fsr2h,c
 11047  003E4A  50DE               	movf	postinc2,w,c
 11048  003E4C  10DE               	iorwf	postinc2,w,c
 11049  003E4E  10DE               	iorwf	postinc2,w,c
 11050  003E50  A4D8               	btfss	status,2,c
 11051  003E52  D002               	goto	l1229
 11052                           
 11053                           ; BSR set to: 0
 11054                           ;scdm.c: 76:   ret = E_CMD_NOT_FOUND;
 11055  003E54  0E01               	movlw	1
 11056  003E56  6E30               	movwf	__cli_interpret_cmd@ret^0,c
 11057  003E58                     l1229:
 11058                           
 11059                           ; BSR set to: 0
 11060                           ;scdm.c: 79:  return ret;
 11061  003E58  5030               	movf	__cli_interpret_cmd@ret^0,w,c
 11062  003E5A  0012               	return		;funcret
 11063  003E5C                     __end_of__cli_interpret_cmd:
 11064                           	callstack 0
 11065                           
 11066 ;; *************** function _strncmp *****************
 11067 ;; Defined at:
 11068 ;;		line 3 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/strncmp.c"
 11069 ;; Parameters:    Size  Location     Type
 11070 ;;  _l              2   24[COMRAM] PTR const unsigned char 
 11071 ;;		 -> vfpfcnvrt@ct(3), STR_10(21), NULL(0), STR_9(3), 
 11072 ;;		 -> STR_8(3), STR_7(3), STR_6(79), 
 11073 ;;  _r              2   26[COMRAM] PTR const unsigned char 
 11074 ;;		 -> cli_ctx.cmd(128), STR_27(4), STR_22(3), cli_ctx(131), 
 11075 ;;  n               2   28[COMRAM] unsigned int 
 11076 ;; Auto vars:     Size  Location     Type
 11077 ;;  r               2   34[COMRAM] PTR const unsigned char 
 11078 ;;		 -> cli_ctx.cmd(128), STR_27(4), STR_22(3), cli_ctx(131), 
 11079 ;;  l               2   32[COMRAM] PTR const unsigned char 
 11080 ;;		 -> vfpfcnvrt@ct(3), STR_10(21), NULL(0), STR_9(3), 
 11081 ;;		 -> STR_8(3), STR_7(3), STR_6(79), 
 11082 ;; Return value:  Size  Location     Type
 11083 ;;                  2   24[COMRAM] int 
 11084 ;; Registers used:
 11085 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 11086 ;; Tracked objects:
 11087 ;;		On entry : 0/0
 11088 ;;		On exit  : 0/0
 11089 ;;		Unchanged: 0/0
 11090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11091 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11092 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11093 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11094 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11095 ;;Total ram usage:       12 bytes
 11096 ;; Hardware stack levels used: 1
 11097 ;; Hardware stack levels required when called: 4
 11098 ;; This function calls:
 11099 ;;		Nothing
 11100 ;; This function is called by:
 11101 ;;		__cli_interpret_cmd
 11102 ;;		_vfpfcnvrt
 11103 ;; This function uses a non-reentrant model
 11104 ;;
 11105                           
 11106                           	psect	text40
 11107  0041B6                     __ptext40:
 11108                           	callstack 0
 11109  0041B6                     _strncmp:
 11110                           	callstack 21
 11111                           
 11112                           ;incstack = 0
 11113  0041B6  C019  F021         	movff	strncmp@_l,strncmp@l
 11114  0041BA  C01A  F022         	movff	strncmp@_l+1,strncmp@l+1
 11115  0041BE  C01B  F023         	movff	strncmp@_r,strncmp@r
 11116  0041C2  C01C  F024         	movff	strncmp@_r+1,strncmp@r+1
 11117  0041C6  061D               	decf	strncmp@n^0,f,c
 11118  0041C8  A0D8               	btfss	status,0,c
 11119  0041CA  061E               	decf	(strncmp@n+1)^0,f,c
 11120  0041CC  281D               	incf	strncmp@n^0,w,c
 11121  0041CE  E10F               	bnz	l9741
 11122  0041D0  281E               	incf	(strncmp@n+1)^0,w,c
 11123  0041D2  A4D8               	btfss	status,2,c
 11124  0041D4  D00C               	goto	l9741
 11125  0041D6  0E00               	movlw	0
 11126  0041D8  6E1A               	movwf	(?_strncmp+1)^0,c
 11127  0041DA  0E00               	movlw	0
 11128  0041DC  6E19               	movwf	?_strncmp^0,c
 11129  0041DE  0012               	return	
 11130  0041E0                     l9739:
 11131  0041E0  4A21               	infsnz	strncmp@l^0,f,c
 11132  0041E2  2A22               	incf	(strncmp@l+1)^0,f,c
 11133  0041E4  4A23               	infsnz	strncmp@r^0,f,c
 11134  0041E6  2A24               	incf	(strncmp@r+1)^0,f,c
 11135  0041E8  061D               	decf	strncmp@n^0,f,c
 11136  0041EA  A0D8               	btfss	status,0,c
 11137  0041EC  061E               	decf	(strncmp@n+1)^0,f,c
 11138  0041EE                     l9741:
 11139  0041EE  0060  F087  FFF6   	movff	strncmp@l,tblptrl
 11140  0041F4  0060  F08B  FFF7   	movff	strncmp@l+1,tblptrh
 11141  0041FA  0E00               	movlw	low (__smallconst shr (0+16))
 11142  0041FC  6EF8               	movwf	tblptru,c
 11143  0041FE  0E1F               	movlw	(high __ramtop+-1)
 11144  004200  64F7               	cpfsgt	tblptrh,c
 11145  004202  D003               	bra	u11117
 11146  004204  0008               	tblrd		*
 11147  004206  50F5               	movf	tablat,w,c
 11148  004208  D007               	bra	u11110
 11149  00420A                     u11117:
 11150  00420A  006F FFDB FFE1     	movff	tblptrl,fsr1l
 11151  004210  006F FFDF FFE2     	movff	tblptrh,fsr1h
 11152  004216  50E7               	movf	indf1,w,c
 11153  004218                     u11110:
 11154  004218  0900               	iorlw	0
 11155  00421A  B4D8               	btfsc	status,2,c
 11156  00421C  D04A               	goto	u11170
 11157  00421E  0060  F08F  FFF6   	movff	strncmp@r,tblptrl
 11158  004224  0060  F093  FFF7   	movff	strncmp@r+1,tblptrh
 11159  00422A  0E00               	movlw	low (__smallconst shr (0+16))
 11160  00422C  6EF8               	movwf	tblptru,c
 11161  00422E  0E1F               	movlw	(high __ramtop+-1)
 11162  004230  64F7               	cpfsgt	tblptrh,c
 11163  004232  D003               	bra	u11137
 11164  004234  0008               	tblrd		*
 11165  004236  50F5               	movf	tablat,w,c
 11166  004238  D007               	bra	u11130
 11167  00423A                     u11137:
 11168  00423A  006F FFDB FFE1     	movff	tblptrl,fsr1l
 11169  004240  006F FFDF FFE2     	movff	tblptrh,fsr1h
 11170  004246  50E7               	movf	indf1,w,c
 11171  004248                     u11130:
 11172  004248  0900               	iorlw	0
 11173  00424A  B4D8               	btfsc	status,2,c
 11174  00424C  D032               	goto	u11170
 11175  00424E  501D               	movf	strncmp@n^0,w,c
 11176  004250  101E               	iorwf	(strncmp@n+1)^0,w,c
 11177  004252  B4D8               	btfsc	status,2,c
 11178  004254  D02E               	goto	u11170
 11179  004256  0060  F08F  FFF6   	movff	strncmp@r,tblptrl
 11180  00425C  0060  F093  FFF7   	movff	strncmp@r+1,tblptrh
 11181  004262  0E00               	movlw	low (__smallconst shr (0+16))
 11182  004264  6EF8               	movwf	tblptru,c
 11183  004266  0E1F               	movlw	(high __ramtop+-1)
 11184  004268  64F7               	cpfsgt	tblptrh,c
 11185  00426A  D003               	bra	u11167
 11186  00426C  0008               	tblrd		*
 11187  00426E  50F5               	movf	tablat,w,c
 11188  004270  D007               	bra	u11160
 11189  004272                     u11167:
 11190  004272  006F FFDB FFE1     	movff	tblptrl,fsr1l
 11191  004278  006F FFDF FFE2     	movff	tblptrh,fsr1h
 11192  00427E  50E7               	movf	indf1,w,c
 11193  004280                     u11160:
 11194  004280  6E1F               	movwf	??_strncmp^0,c
 11195  004282  0060  F087  FFF6   	movff	strncmp@l,tblptrl
 11196  004288  0060  F08B  FFF7   	movff	strncmp@l+1,tblptrh
 11197  00428E  0E00               	movlw	low (__smallconst shr (0+16))
 11198  004290  6EF8               	movwf	tblptru,c
 11199  004292  0E1F               	movlw	(high __ramtop+-1)
 11200  004294  64F7               	cpfsgt	tblptrh,c
 11201  004296  D003               	bra	u11177
 11202  004298  0008               	tblrd		*
 11203  00429A  50F5               	movf	tablat,w,c
 11204  00429C  D007               	bra	u11175
 11205  00429E                     u11177:
 11206  00429E  006F FFDB FFE1     	movff	tblptrl,fsr1l
 11207  0042A4  006F FFDF FFE2     	movff	tblptrh,fsr1h
 11208  0042AA  50E7               	movf	indf1,w,c
 11209  0042AC                     u11175:
 11210  0042AC  181F               	xorwf	??_strncmp^0,w,c
 11211  0042AE  B4D8               	btfsc	status,2,c
 11212  0042B0  D797               	goto	l9739
 11213  0042B2                     u11170:
 11214  0042B2  0060  F087  FFF6   	movff	strncmp@l,tblptrl
 11215  0042B8  0060  F08B  FFF7   	movff	strncmp@l+1,tblptrh
 11216  0042BE  0E00               	movlw	low (__smallconst shr (0+16))
 11217  0042C0  6EF8               	movwf	tblptru,c
 11218  0042C2  0E1F               	movlw	(high __ramtop+-1)
 11219  0042C4  64F7               	cpfsgt	tblptrh,c
 11220  0042C6  D003               	bra	u11187
 11221  0042C8  0008               	tblrd		*
 11222  0042CA  50F5               	movf	tablat,w,c
 11223  0042CC  D007               	bra	u11180
 11224  0042CE                     u11187:
 11225  0042CE  006F FFDB FFE1     	movff	tblptrl,fsr1l
 11226  0042D4  006F FFDF FFE2     	movff	tblptrh,fsr1h
 11227  0042DA  50E7               	movf	indf1,w,c
 11228  0042DC                     u11180:
 11229  0042DC  6E1F               	movwf	??_strncmp^0,c
 11230  0042DE  0060  F08F  FFF6   	movff	strncmp@r,tblptrl
 11231  0042E4  0060  F093  FFF7   	movff	strncmp@r+1,tblptrh
 11232  0042EA  0E00               	movlw	low (__smallconst shr (0+16))
 11233  0042EC  6EF8               	movwf	tblptru,c
 11234  0042EE  0E1F               	movlw	(high __ramtop+-1)
 11235  0042F0  64F7               	cpfsgt	tblptrh,c
 11236  0042F2  D003               	bra	u11197
 11237  0042F4  0008               	tblrd		*
 11238  0042F6  50F5               	movf	tablat,w,c
 11239  0042F8  D007               	bra	u11190
 11240  0042FA                     u11197:
 11241  0042FA  006F FFDB FFE1     	movff	tblptrl,fsr1l
 11242  004300  006F FFDF FFE2     	movff	tblptrh,fsr1h
 11243  004306  50E7               	movf	indf1,w,c
 11244  004308                     u11190:
 11245  004308  6E20               	movwf	(??_strncmp+1)^0,c
 11246  00430A  5020               	movf	(??_strncmp+1)^0,w,c
 11247  00430C  5C1F               	subwf	??_strncmp^0,w,c
 11248  00430E  6E19               	movwf	?_strncmp^0,c
 11249  004310  6A1A               	clrf	(?_strncmp+1)^0,c
 11250  004312  A0D8               	btfss	status,0,c
 11251  004314  061A               	decf	(?_strncmp+1)^0,f,c
 11252  004316  0012               	return		;funcret
 11253  004318                     __end_of_strncmp:
 11254                           	callstack 0
 11255                           
 11256 ;; *************** function _strlen *****************
 11257 ;; Defined at:
 11258 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/strlen.c"
 11259 ;; Parameters:    Size  Location     Type
 11260 ;;  s               2   20[COMRAM] PTR const unsigned char 
 11261 ;;		 -> cli_ctx.cmd(128), ?_printf(2), stoa@nuls(7), dbuf(80), 
 11262 ;;		 -> ?_sprintf(2), NULL(0), STR_9(3), STR_8(3), 
 11263 ;;		 -> STR_7(3), cli_ctx(131), STR_2(9), STR_1(12), 
 11264 ;; Auto vars:     Size  Location     Type
 11265 ;;  a               2   22[COMRAM] PTR const unsigned char 
 11266 ;;		 -> cli_ctx.cmd(128), ?_printf(2), stoa@nuls(7), dbuf(80), 
 11267 ;;		 -> ?_sprintf(2), NULL(0), STR_9(3), STR_8(3), 
 11268 ;;		 -> STR_7(3), cli_ctx(131), STR_2(9), STR_1(12), 
 11269 ;; Return value:  Size  Location     Type
 11270 ;;                  2   20[COMRAM] unsigned int 
 11271 ;; Registers used:
 11272 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 11273 ;; Tracked objects:
 11274 ;;		On entry : 0/0
 11275 ;;		On exit  : 0/0
 11276 ;;		Unchanged: 0/0
 11277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11278 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11279 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11281 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11282 ;;Total ram usage:        4 bytes
 11283 ;; Hardware stack levels used: 1
 11284 ;; Hardware stack levels required when called: 4
 11285 ;; This function calls:
 11286 ;;		Nothing
 11287 ;; This function is called by:
 11288 ;;		__cli_interpret_cmd
 11289 ;;		_pad
 11290 ;;		_stoa
 11291 ;; This function uses a non-reentrant model
 11292 ;;
 11293                           
 11294                           	psect	text41
 11295  00567E                     __ptext41:
 11296                           	callstack 0
 11297  00567E                     _strlen:
 11298                           	callstack 19
 11299                           
 11300                           ;incstack = 0
 11301  00567E  C015  F017         	movff	strlen@s,strlen@a
 11302  005682  C016  F018         	movff	strlen@s+1,strlen@a+1
 11303  005686  D002               	goto	l8923
 11304  005688                     l8921:
 11305  005688  4A15               	infsnz	strlen@s^0,f,c
 11306  00568A  2A16               	incf	(strlen@s+1)^0,f,c
 11307  00568C                     l8923:
 11308  00568C  0060  F057  FFF6   	movff	strlen@s,tblptrl
 11309  005692  0060  F05B  FFF7   	movff	strlen@s+1,tblptrh
 11310  005698  0E00               	movlw	low (__smallconst shr (0+16))
 11311  00569A  6EF8               	movwf	tblptru,c
 11312  00569C  0E1F               	movlw	(high __ramtop+-1)
 11313  00569E  64F7               	cpfsgt	tblptrh,c
 11314  0056A0  D003               	bra	u9617
 11315  0056A2  0008               	tblrd		*
 11316  0056A4  50F5               	movf	tablat,w,c
 11317  0056A6  D007               	bra	u9610
 11318  0056A8                     u9617:
 11319  0056A8  006F FFDB FFE1     	movff	tblptrl,fsr1l
 11320  0056AE  006F FFDF FFE2     	movff	tblptrh,fsr1h
 11321  0056B4  50E7               	movf	indf1,w,c
 11322  0056B6                     u9610:
 11323  0056B6  0900               	iorlw	0
 11324  0056B8  A4D8               	btfss	status,2,c
 11325  0056BA  D7E6               	goto	l8921
 11326  0056BC  5017               	movf	strlen@a^0,w,c
 11327  0056BE  5C15               	subwf	strlen@s^0,w,c
 11328  0056C0  6E15               	movwf	?_strlen^0,c
 11329  0056C2  5018               	movf	(strlen@a+1)^0,w,c
 11330  0056C4  5816               	subwfb	(strlen@s+1)^0,w,c
 11331  0056C6  6E16               	movwf	(?_strlen+1)^0,c
 11332  0056C8  0012               	return		;funcret
 11333  0056CA                     __end_of_strlen:
 11334                           	callstack 0
 11335                           
 11336 ;; *************** function _fh_po *****************
 11337 ;; Defined at:
 11338 ;;		line 112 in file "main.c"
 11339 ;; Parameters:    Size  Location     Type
 11340 ;;  a_data          2   43[COMRAM] PTR void 
 11341 ;;		 -> cli_ctx(131), 
 11342 ;; Auto vars:     Size  Location     Type
 11343 ;;		None
 11344 ;; Return value:  Size  Location     Type
 11345 ;;                  1    wreg      void 
 11346 ;; Registers used:
 11347 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11348 ;; Tracked objects:
 11349 ;;		On entry : 3F/0
 11350 ;;		On exit  : 3F/0
 11351 ;;		Unchanged: 0/0
 11352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11353 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11356 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11357 ;;Total ram usage:        2 bytes
 11358 ;; Hardware stack levels used: 1
 11359 ;; Hardware stack levels required when called: 9
 11360 ;; This function calls:
 11361 ;;		_puts
 11362 ;; This function is called by:
 11363 ;;		__cli_interpret_cmd
 11364 ;; This function uses a non-reentrant model
 11365 ;;
 11366                           
 11367                           	psect	text42
 11368  005D2C                     __ptext42:
 11369                           	callstack 0
 11370  005D2C                     _fh_po:
 11371                           	callstack 19
 11372                           
 11373                           ; BSR set to: 0
 11374                           ;main.c: 112: void fh_po(void *a_data);main.c: 113: {;main.c: 114:  puts("\r\n Voltage O
      +                          FF \r\n");
 11375                           
 11376                           ;incstack = 0
 11377  005D2C  0EB7               	movlw	low STR_5
 11378  005D2E  6E29               	movwf	puts@s^0,c
 11379  005D30  5029               	movf	puts@s^0,w,c
 11380  005D32  A4D8               	btfss	status,2,c
 11381  005D34  0E20               	movlw	high __smallconst
 11382  005D36  6E2A               	movwf	(puts@s+1)^0,c
 11383  005D38  ECA8  F02C         	call	_puts	;wreg free
 11384                           
 11385                           ;main.c: 115:  mode = off_mode;
 11386  005D3C  0E00               	movlw	0
 11387  005D3E  0100               	movlb	0	; () banked
 11388  005D40  6FFB               	movwf	_mode& (0+255),b
 11389                           
 11390                           ; BSR set to: 0
 11391  005D42  0012               	return		;funcret
 11392  005D44                     __end_of_fh_po:
 11393                           	callstack 0
 11394                           
 11395 ;; *************** function _fh_pr *****************
 11396 ;; Defined at:
 11397 ;;		line 99 in file "main.c"
 11398 ;; Parameters:    Size  Location     Type
 11399 ;;  a_data          2   43[COMRAM] PTR void 
 11400 ;;		 -> cli_ctx(131), 
 11401 ;; Auto vars:     Size  Location     Type
 11402 ;;		None
 11403 ;; Return value:  Size  Location     Type
 11404 ;;                  1    wreg      void 
 11405 ;; Registers used:
 11406 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11407 ;; Tracked objects:
 11408 ;;		On entry : 3F/0
 11409 ;;		On exit  : 3F/0
 11410 ;;		Unchanged: 0/0
 11411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11412 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11415 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11416 ;;Total ram usage:        2 bytes
 11417 ;; Hardware stack levels used: 1
 11418 ;; Hardware stack levels required when called: 9
 11419 ;; This function calls:
 11420 ;;		_puts
 11421 ;; This function is called by:
 11422 ;;		__cli_interpret_cmd
 11423 ;; This function uses a non-reentrant model
 11424 ;;
 11425                           
 11426                           	psect	text43
 11427  005BD0                     __ptext43:
 11428                           	callstack 0
 11429  005BD0                     _fh_pr:
 11430                           	callstack 19
 11431                           
 11432                           ; BSR set to: 0
 11433                           ;main.c: 99: void fh_pr(void *a_data);main.c: 100: {;main.c: 101:  puts((const char *) a
      +                          _data);
 11434                           
 11435                           ; BSR set to: 0
 11436                           ;incstack = 0
 11437  005BD0  C02C  F029         	movff	fh_pr@a_data,puts@s
 11438  005BD4  C02D  F02A         	movff	fh_pr@a_data+1,puts@s+1
 11439  005BD8  ECA8  F02C         	call	_puts	;wreg free
 11440                           
 11441                           ;main.c: 102:  puts("\r\n Ramp to 1000VDC ON \r\n");
 11442  005BDC  0E71               	movlw	low STR_3
 11443  005BDE  6E29               	movwf	puts@s^0,c
 11444  005BE0  5029               	movf	puts@s^0,w,c
 11445  005BE2  A4D8               	btfss	status,2,c
 11446  005BE4  0E20               	movlw	high __smallconst
 11447  005BE6  6E2A               	movwf	(puts@s+1)^0,c
 11448  005BE8  ECA8  F02C         	call	_puts	;wreg free
 11449                           
 11450                           ;main.c: 103:  mode = roll_mode;
 11451  005BEC  0E01               	movlw	1
 11452  005BEE  0100               	movlb	0	; () banked
 11453  005BF0  6FFB               	movwf	_mode& (0+255),b
 11454                           
 11455                           ; BSR set to: 0
 11456  005BF2  0012               	return		;funcret
 11457  005BF4                     __end_of_fh_pr:
 11458                           	callstack 0
 11459                           
 11460 ;; *************** function _fh_ps *****************
 11461 ;; Defined at:
 11462 ;;		line 106 in file "main.c"
 11463 ;; Parameters:    Size  Location     Type
 11464 ;;  a_data          2   43[COMRAM] PTR void 
 11465 ;;		 -> cli_ctx(131), 
 11466 ;; Auto vars:     Size  Location     Type
 11467 ;;		None
 11468 ;; Return value:  Size  Location     Type
 11469 ;;                  1    wreg      void 
 11470 ;; Registers used:
 11471 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11472 ;; Tracked objects:
 11473 ;;		On entry : 3F/0
 11474 ;;		On exit  : 3F/0
 11475 ;;		Unchanged: 0/0
 11476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11477 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11480 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11481 ;;Total ram usage:        2 bytes
 11482 ;; Hardware stack levels used: 1
 11483 ;; Hardware stack levels required when called: 9
 11484 ;; This function calls:
 11485 ;;		_puts
 11486 ;; This function is called by:
 11487 ;;		__cli_interpret_cmd
 11488 ;; This function uses a non-reentrant model
 11489 ;;
 11490                           
 11491                           	psect	text44
 11492  005D44                     __ptext44:
 11493                           	callstack 0
 11494  005D44                     _fh_ps:
 11495                           	callstack 19
 11496                           
 11497                           ; BSR set to: 0
 11498                           ;main.c: 106: void fh_ps(void *a_data);main.c: 107: {;main.c: 108:  puts("\r\n Steady 10
      +                          00VDC ON \r\n");
 11499                           
 11500                           ; BSR set to: 0
 11501                           ;incstack = 0
 11502  005D44  0E8A               	movlw	low STR_4
 11503  005D46  6E29               	movwf	puts@s^0,c
 11504  005D48  5029               	movf	puts@s^0,w,c
 11505  005D4A  A4D8               	btfss	status,2,c
 11506  005D4C  0E20               	movlw	high __smallconst
 11507  005D4E  6E2A               	movwf	(puts@s+1)^0,c
 11508  005D50  ECA8  F02C         	call	_puts	;wreg free
 11509                           
 11510                           ;main.c: 109:  mode = static_mode;
 11511  005D54  0E02               	movlw	2
 11512  005D56  0100               	movlb	0	; () banked
 11513  005D58  6FFB               	movwf	_mode& (0+255),b
 11514                           
 11515                           ; BSR set to: 0
 11516  005D5A  0012               	return		;funcret
 11517  005D5C                     __end_of_fh_ps:
 11518                           	callstack 0
 11519                           
 11520 ;; *************** function _puts *****************
 11521 ;; Defined at:
 11522 ;;		line 3 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/puts.c"
 11523 ;; Parameters:    Size  Location     Type
 11524 ;;  s               2   40[COMRAM] PTR const unsigned char 
 11525 ;;		 -> cli_ctx.cmd(128), STR_11(3), cli_read@i(1), cmdm(28), 
 11526 ;;		 -> cli_ctx(131), STR_5(18), STR_4(24), STR_3(25), 
 11527 ;; Auto vars:     Size  Location     Type
 11528 ;;  r               2    0        int 
 11529 ;; Return value:  Size  Location     Type
 11530 ;;                  2   40[COMRAM] int 
 11531 ;; Registers used:
 11532 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11533 ;; Tracked objects:
 11534 ;;		On entry : 0/2
 11535 ;;		On exit  : 0/0
 11536 ;;		Unchanged: 0/0
 11537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11538 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11539 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11541 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11542 ;;Total ram usage:        3 bytes
 11543 ;; Hardware stack levels used: 1
 11544 ;; Hardware stack levels required when called: 8
 11545 ;; This function calls:
 11546 ;;		_fputc
 11547 ;;		_fputs
 11548 ;; This function is called by:
 11549 ;;		_fh_pr
 11550 ;;		_fh_ps
 11551 ;;		_fh_po
 11552 ;;		_cli_init
 11553 ;;		_linux_putc
 11554 ;; This function uses a non-reentrant model
 11555 ;;
 11556                           
 11557                           	psect	text45
 11558  005950                     __ptext45:
 11559                           	callstack 0
 11560  005950                     _puts:
 11561                           	callstack 20
 11562                           
 11563                           ; BSR set to: 0
 11564                           ;incstack = 0
 11565  005950  0E01               	movlw	1
 11566  005952  6E2B               	movwf	_puts$3267^0,c
 11567  005954  C029  F020         	movff	puts@s,fputs@s
 11568  005958  C02A  F021         	movff	puts@s+1,fputs@s+1
 11569  00595C  0E00               	movlw	0
 11570  00595E  6E22               	movwf	fputs@fp^0,c
 11571  005960  0E00               	movlw	0
 11572  005962  6E23               	movwf	(fputs@fp+1)^0,c
 11573  005964  EC3A  F02A         	call	_fputs	;wreg free
 11574  005968  BE21               	btfsc	(?_fputs+1)^0,7,c
 11575  00596A  0012               	return	
 11576  00596C  0E00               	movlw	0
 11577  00596E  6E18               	movwf	(fputc@c+1)^0,c
 11578  005970  0E0A               	movlw	10
 11579  005972  6E17               	movwf	fputc@c^0,c
 11580  005974  0E00               	movlw	0
 11581  005976  6E19               	movwf	fputc@fp^0,c
 11582  005978  0E00               	movlw	0
 11583  00597A  6E1A               	movwf	(fputc@fp+1)^0,c
 11584  00597C  EC0F  F027         	call	_fputc	;wreg free
 11585  005980  BE18               	btfsc	(?_fputc+1)^0,7,c
 11586  005982  0012               	return	
 11587  005984  0E00               	movlw	0
 11588  005986  6E2B               	movwf	_puts$3267^0,c
 11589  005988  0012               	return		;funcret
 11590  00598A                     __end_of_puts:
 11591                           	callstack 0
 11592                           
 11593 ;; *************** function _fputs *****************
 11594 ;; Defined at:
 11595 ;;		line 8 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/nf_fputs.c"
 11596 ;; Parameters:    Size  Location     Type
 11597 ;;  s               2   31[COMRAM] PTR const unsigned char 
 11598 ;;		 -> cli_ctx.cmd(128), dbuf(80), STR_11(3), cli_read@i(1), 
 11599 ;;		 -> cmdm(28), cli_ctx(131), STR_5(18), STR_4(24), 
 11600 ;;		 -> STR_3(25), 
 11601 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
 11602 ;;		 -> sprintf@f(11), NULL(0), 
 11603 ;; Auto vars:     Size  Location     Type
 11604 ;;  i               2   38[COMRAM] int 
 11605 ;;  c               1   37[COMRAM] unsigned char 
 11606 ;; Return value:  Size  Location     Type
 11607 ;;                  2   31[COMRAM] int 
 11608 ;; Registers used:
 11609 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11610 ;; Tracked objects:
 11611 ;;		On entry : 0/0
 11612 ;;		On exit  : 0/0
 11613 ;;		Unchanged: 0/0
 11614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11615 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11616 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11617 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11618 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11619 ;;Total ram usage:        9 bytes
 11620 ;; Hardware stack levels used: 1
 11621 ;; Hardware stack levels required when called: 7
 11622 ;; This function calls:
 11623 ;;		_fputc
 11624 ;; This function is called by:
 11625 ;;		_pad
 11626 ;;		_puts
 11627 ;; This function uses a non-reentrant model
 11628 ;;
 11629                           
 11630                           	psect	text46
 11631  005474                     __ptext46:
 11632                           	callstack 0
 11633  005474                     _fputs:
 11634                           	callstack 16
 11635                           
 11636                           ;incstack = 0
 11637  005474  0E00               	movlw	0
 11638  005476  6E28               	movwf	(fputs@i+1)^0,c
 11639  005478  0E00               	movlw	0
 11640  00547A  6E27               	movwf	fputs@i^0,c
 11641  00547C  D00B               	goto	l9137
 11642  00547E                     l9133:
 11643  00547E  C026  F017         	movff	fputs@c,fputc@c
 11644  005482  6A18               	clrf	(fputc@c+1)^0,c
 11645  005484  C022  F019         	movff	fputs@fp,fputc@fp
 11646  005488  C023  F01A         	movff	fputs@fp+1,fputc@fp+1
 11647  00548C  EC0F  F027         	call	_fputc	;wreg free
 11648  005490  4A27               	infsnz	fputs@i^0,f,c
 11649  005492  2A28               	incf	(fputs@i+1)^0,f,c
 11650  005494                     l9137:
 11651  005494  5027               	movf	fputs@i^0,w,c
 11652  005496  2420               	addwf	fputs@s^0,w,c
 11653  005498  6E24               	movwf	??_fputs^0,c
 11654  00549A  5028               	movf	(fputs@i+1)^0,w,c
 11655  00549C  2021               	addwfc	(fputs@s+1)^0,w,c
 11656  00549E  6E25               	movwf	(??_fputs+1)^0,c
 11657  0054A0  0060  F093  FFF6   	movff	??_fputs,tblptrl
 11658  0054A6  0060  F097  FFF7   	movff	??_fputs+1,tblptrh
 11659  0054AC  0E00               	movlw	low (__smallconst shr (0+16))
 11660  0054AE  6EF8               	movwf	tblptru,c
 11661  0054B0  0E1F               	movlw	(high __ramtop+-1)
 11662  0054B2  64F7               	cpfsgt	tblptrh,c
 11663  0054B4  D003               	bra	u10027
 11664  0054B6  0008               	tblrd		*
 11665  0054B8  50F5               	movf	tablat,w,c
 11666  0054BA  D007               	bra	u10020
 11667  0054BC                     u10027:
 11668  0054BC  006F FFDB FFE1     	movff	tblptrl,fsr1l
 11669  0054C2  006F FFDF FFE2     	movff	tblptrh,fsr1h
 11670  0054C8  50E7               	movf	indf1,w,c
 11671  0054CA                     u10020:
 11672  0054CA  6E26               	movwf	fputs@c^0,c
 11673  0054CC  5026               	movf	fputs@c^0,w,c
 11674  0054CE  A4D8               	btfss	status,2,c
 11675  0054D0  D7D6               	goto	l9133
 11676  0054D2  C027  F020         	movff	fputs@i,?_fputs
 11677  0054D6  C028  F021         	movff	fputs@i+1,?_fputs+1
 11678  0054DA  0012               	return		;funcret
 11679  0054DC                     __end_of_fputs:
 11680                           	callstack 0
 11681                           
 11682 ;; *************** function _fputc *****************
 11683 ;; Defined at:
 11684 ;;		line 8 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/nf_fputc.c"
 11685 ;; Parameters:    Size  Location     Type
 11686 ;;  c               2   22[COMRAM] int 
 11687 ;;  fp              2   24[COMRAM] PTR struct _IO_FILE
 11688 ;;		 -> sprintf@f(11), NULL(0), 
 11689 ;; Auto vars:     Size  Location     Type
 11690 ;;		None
 11691 ;; Return value:  Size  Location     Type
 11692 ;;                  2   22[COMRAM] int 
 11693 ;; Registers used:
 11694 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11695 ;; Tracked objects:
 11696 ;;		On entry : 0/0
 11697 ;;		On exit  : 0/0
 11698 ;;		Unchanged: 0/0
 11699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11700 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11702 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11703 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11704 ;;Total ram usage:        9 bytes
 11705 ;; Hardware stack levels used: 1
 11706 ;; Hardware stack levels required when called: 6
 11707 ;; This function calls:
 11708 ;;		_putch
 11709 ;; This function is called by:
 11710 ;;		_pad
 11711 ;;		_stoa
 11712 ;;		_vfpfcnvrt
 11713 ;;		_fputs
 11714 ;;		_puts
 11715 ;; This function uses a non-reentrant model
 11716 ;;
 11717                           
 11718                           	psect	text47
 11719  004E1E                     __ptext47:
 11720                           	callstack 0
 11721  004E1E                     _fputc:
 11722                           	callstack 16
 11723                           
 11724                           ;incstack = 0
 11725  004E1E  5019               	movf	fputc@fp^0,w,c
 11726  004E20  101A               	iorwf	(fputc@fp+1)^0,w,c
 11727  004E22  B4D8               	btfsc	status,2,c
 11728  004E24  D004               	goto	u9580
 11729  004E26  5019               	movf	fputc@fp^0,w,c
 11730  004E28  101A               	iorwf	(fputc@fp+1)^0,w,c
 11731  004E2A  A4D8               	btfss	status,2,c
 11732  004E2C  D004               	goto	l8909
 11733  004E2E                     u9580:
 11734  004E2E  5017               	movf	fputc@c^0,w,c
 11735  004E30  EC29  F02F         	call	_putch
 11736  004E34  D04A               	goto	l8915
 11737  004E36                     l8909:
 11738  004E36  EE20 F009          	lfsr	2,9
 11739  004E3A  5019               	movf	fputc@fp^0,w,c
 11740  004E3C  26D9               	addwf	fsr2l,f,c
 11741  004E3E  501A               	movf	(fputc@fp+1)^0,w,c
 11742  004E40  22DA               	addwfc	fsr2h,f,c
 11743  004E42  50DE               	movf	postinc2,w,c
 11744  004E44  10DE               	iorwf	postinc2,w,c
 11745  004E46  B4D8               	btfsc	status,2,c
 11746  004E48  D016               	goto	u9600
 11747  004E4A  EE20 F009          	lfsr	2,9
 11748  004E4E  5019               	movf	fputc@fp^0,w,c
 11749  004E50  26D9               	addwf	fsr2l,f,c
 11750  004E52  501A               	movf	(fputc@fp+1)^0,w,c
 11751  004E54  22DA               	addwfc	fsr2h,f,c
 11752  004E56  EE10 F003          	lfsr	1,3
 11753  004E5A  5019               	movf	fputc@fp^0,w,c
 11754  004E5C  26E1               	addwf	fsr1l,f,c
 11755  004E5E  501A               	movf	(fputc@fp+1)^0,w,c
 11756  004E60  22E2               	addwfc	fsr1h,f,c
 11757  004E62  50DE               	movf	postinc2,w,c
 11758  004E64  5CE6               	subwf	postinc1,w,c
 11759  004E66  50E6               	movf	postinc1,w,c
 11760  004E68  0A80               	xorlw	128
 11761  004E6A  6E1F               	movwf	(??_fputc+4)^0,c
 11762  004E6C  50DE               	movf	postinc2,w,c
 11763  004E6E  0A80               	xorlw	128
 11764  004E70  581F               	subwfb	(??_fputc+4)^0,w,c
 11765  004E72  B0D8               	btfsc	status,0,c
 11766  004E74  D02A               	goto	l8915
 11767  004E76                     u9600:
 11768  004E76  EE20 F003          	lfsr	2,3
 11769  004E7A  5019               	movf	fputc@fp^0,w,c
 11770  004E7C  26D9               	addwf	fsr2l,f,c
 11771  004E7E  501A               	movf	(fputc@fp+1)^0,w,c
 11772  004E80  22DA               	addwfc	fsr2h,f,c
 11773  004E82  006F FF78  F01B    	movff	postinc2,??_fputc
 11774  004E88  006F FF74  F01C    	movff	postdec2,??_fputc+1
 11775  004E8E  0060  F067  FFD9   	movff	fputc@fp,fsr2l
 11776  004E94  0060  F06B  FFDA   	movff	fputc@fp+1,fsr2h
 11777  004E9A  006F FF78  F01D    	movff	postinc2,??_fputc+2
 11778  004EA0  006F FF74  F01E    	movff	postdec2,??_fputc+3
 11779  004EA6  501B               	movf	??_fputc^0,w,c
 11780  004EA8  241D               	addwf	(??_fputc+2)^0,w,c
 11781  004EAA  6ED9               	movwf	fsr2l,c
 11782  004EAC  501C               	movf	(??_fputc+1)^0,w,c
 11783  004EAE  201E               	addwfc	(??_fputc+3)^0,w,c
 11784  004EB0  6EDA               	movwf	fsr2h,c
 11785  004EB2  0060  F05F  FFDF   	movff	fputc@c,indf2
 11786  004EB8  EE20 F003          	lfsr	2,3
 11787  004EBC  5019               	movf	fputc@fp^0,w,c
 11788  004EBE  26D9               	addwf	fsr2l,f,c
 11789  004EC0  501A               	movf	(fputc@fp+1)^0,w,c
 11790  004EC2  22DA               	addwfc	fsr2h,f,c
 11791  004EC4  2ADE               	incf	postinc2,f,c
 11792  004EC6  0E00               	movlw	0
 11793  004EC8  22DD               	addwfc	postdec2,f,c
 11794  004ECA                     l8915:
 11795  004ECA  C017  F017         	movff	fputc@c,?_fputc
 11796  004ECE  6A18               	clrf	(?_fputc+1)^0,c
 11797  004ED0  0012               	return		;funcret
 11798  004ED2                     __end_of_fputc:
 11799                           	callstack 0
 11800                           
 11801 ;; *************** function _putch *****************
 11802 ;; Defined at:
 11803 ;;		line 230 in file "mcc_generated_files/uart1.c"
 11804 ;; Parameters:    Size  Location     Type
 11805 ;;  txData          1    wreg     unsigned char 
 11806 ;; Auto vars:     Size  Location     Type
 11807 ;;  txData          1   21[COMRAM] unsigned char 
 11808 ;; Return value:  Size  Location     Type
 11809 ;;                  1    wreg      void 
 11810 ;; Registers used:
 11811 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11812 ;; Tracked objects:
 11813 ;;		On entry : 0/0
 11814 ;;		On exit  : 3F/39
 11815 ;;		Unchanged: 0/0
 11816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11818 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11820 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11821 ;;Total ram usage:        1 bytes
 11822 ;; Hardware stack levels used: 1
 11823 ;; Hardware stack levels required when called: 5
 11824 ;; This function calls:
 11825 ;;		_UART1_Write
 11826 ;; This function is called by:
 11827 ;;		_fputc
 11828 ;; This function uses a non-reentrant model
 11829 ;;
 11830                           
 11831                           	psect	text48
 11832  005E52                     __ptext48:
 11833                           	callstack 0
 11834  005E52                     _putch:
 11835                           	callstack 16
 11836                           
 11837                           ;incstack = 0
 11838                           ;putch@txData stored from wreg
 11839  005E52  6E16               	movwf	putch@txData^0,c
 11840                           
 11841                           ;mcc_generated_files/uart1.c: 230: void putch(char txData);mcc_generated_files/uart1.c: 
      +                          231: {;mcc_generated_files/uart1.c: 232:     UART1_Write(txData);
 11842  005E54  5016               	movf	putch@txData^0,w,c
 11843  005E56  EC6D  F02C         	call	_UART1_Write
 11844                           
 11845                           ; BSR set to: 57
 11846  005E5A  0012               	return		;funcret
 11847  005E5C                     __end_of_putch:
 11848                           	callstack 0
 11849                           
 11850 ;; *************** function _UART1_Write *****************
 11851 ;; Defined at:
 11852 ;;		line 202 in file "mcc_generated_files/uart1.c"
 11853 ;; Parameters:    Size  Location     Type
 11854 ;;  txData          1    wreg     unsigned char 
 11855 ;; Auto vars:     Size  Location     Type
 11856 ;;  txData          1   20[COMRAM] unsigned char 
 11857 ;; Return value:  Size  Location     Type
 11858 ;;                  1    wreg      void 
 11859 ;; Registers used:
 11860 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11861 ;; Tracked objects:
 11862 ;;		On entry : 0/0
 11863 ;;		On exit  : 3F/39
 11864 ;;		Unchanged: 0/0
 11865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11867 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11869 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11870 ;;Total ram usage:        1 bytes
 11871 ;; Hardware stack levels used: 1
 11872 ;; Hardware stack levels required when called: 4
 11873 ;; This function calls:
 11874 ;;		Nothing
 11875 ;; This function is called by:
 11876 ;;		_putch
 11877 ;; This function uses a non-reentrant model
 11878 ;;
 11879                           
 11880                           	psect	text49
 11881  0058DA                     __ptext49:
 11882                           	callstack 0
 11883  0058DA                     _UART1_Write:
 11884                           	callstack 16
 11885                           
 11886                           ; BSR set to: 57
 11887                           ;incstack = 0
 11888                           ;UART1_Write@txData stored from wreg
 11889  0058DA  6E15               	movwf	UART1_Write@txData^0,c
 11890  0058DC                     
 11891                           ;mcc_generated_files/uart1.c: 204:     while(0 == uart1TxBufferRemaining)
 11892                           
 11893                           ;mcc_generated_files/uart1.c: 202: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 203: {;mcc_generated_files/uart1.c: 204:     while(0 == uart1TxBufferRemaining)
 11894  0058DC  5049               	movf	_uart1TxBufferRemaining^0,w,c	;volatile
 11895  0058DE  B4D8               	btfsc	status,2,c
 11896  0058E0  D7FD               	goto	l8883
 11897                           
 11898                           ;mcc_generated_files/uart1.c: 208:     if(0 == PIE3bits.U1TXIE)
 11899  0058E2  0139               	movlb	57	; () banked
 11900  0058E4  B993               	btfsc	147,4,b	;volatile
 11901  0058E6  D004               	goto	l626
 11902                           
 11903                           ; BSR set to: 57
 11904                           ;mcc_generated_files/uart1.c: 209:     {;mcc_generated_files/uart1.c: 210:         U1TXB
      +                           = txData;
 11905  0058E8  0060  F057  FDEA   	movff	UART1_Write@txData,15850	;volatile
 11906                           
 11907                           ;mcc_generated_files/uart1.c: 211:     }
 11908  0058EE  D011               	goto	l8899
 11909  0058F0                     l626:
 11910                           
 11911                           ; BSR set to: 57
 11912                           ;mcc_generated_files/uart1.c: 213:     {;mcc_generated_files/uart1.c: 214:         PIE3b
      +                          its.U1TXIE = 0;
 11913  0058F0  9993               	bcf	147,4,b	;volatile
 11914                           
 11915                           ; BSR set to: 57
 11916                           ;mcc_generated_files/uart1.c: 215:         uart1TxBuffer[uart1TxHead++] = txData;
 11917  0058F2  0E40               	movlw	low _uart1TxBuffer
 11918  0058F4  244B               	addwf	_uart1TxHead^0,w,c	;volatile
 11919  0058F6  6ED9               	movwf	fsr2l,c
 11920  0058F8  6ADA               	clrf	fsr2h,c
 11921  0058FA  0E01               	movlw	high _uart1TxBuffer
 11922  0058FC  22DA               	addwfc	fsr2h,f,c
 11923  0058FE  0060  F057  FFDF   	movff	UART1_Write@txData,indf2
 11924                           
 11925                           ; BSR set to: 57
 11926  005904  2A4B               	incf	_uart1TxHead^0,f,c	;volatile
 11927                           
 11928                           ; BSR set to: 57
 11929                           ;mcc_generated_files/uart1.c: 216:         if(sizeof(uart1TxBuffer) <= uart1TxHead)
 11930  005906  0E3F               	movlw	63
 11931  005908  644B               	cpfsgt	_uart1TxHead^0,c
 11932  00590A  D002               	goto	l8897
 11933                           
 11934                           ; BSR set to: 57
 11935                           ;mcc_generated_files/uart1.c: 217:         {;mcc_generated_files/uart1.c: 218:          
      +                             uart1TxHead = 0;
 11936  00590C  0E00               	movlw	0
 11937  00590E  6E4B               	movwf	_uart1TxHead^0,c	;volatile
 11938  005910                     l8897:
 11939                           
 11940                           ; BSR set to: 57
 11941                           ;mcc_generated_files/uart1.c: 220:         uart1TxBufferRemaining--;
 11942  005910  0649               	decf	_uart1TxBufferRemaining^0,f,c	;volatile
 11943  005912                     l8899:
 11944                           
 11945                           ; BSR set to: 57
 11946                           ;mcc_generated_files/uart1.c: 222:     PIE3bits.U1TXIE = 1;
 11947  005912  8993               	bsf	147,4,b	;volatile
 11948                           
 11949                           ; BSR set to: 57
 11950  005914  0012               	return		;funcret
 11951  005916                     __end_of_UART1_Write:
 11952                           	callstack 0
 11953                           
 11954 ;; *************** function ___xxtofl *****************
 11955 ;; Defined at:
 11956 ;;		line 10 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/xxtofl.c"
 11957 ;; Parameters:    Size  Location     Type
 11958 ;;  sign            1    wreg     unsigned char 
 11959 ;;  val             4   20[COMRAM] long 
 11960 ;; Auto vars:     Size  Location     Type
 11961 ;;  sign            1   28[COMRAM] unsigned char 
 11962 ;;  arg             4   30[COMRAM] unsigned long 
 11963 ;;  exp             1   29[COMRAM] unsigned char 
 11964 ;; Return value:  Size  Location     Type
 11965 ;;                  4   20[COMRAM] unsigned char 
 11966 ;; Registers used:
 11967 ;;		wreg, status,2, status,0
 11968 ;; Tracked objects:
 11969 ;;		On entry : 3F/0
 11970 ;;		On exit  : 0/0
 11971 ;;		Unchanged: 0/0
 11972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11973 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11974 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11975 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11976 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11977 ;;Total ram usage:       14 bytes
 11978 ;; Hardware stack levels used: 1
 11979 ;; Hardware stack levels required when called: 4
 11980 ;; This function calls:
 11981 ;;		Nothing
 11982 ;; This function is called by:
 11983 ;;		_main
 11984 ;; This function uses a non-reentrant model
 11985 ;;
 11986                           
 11987                           	psect	text50
 11988  004702                     __ptext50:
 11989                           	callstack 0
 11990  004702                     ___xxtofl:
 11991                           	callstack 26
 11992                           
 11993                           ; BSR set to: 57
 11994                           ;incstack = 0
 11995                           ;___xxtofl@sign stored from wreg
 11996  004702  6E1D               	movwf	___xxtofl@sign^0,c
 11997  004704  501D               	movf	___xxtofl@sign^0,w,c
 11998  004706  A4D8               	btfss	status,2,c
 11999  004708  AE18               	btfss	(___xxtofl@val+3)^0,7,c
 12000  00470A  D01A               	goto	l1903
 12001  00470C  C015  F019         	movff	___xxtofl@val,??___xxtofl
 12002  004710  C016  F01A         	movff	___xxtofl@val+1,??___xxtofl+1
 12003  004714  C017  F01B         	movff	___xxtofl@val+2,??___xxtofl+2
 12004  004718  C018  F01C         	movff	___xxtofl@val+3,??___xxtofl+3
 12005  00471C  1E19               	comf	??___xxtofl^0,f,c
 12006  00471E  1E1A               	comf	(??___xxtofl+1)^0,f,c
 12007  004720  1E1B               	comf	(??___xxtofl+2)^0,f,c
 12008  004722  1E1C               	comf	(??___xxtofl+3)^0,f,c
 12009  004724  2A19               	incf	??___xxtofl^0,f,c
 12010  004726  0E00               	movlw	0
 12011  004728  221A               	addwfc	(??___xxtofl+1)^0,f,c
 12012  00472A  221B               	addwfc	(??___xxtofl+2)^0,f,c
 12013  00472C  221C               	addwfc	(??___xxtofl+3)^0,f,c
 12014  00472E  C019  F01F         	movff	??___xxtofl,___xxtofl@arg
 12015  004732  C01A  F020         	movff	??___xxtofl+1,___xxtofl@arg+1
 12016  004736  C01B  F021         	movff	??___xxtofl+2,___xxtofl@arg+2
 12017  00473A  C01C  F022         	movff	??___xxtofl+3,___xxtofl@arg+3
 12018  00473E  D008               	goto	l10731
 12019  004740                     l1903:
 12020  004740  C015  F01F         	movff	___xxtofl@val,___xxtofl@arg
 12021  004744  C016  F020         	movff	___xxtofl@val+1,___xxtofl@arg+1
 12022  004748  C017  F021         	movff	___xxtofl@val+2,___xxtofl@arg+2
 12023  00474C  C018  F022         	movff	___xxtofl@val+3,___xxtofl@arg+3
 12024  004750                     l10731:
 12025  004750  5015               	movf	___xxtofl@val^0,w,c
 12026  004752  1016               	iorwf	(___xxtofl@val+1)^0,w,c
 12027  004754  1017               	iorwf	(___xxtofl@val+2)^0,w,c
 12028  004756  1018               	iorwf	(___xxtofl@val+3)^0,w,c
 12029  004758  A4D8               	btfss	status,2,c
 12030  00475A  D009               	goto	l10737
 12031  00475C  0E00               	movlw	0
 12032  00475E  6E15               	movwf	?___xxtofl^0,c
 12033  004760  0E00               	movlw	0
 12034  004762  6E16               	movwf	(?___xxtofl+1)^0,c
 12035  004764  0E00               	movlw	0
 12036  004766  6E17               	movwf	(?___xxtofl+2)^0,c
 12037  004768  0E00               	movlw	0
 12038  00476A  6E18               	movwf	(?___xxtofl+3)^0,c
 12039  00476C  0012               	return	
 12040  00476E                     l10737:
 12041  00476E  0E96               	movlw	150
 12042  004770  6E1E               	movwf	___xxtofl@exp^0,c
 12043  004772  D006               	goto	l10741
 12044  004774                     l10739:
 12045  004774  2A1E               	incf	___xxtofl@exp^0,f,c
 12046  004776  90D8               	bcf	status,0,c
 12047  004778  3222               	rrcf	(___xxtofl@arg+3)^0,f,c
 12048  00477A  3221               	rrcf	(___xxtofl@arg+2)^0,f,c
 12049  00477C  3220               	rrcf	(___xxtofl@arg+1)^0,f,c
 12050  00477E  321F               	rrcf	___xxtofl@arg^0,f,c
 12051  004780                     l10741:
 12052  004780  0E00               	movlw	0
 12053  004782  141F               	andwf	___xxtofl@arg^0,w,c
 12054  004784  6E19               	movwf	??___xxtofl^0,c
 12055  004786  0E00               	movlw	0
 12056  004788  1420               	andwf	(___xxtofl@arg+1)^0,w,c
 12057  00478A  6E1A               	movwf	(??___xxtofl+1)^0,c
 12058  00478C  0E00               	movlw	0
 12059  00478E  1421               	andwf	(___xxtofl@arg+2)^0,w,c
 12060  004790  6E1B               	movwf	(??___xxtofl+2)^0,c
 12061  004792  0EFE               	movlw	254
 12062  004794  1422               	andwf	(___xxtofl@arg+3)^0,w,c
 12063  004796  6E1C               	movwf	(??___xxtofl+3)^0,c
 12064  004798  5019               	movf	??___xxtofl^0,w,c
 12065  00479A  101A               	iorwf	(??___xxtofl+1)^0,w,c
 12066  00479C  101B               	iorwf	(??___xxtofl+2)^0,w,c
 12067  00479E  101C               	iorwf	(??___xxtofl+3)^0,w,c
 12068  0047A0  B4D8               	btfsc	status,2,c
 12069  0047A2  D00D               	goto	l1910
 12070  0047A4  D7E7               	goto	l10739
 12071  0047A6                     l10743:
 12072  0047A6  2A1E               	incf	___xxtofl@exp^0,f,c
 12073  0047A8  0E01               	movlw	1
 12074  0047AA  261F               	addwf	___xxtofl@arg^0,f,c
 12075  0047AC  0E00               	movlw	0
 12076  0047AE  2220               	addwfc	(___xxtofl@arg+1)^0,f,c
 12077  0047B0  2221               	addwfc	(___xxtofl@arg+2)^0,f,c
 12078  0047B2  2222               	addwfc	(___xxtofl@arg+3)^0,f,c
 12079  0047B4  90D8               	bcf	status,0,c
 12080  0047B6  3222               	rrcf	(___xxtofl@arg+3)^0,f,c
 12081  0047B8  3221               	rrcf	(___xxtofl@arg+2)^0,f,c
 12082  0047BA  3220               	rrcf	(___xxtofl@arg+1)^0,f,c
 12083  0047BC  321F               	rrcf	___xxtofl@arg^0,f,c
 12084  0047BE                     l1910:
 12085  0047BE  0E00               	movlw	0
 12086  0047C0  141F               	andwf	___xxtofl@arg^0,w,c
 12087  0047C2  6E19               	movwf	??___xxtofl^0,c
 12088  0047C4  0E00               	movlw	0
 12089  0047C6  1420               	andwf	(___xxtofl@arg+1)^0,w,c
 12090  0047C8  6E1A               	movwf	(??___xxtofl+1)^0,c
 12091  0047CA  0E00               	movlw	0
 12092  0047CC  1421               	andwf	(___xxtofl@arg+2)^0,w,c
 12093  0047CE  6E1B               	movwf	(??___xxtofl+2)^0,c
 12094  0047D0  0EFF               	movlw	255
 12095  0047D2  1422               	andwf	(___xxtofl@arg+3)^0,w,c
 12096  0047D4  6E1C               	movwf	(??___xxtofl+3)^0,c
 12097  0047D6  5019               	movf	??___xxtofl^0,w,c
 12098  0047D8  101A               	iorwf	(??___xxtofl+1)^0,w,c
 12099  0047DA  101B               	iorwf	(??___xxtofl+2)^0,w,c
 12100  0047DC  101C               	iorwf	(??___xxtofl+3)^0,w,c
 12101  0047DE  B4D8               	btfsc	status,2,c
 12102  0047E0  D007               	goto	l10751
 12103  0047E2  D7E1               	goto	l10743
 12104  0047E4                     l10749:
 12105  0047E4  061E               	decf	___xxtofl@exp^0,f,c
 12106  0047E6  90D8               	bcf	status,0,c
 12107  0047E8  361F               	rlcf	___xxtofl@arg^0,f,c
 12108  0047EA  3620               	rlcf	(___xxtofl@arg+1)^0,f,c
 12109  0047EC  3621               	rlcf	(___xxtofl@arg+2)^0,f,c
 12110  0047EE  3622               	rlcf	(___xxtofl@arg+3)^0,f,c
 12111  0047F0                     l10751:
 12112  0047F0  BE21               	btfsc	(___xxtofl@arg+2)^0,7,c
 12113  0047F2  D003               	goto	u12400
 12114  0047F4  0E02               	movlw	2
 12115  0047F6  601E               	cpfslt	___xxtofl@exp^0,c
 12116  0047F8  D7F5               	goto	l10749
 12117  0047FA                     u12400:
 12118  0047FA  A01E               	btfss	___xxtofl@exp^0,0,c
 12119  0047FC  9E21               	bcf	(___xxtofl@arg+2)^0,7,c
 12120  0047FE  90D8               	bcf	status,0,c
 12121  004800  321E               	rrcf	___xxtofl@exp^0,f,c
 12122  004802  C01E  F019         	movff	___xxtofl@exp,??___xxtofl
 12123  004806  6A1A               	clrf	(??___xxtofl+1)^0,c
 12124  004808  6A1B               	clrf	(??___xxtofl+2)^0,c
 12125  00480A  6A1C               	clrf	(??___xxtofl+3)^0,c
 12126  00480C  C019  F01C         	movff	??___xxtofl,??___xxtofl+3
 12127  004810  6A1B               	clrf	(??___xxtofl+2)^0,c
 12128  004812  6A1A               	clrf	(??___xxtofl+1)^0,c
 12129  004814  6A19               	clrf	??___xxtofl^0,c
 12130  004816  5019               	movf	??___xxtofl^0,w,c
 12131  004818  121F               	iorwf	___xxtofl@arg^0,f,c
 12132  00481A  501A               	movf	(??___xxtofl+1)^0,w,c
 12133  00481C  1220               	iorwf	(___xxtofl@arg+1)^0,f,c
 12134  00481E  501B               	movf	(??___xxtofl+2)^0,w,c
 12135  004820  1221               	iorwf	(___xxtofl@arg+2)^0,f,c
 12136  004822  501C               	movf	(??___xxtofl+3)^0,w,c
 12137  004824  1222               	iorwf	(___xxtofl@arg+3)^0,f,c
 12138  004826  501D               	movf	___xxtofl@sign^0,w,c
 12139  004828  A4D8               	btfss	status,2,c
 12140  00482A  AE18               	btfss	(___xxtofl@val+3)^0,7,c
 12141  00482C  D001               	goto	l10767
 12142  00482E  8E22               	bsf	(___xxtofl@arg+3)^0,7,c
 12143  004830                     l10767:
 12144  004830  C01F  F015         	movff	___xxtofl@arg,?___xxtofl
 12145  004834  C020  F016         	movff	___xxtofl@arg+1,?___xxtofl+1
 12146  004838  C021  F017         	movff	___xxtofl@arg+2,?___xxtofl+2
 12147  00483C  C022  F018         	movff	___xxtofl@arg+3,?___xxtofl+3
 12148  004840  0012               	return		;funcret
 12149  004842                     __end_of___xxtofl:
 12150                           	callstack 0
 12151                           
 12152 ;; *************** function _SYSTEM_Initialize *****************
 12153 ;; Defined at:
 12154 ;;		line 50 in file "mcc_generated_files/mcc.c"
 12155 ;; Parameters:    Size  Location     Type
 12156 ;;		None
 12157 ;; Auto vars:     Size  Location     Type
 12158 ;;		None
 12159 ;; Return value:  Size  Location     Type
 12160 ;;                  1    wreg      void 
 12161 ;; Registers used:
 12162 ;;		wreg, status,2, status,0, cstack
 12163 ;; Tracked objects:
 12164 ;;		On entry : 3F/0
 12165 ;;		On exit  : 3F/3D
 12166 ;;		Unchanged: 0/0
 12167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12172 ;;Total ram usage:        0 bytes
 12173 ;; Hardware stack levels used: 1
 12174 ;; Hardware stack levels required when called: 6
 12175 ;; This function calls:
 12176 ;;		_ADCC_Initialize
 12177 ;;		_DAC1_Initialize
 12178 ;;		_INTERRUPT_Initialize
 12179 ;;		_OSCILLATOR_Initialize
 12180 ;;		_PIN_MANAGER_Initialize
 12181 ;;		_PMD_Initialize
 12182 ;;		_PWM5_Initialize
 12183 ;;		_PWM6_Initialize
 12184 ;;		_SPI1_Initialize
 12185 ;;		_TMR2_Initialize
 12186 ;;		_TMR5_Initialize
 12187 ;;		_TMR6_Initialize
 12188 ;;		_UART1_Initialize
 12189 ;; This function is called by:
 12190 ;;		_main
 12191 ;; This function uses a non-reentrant model
 12192 ;;
 12193                           
 12194                           	psect	text51
 12195  0059FE                     __ptext51:
 12196                           	callstack 0
 12197  0059FE                     _SYSTEM_Initialize:
 12198                           	callstack 24
 12199                           
 12200                           ; BSR set to: 0
 12201                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 12202                           
 12203                           ;incstack = 0
 12204  0059FE  ECAC  F02B         	call	_INTERRUPT_Initialize	;wreg free
 12205                           
 12206                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 12207  005A02  EC2F  F02E         	call	_PMD_Initialize	;wreg free
 12208                           
 12209                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 12210  005A06  EC89  F025         	call	_PIN_MANAGER_Initialize	;wreg free
 12211                           
 12212                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 12213  005A0A  EC6F  F02E         	call	_OSCILLATOR_Initialize	;wreg free
 12214                           
 12215                           ;mcc_generated_files/mcc.c: 56:     PWM6_Initialize();
 12216  005A0E  ECAE  F02E         	call	_PWM6_Initialize	;wreg free
 12217                           
 12218                           ; BSR set to: 63
 12219                           ;mcc_generated_files/mcc.c: 57:     TMR6_Initialize();
 12220  005A12  EC93  F02D         	call	_TMR6_Initialize	;wreg free
 12221                           
 12222                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 12223  005A16  ECC9  F029         	call	_ADCC_Initialize	;wreg free
 12224                           
 12225                           ;mcc_generated_files/mcc.c: 59:     DAC1_Initialize();
 12226  005A1A  EC23  F02F         	call	_DAC1_Initialize	;wreg free
 12227                           
 12228                           ;mcc_generated_files/mcc.c: 60:     PWM5_Initialize();
 12229  005A1E  ECBA  F02E         	call	_PWM5_Initialize	;wreg free
 12230                           
 12231                           ; BSR set to: 63
 12232                           ;mcc_generated_files/mcc.c: 61:     TMR5_Initialize();
 12233  005A22  EC65  F02B         	call	_TMR5_Initialize	;wreg free
 12234                           
 12235                           ;mcc_generated_files/mcc.c: 62:     TMR2_Initialize();
 12236  005A26  EC51  F02E         	call	_TMR2_Initialize	;wreg free
 12237                           
 12238                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 12239  005A2A  EC69  F027         	call	_UART1_Initialize	;wreg free
 12240                           
 12241                           ; BSR set to: 57
 12242                           ;mcc_generated_files/mcc.c: 64:     SPI1_Initialize();
 12243  005A2E  EC7D  F02E         	call	_SPI1_Initialize	;wreg free
 12244                           
 12245                           ; BSR set to: 61
 12246  005A32  0012               	return		;funcret
 12247  005A34                     __end_of_SYSTEM_Initialize:
 12248                           	callstack 0
 12249                           
 12250 ;; *************** function _UART1_Initialize *****************
 12251 ;; Defined at:
 12252 ;;		line 87 in file "mcc_generated_files/uart1.c"
 12253 ;; Parameters:    Size  Location     Type
 12254 ;;		None
 12255 ;; Auto vars:     Size  Location     Type
 12256 ;;		None
 12257 ;; Return value:  Size  Location     Type
 12258 ;;                  1    wreg      void 
 12259 ;; Registers used:
 12260 ;;		wreg, status,2, status,0, cstack
 12261 ;; Tracked objects:
 12262 ;;		On entry : 3F/39
 12263 ;;		On exit  : 3F/39
 12264 ;;		Unchanged: 0/0
 12265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12270 ;;Total ram usage:        0 bytes
 12271 ;; Hardware stack levels used: 1
 12272 ;; Hardware stack levels required when called: 5
 12273 ;; This function calls:
 12274 ;;		_UART1_SetErrorHandler
 12275 ;;		_UART1_SetFramingErrorHandler
 12276 ;;		_UART1_SetOverrunErrorHandler
 12277 ;;		_UART1_SetRxInterruptHandler
 12278 ;;		_UART1_SetTxInterruptHandler
 12279 ;; This function is called by:
 12280 ;;		_SYSTEM_Initialize
 12281 ;; This function uses a non-reentrant model
 12282 ;;
 12283                           
 12284                           	psect	text52
 12285  004ED2                     __ptext52:
 12286                           	callstack 0
 12287  004ED2                     _UART1_Initialize:
 12288                           	callstack 24
 12289                           
 12290                           ; BSR set to: 57
 12291                           ;mcc_generated_files/uart1.c: 90:     PIE3bits.U1RXIE = 0;
 12292                           
 12293                           ; BSR set to: 61
 12294                           ;incstack = 0
 12295  004ED2  9793               	bcf	147,3,b	;volatile
 12296                           
 12297                           ; BSR set to: 57
 12298                           ;mcc_generated_files/uart1.c: 91:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 12299  004ED4  0E34               	movlw	low _UART1_Receive_ISR
 12300  004ED6  6E15               	movwf	UART1_SetRxInterruptHandler@InterruptHandler^0,c
 12301  004ED8  0E50               	movlw	high _UART1_Receive_ISR
 12302  004EDA  6E16               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)^0,c
 12303  004EDC  0E00               	movlw	low (_UART1_Receive_ISR shr (0+16))
 12304  004EDE  6E17               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+2)^0,c
 12305  004EE0  ECF2  F02E         	call	_UART1_SetRxInterruptHandler	;wreg free
 12306                           
 12307                           ; BSR set to: 57
 12308                           ;mcc_generated_files/uart1.c: 92:     PIE3bits.U1TXIE = 0;
 12309  004EE4  9993               	bcf	147,4,b	;volatile
 12310                           
 12311                           ;mcc_generated_files/uart1.c: 93:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 12312  004EE6  0E54               	movlw	low _UART1_Transmit_ISR
 12313  004EE8  6E15               	movwf	UART1_SetTxInterruptHandler@InterruptHandler^0,c
 12314  004EEA  0E5B               	movlw	high _UART1_Transmit_ISR
 12315  004EEC  6E16               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)^0,c
 12316  004EEE  0E00               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 12317  004EF0  6E17               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+2)^0,c
 12318  004EF2  ECEB  F02E         	call	_UART1_SetTxInterruptHandler	;wreg free
 12319                           
 12320                           ; BSR set to: 57
 12321                           ;mcc_generated_files/uart1.c: 98:     U1P1L = 0x00;
 12322  004EF6  0E00               	movlw	0
 12323  004EF8  013D               	movlb	61	; () banked
 12324  004EFA  6FEC               	movwf	236,b	;volatile
 12325                           
 12326                           ; BSR set to: 61
 12327                           ;mcc_generated_files/uart1.c: 101:     U1P1H = 0x00;
 12328  004EFC  0E00               	movlw	0
 12329  004EFE  6FED               	movwf	237,b	;volatile
 12330                           
 12331                           ; BSR set to: 61
 12332                           ;mcc_generated_files/uart1.c: 104:     U1P2L = 0x00;
 12333  004F00  0E00               	movlw	0
 12334  004F02  6FEE               	movwf	238,b	;volatile
 12335                           
 12336                           ; BSR set to: 61
 12337                           ;mcc_generated_files/uart1.c: 107:     U1P2H = 0x00;
 12338  004F04  0E00               	movlw	0
 12339  004F06  6FEF               	movwf	239,b	;volatile
 12340                           
 12341                           ; BSR set to: 61
 12342                           ;mcc_generated_files/uart1.c: 110:     U1P3L = 0x00;
 12343  004F08  0E00               	movlw	0
 12344  004F0A  6FF0               	movwf	240,b	;volatile
 12345                           
 12346                           ; BSR set to: 61
 12347                           ;mcc_generated_files/uart1.c: 113:     U1P3H = 0x00;
 12348  004F0C  0E00               	movlw	0
 12349  004F0E  6FF1               	movwf	241,b	;volatile
 12350                           
 12351                           ; BSR set to: 61
 12352                           ;mcc_generated_files/uart1.c: 116:     U1CON0 = 0xB0;
 12353  004F10  0EB0               	movlw	176
 12354  004F12  6FF2               	movwf	242,b	;volatile
 12355                           
 12356                           ; BSR set to: 61
 12357                           ;mcc_generated_files/uart1.c: 119:     U1CON1 = 0x80;
 12358  004F14  0E80               	movlw	128
 12359  004F16  6FF3               	movwf	243,b	;volatile
 12360                           
 12361                           ; BSR set to: 61
 12362                           ;mcc_generated_files/uart1.c: 122:     U1CON2 = 0x00;
 12363  004F18  0E00               	movlw	0
 12364  004F1A  6FF4               	movwf	244,b	;volatile
 12365                           
 12366                           ; BSR set to: 61
 12367                           ;mcc_generated_files/uart1.c: 125:     U1BRGL = 0x8A;
 12368  004F1C  0E8A               	movlw	138
 12369  004F1E  6FF5               	movwf	245,b	;volatile
 12370                           
 12371                           ; BSR set to: 61
 12372                           ;mcc_generated_files/uart1.c: 128:     U1BRGH = 0x00;
 12373  004F20  0E00               	movlw	0
 12374  004F22  6FF6               	movwf	246,b	;volatile
 12375                           
 12376                           ; BSR set to: 61
 12377                           ;mcc_generated_files/uart1.c: 131:     U1FIFO = 0x00;
 12378  004F24  0E00               	movlw	0
 12379  004F26  6FF7               	movwf	247,b	;volatile
 12380                           
 12381                           ; BSR set to: 61
 12382                           ;mcc_generated_files/uart1.c: 134:     U1UIR = 0x00;
 12383  004F28  0E00               	movlw	0
 12384  004F2A  6FF8               	movwf	248,b	;volatile
 12385                           
 12386                           ; BSR set to: 61
 12387                           ;mcc_generated_files/uart1.c: 137:     U1ERRIR = 0x00;
 12388  004F2C  0E00               	movlw	0
 12389  004F2E  6FF9               	movwf	249,b	;volatile
 12390                           
 12391                           ; BSR set to: 61
 12392                           ;mcc_generated_files/uart1.c: 140:     U1ERRIE = 0x00;
 12393  004F30  0E00               	movlw	0
 12394  004F32  6FFA               	movwf	250,b	;volatile
 12395                           
 12396                           ; BSR set to: 61
 12397                           ;mcc_generated_files/uart1.c: 143:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
 12398  004F34  0E7C               	movlw	low _UART1_DefaultFramingErrorHandler
 12399  004F36  6E15               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
 12400  004F38  0E5E               	movlw	high _UART1_DefaultFramingErrorHandler
 12401  004F3A  6E16               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
 12402  004F3C  0E00               	movlw	low (_UART1_DefaultFramingErrorHandler shr (0+16))
 12403  004F3E  6E17               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+2)^0,c
 12404  004F40  EC00  F02F         	call	_UART1_SetFramingErrorHandler	;wreg free
 12405                           
 12406                           ; BSR set to: 61
 12407                           ;mcc_generated_files/uart1.c: 144:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
 12408  004F44  0E7A               	movlw	low _UART1_DefaultOverrunErrorHandler
 12409  004F46  6E15               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
 12410  004F48  0E5E               	movlw	high _UART1_DefaultOverrunErrorHandler
 12411  004F4A  6E16               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
 12412  004F4C  0E00               	movlw	low (_UART1_DefaultOverrunErrorHandler shr (0+16))
 12413  004F4E  6E17               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+2)^0,c
 12414  004F50  ECF9  F02E         	call	_UART1_SetOverrunErrorHandler	;wreg free
 12415                           
 12416                           ; BSR set to: 61
 12417                           ;mcc_generated_files/uart1.c: 145:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
 12418  004F54  0E6C               	movlw	low _UART1_DefaultErrorHandler
 12419  004F56  6E15               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
 12420  004F58  0E5E               	movlw	high _UART1_DefaultErrorHandler
 12421  004F5A  6E16               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
 12422  004F5C  0E00               	movlw	low (_UART1_DefaultErrorHandler shr (0+16))
 12423  004F5E  6E17               	movwf	(UART1_SetErrorHandler@interruptHandler+2)^0,c
 12424  004F60  EC07  F02F         	call	_UART1_SetErrorHandler	;wreg free
 12425                           
 12426                           ;mcc_generated_files/uart1.c: 147:     uart1RxLastError.status = 0;
 12427  004F64  0E00               	movlw	0
 12428  004F66  6E45               	movwf	_uart1RxLastError^0,c	;volatile
 12429                           
 12430                           ;mcc_generated_files/uart1.c: 150:     uart1TxHead = 0;
 12431  004F68  0E00               	movlw	0
 12432  004F6A  6E4B               	movwf	_uart1TxHead^0,c	;volatile
 12433                           
 12434                           ;mcc_generated_files/uart1.c: 151:     uart1TxTail = 0;
 12435  004F6C  0E00               	movlw	0
 12436  004F6E  6E4A               	movwf	_uart1TxTail^0,c	;volatile
 12437                           
 12438                           ;mcc_generated_files/uart1.c: 152:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 12439  004F70  0E40               	movlw	64
 12440  004F72  6E49               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 12441                           
 12442                           ;mcc_generated_files/uart1.c: 153:     uart1RxHead = 0;
 12443  004F74  0E00               	movlw	0
 12444  004F76  6E48               	movwf	_uart1RxHead^0,c	;volatile
 12445                           
 12446                           ;mcc_generated_files/uart1.c: 154:     uart1RxTail = 0;
 12447  004F78  0E00               	movlw	0
 12448  004F7A  6E47               	movwf	_uart1RxTail^0,c	;volatile
 12449                           
 12450                           ;mcc_generated_files/uart1.c: 155:     uart1RxCount = 0;
 12451  004F7C  0E00               	movlw	0
 12452  004F7E  6E46               	movwf	_uart1RxCount^0,c	;volatile
 12453                           
 12454                           ; BSR set to: 61
 12455                           ;mcc_generated_files/uart1.c: 158:     PIE3bits.U1RXIE = 1;
 12456  004F80  0139               	movlb	57	; () banked
 12457  004F82  8793               	bsf	147,3,b	;volatile
 12458                           
 12459                           ; BSR set to: 57
 12460  004F84  0012               	return		;funcret
 12461  004F86                     __end_of_UART1_Initialize:
 12462                           	callstack 0
 12463                           
 12464 ;; *************** function _UART1_SetTxInterruptHandler *****************
 12465 ;; Defined at:
 12466 ;;		line 333 in file "mcc_generated_files/uart1.c"
 12467 ;; Parameters:    Size  Location     Type
 12468 ;;  InterruptHan    3   20[COMRAM] PTR FTN()void 
 12469 ;;		 -> UART1_Transmit_ISR(1), 
 12470 ;; Auto vars:     Size  Location     Type
 12471 ;;		None
 12472 ;; Return value:  Size  Location     Type
 12473 ;;                  1    wreg      void 
 12474 ;; Registers used:
 12475 ;;		wreg, status,2, status,0
 12476 ;; Tracked objects:
 12477 ;;		On entry : 3F/39
 12478 ;;		On exit  : 3F/39
 12479 ;;		Unchanged: 3E/0
 12480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12481 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12484 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12485 ;;Total ram usage:        3 bytes
 12486 ;; Hardware stack levels used: 1
 12487 ;; Hardware stack levels required when called: 4
 12488 ;; This function calls:
 12489 ;;		Nothing
 12490 ;; This function is called by:
 12491 ;;		_UART1_Initialize
 12492 ;; This function uses a non-reentrant model
 12493 ;;
 12494                           
 12495                           	psect	text53
 12496  005DD6                     __ptext53:
 12497                           	callstack 0
 12498  005DD6                     _UART1_SetTxInterruptHandler:
 12499                           	callstack 24
 12500                           
 12501                           ; BSR set to: 57
 12502                           ;mcc_generated_files/uart1.c: 334:     UART1_TxInterruptHandler = InterruptHandler;
 12503                           
 12504                           ; BSR set to: 57
 12505                           ;incstack = 0
 12506  005DD6  C015  F0EF         	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
 12507  005DDA  C016  F0F0         	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
 12508  005DDE  C017  F0F1         	movff	UART1_SetTxInterruptHandler@InterruptHandler+2,_UART1_TxInterruptHandler+2
 12509                           
 12510                           ; BSR set to: 57
 12511  005DE2  0012               	return		;funcret
 12512  005DE4                     __end_of_UART1_SetTxInterruptHandler:
 12513                           	callstack 0
 12514                           
 12515 ;; *************** function _UART1_SetRxInterruptHandler *****************
 12516 ;; Defined at:
 12517 ;;		line 329 in file "mcc_generated_files/uart1.c"
 12518 ;; Parameters:    Size  Location     Type
 12519 ;;  InterruptHan    3   20[COMRAM] PTR FTN()void 
 12520 ;;		 -> UART1_Receive_ISR(1), 
 12521 ;; Auto vars:     Size  Location     Type
 12522 ;;		None
 12523 ;; Return value:  Size  Location     Type
 12524 ;;                  1    wreg      void 
 12525 ;; Registers used:
 12526 ;;		wreg, status,2, status,0
 12527 ;; Tracked objects:
 12528 ;;		On entry : 3F/39
 12529 ;;		On exit  : 3F/39
 12530 ;;		Unchanged: 3E/0
 12531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12532 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12535 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12536 ;;Total ram usage:        3 bytes
 12537 ;; Hardware stack levels used: 1
 12538 ;; Hardware stack levels required when called: 4
 12539 ;; This function calls:
 12540 ;;		Nothing
 12541 ;; This function is called by:
 12542 ;;		_UART1_Initialize
 12543 ;; This function uses a non-reentrant model
 12544 ;;
 12545                           
 12546                           	psect	text54
 12547  005DE4                     __ptext54:
 12548                           	callstack 0
 12549  005DE4                     _UART1_SetRxInterruptHandler:
 12550                           	callstack 24
 12551                           
 12552                           ; BSR set to: 57
 12553                           ;mcc_generated_files/uart1.c: 330:     UART1_RxInterruptHandler = InterruptHandler;
 12554                           
 12555                           ; BSR set to: 57
 12556                           ;incstack = 0
 12557  005DE4  C015  F0F2         	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
 12558  005DE8  C016  F0F3         	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
 12559  005DEC  C017  F0F4         	movff	UART1_SetRxInterruptHandler@InterruptHandler+2,_UART1_RxInterruptHandler+2
 12560                           
 12561                           ; BSR set to: 57
 12562  005DF0  0012               	return		;funcret
 12563  005DF2                     __end_of_UART1_SetRxInterruptHandler:
 12564                           	callstack 0
 12565                           
 12566 ;; *************** function _UART1_SetOverrunErrorHandler *****************
 12567 ;; Defined at:
 12568 ;;		line 319 in file "mcc_generated_files/uart1.c"
 12569 ;; Parameters:    Size  Location     Type
 12570 ;;  interruptHan    3   20[COMRAM] PTR FTN()void 
 12571 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
 12572 ;; Auto vars:     Size  Location     Type
 12573 ;;		None
 12574 ;; Return value:  Size  Location     Type
 12575 ;;                  1    wreg      void 
 12576 ;; Registers used:
 12577 ;;		wreg, status,2, status,0
 12578 ;; Tracked objects:
 12579 ;;		On entry : 3F/3D
 12580 ;;		On exit  : 3F/3D
 12581 ;;		Unchanged: 3E/0
 12582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12583 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12586 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12587 ;;Total ram usage:        3 bytes
 12588 ;; Hardware stack levels used: 1
 12589 ;; Hardware stack levels required when called: 4
 12590 ;; This function calls:
 12591 ;;		Nothing
 12592 ;; This function is called by:
 12593 ;;		_UART1_Initialize
 12594 ;; This function uses a non-reentrant model
 12595 ;;
 12596                           
 12597                           	psect	text55
 12598  005DF2                     __ptext55:
 12599                           	callstack 0
 12600  005DF2                     _UART1_SetOverrunErrorHandler:
 12601                           	callstack 24
 12602                           
 12603                           ; BSR set to: 61
 12604                           ;mcc_generated_files/uart1.c: 320:     UART1_OverrunErrorHandler = interruptHandler;
 12605                           
 12606                           ; BSR set to: 57
 12607                           ;incstack = 0
 12608  005DF2  C015  F0E3         	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
 12609  005DF6  C016  F0E4         	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
 12610  005DFA  C017  F0E5         	movff	UART1_SetOverrunErrorHandler@interruptHandler+2,_UART1_OverrunErrorHandler+2
 12611                           
 12612                           ; BSR set to: 61
 12613  005DFE  0012               	return		;funcret
 12614  005E00                     __end_of_UART1_SetOverrunErrorHandler:
 12615                           	callstack 0
 12616                           
 12617 ;; *************** function _UART1_SetFramingErrorHandler *****************
 12618 ;; Defined at:
 12619 ;;		line 315 in file "mcc_generated_files/uart1.c"
 12620 ;; Parameters:    Size  Location     Type
 12621 ;;  interruptHan    3   20[COMRAM] PTR FTN()void 
 12622 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
 12623 ;; Auto vars:     Size  Location     Type
 12624 ;;		None
 12625 ;; Return value:  Size  Location     Type
 12626 ;;                  1    wreg      void 
 12627 ;; Registers used:
 12628 ;;		wreg, status,2, status,0
 12629 ;; Tracked objects:
 12630 ;;		On entry : 3F/3D
 12631 ;;		On exit  : 3F/3D
 12632 ;;		Unchanged: 3E/0
 12633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12634 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12637 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12638 ;;Total ram usage:        3 bytes
 12639 ;; Hardware stack levels used: 1
 12640 ;; Hardware stack levels required when called: 4
 12641 ;; This function calls:
 12642 ;;		Nothing
 12643 ;; This function is called by:
 12644 ;;		_UART1_Initialize
 12645 ;; This function uses a non-reentrant model
 12646 ;;
 12647                           
 12648                           	psect	text56
 12649  005E00                     __ptext56:
 12650                           	callstack 0
 12651  005E00                     _UART1_SetFramingErrorHandler:
 12652                           	callstack 24
 12653                           
 12654                           ; BSR set to: 61
 12655                           ;mcc_generated_files/uart1.c: 316:     UART1_FramingErrorHandler = interruptHandler;
 12656                           
 12657                           ; BSR set to: 61
 12658                           ;incstack = 0
 12659  005E00  C015  F0E6         	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
 12660  005E04  C016  F0E7         	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
 12661  005E08  C017  F0E8         	movff	UART1_SetFramingErrorHandler@interruptHandler+2,_UART1_FramingErrorHandler+2
 12662                           
 12663                           ; BSR set to: 61
 12664  005E0C  0012               	return		;funcret
 12665  005E0E                     __end_of_UART1_SetFramingErrorHandler:
 12666                           	callstack 0
 12667                           
 12668 ;; *************** function _UART1_SetErrorHandler *****************
 12669 ;; Defined at:
 12670 ;;		line 323 in file "mcc_generated_files/uart1.c"
 12671 ;; Parameters:    Size  Location     Type
 12672 ;;  interruptHan    3   20[COMRAM] PTR FTN()void 
 12673 ;;		 -> UART1_DefaultErrorHandler(1), 
 12674 ;; Auto vars:     Size  Location     Type
 12675 ;;		None
 12676 ;; Return value:  Size  Location     Type
 12677 ;;                  1    wreg      void 
 12678 ;; Registers used:
 12679 ;;		wreg, status,2, status,0
 12680 ;; Tracked objects:
 12681 ;;		On entry : 3F/3D
 12682 ;;		On exit  : 3F/3D
 12683 ;;		Unchanged: 3E/0
 12684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12685 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12688 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12689 ;;Total ram usage:        3 bytes
 12690 ;; Hardware stack levels used: 1
 12691 ;; Hardware stack levels required when called: 4
 12692 ;; This function calls:
 12693 ;;		Nothing
 12694 ;; This function is called by:
 12695 ;;		_UART1_Initialize
 12696 ;; This function uses a non-reentrant model
 12697 ;;
 12698                           
 12699                           	psect	text57
 12700  005E0E                     __ptext57:
 12701                           	callstack 0
 12702  005E0E                     _UART1_SetErrorHandler:
 12703                           	callstack 24
 12704                           
 12705                           ; BSR set to: 61
 12706                           ;mcc_generated_files/uart1.c: 324:     UART1_ErrorHandler = interruptHandler;
 12707                           
 12708                           ; BSR set to: 61
 12709                           ;incstack = 0
 12710  005E0E  C015  F0E0         	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
 12711  005E12  C016  F0E1         	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
 12712  005E16  C017  F0E2         	movff	UART1_SetErrorHandler@interruptHandler+2,_UART1_ErrorHandler+2
 12713                           
 12714                           ; BSR set to: 61
 12715  005E1A  0012               	return		;funcret
 12716  005E1C                     __end_of_UART1_SetErrorHandler:
 12717                           	callstack 0
 12718                           
 12719 ;; *************** function _TMR6_Initialize *****************
 12720 ;; Defined at:
 12721 ;;		line 65 in file "mcc_generated_files/tmr6.c"
 12722 ;; Parameters:    Size  Location     Type
 12723 ;;		None
 12724 ;; Auto vars:     Size  Location     Type
 12725 ;;		None
 12726 ;; Return value:  Size  Location     Type
 12727 ;;                  1    wreg      void 
 12728 ;; Registers used:
 12729 ;;		wreg, status,2, status,0, cstack
 12730 ;; Tracked objects:
 12731 ;;		On entry : 3F/3F
 12732 ;;		On exit  : 3B/39
 12733 ;;		Unchanged: 0/0
 12734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12739 ;;Total ram usage:        0 bytes
 12740 ;; Hardware stack levels used: 1
 12741 ;; Hardware stack levels required when called: 5
 12742 ;; This function calls:
 12743 ;;		_TMR6_SetInterruptHandler
 12744 ;; This function is called by:
 12745 ;;		_SYSTEM_Initialize
 12746 ;; This function uses a non-reentrant model
 12747 ;;
 12748                           
 12749                           	psect	text58
 12750  005B26                     __ptext58:
 12751                           	callstack 0
 12752  005B26                     _TMR6_Initialize:
 12753                           	callstack 24
 12754                           
 12755                           ; BSR set to: 63
 12756                           ;mcc_generated_files/tmr6.c: 70:     T6CLKCON = 0x01;
 12757                           
 12758                           ; BSR set to: 61
 12759                           ;incstack = 0
 12760  005B26  0E01               	movlw	1
 12761  005B28  6E96               	movwf	150,c	;volatile
 12762                           
 12763                           ;mcc_generated_files/tmr6.c: 73:     T6HLT = 0x20;
 12764  005B2A  0E20               	movlw	32
 12765  005B2C  6E95               	movwf	149,c	;volatile
 12766                           
 12767                           ;mcc_generated_files/tmr6.c: 76:     T6RST = 0x00;
 12768  005B2E  0E00               	movlw	0
 12769  005B30  6E97               	movwf	151,c	;volatile
 12770                           
 12771                           ;mcc_generated_files/tmr6.c: 79:     T6PR = 0x4D;
 12772  005B32  0E4D               	movlw	77
 12773  005B34  6E93               	movwf	147,c	;volatile
 12774                           
 12775                           ;mcc_generated_files/tmr6.c: 82:     T6TMR = 0x00;
 12776  005B36  0E00               	movlw	0
 12777  005B38  6E92               	movwf	146,c	;volatile
 12778                           
 12779                           ; BSR set to: 63
 12780                           ;mcc_generated_files/tmr6.c: 85:     PIR9bits.TMR6IF = 0;
 12781  005B3A  0139               	movlb	57	; () banked
 12782  005B3C  91A9               	bcf	169,0,b	;volatile
 12783                           
 12784                           ; BSR set to: 57
 12785                           ;mcc_generated_files/tmr6.c: 88:     PIE9bits.TMR6IE = 1;
 12786  005B3E  8199               	bsf	153,0,b	;volatile
 12787                           
 12788                           ; BSR set to: 57
 12789                           ;mcc_generated_files/tmr6.c: 91:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 12790  005B40  0E76               	movlw	low _TMR6_DefaultInterruptHandler
 12791  005B42  6E15               	movwf	TMR6_SetInterruptHandler@InterruptHandler^0,c
 12792  005B44  0E5E               	movlw	high _TMR6_DefaultInterruptHandler
 12793  005B46  6E16               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)^0,c
 12794  005B48  0E00               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 12795  005B4A  6E17               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)^0,c
 12796  005B4C  EC0E  F02F         	call	_TMR6_SetInterruptHandler	;wreg free
 12797                           
 12798                           ;mcc_generated_files/tmr6.c: 94:     T6CON = 0xFF;
 12799  005B50  6894               	setf	148,c	;volatile
 12800  005B52  0012               	return		;funcret
 12801  005B54                     __end_of_TMR6_Initialize:
 12802                           	callstack 0
 12803                           
 12804 ;; *************** function _TMR6_SetInterruptHandler *****************
 12805 ;; Defined at:
 12806 ;;		line 194 in file "mcc_generated_files/tmr6.c"
 12807 ;; Parameters:    Size  Location     Type
 12808 ;;  InterruptHan    3   20[COMRAM] PTR FTN()void 
 12809 ;;		 -> Led_Blink(1), TMR6_DefaultInterruptHandler(1), 
 12810 ;; Auto vars:     Size  Location     Type
 12811 ;;		None
 12812 ;; Return value:  Size  Location     Type
 12813 ;;                  1    wreg      void 
 12814 ;; Registers used:
 12815 ;;		wreg, status,2, status,0
 12816 ;; Tracked objects:
 12817 ;;		On entry : 3B/3D
 12818 ;;		On exit  : 3B/39
 12819 ;;		Unchanged: 3A/0
 12820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12821 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12824 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12825 ;;Total ram usage:        3 bytes
 12826 ;; Hardware stack levels used: 1
 12827 ;; Hardware stack levels required when called: 4
 12828 ;; This function calls:
 12829 ;;		Nothing
 12830 ;; This function is called by:
 12831 ;;		_TMR6_Initialize
 12832 ;;		_main
 12833 ;; This function uses a non-reentrant model
 12834 ;;
 12835                           
 12836                           	psect	text59
 12837  005E1C                     __ptext59:
 12838                           	callstack 0
 12839  005E1C                     _TMR6_SetInterruptHandler:
 12840                           	callstack 26
 12841                           
 12842                           ;mcc_generated_files/tmr6.c: 195:     TMR6_InterruptHandler = InterruptHandler;
 12843                           
 12844                           ;incstack = 0
 12845  005E1C  C015  F0E9         	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
 12846  005E20  C016  F0EA         	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
 12847  005E24  C017  F0EB         	movff	TMR6_SetInterruptHandler@InterruptHandler+2,_TMR6_InterruptHandler+2
 12848  005E28  0012               	return		;funcret
 12849  005E2A                     __end_of_TMR6_SetInterruptHandler:
 12850                           	callstack 0
 12851                           
 12852 ;; *************** function _TMR5_Initialize *****************
 12853 ;; Defined at:
 12854 ;;		line 65 in file "mcc_generated_files/tmr5.c"
 12855 ;; Parameters:    Size  Location     Type
 12856 ;;		None
 12857 ;; Auto vars:     Size  Location     Type
 12858 ;;		None
 12859 ;; Return value:  Size  Location     Type
 12860 ;;                  1    wreg      void 
 12861 ;; Registers used:
 12862 ;;		wreg, status,2, status,0, cstack
 12863 ;; Tracked objects:
 12864 ;;		On entry : 3F/3F
 12865 ;;		On exit  : 3B/39
 12866 ;;		Unchanged: 0/0
 12867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12870 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12871 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12872 ;;Total ram usage:        2 bytes
 12873 ;; Hardware stack levels used: 1
 12874 ;; Hardware stack levels required when called: 5
 12875 ;; This function calls:
 12876 ;;		_TMR5_SetInterruptHandler
 12877 ;; This function is called by:
 12878 ;;		_SYSTEM_Initialize
 12879 ;; This function uses a non-reentrant model
 12880 ;;
 12881                           
 12882                           	psect	text60
 12883  0056CA                     __ptext60:
 12884                           	callstack 0
 12885  0056CA                     _TMR5_Initialize:
 12886                           	callstack 24
 12887                           
 12888                           ; BSR set to: 63
 12889                           ;mcc_generated_files/tmr5.c: 70:     T5GCON = 0x00;
 12890                           
 12891                           ;incstack = 0
 12892  0056CA  0E00               	movlw	0
 12893  0056CC  6E9B               	movwf	155,c	;volatile
 12894                           
 12895                           ;mcc_generated_files/tmr5.c: 73:     T5GATE = 0x00;
 12896  0056CE  0E00               	movlw	0
 12897  0056D0  6E9C               	movwf	156,c	;volatile
 12898                           
 12899                           ;mcc_generated_files/tmr5.c: 76:     T5CLK = 0x02;
 12900  0056D2  0E02               	movlw	2
 12901  0056D4  6E9D               	movwf	157,c	;volatile
 12902                           
 12903                           ;mcc_generated_files/tmr5.c: 79:     TMR5H = 0x83;
 12904  0056D6  0E83               	movlw	131
 12905  0056D8  6E99               	movwf	153,c	;volatile
 12906                           
 12907                           ;mcc_generated_files/tmr5.c: 82:     TMR5L = 0x00;
 12908  0056DA  0E00               	movlw	0
 12909  0056DC  6E98               	movwf	152,c	;volatile
 12910                           
 12911                           ; BSR set to: 63
 12912                           ;mcc_generated_files/tmr5.c: 85:     PIR8bits.TMR5IF = 0;
 12913  0056DE  0139               	movlb	57	; () banked
 12914  0056E0  9DA8               	bcf	168,6,b	;volatile
 12915                           
 12916                           ; BSR set to: 57
 12917                           ;mcc_generated_files/tmr5.c: 88:     timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 12918  0056E2  5098               	movf	152,w,c	;volatile
 12919  0056E4  006F FE64  F018    	movff	16281,??_TMR5_Initialize	;volatile
 12920  0056EA  6A19               	clrf	(??_TMR5_Initialize+1)^0,c
 12921  0056EC  C018  F019         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 12922  0056F0  6A18               	clrf	??_TMR5_Initialize^0,c
 12923  0056F2  1018               	iorwf	??_TMR5_Initialize^0,w,c
 12924  0056F4  6E3F               	movwf	_timer5ReloadVal^0,c	;volatile
 12925  0056F6  5019               	movf	(??_TMR5_Initialize+1)^0,w,c
 12926  0056F8  6E40               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 12927                           
 12928                           ; BSR set to: 57
 12929                           ;mcc_generated_files/tmr5.c: 91:     PIE8bits.TMR5IE = 1;
 12930  0056FA  8D98               	bsf	152,6,b	;volatile
 12931                           
 12932                           ; BSR set to: 57
 12933                           ;mcc_generated_files/tmr5.c: 94:     TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandl
      +                          er);
 12934  0056FC  0E7E               	movlw	low _TMR5_DefaultInterruptHandler
 12935  0056FE  6E15               	movwf	TMR5_SetInterruptHandler@InterruptHandler^0,c
 12936  005700  0E5E               	movlw	high _TMR5_DefaultInterruptHandler
 12937  005702  6E16               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)^0,c
 12938  005704  0E00               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 12939  005706  6E17               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)^0,c
 12940  005708  EC15  F02F         	call	_TMR5_SetInterruptHandler	;wreg free
 12941                           
 12942                           ;mcc_generated_files/tmr5.c: 97:     T5CON = 0x01;
 12943  00570C  0E01               	movlw	1
 12944  00570E  6E9A               	movwf	154,c	;volatile
 12945  005710  0012               	return		;funcret
 12946  005712                     __end_of_TMR5_Initialize:
 12947                           	callstack 0
 12948                           
 12949 ;; *************** function _TMR5_SetInterruptHandler *****************
 12950 ;; Defined at:
 12951 ;;		line 179 in file "mcc_generated_files/tmr5.c"
 12952 ;; Parameters:    Size  Location     Type
 12953 ;;  InterruptHan    3   20[COMRAM] PTR FTN()void 
 12954 ;;		 -> Timers_Isr(1), TMR5_DefaultInterruptHandler(1), 
 12955 ;; Auto vars:     Size  Location     Type
 12956 ;;		None
 12957 ;; Return value:  Size  Location     Type
 12958 ;;                  1    wreg      void 
 12959 ;; Registers used:
 12960 ;;		wreg, status,2, status,0
 12961 ;; Tracked objects:
 12962 ;;		On entry : 3B/3D
 12963 ;;		On exit  : 3B/39
 12964 ;;		Unchanged: 3A/0
 12965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12966 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12969 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12970 ;;Total ram usage:        3 bytes
 12971 ;; Hardware stack levels used: 1
 12972 ;; Hardware stack levels required when called: 4
 12973 ;; This function calls:
 12974 ;;		Nothing
 12975 ;; This function is called by:
 12976 ;;		_TMR5_Initialize
 12977 ;;		_main
 12978 ;; This function uses a non-reentrant model
 12979 ;;
 12980                           
 12981                           	psect	text61
 12982  005E2A                     __ptext61:
 12983                           	callstack 0
 12984  005E2A                     _TMR5_SetInterruptHandler:
 12985                           	callstack 26
 12986                           
 12987                           ;mcc_generated_files/tmr5.c: 180:     TMR5_InterruptHandler = InterruptHandler;
 12988                           
 12989                           ;incstack = 0
 12990  005E2A  C015  F0DD         	movff	TMR5_SetInterruptHandler@InterruptHandler,_TMR5_InterruptHandler
 12991  005E2E  C016  F0DE         	movff	TMR5_SetInterruptHandler@InterruptHandler+1,_TMR5_InterruptHandler+1
 12992  005E32  C017  F0DF         	movff	TMR5_SetInterruptHandler@InterruptHandler+2,_TMR5_InterruptHandler+2
 12993  005E36  0012               	return		;funcret
 12994  005E38                     __end_of_TMR5_SetInterruptHandler:
 12995                           	callstack 0
 12996                           
 12997 ;; *************** function _TMR2_Initialize *****************
 12998 ;; Defined at:
 12999 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 13000 ;; Parameters:    Size  Location     Type
 13001 ;;		None
 13002 ;; Auto vars:     Size  Location     Type
 13003 ;;		None
 13004 ;; Return value:  Size  Location     Type
 13005 ;;                  1    wreg      void 
 13006 ;; Registers used:
 13007 ;;		wreg, status,2
 13008 ;; Tracked objects:
 13009 ;;		On entry : 3B/3D
 13010 ;;		On exit  : 3F/39
 13011 ;;		Unchanged: 0/0
 13012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13017 ;;Total ram usage:        0 bytes
 13018 ;; Hardware stack levels used: 1
 13019 ;; Hardware stack levels required when called: 4
 13020 ;; This function calls:
 13021 ;;		Nothing
 13022 ;; This function is called by:
 13023 ;;		_SYSTEM_Initialize
 13024 ;; This function uses a non-reentrant model
 13025 ;;
 13026                           
 13027                           	psect	text62
 13028  005CA2                     __ptext62:
 13029                           	callstack 0
 13030  005CA2                     _TMR2_Initialize:
 13031                           	callstack 25
 13032                           
 13033                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 13034                           
 13035                           ;incstack = 0
 13036  005CA2  0E01               	movlw	1
 13037  005CA4  6EAE               	movwf	174,c	;volatile
 13038                           
 13039                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 13040  005CA6  0E00               	movlw	0
 13041  005CA8  6EAD               	movwf	173,c	;volatile
 13042                           
 13043                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 13044  005CAA  0E00               	movlw	0
 13045  005CAC  6EAF               	movwf	175,c	;volatile
 13046                           
 13047                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x9F;
 13048  005CAE  0E9F               	movlw	159
 13049  005CB0  6EAB               	movwf	171,c	;volatile
 13050                           
 13051                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 13052  005CB2  0E00               	movlw	0
 13053  005CB4  6EAA               	movwf	170,c	;volatile
 13054                           
 13055                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 13056  005CB6  0139               	movlb	57	; () banked
 13057  005CB8  95A4               	bcf	164,2,b	;volatile
 13058                           
 13059                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0x80;
 13060  005CBA  0E80               	movlw	128
 13061  005CBC  6EAC               	movwf	172,c	;volatile
 13062                           
 13063                           ; BSR set to: 57
 13064  005CBE  0012               	return		;funcret
 13065  005CC0                     __end_of_TMR2_Initialize:
 13066                           	callstack 0
 13067                           
 13068 ;; *************** function _SPI1_Initialize *****************
 13069 ;; Defined at:
 13070 ;;		line 64 in file "mcc_generated_files/spi1.c"
 13071 ;; Parameters:    Size  Location     Type
 13072 ;;		None
 13073 ;; Auto vars:     Size  Location     Type
 13074 ;;		None
 13075 ;; Return value:  Size  Location     Type
 13076 ;;                  1    wreg      void 
 13077 ;; Registers used:
 13078 ;;		wreg, status,2
 13079 ;; Tracked objects:
 13080 ;;		On entry : 3F/39
 13081 ;;		On exit  : 3F/3D
 13082 ;;		Unchanged: 0/0
 13083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13088 ;;Total ram usage:        0 bytes
 13089 ;; Hardware stack levels used: 1
 13090 ;; Hardware stack levels required when called: 4
 13091 ;; This function calls:
 13092 ;;		Nothing
 13093 ;; This function is called by:
 13094 ;;		_SYSTEM_Initialize
 13095 ;; This function uses a non-reentrant model
 13096 ;;
 13097                           
 13098                           	psect	text63
 13099  005CFA                     __ptext63:
 13100                           	callstack 0
 13101  005CFA                     _SPI1_Initialize:
 13102                           	callstack 25
 13103                           
 13104                           ; BSR set to: 57
 13105                           ;mcc_generated_files/spi1.c: 67:     SPI1CON0 = 0x02;
 13106                           
 13107                           ; BSR set to: 57
 13108                           ;incstack = 0
 13109  005CFA  0E02               	movlw	2
 13110  005CFC  013D               	movlb	61	; () banked
 13111  005CFE  6F14               	movwf	20,b	;volatile
 13112                           
 13113                           ;mcc_generated_files/spi1.c: 69:     SPI1CON1 = 0x40;
 13114  005D00  0E40               	movlw	64
 13115  005D02  6F15               	movwf	21,b	;volatile
 13116                           
 13117                           ;mcc_generated_files/spi1.c: 71:     SPI1CON2 = 0x00;
 13118  005D04  0E00               	movlw	0
 13119  005D06  6F16               	movwf	22,b	;volatile
 13120                           
 13121                           ;mcc_generated_files/spi1.c: 73:     SPI1CLK = 0x00;
 13122  005D08  0E00               	movlw	0
 13123  005D0A  6F1C               	movwf	28,b	;volatile
 13124                           
 13125                           ;mcc_generated_files/spi1.c: 75:     SPI1BAUD = 0x08;
 13126  005D0C  0E08               	movlw	8
 13127  005D0E  6F19               	movwf	25,b	;volatile
 13128                           
 13129                           ; BSR set to: 61
 13130                           ;mcc_generated_files/spi1.c: 76:     TRISCbits.TRISC3 = 0;
 13131  005D10  96C4               	bcf	196,3,c	;volatile
 13132                           
 13133                           ; BSR set to: 61
 13134  005D12  0012               	return		;funcret
 13135  005D14                     __end_of_SPI1_Initialize:
 13136                           	callstack 0
 13137                           
 13138 ;; *************** function _PWM6_Initialize *****************
 13139 ;; Defined at:
 13140 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 13141 ;; Parameters:    Size  Location     Type
 13142 ;;		None
 13143 ;; Auto vars:     Size  Location     Type
 13144 ;;		None
 13145 ;; Return value:  Size  Location     Type
 13146 ;;                  1    wreg      void 
 13147 ;; Registers used:
 13148 ;;		wreg, status,2
 13149 ;; Tracked objects:
 13150 ;;		On entry : 3F/39
 13151 ;;		On exit  : 3F/3F
 13152 ;;		Unchanged: 0/0
 13153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13158 ;;Total ram usage:        0 bytes
 13159 ;; Hardware stack levels used: 1
 13160 ;; Hardware stack levels required when called: 4
 13161 ;; This function calls:
 13162 ;;		Nothing
 13163 ;; This function is called by:
 13164 ;;		_SYSTEM_Initialize
 13165 ;; This function uses a non-reentrant model
 13166 ;;
 13167                           
 13168                           	psect	text64
 13169  005D5C                     __ptext64:
 13170                           	callstack 0
 13171  005D5C                     _PWM6_Initialize:
 13172                           	callstack 25
 13173                           
 13174                           ; BSR set to: 57
 13175                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
 13176                           
 13177                           ; BSR set to: 61
 13178                           ;incstack = 0
 13179  005D5C  0E80               	movlw	128
 13180  005D5E  6E6A               	movwf	106,c	;volatile
 13181                           
 13182                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x4F;
 13183  005D60  0E4F               	movlw	79
 13184  005D62  6E69               	movwf	105,c	;volatile
 13185                           
 13186                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0xC0;
 13187  005D64  0EC0               	movlw	192
 13188  005D66  6E68               	movwf	104,c	;volatile
 13189                           
 13190                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
 13191  005D68  013F               	movlb	63	; () banked
 13192  005D6A  515F               	movf	95,w,b	;volatile
 13193  005D6C  0BF3               	andlw	-13
 13194  005D6E  0904               	iorlw	4
 13195  005D70  6F5F               	movwf	95,b	;volatile
 13196                           
 13197                           ; BSR set to: 63
 13198  005D72  0012               	return		;funcret
 13199  005D74                     __end_of_PWM6_Initialize:
 13200                           	callstack 0
 13201                           
 13202 ;; *************** function _PWM5_Initialize *****************
 13203 ;; Defined at:
 13204 ;;		line 58 in file "mcc_generated_files/pwm5.c"
 13205 ;; Parameters:    Size  Location     Type
 13206 ;;		None
 13207 ;; Auto vars:     Size  Location     Type
 13208 ;;		None
 13209 ;; Return value:  Size  Location     Type
 13210 ;;                  1    wreg      void 
 13211 ;; Registers used:
 13212 ;;		wreg, status,2
 13213 ;; Tracked objects:
 13214 ;;		On entry : 3F/3E
 13215 ;;		On exit  : 3F/3F
 13216 ;;		Unchanged: 0/0
 13217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13222 ;;Total ram usage:        0 bytes
 13223 ;; Hardware stack levels used: 1
 13224 ;; Hardware stack levels required when called: 4
 13225 ;; This function calls:
 13226 ;;		Nothing
 13227 ;; This function is called by:
 13228 ;;		_SYSTEM_Initialize
 13229 ;; This function uses a non-reentrant model
 13230 ;;
 13231                           
 13232                           	psect	text65
 13233  005D74                     __ptext65:
 13234                           	callstack 0
 13235  005D74                     _PWM5_Initialize:
 13236                           	callstack 25
 13237                           
 13238                           ; BSR set to: 62
 13239                           ;mcc_generated_files/pwm5.c: 62:     PWM5CON = 0x80;
 13240                           
 13241                           ; BSR set to: 63
 13242                           ;incstack = 0
 13243  005D74  0E80               	movlw	128
 13244  005D76  6E6E               	movwf	110,c	;volatile
 13245                           
 13246                           ;mcc_generated_files/pwm5.c: 65:     PWM5DCH = 0x4F;
 13247  005D78  0E4F               	movlw	79
 13248  005D7A  6E6D               	movwf	109,c	;volatile
 13249                           
 13250                           ;mcc_generated_files/pwm5.c: 68:     PWM5DCL = 0xC0;
 13251  005D7C  0EC0               	movlw	192
 13252  005D7E  6E6C               	movwf	108,c	;volatile
 13253                           
 13254                           ;mcc_generated_files/pwm5.c: 71:     CCPTMRS1bits.P5TSEL = 1;
 13255  005D80  013F               	movlb	63	; () banked
 13256  005D82  515F               	movf	95,w,b	;volatile
 13257  005D84  0BFC               	andlw	-4
 13258  005D86  0901               	iorlw	1
 13259  005D88  6F5F               	movwf	95,b	;volatile
 13260                           
 13261                           ; BSR set to: 63
 13262  005D8A  0012               	return		;funcret
 13263  005D8C                     __end_of_PWM5_Initialize:
 13264                           	callstack 0
 13265                           
 13266 ;; *************** function _PMD_Initialize *****************
 13267 ;; Defined at:
 13268 ;;		line 85 in file "mcc_generated_files/mcc.c"
 13269 ;; Parameters:    Size  Location     Type
 13270 ;;		None
 13271 ;; Auto vars:     Size  Location     Type
 13272 ;;		None
 13273 ;; Return value:  Size  Location     Type
 13274 ;;                  1    wreg      void 
 13275 ;; Registers used:
 13276 ;;		wreg, status,2
 13277 ;; Tracked objects:
 13278 ;;		On entry : 3F/39
 13279 ;;		On exit  : 3F/39
 13280 ;;		Unchanged: 0/0
 13281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13286 ;;Total ram usage:        0 bytes
 13287 ;; Hardware stack levels used: 1
 13288 ;; Hardware stack levels required when called: 4
 13289 ;; This function calls:
 13290 ;;		Nothing
 13291 ;; This function is called by:
 13292 ;;		_SYSTEM_Initialize
 13293 ;; This function uses a non-reentrant model
 13294 ;;
 13295                           
 13296                           	psect	text66
 13297  005C5E                     __ptext66:
 13298                           	callstack 0
 13299  005C5E                     _PMD_Initialize:
 13300                           	callstack 25
 13301                           
 13302                           ; BSR set to: 57
 13303                           ;mcc_generated_files/mcc.c: 88:     PMD0 = 0x00;
 13304                           
 13305                           ; BSR set to: 63
 13306                           ;incstack = 0
 13307  005C5E  0E00               	movlw	0
 13308  005C60  6FC0               	movwf	192,b	;volatile
 13309                           
 13310                           ;mcc_generated_files/mcc.c: 90:     PMD1 = 0x00;
 13311  005C62  0E00               	movlw	0
 13312  005C64  6FC1               	movwf	193,b	;volatile
 13313                           
 13314                           ;mcc_generated_files/mcc.c: 92:     PMD2 = 0x00;
 13315  005C66  0E00               	movlw	0
 13316  005C68  6FC2               	movwf	194,b	;volatile
 13317                           
 13318                           ;mcc_generated_files/mcc.c: 94:     PMD3 = 0x00;
 13319  005C6A  0E00               	movlw	0
 13320  005C6C  6FC3               	movwf	195,b	;volatile
 13321                           
 13322                           ;mcc_generated_files/mcc.c: 96:     PMD4 = 0x00;
 13323  005C6E  0E00               	movlw	0
 13324  005C70  6FC4               	movwf	196,b	;volatile
 13325                           
 13326                           ;mcc_generated_files/mcc.c: 98:     PMD5 = 0x00;
 13327  005C72  0E00               	movlw	0
 13328  005C74  6FC5               	movwf	197,b	;volatile
 13329                           
 13330                           ;mcc_generated_files/mcc.c: 100:     PMD6 = 0x00;
 13331  005C76  0E00               	movlw	0
 13332  005C78  6FC6               	movwf	198,b	;volatile
 13333                           
 13334                           ;mcc_generated_files/mcc.c: 102:     PMD7 = 0x00;
 13335  005C7A  0E00               	movlw	0
 13336  005C7C  6FC7               	movwf	199,b	;volatile
 13337                           
 13338                           ; BSR set to: 57
 13339  005C7E  0012               	return		;funcret
 13340  005C80                     __end_of_PMD_Initialize:
 13341                           	callstack 0
 13342                           
 13343 ;; *************** function _PIN_MANAGER_Initialize *****************
 13344 ;; Defined at:
 13345 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 13346 ;; Parameters:    Size  Location     Type
 13347 ;;		None
 13348 ;; Auto vars:     Size  Location     Type
 13349 ;;		None
 13350 ;; Return value:  Size  Location     Type
 13351 ;;                  1    wreg      void 
 13352 ;; Registers used:
 13353 ;;		wreg, status,2
 13354 ;; Tracked objects:
 13355 ;;		On entry : 3F/39
 13356 ;;		On exit  : 3F/3A
 13357 ;;		Unchanged: 0/0
 13358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13363 ;;Total ram usage:        0 bytes
 13364 ;; Hardware stack levels used: 1
 13365 ;; Hardware stack levels required when called: 4
 13366 ;; This function calls:
 13367 ;;		Nothing
 13368 ;; This function is called by:
 13369 ;;		_SYSTEM_Initialize
 13370 ;; This function uses a non-reentrant model
 13371 ;;
 13372                           
 13373                           	psect	text67
 13374  004B12                     __ptext67:
 13375                           	callstack 0
 13376  004B12                     _PIN_MANAGER_Initialize:
 13377                           	callstack 25
 13378                           
 13379                           ; BSR set to: 57
 13380                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 13381                           
 13382                           ; BSR set to: 57
 13383                           ;incstack = 0
 13384  004B12  0E00               	movlw	0
 13385  004B14  6EBE               	movwf	190,c	;volatile
 13386                           
 13387                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x11;
 13388  004B16  0E11               	movlw	17
 13389  004B18  6EBD               	movwf	189,c	;volatile
 13390                           
 13391                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x20;
 13392  004B1A  0E20               	movlw	32
 13393  004B1C  6EBA               	movwf	186,c	;volatile
 13394                           
 13395                           ;mcc_generated_files/pin_manager.c: 63:     LATF = 0x00;
 13396  004B1E  0E00               	movlw	0
 13397  004B20  6EBF               	movwf	191,c	;volatile
 13398                           
 13399                           ;mcc_generated_files/pin_manager.c: 64:     LATB = 0x00;
 13400  004B22  0E00               	movlw	0
 13401  004B24  6EBB               	movwf	187,c	;volatile
 13402                           
 13403                           ;mcc_generated_files/pin_manager.c: 65:     LATC = 0x00;
 13404  004B26  0E00               	movlw	0
 13405  004B28  6EBC               	movwf	188,c	;volatile
 13406                           
 13407                           ;mcc_generated_files/pin_manager.c: 70:     TRISE = 0x02;
 13408  004B2A  0E02               	movlw	2
 13409  004B2C  6EC6               	movwf	198,c	;volatile
 13410                           
 13411                           ;mcc_generated_files/pin_manager.c: 71:     TRISF = 0x0B;
 13412  004B2E  0E0B               	movlw	11
 13413  004B30  6EC7               	movwf	199,c	;volatile
 13414                           
 13415                           ;mcc_generated_files/pin_manager.c: 72:     TRISA = 0xDF;
 13416  004B32  0EDF               	movlw	223
 13417  004B34  6EC2               	movwf	194,c	;volatile
 13418                           
 13419                           ; BSR set to: 57
 13420                           ;mcc_generated_files/pin_manager.c: 73:     TRISB = 0xFF;
 13421  004B36  68C3               	setf	195,c	;volatile
 13422                           
 13423                           ;mcc_generated_files/pin_manager.c: 74:     TRISC = 0x90;
 13424  004B38  0E90               	movlw	144
 13425  004B3A  6EC4               	movwf	196,c	;volatile
 13426                           
 13427                           ;mcc_generated_files/pin_manager.c: 75:     TRISD = 0x08;
 13428  004B3C  0E08               	movlw	8
 13429  004B3E  6EC5               	movwf	197,c	;volatile
 13430                           
 13431                           ;mcc_generated_files/pin_manager.c: 80:     ANSELD = 0x0C;
 13432  004B40  0E0C               	movlw	12
 13433  004B42  013A               	movlb	58	; () banked
 13434  004B44  6F70               	movwf	112,b	;volatile
 13435                           
 13436                           ;mcc_generated_files/pin_manager.c: 81:     ANSELC = 0x60;
 13437  004B46  0E60               	movlw	96
 13438  004B48  6F60               	movwf	96,b	;volatile
 13439                           
 13440                           ;mcc_generated_files/pin_manager.c: 82:     ANSELB = 0xFE;
 13441  004B4A  0EFE               	movlw	254
 13442  004B4C  6F50               	movwf	80,b	;volatile
 13443                           
 13444                           ;mcc_generated_files/pin_manager.c: 83:     ANSELE = 0x02;
 13445  004B4E  0E02               	movlw	2
 13446  004B50  6F80               	movwf	128,b	;volatile
 13447                           
 13448                           ;mcc_generated_files/pin_manager.c: 84:     ANSELF = 0x0F;
 13449  004B52  0E0F               	movlw	15
 13450  004B54  6F90               	movwf	144,b	;volatile
 13451                           
 13452                           ;mcc_generated_files/pin_manager.c: 85:     ANSELA = 0x8F;
 13453  004B56  0E8F               	movlw	143
 13454  004B58  6F40               	movwf	64,b	;volatile
 13455                           
 13456                           ;mcc_generated_files/pin_manager.c: 90:     WPUD = 0x00;
 13457  004B5A  0E00               	movlw	0
 13458  004B5C  6F71               	movwf	113,b	;volatile
 13459                           
 13460                           ;mcc_generated_files/pin_manager.c: 91:     WPUF = 0x00;
 13461  004B5E  0E00               	movlw	0
 13462  004B60  6F91               	movwf	145,b	;volatile
 13463                           
 13464                           ;mcc_generated_files/pin_manager.c: 92:     WPUE = 0x00;
 13465  004B62  0E00               	movlw	0
 13466  004B64  6F81               	movwf	129,b	;volatile
 13467                           
 13468                           ;mcc_generated_files/pin_manager.c: 93:     WPUB = 0x01;
 13469  004B66  0E01               	movlw	1
 13470  004B68  6F51               	movwf	81,b	;volatile
 13471                           
 13472                           ;mcc_generated_files/pin_manager.c: 94:     WPUA = 0x50;
 13473  004B6A  0E50               	movlw	80
 13474  004B6C  6F41               	movwf	65,b	;volatile
 13475                           
 13476                           ;mcc_generated_files/pin_manager.c: 95:     WPUC = 0x00;
 13477  004B6E  0E00               	movlw	0
 13478  004B70  6F61               	movwf	97,b	;volatile
 13479                           
 13480                           ;mcc_generated_files/pin_manager.c: 100:     RB1I2C = 0x00;
 13481  004B72  0E00               	movlw	0
 13482  004B74  6F5A               	movwf	90,b	;volatile
 13483                           
 13484                           ;mcc_generated_files/pin_manager.c: 101:     RB2I2C = 0x00;
 13485  004B76  0E00               	movlw	0
 13486  004B78  6F5B               	movwf	91,b	;volatile
 13487                           
 13488                           ;mcc_generated_files/pin_manager.c: 102:     RC3I2C = 0x00;
 13489  004B7A  0E00               	movlw	0
 13490  004B7C  6F6A               	movwf	106,b	;volatile
 13491                           
 13492                           ;mcc_generated_files/pin_manager.c: 103:     RC4I2C = 0x00;
 13493  004B7E  0E00               	movlw	0
 13494  004B80  6F6B               	movwf	107,b	;volatile
 13495                           
 13496                           ;mcc_generated_files/pin_manager.c: 104:     RD0I2C = 0x00;
 13497  004B82  0E00               	movlw	0
 13498  004B84  6F7A               	movwf	122,b	;volatile
 13499                           
 13500                           ;mcc_generated_files/pin_manager.c: 105:     RD1I2C = 0x00;
 13501  004B86  0E00               	movlw	0
 13502  004B88  6F7B               	movwf	123,b	;volatile
 13503                           
 13504                           ;mcc_generated_files/pin_manager.c: 110:     ODCONE = 0x00;
 13505  004B8A  0E00               	movlw	0
 13506  004B8C  6F82               	movwf	130,b	;volatile
 13507                           
 13508                           ;mcc_generated_files/pin_manager.c: 111:     ODCONF = 0x00;
 13509  004B8E  0E00               	movlw	0
 13510  004B90  6F92               	movwf	146,b	;volatile
 13511                           
 13512                           ;mcc_generated_files/pin_manager.c: 112:     ODCONA = 0x00;
 13513  004B92  0E00               	movlw	0
 13514  004B94  6F42               	movwf	66,b	;volatile
 13515                           
 13516                           ;mcc_generated_files/pin_manager.c: 113:     ODCONB = 0x00;
 13517  004B96  0E00               	movlw	0
 13518  004B98  6F52               	movwf	82,b	;volatile
 13519                           
 13520                           ;mcc_generated_files/pin_manager.c: 114:     ODCONC = 0x00;
 13521  004B9A  0E00               	movlw	0
 13522  004B9C  6F62               	movwf	98,b	;volatile
 13523                           
 13524                           ;mcc_generated_files/pin_manager.c: 115:     ODCOND = 0x00;
 13525  004B9E  0E00               	movlw	0
 13526  004BA0  6F72               	movwf	114,b	;volatile
 13527                           
 13528                           ; BSR set to: 58
 13529                           ;mcc_generated_files/pin_manager.c: 120:     SLRCONA = 0xFF;
 13530  004BA2  6943               	setf	67,b	;volatile
 13531                           
 13532                           ; BSR set to: 58
 13533                           ;mcc_generated_files/pin_manager.c: 121:     SLRCONB = 0xFF;
 13534  004BA4  6953               	setf	83,b	;volatile
 13535                           
 13536                           ; BSR set to: 58
 13537                           ;mcc_generated_files/pin_manager.c: 122:     SLRCONC = 0xFF;
 13538  004BA6  6963               	setf	99,b	;volatile
 13539                           
 13540                           ; BSR set to: 58
 13541                           ;mcc_generated_files/pin_manager.c: 123:     SLRCOND = 0xFF;
 13542  004BA8  6973               	setf	115,b	;volatile
 13543                           
 13544                           ;mcc_generated_files/pin_manager.c: 124:     SLRCONE = 0x07;
 13545  004BAA  0E07               	movlw	7
 13546  004BAC  6F83               	movwf	131,b	;volatile
 13547                           
 13548                           ; BSR set to: 58
 13549                           ;mcc_generated_files/pin_manager.c: 125:     SLRCONF = 0xFF;
 13550  004BAE  6993               	setf	147,b	;volatile
 13551                           
 13552                           ; BSR set to: 58
 13553                           ;mcc_generated_files/pin_manager.c: 130:     INLVLA = 0xFF;
 13554  004BB0  6944               	setf	68,b	;volatile
 13555                           
 13556                           ; BSR set to: 58
 13557                           ;mcc_generated_files/pin_manager.c: 131:     INLVLB = 0xFF;
 13558  004BB2  6954               	setf	84,b	;volatile
 13559                           
 13560                           ; BSR set to: 58
 13561                           ;mcc_generated_files/pin_manager.c: 132:     INLVLC = 0xFF;
 13562  004BB4  6964               	setf	100,b	;volatile
 13563                           
 13564                           ; BSR set to: 58
 13565                           ;mcc_generated_files/pin_manager.c: 133:     INLVLD = 0xFF;
 13566  004BB6  6974               	setf	116,b	;volatile
 13567                           
 13568                           ;mcc_generated_files/pin_manager.c: 134:     INLVLE = 0x0F;
 13569  004BB8  0E0F               	movlw	15
 13570  004BBA  6F84               	movwf	132,b	;volatile
 13571                           
 13572                           ; BSR set to: 58
 13573                           ;mcc_generated_files/pin_manager.c: 135:     INLVLF = 0xFF;
 13574  004BBC  6994               	setf	148,b	;volatile
 13575                           
 13576                           ;mcc_generated_files/pin_manager.c: 144:     RD2PPS = 0x0E;
 13577  004BBE  0E0E               	movlw	14
 13578  004BC0  6F1A               	movwf	26,b	;volatile
 13579                           
 13580                           ;mcc_generated_files/pin_manager.c: 145:     SPI1SCKPPS = 0x13;
 13581  004BC2  0E13               	movlw	19
 13582  004BC4  6FDE               	movwf	222,b	;volatile
 13583                           
 13584                           ;mcc_generated_files/pin_manager.c: 146:     RC3PPS = 0x1E;
 13585  004BC6  0E1E               	movlw	30
 13586  004BC8  6F13               	movwf	19,b	;volatile
 13587                           
 13588                           ;mcc_generated_files/pin_manager.c: 147:     RC5PPS = 0x1F;
 13589  004BCA  0E1F               	movlw	31
 13590  004BCC  6F15               	movwf	21,b	;volatile
 13591                           
 13592                           ;mcc_generated_files/pin_manager.c: 148:     RC6PPS = 0x13;
 13593  004BCE  0E13               	movlw	19
 13594  004BD0  6F16               	movwf	22,b	;volatile
 13595                           
 13596                           ;mcc_generated_files/pin_manager.c: 149:     U1RXPPS = 0x17;
 13597  004BD2  0E17               	movlw	23
 13598  004BD4  6FE5               	movwf	229,b	;volatile
 13599                           
 13600                           ;mcc_generated_files/pin_manager.c: 150:     RF2PPS = 0x0D;
 13601  004BD6  0E0D               	movlw	13
 13602  004BD8  6F2A               	movwf	42,b	;volatile
 13603                           
 13604                           ;mcc_generated_files/pin_manager.c: 151:     SPI1SDIPPS = 0x14;
 13605  004BDA  0E14               	movlw	20
 13606  004BDC  6FDF               	movwf	223,b	;volatile
 13607                           
 13608                           ; BSR set to: 58
 13609  004BDE  0012               	return		;funcret
 13610  004BE0                     __end_of_PIN_MANAGER_Initialize:
 13611                           	callstack 0
 13612                           
 13613 ;; *************** function _OSCILLATOR_Initialize *****************
 13614 ;; Defined at:
 13615 ;;		line 67 in file "mcc_generated_files/mcc.c"
 13616 ;; Parameters:    Size  Location     Type
 13617 ;;		None
 13618 ;; Auto vars:     Size  Location     Type
 13619 ;;		None
 13620 ;; Return value:  Size  Location     Type
 13621 ;;                  1    wreg      void 
 13622 ;; Registers used:
 13623 ;;		wreg, status,2
 13624 ;; Tracked objects:
 13625 ;;		On entry : 3F/3A
 13626 ;;		On exit  : 3F/39
 13627 ;;		Unchanged: 0/0
 13628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13633 ;;Total ram usage:        0 bytes
 13634 ;; Hardware stack levels used: 1
 13635 ;; Hardware stack levels required when called: 4
 13636 ;; This function calls:
 13637 ;;		Nothing
 13638 ;; This function is called by:
 13639 ;;		_SYSTEM_Initialize
 13640 ;; This function uses a non-reentrant model
 13641 ;;
 13642                           
 13643                           	psect	text68
 13644  005CDE                     __ptext68:
 13645                           	callstack 0
 13646  005CDE                     _OSCILLATOR_Initialize:
 13647                           	callstack 25
 13648                           
 13649                           ; BSR set to: 58
 13650                           ;mcc_generated_files/mcc.c: 70:     OSCCON1 = 0x20;
 13651                           
 13652                           ; BSR set to: 58
 13653                           ;incstack = 0
 13654  005CDE  0E20               	movlw	32
 13655  005CE0  0139               	movlb	57	; () banked
 13656  005CE2  6FD9               	movwf	217,b	;volatile
 13657                           
 13658                           ;mcc_generated_files/mcc.c: 72:     OSCCON3 = 0x00;
 13659  005CE4  0E00               	movlw	0
 13660  005CE6  6FDB               	movwf	219,b	;volatile
 13661                           
 13662                           ;mcc_generated_files/mcc.c: 74:     OSCEN = 0x00;
 13663  005CE8  0E00               	movlw	0
 13664  005CEA  6FDD               	movwf	221,b	;volatile
 13665                           
 13666                           ;mcc_generated_files/mcc.c: 76:     OSCFRQ = 0x05;
 13667  005CEC  0E05               	movlw	5
 13668  005CEE  6FDF               	movwf	223,b	;volatile
 13669                           
 13670                           ;mcc_generated_files/mcc.c: 78:     OSCTUNE = 0x00;
 13671  005CF0  0E00               	movlw	0
 13672  005CF2  6FDE               	movwf	222,b	;volatile
 13673  005CF4                     l195:
 13674                           
 13675                           ; BSR set to: 57
 13676                           ;mcc_generated_files/mcc.c: 80:     while(PLLR == 0)
 13677  005CF4  B1DC               	btfsc	220,0,b	;volatile
 13678  005CF6  0012               	return	
 13679  005CF8  D7FD               	goto	l195
 13680  005CFA                     __end_of_OSCILLATOR_Initialize:
 13681                           	callstack 0
 13682                           
 13683 ;; *************** function _INTERRUPT_Initialize *****************
 13684 ;; Defined at:
 13685 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 13686 ;; Parameters:    Size  Location     Type
 13687 ;;		None
 13688 ;; Auto vars:     Size  Location     Type
 13689 ;;  state           1   20[COMRAM] _Bool 
 13690 ;; Return value:  Size  Location     Type
 13691 ;;                  1    wreg      void 
 13692 ;; Registers used:
 13693 ;;		wreg, status,2
 13694 ;; Tracked objects:
 13695 ;;		On entry : 3F/0
 13696 ;;		On exit  : 3F/39
 13697 ;;		Unchanged: 0/0
 13698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13700 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13702 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13703 ;;Total ram usage:        1 bytes
 13704 ;; Hardware stack levels used: 1
 13705 ;; Hardware stack levels required when called: 4
 13706 ;; This function calls:
 13707 ;;		Nothing
 13708 ;; This function is called by:
 13709 ;;		_SYSTEM_Initialize
 13710 ;; This function uses a non-reentrant model
 13711 ;;
 13712                           
 13713                           	psect	text69
 13714  005758                     __ptext69:
 13715                           	callstack 0
 13716  005758                     _INTERRUPT_Initialize:
 13717                           	callstack 25
 13718                           
 13719                           ; BSR set to: 0
 13720                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 13721                           
 13722                           ; BSR set to: 57
 13723                           ;incstack = 0
 13724  005758  8AD2               	bsf	210,5,c	;volatile
 13725                           
 13726                           ; BSR set to: 0
 13727                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 13728  00575A  0E00               	movlw	0
 13729  00575C  BED2               	btfsc	16338,7,c	;volatile
 13730  00575E  0E01               	movlw	1
 13731  005760  6E15               	movwf	INTERRUPT_Initialize@state^0,c
 13732                           
 13733                           ; BSR set to: 0
 13734                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 13735  005762  9ED2               	bcf	16338,7,c	;volatile
 13736                           
 13737                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 13738  005764  0E55               	movlw	85
 13739  005766  6ED4               	movwf	212,c	;volatile
 13740                           
 13741                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 13742  005768  0EAA               	movlw	170
 13743  00576A  6ED4               	movwf	212,c	;volatile
 13744                           
 13745                           ; BSR set to: 0
 13746                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 13747  00576C  90D4               	bcf	212,0,c	;volatile
 13748                           
 13749                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTBASEU = 0;
 13750  00576E  0E00               	movlw	0
 13751  005770  6ED7               	movwf	215,c	;volatile
 13752                           
 13753                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTBASEH = 0;
 13754  005772  0E00               	movlw	0
 13755  005774  6ED6               	movwf	214,c	;volatile
 13756                           
 13757                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTBASEL = 8;
 13758  005776  0E08               	movlw	8
 13759  005778  6ED5               	movwf	213,c	;volatile
 13760                           
 13761                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 13762  00577A  0E55               	movlw	85
 13763  00577C  6ED4               	movwf	212,c	;volatile
 13764                           
 13765                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 13766  00577E  0EAA               	movlw	170
 13767  005780  6ED4               	movwf	212,c	;volatile
 13768                           
 13769                           ; BSR set to: 0
 13770                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 13771  005782  80D4               	bsf	212,0,c	;volatile
 13772                           
 13773                           ; BSR set to: 0
 13774                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 13775  005784  B015               	btfsc	INTERRUPT_Initialize@state^0,0,c
 13776  005786  D002               	bra	u12205
 13777  005788  9ED2               	bcf	16338,7,c	;volatile
 13778  00578A  D001               	bra	u12206
 13779  00578C                     u12205:
 13780  00578C  8ED2               	bsf	16338,7,c	;volatile
 13781  00578E                     u12206:
 13782                           
 13783                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR3bits.U1TXIP = 1;
 13784  00578E  0139               	movlb	57	; () banked
 13785  005790  8983               	bsf	131,4,b	;volatile
 13786                           
 13787                           ; BSR set to: 57
 13788                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR3bits.U1RXIP = 1;
 13789  005792  8783               	bsf	131,3,b	;volatile
 13790                           
 13791                           ; BSR set to: 57
 13792                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR9bits.TMR6IP = 1;
 13793  005794  8189               	bsf	137,0,b	;volatile
 13794                           
 13795                           ; BSR set to: 57
 13796                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR8bits.TMR5IP = 1;
 13797  005796  8D88               	bsf	136,6,b	;volatile
 13798                           
 13799                           ; BSR set to: 57
 13800                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR1bits.ADIP = 1;
 13801  005798  8581               	bsf	129,2,b	;volatile
 13802                           
 13803                           ; BSR set to: 57
 13804  00579A  0012               	return		;funcret
 13805  00579C                     __end_of_INTERRUPT_Initialize:
 13806                           	callstack 0
 13807                           
 13808 ;; *************** function _DAC1_Initialize *****************
 13809 ;; Defined at:
 13810 ;;		line 58 in file "mcc_generated_files/dac1.c"
 13811 ;; Parameters:    Size  Location     Type
 13812 ;;		None
 13813 ;; Auto vars:     Size  Location     Type
 13814 ;;		None
 13815 ;; Return value:  Size  Location     Type
 13816 ;;                  1    wreg      void 
 13817 ;; Registers used:
 13818 ;;		wreg, status,2
 13819 ;; Tracked objects:
 13820 ;;		On entry : 3B/3D
 13821 ;;		On exit  : 3F/3E
 13822 ;;		Unchanged: 0/0
 13823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13828 ;;Total ram usage:        0 bytes
 13829 ;; Hardware stack levels used: 1
 13830 ;; Hardware stack levels required when called: 4
 13831 ;; This function calls:
 13832 ;;		Nothing
 13833 ;; This function is called by:
 13834 ;;		_SYSTEM_Initialize
 13835 ;; This function uses a non-reentrant model
 13836 ;;
 13837                           
 13838                           	psect	text70
 13839  005E46                     __ptext70:
 13840                           	callstack 0
 13841  005E46                     _DAC1_Initialize:
 13842                           	callstack 25
 13843                           
 13844                           ;mcc_generated_files/dac1.c: 61:     DAC1CON0 = 0xA4;
 13845                           
 13846                           ; BSR set to: 57
 13847                           ;incstack = 0
 13848  005E46  0EA4               	movlw	164
 13849  005E48  013E               	movlb	62	; () banked
 13850  005E4A  6F9E               	movwf	158,b	;volatile
 13851                           
 13852                           ;mcc_generated_files/dac1.c: 63:     DAC1CON1 = 0x1F;
 13853  005E4C  0E1F               	movlw	31
 13854  005E4E  6F9C               	movwf	156,b	;volatile
 13855                           
 13856                           ; BSR set to: 62
 13857  005E50  0012               	return		;funcret
 13858  005E52                     __end_of_DAC1_Initialize:
 13859                           	callstack 0
 13860                           
 13861 ;; *************** function _ADCC_Initialize *****************
 13862 ;; Defined at:
 13863 ;;		line 64 in file "mcc_generated_files/adcc.c"
 13864 ;; Parameters:    Size  Location     Type
 13865 ;;		None
 13866 ;; Auto vars:     Size  Location     Type
 13867 ;;		None
 13868 ;; Return value:  Size  Location     Type
 13869 ;;                  1    wreg      void 
 13870 ;; Registers used:
 13871 ;;		wreg, status,2, status,0, cstack
 13872 ;; Tracked objects:
 13873 ;;		On entry : 3B/3D
 13874 ;;		On exit  : 3B/39
 13875 ;;		Unchanged: 0/0
 13876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13881 ;;Total ram usage:        0 bytes
 13882 ;; Hardware stack levels used: 1
 13883 ;; Hardware stack levels required when called: 5
 13884 ;; This function calls:
 13885 ;;		_ADCC_SetADIInterruptHandler
 13886 ;; This function is called by:
 13887 ;;		_SYSTEM_Initialize
 13888 ;; This function uses a non-reentrant model
 13889 ;;
 13890                           
 13891                           	psect	text71
 13892  005392                     __ptext71:
 13893                           	callstack 0
 13894  005392                     _ADCC_Initialize:
 13895                           	callstack 24
 13896                           
 13897                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 13898                           
 13899                           ; BSR set to: 62
 13900                           ;incstack = 0
 13901  005392  0E00               	movlw	0
 13902  005394  013E               	movlb	62	; () banked
 13903  005396  6FDE               	movwf	222,b	;volatile
 13904                           
 13905                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 13906  005398  0E00               	movlw	0
 13907  00539A  6FDF               	movwf	223,b	;volatile
 13908                           
 13909                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 13910  00539C  0E00               	movlw	0
 13911  00539E  6FE0               	movwf	224,b	;volatile
 13912                           
 13913                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 13914  0053A0  0E00               	movlw	0
 13915  0053A2  6FE1               	movwf	225,b	;volatile
 13916                           
 13917                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 13918  0053A4  0E00               	movlw	0
 13919  0053A6  6FE4               	movwf	228,b	;volatile
 13920                           
 13921                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 13922  0053A8  0E00               	movlw	0
 13923  0053AA  6FE5               	movwf	229,b	;volatile
 13924                           
 13925                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 13926  0053AC  0E00               	movlw	0
 13927  0053AE  6FEA               	movwf	234,b	;volatile
 13928                           
 13929                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 13930  0053B0  0E00               	movlw	0
 13931  0053B2  6FEC               	movwf	236,b	;volatile
 13932                           
 13933                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 13934  0053B4  0E00               	movlw	0
 13935  0053B6  6FF1               	movwf	241,b	;volatile
 13936                           
 13937                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x10;
 13938  0053B8  0E10               	movlw	16
 13939  0053BA  6FF3               	movwf	243,b	;volatile
 13940                           
 13941                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 13942  0053BC  0E00               	movlw	0
 13943  0053BE  6FF4               	movwf	244,b	;volatile
 13944                           
 13945                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 13946  0053C0  0E00               	movlw	0
 13947  0053C2  6FF5               	movwf	245,b	;volatile
 13948                           
 13949                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 13950  0053C4  0E00               	movlw	0
 13951  0053C6  6FF6               	movwf	246,b	;volatile
 13952                           
 13953                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 13954  0053C8  0E00               	movlw	0
 13955  0053CA  6FF7               	movwf	247,b	;volatile
 13956                           
 13957                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 13958  0053CC  0E00               	movlw	0
 13959  0053CE  6FF9               	movwf	249,b	;volatile
 13960                           
 13961                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x00;
 13962  0053D0  0E00               	movlw	0
 13963  0053D2  6FFA               	movwf	250,b	;volatile
 13964                           
 13965                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x20;
 13966  0053D4  0E20               	movlw	32
 13967  0053D6  6FFB               	movwf	251,b	;volatile
 13968                           
 13969                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 13970  0053D8  0E00               	movlw	0
 13971  0053DA  6FFC               	movwf	252,b	;volatile
 13972                           
 13973                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x02;
 13974  0053DC  0E02               	movlw	2
 13975  0053DE  6FFD               	movwf	253,b	;volatile
 13976                           
 13977                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x07;
 13978  0053E0  0E07               	movlw	7
 13979  0053E2  6FFE               	movwf	254,b	;volatile
 13980                           
 13981                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x0F;
 13982  0053E4  0E0F               	movlw	15
 13983  0053E6  6FFF               	movwf	255,b	;volatile
 13984                           
 13985                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0x84;
 13986  0053E8  0E84               	movlw	132
 13987  0053EA  6FF8               	movwf	248,b	;volatile
 13988                           
 13989                           ; BSR set to: 62
 13990                           ;mcc_generated_files/adcc.c: 113:     PIR1bits.ADIF = 0;
 13991  0053EC  0139               	movlb	57	; () banked
 13992  0053EE  95A1               	bcf	161,2,b	;volatile
 13993                           
 13994                           ; BSR set to: 57
 13995                           ;mcc_generated_files/adcc.c: 115:     PIE1bits.ADIE = 1;
 13996  0053F0  8591               	bsf	145,2,b	;volatile
 13997                           
 13998                           ; BSR set to: 57
 13999                           ;mcc_generated_files/adcc.c: 117:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 14000  0053F2  0E74               	movlw	low _ADCC_DefaultInterruptHandler
 14001  0053F4  6E15               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler^0,c
 14002  0053F6  0E5E               	movlw	high _ADCC_DefaultInterruptHandler
 14003  0053F8  6E16               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)^0,c
 14004  0053FA  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 14005  0053FC  6E17               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+2)^0,c
 14006  0053FE  EC1C  F02F         	call	_ADCC_SetADIInterruptHandler	;wreg free
 14007  005402  0012               	return		;funcret
 14008  005404                     __end_of_ADCC_Initialize:
 14009                           	callstack 0
 14010                           
 14011 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 14012 ;; Defined at:
 14013 ;;		line 316 in file "mcc_generated_files/adcc.c"
 14014 ;; Parameters:    Size  Location     Type
 14015 ;;  InterruptHan    3   20[COMRAM] PTR FTN()void 
 14016 ;;		 -> Adc_Isr(1), ADCC_DefaultInterruptHandler(1), 
 14017 ;; Auto vars:     Size  Location     Type
 14018 ;;		None
 14019 ;; Return value:  Size  Location     Type
 14020 ;;                  1    wreg      void 
 14021 ;; Registers used:
 14022 ;;		wreg, status,2, status,0
 14023 ;; Tracked objects:
 14024 ;;		On entry : 3B/3D
 14025 ;;		On exit  : 3B/39
 14026 ;;		Unchanged: 3A/0
 14027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14028 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14031 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14032 ;;Total ram usage:        3 bytes
 14033 ;; Hardware stack levels used: 1
 14034 ;; Hardware stack levels required when called: 4
 14035 ;; This function calls:
 14036 ;;		Nothing
 14037 ;; This function is called by:
 14038 ;;		_ADCC_Initialize
 14039 ;;		_main
 14040 ;; This function uses a non-reentrant model
 14041 ;;
 14042                           
 14043                           	psect	text72
 14044  005E38                     __ptext72:
 14045                           	callstack 0
 14046  005E38                     _ADCC_SetADIInterruptHandler:
 14047                           	callstack 24
 14048                           
 14049                           ;mcc_generated_files/adcc.c: 317:     ADCC_ADI_InterruptHandler = InterruptHandler;
 14050                           
 14051                           ;incstack = 0
 14052  005E38  C015  F0EC         	movff	ADCC_SetADIInterruptHandler@InterruptHandler,_ADCC_ADI_InterruptHandler
 14053  005E3C  C016  F0ED         	movff	ADCC_SetADIInterruptHandler@InterruptHandler+1,_ADCC_ADI_InterruptHandler+1
 14054  005E40  C017  F0EE         	movff	ADCC_SetADIInterruptHandler@InterruptHandler+2,_ADCC_ADI_InterruptHandler+2
 14055  005E44  0012               	return		;funcret
 14056  005E46                     __end_of_ADCC_SetADIInterruptHandler:
 14057                           	callstack 0
 14058                           
 14059 ;; *************** function _PWM6_LoadDutyValue *****************
 14060 ;; Defined at:
 14061 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 14062 ;; Parameters:    Size  Location     Type
 14063 ;;  dutyValue       2   20[COMRAM] unsigned short 
 14064 ;; Auto vars:     Size  Location     Type
 14065 ;;		None
 14066 ;; Return value:  Size  Location     Type
 14067 ;;                  1    wreg      void 
 14068 ;; Registers used:
 14069 ;;		wreg, status,2, status,0
 14070 ;; Tracked objects:
 14071 ;;		On entry : 3B/3D
 14072 ;;		On exit  : 3B/39
 14073 ;;		Unchanged: 3A/0
 14074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14075 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14077 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14078 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14079 ;;Total ram usage:        4 bytes
 14080 ;; Hardware stack levels used: 1
 14081 ;; Hardware stack levels required when called: 4
 14082 ;; This function calls:
 14083 ;;		Nothing
 14084 ;; This function is called by:
 14085 ;;		_main
 14086 ;; This function uses a non-reentrant model
 14087 ;;
 14088                           
 14089                           	psect	text73
 14090  005A34                     __ptext73:
 14091                           	callstack 0
 14092  005A34                     _PWM6_LoadDutyValue:
 14093                           	callstack 26
 14094                           
 14095                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 14096                           
 14097                           ;incstack = 0
 14098  005A34  C015  F017         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
 14099  005A38  C016  F018         	movff	PWM6_LoadDutyValue@dutyValue+1,??_PWM6_LoadDutyValue+1
 14100  005A3C  90D8               	bcf	status,0,c
 14101  005A3E  3218               	rrcf	(??_PWM6_LoadDutyValue+1)^0,f,c
 14102  005A40  3217               	rrcf	??_PWM6_LoadDutyValue^0,f,c
 14103  005A42  90D8               	bcf	status,0,c
 14104  005A44  3218               	rrcf	(??_PWM6_LoadDutyValue+1)^0,f,c
 14105  005A46  3217               	rrcf	??_PWM6_LoadDutyValue^0,f,c
 14106  005A48  5017               	movf	??_PWM6_LoadDutyValue^0,w,c
 14107  005A4A  6E69               	movwf	105,c	;volatile
 14108                           
 14109                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
 14110  005A4C  C015  F017         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
 14111  005A50  0E03               	movlw	3
 14112  005A52  1617               	andwf	??_PWM6_LoadDutyValue^0,f,c
 14113  005A54  0E06               	movlw	6
 14114  005A56  6E18               	movwf	(??_PWM6_LoadDutyValue+1)^0,c
 14115  005A58                     u12305:
 14116  005A58  90D8               	bcf	status,0,c
 14117  005A5A  3617               	rlcf	??_PWM6_LoadDutyValue^0,f,c
 14118  005A5C  2E18               	decfsz	(??_PWM6_LoadDutyValue+1)^0,f,c
 14119  005A5E  D7FC               	goto	u12305
 14120  005A60  5017               	movf	??_PWM6_LoadDutyValue^0,w,c
 14121  005A62  6E68               	movwf	104,c	;volatile
 14122  005A64  0012               	return		;funcret
 14123  005A66                     __end_of_PWM6_LoadDutyValue:
 14124                           	callstack 0
 14125                           
 14126 ;; *************** function _PWM5_LoadDutyValue *****************
 14127 ;; Defined at:
 14128 ;;		line 74 in file "mcc_generated_files/pwm5.c"
 14129 ;; Parameters:    Size  Location     Type
 14130 ;;  dutyValue       2   20[COMRAM] unsigned short 
 14131 ;; Auto vars:     Size  Location     Type
 14132 ;;		None
 14133 ;; Return value:  Size  Location     Type
 14134 ;;                  1    wreg      void 
 14135 ;; Registers used:
 14136 ;;		wreg, status,2, status,0
 14137 ;; Tracked objects:
 14138 ;;		On entry : 3B/3D
 14139 ;;		On exit  : 3B/39
 14140 ;;		Unchanged: 3A/0
 14141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14142 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14144 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14145 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14146 ;;Total ram usage:        4 bytes
 14147 ;; Hardware stack levels used: 1
 14148 ;; Hardware stack levels required when called: 4
 14149 ;; This function calls:
 14150 ;;		Nothing
 14151 ;; This function is called by:
 14152 ;;		_main
 14153 ;; This function uses a non-reentrant model
 14154 ;;
 14155                           
 14156                           	psect	text74
 14157  005A66                     __ptext74:
 14158                           	callstack 0
 14159  005A66                     _PWM5_LoadDutyValue:
 14160                           	callstack 26
 14161                           
 14162                           ;mcc_generated_files/pwm5.c: 74:  void PWM5_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm5.c: 75:  {;mcc_generated_files/pwm5.c: 77:      PWM5DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 14163                           
 14164                           ;incstack = 0
 14165  005A66  C015  F017         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
 14166  005A6A  C016  F018         	movff	PWM5_LoadDutyValue@dutyValue+1,??_PWM5_LoadDutyValue+1
 14167  005A6E  90D8               	bcf	status,0,c
 14168  005A70  3218               	rrcf	(??_PWM5_LoadDutyValue+1)^0,f,c
 14169  005A72  3217               	rrcf	??_PWM5_LoadDutyValue^0,f,c
 14170  005A74  90D8               	bcf	status,0,c
 14171  005A76  3218               	rrcf	(??_PWM5_LoadDutyValue+1)^0,f,c
 14172  005A78  3217               	rrcf	??_PWM5_LoadDutyValue^0,f,c
 14173  005A7A  5017               	movf	??_PWM5_LoadDutyValue^0,w,c
 14174  005A7C  6E6D               	movwf	109,c	;volatile
 14175                           
 14176                           ;mcc_generated_files/pwm5.c: 80:      PWM5DCL = (dutyValue & 0x0003)<<6;
 14177  005A7E  C015  F017         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
 14178  005A82  0E03               	movlw	3
 14179  005A84  1617               	andwf	??_PWM5_LoadDutyValue^0,f,c
 14180  005A86  0E06               	movlw	6
 14181  005A88  6E18               	movwf	(??_PWM5_LoadDutyValue+1)^0,c
 14182  005A8A                     u12295:
 14183  005A8A  90D8               	bcf	status,0,c
 14184  005A8C  3617               	rlcf	??_PWM5_LoadDutyValue^0,f,c
 14185  005A8E  2E18               	decfsz	(??_PWM5_LoadDutyValue+1)^0,f,c
 14186  005A90  D7FC               	goto	u12295
 14187  005A92  5017               	movf	??_PWM5_LoadDutyValue^0,w,c
 14188  005A94  6E6C               	movwf	108,c	;volatile
 14189  005A96  0012               	return		;funcret
 14190  005A98                     __end_of_PWM5_LoadDutyValue:
 14191                           	callstack 0
 14192                           
 14193 ;; *************** function _DAC1_SetOutput *****************
 14194 ;; Defined at:
 14195 ;;		line 66 in file "mcc_generated_files/dac1.c"
 14196 ;; Parameters:    Size  Location     Type
 14197 ;;  inputData       1    wreg     unsigned char 
 14198 ;; Auto vars:     Size  Location     Type
 14199 ;;  inputData       1   20[COMRAM] unsigned char 
 14200 ;; Return value:  Size  Location     Type
 14201 ;;                  1    wreg      void 
 14202 ;; Registers used:
 14203 ;;		wreg
 14204 ;; Tracked objects:
 14205 ;;		On entry : 0/3D
 14206 ;;		On exit  : 0/0
 14207 ;;		Unchanged: 0/0
 14208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14210 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14212 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14213 ;;Total ram usage:        1 bytes
 14214 ;; Hardware stack levels used: 1
 14215 ;; Hardware stack levels required when called: 4
 14216 ;; This function calls:
 14217 ;;		Nothing
 14218 ;; This function is called by:
 14219 ;;		_main
 14220 ;; This function uses a non-reentrant model
 14221 ;;
 14222                           
 14223                           	psect	text75
 14224  005E5C                     __ptext75:
 14225                           	callstack 0
 14226  005E5C                     _DAC1_SetOutput:
 14227                           	callstack 26
 14228                           
 14229                           ;incstack = 0
 14230                           ;DAC1_SetOutput@inputData stored from wreg
 14231  005E5C  6E15               	movwf	DAC1_SetOutput@inputData^0,c
 14232                           
 14233                           ;mcc_generated_files/dac1.c: 66: void DAC1_SetOutput(uint8_t inputData);mcc_generated_fi
      +                          les/dac1.c: 67: {;mcc_generated_files/dac1.c: 68:     DAC1CON1 = inputData;
 14234  005E5E  0060  F057  FE9C   	movff	DAC1_SetOutput@inputData,16028	;volatile
 14235  005E64  0012               	return		;funcret
 14236  005E66                     __end_of_DAC1_SetOutput:
 14237                           	callstack 0
 14238                           
 14239 ;; *************** function _DAC1_GetOutput *****************
 14240 ;; Defined at:
 14241 ;;		line 71 in file "mcc_generated_files/dac1.c"
 14242 ;; Parameters:    Size  Location     Type
 14243 ;;		None
 14244 ;; Auto vars:     Size  Location     Type
 14245 ;;		None
 14246 ;; Return value:  Size  Location     Type
 14247 ;;                  1    wreg      unsigned char 
 14248 ;; Registers used:
 14249 ;;		wreg, status,2
 14250 ;; Tracked objects:
 14251 ;;		On entry : 3F/2
 14252 ;;		On exit  : 3F/3E
 14253 ;;		Unchanged: 0/0
 14254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14259 ;;Total ram usage:        0 bytes
 14260 ;; Hardware stack levels used: 1
 14261 ;; Hardware stack levels required when called: 4
 14262 ;; This function calls:
 14263 ;;		Nothing
 14264 ;; This function is called by:
 14265 ;;		_main
 14266 ;; This function uses a non-reentrant model
 14267 ;;
 14268                           
 14269                           	psect	text76
 14270  005E66                     __ptext76:
 14271                           	callstack 0
 14272  005E66                     _DAC1_GetOutput:
 14273                           	callstack 26
 14274                           
 14275                           ; BSR set to: 2
 14276                           ;mcc_generated_files/dac1.c: 73:     return DAC1CON1;
 14277                           
 14278                           ;incstack = 0
 14279  005E66  013E               	movlb	62	; () banked
 14280  005E68  519C               	movf	156,w,b	;volatile
 14281                           
 14282                           ; BSR set to: 62
 14283  005E6A  0012               	return		;funcret
 14284  005E6C                     __end_of_DAC1_GetOutput:
 14285                           	callstack 0
 14286                           
 14287 ;; *************** function _ADCC_ISR *****************
 14288 ;; Defined at:
 14289 ;;		line 307 in file "mcc_generated_files/adcc.c"
 14290 ;; Parameters:    Size  Location     Type
 14291 ;;		None
 14292 ;; Auto vars:     Size  Location     Type
 14293 ;;		None
 14294 ;; Return value:  Size  Location     Type
 14295 ;;                  1    wreg      void 
 14296 ;; Registers used:
 14297 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 14298 ;; Tracked objects:
 14299 ;;		On entry : 0/0
 14300 ;;		On exit  : 0/0
 14301 ;;		Unchanged: 0/0
 14302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14305 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14306 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14307 ;;Total ram usage:        2 bytes
 14308 ;; Hardware stack levels used: 1
 14309 ;; Hardware stack levels required when called: 2
 14310 ;; This function calls:
 14311 ;;		Absolute function
 14312 ;;		_ADCC_DefaultInterruptHandler
 14313 ;;		_Adc_Isr
 14314 ;; This function is called by:
 14315 ;;		Interrupt level 2
 14316 ;; This function uses a non-reentrant model
 14317 ;;
 14318                           
 14319                           	psect	text77
 14320  00579C                     __ptext77:
 14321                           	callstack 0
 14322  00579C                     _ADCC_ISR:
 14323                           	callstack 17
 14324                           
 14325                           ; BSR set to: 62
 14326                           ;incstack = 0
 14327  00579C  006F FFE8  F006    	movff	pclath,??_ADCC_ISR
 14328  0057A2  006F FFEC  F007    	movff	pclatu,??_ADCC_ISR+1
 14329                           
 14330                           ;mcc_generated_files/adcc.c: 310:     PIR1bits.ADIF = 0;
 14331  0057A8  0139               	movlb	57	; () banked
 14332  0057AA  95A1               	bcf	161,2,b	;volatile
 14333                           
 14334                           ; BSR set to: 57
 14335                           ;mcc_generated_files/adcc.c: 312:     if (ADCC_ADI_InterruptHandler)
 14336  0057AC  0100               	movlb	0	; () banked
 14337  0057AE  51EC               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 14338  0057B0  11ED               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 14339  0057B2  11EE               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 14340  0057B4  B4D8               	btfsc	status,2,c
 14341  0057B6  D00C               	goto	i2u634_49
 14342                           
 14343                           ; BSR set to: 0
 14344                           ;mcc_generated_files/adcc.c: 313:             ADCC_ADI_InterruptHandler();
 14345  0057B8  D801               	call	i2u634_48
 14346  0057BA  D00A               	goto	i2u634_49
 14347  0057BC                     i2u634_48:
 14348  0057BC  0005               	push	
 14349  0057BE  6EFA               	movwf	pclath,c
 14350  0057C0  51EC               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 14351  0057C2  6EFD               	movwf	tosl,c
 14352  0057C4  51ED               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 14353  0057C6  6EFE               	movwf	tosh,c
 14354  0057C8  51EE               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 14355  0057CA  6EFF               	movwf	tosu,c
 14356  0057CC  50FA               	movf	pclath,w,c
 14357  0057CE  0012               	return		;indir
 14358  0057D0                     i2u634_49:
 14359  0057D0  0060  F01F  FFFB   	movff	??_ADCC_ISR+1,pclatu
 14360  0057D6  0060  F01B  FFFA   	movff	??_ADCC_ISR,pclath
 14361  0057DC  0011               	retfie		f
 14362  0057DE                     __end_of_ADCC_ISR:
 14363                           	callstack 0
 14364                           
 14365 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 14366 ;; Defined at:
 14367 ;;		line 320 in file "mcc_generated_files/adcc.c"
 14368 ;; Parameters:    Size  Location     Type
 14369 ;;		None
 14370 ;; Auto vars:     Size  Location     Type
 14371 ;;		None
 14372 ;; Return value:  Size  Location     Type
 14373 ;;                  1    wreg      void 
 14374 ;; Registers used:
 14375 ;;		None
 14376 ;; Tracked objects:
 14377 ;;		On entry : 3F/0
 14378 ;;		On exit  : 3F/0
 14379 ;;		Unchanged: 3F/0
 14380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14385 ;;Total ram usage:        0 bytes
 14386 ;; Hardware stack levels used: 1
 14387 ;; This function calls:
 14388 ;;		Nothing
 14389 ;; This function is called by:
 14390 ;;		_ADCC_Initialize
 14391 ;;		_ADCC_ISR
 14392 ;; This function uses a non-reentrant model
 14393 ;;
 14394                           
 14395                           	psect	text78
 14396  005E74                     __ptext78:
 14397                           	callstack 0
 14398  005E74                     _ADCC_DefaultInterruptHandler:
 14399                           	callstack 18
 14400                           
 14401                           ; BSR set to: 0
 14402                           
 14403                           ;incstack = 0
 14404  005E74  0012               	return		;funcret
 14405  005E76                     __end_of_ADCC_DefaultInterruptHandler:
 14406                           	callstack 0
 14407                           
 14408 ;; *************** function _Adc_Isr *****************
 14409 ;; Defined at:
 14410 ;;		line 83 in file "main.c"
 14411 ;; Parameters:    Size  Location     Type
 14412 ;;		None
 14413 ;; Auto vars:     Size  Location     Type
 14414 ;;		None
 14415 ;; Return value:  Size  Location     Type
 14416 ;;                  1    wreg      void 
 14417 ;; Registers used:
 14418 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14419 ;; Tracked objects:
 14420 ;;		On entry : 3F/0
 14421 ;;		On exit  : 3F/0
 14422 ;;		Unchanged: 0/0
 14423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14426 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14427 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14428 ;;Total ram usage:        1 bytes
 14429 ;; Hardware stack levels used: 1
 14430 ;; Hardware stack levels required when called: 1
 14431 ;; This function calls:
 14432 ;;		_ADCC_GetConversionResult
 14433 ;; This function is called by:
 14434 ;;		_main
 14435 ;;		_ADCC_ISR
 14436 ;; This function uses a non-reentrant model
 14437 ;;
 14438                           
 14439                           	psect	text79
 14440  00598A                     __ptext79:
 14441                           	callstack 0
 14442  00598A                     _Adc_Isr:
 14443                           	callstack 17
 14444                           
 14445                           ; BSR set to: 0
 14446                           ;main.c: 85:  ana[adc_chan] = ADCC_GetConversionResult();
 14447                           
 14448                           ; BSR set to: 0
 14449                           ;incstack = 0
 14450  00598A  ECD2  F02E         	call	_ADCC_GetConversionResult	;wreg free
 14451  00598E  5044               	movf	_adc_chan^0,w,c
 14452  005990  0D02               	mullw	2
 14453  005992  50F3               	movf	243,w,c
 14454  005994  0F39               	addlw	low _ana
 14455  005996  6ED9               	movwf	fsr2l,c
 14456  005998  6ADA               	clrf	fsr2h,c
 14457  00599A  0060  F007  FFDE   	movff	?_ADCC_GetConversionResult,postinc2
 14458  0059A0  0060  F00B  FFDD   	movff	?_ADCC_GetConversionResult+1,postdec2
 14459                           
 14460                           ; BSR set to: 62
 14461                           ;main.c: 86:  if (adc_chan++ >= 2) {
 14462  0059A6  2A44               	incf	_adc_chan^0,f,c	;volatile
 14463  0059A8  0444               	decf	_adc_chan^0,w,c	;volatile
 14464  0059AA  6E05               	movwf	??_Adc_Isr^0,c
 14465  0059AC  0E01               	movlw	1
 14466  0059AE  6405               	cpfsgt	??_Adc_Isr^0,c
 14467  0059B0  D002               	goto	i2l6381
 14468                           
 14469                           ; BSR set to: 62
 14470                           ;main.c: 87:   adc_chan = 0;
 14471  0059B2  0E00               	movlw	0
 14472  0059B4  6E44               	movwf	_adc_chan^0,c	;volatile
 14473  0059B6                     i2l6381:
 14474                           
 14475                           ; BSR set to: 62
 14476                           ;main.c: 89:  ADPCH = adc_chan;
 14477  0059B6  0060  F113  FEF1   	movff	_adc_chan,16113	;volatile
 14478                           
 14479                           ;main.c: 93:  adc_tick = 1;
 14480  0059BC  0E01               	movlw	1
 14481  0059BE  0100               	movlb	0	; () banked
 14482  0059C0  6FFC               	movwf	_adc_tick& (0+255),b	;volatile
 14483                           
 14484                           ; BSR set to: 0
 14485  0059C2  0012               	return		;funcret
 14486  0059C4                     __end_of_Adc_Isr:
 14487                           	callstack 0
 14488                           
 14489 ;; *************** function _ADCC_GetConversionResult *****************
 14490 ;; Defined at:
 14491 ;;		line 139 in file "mcc_generated_files/adcc.c"
 14492 ;; Parameters:    Size  Location     Type
 14493 ;;		None
 14494 ;; Auto vars:     Size  Location     Type
 14495 ;;		None
 14496 ;; Return value:  Size  Location     Type
 14497 ;;                  2    0[COMRAM] unsigned short 
 14498 ;; Registers used:
 14499 ;;		wreg, status,2, status,0
 14500 ;; Tracked objects:
 14501 ;;		On entry : 3F/0
 14502 ;;		On exit  : 3F/3E
 14503 ;;		Unchanged: 0/0
 14504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14505 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14507 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14508 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14509 ;;Total ram usage:        4 bytes
 14510 ;; Hardware stack levels used: 1
 14511 ;; This function calls:
 14512 ;;		Nothing
 14513 ;; This function is called by:
 14514 ;;		_Adc_Isr
 14515 ;; This function uses a non-reentrant model
 14516 ;;
 14517                           
 14518                           	psect	text80
 14519  005DA4                     __ptext80:
 14520                           	callstack 0
 14521  005DA4                     _ADCC_GetConversionResult:
 14522                           	callstack 17
 14523                           
 14524                           ; BSR set to: 0
 14525                           ;mcc_generated_files/adcc.c: 142:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 14526                           
 14527                           ; BSR set to: 0
 14528                           ;incstack = 0
 14529  005DA4  013E               	movlb	62	; () banked
 14530  005DA6  51F0               	movf	240,w,b	;volatile
 14531  005DA8  6E04               	movwf	(??_ADCC_GetConversionResult+1)^0,c
 14532  005DAA  6A03               	clrf	??_ADCC_GetConversionResult^0,c
 14533  005DAC  51EF               	movf	239,w,b	;volatile
 14534  005DAE  2403               	addwf	??_ADCC_GetConversionResult^0,w,c
 14535  005DB0  6E01               	movwf	?_ADCC_GetConversionResult^0,c
 14536  005DB2  0E00               	movlw	0
 14537  005DB4  2004               	addwfc	(??_ADCC_GetConversionResult+1)^0,w,c
 14538  005DB6  6E02               	movwf	(?_ADCC_GetConversionResult+1)^0,c
 14539                           
 14540                           ; BSR set to: 62
 14541  005DB8  0012               	return		;funcret
 14542  005DBA                     __end_of_ADCC_GetConversionResult:
 14543                           	callstack 0
 14544                           
 14545 ;; *************** function _TMR6_ISR *****************
 14546 ;; Defined at:
 14547 ;;		line 166 in file "mcc_generated_files/tmr6.c"
 14548 ;; Parameters:    Size  Location     Type
 14549 ;;		None
 14550 ;; Auto vars:     Size  Location     Type
 14551 ;;		None
 14552 ;; Return value:  Size  Location     Type
 14553 ;;                  1    wreg      void 
 14554 ;; Registers used:
 14555 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 14556 ;; Tracked objects:
 14557 ;;		On entry : 0/0
 14558 ;;		On exit  : 0/0
 14559 ;;		Unchanged: 0/0
 14560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14563 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14564 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14565 ;;Total ram usage:        2 bytes
 14566 ;; Hardware stack levels used: 1
 14567 ;; Hardware stack levels required when called: 2
 14568 ;; This function calls:
 14569 ;;		_TMR6_CallBack
 14570 ;; This function is called by:
 14571 ;;		Interrupt level 2
 14572 ;; This function uses a non-reentrant model
 14573 ;;
 14574                           
 14575                           	psect	text81
 14576  0059C4                     __ptext81:
 14577                           	callstack 0
 14578  0059C4                     _TMR6_ISR:
 14579                           	callstack 17
 14580                           
 14581                           ; BSR set to: 62
 14582                           ;incstack = 0
 14583  0059C4  006F FFE8  F009    	movff	pclath,??_TMR6_ISR
 14584  0059CA  006F FFEC  F00A    	movff	pclatu,??_TMR6_ISR+1
 14585                           
 14586                           ;mcc_generated_files/tmr6.c: 168:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr6.c: 171:     PIR9bits.TMR6IF = 0;
 14587  0059D0  0139               	movlb	57	; () banked
 14588  0059D2  91A9               	bcf	169,0,b	;volatile
 14589                           
 14590                           ; BSR set to: 57
 14591                           ;mcc_generated_files/tmr6.c: 174:     if (++CountCallBack >= 23)
 14592  0059D4  4A41               	infsnz	TMR6_ISR@CountCallBack^0,f,c	;volatile
 14593  0059D6  2A42               	incf	(TMR6_ISR@CountCallBack+1)^0,f,c	;volatile
 14594  0059D8  5042               	movf	(TMR6_ISR@CountCallBack+1)^0,w,c	;volatile
 14595  0059DA  E104               	bnz	i2u635_40
 14596  0059DC  0E17               	movlw	23
 14597  0059DE  5C41               	subwf	TMR6_ISR@CountCallBack^0,w,c	;volatile
 14598  0059E0  A0D8               	btfss	status,0,c
 14599  0059E2  D006               	goto	i2l464
 14600  0059E4                     i2u635_40:
 14601                           
 14602                           ; BSR set to: 57
 14603                           ;mcc_generated_files/tmr6.c: 175:     {;mcc_generated_files/tmr6.c: 177:         TMR6_Ca
      +                          llBack();
 14604  0059E4  ECFA  F02D         	call	_TMR6_CallBack	;wreg free
 14605                           
 14606                           ;mcc_generated_files/tmr6.c: 180:         CountCallBack = 0;
 14607  0059E8  0E00               	movlw	0
 14608  0059EA  6E42               	movwf	(TMR6_ISR@CountCallBack+1)^0,c	;volatile
 14609  0059EC  0E00               	movlw	0
 14610  0059EE  6E41               	movwf	TMR6_ISR@CountCallBack^0,c	;volatile
 14611  0059F0                     i2l464:
 14612  0059F0  0060  F02B  FFFB   	movff	??_TMR6_ISR+1,pclatu
 14613  0059F6  0060  F027  FFFA   	movff	??_TMR6_ISR,pclath
 14614  0059FC  0011               	retfie		f
 14615  0059FE                     __end_of_TMR6_ISR:
 14616                           	callstack 0
 14617                           
 14618 ;; *************** function _TMR6_CallBack *****************
 14619 ;; Defined at:
 14620 ;;		line 184 in file "mcc_generated_files/tmr6.c"
 14621 ;; Parameters:    Size  Location     Type
 14622 ;;		None
 14623 ;; Auto vars:     Size  Location     Type
 14624 ;;		None
 14625 ;; Return value:  Size  Location     Type
 14626 ;;                  1    wreg      void 
 14627 ;; Registers used:
 14628 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 14629 ;; Tracked objects:
 14630 ;;		On entry : 3F/39
 14631 ;;		On exit  : 0/0
 14632 ;;		Unchanged: 0/0
 14633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14638 ;;Total ram usage:        0 bytes
 14639 ;; Hardware stack levels used: 1
 14640 ;; Hardware stack levels required when called: 1
 14641 ;; This function calls:
 14642 ;;		Absolute function
 14643 ;;		_Led_Blink
 14644 ;;		_TMR6_DefaultInterruptHandler
 14645 ;; This function is called by:
 14646 ;;		_TMR6_ISR
 14647 ;; This function uses a non-reentrant model
 14648 ;;
 14649                           
 14650                           	psect	text82
 14651  005BF4                     __ptext82:
 14652                           	callstack 0
 14653  005BF4                     _TMR6_CallBack:
 14654                           	callstack 17
 14655                           
 14656                           ; BSR set to: 57
 14657                           ;mcc_generated_files/tmr6.c: 188:     if(TMR6_InterruptHandler)
 14658                           
 14659                           ;incstack = 0
 14660  005BF4  0100               	movlb	0	; () banked
 14661  005BF6  51E9               	movf	_TMR6_InterruptHandler& (0+255),w,b
 14662  005BF8  11EA               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 14663  005BFA  11EB               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 14664  005BFC  B4D8               	btfsc	status,2,c
 14665  005BFE  0012               	return	
 14666                           
 14667                           ; BSR set to: 0
 14668                           ;mcc_generated_files/tmr6.c: 189:     {;mcc_generated_files/tmr6.c: 190:         TMR6_In
      +                          terruptHandler();
 14669  005C00  D801               	call	i2u605_48
 14670  005C02  0012               	return	
 14671  005C04                     i2u605_48:
 14672  005C04  0005               	push	
 14673  005C06  6EFA               	movwf	pclath,c
 14674  005C08  51E9               	movf	_TMR6_InterruptHandler& (0+255),w,b
 14675  005C0A  6EFD               	movwf	tosl,c
 14676  005C0C  51EA               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 14677  005C0E  6EFE               	movwf	tosh,c
 14678  005C10  51EB               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 14679  005C12  6EFF               	movwf	tosu,c
 14680  005C14  50FA               	movf	pclath,w,c
 14681  005C16  0012               	return		;indir
 14682  005C18                     __end_of_TMR6_CallBack:
 14683                           	callstack 0
 14684                           
 14685 ;; *************** function _Led_Blink *****************
 14686 ;; Defined at:
 14687 ;;		line 67 in file "main.c"
 14688 ;; Parameters:    Size  Location     Type
 14689 ;;		None
 14690 ;; Auto vars:     Size  Location     Type
 14691 ;;		None
 14692 ;; Return value:  Size  Location     Type
 14693 ;;                  1    wreg      void 
 14694 ;; Registers used:
 14695 ;;		wreg, status,2, status,0
 14696 ;; Tracked objects:
 14697 ;;		On entry : 3F/0
 14698 ;;		On exit  : 3F/0
 14699 ;;		Unchanged: 0/0
 14700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14703 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14704 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14705 ;;Total ram usage:        1 bytes
 14706 ;; Hardware stack levels used: 1
 14707 ;; This function calls:
 14708 ;;		Nothing
 14709 ;; This function is called by:
 14710 ;;		_main
 14711 ;;		_TMR6_CallBack
 14712 ;; This function uses a non-reentrant model
 14713 ;;
 14714                           
 14715                           	psect	text83
 14716  005CC0                     __ptext83:
 14717                           	callstack 0
 14718  005CC0                     _Led_Blink:
 14719                           	callstack 17
 14720                           
 14721                           ; BSR set to: 0
 14722                           
 14723                           ; BSR set to: 0
 14724                           
 14725                           ;incstack = 0
 14726                           ;main.c: 69:  do { LATEbits.LATE0 = ~LATEbits.LATE0; } while(0);
 14727  005CC0  A0BE               	btfss	190,0,c	;volatile
 14728  005CC2  D002               	goto	i2u596_40
 14729  005CC4  0E01               	movlw	1
 14730  005CC6  D001               	goto	i2u596_46
 14731  005CC8                     i2u596_40:
 14732  005CC8  0E00               	movlw	0
 14733  005CCA                     i2u596_46:
 14734  005CCA  0AFF               	xorlw	255
 14735  005CCC  6E08               	movwf	??_Led_Blink^0,c
 14736  005CCE  50BE               	movf	190,w,c	;volatile
 14737  005CD0  1808               	xorwf	??_Led_Blink^0,w,c
 14738  005CD2  0BFE               	andlw	-2
 14739  005CD4  1808               	xorwf	??_Led_Blink^0,w,c
 14740  005CD6  6EBE               	movwf	190,c	;volatile
 14741                           
 14742                           ; BSR set to: 0
 14743                           ;main.c: 73:  disp_tick = 1;
 14744  005CD8  0E01               	movlw	1
 14745  005CDA  6FFD               	movwf	_disp_tick& (0+255),b	;volatile
 14746                           
 14747                           ; BSR set to: 0
 14748  005CDC  0012               	return		;funcret
 14749  005CDE                     __end_of_Led_Blink:
 14750                           	callstack 0
 14751                           
 14752 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 14753 ;; Defined at:
 14754 ;;		line 198 in file "mcc_generated_files/tmr6.c"
 14755 ;; Parameters:    Size  Location     Type
 14756 ;;		None
 14757 ;; Auto vars:     Size  Location     Type
 14758 ;;		None
 14759 ;; Return value:  Size  Location     Type
 14760 ;;                  1    wreg      void 
 14761 ;; Registers used:
 14762 ;;		None
 14763 ;; Tracked objects:
 14764 ;;		On entry : 3F/0
 14765 ;;		On exit  : 3F/0
 14766 ;;		Unchanged: 3F/0
 14767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14771 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14772 ;;Total ram usage:        0 bytes
 14773 ;; Hardware stack levels used: 1
 14774 ;; This function calls:
 14775 ;;		Nothing
 14776 ;; This function is called by:
 14777 ;;		_TMR6_Initialize
 14778 ;;		_TMR6_CallBack
 14779 ;; This function uses a non-reentrant model
 14780 ;;
 14781                           
 14782                           	psect	text84
 14783  005E76                     __ptext84:
 14784                           	callstack 0
 14785  005E76                     _TMR6_DefaultInterruptHandler:
 14786                           	callstack 17
 14787                           
 14788                           ; BSR set to: 0
 14789                           
 14790                           ; BSR set to: 0
 14791                           ;incstack = 0
 14792  005E76  0012               	return		;funcret
 14793  005E78                     __end_of_TMR6_DefaultInterruptHandler:
 14794                           	callstack 0
 14795                           
 14796 ;; *************** function _Default_ISR *****************
 14797 ;; Defined at:
 14798 ;;		line 79 in file "mcc_generated_files/interrupt_manager.c"
 14799 ;; Parameters:    Size  Location     Type
 14800 ;;		None
 14801 ;; Auto vars:     Size  Location     Type
 14802 ;;		None
 14803 ;; Return value:  Size  Location     Type
 14804 ;;                  1    wreg      void 
 14805 ;; Registers used:
 14806 ;;		None
 14807 ;; Tracked objects:
 14808 ;;		On entry : 0/0
 14809 ;;		On exit  : 0/0
 14810 ;;		Unchanged: 0/0
 14811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14816 ;;Total ram usage:        0 bytes
 14817 ;; Hardware stack levels used: 1
 14818 ;; This function calls:
 14819 ;;		Nothing
 14820 ;; This function is called by:
 14821 ;;		Interrupt level 2
 14822 ;; This function uses a non-reentrant model
 14823 ;;
 14824                           
 14825                           	psect	text85
 14826  005E78                     __ptext85:
 14827                           	callstack 0
 14828  005E78                     _Default_ISR:
 14829                           	callstack 19
 14830                           
 14831                           ; BSR set to: 0
 14832                           ;incstack = 0
 14833  005E78  0011               	retfie		f
 14834  005E7A                     __end_of_Default_ISR:
 14835                           	callstack 0
 14836                           
 14837 ;; *************** function _UART1_tx_vect_isr *****************
 14838 ;; Defined at:
 14839 ;;		line 235 in file "mcc_generated_files/uart1.c"
 14840 ;; Parameters:    Size  Location     Type
 14841 ;;		None
 14842 ;; Auto vars:     Size  Location     Type
 14843 ;;		None
 14844 ;; Return value:  Size  Location     Type
 14845 ;;                  1    wreg      void 
 14846 ;; Registers used:
 14847 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 14848 ;; Tracked objects:
 14849 ;;		On entry : 0/0
 14850 ;;		On exit  : 0/0
 14851 ;;		Unchanged: 0/0
 14852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14855 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14856 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14857 ;;Total ram usage:        2 bytes
 14858 ;; Hardware stack levels used: 1
 14859 ;; Hardware stack levels required when called: 1
 14860 ;; This function calls:
 14861 ;;		Absolute function
 14862 ;;		_UART1_Transmit_ISR
 14863 ;; This function is called by:
 14864 ;;		Interrupt level 2
 14865 ;; This function uses a non-reentrant model
 14866 ;;
 14867                           
 14868                           	psect	text86
 14869  00585C                     __ptext86:
 14870                           	callstack 0
 14871  00585C                     _UART1_tx_vect_isr:
 14872                           	callstack 18
 14873                           
 14874                           ;incstack = 0
 14875  00585C  006F FFE8  F00B    	movff	pclath,??_UART1_tx_vect_isr
 14876  005862  006F FFEC  F00C    	movff	pclatu,??_UART1_tx_vect_isr+1
 14877                           
 14878                           ;mcc_generated_files/uart1.c: 237:     if(UART1_TxInterruptHandler)
 14879  005868  0100               	movlb	0	; () banked
 14880  00586A  51EF               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 14881  00586C  11F0               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 14882  00586E  11F1               	iorwf	(_UART1_TxInterruptHandler+2)& (0+255),w,b
 14883  005870  B4D8               	btfsc	status,2,c
 14884  005872  D00C               	goto	i2u637_49
 14885                           
 14886                           ; BSR set to: 0
 14887                           ;mcc_generated_files/uart1.c: 238:     {;mcc_generated_files/uart1.c: 239:         UART1
      +                          _TxInterruptHandler();
 14888  005874  D801               	call	i2u637_48
 14889  005876  D00A               	goto	i2u637_49
 14890  005878                     i2u637_48:
 14891  005878  0005               	push	
 14892  00587A  6EFA               	movwf	pclath,c
 14893  00587C  51EF               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 14894  00587E  6EFD               	movwf	tosl,c
 14895  005880  51F0               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 14896  005882  6EFE               	movwf	tosh,c
 14897  005884  51F1               	movf	(_UART1_TxInterruptHandler+2)& (0+255),w,b
 14898  005886  6EFF               	movwf	tosu,c
 14899  005888  50FA               	movf	pclath,w,c
 14900  00588A  0012               	return		;indir
 14901  00588C                     i2u637_49:
 14902  00588C  0060  F033  FFFB   	movff	??_UART1_tx_vect_isr+1,pclatu
 14903  005892  0060  F02F  FFFA   	movff	??_UART1_tx_vect_isr,pclath
 14904  005898  0011               	retfie		f
 14905  00589A                     __end_of_UART1_tx_vect_isr:
 14906                           	callstack 0
 14907                           
 14908 ;; *************** function _UART1_Transmit_ISR *****************
 14909 ;; Defined at:
 14910 ;;		line 253 in file "mcc_generated_files/uart1.c"
 14911 ;; Parameters:    Size  Location     Type
 14912 ;;		None
 14913 ;; Auto vars:     Size  Location     Type
 14914 ;;		None
 14915 ;; Return value:  Size  Location     Type
 14916 ;;                  1    wreg      void 
 14917 ;; Registers used:
 14918 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14919 ;; Tracked objects:
 14920 ;;		On entry : 3F/0
 14921 ;;		On exit  : 3B/39
 14922 ;;		Unchanged: 0/0
 14923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14928 ;;Total ram usage:        0 bytes
 14929 ;; Hardware stack levels used: 1
 14930 ;; This function calls:
 14931 ;;		Nothing
 14932 ;; This function is called by:
 14933 ;;		_UART1_Initialize
 14934 ;;		_UART1_tx_vect_isr
 14935 ;; This function uses a non-reentrant model
 14936 ;;
 14937                           
 14938                           	psect	text87
 14939  005B54                     __ptext87:
 14940                           	callstack 0
 14941  005B54                     _UART1_Transmit_ISR:
 14942                           	callstack 18
 14943                           
 14944                           ; BSR set to: 0
 14945                           ;mcc_generated_files/uart1.c: 256:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
 14946                           
 14947                           ;incstack = 0
 14948  005B54  0E40               	movlw	64
 14949  005B56  6049               	cpfslt	_uart1TxBufferRemaining^0,c
 14950  005B58  D011               	goto	i2l650
 14951                           
 14952                           ; BSR set to: 0
 14953                           ;mcc_generated_files/uart1.c: 257:     {;mcc_generated_files/uart1.c: 258:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
 14954  005B5A  0E40               	movlw	low _uart1TxBuffer
 14955  005B5C  244A               	addwf	_uart1TxTail^0,w,c	;volatile
 14956  005B5E  6ED9               	movwf	fsr2l,c
 14957  005B60  6ADA               	clrf	fsr2h,c
 14958  005B62  0E01               	movlw	high _uart1TxBuffer
 14959  005B64  22DA               	addwfc	fsr2h,f,c
 14960  005B66  50DF               	movf	indf2,w,c
 14961  005B68  013D               	movlb	61	; () banked
 14962  005B6A  6FEA               	movwf	234,b	;volatile
 14963                           
 14964                           ; BSR set to: 61
 14965  005B6C  2A4A               	incf	_uart1TxTail^0,f,c	;volatile
 14966                           
 14967                           ; BSR set to: 61
 14968                           ;mcc_generated_files/uart1.c: 259:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
 14969  005B6E  0E3F               	movlw	63
 14970  005B70  644A               	cpfsgt	_uart1TxTail^0,c
 14971  005B72  D002               	goto	i2l6345
 14972                           
 14973                           ; BSR set to: 61
 14974                           ;mcc_generated_files/uart1.c: 260:         {;mcc_generated_files/uart1.c: 261:          
      +                             uart1TxTail = 0;
 14975  005B74  0E00               	movlw	0
 14976  005B76  6E4A               	movwf	_uart1TxTail^0,c	;volatile
 14977  005B78                     i2l6345:
 14978                           
 14979                           ; BSR set to: 61
 14980                           ;mcc_generated_files/uart1.c: 263:         uart1TxBufferRemaining++;
 14981  005B78  2A49               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 14982                           
 14983                           ;mcc_generated_files/uart1.c: 264:     }
 14984  005B7A  0012               	return	
 14985  005B7C                     i2l650:
 14986                           
 14987                           ; BSR set to: 0
 14988                           ;mcc_generated_files/uart1.c: 266:     {;mcc_generated_files/uart1.c: 267:         PIE3b
      +                          its.U1TXIE = 0;
 14989  005B7C  0139               	movlb	57	; () banked
 14990  005B7E  9993               	bcf	147,4,b	;volatile
 14991  005B80  0012               	return		;funcret
 14992  005B82                     __end_of_UART1_Transmit_ISR:
 14993                           	callstack 0
 14994                           
 14995 ;; *************** function _UART1_rx_vect_isr *****************
 14996 ;; Defined at:
 14997 ;;		line 243 in file "mcc_generated_files/uart1.c"
 14998 ;; Parameters:    Size  Location     Type
 14999 ;;		None
 15000 ;; Auto vars:     Size  Location     Type
 15001 ;;		None
 15002 ;; Return value:  Size  Location     Type
 15003 ;;                  1    wreg      void 
 15004 ;; Registers used:
 15005 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 15006 ;; Tracked objects:
 15007 ;;		On entry : 0/0
 15008 ;;		On exit  : 0/0
 15009 ;;		Unchanged: 0/0
 15010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15013 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15014 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15015 ;;Total ram usage:        2 bytes
 15016 ;; Hardware stack levels used: 1
 15017 ;; Hardware stack levels required when called: 3
 15018 ;; This function calls:
 15019 ;;		Absolute function
 15020 ;;		_UART1_Receive_ISR
 15021 ;; This function is called by:
 15022 ;;		Interrupt level 2
 15023 ;; This function uses a non-reentrant model
 15024 ;;
 15025                           
 15026                           	psect	text88
 15027  00589C                     __ptext88:
 15028                           	callstack 0
 15029  00589C                     _UART1_rx_vect_isr:
 15030                           	callstack 16
 15031                           
 15032                           ;incstack = 0
 15033  00589C  006F FFE8  F00D    	movff	pclath,??_UART1_rx_vect_isr
 15034  0058A2  006F FFEC  F00E    	movff	pclatu,??_UART1_rx_vect_isr+1
 15035                           
 15036                           ;mcc_generated_files/uart1.c: 245:     if(UART1_RxInterruptHandler)
 15037  0058A8  0100               	movlb	0	; () banked
 15038  0058AA  51F2               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 15039  0058AC  11F3               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 15040  0058AE  11F4               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 15041  0058B0  B4D8               	btfsc	status,2,c
 15042  0058B2  D00C               	goto	i2u639_49
 15043                           
 15044                           ; BSR set to: 0
 15045                           ;mcc_generated_files/uart1.c: 246:     {;mcc_generated_files/uart1.c: 247:         UART1
      +                          _RxInterruptHandler();
 15046  0058B4  D801               	call	i2u639_48
 15047  0058B6  D00A               	goto	i2u639_49
 15048  0058B8                     i2u639_48:
 15049  0058B8  0005               	push	
 15050  0058BA  6EFA               	movwf	pclath,c
 15051  0058BC  51F2               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 15052  0058BE  6EFD               	movwf	tosl,c
 15053  0058C0  51F3               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 15054  0058C2  6EFE               	movwf	tosh,c
 15055  0058C4  51F4               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 15056  0058C6  6EFF               	movwf	tosu,c
 15057  0058C8  50FA               	movf	pclath,w,c
 15058  0058CA  0012               	return		;indir
 15059  0058CC                     i2u639_49:
 15060  0058CC  0060  F03B  FFFB   	movff	??_UART1_rx_vect_isr+1,pclatu
 15061  0058D2  0060  F037  FFFA   	movff	??_UART1_rx_vect_isr,pclath
 15062  0058D8  0011               	retfie		f
 15063  0058DA                     __end_of_UART1_rx_vect_isr:
 15064                           	callstack 0
 15065                           
 15066 ;; *************** function _UART1_Receive_ISR *****************
 15067 ;; Defined at:
 15068 ;;		line 273 in file "mcc_generated_files/uart1.c"
 15069 ;; Parameters:    Size  Location     Type
 15070 ;;		None
 15071 ;; Auto vars:     Size  Location     Type
 15072 ;;		None
 15073 ;; Return value:  Size  Location     Type
 15074 ;;                  1    wreg      void 
 15075 ;; Registers used:
 15076 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 15077 ;; Tracked objects:
 15078 ;;		On entry : 3F/0
 15079 ;;		On exit  : 0/0
 15080 ;;		Unchanged: 0/0
 15081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15086 ;;Total ram usage:        0 bytes
 15087 ;; Hardware stack levels used: 1
 15088 ;; Hardware stack levels required when called: 2
 15089 ;; This function calls:
 15090 ;;		Absolute function
 15091 ;;		_UART1_DefaultErrorHandler
 15092 ;;		_UART1_DefaultFramingErrorHandler
 15093 ;;		_UART1_DefaultOverrunErrorHandler
 15094 ;;		_UART1_RxDataHandler
 15095 ;; This function is called by:
 15096 ;;		_UART1_Initialize
 15097 ;;		_UART1_rx_vect_isr
 15098 ;; This function uses a non-reentrant model
 15099 ;;
 15100                           
 15101                           	psect	text89
 15102  005034                     __ptext89:
 15103                           	callstack 0
 15104  005034                     _UART1_Receive_ISR:
 15105                           	callstack 16
 15106                           
 15107                           ; BSR set to: 0
 15108                           ;mcc_generated_files/uart1.c: 276:     uart1RxStatusBuffer[uart1RxHead].status = 0;
 15109                           
 15110                           ;incstack = 0
 15111  005034  0E00               	movlw	low _uart1RxStatusBuffer
 15112  005036  2448               	addwf	_uart1RxHead^0,w,c	;volatile
 15113  005038  6ED9               	movwf	fsr2l,c
 15114  00503A  6ADA               	clrf	fsr2h,c
 15115  00503C  0E01               	movlw	high _uart1RxStatusBuffer
 15116  00503E  22DA               	addwfc	fsr2h,f,c
 15117  005040  0E00               	movlw	0
 15118  005042  6EDF               	movwf	indf2,c
 15119                           
 15120                           ; BSR set to: 0
 15121                           ;mcc_generated_files/uart1.c: 278:     if(U1ERRIRbits.FERIF){
 15122  005044  013D               	movlb	61	; () banked
 15123  005046  A7F9               	btfss	249,3,b	;volatile
 15124  005048  D015               	goto	i2u609_49
 15125                           
 15126                           ; BSR set to: 61
 15127                           ;mcc_generated_files/uart1.c: 279:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
 15128  00504A  0E00               	movlw	low _uart1RxStatusBuffer
 15129  00504C  2448               	addwf	_uart1RxHead^0,w,c	;volatile
 15130  00504E  6ED9               	movwf	fsr2l,c
 15131  005050  6ADA               	clrf	fsr2h,c
 15132  005052  0E01               	movlw	high _uart1RxStatusBuffer
 15133  005054  22DA               	addwfc	fsr2h,f,c
 15134  005056  0101               	movlb	1	; () banked
 15135  005058  82DF               	bsf	indf2,1,c
 15136                           
 15137                           ; BSR set to: 1
 15138                           ;mcc_generated_files/uart1.c: 280:         UART1_FramingErrorHandler();
 15139  00505A  D801               	call	i2u609_48
 15140  00505C  D00B               	goto	i2u609_49
 15141  00505E                     i2u609_48:
 15142  00505E  0005               	push	
 15143  005060  6EFA               	movwf	pclath,c
 15144  005062  0100               	movlb	0	; () banked
 15145  005064  51E6               	movf	_UART1_FramingErrorHandler& (0+255),w,b
 15146  005066  6EFD               	movwf	tosl,c
 15147  005068  51E7               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
 15148  00506A  6EFE               	movwf	tosh,c
 15149  00506C  51E8               	movf	(_UART1_FramingErrorHandler+2)& (0+255),w,b
 15150  00506E  6EFF               	movwf	tosu,c
 15151  005070  50FA               	movf	pclath,w,c
 15152  005072  0012               	return		;indir
 15153  005074                     i2u609_49:
 15154                           
 15155                           ;mcc_generated_files/uart1.c: 283:     if(U1ERRIRbits.RXFOIF){
 15156  005074  013D               	movlb	61	; () banked
 15157  005076  A3F9               	btfss	249,1,b	;volatile
 15158  005078  D015               	goto	i2u611_49
 15159                           
 15160                           ; BSR set to: 61
 15161                           ;mcc_generated_files/uart1.c: 284:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
 15162  00507A  0E00               	movlw	low _uart1RxStatusBuffer
 15163  00507C  2448               	addwf	_uart1RxHead^0,w,c	;volatile
 15164  00507E  6ED9               	movwf	fsr2l,c
 15165  005080  6ADA               	clrf	fsr2h,c
 15166  005082  0E01               	movlw	high _uart1RxStatusBuffer
 15167  005084  22DA               	addwfc	fsr2h,f,c
 15168  005086  0101               	movlb	1	; () banked
 15169  005088  84DF               	bsf	indf2,2,c
 15170                           
 15171                           ; BSR set to: 1
 15172                           ;mcc_generated_files/uart1.c: 285:         UART1_OverrunErrorHandler();
 15173  00508A  D801               	call	i2u611_48
 15174  00508C  D00B               	goto	i2u611_49
 15175  00508E                     i2u611_48:
 15176  00508E  0005               	push	
 15177  005090  6EFA               	movwf	pclath,c
 15178  005092  0100               	movlb	0	; () banked
 15179  005094  51E3               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
 15180  005096  6EFD               	movwf	tosl,c
 15181  005098  51E4               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
 15182  00509A  6EFE               	movwf	tosh,c
 15183  00509C  51E5               	movf	(_UART1_OverrunErrorHandler+2)& (0+255),w,b
 15184  00509E  6EFF               	movwf	tosu,c
 15185  0050A0  50FA               	movf	pclath,w,c
 15186  0050A2  0012               	return		;indir
 15187  0050A4                     i2u611_49:
 15188                           
 15189                           ;mcc_generated_files/uart1.c: 288:     if(uart1RxStatusBuffer[uart1RxHead].status){
 15190  0050A4  0E00               	movlw	low _uart1RxStatusBuffer
 15191  0050A6  2448               	addwf	_uart1RxHead^0,w,c	;volatile
 15192  0050A8  6ED9               	movwf	fsr2l,c
 15193  0050AA  6ADA               	clrf	fsr2h,c
 15194  0050AC  0E01               	movlw	high _uart1RxStatusBuffer
 15195  0050AE  22DA               	addwfc	fsr2h,f,c
 15196  0050B0  50DF               	movf	indf2,w,c
 15197  0050B2  B4D8               	btfsc	status,2,c
 15198  0050B4  D00D               	goto	i2l6365
 15199                           
 15200                           ;mcc_generated_files/uart1.c: 289:         UART1_ErrorHandler();
 15201  0050B6  D801               	call	i2u613_48
 15202  0050B8  0012               	return	
 15203  0050BA                     i2u613_48:
 15204  0050BA  0005               	push	
 15205  0050BC  6EFA               	movwf	pclath,c
 15206  0050BE  0100               	movlb	0	; () banked
 15207  0050C0  51E0               	movf	_UART1_ErrorHandler& (0+255),w,b
 15208  0050C2  6EFD               	movwf	tosl,c
 15209  0050C4  51E1               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
 15210  0050C6  6EFE               	movwf	tosh,c
 15211  0050C8  51E2               	movf	(_UART1_ErrorHandler+2)& (0+255),w,b
 15212  0050CA  6EFF               	movwf	tosu,c
 15213  0050CC  50FA               	movf	pclath,w,c
 15214  0050CE  0012               	return		;indir
 15215  0050D0                     i2l6365:
 15216                           
 15217                           ;mcc_generated_files/uart1.c: 291:         UART1_RxDataHandler();
 15218  0050D0  EC40  F02E         	call	_UART1_RxDataHandler	;wreg free
 15219  0050D4  0012               	return		;funcret
 15220  0050D6                     __end_of_UART1_Receive_ISR:
 15221                           	callstack 0
 15222                           
 15223 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
 15224 ;; Defined at:
 15225 ;;		line 309 in file "mcc_generated_files/uart1.c"
 15226 ;; Parameters:    Size  Location     Type
 15227 ;;		None
 15228 ;; Auto vars:     Size  Location     Type
 15229 ;;		None
 15230 ;; Return value:  Size  Location     Type
 15231 ;;                  1    wreg      void 
 15232 ;; Registers used:
 15233 ;;		None
 15234 ;; Tracked objects:
 15235 ;;		On entry : 3F/0
 15236 ;;		On exit  : 3F/0
 15237 ;;		Unchanged: 3F/0
 15238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15243 ;;Total ram usage:        0 bytes
 15244 ;; Hardware stack levels used: 1
 15245 ;; This function calls:
 15246 ;;		Nothing
 15247 ;; This function is called by:
 15248 ;;		_UART1_Initialize
 15249 ;;		_UART1_Receive_ISR
 15250 ;; This function uses a non-reentrant model
 15251 ;;
 15252                           
 15253                           	psect	text90
 15254  005E7A                     __ptext90:
 15255                           	callstack 0
 15256  005E7A                     _UART1_DefaultOverrunErrorHandler:
 15257                           	callstack 17
 15258                           
 15259                           ; BSR set to: 0
 15260                           
 15261                           ;incstack = 0
 15262  005E7A  0012               	return		;funcret
 15263  005E7C                     __end_of_UART1_DefaultOverrunErrorHandler:
 15264                           	callstack 0
 15265                           
 15266 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
 15267 ;; Defined at:
 15268 ;;		line 307 in file "mcc_generated_files/uart1.c"
 15269 ;; Parameters:    Size  Location     Type
 15270 ;;		None
 15271 ;; Auto vars:     Size  Location     Type
 15272 ;;		None
 15273 ;; Return value:  Size  Location     Type
 15274 ;;                  1    wreg      void 
 15275 ;; Registers used:
 15276 ;;		None
 15277 ;; Tracked objects:
 15278 ;;		On entry : 3F/0
 15279 ;;		On exit  : 3F/0
 15280 ;;		Unchanged: 3F/0
 15281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15286 ;;Total ram usage:        0 bytes
 15287 ;; Hardware stack levels used: 1
 15288 ;; This function calls:
 15289 ;;		Nothing
 15290 ;; This function is called by:
 15291 ;;		_UART1_Initialize
 15292 ;;		_UART1_Receive_ISR
 15293 ;; This function uses a non-reentrant model
 15294 ;;
 15295                           
 15296                           	psect	text91
 15297  005E7C                     __ptext91:
 15298                           	callstack 0
 15299  005E7C                     _UART1_DefaultFramingErrorHandler:
 15300                           	callstack 17
 15301                           
 15302                           ; BSR set to: 0
 15303                           
 15304                           ; BSR set to: 0
 15305                           ;incstack = 0
 15306  005E7C  0012               	return		;funcret
 15307  005E7E                     __end_of_UART1_DefaultFramingErrorHandler:
 15308                           	callstack 0
 15309                           
 15310 ;; *************** function _UART1_DefaultErrorHandler *****************
 15311 ;; Defined at:
 15312 ;;		line 311 in file "mcc_generated_files/uart1.c"
 15313 ;; Parameters:    Size  Location     Type
 15314 ;;		None
 15315 ;; Auto vars:     Size  Location     Type
 15316 ;;		None
 15317 ;; Return value:  Size  Location     Type
 15318 ;;                  1    wreg      void 
 15319 ;; Registers used:
 15320 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15321 ;; Tracked objects:
 15322 ;;		On entry : 3F/0
 15323 ;;		On exit  : 0/0
 15324 ;;		Unchanged: 0/0
 15325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15330 ;;Total ram usage:        0 bytes
 15331 ;; Hardware stack levels used: 1
 15332 ;; Hardware stack levels required when called: 1
 15333 ;; This function calls:
 15334 ;;		_UART1_RxDataHandler
 15335 ;; This function is called by:
 15336 ;;		_UART1_Initialize
 15337 ;;		_UART1_Receive_ISR
 15338 ;; This function uses a non-reentrant model
 15339 ;;
 15340                           
 15341                           	psect	text92
 15342  005E6C                     __ptext92:
 15343                           	callstack 0
 15344  005E6C                     _UART1_DefaultErrorHandler:
 15345                           	callstack 16
 15346                           
 15347                           ; BSR set to: 0
 15348                           ;mcc_generated_files/uart1.c: 312:     UART1_RxDataHandler();
 15349                           
 15350                           ; BSR set to: 0
 15351                           ;incstack = 0
 15352  005E6C  EC40  F02E         	call	_UART1_RxDataHandler	;wreg free
 15353  005E70  0012               	return		;funcret
 15354  005E72                     __end_of_UART1_DefaultErrorHandler:
 15355                           	callstack 0
 15356                           
 15357 ;; *************** function _UART1_RxDataHandler *****************
 15358 ;; Defined at:
 15359 ;;		line 297 in file "mcc_generated_files/uart1.c"
 15360 ;; Parameters:    Size  Location     Type
 15361 ;;		None
 15362 ;; Auto vars:     Size  Location     Type
 15363 ;;		None
 15364 ;; Return value:  Size  Location     Type
 15365 ;;                  1    wreg      void 
 15366 ;; Registers used:
 15367 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15368 ;; Tracked objects:
 15369 ;;		On entry : 0/3D
 15370 ;;		On exit  : 0/0
 15371 ;;		Unchanged: 0/0
 15372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15377 ;;Total ram usage:        0 bytes
 15378 ;; Hardware stack levels used: 1
 15379 ;; This function calls:
 15380 ;;		Nothing
 15381 ;; This function is called by:
 15382 ;;		_UART1_Receive_ISR
 15383 ;;		_UART1_DefaultErrorHandler
 15384 ;; This function uses a non-reentrant model
 15385 ;;
 15386                           
 15387                           	psect	text93
 15388  005C80                     __ptext93:
 15389                           	callstack 0
 15390  005C80                     _UART1_RxDataHandler:
 15391                           	callstack 17
 15392                           
 15393                           ;mcc_generated_files/uart1.c: 299:     uart1RxBuffer[uart1RxHead++] = U1RXB;
 15394                           
 15395                           ;incstack = 0
 15396  005C80  0E00               	movlw	low _uart1RxBuffer
 15397  005C82  2448               	addwf	_uart1RxHead^0,w,c	;volatile
 15398  005C84  6ED9               	movwf	fsr2l,c
 15399  005C86  6ADA               	clrf	fsr2h,c
 15400  005C88  0E02               	movlw	high _uart1RxBuffer
 15401  005C8A  22DA               	addwfc	fsr2h,f,c
 15402  005C8C  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 15403  005C92  2A48               	incf	_uart1RxHead^0,f,c	;volatile
 15404                           
 15405                           ;mcc_generated_files/uart1.c: 300:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 15406  005C94  0E3F               	movlw	63
 15407  005C96  6448               	cpfsgt	_uart1RxHead^0,c
 15408  005C98  D002               	goto	i2l6049
 15409                           
 15410                           ;mcc_generated_files/uart1.c: 301:     {;mcc_generated_files/uart1.c: 302:         uart1
      +                          RxHead = 0;
 15411  005C9A  0E00               	movlw	0
 15412  005C9C  6E48               	movwf	_uart1RxHead^0,c	;volatile
 15413  005C9E                     i2l6049:
 15414                           
 15415                           ;mcc_generated_files/uart1.c: 304:     uart1RxCount++;
 15416  005C9E  2A46               	incf	_uart1RxCount^0,f,c	;volatile
 15417  005CA0  0012               	return		;funcret
 15418  005CA2                     __end_of_UART1_RxDataHandler:
 15419                           	callstack 0
 15420                           
 15421 ;; *************** function _TMR5_ISR *****************
 15422 ;; Defined at:
 15423 ;;		line 165 in file "mcc_generated_files/tmr5.c"
 15424 ;; Parameters:    Size  Location     Type
 15425 ;;		None
 15426 ;; Auto vars:     Size  Location     Type
 15427 ;;		None
 15428 ;; Return value:  Size  Location     Type
 15429 ;;                  1    wreg      void 
 15430 ;; Registers used:
 15431 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 15432 ;; Tracked objects:
 15433 ;;		On entry : 0/0
 15434 ;;		On exit  : 0/0
 15435 ;;		Unchanged: 0/0
 15436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15439 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15440 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15441 ;;Total ram usage:        2 bytes
 15442 ;; Hardware stack levels used: 1
 15443 ;; Hardware stack levels required when called: 1
 15444 ;; This function calls:
 15445 ;;		Absolute function
 15446 ;;		_TMR5_DefaultInterruptHandler
 15447 ;;		_TMR5_WriteTimer
 15448 ;;		_Timers_Isr
 15449 ;; This function is called by:
 15450 ;;		Interrupt level 2
 15451 ;; This function uses a non-reentrant model
 15452 ;;
 15453                           
 15454                           	psect	text94
 15455  005630                     __ptext94:
 15456                           	callstack 0
 15457  005630                     _TMR5_ISR:
 15458                           	callstack 18
 15459                           
 15460                           ;incstack = 0
 15461  005630  006F FFE8  F013    	movff	pclath,??_TMR5_ISR
 15462  005636  006F FFEC  F014    	movff	pclatu,??_TMR5_ISR+1
 15463                           
 15464                           ;mcc_generated_files/tmr5.c: 169:     PIR8bits.TMR5IF = 0;
 15465  00563C  0139               	movlb	57	; () banked
 15466  00563E  9DA8               	bcf	168,6,b	;volatile
 15467                           
 15468                           ; BSR set to: 57
 15469                           ;mcc_generated_files/tmr5.c: 170:     TMR5_WriteTimer(timer5ReloadVal);
 15470  005640  C03F  F00F         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 15471  005644  C040  F010         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 15472  005648  EC0C  F02E         	call	_TMR5_WriteTimer	;wreg free
 15473                           
 15474                           ; BSR set to: 57
 15475                           ;mcc_generated_files/tmr5.c: 172:     if(TMR5_InterruptHandler)
 15476  00564C  0100               	movlb	0	; () banked
 15477  00564E  51DD               	movf	_TMR5_InterruptHandler& (0+255),w,b
 15478  005650  11DE               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 15479  005652  11DF               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 15480  005654  B4D8               	btfsc	status,2,c
 15481  005656  D00C               	goto	i2u641_49
 15482                           
 15483                           ; BSR set to: 0
 15484                           ;mcc_generated_files/tmr5.c: 173:     {;mcc_generated_files/tmr5.c: 174:         TMR5_In
      +                          terruptHandler();
 15485  005658  D801               	call	i2u641_48
 15486  00565A  D00A               	goto	i2u641_49
 15487  00565C                     i2u641_48:
 15488  00565C  0005               	push	
 15489  00565E  6EFA               	movwf	pclath,c
 15490  005660  51DD               	movf	_TMR5_InterruptHandler& (0+255),w,b
 15491  005662  6EFD               	movwf	tosl,c
 15492  005664  51DE               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 15493  005666  6EFE               	movwf	tosh,c
 15494  005668  51DF               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 15495  00566A  6EFF               	movwf	tosu,c
 15496  00566C  50FA               	movf	pclath,w,c
 15497  00566E  0012               	return		;indir
 15498  005670                     i2u641_49:
 15499  005670  0060  F053  FFFB   	movff	??_TMR5_ISR+1,pclatu
 15500  005676  0060  F04F  FFFA   	movff	??_TMR5_ISR,pclath
 15501  00567C  0011               	retfie		f
 15502  00567E                     __end_of_TMR5_ISR:
 15503                           	callstack 0
 15504                           
 15505 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 15506 ;; Defined at:
 15507 ;;		line 183 in file "mcc_generated_files/tmr5.c"
 15508 ;; Parameters:    Size  Location     Type
 15509 ;;		None
 15510 ;; Auto vars:     Size  Location     Type
 15511 ;;		None
 15512 ;; Return value:  Size  Location     Type
 15513 ;;                  1    wreg      void 
 15514 ;; Registers used:
 15515 ;;		None
 15516 ;; Tracked objects:
 15517 ;;		On entry : 3F/0
 15518 ;;		On exit  : 3F/0
 15519 ;;		Unchanged: 3F/0
 15520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15525 ;;Total ram usage:        0 bytes
 15526 ;; Hardware stack levels used: 1
 15527 ;; This function calls:
 15528 ;;		Nothing
 15529 ;; This function is called by:
 15530 ;;		_TMR5_Initialize
 15531 ;;		_TMR5_ISR
 15532 ;; This function uses a non-reentrant model
 15533 ;;
 15534                           
 15535                           	psect	text95
 15536  005E7E                     __ptext95:
 15537                           	callstack 0
 15538  005E7E                     _TMR5_DefaultInterruptHandler:
 15539                           	callstack 18
 15540                           
 15541                           ; BSR set to: 0
 15542                           
 15543                           ;incstack = 0
 15544  005E7E  0012               	return		;funcret
 15545  005E80                     __end_of_TMR5_DefaultInterruptHandler:
 15546                           	callstack 0
 15547                           
 15548 ;; *************** function _Timers_Isr *****************
 15549 ;; Defined at:
 15550 ;;		line 48 in file "timers.c"
 15551 ;; Parameters:    Size  Location     Type
 15552 ;;		None
 15553 ;; Auto vars:     Size  Location     Type
 15554 ;;  i               2   16[COMRAM] int 
 15555 ;; Return value:  Size  Location     Type
 15556 ;;                  1    wreg      void 
 15557 ;; Registers used:
 15558 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15559 ;; Tracked objects:
 15560 ;;		On entry : 3F/0
 15561 ;;		On exit  : 3F/0
 15562 ;;		Unchanged: 3F/0
 15563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15565 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15566 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15567 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15568 ;;Total ram usage:        4 bytes
 15569 ;; Hardware stack levels used: 1
 15570 ;; This function calls:
 15571 ;;		Nothing
 15572 ;; This function is called by:
 15573 ;;		_main
 15574 ;;		_TMR5_ISR
 15575 ;; This function uses a non-reentrant model
 15576 ;;
 15577                           
 15578                           	psect	text96
 15579  00558E                     __ptext96:
 15580                           	callstack 0
 15581  00558E                     _Timers_Isr:
 15582                           	callstack 18
 15583                           
 15584                           ; BSR set to: 0
 15585                           ;timers.c: 51:  for (int i = 0; i < TMR_COUNT; i++) {
 15586                           
 15587                           ; BSR set to: 0
 15588                           ;incstack = 0
 15589  00558E  0E00               	movlw	0
 15590  005590  6E12               	movwf	(Timers_Isr@i+1)^0,c
 15591  005592  0E00               	movlw	0
 15592  005594  6E11               	movwf	Timers_Isr@i^0,c
 15593  005596                     i2l6441:
 15594                           
 15595                           ; BSR set to: 0
 15596                           ;timers.c: 52:   if (tickCount[i] != 0) {
 15597  005596  90D8               	bcf	status,0,c
 15598  005598  3411               	rlcf	Timers_Isr@i^0,w,c
 15599  00559A  6ED9               	movwf	fsr2l,c
 15600  00559C  3412               	rlcf	(Timers_Isr@i+1)^0,w,c
 15601  00559E  6EDA               	movwf	fsr2h,c
 15602  0055A0  0E80               	movlw	low _tickCount
 15603  0055A2  26D9               	addwf	fsr2l,f,c
 15604  0055A4  0E01               	movlw	high _tickCount
 15605  0055A6  22DA               	addwfc	fsr2h,f,c
 15606  0055A8  50DE               	movf	postinc2,w,c
 15607  0055AA  10DE               	iorwf	postinc2,w,c
 15608  0055AC  B4D8               	btfsc	status,2,c
 15609  0055AE  D00C               	goto	i2l6445
 15610                           
 15611                           ; BSR set to: 0
 15612                           ;timers.c: 53:    tickCount[i]--;
 15613  0055B0  90D8               	bcf	status,0,c
 15614  0055B2  3411               	rlcf	Timers_Isr@i^0,w,c
 15615  0055B4  6ED9               	movwf	fsr2l,c
 15616  0055B6  3412               	rlcf	(Timers_Isr@i+1)^0,w,c
 15617  0055B8  6EDA               	movwf	fsr2h,c
 15618  0055BA  0E80               	movlw	low _tickCount
 15619  0055BC  26D9               	addwf	fsr2l,f,c
 15620  0055BE  0E01               	movlw	high _tickCount
 15621  0055C0  22DA               	addwfc	fsr2h,f,c
 15622  0055C2  06DE               	decf	postinc2,f,c
 15623  0055C4  0E00               	movlw	0
 15624  0055C6  5ADD               	subwfb	postdec2,f,c
 15625  0055C8                     i2l6445:
 15626                           
 15627                           ; BSR set to: 0
 15628                           ;timers.c: 55:  }
 15629  0055C8  4A11               	infsnz	Timers_Isr@i^0,f,c
 15630  0055CA  2A12               	incf	(Timers_Isr@i+1)^0,f,c
 15631                           
 15632                           ; BSR set to: 0
 15633  0055CC  BE12               	btfsc	(Timers_Isr@i+1)^0,7,c
 15634  0055CE  D7E3               	goto	i2l6441
 15635  0055D0  5012               	movf	(Timers_Isr@i+1)^0,w,c
 15636  0055D2  E105               	bnz	i2u622_40
 15637  0055D4  0E06               	movlw	6
 15638  0055D6  5C11               	subwf	Timers_Isr@i^0,w,c
 15639  0055D8  B0D8               	btfsc	status,0,c
 15640  0055DA  0012               	return	
 15641  0055DC  D7DC               	goto	i2l6441
 15642  0055DE                     i2u622_40:
 15643                           
 15644                           ; BSR set to: 0
 15645  0055DE  0012               	return		;funcret
 15646  0055E0                     __end_of_Timers_Isr:
 15647                           	callstack 0
 15648                           
 15649 ;; *************** function _TMR5_WriteTimer *****************
 15650 ;; Defined at:
 15651 ;;		line 128 in file "mcc_generated_files/tmr5.c"
 15652 ;; Parameters:    Size  Location     Type
 15653 ;;  timerVal        2   14[COMRAM] unsigned short 
 15654 ;; Auto vars:     Size  Location     Type
 15655 ;;		None
 15656 ;; Return value:  Size  Location     Type
 15657 ;;                  1    wreg      void 
 15658 ;; Registers used:
 15659 ;;		None
 15660 ;; Tracked objects:
 15661 ;;		On entry : 3F/39
 15662 ;;		On exit  : 3F/39
 15663 ;;		Unchanged: 3E/0
 15664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15665 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15668 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15669 ;;Total ram usage:        2 bytes
 15670 ;; Hardware stack levels used: 1
 15671 ;; This function calls:
 15672 ;;		Nothing
 15673 ;; This function is called by:
 15674 ;;		_TMR5_ISR
 15675 ;; This function uses a non-reentrant model
 15676 ;;
 15677                           
 15678                           	psect	text97
 15679  005C18                     __ptext97:
 15680                           	callstack 0
 15681  005C18                     _TMR5_WriteTimer:
 15682                           	callstack 18
 15683                           
 15684                           ; BSR set to: 57
 15685                           ;mcc_generated_files/tmr5.c: 128: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 129: {;mcc_generated_files/tmr5.c: 130:     if (T5CONbits.NOT_SYNC == 1)
 15686                           
 15687                           ; BSR set to: 0
 15688                           ;incstack = 0
 15689  005C18  A49A               	btfss	154,2,c	;volatile
 15690  005C1A  D009               	goto	i2l731
 15691                           
 15692                           ; BSR set to: 57
 15693                           ;mcc_generated_files/tmr5.c: 131:     {;mcc_generated_files/tmr5.c: 133:         T5CONbi
      +                          ts.TMR5ON = 0;
 15694  005C1C  909A               	bcf	154,0,c	;volatile
 15695                           
 15696                           ;mcc_generated_files/tmr5.c: 136:         TMR5H = (uint8_t)(timerVal >> 8);
 15697  005C1E  0060  F043  FF99   	movff	TMR5_WriteTimer@timerVal+1,16281	;volatile
 15698                           
 15699                           ;mcc_generated_files/tmr5.c: 137:         TMR5L = (uint8_t)timerVal;
 15700  005C24  0060  F03F  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 15701                           
 15702                           ;mcc_generated_files/tmr5.c: 140:         T5CONbits.TMR5ON =1;
 15703  005C2A  809A               	bsf	154,0,c	;volatile
 15704                           
 15705                           ;mcc_generated_files/tmr5.c: 141:     }
 15706  005C2C  0012               	return	
 15707  005C2E                     i2l731:
 15708                           
 15709                           ; BSR set to: 57
 15710                           ;mcc_generated_files/tmr5.c: 143:     {;mcc_generated_files/tmr5.c: 145:         TMR5H =
      +                           (uint8_t)(timerVal >> 8);
 15711  005C2E  0060  F043  FF99   	movff	TMR5_WriteTimer@timerVal+1,16281	;volatile
 15712                           
 15713                           ;mcc_generated_files/tmr5.c: 146:         TMR5L = (uint8_t)timerVal;
 15714  005C34  0060  F03F  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 15715                           
 15716                           ; BSR set to: 57
 15717  005C3A  0012               	return		;funcret
 15718  005C3C                     __end_of_TMR5_WriteTimer:
 15719                           	callstack 0
 15720                           
 15721                           ;
 15722                           ; Interrupt Vector Table @ 0x8
 15723                           ;
 15724                           
 15725                           	psect	ivt0x8
 15726  000008                     __pivt0x8:
 15727                           	callstack 0
 15728  000008                     ivt0x8_base:
 15729                           	callstack 0
 15730                           
 15731                           ; Vector 0 : SWINT
 15732  000008  179E               	dw	_Default_ISR shr (0+2)
 15733                           
 15734                           ; Vector 1 : HLVD
 15735  00000A  179E               	dw	_Default_ISR shr (0+2)
 15736                           
 15737                           ; Vector 2 : OSF
 15738  00000C  179E               	dw	_Default_ISR shr (0+2)
 15739                           
 15740                           ; Vector 3 : CSW
 15741  00000E  179E               	dw	_Default_ISR shr (0+2)
 15742                           
 15743                           ; Vector 4 : NVM
 15744  000010  179E               	dw	_Default_ISR shr (0+2)
 15745                           
 15746                           ; Vector 5 : SCAN
 15747  000012  179E               	dw	_Default_ISR shr (0+2)
 15748                           
 15749                           ; Vector 6 : CRC
 15750  000014  179E               	dw	_Default_ISR shr (0+2)
 15751                           
 15752                           ; Vector 7 : IOC
 15753  000016  179E               	dw	_Default_ISR shr (0+2)
 15754                           
 15755                           ; Vector 8 : INT0
 15756  000018  179E               	dw	_Default_ISR shr (0+2)
 15757                           
 15758                           ; Vector 9 : ZCD
 15759  00001A  179E               	dw	_Default_ISR shr (0+2)
 15760                           
 15761                           ; Vector 10 : AD
 15762  00001C  15E7               	dw	_ADCC_ISR shr (0+2)
 15763                           
 15764                           ; Vector 11 : ADT
 15765  00001E  179E               	dw	_Default_ISR shr (0+2)
 15766                           
 15767                           ; Vector 12 : CMP1
 15768  000020  179E               	dw	_Default_ISR shr (0+2)
 15769                           
 15770                           ; Vector 13 : SMT1
 15771  000022  179E               	dw	_Default_ISR shr (0+2)
 15772                           
 15773                           ; Vector 14 : SMT1PRA
 15774  000024  179E               	dw	_Default_ISR shr (0+2)
 15775                           
 15776                           ; Vector 15 : SMT1PRW
 15777  000026  179E               	dw	_Default_ISR shr (0+2)
 15778                           
 15779                           ; Vector 16 : DMA1SCNT
 15780  000028  179E               	dw	_Default_ISR shr (0+2)
 15781                           
 15782                           ; Vector 17 : DMA1DCNT
 15783  00002A  179E               	dw	_Default_ISR shr (0+2)
 15784                           
 15785                           ; Vector 18 : DMA1OR
 15786  00002C  179E               	dw	_Default_ISR shr (0+2)
 15787                           
 15788                           ; Vector 19 : DMA1A
 15789  00002E  179E               	dw	_Default_ISR shr (0+2)
 15790                           
 15791                           ; Vector 20 : SPI1RX
 15792  000030  179E               	dw	_Default_ISR shr (0+2)
 15793                           
 15794                           ; Vector 21 : SPI1TX
 15795  000032  179E               	dw	_Default_ISR shr (0+2)
 15796                           
 15797                           ; Vector 22 : SPI1
 15798  000034  179E               	dw	_Default_ISR shr (0+2)
 15799                           
 15800                           ; Vector 23 : I2C1RX
 15801  000036  179E               	dw	_Default_ISR shr (0+2)
 15802                           
 15803                           ; Vector 24 : I2C1TX
 15804  000038  179E               	dw	_Default_ISR shr (0+2)
 15805                           
 15806                           ; Vector 25 : I2C1
 15807  00003A  179E               	dw	_Default_ISR shr (0+2)
 15808                           
 15809                           ; Vector 26 : I2C1E
 15810  00003C  179E               	dw	_Default_ISR shr (0+2)
 15811                           
 15812                           ; Vector 27 : U1RX
 15813  00003E  1627               	dw	_UART1_rx_vect_isr shr (0+2)
 15814                           
 15815                           ; Vector 28 : U1TX
 15816  000040  1617               	dw	_UART1_tx_vect_isr shr (0+2)
 15817                           
 15818                           ; Vector 29 : U1E
 15819  000042  179E               	dw	_Default_ISR shr (0+2)
 15820                           
 15821                           ; Vector 30 : U1
 15822  000044  179E               	dw	_Default_ISR shr (0+2)
 15823                           
 15824                           ; Vector 31 : TMR0
 15825  000046  179E               	dw	_Default_ISR shr (0+2)
 15826                           
 15827                           ; Vector 32 : TMR1
 15828  000048  179E               	dw	_Default_ISR shr (0+2)
 15829                           
 15830                           ; Vector 33 : TMR1G
 15831  00004A  179E               	dw	_Default_ISR shr (0+2)
 15832                           
 15833                           ; Vector 34 : TMR2
 15834  00004C  179E               	dw	_Default_ISR shr (0+2)
 15835                           
 15836                           ; Vector 35 : CCP1
 15837  00004E  179E               	dw	_Default_ISR shr (0+2)
 15838                           
 15839                           ; Vector 36 : Undefined
 15840  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 15841                           
 15842                           ; Vector 37 : NCO1
 15843  000052  179E               	dw	_Default_ISR shr (0+2)
 15844                           
 15845                           ; Vector 38 : CWG1
 15846  000054  179E               	dw	_Default_ISR shr (0+2)
 15847                           
 15848                           ; Vector 39 : CLC1
 15849  000056  179E               	dw	_Default_ISR shr (0+2)
 15850                           
 15851                           ; Vector 40 : INT1
 15852  000058  179E               	dw	_Default_ISR shr (0+2)
 15853                           
 15854                           ; Vector 41 : CMP2
 15855  00005A  179E               	dw	_Default_ISR shr (0+2)
 15856                           
 15857                           ; Vector 42 : DMA2SCNT
 15858  00005C  179E               	dw	_Default_ISR shr (0+2)
 15859                           
 15860                           ; Vector 43 : DMA2DCNT
 15861  00005E  179E               	dw	_Default_ISR shr (0+2)
 15862                           
 15863                           ; Vector 44 : DMA2OR
 15864  000060  179E               	dw	_Default_ISR shr (0+2)
 15865                           
 15866                           ; Vector 45 : DMA2A
 15867  000062  179E               	dw	_Default_ISR shr (0+2)
 15868                           
 15869                           ; Vector 46 : I2C2RX
 15870  000064  179E               	dw	_Default_ISR shr (0+2)
 15871                           
 15872                           ; Vector 47 : I2C2TX
 15873  000066  179E               	dw	_Default_ISR shr (0+2)
 15874                           
 15875                           ; Vector 48 : I2C2
 15876  000068  179E               	dw	_Default_ISR shr (0+2)
 15877                           
 15878                           ; Vector 49 : I2C2E
 15879  00006A  179E               	dw	_Default_ISR shr (0+2)
 15880                           
 15881                           ; Vector 50 : U2RX
 15882  00006C  179E               	dw	_Default_ISR shr (0+2)
 15883                           
 15884                           ; Vector 51 : U2TX
 15885  00006E  179E               	dw	_Default_ISR shr (0+2)
 15886                           
 15887                           ; Vector 52 : U2E
 15888  000070  179E               	dw	_Default_ISR shr (0+2)
 15889                           
 15890                           ; Vector 53 : U2
 15891  000072  179E               	dw	_Default_ISR shr (0+2)
 15892                           
 15893                           ; Vector 54 : TMR3
 15894  000074  179E               	dw	_Default_ISR shr (0+2)
 15895                           
 15896                           ; Vector 55 : TMR3G
 15897  000076  179E               	dw	_Default_ISR shr (0+2)
 15898                           
 15899                           ; Vector 56 : TMR4
 15900  000078  179E               	dw	_Default_ISR shr (0+2)
 15901                           
 15902                           ; Vector 57 : CCP2
 15903  00007A  179E               	dw	_Default_ISR shr (0+2)
 15904                           
 15905                           ; Vector 58 : Undefined
 15906  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 15907                           
 15908                           ; Vector 59 : CWG2
 15909  00007E  179E               	dw	_Default_ISR shr (0+2)
 15910                           
 15911                           ; Vector 60 : CLC2
 15912  000080  179E               	dw	_Default_ISR shr (0+2)
 15913                           
 15914                           ; Vector 61 : INT2
 15915  000082  179E               	dw	_Default_ISR shr (0+2)
 15916                           
 15917                           ; Vector 62 : Undefined
 15918  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 15919                           
 15920                           ; Vector 63 : Undefined
 15921  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 15922                           
 15923                           ; Vector 64 : Undefined
 15924  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 15925                           
 15926                           ; Vector 65 : Undefined
 15927  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 15928                           
 15929                           ; Vector 66 : Undefined
 15930  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 15931                           
 15932                           ; Vector 67 : Undefined
 15933  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 15934                           
 15935                           ; Vector 68 : Undefined
 15936  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 15937                           
 15938                           ; Vector 69 : Undefined
 15939  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 15940                           
 15941                           ; Vector 70 : TMR5
 15942  000094  158C               	dw	_TMR5_ISR shr (0+2)
 15943                           
 15944                           ; Vector 71 : TMR5G
 15945  000096  179E               	dw	_Default_ISR shr (0+2)
 15946                           
 15947                           ; Vector 72 : TMR6
 15948  000098  1671               	dw	_TMR6_ISR shr (0+2)
 15949                           
 15950                           ; Vector 73 : CCP3
 15951  00009A  179E               	dw	_Default_ISR shr (0+2)
 15952                           
 15953                           ; Vector 74 : CWG3
 15954  00009C  179E               	dw	_Default_ISR shr (0+2)
 15955                           
 15956                           ; Vector 75 : CLC3
 15957  00009E  179E               	dw	_Default_ISR shr (0+2)
 15958                           
 15959                           ; Vector 76 : Undefined
 15960  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 15961                           
 15962                           ; Vector 77 : Undefined
 15963  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 15964                           
 15965                           ; Vector 78 : Undefined
 15966  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 15967                           
 15968                           ; Vector 79 : Undefined
 15969  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 15970                           
 15971                           ; Vector 80 : CCP4
 15972  0000A8  179E               	dw	_Default_ISR shr (0+2)
 15973                           
 15974                           ; Vector 81 : CLC4
 15975  0000AA  179E               	dw	_Default_ISR shr (0+2)
 15976  0000AC                     ivt0x8_undefint:
 15977                           	callstack 0
 15978  0000AC  00FF               	reset	
 15979                           
 15980                           	psect	text98
 15981  000000                     __ptext98:
 15982                           	callstack 0
 15983                           
 15984                           	psect	rparam
 15985  0000                     
 15986                           	psect	idloc
 15987                           
 15988                           ;Config register IDLOC0 @ 0x200000
 15989                           ;	unspecified, using default values
 15990  200000                     	org	2097152
 15991  200000  0FFF               	dw	4095
 15992                           
 15993                           ;Config register IDLOC1 @ 0x200002
 15994                           ;	unspecified, using default values
 15995  200002                     	org	2097154
 15996  200002  0FFF               	dw	4095
 15997                           
 15998                           ;Config register IDLOC2 @ 0x200004
 15999                           ;	unspecified, using default values
 16000  200004                     	org	2097156
 16001  200004  0FFF               	dw	4095
 16002                           
 16003                           ;Config register IDLOC3 @ 0x200006
 16004                           ;	unspecified, using default values
 16005  200006                     	org	2097158
 16006  200006  0FFF               	dw	4095
 16007                           
 16008                           ;Config register IDLOC4 @ 0x200008
 16009                           ;	unspecified, using default values
 16010  200008                     	org	2097160
 16011  200008  0FFF               	dw	4095
 16012                           
 16013                           ;Config register IDLOC5 @ 0x20000A
 16014                           ;	unspecified, using default values
 16015  20000A                     	org	2097162
 16016  20000A  0FFF               	dw	4095
 16017                           
 16018                           ;Config register IDLOC6 @ 0x20000C
 16019                           ;	unspecified, using default values
 16020  20000C                     	org	2097164
 16021  20000C  0FFF               	dw	4095
 16022                           
 16023                           ;Config register IDLOC7 @ 0x20000E
 16024                           ;	unspecified, using default values
 16025  20000E                     	org	2097166
 16026  20000E  0FFF               	dw	4095
 16027                           
 16028                           	psect	config
 16029                           
 16030                           ;Config register CONFIG1L @ 0x300000
 16031                           ;	External Oscillator Selection
 16032                           ;	FEXTOSC = ECH, EC (external clock) above 8 MHz; PFM set to high power
 16033                           ;	Reset Oscillator Selection
 16034                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 16035  300000                     	org	3145728
 16036  300000  AF                 	db	175
 16037                           
 16038                           ;Config register CONFIG1H @ 0x300001
 16039                           ;	Clock out Enable bit
 16040                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 16041                           ;	PRLOCKED One-Way Set Enable bit
 16042                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
 16043                           ;	Clock Switch Enable bit
 16044                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 16045                           ;	Fail-Safe Clock Monitor Enable bit
 16046                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 16047  300001                     	org	3145729
 16048  300001  FF                 	db	255
 16049                           
 16050                           ;Config register CONFIG2L @ 0x300002
 16051                           ;	MCLR Enable bit
 16052                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 16053                           ;	Power-up timer selection bits
 16054                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 16055                           ;	Multi-vector enable bit
 16056                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 16057                           ;	IVTLOCK bit One-way set enable bit
 16058                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 16059                           ;	Low Power BOR Enable bit
 16060                           ;	LPBOREN = OFF, ULPBOR disabled
 16061                           ;	Brown-out Reset Enable bits
 16062                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 16063  300002                     	org	3145730
 16064  300002  FF                 	db	255
 16065                           
 16066                           ;Config register CONFIG2H @ 0x300003
 16067                           ;	Brown-out Reset Voltage Selection bits
 16068                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 16069                           ;	ZCD Disable bit
 16070                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 16071                           ;	PPSLOCK bit One-Way Set Enable bit
 16072                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 16073                           ;	Stack Full/Underflow Reset Enable bit
 16074                           ;	STVREN = ON, Stack full/underflow will cause Reset
 16075                           ;	Debugger Enable bit
 16076                           ;	DEBUG = OFF, Background debugger disabled
 16077                           ;	Extended Instruction Set Enable bit
 16078                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 16079  300003                     	org	3145731
 16080  300003  FF                 	db	255
 16081                           
 16082                           ;Config register CONFIG3L @ 0x300004
 16083                           ;	WDT Period selection bits
 16084                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 16085                           ;	WDT operating mode
 16086                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 16087  300004                     	org	3145732
 16088  300004  9F                 	db	159
 16089                           
 16090                           ;Config register CONFIG3H @ 0x300005
 16091                           ;	WDT Window Select bits
 16092                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 16093                           ;	WDT input clock selector
 16094                           ;	WDTCCS = SC, Software Control
 16095  300005                     	org	3145733
 16096  300005  FF                 	db	255
 16097                           
 16098                           ;Config register CONFIG4L @ 0x300006
 16099                           ;	Boot Block Size selection bits
 16100                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 16101                           ;	Boot Block enable bit
 16102                           ;	BBEN = OFF, Boot block disabled
 16103                           ;	Storage Area Flash enable bit
 16104                           ;	SAFEN = OFF, SAF disabled
 16105                           ;	Application Block write protection bit
 16106                           ;	WRTAPP = OFF, Application Block not write protected
 16107  300006                     	org	3145734
 16108  300006  FF                 	db	255
 16109                           
 16110                           ;Config register CONFIG4H @ 0x300007
 16111                           ;	Boot Block Write Protection bit
 16112                           ;	WRTB = OFF, Boot Block not write-protected
 16113                           ;	Configuration Register Write Protection bit
 16114                           ;	WRTC = OFF, Configuration registers not write-protected
 16115                           ;	Data EEPROM Write Protection bit
 16116                           ;	WRTD = OFF, Data EEPROM not write-protected
 16117                           ;	SAF Write protection bit
 16118                           ;	WRTSAF = OFF, SAF not Write Protected
 16119                           ;	Low Voltage Programming Enable bit
 16120                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
 16121  300007                     	org	3145735
 16122  300007  DF                 	db	223
 16123                           
 16124                           ;Config register CONFIG5L @ 0x300008
 16125                           ;	PFM and Data EEPROM Code Protection bit
 16126                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 16127  300008                     	org	3145736
 16128  300008  FF                 	db	255
 16129                           
 16130                           ;Config register CONFIG5H @ 0x300009
 16131                           ;	unspecified, using default values
 16132  300009                     	org	3145737
 16133  300009  FF                 	db	255
 16134                           tosu	equ	0x3FFF
 16135                           tosh	equ	0x3FFE
 16136                           tosl	equ	0x3FFD
 16137                           stkptr	equ	0x3FFC
 16138                           pclatu	equ	0x3FFB
 16139                           pclath	equ	0x3FFA
 16140                           pcl	equ	0x3FF9
 16141                           tblptru	equ	0x3FF8
 16142                           tblptrh	equ	0x3FF7
 16143                           tblptrl	equ	0x3FF6
 16144                           tablat	equ	0x3FF5
 16145                           prodh	equ	0x3FF4
 16146                           prodl	equ	0x3FF3
 16147                           indf0	equ	0x3FEF
 16148                           postinc0	equ	0x3FEE
 16149                           postdec0	equ	0x3FED
 16150                           preinc0	equ	0x3FEC
 16151                           plusw0	equ	0x3FEB
 16152                           fsr0h	equ	0x3FEA
 16153                           fsr0l	equ	0x3FE9
 16154                           wreg	equ	0x3FE8
 16155                           indf1	equ	0x3FE7
 16156                           postinc1	equ	0x3FE6
 16157                           postdec1	equ	0x3FE5
 16158                           preinc1	equ	0x3FE4
 16159                           plusw1	equ	0x3FE3
 16160                           fsr1h	equ	0x3FE2
 16161                           fsr1l	equ	0x3FE1
 16162                           bsr	equ	0x3FE0
 16163                           indf2	equ	0x3FDF
 16164                           postinc2	equ	0x3FDE
 16165                           postdec2	equ	0x3FDD
 16166                           preinc2	equ	0x3FDC
 16167                           plusw2	equ	0x3FDB
 16168                           fsr2h	equ	0x3FDA
 16169                           fsr2l	equ	0x3FD9
 16170                           status	equ	0x3FD8

Data Sizes:
    Strings     220
    Constant    33
    Data        25
    BSS         738
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     56      75
    BANK0           160    121     160
    BANK1           256      0     255
    BANK2           256     24     219
    BANK3           256      0     255
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    cli_ctx.cmds.fh	PTR FTN(PTR void ,)void  size(3) Largest target is 0
		 -> fh_po(), fh_ps(), fh_pr(), Absolute function(), 

    cli_ctx.cmds.cmd	PTR const unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), 

    fh_ps@a_data	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    fh_po@a_data	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    S2173$1$0	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 132
		 -> cli_ctx.cmd(BANK2[128]), STR_27(CODE[4]), STR_22(CODE[3]), cli_ctx(BANK2[131]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 132
		 -> cli_ctx.cmd(BANK2[128]), STR_27(CODE[4]), STR_22(CODE[3]), cli_ctx(BANK2[131]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 79
		 -> vfpfcnvrt@ct(BANK0[3]), STR_10(CODE[21]), NULL(NULL[0]), STR_9(CODE[3]), 
		 -> STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[79]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 79
		 -> vfpfcnvrt@ct(BANK0[3]), STR_10(CODE[21]), NULL(NULL[0]), STR_9(CODE[3]), 
		 -> STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[79]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 132
		 -> cli_ctx.cmd(BANK2[128]), ?_printf(BANK2[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[80]), 
		 -> ?_sprintf(BANK2[2]), NULL(NULL[0]), STR_9(CODE[3]), STR_8(CODE[3]), 
		 -> STR_7(CODE[3]), cli_ctx(BANK2[131]), STR_2(CODE[9]), STR_1(CODE[12]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 132
		 -> cli_ctx.cmd(BANK2[128]), ?_printf(BANK2[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[80]), 
		 -> ?_sprintf(BANK2[2]), NULL(NULL[0]), STR_9(CODE[3]), STR_8(CODE[3]), 
		 -> STR_7(CODE[3]), cli_ctx(BANK2[131]), STR_2(CODE[9]), STR_1(CODE[12]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_17(CODE[4]), STR_16(CODE[4]), STR_13(CODE[4]), STR_12(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_17(CODE[4]), STR_16(CODE[4]), STR_13(CODE[4]), STR_12(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    puts@s	PTR const unsigned char  size(2) Largest target is 132
		 -> cli_ctx.cmd(BANK2[128]), STR_11(CODE[3]), cli_read@i(BANK0[1]), cmdm(CODE[28]), 
		 -> cli_ctx(BANK2[131]), STR_5(CODE[18]), STR_4(CODE[24]), STR_3(CODE[25]), 

    printf@fmt	PTR const unsigned char  size(1) Largest target is 79
		 -> STR_6(CODE[79]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK2[2]), ?_sprintf(BANK2[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 132
		 -> cli_ctx.cmd(BANK2[128]), dbuf(BANK1[80]), STR_11(CODE[3]), cli_read@i(BANK0[1]), 
		 -> cmdm(CODE[28]), cli_ctx(BANK2[131]), STR_5(CODE[18]), STR_4(CODE[24]), 
		 -> STR_3(CODE[25]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 79
		 -> STR_10(CODE[21]), STR_6(CODE[79]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 1
		 -> printf@ap(BANK0[2]), sprintf@ap(BANK2[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 79
		 -> STR_10(CODE[21]), STR_6(CODE[79]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 79
		 -> STR_10(CODE[21]), STR_6(CODE[79]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK2[2]), ?_sprintf(BANK2[2]), STR_2(CODE[9]), STR_1(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 1
		 -> printf@ap(BANK0[2]), sprintf@ap(BANK2[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK2[2]), ?_sprintf(BANK2[2]), STR_2(CODE[9]), STR_1(CODE[12]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK2[2]), stoa@nuls(COMRAM[7]), ?_sprintf(BANK2[2]), STR_2(CODE[9]), 
		 -> STR_1(CODE[12]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_10(CODE[21]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK2[2]), ?_sprintf(BANK2[2]), 

    S2952$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2952$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memset@dest	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    memset@s	PTR unsigned char  size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    cli_read@a_ctx.cmds	PTR struct _t_cmd size(2) Largest target is 24
		 -> g_cmds(BANK1[16]), 

    cli_read@a_ctx	PTR struct _t_cli_ctx size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    _cli_interpret_cmd@a_ctx.cmds.fh	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> fh_po(), fh_ps(), fh_pr(), Absolute function(), 

    _cli_interpret_cmd@a_ctx.cmds.cmd	PTR const unsigned char  size(1) Largest target is 3
		 -> NULL(NULL[0]), STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), 

    _cli_interpret_cmd@a_ctx.cmds	PTR struct _t_cmd size(2) Largest target is 24
		 -> g_cmds(BANK1[16]), 

    _cli_interpret_cmd@a_ctx	PTR struct _t_cli_ctx size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    linux_putc@data	PTR unsigned char  size(2) Largest target is 3
		 -> STR_11(CODE[3]), cli_read@i(BANK0[1]), 

    linux_getc@a_data	PTR unsigned char  size(1) Largest target is 1
		 -> cli_read@i(BANK0[1]), 

    cli_init@a_ctx.cmds.fh	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> fh_po(), fh_ps(), fh_pr(), Absolute function(), 

    cli_init@a_ctx.cmds.cmd	PTR const unsigned char  size(1) Largest target is 3
		 -> NULL(NULL[0]), STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), 

    cli_init@a_ctx.cmds	PTR struct _t_cmd size(2) Largest target is 24
		 -> g_cmds(BANK1[16]), 

    cli_init@a_cmds	PTR struct _t_cmd size(2) Largest target is 24
		 -> g_cmds(BANK1[16]), 

    sp__memset	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    cli_init@a_ctx	PTR struct _t_cli_ctx size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    S2173_t_cmd$fh	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> fh_po(), fh_ps(), fh_pr(), Absolute function(), 

    g_cmds.fh	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> fh_po(), fh_ps(), fh_pr(), Absolute function(), 

    S2173_t_cmd$cmd	PTR const unsigned char  size(1) Largest target is 3
		 -> NULL(NULL[0]), STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), 

    g_cmds.cmd	PTR const unsigned char  size(1) Largest target is 3
		 -> NULL(NULL[0]), STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), 

    fh_pr@a_data	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    build_time	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_2(CODE[9]), 

    build_date	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_1(CODE[12]), 

    S2180_t_cli_ctx$cmds	PTR struct _t_cmd size(2) Largest target is 24
		 -> g_cmds(BANK1[16]), 

    cli_ctx.cmds	PTR struct _t_cmd size(2) Largest target is 24
		 -> g_cmds(BANK1[16]), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Timers_Isr(), TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Timers_Isr(), TMR5_DefaultInterruptHandler(), Absolute function(), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultErrorHandler(), Absolute function(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), Absolute function(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), Absolute function(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Led_Blink(), TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Led_Blink(), TMR6_DefaultInterruptHandler(), Absolute function(), 

    ADCC_SetADIInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Adc_Isr(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Adc_Isr(), Absolute function(), ADCC_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _printf->_vfprintf
    _utoa->_pad
    _stoa->_fputc
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    _atoi->_isspace
    _cli_read->__cli_interpret_cmd
    _linux_putc->_puts
    _linux_getc->_UART1_Read
    __cli_interpret_cmd->_fh_po
    __cli_interpret_cmd->_fh_pr
    __cli_interpret_cmd->_fh_ps
    _strncmp->_strlen
    _fh_ps->_puts
    _fh_pr->_puts
    _fh_po->_puts
    _puts->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_UART1_Write
    _SYSTEM_Initialize->_TMR5_Initialize
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _ADCC_Initialize->_ADCC_SetADIInterruptHandler

Critical Paths under _ADCC_ISR in COMRAM

    _ADCC_ISR->_Adc_Isr
    _Adc_Isr->_ADCC_GetConversionResult

Critical Paths under _TMR6_ISR in COMRAM

    _TMR6_CallBack->_Led_Blink

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    _TMR5_ISR->_Timers_Isr

Critical Paths under _main in BANK0

    _main->_printf
    _sprintf->_vfprintf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    ___flsub->___flmul
    ___flge->___flmul
    _cli_read->__cli_interpret_cmd

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    _scmd_init->_cli_init
    _cli_init->_sprintf

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  187917
                                            117 BANK0      4     4      0
        _ADCC_SetADIInterruptHandler
                     _DAC1_GetOutput
                     _DAC1_SetOutput
                 _PWM5_LoadDutyValue
                 _PWM6_LoadDutyValue
                  _SYSTEM_Initialize
           _TMR5_SetInterruptHandler
           _TMR6_SetInterruptHandler
                            ___flmul
                           ___xxtofl
                           _cli_read
                        _display_led
                             _printf
                          _scmd_init
 ---------------------------------------------------------------------------------
 (1) _scmd_init                                            0     0      0   78149
                           _cli_init
 ---------------------------------------------------------------------------------
 (2) _cli_init                                             4     0      4   78149
                                             20 BANK2      4     0      4
                             _memset
                               _puts
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             22    15      7   69423
                                              0 BANK2     20    13      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _printf                                              21     4     17   68987
                                            115 BANK0      2     2      0
                                              0 BANK2     17     0     17
                     _DAC1_GetOutput (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             6     1      5   68693
                                             55 COMRAM     1     1      0
                                            110 BANK0      5     0      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           44    39      5   67481
                                             79 BANK0     31    26      5
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
 ---------------------------------------------------------------------------------
 (6) _utoa                                                32    22     10    9760
                                              0 BANK0     32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (7) ___lomod                                             17     1     16     536
                                             20 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (7) ___lodiv                                             25     9     16     554
                                             20 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (6) _stoa                                                22    18      4    4144
                                             31 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              62    55      7   41977
                                             17 BANK0     62    55      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _tolower                                              6     4      2    1318
                                             26 COMRAM     6     4      2
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     649
                                             20 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _strcpy                                              10     6      4    1248
                                             20 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    7900
                                             40 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     890
                                             45 COMRAM    10     6      4
                                              0 BANK0     10    10      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       14    10      4     482
                                             20 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (7) ___fltol                                             10     6      4     686
                                             20 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    5410
                                             46 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fladd                                             16     8      8    4742
                                             20 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     196
                                             20 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             25    17      8    5194
                                             34 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8    1220
                                             46 COMRAM     8     0      8
                                             13 BANK0      4     4      0
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     912
                                             20 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (7) ___fldiv                                             25    17      8    3620
                                             20 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     818
                                             20 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     842
                                             20 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _atoi                                                10     8      2    2172
                                             27 COMRAM    10     8      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     321
                                             20 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     437
                                             20 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     698
                                             20 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _display_led                                          3     3      0      42
                                             20 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _cli_read                                             8     6      2   31633
                                             49 COMRAM     5     3      2
                                             10 BANK0      3     3      0
                 __cli_interpret_cmd
                         _linux_getc
                         _linux_putc
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                              12     6      6    2020
                                             20 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) _linux_putc                                           3     0      3    6750
                                             43 COMRAM     3     0      3
                               _puts
 ---------------------------------------------------------------------------------
 (2) _linux_getc                                           2     1      1     202
                                             21 COMRAM     2     1      1
                         _UART1_Read
                  _UART1_is_rx_ready
 ---------------------------------------------------------------------------------
 (3) _UART1_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART1_Read                                           1     1      0      54
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) __cli_interpret_cmd                                  14    12      2   21847
                                             45 COMRAM     4     2      2
                                              0 BANK0     10    10      0
                   Absolute function *
                              _fh_po *
                              _fh_pr *
                              _fh_ps *
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             12     6      6    1404
                                             24 COMRAM    12     6      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     710
                                             20 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _fh_ps                                                2     0      2    6284
                                             43 COMRAM     2     0      2
                               _puts
 ---------------------------------------------------------------------------------
 (3) _fh_pr                                                2     0      2    6326
                                             43 COMRAM     2     0      2
                               _puts
 ---------------------------------------------------------------------------------
 (3) _fh_po                                                2     0      2    6363
                                             43 COMRAM     2     0      2
                               _puts
 ---------------------------------------------------------------------------------
 (3) _puts                                                 5     3      2    6284
                                             40 COMRAM     3     1      2
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (8) _fputs                                                9     5      4    3148
                                             31 COMRAM     9     5      4
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4    2284
                                             22 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0     126
                                             21 COMRAM     1     1      0
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (11) _UART1_Write                                         1     1      0      84
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     884
                                             20 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1550
                    _ADCC_Initialize
                    _DAC1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM5_Initialize
                    _PWM6_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     740
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3     148
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3     148
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         3     0      3     148
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         3     0      3     148
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                3     0      3     148
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     254
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR6_SetInterruptHandler                             3     0      3     254
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0     254
                                             23 COMRAM     2     2      0
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR5_SetInterruptHandler                             3     0      3     254
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      48
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _DAC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     254
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3     254
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2     190
                                             20 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM5_LoadDutyValue                                   4     2      2     190
                                             20 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _DAC1_SetOutput                                       1     1      0      42
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DAC1_GetOutput                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _ADCC_ISR                                            2     2      0       0
                                              5 COMRAM     2     2      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                            _Adc_Isr *
 ---------------------------------------------------------------------------------
 (13) _Adc_Isr                                             1     1      0       0
                                              4 COMRAM     1     1      0
           _ADCC_GetConversionResult
 ---------------------------------------------------------------------------------
 (14) _ADCC_GetConversionResult                            4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (13) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR6_ISR                                            2     2      0       0
                                              8 COMRAM     2     2      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR6_CallBack                                       0     0      0       0
                   Absolute function *
                          _Led_Blink *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR6_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _Led_Blink                                           1     1      0       0
                                              7 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_tx_vect_isr                                   2     2      0       0
                                             10 COMRAM     2     2      0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_rx_vect_isr                                   2     2      0       0
                                             12 COMRAM     2     2      0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultErrorHandler                           0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _UART1_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR5_ISR                                            2     2      0     319
                                             18 COMRAM     2     2      0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
                    _TMR5_WriteTimer
                         _Timers_Isr *
 ---------------------------------------------------------------------------------
 (13) _Timers_Isr                                          4     4      0      90
                                             14 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (13) _TMR5_WriteTimer                                     2     0      2     229
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_SetADIInterruptHandler
   _DAC1_GetOutput
   _DAC1_SetOutput
   _PWM5_LoadDutyValue
   _PWM6_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _DAC1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM5_Initialize
     _PWM6_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
   _TMR5_SetInterruptHandler
   _TMR6_SetInterruptHandler
   ___flmul
     ___xxtofl (ARG)
   ___xxtofl
   _cli_read
     __cli_interpret_cmd
       Absolute function(Fake) *
       _fh_po *
         _puts
           _fputc
             _putch
               _UART1_Write
           _fputs
             _fputc
       _fh_pr *
         _puts
       _fh_ps *
         _puts
       _strlen *
       _strncmp *
         _strlen (ARG)
     _linux_getc
       _UART1_Read
       _UART1_is_rx_ready
     _linux_putc
       _puts
     _memset
   _display_led
   _printf
     _DAC1_GetOutput (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
             _fputs
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
         _isdigit
         _isupper
         _stoa
           _fputc
           _strlen
         _strncmp
         _tolower
         _utoa
           ___lodiv
           ___lomod
           _pad
   _scmd_init
     _cli_init
       _memset
       _puts
       _sprintf
         _vfprintf

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _Adc_Isr *
     _ADCC_GetConversionResult

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _Led_Blink *
     _TMR6_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *

 _TMR5_ISR (ROOT)
   Absolute function(Fake) *
   _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer *
   _Timers_Isr *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0     118        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRllhhhh    22A      0       0      89        0.0%
BITBIGSFRllllll    181      0       0     116        0.0%
BITBANK31          100      0       0      66        0.0%
BANK31             100      0       0      67        0.0%
BITBANK30          100      0       0      64        0.0%
BANK30             100      0       0      65        0.0%
BITBANK29          100      0       0      62        0.0%
BANK29             100      0       0      63        0.0%
BITBANK28          100      0       0      60        0.0%
BANK28             100      0       0      61        0.0%
BITBANK27          100      0       0      58        0.0%
BANK27             100      0       0      59        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      FF      11       99.6%
BITBANK2           100      0       0       8        0.0%
BANK2              100     18      DB       9       85.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FF       7       99.6%
BITBIGSFRllhhhh     CB      0       0      85        0.0%
BITBIGSFRllhhhh     A1      0       0      82        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     79      A0       5      100.0%
BITBIGSFRllhhhh     5F      0       0      78        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     38      4B       1       78.9%
BITBIGSFRllhhhl     49      0       0      91        0.0%
BITBIGSFRllhhhh     3F      0       0      80        0.0%
BITBIGSFRllllll     33      0       0     104        0.0%
BITBIGSFRhhhhh      28      0       0      68        0.0%
BITBIGSFRllhhhh     23      0       0      75        0.0%
BITBIGSFRllllll     16      0       0     107        0.0%
BITBIGSFRllllll     15      0       0     100        0.0%
BITBIGSFRllllll     11      0       0     106        0.0%
BITBIGSFRllllll      F      0       0     101        0.0%
BITBIGSFRllhhhh      C      0       0      74        0.0%
BITBIGSFRlllllh      B      0       0      99        0.0%
BITBIGSFRllhhl       B      0       0      92        0.0%
BITBIGSFRllhhhh      A      0       0      73        0.0%
BITBIGSFRllhhhh      8      0       0      77        0.0%
BITBIGSFRllllll      7      0       0     113        0.0%
BITBIGSFRllllll      7      0       0     110        0.0%
BITBIGSFRhhlh        6      0       0      70        0.0%
BITBIGSFRllhhhh      5      0       0      90        0.0%
BITBIGSFRllllhl      5      0       0      98        0.0%
BITBIGSFRlllhl       5      0       0      96        0.0%
BITBIGSFRllhll       5      0       0      94        0.0%
BITBIGSFRllllll      4      0       0     111        0.0%
BITBIGSFRllllll      4      0       0     114        0.0%
BITBIGSFRllhlh       4      0       0      93        0.0%
BITBIGSFRlllhh       4      0       0      95        0.0%
BITBIGSFRllllhh      4      0       0      97        0.0%
BITBIGSFRllllll      3      0       0     108        0.0%
BITBIGSFRllllll      3      0       0     102        0.0%
BITBIGSFRllhhhh      2      0       0      86        0.0%
BITBIGSFRllhhhh      2      0       0      87        0.0%
BITBIGSFRhhll        2      0       0      71        0.0%
BITBIGSFRhll         2      0       0      72        0.0%
BITBIGSFRllhhhh      1      0       0      76        0.0%
BITBIGSFRllhhhh      1      0       0      88        0.0%
BITBIGSFRllhhhh      1      0       0      84        0.0%
BITBIGSFRllhhhh      1      0       0      83        0.0%
BITBIGSFRllllll      1      0       0     115        0.0%
BITBIGSFRhhhl        1      0       0      69        0.0%
BITBIGSFRllllll      1      0       0     112        0.0%
BITBIGSFRllllll      1      0       0     109        0.0%
BITBIGSFRllhhhh      1      0       0      79        0.0%
BITBIGSFRllllll      1      0       0     105        0.0%
BITBIGSFRllhhhh      1      0       0      81        0.0%
BITBIGSFRllllll      1      0       0     103        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3C4     117        0.0%
DATA                 0      0     3C4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Mar 10 15:29:26 2022

                                ___fldiv@aexp 002D                                  ___fldiv@bexp 002C  
            __end_of_TMR5_SetInterruptHandler 5E38                                  ___fldiv@sign 0025  
                                ?_display_led 0001                                  ___awdiv@sign 001A  
                         ___wmul@multiplicand 0017                             ??_TMR5_WriteTimer 0011  
                             _DAC1_Initialize 5E46                                           l195 5CF4  
                                         l626 58F0                                           _GIE 01FE97  
                                         _ana 0039                                           _pad 50D6  
                                         _res 0043                                  ___awmod@sign 001A  
                             _TMR2_Initialize 5CA2                                           tosl 003FFD  
                                         wreg 003FE8                                _DAC1_SetOutput 5E5C  
                                ___flmul@aexp 0061                                  ___flmul@bexp 0062  
                ?_ADCC_SetADIInterruptHandler 0015                            _UART1_Transmit_ISR 5B54  
                                ___flmul@sign 0060                                  ___flmul@temp 006B  
                                ___flmul@prod 0067                        __end_of_DAC1_GetOutput 5E6C  
                                ___fltol@exp1 001E                                          l1103 4D76  
                                        l1113 4D82                                          l1123 4D8E  
                                        l1108 4D7C                                          l1133 4D9A  
                                        l1118 4D88                                          l2014 241E  
                                        l1143 4DA6                                          l1128 4D94  
                                        l1153 4DB2                                          l1138 4DA0  
                                        l2042 2782                                          l1243 4374  
                                        l1148 4DAC                                          l1092 4D6A  
                                        l1229 3E58                                          l2207 411E  
                                        l1513 4A08                                          l1098 4D70  
                                        l2078 4620                                          l2097 3E78  
                                        l1802 3710                                          l2195 496A  
                                        l1803 370C                                          l2099 3E80  
                                        l2293 5946                                          l1910 47BE  
                                        l1903 4740                                          l1832 3914  
                                        l1843 3982                                          l1844 397E  
                                        l1862 31C6                                          l1686 4AF0  
                                        l1871 33DC                                          l1872 33D8  
                                        l1696 5012                                          l1793 36AA  
                                        l1777 35D8                                          l1778 35B6  
                                        ?_pad 0029                                          l1879 3462  
                                        l1977 5104                                          l9021 35C8  
                                        l9007 356A                                          l9121 3786  
                                        l9115 377C                                          l9107 3756  
                                        l9043 361E                                          l9035 35FC  
                                        l9019 35C4                                          l9133 547E  
                                        l9301 3176                                          l9045 3622  
                                        l9053 3634                                          l9231 3912  
                                        l9207 3874                                          l9303 3186  
                                        l9119 3784                                          l9071 36CE  
                                        l9063 369A                                          l9137 5494  
                                        l9225 38EC                                          l9217 38C4  
                                        l9161 37CE                                          l9081 36E4  
                                        l9243 3948                                          l9411 3480  
                                        l9237 392A                                          l9181 380E  
                                        l9165 37D2                                          l9317 31B2  
                                        l9431 5322                                          l9271 3A14  
                                        l9263 39C6                                          l9511 5268  
                                        l9327 31E4                                          l9319 31B6  
                                        l9087 36EE                                          l9193 3846  
                                        l9185 3812                                          l9601 4A7E  
                                        l9443 5348                                          l9267 39EA  
                                        l9515 5286                                          l9507 5234  
                                        l9531 49F2                                          l9523 49A8  
                                        l9611 4ADA                                          l9445 5350  
                                        l9437 5332                                          l9277 3A20  
                                        l9621 4FB4                                          l9463 5388  
                                        l9455 5370                                          l9279 3A22  
                                        l9199 385C                                          l9527 49DC  
                                        l9375 33A2                                          l8921 5688  
                                        l9537 4A40                                          l9369 3384  
                                        l9545 5B14                                          l9713 41A4  
                                        l9705 4140                                          l9641 510E  
                                        l9801 2234                                          l8915 4ECA  
                                        l8923 568C                                          l9459 537A  
                                        l9491 5452                                          l9483 5432  
                                        l9475 5418                                          l9395 3420  
                                        l9299 3172                                          l9571 4D14  
                                        l9555 4CCA                                          l9635 50EE  
                                        l9811 2292                                          l9627 4FFC  
                                        l9619 4FA0                                          l8909 4E36  
                                        l9741 41EE                                          l9485 543A  
                                        l8941 34C2                                          l9581 4D2C  
                                        l9661 4C58                                          l9709 4176  
                                        l9645 5126                                          l9901 25EA  
                                        l9495 545C                                          l9479 5424  
                                        l9399 343E                                          l9583 4D38  
                                        l9575 4D24                                          l9671 4CA2  
                                        l9639 50FC                                          l9831 237A  
                                        l9729 5814                                          l8945 34C6  
                                        l9665 4C62                                          l9649 5152  
                                        l9825 22F4                                          l8883 58DC  
                                        l9739 41E0                                          l9499 546A  
                                        l9915 2694                                          l9851 2428  
                                        l9835 23B4                                          l9819 22B0  
                                        l9763 2148                                          l8965 350A  
                                        l9589 4D54                                          l9677 54EC  
                                        l9933 277A                                          l9829 232C  
                                        l9695 4084                                          l9935 279C  
                                        l9927 2758                                          l9847 2406  
                                        l9775 2174                                          l9783 218A  
                                        l9599 4A6A                                          STR_1 20C9  
                                        STR_2 20D5                                          l8897 5910  
                                        l8977 352E                                          l8969 350E  
                                        l9865 2476                                          l9857 242E  
                                        l9793 21E8                                          STR_3 2071  
                                        STR_4 208A                                          l8899 5912  
                                        l9947 281C                                          l9883 24BC  
                                        l9867 247A                                          l9795 2204  
                                        STR_5 20B7                                          STR_6 2022  
                                        l9893 24F6                                          l9877 2498  
                                        l9797 220E                                          STR_7 20F8  
                                        STR_8 20FB                                          l9959 284A  
                                        l9967 286A                                          l9975 288E  
                                        l9983 2924                                          l9887 24CC  
                                        STR_9 20F5                                          l9995 2966  
                                        _LATA 003FBA                                          _LATB 003FBB  
                                        _LATC 003FBC                                          _LATD 003FBD  
                                        _LATE 003FBE                                          _LATF 003FBF  
                                        _T2PR 003FAB                                          _T6PR 003F93  
                                        _PMD0 0039C0                                          _PMD1 0039C1  
                                        _PMD2 0039C2                                          _PMD3 0039C3  
                                        _PMD4 0039C4                                          _PMD5 0039C5  
                                        _PMD6 0039C6                                          _PMD7 0039C7  
                                        u9600 4E76                                          u9610 56B6  
                                        u9720 358C                                          u9617 56A8  
                                        u9730 359C                                          _PLLR 01CEE0  
                                        u9580 4E2E                                          u9900 36F2  
                                        u9740 359E                                          u9920 3706  
                                        u9770 35E0                                          u9980 3762  
                                        _WPUA 003A41                                          _WPUB 003A51  
                                        _WPUC 003A61                                          _WPUD 003A71  
                                        _WPUE 003A81                                          _WPUF 003A91  
                            __end_of_ADCC_ISR 57DE                                   main@mode_sw 00D7  
                         ?_UART1_Transmit_ISR 0001                                          _dbuf 0198  
                                        _cmdm 2006                                          _atoi 4842  
                                        _main 3A2A                                          _ival 0194  
                                        _mode 00FB                               __end_of_Adc_Isr 59C4  
                                        _prec 00F9                                          _nout 00F5  
                                        pad@i 0030                                          pad@p 002D  
                                        fsr1h 003FE2                                          fsr2h 003FDA  
                                        indf1 003FE7                                          indf2 003FDF  
                                        fsr1l 003FE1                                          pad@w 0032  
                                        fsr2l 003FD9                                          _stoa 45BA  
                                        _puts 5950                                          _vval 00D9  
                                        _utoa 3E5C                                 ___fpclassifyf 4BE0  
                                        prodh 003FF4                                          prodl 003FF3  
                                        start 00AE                               _timer5ReloadVal 003F  
                             ___fldiv@new_exp 0026                               _PWM5_Initialize 5D74  
               ??_UART1_SetTxInterruptHandler 0018                             _UART1_rx_vect_isr 589C  
                                ___param_bank 000000                    __end_of_PWM5_LoadDutyValue 5A98  
                                 ?_UART1_Read 0001                            ?_UART1_rx_vect_isr 0001  
                                       ??_pad 002F                          ??_UART1_Transmit_ISR 000B  
               __end_of_OSCILLATOR_Initialize 5CFA                                         l10011 29B2  
                                       l10013 29BC                                         l10023 2A10  
                                       l10033 2A3C                                         l10113 3EB8  
                                       l10201 2B2A                                         l10123 3FA4  
                                       l10221 2C0C                                         l10205 2B34  
                                       l10151 48AE                                         l10143 4856  
                                       l10047 2A8C                                         l10311 30B8  
                                       l10303 300E                                         l10207 2B7A  
                                       l10153 48DC                                         l10081 464E  
                                       l10321 30FE                                         l10225 2C14  
                                       l10147 48A2                                         l10139 4854  
                                       l10091 46B2                                         l10067 45E4  
                                       l10243 2CFC                                         l10219 2BF4  
                                       l10421 44BA                                         l10149 48AA  
                                       l10085 466C                                         l10077 4636  
                                       l10317 30F2                                         l10237 2CDC  
                                       l10181 2B0E                                         l10159 4916  
                                       l10095 46CC                                         l10263 2E2E  
                                       l10255 2DBE                                         l10239 2CF4  
                                       l10183 2B10                                         l10327 3110  
                                       l10441 45B0                                         l10433 4562  
                                       l10193 2B22                                         l10185 2B1A  
                                       l10353 554A                                         l10435 4594  
                                       l10427 4526                                         l10099 46E4  
                                       l10267 2E58                                         l10355 556C  
                                       l10613 5BCC                                         l10293 2FA6  
                                       l10277 2ED8                                         l10285 2F28  
                                       l10197 2B26                                         l10189 2B1E  
                                       l10641 3DDC                                         l10731 4750  
                                       l10635 3CDC                                         l10387 584E  
                                       l10803 3AB2                                         l10741 4780  
                                       l10629 3CBC                                         l10709 43E4  
                                       l10717 4442                                         l10813 3AE0  
                                       l10751 47F0                                         l10743 47A6  
                                       l10639 3DDA                                         l10831 3B1E  
                                       l10807 3AC6                                         l10737 476E  
                                       l10833 3B24                                         l10825 3B0C  
                                       l10817 3AF4                                         l10809 3ACC  
                                       l10739 4774                                         l10843 3C14  
                                       l10827 3B12                                         l10819 3AFA  
                                       l10749 47E4                                         l10677 4DC4  
                                       l10853 3C2C                                         l10767 4830  
                                       l10695 432E                                         l10847 3C1E  
                                       l10839 3C0A                                         l10857 3C30  
                                       l10849 3C22                                         l10699 4358  
                                       l10883 3C90                                         l10867 3C44  
                                       l10869 3C68                                         l10797 3A96  
                               ___fltol@sign1 001D                                         _ADACT 003EFE  
                                       _ADCAP 003EF5                                         ?_atoi 001C  
                             __end_of___fladd 37A2                                         ?_main 0001  
                                       _ADCLK 003EFF                                         _ADCNT 003EEB  
                                       _ADPCH 003EF1                               __end_of___fldiv 3A2A  
                                       _ADREF 003EFD                               __end_of___awdiv 5392  
                             __end_of___flneg 5B26                                         STR_10 20A2  
                                       STR_11 20C6                                         STR_20 20F2  
                                       STR_12 20DE                                         STR_13 20E6  
                                       STR_22 20F2                                         STR_16 20E2  
                                       STR_25 20EE                                         STR_17 20EA  
                                       STR_27 20EE                               __end_of___awmod 5474  
                                       _ADRPT 003EEC                               __end_of___flmul 3496  
                             __end_of___flsub 5758                               __end_of___fltol 4D66  
                                       ?_stoa 0020                                         ?_puts 0029  
                                       u10020 54CA                                         ?_utoa 0060  
                                       u10040 5AC0                                         u11010 4104  
                                       u10050 5AC2                                         u10027 54BC  
                                       u10220 3978                                         u11110 4218  
                                       u11030 415E                                         u11015 40FA  
                                       u10400 33D2                                         u11130 4248  
                                       u11035 4154                                         u11060 5AF0  
                                       u10500 5354                                         u10260 39D4  
                                       u11300 23DC                                         u11220 2164  
                                       u11117 420A                                         u12110 5DD2  
                                       u11070 5AF2                                         u10270 39F8  
                                       u11160 4280                                         u10440 342E  
                                       u10360 31D2                                         u11400 2494  
                                       u12040 2F7E                                         u11137 423A  
                                       u11170 42B2                                         u11090 5810  
                                       u10610 5282                                         u10450 344C  
                                       u11330 2414                               __end_of___lodiv 4B12  
                                       u11180 42DC                               ___awdiv@divisor 0017  
                                       u12205 578C                                         u12206 578E  
                                       u11190 4308                                         u11175 42AC  
                                       u11167 4272                                         u12400 47FA  
                                       u10560 543E                                         u11360 2446  
                                       u10800 4FB8                                         u12305 5A58  
                                       u11177 429E                                         u12241 3CD6  
                                       u10730 4D3E                                         _U1P1H 003DED  
                                       u11187 42CE                                         _U1P2H 003DEF  
                                       u11197 42FA                                         u12270 3E18  
                                       u10910 4C9A                                         u11470 2684  
                                       _U1P3H 003DF1                                         _U1P1L 003DEC  
                                       u10751 4A4A                                         u10680 4CB8  
                                       u10920 4C9C                                         _U1P2L 003DEE  
                                       _T2CON 003FAC                                         u10905 4C7C  
                                       u10690 4CE8                                         u10930 5532  
                                       u11650 2A26                                         u11730 4662  
                                       u10770 4A82                                         _U1P3L 003DF0  
                                       u12268 3DC6                                         u10860 4C1E  
                                       u11740 4696                                         u11820 3FD0  
                                       u11821 3FCE                                         u11670 2A84  
                                       u11590 2948                                         u11830 3FDE  
                                       u12295 5A8A                                         u10695 4CDE  
                                       u10960 4052                                         u11840 3FE2  
                                       u12480 3AEC                                         u10865 4C14  
                                       u10937 5524                                         u11681 45C4  
                                       u10970 4072                                         u11770 46F8  
                                       u11747 4688                                         u11940 2C4E  
                                       u10965 4048                                         u11870 4948  
                                       u11790 3E6E                                         _T5CLK 003F9D  
                             __end_of___lomod 5034                                         u11970 2D36  
                                       u10995 409C                                         u10996 40A2  
                                       _T2HLT 003FAD                                         u10997 40B0  
                                       _T5CON 003F9A                                         _T6CON 003F94  
                                       _T6HLT 003F95                                         _T2TMR 003FAA  
                                       _U1UIR 003DF8                                         _T2RST 003FAF  
                                       _U1RXB 003DE8                                         _U1TXB 003DEA  
                      __end_of_DAC1_SetOutput 5E66                                         _T6TMR 003F92  
                                       i2l464 59F0                                         i2l650 5B7C  
                                       _T6RST 003F97                                         i2l731 5C2E  
                         ??_UART1_rx_vect_isr 000D                               ___awdiv@counter 0019  
                                       _OSCEN 0039DD                                  vfpfcnvrt@fmt 00B1  
                                vfpfcnvrt@llu 00B8                                         _TMR5H 003F99  
                                       _TMR5L 003F98                                         _TRISA 003FC2  
                                       _TRISB 003FC3                                         _TRISC 003FC4  
                                       _TRISD 003FC5                                         _TRISE 003FC6  
                                       _TRISF 003FC7                                   _Default_ISR 5E78  
                             _PWM6_Initialize 5D5C                     ?_TMR6_SetInterruptHandler 0015  
                           _UART1_tx_vect_isr 585C                              __end_of_TMR5_ISR 567E  
                            __end_of_TMR6_ISR 59FE                                         _buff1 0300  
                                       _fh_po 5D2C                                         _fh_pr 5BD0  
                                       _fh_ps 5D44                                         _flags 003D  
                                       _fputc 4E1E                                         _fputs 5474  
                             __end_of_isdigit 5AF8                               ?_DAC1_GetOutput 0001  
                          ?_UART1_tx_vect_isr 0001                                         atoi@n 0024  
                                       pad@fp 0029                                         atoi@s 001C  
                                       _width 00F7                                         _putch 5E52  
                             __end_of_isspace 581C                               __end_of_isupper 5AC8  
                                       pclath 003FFA                                         pclatu 003FFB  
                                       tablat 003FF5                                         plusw1 003FE3  
                                       plusw2 003FDB                                         stoa@i 002C  
                                       stoa@l 0034                                         stoa@p 0032  
                                       stoa@s 0022                                         stoa@w 002E  
                                       puts@s 0029                                         utoa@d 0062  
                                       utoa@i 007E                                         utoa@n 0076  
                                       utoa@p 0072                                         utoa@w 0074  
                                       status 003FD8           __end_of_UART1_SetRxInterruptHandler 5DF2  
                 _UART1_SetRxInterruptHandler 5DE4                               __end_of_sprintf 562E  
                              ?___fpclassifyf 0015                               __end_of_tolower 5950  
                             __end_of_strncmp 4318                              ___lodiv@dividend 0015  
    __end_of_UART1_DefaultFramingErrorHandler 5E7E            ??_UART1_DefaultFramingErrorHandler 000D  
           ?_UART1_DefaultFramingErrorHandler 0001              _UART1_DefaultFramingErrorHandler 5E7C  
                         ??_UART1_tx_vect_isr 000B                     __end_of_UART1_rx_vect_isr 58DA  
              ??_TMR6_DefaultInterruptHandler 0008                               _TMR5_Initialize 56CA  
                             __initialization 516C                                  __end_of_cmdm 2022  
                                __end_of_atoi 4974                                  __end_of_main 3C98  
                     __end_of_DAC1_Initialize 5E52                                  __end_of_stoa 4702  
                                __end_of_puts 598A                                  __end_of_utoa 400C  
                 ??_UART1_DefaultErrorHandler 000D                       __end_of_TMR2_Initialize 5CC0  
                                ?_UART1_Write 0001                                        ??_atoi 001E  
                                      ??_main 00D5                      _TMR5_SetInterruptHandler 5E2A  
                                      ??_stoa 0024                                        ??_puts 002B  
                                      ??_utoa 006A                                 __activetblptr 000003  
                             ?_DAC1_SetOutput 0001                     __end_of_UART1_tx_vect_isr 589A  
                            ___lodiv@quotient 0025                               _TMR6_Initialize 5B26  
                            _UART1_Initialize 4ED2                                        _ADACCH 003EE9  
                                      _ADACCL 003EE8                                        ?_fh_po 002C  
                                      ?_fh_pr 002C                                        ?_fh_ps 002C  
                                      _ADACCU 003EEA                                        _ADACQH 003EF4  
                                      _ADACQL 003EF3                                        _ADCON0 003EF8  
                                      _ADCON1 003EF9                                        _ADCON2 003EFA  
                                      _ADCON3 003EFB                                        _ADERRH 003EE3  
                                      _ADERRL 003EE2                                     ??_Adc_Isr 0005  
                                      ?_fputc 0017                                        _ADLTHH 003EDF  
                                      _ADLTHL 003EDE                                        ?_fputs 0020  
                                      _ADRESH 003EF0                                        _ADRESL 003EEF  
                                      _ADPREH 003EF7                                        _ADPREL 003EF6  
                                      _ADSTAT 003EFC                                        _ADUTHH 003EE1  
                            ___awdiv@dividend 0015                                        _ADUTHL 003EE0  
                                      _ANSELA 003A40                                        ?_putch 0001  
                                      _ANSELB 003A50                                        _ANSELC 003A60  
                                      _ANSELD 003A70                                        _ANSELE 003A80  
                                      _ANSELF 003A90                                        _RB1I2C 003A5A  
                                      _RB2I2C 003A5B                                        _RD0I2C 003A7A  
                                      _U1CON0 003DF2                                        _U1CON1 003DF3  
                                      _U1CON2 003DF4                                        _RD1I2C 003A7B  
                                      _RC3I2C 003A6A                                        _RC4I2C 003A6B  
                                      _U1BRGH 003DF6                                        _U1FIFO 003DF7  
                                      _U1BRGL 003DF5                                        _T5GATE 003F9C  
                                      _T5GCON 003F9B                            __cli_interpret_cmd 3C98  
                                      _RC3PPS 003A13                                        _RD2PPS 003A1A  
                                      _RC5PPS 003A15                                        _ODCONA 003A42  
                                      _ODCONB 003A52                                        _RC6PPS 003A16  
                                      _ODCONC 003A62                                        _ODCOND 003A72  
                                      _ODCONE 003A82                                        _ODCONF 003A92  
                                      _RF2PPS 003A2A                       __end_of_PWM5_Initialize 5D8C  
                                      i2l6049 5C9E                                        _INLVLA 003A44  
                                      _INLVLB 003A54                                        _INLVLC 003A64  
                                      _INLVLD 003A74                                        _INLVLE 003A84  
                                      _INLVLF 003A94                                        i2l6441 5596  
                                      i2l6345 5B78                                        i2l6445 55C8  
                                      i2l6365 50D0                                        i2l6381 59B6  
                                      _OSCFRQ 0039DF                                 vfpfcnvrt@done 00C2  
                       _UART1_SetErrorHandler 5E0E                              __end_of___xxtofl 4842  
                  ??_ADCC_GetConversionResult 0003                           ?__cli_interpret_cmd 002E  
                            __end_of_cli_init 530E                              __end_of_cli_read 446E  
                     DAC1_SetOutput@inputData 0015                                  _CCPTMRS1bits 003F5F  
                                vfprintf@cfmt 0038                                        ___flge 4974  
                                      ___fleq 5200                                     ??___fladd 001D  
                                      ___wmul 5B82                                     ??___fldiv 001D  
                                   ??___awdiv 0019                                     ??___flneg 0019  
                                   ??___awmod 0019                                        _g_cmds 01EF  
                                   ??___flmul 002B                                     ??___flsub 0037  
                                   ??___fltol 0019                                     ??___lodiv 0025  
                                   ??___lomod 0025                                        _efgtoa 2100  
                                      _floorf 400C                                        _memset 446E  
                     __end_of_PWM6_Initialize 5D74                                        clear_0 51B2  
                                      clear_1 51C4                                        clear_2 51D0  
                                      clear_3 51DC                                        clear_4 51E8  
                            ___awdiv@quotient 001B                               ___awmod@divisor 0017  
                                  _Timers_Isr 558E                                        isa$std 000001  
                             ___awmod@counter 0019                                        _printf 5C3C  
                                      pad@buf 002B                                        _strcpy 54DC  
                                   ?_ADCC_ISR 0001                                        _strlen 567E  
                             _ADCC_Initialize 5392                                        fputc@c 0017  
                              _PMD_Initialize 5C5E                          ??__cli_interpret_cmd 0060  
                                      fputs@c 0026                                        fputs@i 0027  
                                      fputs@s 0020                                     ??_isdigit 0017  
                             ___fpclassifyf@e 001D                               ___fpclassifyf@u 001F  
                             ___fpclassifyf@x 0015                                  __mediumconst 0000  
                                   ??_isspace 0017                                        tblptrh 003FF7  
                                   ??_isupper 0017                                        tblptrl 003FF6  
                                      tblptru 003FF8                                        stoa@cp 0030  
                                      stoa@fp 0020                              __end_of_vfprintf 558E  
                                      utoa@fp 0060      TMR5_SetInterruptHandler@InterruptHandler 0015  
 UART1_SetTxInterruptHandler@InterruptHandler 0015   UART1_SetRxInterruptHandler@InterruptHandler 0015  
    TMR6_SetInterruptHandler@InterruptHandler 0015   ADCC_SetADIInterruptHandler@InterruptHandler 0015  
        __end_of_UART1_SetOverrunErrorHandler 5E00                  _UART1_SetOverrunErrorHandler 5DF2  
                   _UART1_DefaultErrorHandler 5E6C                                     ??_sprintf 0039  
                                   ??_tolower 001D                                     ??_strncmp 001F  
                                  ___flge@ff1 002F                                    ___flge@ff2 0033  
                             ??___fpclassifyf 0019                       __end_of_TMR5_Initialize 5712  
                                ___xxtofl@arg 001F                                  ___xxtofl@exp 001E  
                           _SYSTEM_Initialize 59FE                                  ___xxtofl@val 0015  
                                  ___fleq@ff1 0015                                    ___fleq@ff2 0019  
                                  __accesstop 0060                       __end_of__initialization 51FA  
                                  ___flneg@f1 0015                            ?_SYSTEM_Initialize 0001  
                               ___rparam_used 000001                                    ___fltol@f1 0015  
                             _TMR5_WriteTimer 5C18                             __end_of_Led_Blink 5CDE  
                              __pcstackCOMRAM 0001                                  __pidataBANK0 5E72  
                                __pidataBANK1 5D8C                           ??_SYSTEM_Initialize 001A  
                            ?_DAC1_Initialize 0001                                 __end_of_fh_po 5D44  
                               __end_of_fh_pr 5BF4                                 __end_of_fh_ps 5D5C  
                                   ?_TMR5_ISR 0001                                     ?_TMR6_ISR 0001  
                              ivt0x8_undefint 00AC                                 __end_of_fputc 4ED2  
                               __end_of_fputs 54DC                             ??_SPI1_Initialize 0015  
                               __end_of_putch 5E5C                              ?_TMR2_Initialize 0001  
                     __end_of_TMR6_Initialize 5B54                        __end_of_PMD_Initialize 5C80  
                                  ??_ADCC_ISR 0006                         __end_of_TMR6_CallBack 5C18  
                          _spi1_configuration 2001                         TMR6_ISR@CountCallBack 0041  
                   _UART1_FramingErrorHandler 00E6                                       ??_fh_po 002E  
                                     ??_fh_pr 002E                                       ??_fh_ps 002E  
                                     ??_fputc 001B                     __end_of_SYSTEM_Initialize 5A34  
                                     ??_fputs 0024                               linux_putc@a_len 002E  
                                     ??_putch 0016                                    __pbssBANK0 00D9  
                                  __pbssBANK1 0100                                    __pbssBANK2 0200  
                                  __pbssBANK3 0300                 ?_UART1_SetOverrunErrorHandler 0015  
                      ?_UART1_SetErrorHandler 0015                              ?_PWM5_Initialize 0001  
                                     IVTBASEH 003FD6                                       IVTBASEL 003FD5  
                                     IVTBASEU 003FD7                              linux_getc@a_data 0016  
                              cli_init@a_cmds 02D9                                       ?___flge 002F  
                                     ?___fleq 0015                                  ??_UART1_Read 0015  
                                     ?___wmul 0015              __end_of_TMR6_SetInterruptHandler 5E2A  
                     __end_of_ADCC_Initialize 5404                    __end_of_PWM6_LoadDutyValue 5A66  
                                  ??_TMR5_ISR 0013                                    ??_TMR6_ISR 0009  
                                     ?_efgtoa 0071                                       _ADFLTRH 003EE7  
                                     ?_floorf 002E                                       _ADFLTRL 003EE6  
                                     ?_memset 0015                                       _ADPREVH 003EEE  
                                     _ADPREVL 003EED                              ?_PWM6_Initialize 0001  
                                 ?_Timers_Isr 0001                                       _ADSTPTH 003EE5  
                                     _ADSTPTL 003EE4                                       ?_printf 02C3  
                             ?_PMD_Initialize 0001                             _UART1_Receive_ISR 5034  
                                     ?_strcpy 0015                                       ?_strlen 0015  
                                     _U1ERRIE 003DFA                                       _U1ERRIR 003DF9  
                            ??_DAC1_GetOutput 0015                                  ?_Default_ISR 0001  
                          ?_UART1_Receive_ISR 0001                                       _U1RXPPS 003AE5  
                                   ?___xxtofl 0015                            _PWM5_LoadDutyValue 5A66  
                                     _OSCCON1 0039D9                                       _OSCCON3 0039DB  
                                     _IVTLOCK 003FD4                                       _SPI1CLK 003D1C  
                                   ?_cli_init 02D7                                     ?_cli_read 0032  
                                     _SPI1RXB 003D10                                       _SPI1TXB 003D11  
                                     _OSCTUNE 0039DE                                       _PWM5DCH 003F6D  
                                     _PWM5DCL 003F6C                                       _PWM6DCH 003F69  
                                     _PWM6DCL 003F68                                       _PWM5CON 003F6E  
                                     _PWM6CON 003F6A                                       _SLRCONA 003A43  
                                     _SLRCONB 003A53                                       _SLRCONC 003A63  
                                     _SLRCOND 003A73                                       _SLRCONE 003A83  
                                     _SLRCONF 003A93                                       _Adc_Isr 598A  
                                  _build_date 00FF                           ??_UART1_Receive_ISR 000D  
                                  _build_time 00FE                              ___lomod@dividend 0015  
                     __end_of_TMR5_WriteTimer 5C3C                           ?_PWM5_LoadDutyValue 0015  
                          __end_of_UART1_Read 585A                              ?_TMR5_Initialize 0001  
                   INTERRUPT_Initialize@state 0015                                       __Hparam 0000  
                                     __Lparam 0000                      __end_of_UART1_Initialize 4F86  
                  ??_TMR5_SetInterruptHandler 0018                      __cli_interpret_cmd@a_ctx 002E  
                                     ___fladd 3496                                       ___fldiv 37A2  
                                     ___awdiv 530E                                       ___flneg 5AF8  
                                     ___awmod 5404                                       ___flmul 3144  
                                     ___flsub 5712                                       ___fltol 4CAC  
                                     ___lodiv 4A44                                       ___lomod 4F86  
                            ??_DAC1_SetOutput 0015                     __end_of_UART1_Receive_ISR 50D6  
                                   ?_vfprintf 00CE                          ??_PWM5_LoadDutyValue 0017  
                                __psmallconst 2000                                       __pcinit 516C  
                            ?_TMR6_Initialize 0001                                       __ramtop 2000  
                                     _cli_ctx 0240                                       __ptext0 3A2A  
                                     __ptext1 5D14                                       __ptext2 528A  
                                     __ptext3 55E0                                       __ptext4 5C3C  
                                     __ptext5 553C                                       __ptext6 2ACC  
                                     __ptext7 3E5C                                       __ptext8 4F86  
                                     __ptext9 4A44                         _OSCILLATOR_Initialize 5CDE  
                                     _isdigit 5AC8                                    ??___xxtofl 0019  
                            ___awmod@dividend 0015                      ??_PIN_MANAGER_Initialize 0015  
                                     _isspace 57DE                                   Timers_Isr@i 0011  
                                   _T5CONbits 003F9A                                       _isupper 5A98  
                                     efgtoa@c 0077                                       efgtoa@d 008F  
                                     efgtoa@e 00A7                                       efgtoa@f 0073  
                                     efgtoa@g 00A1                                       efgtoa@h 0099  
                                     efgtoa@i 00A5                                       efgtoa@l 009D  
                                     efgtoa@m 0089                                       efgtoa@n 00A9  
                                     efgtoa@p 0093                                       efgtoa@t 0083  
                                     efgtoa@u 00AB                                       efgtoa@w 0096  
                                  ??_cli_init 0039                                    ??_cli_read 0034  
                                     atoi@neg 0022                                    _linux_getc 5BAC  
                                     _sprintf 55E0                                       _tolower 5916  
                                  _linux_putc 5DBA                             __end_of_scmd_init 5D2C  
                                     _strncmp 41B6                          end_of_initialization 51FA  
                                     floorf@e 0064                                       floorf@m 0060  
                                     floorf@u 0066                                       floorf@x 002E  
                                     fputc@fp 0019                                       memset@c 0017  
                                     memset@k 001D                                       memset@n 0019  
                                     memset@s 001F           __end_of_UART1_SetTxInterruptHandler 5DE4  
                 _UART1_SetTxInterruptHandler 5DD6                                       fputs@fp 0022  
                              display_led@led 0017                ??_UART1_SetOverrunErrorHandler 0018  
                           __end_of_vfpfcnvrt 3144                                    efgtoa@mode 0098  
                                  efgtoa@sign 0091                                     _SPI1TCNTL 003D12  
                                     postdec1 003FE5                                       postdec2 003FDD  
                                     postinc0 003FEE                                       postinc1 003FE6  
                                     postinc2 003FDE                              ?_ADCC_Initialize 0001  
                                  ??_vfprintf 0038                             UART1_Write@txData 0015  
                         _UART1_RxDataHandler 5C80                                       strcpy@d 001D  
                                     strlen@a 0017                                       strcpy@s 001B  
                                     strlen@s 0015                                     _PORTAbits 003FCA  
                                   _PORTBbits 003FCB                      _TMR6_SetInterruptHandler 5E1C  
                       _TMR5_InterruptHandler 00DD                                   ___fladd@grs 0024  
         __end_of_ADCC_SetADIInterruptHandler 5E46                   _ADCC_SetADIInterruptHandler 5E38  
                               ___xxtofl@sign 001D                                     _TRISCbits 003FC4  
                                 ___fldiv@grs 0028                                   ___fldiv@rem 0021  
                        ?_UART1_RxDataHandler 0001                              ?_TMR5_WriteTimer 000F  
                     TMR5_WriteTimer@timerVal 000F                                   ___flmul@grs 0063  
               ??_ADCC_SetADIInterruptHandler 0018                               _SPI1_Initialize 5CFA  
                __end_of_INTERRUPT_Initialize 579C                                     _Led_Blink 5CC0  
                               ??_display_led 0015                ??_ADCC_DefaultInterruptHandler 0001  
                              __end_of___flge 4A44                                __end_of___fleq 528A  
                                 vfpfcnvrt@ap 00B2                                   vfpfcnvrt@cp 00C0  
                                 vfpfcnvrt@ct 00CB                                   vfpfcnvrt@fp 00AF  
                              __end_of___wmul 5BAC                                __end_of_efgtoa 2ACC  
                              __end_of_floorf 41B6                        ?_OSCILLATOR_Initialize 0001  
                                  floorf@F526 018C                                __end_of_memset 45BA  
                   ?_ADCC_GetConversionResult 0001                                __end_of_printf 5C5E  
                              __end_of_strcpy 553C                                __end_of_strlen 56CA  
                         start_initialization 516C                               ___lodiv@divisor 001D  
                             ___lodiv@counter 002D          __end_of_TMR5_DefaultInterruptHandler 5E80  
                _TMR5_DefaultInterruptHandler 5E7E                                   __end_of_pad 516C  
                     ??_UART1_SetErrorHandler 0018                                   ?_linux_getc 0016  
                                 ?_linux_putc 002C                         ??_UART1_RxDataHandler 000D  
                                 putch@txData 0016                                    ivt0x8_base 0008  
                               _uart1RxBuffer 0200                         __end_of___fpclassifyf 4CAC  
                               _uart1TxBuffer 0140                                   vfprintf@fmt 00D0  
                                    ??___flge 006D                                      ??___fleq 001D  
                            ??_PMD_Initialize 0015                                      ??___wmul 0019  
                                  ?_Led_Blink 0001                                      ??_efgtoa 0078  
                                 __pdataBANK0 00FE                                   __pdataBANK1 01E8  
                                    ??_floorf 0032                                      ??_memset 001B  
                                ??_Timers_Isr 000F                                    memset@dest 0015  
                                    ??_printf 0039                                      ??_strcpy 0019  
                                    ??_strlen 0017                                     ___fladd@a 0019  
                                   ___fladd@b 0015                                     ___fldiv@a 0019  
                                   ___fldiv@b 0015                           __end_of_display_led 4E1E  
                 PWM5_LoadDutyValue@dutyValue 0015                                     ___flmul@a 0027  
                                   ___flmul@b 0023                                   __pbssCOMRAM 0039  
                                   ___flsub@a 0033                                     ___flsub@b 002F  
                          _UART1_ErrorHandler 00E0                                 __pcstackBANK0 0060  
                               __pcstackBANK2 02C3                            _PWM6_LoadDutyValue 5A34  
                     __end_of_SPI1_Initialize 5D14                      _UART1_RxInterruptHandler 00F2  
               ?_TMR5_DefaultInterruptHandler 0001                                      ?_Adc_Isr 0001  
                         ?_PWM6_LoadDutyValue 0015                                linux_putc@data 002C  
                ?_UART1_SetRxInterruptHandler 0015                            __end_of_Timers_Isr 55E0  
                       _TMR6_InterruptHandler 00E9                                   _efgtoa$3084 007F  
                                 _efgtoa$3076 007D                                   _efgtoa$3085 0081  
                      _PIN_MANAGER_Initialize 4B12                                 cli_init@a_ctx 02D7  
                           ?_UART1_Initialize 0001          __end_of_UART1_SetFramingErrorHandler 5E0E  
                _UART1_SetFramingErrorHandler 5E00                                 cli_read@a_ctx 0032  
                                    ?___fladd 0015                           UART1_Read@readValue 0015  
                                    ?___fldiv 0015                                      ?___awdiv 0015  
                                    ?___flneg 0015                                      ?___awmod 0015  
                                    ?___flmul 0023                                      ?___flsub 002F  
                                    ?___fltol 0015                                      ?___lodiv 0015  
                                    ?___lomod 0015                            ??_UART1_Initialize 0018  
                            _uart1RxLastError 0045                                 _cli_read$2504 006A  
                               ??_UART1_Write 0015                          ??_PWM6_LoadDutyValue 0017  
                                    _DAC1CON0 003E9E                                      _DAC1CON1 003E9C  
                                   _disp_tick 00FD                                      _ADCC_ISR 579C  
                             ___lomod@divisor 001D                                   __smallconst 2000  
                             ___lomod@counter 0025      __end_of_UART1_DefaultOverrunErrorHandler 5E7C  
          ??_UART1_DefaultOverrunErrorHandler 000D             ?_UART1_DefaultOverrunErrorHandler 0001  
            _UART1_DefaultOverrunErrorHandler 5E7A                                      ?_isdigit 0015  
                                    ?_isspace 0015                                      ?_isupper 0015  
                                    ?_sprintf 02C3                                      ?_tolower 001B  
                                    _T2CLKCON 003FAE                                      ?_strncmp 0019  
                                 _U1ERRIRbits 003DF9                          _INTERRUPT_Initialize 5758  
                                    _T6CLKCON 003F96                          __cli_interpret_cmd@i 0031  
                              ___wmul@product 0019                                      _LATAbits 003FBA  
       UART1_SetErrorHandler@interruptHandler 0015                                      _LATDbits 003FBD  
                                    _LATEbits 003FBE                                     _scmd_init 5D14  
                                    _LATFbits 003FBF                                      _IPR1bits 003981  
                                    _PIE1bits 003991                                      _IPR3bits 003983  
                                    _PIE3bits 003993                                     _tickCount 0180  
                                    _IPR8bits 003988                                      _IPR9bits 003989  
                                    _PIE8bits 003998                                      _PIE9bits 003999  
                                    _IVTBASEH 003FD6                                      _IVTBASEL 003FD5  
                                    _IVTBASEU 003FD7                                     cli_read@i 006C  
               ??_UART1_SetRxInterruptHandler 0018                                      _PIR1bits 0039A1  
                                    _PIR2bits 0039A2                                      _SPI1BAUD 003D19  
                                    i2u611_48 508E                                      i2u611_49 50A4  
                                    i2u622_40 55DE                                      i2u613_48 50BA  
                                    i2u605_48 5C04                                      _PIR4bits 0039A4  
                                    _SPI1CON0 003D14                                      _SPI1CON1 003D15  
                                    _SPI1CON2 003D16                                     _puts$3267 002B  
                                    i2u641_48 565C                                      i2u609_48 505E  
                                    i2u641_49 5670                                      i2u609_49 5074  
                                    i2u635_40 59E4                                      i2u634_48 57BC  
                                    i2u634_49 57D0                                      i2u637_48 5878  
                                    i2u637_49 588C                                      _PIR8bits 0039A8  
                                    i2u639_48 58B8                                      i2u639_49 58CC  
                                    _PIR9bits 0039A9                                      i2u596_40 5CC8  
                  ??_TMR6_SetInterruptHandler 0018                                      i2u596_46 5CCA  
                                 ??_Led_Blink 0008                    __end_of_UART1_Transmit_ISR 5B82  
                                    _TMR5_ISR 5630                                      _TMR6_ISR 59C4  
               ?_UART1_SetFramingErrorHandler 0015                                   _display_led 4D66  
                                   _vfpfcnvrt 2ACC                             ___wmul@multiplier 0015  
                                   main@dac_v 00D8                                 _TMR6_CallBack 5BF4  
                   ?_TMR5_SetInterruptHandler 0015                           __end_of_UART1_Write 5916  
                                _isspace$3188 001B                                    vfpfcnvrt@c 00C6  
                                  vfpfcnvrt@f 00C7                              ?_SPI1_Initialize 0001  
                                 _INTCON0bits 003FD2                                     copy_data0 5180  
                       ?_INTERRUPT_Initialize 0001                             ??_DAC1_Initialize 0015  
                      _uart1TxBufferRemaining 0049                             ??_TMR2_Initialize 0015  
              ??_TMR5_DefaultInterruptHandler 000F                                    ?_scmd_init 0001  
                                _uart1RxCount 0046                                      __Hrparam 0000  
            __end_of_ADCC_GetConversionResult 5DBA                                    vfprintf@ap 00D1  
                                    __Lrparam 0000                                    vfprintf@fp 00CE  
                     ??_OSCILLATOR_Initialize 0015                                    ?_vfpfcnvrt 00AF  
                                    _adc_chan 0044                             ??_PWM5_Initialize 0015  
                                    _adc_tick 00FC                                ?_TMR6_CallBack 0001  
                          ___fpclassifyf@F465 0190                                    sprintf@fmt 02C5  
                                    ___xxtofl 4702                                      __pivt0x8 0008  
                                    _cli_init 528A                                      _cli_read 4318  
                                    __ptext10 45BA                                      __ptext11 2100  
                                    __ptext20 3496                                      __ptext12 5916  
                                    __ptext21 5AF8                                      __ptext13 5A98  
                                    __ptext30 5AC8                                      __ptext22 3144  
                                    __ptext14 54DC                                      __ptext31 5B82  
                                    __ptext23 4974                                      __ptext15 50D6  
                                    __ptext40 41B6                                      __ptext32 4D66  
                                    __ptext24 5200                                      __ptext16 400C  
                                    __ptext41 567E                                      __ptext33 4318  
                                    __ptext25 37A2                                      __ptext17 4BE0  
                                    __ptext50 4702                                      __ptext42 5D2C  
                                    __ptext34 446E                                      __ptext26 5404  
                                    __ptext18 4CAC                                      __ptext51 59FE  
                                    __ptext43 5BD0                                      __ptext35 5DBA  
                                    __ptext27 530E                                      __ptext19 5712  
                                    __ptext60 56CA                                      __ptext52 4ED2  
                                    __ptext44 5D44                                      __ptext36 5BAC  
                                    __ptext28 4842                                      __ptext61 5E2A  
                                    __ptext53 5DD6                                      __ptext45 5950  
                                    __ptext37 5DC8                                      __ptext29 57DE  
                                    __ptext70 5E46                                      __ptext62 5CA2  
                                    __ptext54 5DE4                                      __ptext46 5474  
                                    __ptext38 581C                                      __ptext71 5392  
                                    __ptext63 5CFA                                      __ptext55 5DF2  
                                    __ptext47 4E1E                                      __ptext39 3C98  
                                    __ptext80 5DA4                                      __ptext72 5E38  
                                    __ptext64 5D5C                                      __ptext56 5E00  
                                    __ptext48 5E52                                      __ptext81 59C4  
                                    __ptext73 5A34                                      __ptext65 5D74  
                                    __ptext57 5E0E                                      __ptext49 58DA  
                                    __ptext90 5E7A                                      __ptext82 5BF4  
                                    __ptext74 5A66                                      __ptext66 5C5E  
                                    __ptext58 5B26                                      __ptext91 5E7C  
                                    __ptext83 5CC0                                      __ptext75 5E5C  
                                    __ptext67 4B12                                      __ptext59 5E1C  
                                    __ptext92 5E6C                                      __ptext84 5E76  
                                    __ptext76 5E66                                      __ptext68 5CDE  
                                    __ptext93 5C80                                      __ptext85 5E78  
                                    __ptext77 579C                                      __ptext69 5758  
                                    __ptext94 5630                                      __ptext86 585C  
                                    __ptext78 5E74                                      __ptext95 5E7E  
                                    __ptext87 5B54                                      __ptext79 598A  
                                    __ptext96 558E                                      __ptext88 589C  
                                    __ptext97 5C18                                      __ptext89 5034  
                                    __ptext98 0000                                  ??_linux_getc 0017  
                                ??_linux_putc 002F                 __end_of_UART1_SetErrorHandler 5E1C  
                                  strcpy@dest 0015                        __cli_interpret_cmd@ret 0030  
                           ??_PWM6_Initialize 0015                                   _IVTLOCKbits 003FD4  
                                    efgtoa@fp 0071                                      efgtoa@ne 0087  
                                    efgtoa@pp 0085                                      efgtoa@ou 008B  
                   _UART1_OverrunErrorHandler 00E3                     _ADCC_ADI_InterruptHandler 00EC  
                                   stoa@F1164 01E8  UART1_SetOverrunErrorHandler@interruptHandler 0015  
                                    isa$xinst 000000                    ?_UART1_DefaultErrorHandler 0001  
                                    _vfprintf 553C                                     printf@fmt 02C3  
                          __end_of_linux_getc 5BD0                             _UART1_is_rx_ready 5DC8  
                          __end_of_linux_putc 5DC8                                   _UART1_Write 58DA  
                  __end_of__cli_interpret_cmd 3E5C                             ??_TMR5_Initialize 0018  
                          ?_UART1_is_rx_ready 0001                                 ??_Default_ISR 000B  
              ??_UART1_SetFramingErrorHandler 0018                                _vfpfcnvrt$3123 00C4  
                 __end_of_UART1_RxDataHandler 5CA2                                   _uart1RxHead 0048  
                                 _uart1TxHead 004B                                   _uart1RxTail 0047  
                                 fh_po@a_data 002C                                   _uart1TxTail 004A  
                                    isdigit@c 0015                        ??_INTERRUPT_Initialize 0015  
                                 fh_pr@a_data 002C                           ??_UART1_is_rx_ready 0015  
                                 fh_ps@a_data 002C          __end_of_TMR6_DefaultInterruptHandler 5E78  
                _TMR6_DefaultInterruptHandler 5E76          __end_of_ADCC_DefaultInterruptHandler 5E76  
                _ADCC_DefaultInterruptHandler 5E74                                      intlevel2 0000  
                                   sprintf@ap 02CA                                      isspace@c 0015  
                     ?_PIN_MANAGER_Initialize 0001                             ??_TMR6_Initialize 0018  
                                 ??_scmd_init 0039                                     strcpy@src 0017  
                                    isupper@c 0015                                     strncmp@_l 0019  
                                   strncmp@_r 001B                           _uart1RxStatusBuffer 0100  
                                 efgtoa@nmode 0095                                    _SPI1SDIPPS 003ADF  
                                  _SPI1SCKPPS 003ADE                                      printf@ap 00D3  
                   __end_of_UART1_is_rx_ready 5DD6                                    _UART1_Read 581C  
UART1_SetFramingErrorHandler@interruptHandler 0015                      _ADCC_GetConversionResult 5DA4  
           __end_of_UART1_DefaultErrorHandler 5E72                                   ??_vfpfcnvrt 00B4  
                                    stoa@nuls 0025                               ??_TMR6_CallBack 0009  
                                    sprintf@f 02CC                                      tolower@c 001B  
                                    sprintf@s 02C3                                      strncmp@l 0021  
                                    strncmp@n 001D                                      strncmp@r 0023  
                 PWM6_LoadDutyValue@dutyValue 0015                      _UART1_TxInterruptHandler 00EF  
                               ___fladd@signs 0021                           __end_of_Default_ISR 5E7A  
              __end_of_PIN_MANAGER_Initialize 4BE0                             ??_ADCC_Initialize 0018  
                              _DAC1_GetOutput 5E66                 ?_TMR6_DefaultInterruptHandler 0001  
                                ___fladd@aexp 0022                                  ___fladd@bexp 0023  
               ?_ADCC_DefaultInterruptHandler 0001                  ?_UART1_SetTxInterruptHandler 0015  
                  __end_of_spi1_configuration 2006  
