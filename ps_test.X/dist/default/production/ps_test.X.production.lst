

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Mar 15 14:46:40 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=3
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=3
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=3
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=3
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=3
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=3
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=3
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1
   111                           	psect	text90,global,reloc=2,class=CODE,delta=1
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1
   113                           	psect	text92,global,reloc=2,class=CODE,delta=1
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1
   115                           	psect	text94,global,reloc=2,class=CODE,delta=1
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1
   117                           	psect	text96,global,reloc=2,class=CODE,delta=1
   118                           	psect	text97,global,reloc=2,class=CODE,delta=1
   119                           	psect	text98,global,reloc=2,class=CODE,delta=1
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1
   121                           	psect	text100,global,reloc=2,class=CODE,delta=1
   122                           	psect	text101,global,reloc=4,class=CODE,delta=1
   123                           	psect	text102,global,reloc=2,class=CODE,delta=1
   124                           	psect	text103,global,reloc=2,class=CODE,delta=1
   125                           	psect	text104,global,reloc=2,class=CODE,delta=1
   126                           	psect	text105,global,reloc=2,class=CODE,delta=1
   127                           	psect	text106,global,reloc=2,class=CODE,delta=1
   128                           	psect	text107,global,reloc=4,class=CODE,delta=1
   129                           	psect	text108,global,reloc=2,class=CODE,delta=1
   130                           	psect	text109,global,reloc=2,class=CODE,delta=1
   131                           	psect	text110,global,reloc=2,class=CODE,delta=1
   132                           	psect	text111,global,reloc=4,class=CODE,delta=1
   133                           	psect	text112,global,reloc=2,class=CODE,delta=1
   134                           	psect	text113,global,reloc=2,class=CODE,delta=1
   135                           	psect	text114,global,reloc=2,class=CODE,delta=1
   136                           	psect	text115,global,reloc=4,class=CODE,delta=1
   137                           	psect	text116,global,reloc=4,class=CODE,delta=1
   138                           	psect	text117,global,reloc=2,class=CODE,delta=1
   139                           	psect	text118,global,reloc=4,class=CODE,delta=1
   140                           	psect	text119,global,reloc=2,class=CODE,delta=1
   141                           	psect	text120,global,reloc=2,class=CODE,delta=1
   142                           	psect	text121,global,reloc=2,class=CODE,delta=1
   143                           	psect	text122,global,reloc=4,class=CODE,delta=1
   144                           	psect	text123,global,reloc=2,class=CODE,delta=1
   145                           	psect	text124,global,reloc=2,class=CODE,delta=1
   146                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   147                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   148                           	psect	text125,global,reloc=2,class=CODE,delta=1
   149                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   150                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   151                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   152  0000                     
   153                           ; Version 2.40
   154                           ; Generated 17/11/2021 GMT
   155                           ; 
   156                           ; Copyright © 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   157                           ; All rights reserved.
   158                           ; 
   159                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   160                           ; 
   161                           ; Redistribution and use in source and binary forms, with or without modification, are
   162                           ; permitted provided that the following conditions are met:
   163                           ; 
   164                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   165                           ;        conditions and the following disclaimer.
   166                           ; 
   167                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   168                           ;        of conditions and the following disclaimer in the documentation and/or other
   169                           ;        materials provided with the distribution. Publication is not required when
   170                           ;        this file is used in an embedded application.
   171                           ; 
   172                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   173                           ;        software without specific prior written permission.
   174                           ; 
   175                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   176                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   177                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   178                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   179                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   180                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   181                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   182                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   183                           ; 
   184                           ; 
   185                           ; Code-generator required, PIC18F57K42 Definitions
   186                           ; 
   187                           ; SFR Addresses
   188  0000                     
   189                           	psect	idataBIGRAM
   190  01118A                     __pidataBIGRAM:
   191                           	callstack 0
   192                           
   193                           ;initializer for _port_data
   194  01118A  FF                 	db	255
   195  01118B  00                 	db	0
   196  01118C  FF                 	db	255
   197  01118D  00                 	db	0
   198  01118E  FF                 	db	255
   199  01118F  00                 	db	0
   200  011190  FF                 	db	255
   201  011191  00                 	db	0
   202  011192  FF                 	db	255
   203  011193  00                 	db	0
   204  011194  FF                 	db	255
   205  011195  00                 	db	0
   206  011196  FF                 	db	255
   207  011197  00                 	db	0
   208  011198  FF                 	db	255
   209  011199  00                 	db	0
   210  01119A  00                 	db	0
   211  01119B  00                 	db	0
   212  01119C  00                 	db	0
   213  01119D  00                 	db	0
   214  01119E  00                 	db	0
   215  01119F  00                 	db	0
   216  0111A0  00                 	db	0
   217  0111A1  00                 	db	0
   218  0111A2  00                 	db	0
   219  0111A3  00                 	db	0
   220  0111A4  00                 	db	0
   221  0111A5  00                 	db	0
   222  0111A6  00                 	db	0
   223  0111A7  00                 	db	0
   224  0111A8  00                 	db	0
   225  0111A9  00                 	db	0
   226  0111AA  00                 	db	0
   227  0111AB  00                 	db	0
   228  0111AC  00                 	db	0
   229  0111AD  00                 	db	0
   230  0111AE  00                 	db	0
   231  0111AF  00                 	db	0
   232  0111B0  00                 	db	0
   233  0111B1  00                 	db	0
   234  0111B2  00                 	db	0
   235  0111B3  00                 	db	0
   236  0111B4  00                 	db	0
   237  0111B5  00                 	db	0
   238  0111B6  00                 	db	0
   239  0111B7  00                 	db	0
   240  0111B8  00                 	db	0
   241  0111B9  00                 	db	0
   242  0111BA  00                 	db	0
   243  0111BB  00                 	db	0
   244  0111BC  00                 	db	0
   245  0111BD  00                 	db	0
   246  0111BE  00                 	db	0
   247  0111BF  00                 	db	0
   248  0111C0  00                 	db	0
   249  0111C1  00                 	db	0
   250  0111C2  00                 	db	0
   251  0111C3  00                 	db	0
   252  0111C4  00                 	db	0
   253  0111C5  00                 	db	0
   254  0111C6  00                 	db	0
   255  0111C7  00                 	db	0
   256  0111C8  00                 	db	0
   257  0111C9  00                 	db	0
   258  0111CA  00                 	db	0
   259  0111CB  00                 	db	0
   260  0111CC  00                 	db	0
   261  0111CD  00                 	db	0
   262  0111CE  00                 	db	0
   263  0111CF  00                 	db	0
   264  0111D0  00                 	db	0
   265  0111D1  00                 	db	0
   266  0111D2  00                 	db	0
   267  0111D3  00                 	db	0
   268  0111D4  00                 	db	0
   269  0111D5  00                 	db	0
   270  0111D6  00                 	db	0
   271  0111D7  00                 	db	0
   272  0111D8  00                 	db	0
   273  0111D9  00                 	db	0
   274  0111DA  00                 	db	0
   275  0111DB  00                 	db	0
   276  0111DC  00                 	db	0
   277  0111DD  00                 	db	0
   278  0111DE  00                 	db	0
   279  0111DF  00                 	db	0
   280  0111E0  00                 	db	0
   281  0111E1  00                 	db	0
   282  0111E2  00                 	db	0
   283  0111E3  00                 	db	0
   284  0111E4  00                 	db	0
   285  0111E5  00                 	db	0
   286  0111E6  00                 	db	0
   287  0111E7  00                 	db	0
   288  0111E8  00                 	db	0
   289  0111E9  00                 	db	0
   290  0111EA  00                 	db	0
   291  0111EB  00                 	db	0
   292  0111EC  00                 	db	0
   293  0111ED  00                 	db	0
   294  0111EE  00                 	db	0
   295  0111EF  00                 	db	0
   296  0111F0  00                 	db	0
   297  0111F1  00                 	db	0
   298  0111F2  00                 	db	0
   299  0111F3  00                 	db	0
   300  0111F4  00                 	db	0
   301  0111F5  00                 	db	0
   302  0111F6  00                 	db	0
   303  0111F7  00                 	db	0
   304  0111F8  00                 	db	0
   305  0111F9  00                 	db	0
   306  0111FA  00                 	db	0
   307  0111FB  00                 	db	0
   308  0111FC  00                 	db	0
   309  0111FD  00                 	db	0
   310  0111FE  00                 	db	0
   311  0111FF  00                 	db	0
   312  011200  00                 	db	0
   313  011201  00                 	db	0
   314  011202  00                 	db	0
   315  011203  00                 	db	0
   316  011204  00                 	db	0
   317  011205  00                 	db	0
   318  011206  00                 	db	0
   319  011207  00                 	db	0
   320  011208  00                 	db	0
   321  011209  00                 	db	0
   322  01120A  00                 	db	0
   323  01120B  00                 	db	0
   324  01120C  00                 	db	0
   325  01120D  00                 	db	0
   326  01120E  00                 	db	0
   327  01120F  00                 	db	0
   328  011210  00                 	db	0
   329  011211  00                 	db	0
   330  011212  00                 	db	0
   331  011213  00                 	db	0
   332  011214  00                 	db	0
   333  011215  00                 	db	0
   334  011216  00                 	db	0
   335  011217  00                 	db	0
   336  011218  00                 	db	0
   337  011219  00                 	db	0
   338  01121A  00                 	db	0
   339  01121B  00                 	db	0
   340  01121C  00                 	db	0
   341  01121D  00                 	db	0
   342  01121E  00                 	db	0
   343  01121F  00                 	db	0
   344  011220  00                 	db	0
   345  011221  00                 	db	0
   346  011222  00                 	db	0
   347  011223  00                 	db	0
   348  011224  00                 	db	0
   349  011225  00                 	db	0
   350  011226  00                 	db	0
   351  011227  00                 	db	0
   352  011228  00                 	db	0
   353  011229  00                 	db	0
   354  01122A  00                 	db	0
   355  01122B  00                 	db	0
   356  01122C  00                 	db	0
   357  01122D  00                 	db	0
   358  01122E  00                 	db	0
   359  01122F  00                 	db	0
   360  011230  00                 	db	0
   361  011231  00                 	db	0
   362  011232  00                 	db	0
   363  011233  00                 	db	0
   364  011234  00                 	db	0
   365  011235  00                 	db	0
   366  011236  00                 	db	0
   367  011237  00                 	db	0
   368  011238  00                 	db	0
   369  011239  00                 	db	0
   370  01123A  00                 	db	0
   371  01123B  00                 	db	0
   372  01123C  00                 	db	0
   373  01123D  00                 	db	0
   374  01123E  00                 	db	0
   375  01123F  00                 	db	0
   376  011240  00                 	db	0
   377  011241  00                 	db	0
   378  011242  00                 	db	0
   379  011243  00                 	db	0
   380  011244  00                 	db	0
   381  011245  00                 	db	0
   382  011246  00                 	db	0
   383  011247  00                 	db	0
   384  011248  00                 	db	0
   385  011249  00                 	db	0
   386  01124A  00                 	db	0
   387  01124B  00                 	db	0
   388  01124C  00                 	db	0
   389  01124D  00                 	db	0
   390  01124E  00                 	db	0
   391  01124F  00                 	db	0
   392  011250  00                 	db	0
   393  011251  00                 	db	0
   394  011252  00                 	db	0
   395  011253  00                 	db	0
   396  011254  00                 	db	0
   397  011255  00                 	db	0
   398  011256  00                 	db	0
   399  011257  00                 	db	0
   400  011258  00                 	db	0
   401  011259  00                 	db	0
   402  01125A  00                 	db	0
   403  01125B  00                 	db	0
   404  01125C  00                 	db	0
   405  01125D  00                 	db	0
   406  01125E  00                 	db	0
   407  01125F  00                 	db	0
   408  011260  00                 	db	0
   409  011261  00                 	db	0
   410  011262  00                 	db	0
   411  011263  00                 	db	0
   412  011264  00                 	db	0
   413  011265  00                 	db	0
   414  011266  00                 	db	0
   415  011267  00                 	db	0
   416  011268  00                 	db	0
   417  011269  00                 	db	0
   418  01126A  00                 	db	0
   419  01126B  00                 	db	0
   420  01126C  00                 	db	0
   421  01126D  00                 	db	0
   422  01126E  00                 	db	0
   423  01126F  00                 	db	0
   424  011270  00                 	db	0
   425  011271  00                 	db	0
   426  011272  00                 	db	0
   427  011273  00                 	db	0
   428  011274  00                 	db	0
   429  011275  00                 	db	0
   430  011276  00                 	db	0
   431  011277  00                 	db	0
   432  011278  00                 	db	0
   433  011279  00                 	db	0
   434  01127A  00                 	db	0
   435  01127B  00                 	db	0
   436  01127C  00                 	db	0
   437  01127D  00                 	db	0
   438  01127E  00                 	db	0
   439  01127F  00                 	db	0
   440  011280  00                 	db	0
   441  011281  00                 	db	0
   442  011282  00                 	db	0
   443  011283  00                 	db	0
   444  011284  00                 	db	0
   445  011285  00                 	db	0
   446  011286  00                 	db	0
   447  011287  00                 	db	0
   448  011288  00                 	db	0
   449  011289  00                 	db	0
   450  01128A  00                 	db	0
   451  01128B  00                 	db	0
   452  01128C  00                 	db	0
   453  01128D  00                 	db	0
   454  01128E  00                 	db	0
   455  01128F  00                 	db	0
   456  011290  00                 	db	0
   457  011291  00                 	db	0
   458  011292  00                 	db	0
   459  011293  00                 	db	0
   460  011294  00                 	db	0
   461  011295  00                 	db	0
   462  011296  00                 	db	0
   463  011297  00                 	db	0
   464  011298  00                 	db	0
   465  011299  00                 	db	0
   466  01129A  00                 	db	0
   467  01129B  00                 	db	0
   468  01129C  00                 	db	0
   469  01129D  00                 	db	0
   470  01129E  00                 	db	0
   471  01129F  00                 	db	0
   472  0112A0  00                 	db	0
   473  0112A1  00                 	db	0
   474  0112A2  00                 	db	0
   475  0112A3  00                 	db	0
   476  0112A4  00                 	db	0
   477  0112A5  00                 	db	0
   478  0112A6  00                 	db	0
   479  0112A7  00                 	db	0
   480  0112A8  00                 	db	0
   481  0112A9  00                 	db	0
   482  0112AA  00                 	db	0
   483  0112AB  00                 	db	0
   484  0112AC  00                 	db	0
   485  0112AD  00                 	db	0
   486  0112AE  00                 	db	0
   487  0112AF  00                 	db	0
   488  0112B0  00                 	db	0
   489  0112B1  00                 	db	0
   490  0112B2  00                 	db	0
   491  0112B3  00                 	db	0
   492  0112B4  00                 	db	0
   493  0112B5  00                 	db	0
   494  0112B6  00                 	db	0
   495  0112B7  00                 	db	0
   496  0112B8  00                 	db	0
   497  0112B9  00                 	db	0
   498  0112BA  00                 	db	0
   499  0112BB  00                 	db	0
   500  0112BC  00                 	db	0
   501  0112BD  00                 	db	0
   502  0112BE  00                 	db	0
   503  0112BF  00                 	db	0
   504  0112C0  00                 	db	0
   505  0112C1  00                 	db	0
   506  0112C2  00                 	db	0
   507  0112C3  00                 	db	0
   508  0112C4  00                 	db	0
   509  0112C5  00                 	db	0
   510  0112C6  00                 	db	0
   511  0112C7  00                 	db	0
   512  0112C8  00                 	db	0
   513  0112C9  00                 	db	0
   514  0112CA  00                 	db	0
   515  0112CB  00                 	db	0
   516  0112CC  00                 	db	0
   517  0112CD  00                 	db	0
   518  0112CE  00                 	db	0
   519  0112CF  00                 	db	0
   520  0112D0  00                 	db	0
   521  0112D1  00                 	db	0
   522  0112D2  00                 	db	0
   523  0112D3  00                 	db	0
   524  0112D4  00                 	db	0
   525  0112D5  00                 	db	0
   526  0112D6  00                 	db	0
   527  0112D7  00                 	db	0
   528  0112D8  00                 	db	0
   529  0112D9  00                 	db	0
   530  0112DA  00                 	db	0
   531  0112DB  00                 	db	0
   532  0112DC  00                 	db	0
   533  0112DD  00                 	db	0
   534  0112DE  00                 	db	0
   535  0112DF  00                 	db	0
   536  0112E0  00                 	db	0
   537  0112E1  00                 	db	0
   538  0112E2  00                 	db	0
   539  0112E3  00                 	db	0
   540  0112E4  00                 	db	0
   541  0112E5  00                 	db	0
   542  0112E6  00                 	db	0
   543  0112E7  00                 	db	0
   544  0112E8  00                 	db	0
   545  0112E9  00                 	db	0
   546  0112EA  00                 	db	0
   547  0112EB  00                 	db	0
   548  0112EC  00                 	db	0
   549  0112ED  00                 	db	0
   550  0112EE  00                 	db	0
   551  0112EF  00                 	db	0
   552  0112F0  00                 	db	0
   553  0112F1  00                 	db	0
   554  0112F2  00                 	db	0
   555  0112F3  00                 	db	0
   556  0112F4  00                 	db	0
   557  0112F5  00                 	db	0
   558  0112F6  00                 	db	0
   559  0112F7  00                 	db	0
   560  0112F8  00                 	db	0
   561  0112F9  00                 	db	0
   562  0112FA  00                 	db	0
   563  0112FB  00                 	db	0
   564  0112FC  00                 	db	0
   565  0112FD  00                 	db	0
   566  0112FE  00                 	db	0
   567  0112FF  00                 	db	0
   568  011300  00                 	db	0
   569  011301  00                 	db	0
   570  011302  00                 	db	0
   571  011303  00                 	db	0
   572  011304  00                 	db	0
   573  011305  00                 	db	0
   574  011306  00                 	db	0
   575  011307  00                 	db	0
   576  011308  00                 	db	0
   577  011309  00                 	db	0
   578  01130A  00                 	db	0
   579  01130B  00                 	db	0
   580  01130C  00                 	db	0
   581  01130D  00                 	db	0
   582  01130E  00                 	db	0
   583  01130F  00                 	db	0
   584  011310  00                 	db	0
   585  011311  00                 	db	0
   586  011312  00                 	db	0
   587  011313  00                 	db	0
   588  011314  00                 	db	0
   589  011315  00                 	db	0
   590  011316  00                 	db	0
   591  011317  00                 	db	0
   592  011318  00                 	db	0
   593  011319  00                 	db	0
   594  01131A  00                 	db	0
   595  01131B  00                 	db	0
   596  01131C  00                 	db	0
   597  01131D  00                 	db	0
   598  01131E  00                 	db	0
   599  01131F  00                 	db	0
   600  011320  00                 	db	0
   601  011321  00                 	db	0
   602  011322  00                 	db	0
   603  011323  00                 	db	0
   604  011324  00                 	db	0
   605  011325  00                 	db	0
   606  011326  00                 	db	0
   607  011327  00                 	db	0
   608  011328  00                 	db	0
   609  011329  00                 	db	0
   610  01132A  00                 	db	0
   611  01132B  00                 	db	0
   612  01132C  00                 	db	0
   613  01132D  00                 	db	0
   614  01132E  00                 	db	0
   615  01132F  00                 	db	0
   616  011330  00                 	db	0
   617  011331  00                 	db	0
   618  011332  00                 	db	0
   619  011333  00                 	db	0
   620  011334  00                 	db	0
   621  011335  00                 	db	0
   622  011336  00                 	db	0
   623  011337  00                 	db	0
   624  011338  00                 	db	0
   625  011339  00                 	db	0
   626  01133A  00                 	db	0
   627  01133B  00                 	db	0
   628  01133C  00                 	db	0
   629  01133D  00                 	db	0
   630  01133E  00                 	db	0
   631  01133F  00                 	db	0
   632  011340  00                 	db	0
   633  011341  00                 	db	0
   634  011342  00                 	db	0
   635  011343  00                 	db	0
   636  011344  00                 	db	0
   637  011345  00                 	db	0
   638  011346  00                 	db	0
   639  011347  00                 	db	0
   640  011348  00                 	db	0
   641  011349  00                 	db	0
   642  01134A  00                 	db	0
   643  01134B  00                 	db	0
   644  01134C  00                 	db	0
   645  01134D  00                 	db	0
   646  01134E  00                 	db	0
   647  01134F  00                 	db	0
   648  011350  00                 	db	0
   649  011351  00                 	db	0
   650  011352  00                 	db	0
   651  011353  00                 	db	0
   652  011354  00                 	db	0
   653  011355  00                 	db	0
   654  011356  00                 	db	0
   655  011357  00                 	db	0
   656  011358  00                 	db	0
   657  011359  00                 	db	0
   658  01135A  00                 	db	0
   659  01135B  00                 	db	0
   660  01135C  00                 	db	0
   661  01135D  00                 	db	0
   662  01135E  00                 	db	0
   663  01135F  00                 	db	0
   664  011360  00                 	db	0
   665  011361  00                 	db	0
   666  011362  00                 	db	0
   667  011363  00                 	db	0
   668  011364  00                 	db	0
   669  011365  00                 	db	0
   670  011366  00                 	db	0
   671  011367  00                 	db	0
   672  011368  00                 	db	0
   673  011369  00                 	db	0
   674  01136A  00                 	db	0
   675  01136B  00                 	db	0
   676  01136C  00                 	db	0
   677  01136D  00                 	db	0
   678  01136E  00                 	db	0
   679  01136F  00                 	db	0
   680  011370  00                 	db	0
   681  011371  00                 	db	0
   682  011372  00                 	db	0
   683  011373  00                 	db	0
   684  011374  00                 	db	0
   685  011375  00                 	db	0
   686  011376  00                 	db	0
   687  011377  00                 	db	0
   688  011378  00                 	db	0
   689  011379  00                 	db	0
   690  01137A  00                 	db	0
   691  01137B  00                 	db	0
   692  01137C  00                 	db	0
   693  01137D  00                 	db	0
   694  01137E  00                 	db	0
   695  01137F  00                 	db	0
   696  011380  00                 	db	0
   697  011381  00                 	db	0
   698  011382  00                 	db	0
   699  011383  00                 	db	0
   700  011384  00                 	db	0
   701  011385  00                 	db	0
   702  011386  00                 	db	0
   703  011387  00                 	db	0
   704  011388  00                 	db	0
   705  011389  00                 	db	0
   706  01138A  00                 	db	0
   707  01138B  00                 	db	0
   708  01138C  00                 	db	0
   709  01138D  00                 	db	0
   710  01138E  00                 	db	0
   711  01138F  00                 	db	0
   712  011390  00                 	db	0
   713  011391  00                 	db	0
   714  011392  00                 	db	0
   715  011393  00                 	db	0
   716  011394  00                 	db	0
   717  011395  00                 	db	0
   718  011396  00                 	db	0
   719  011397  00                 	db	0
   720  011398  00                 	db	0
   721  011399  00                 	db	0
   722  01139A  00                 	db	0
   723  01139B  00                 	db	0
   724  01139C  00                 	db	0
   725  01139D  00                 	db	0
   726  01139E  00                 	db	0
   727  01139F  00                 	db	0
   728  0113A0  00                 	db	0
   729  0113A1  00                 	db	0
   730  0113A2  00                 	db	0
   731  0113A3  00                 	db	0
   732  0113A4  00                 	db	0
   733  0113A5  00                 	db	0
   734  0113A6  00                 	db	0
   735  0113A7  00                 	db	0
   736  0113A8  00                 	db	0
   737  0113A9  00                 	db	0
   738  0113AA  00                 	db	0
   739  0113AB  00                 	db	0
   740  0113AC  00                 	db	0
   741  0113AD  00                 	db	0
   742  0113AE  00                 	db	0
   743  0113AF  00                 	db	0
   744  0113B0  00                 	db	0
   745  0113B1  00                 	db	0
   746  0113B2  00                 	db	0
   747  0113B3  00                 	db	0
   748  0113B4  00                 	db	0
   749  0113B5  00                 	db	0
   750  0113B6  00                 	db	0
   751  0113B7  00                 	db	0
   752  0113B8  00                 	db	0
   753  0113B9  00                 	db	0
   754  0113BA  00                 	db	0
   755  0113BB  00                 	db	0
   756  0113BC  00                 	db	0
   757  0113BD  00                 	db	0
   758  0113BE  00                 	db	0
   759  0113BF  00                 	db	0
   760  0113C0  00                 	db	0
   761  0113C1  00                 	db	0
   762  0113C2  00                 	db	0
   763  0113C3  00                 	db	0
   764  0113C4  00                 	db	0
   765  0113C5  00                 	db	0
   766  0113C6  00                 	db	0
   767  0113C7  00                 	db	0
   768  0113C8  00                 	db	0
   769  0113C9  00                 	db	0
   770  0113CA  00                 	db	0
   771  0113CB  00                 	db	0
   772  0113CC  00                 	db	0
   773  0113CD  00                 	db	0
   774  0113CE  00                 	db	0
   775  0113CF  00                 	db	0
   776  0113D0  00                 	db	0
   777  0113D1  00                 	db	0
   778  0113D2  00                 	db	0
   779  0113D3  00                 	db	0
   780  0113D4  00                 	db	0
   781  0113D5  00                 	db	0
   782  0113D6  00                 	db	0
   783  0113D7  00                 	db	0
   784  0113D8  00                 	db	0
   785  0113D9  00                 	db	0
   786  0113DA  00                 	db	0
   787  0113DB  00                 	db	0
   788  0113DC  00                 	db	0
   789  0113DD  00                 	db	0
   790  0113DE  00                 	db	0
   791  0113DF  00                 	db	0
   792  0113E0  00                 	db	0
   793  0113E1  00                 	db	0
   794  0113E2  00                 	db	0
   795  0113E3  00                 	db	0
   796  0113E4  00                 	db	0
   797  0113E5  00                 	db	0
   798  0113E6  00                 	db	0
   799  0113E7  00                 	db	0
   800  0113E8  00                 	db	0
   801  0113E9  00                 	db	0
   802  0113EA  00                 	db	0
   803  0113EB  00                 	db	0
   804  0113EC  00                 	db	0
   805  0113ED  00                 	db	0
   806  0113EE  00                 	db	0
   807  0113EF  00                 	db	0
   808  0113F0  00                 	db	0
   809  0113F1  00                 	db	0
   810  0113F2  00                 	db	0
   811  0113F3  00                 	db	0
   812  0113F4  00                 	db	0
   813  0113F5  00                 	db	0
   814  0113F6  00                 	db	0
   815  0113F7  00                 	db	0
   816  0113F8  00                 	db	0
   817  0113F9  00                 	db	0
   818  0113FA  00                 	db	0
   819  0113FB  00                 	db	0
   820  0113FC  00                 	db	0
   821  0113FD  00                 	db	0
   822  0113FE  00                 	db	0
   823  0113FF  00                 	db	0
   824  011400  00                 	db	0
   825  011401  00                 	db	0
   826  011402  00                 	db	0
   827  011403  00                 	db	0
   828  011404  00                 	db	0
   829  011405  00                 	db	0
   830  011406  00                 	db	0
   831  011407  00                 	db	0
   832  011408  00                 	db	0
   833  011409  00                 	db	0
   834  01140A  00                 	db	0
   835  01140B  00                 	db	0
   836  01140C  00                 	db	0
   837  01140D  00                 	db	0
   838  01140E  00                 	db	0
   839  01140F  00                 	db	0
   840  011410  00                 	db	0
   841  011411  00                 	db	0
   842  011412  00                 	db	0
   843  011413  00                 	db	0
   844  011414  00                 	db	0
   845  011415  00                 	db	0
   846  011416  00                 	db	0
   847  011417  00                 	db	0
   848  011418  00                 	db	0
   849  011419  00                 	db	0
   850  01141A  00                 	db	0
   851  01141B  00                 	db	0
   852  01141C  00                 	db	0
   853  01141D  00                 	db	0
   854  01141E  00                 	db	0
   855  01141F  00                 	db	0
   856  011420  00                 	db	0
   857  011421  00                 	db	0
   858  011422  00                 	db	0
   859  011423  00                 	db	0
   860  011424  00                 	db	0
   861  011425  00                 	db	0
   862  011426  00                 	db	0
   863  011427  00                 	db	0
   864  011428  00                 	db	0
   865  011429  00                 	db	0
   866  01142A  00                 	db	0
   867  01142B  00                 	db	0
   868  01142C  00                 	db	0
   869  01142D  00                 	db	0
   870  01142E  00                 	db	0
   871  01142F  00                 	db	0
   872  011430  00                 	db	0
   873  011431  00                 	db	0
   874  011432  00                 	db	0
   875  011433  00                 	db	0
   876  011434  00                 	db	0
   877  011435  00                 	db	0
   878  011436  00                 	db	0
   879  011437  00                 	db	0
   880  011438  00                 	db	0
   881  011439  00                 	db	0
   882  01143A  00                 	db	0
   883  01143B  00                 	db	0
   884  01143C  00                 	db	0
   885  01143D  00                 	db	0
   886  01143E  00                 	db	0
   887  01143F  00                 	db	0
   888  011440  00                 	db	0
   889  011441  00                 	db	0
   890  011442  00                 	db	0
   891  011443  00                 	db	0
   892  011444  00                 	db	0
   893  011445  00                 	db	0
   894  011446  00                 	db	0
   895  011447  00                 	db	0
   896  011448  00                 	db	0
   897  011449  00                 	db	0
   898  01144A  00                 	db	0
   899  01144B  00                 	db	0
   900  01144C  00                 	db	0
   901  01144D  00                 	db	0
   902  01144E  00                 	db	0
   903  01144F  00                 	db	0
   904  011450  00                 	db	0
   905  011451  00                 	db	0
   906  011452  00                 	db	0
   907  011453  00                 	db	0
   908  011454  00                 	db	0
   909  011455  00                 	db	0
   910  011456  00                 	db	0
   911  011457  00                 	db	0
   912  011458  00                 	db	0
   913  011459  00                 	db	0
   914  01145A  00                 	db	0
   915  01145B  00                 	db	0
   916  01145C  00                 	db	0
   917  01145D  00                 	db	0
   918  01145E  00                 	db	0
   919  01145F  00                 	db	0
   920  011460  00                 	db	0
   921  011461  00                 	db	0
   922  011462  00                 	db	0
   923  011463  00                 	db	0
   924  011464  00                 	db	0
   925  011465  00                 	db	0
   926  011466  00                 	db	0
   927  011467  00                 	db	0
   928  011468  00                 	db	0
   929  011469  00                 	db	0
   930  01146A  00                 	db	0
   931  01146B  00                 	db	0
   932  01146C  00                 	db	0
   933  01146D  00                 	db	0
   934  01146E  00                 	db	0
   935  01146F  00                 	db	0
   936  011470  00                 	db	0
   937  011471  00                 	db	0
   938  011472  00                 	db	0
   939  011473  00                 	db	0
   940  011474  00                 	db	0
   941  011475  00                 	db	0
   942  011476  00                 	db	0
   943  011477  00                 	db	0
   944  011478  00                 	db	0
   945  011479  00                 	db	0
   946  01147A  00                 	db	0
   947  01147B  00                 	db	0
   948  01147C  00                 	db	0
   949  01147D  00                 	db	0
   950  01147E  00                 	db	0
   951  01147F  00                 	db	0
   952  011480  00                 	db	0
   953  011481  00                 	db	0
   954  011482  00                 	db	0
   955  011483  00                 	db	0
   956  011484  00                 	db	0
   957  011485  00                 	db	0
   958  011486  00                 	db	0
   959  011487  00                 	db	0
   960  011488  00                 	db	0
   961  011489  00                 	db	0
   962  01148A  00                 	db	0
   963  01148B  00                 	db	0
   964  01148C  00                 	db	0
   965  01148D  00                 	db	0
   966  01148E  00                 	db	0
   967  01148F  00                 	db	0
   968  011490  00                 	db	0
   969  011491  00                 	db	0
   970  011492  00                 	db	0
   971  011493  00                 	db	0
   972  011494  00                 	db	0
   973  011495  00                 	db	0
   974  011496  00                 	db	0
   975  011497  00                 	db	0
   976  011498  00                 	db	0
   977  011499  00                 	db	0
   978  01149A  00                 	db	0
   979  01149B  00                 	db	0
   980  01149C  00                 	db	0
   981  01149D  00                 	db	0
   982  01149E  00                 	db	0
   983  01149F  00                 	db	0
   984  0114A0  00                 	db	0
   985  0114A1  00                 	db	0
   986  0114A2  00                 	db	0
   987  0114A3  00                 	db	0
   988  0114A4  00                 	db	0
   989  0114A5  00                 	db	0
   990  0114A6  00                 	db	0
   991  0114A7  00                 	db	0
   992  0114A8  00                 	db	0
   993  0114A9  00                 	db	0
   994  0114AA  00                 	db	0
   995  0114AB  00                 	db	0
   996  0114AC  00                 	db	0
   997  0114AD  00                 	db	0
   998  0114AE  00                 	db	0
   999  0114AF  00                 	db	0
  1000  0114B0  00                 	db	0
  1001  0114B1  00                 	db	0
  1002  0114B2  00                 	db	0
  1003  0114B3  00                 	db	0
  1004  0114B4  00                 	db	0
  1005  0114B5  00                 	db	0
  1006  0114B6  00                 	db	0
  1007  0114B7  00                 	db	0
  1008  0114B8  00                 	db	0
  1009  0114B9  00                 	db	0
  1010  0114BA  00                 	db	0
  1011  0114BB  00                 	db	0
  1012  0114BC  00                 	db	0
  1013  0114BD  00                 	db	0
  1014  0114BE  00                 	db	0
  1015  0114BF  00                 	db	0
  1016  0114C0  00                 	db	0
  1017  0114C1  00                 	db	0
  1018  0114C2  00                 	db	0
  1019  0114C3  00                 	db	0
  1020  0114C4  00                 	db	0
  1021  0114C5  00                 	db	0
  1022  0114C6  00                 	db	0
  1023  0114C7  00                 	db	0
  1024  0114C8  00                 	db	0
  1025  0114C9  00                 	db	0
  1026  0114CA  00                 	db	0
  1027  0114CB  00                 	db	0
  1028  0114CC  00                 	db	0
  1029  0114CD  00                 	db	0
  1030  0114CE  00                 	db	0
  1031  0114CF  00                 	db	0
  1032  0114D0  00                 	db	0
  1033  0114D1  00                 	db	0
  1034  0114D2  00                 	db	0
  1035  0114D3  00                 	db	0
  1036  0114D4  00                 	db	0
  1037  0114D5  00                 	db	0
  1038  0114D6  00                 	db	0
  1039  0114D7  00                 	db	0
  1040  0114D8  00                 	db	0
  1041  0114D9  00                 	db	0
  1042  0114DA  00                 	db	0
  1043  0114DB  00                 	db	0
  1044  0114DC  00                 	db	0
  1045  0114DD  00                 	db	0
  1046  0114DE  00                 	db	0
  1047  0114DF  00                 	db	0
  1048  0114E0  00                 	db	0
  1049  0114E1  00                 	db	0
  1050  0114E2  00                 	db	0
  1051  0114E3  00                 	db	0
  1052  0114E4  00                 	db	0
  1053  0114E5  00                 	db	0
  1054  0114E6  00                 	db	0
  1055  0114E7  00                 	db	0
  1056  0114E8  00                 	db	0
  1057  0114E9  00                 	db	0
  1058  0114EA  00                 	db	0
  1059  0114EB  00                 	db	0
  1060  0114EC  00                 	db	0
  1061  0114ED  00                 	db	0
  1062  0114EE  00                 	db	0
  1063  0114EF  00                 	db	0
  1064  0114F0  00                 	db	0
  1065  0114F1  00                 	db	0
  1066  0114F2  00                 	db	0
  1067  0114F3  00                 	db	0
  1068  0114F4  00                 	db	0
  1069  0114F5  00                 	db	0
  1070  0114F6  00                 	db	0
  1071  0114F7  00                 	db	0
  1072  0114F8  00                 	db	0
  1073  0114F9  00                 	db	0
  1074  0114FA  00                 	db	0
  1075  0114FB  00                 	db	0
  1076  0114FC  00                 	db	0
  1077  0114FD  00                 	db	0
  1078  0114FE  00                 	db	0
  1079  0114FF  00                 	db	0
  1080  011500  00                 	db	0
  1081  011501  00                 	db	0
  1082  011502  00                 	db	0
  1083  011503  00                 	db	0
  1084  011504  00                 	db	0
  1085  011505  00                 	db	0
  1086  011506  00                 	db	0
  1087  011507  00                 	db	0
  1088  011508  00                 	db	0
  1089  011509  00                 	db	0
  1090  01150A  00                 	db	0
  1091  01150B  00                 	db	0
  1092  01150C  00                 	db	0
  1093  01150D  00                 	db	0
  1094  01150E  00                 	db	0
  1095  01150F  00                 	db	0
  1096  011510  00                 	db	0
  1097  011511  00                 	db	0
  1098  011512  00                 	db	0
  1099  011513  00                 	db	0
  1100  011514  00                 	db	0
  1101  011515  00                 	db	0
  1102  011516  00                 	db	0
  1103  011517  00                 	db	0
  1104  011518  00                 	db	0
  1105  011519  00                 	db	0
  1106  01151A  00                 	db	0
  1107  01151B  00                 	db	0
  1108  01151C  00                 	db	0
  1109  01151D  00                 	db	0
  1110  01151E  00                 	db	0
  1111  01151F  00                 	db	0
  1112  011520  00                 	db	0
  1113  011521  00                 	db	0
  1114  011522  00                 	db	0
  1115  011523  00                 	db	0
  1116  011524  00                 	db	0
  1117  011525  00                 	db	0
  1118  011526  00                 	db	0
  1119  011527  00                 	db	0
  1120  011528  00                 	db	0
  1121  011529  00                 	db	0
  1122  01152A  00                 	db	0
  1123  01152B  00                 	db	0
  1124  01152C  00                 	db	0
  1125  01152D  00                 	db	0
  1126  01152E  00                 	db	0
  1127  01152F  00                 	db	0
  1128  011530  00                 	db	0
  1129  011531  00                 	db	0
  1130  011532  00                 	db	0
  1131  011533  00                 	db	0
  1132  011534  00                 	db	0
  1133  011535  00                 	db	0
  1134  011536  00                 	db	0
  1135  011537  00                 	db	0
  1136  011538  00                 	db	0
  1137  011539  00                 	db	0
  1138  01153A  00                 	db	0
  1139  01153B  00                 	db	0
  1140  01153C  00                 	db	0
  1141  01153D  00                 	db	0
  1142  01153E  00                 	db	0
  1143  01153F  00                 	db	0
  1144  011540  00                 	db	0
  1145  011541  00                 	db	0
  1146  011542  00                 	db	0
  1147  011543  00                 	db	0
  1148  011544  00                 	db	0
  1149  011545  00                 	db	0
  1150  011546  00                 	db	0
  1151  011547  00                 	db	0
  1152  011548  00                 	db	0
  1153  011549  00                 	db	0
  1154  01154A  00                 	db	0
  1155  01154B  00                 	db	0
  1156  01154C  00                 	db	0
  1157  01154D  00                 	db	0
  1158  01154E  00                 	db	0
  1159  01154F  00                 	db	0
  1160  011550  00                 	db	0
  1161  011551  00                 	db	0
  1162  011552  00                 	db	0
  1163  011553  00                 	db	0
  1164  011554  00                 	db	0
  1165  011555  00                 	db	0
  1166  011556  00                 	db	0
  1167  011557  00                 	db	0
  1168  011558  00                 	db	0
  1169  011559  00                 	db	0
  1170  01155A  00                 	db	0
  1171  01155B  00                 	db	0
  1172  01155C  00                 	db	0
  1173  01155D  00                 	db	0
  1174  01155E  00                 	db	0
  1175  01155F  00                 	db	0
  1176  011560  00                 	db	0
  1177  011561  00                 	db	0
  1178  011562  00                 	db	0
  1179  011563  00                 	db	0
  1180  011564  00                 	db	0
  1181  011565  00                 	db	0
  1182  011566  00                 	db	0
  1183  011567  00                 	db	0
  1184  011568  00                 	db	0
  1185  011569  00                 	db	0
  1186  01156A  00                 	db	0
  1187  01156B  00                 	db	0
  1188  01156C  00                 	db	0
  1189  01156D  00                 	db	0
  1190  01156E  00                 	db	0
  1191  01156F  00                 	db	0
  1192  011570  00                 	db	0
  1193  011571  00                 	db	0
  1194  011572  00                 	db	0
  1195  011573  00                 	db	0
  1196  011574  00                 	db	0
  1197  011575  00                 	db	0
  1198  011576  00                 	db	0
  1199  011577  00                 	db	0
  1200  011578  00                 	db	0
  1201  011579  00                 	db	0
  1202  01157A  00                 	db	0
  1203  01157B  00                 	db	0
  1204  01157C  00                 	db	0
  1205  01157D  00                 	db	0
  1206  01157E  00                 	db	0
  1207  01157F  00                 	db	0
  1208  011580  00                 	db	0
  1209  011581  00                 	db	0
  1210  011582  00                 	db	0
  1211  011583  00                 	db	0
  1212  011584  00                 	db	0
  1213  011585  00                 	db	0
  1214  011586  00                 	db	0
  1215  011587  00                 	db	0
  1216  011588  00                 	db	0
  1217  011589  00                 	db	0
  1218                           
  1219                           	psect	idataBANK0
  1220  01483C                     __pidataBANK0:
  1221                           	callstack 0
  1222                           
  1223                           ;initializer for _static_ps
  1224  01483C  14                 	db	20
  1225                           
  1226                           ;initializer for _roll_max
  1227  01483D  13                 	db	19
  1228                           
  1229                           	psect	idataBANK1
  1230  0143DE                     __pidataBANK1:
  1231                           	callstack 0
  1232                           
  1233                           ;initializer for stoa@F1164
  1234  0143DE  28                 	db	40
  1235  0143DF  6E                 	db	110
  1236  0143E0  75                 	db	117
  1237  0143E1  6C                 	db	108
  1238  0143E2  6C                 	db	108
  1239  0143E3  29                 	db	41
  1240  0143E4  00                 	db	0
  1241                           
  1242                           ;initializer for _build_time
  1243  0143E5  CD                 	db	low STR_2
  1244  0143E6  FF                 	db	high STR_2
  1245                           
  1246                           ;initializer for _build_date
  1247  0143E7  C1                 	db	low STR_1
  1248  0143E8  FF                 	db	high STR_1
  1249                           
  1250                           ;initializer for _g_cmds
  1251  0143E9  F6                 	db	low STR_10
  1252  0143EA  FF                 	db	high STR_10
  1253  0143EB  B8                 	db	low _fh_pr
  1254  0143EC  45                 	db	high _fh_pr
  1255  0143ED  01                 	db	low (_fh_pr shr (0+16))
  1256  0143EE  F9                 	db	low STR_11
  1257  0143EF  FF                 	db	high STR_11
  1258  0143F0  0E                 	db	low _fh_ps
  1259  0143F1  47                 	db	high _fh_ps
  1260  0143F2  01                 	db	low (_fh_ps shr (0+16))
  1261  0143F3  F3                 	db	low STR_12
  1262  0143F4  FF                 	db	high STR_12
  1263  0143F5  FA                 	db	low _fh_po
  1264  0143F6  46                 	db	high _fh_po
  1265  0143F7  01                 	db	low (_fh_po shr (0+16))
  1266  0143F8  FC                 	db	low STR_13
  1267  0143F9  FF                 	db	high STR_13
  1268  0143FA  02                 	db	low _fh_pu
  1269  0143FB  48                 	db	high _fh_pu
  1270  0143FC  01                 	db	low (_fh_pu shr (0+16))
  1271  0143FD  ED                 	db	low STR_14
  1272  0143FE  FF                 	db	high STR_14
  1273  0143FF  F8                 	db	low _fh_pd
  1274  014400  47                 	db	high _fh_pd
  1275  014401  01                 	db	low (_fh_pd shr (0+16))
  1276  014402  F0                 	db	low STR_15
  1277  014403  FF                 	db	high STR_15
  1278  014404  EE                 	db	low _fh_pl
  1279  014405  47                 	db	high _fh_pl
  1280  014406  01                 	db	low (_fh_pl shr (0+16))
  1281  014407  00                 	db	0
  1282  014408  00                 	db	0
  1283  014409  00                 	db	0
  1284  01440A  00                 	db	0
  1285  01440B  00                 	db	0
  1286                           
  1287                           	psect	mediumconst
  1288  00FED6                     __pmediumconst:
  1289                           	callstack 0
  1290  00FED6  00                 	db	0
  1291  00FED7  02                 	db	2
  1292  00FED8  40                 	db	64
  1293  00FED9  00                 	db	0
  1294  00FEDA  50                 	db	80
  1295  00FEDB  00                 	db	0
  1296  00FEDC                     __end_of_spi1_configuration:
  1297                           	callstack 0
  1298  00FEDC                     _cmdm:
  1299                           	callstack 0
  1300  00FEDC  0D                 	db	13
  1301  00FEDD  0A                 	db	10
  1302  00FEDE  20                 	db	32
  1303  00FEDF  43                 	db	67
  1304  00FEE0  6F                 	db	111
  1305  00FEE1  6D                 	db	109
  1306  00FEE2  6D                 	db	109
  1307  00FEE3  61                 	db	97
  1308  00FEE4  6E                 	db	110
  1309  00FEE5  64                 	db	100
  1310  00FEE6  20                 	db	32
  1311  00FEE7  70                 	db	112
  1312  00FEE8  72                 	db	114
  1313  00FEE9  6F                 	db	111
  1314  00FEEA  63                 	db	99
  1315  00FEEB  65                 	db	101
  1316  00FEEC  73                 	db	115
  1317  00FEED  73                 	db	115
  1318  00FEEE  6F                 	db	111
  1319  00FEEF  72                 	db	114
  1320  00FEF0  20                 	db	32
  1321  00FEF1  56                 	db	86
  1322  00FEF2  30                 	db	48
  1323  00FEF3  2E                 	db	46
  1324  00FEF4  31                 	db	49
  1325  00FEF5  0D                 	db	13
  1326  00FEF6  0A                 	db	10
  1327  00FEF7  00                 	db	0
  1328  00FEF8                     __end_of_cmdm:
  1329                           	callstack 0
  1330  0000                     _DMA1CON0	set	15356
  1331  0000                     _PIE2bits	set	14738
  1332  0000                     _DMA1AIRQ	set	15358
  1333  0000                     _DMA1SIRQ	set	15359
  1334  0000                     _DMA1CON1	set	15357
  1335  0000                     _T2CON	set	16300
  1336  0000                     _T5CON	set	16282
  1337  0000                     _TMR5L	set	16280
  1338  0000                     _TMR5H	set	16281
  1339  0000                     _T5GCON	set	16283
  1340  0000                     _PIE3bits	set	14739
  1341  0000                     _IVTBASEL	set	16341
  1342  0000                     _IVTBASEH	set	16342
  1343  0000                     _IVTBASEU	set	16343
  1344  0000                     _T6CON	set	16276
  1345  0000                     _PIE9bits	set	14745
  1346  0000                     _T6RST	set	16279
  1347  0000                     _ADERRL	set	16098
  1348  0000                     _ADERRH	set	16099
  1349  0000                     _ADPREVL	set	16109
  1350  0000                     _ADPREVH	set	16110
  1351  0000                     _ADFLTRL	set	16102
  1352  0000                     _ADFLTRH	set	16103
  1353  0000                     _ADACCL	set	16104
  1354  0000                     _ADACCH	set	16105
  1355  0000                     _ADCNT	set	16107
  1356  0000                     _ADRESL	set	16111
  1357  0000                     _ADRESH	set	16112
  1358  0000                     _ADCON0	set	16120
  1359  0000                     _ADCON1	set	16121
  1360  0000                     _ADPREH	set	16119
  1361  0000                     _ADPREL	set	16118
  1362  0000                     _ADCAP	set	16117
  1363  0000                     _ADACQH	set	16116
  1364  0000                     _ADPCH	set	16113
  1365  0000                     _ADRPT	set	16108
  1366  0000                     _ADACCU	set	16106
  1367  0000                     _ADSTPTH	set	16101
  1368  0000                     _ADSTPTL	set	16100
  1369  0000                     _ADUTHH	set	16097
  1370  0000                     _ADUTHL	set	16096
  1371  0000                     _ADLTHH	set	16095
  1372  0000                     _OSCTUNE	set	14814
  1373  0000                     _OSCFRQ	set	14815
  1374  0000                     _OSCEN	set	14813
  1375  0000                     _TRISD	set	16325
  1376  0000                     _TRISC	set	16324
  1377  0000                     _TRISB	set	16323
  1378  0000                     _LATC	set	16316
  1379  0000                     _LATB	set	16315
  1380  0000                     _PLLR	set	118496
  1381  0000                     _PRLOCKbits	set	14831
  1382  0000                     _DMA1CON0bits	set	15356
  1383  0000                     _DMA1CON1bits	set	15357
  1384  0000                     _SPI1CON0bits	set	15636
  1385  0000                     _U1ERRIRbits	set	15865
  1386  0000                     _LATCbits	set	16316
  1387  0000                     _LATFbits	set	16319
  1388  0000                     _LATAbits	set	16314
  1389  0000                     _LATDbits	set	16317
  1390  0000                     _LATEbits	set	16318
  1391  0000                     _TRISCbits	set	16324
  1392  0000                     _T5CONbits	set	16282
  1393  0000                     _IVTLOCKbits	set	16340
  1394  0000                     _GIE	set	130711
  1395  0000                     _IPR1bits	set	14721
  1396  0000                     _IPR2bits	set	14722
  1397  0000                     _PIE1bits	set	14737
  1398  0000                     _PIR1bits	set	14753
  1399  0000                     _PMD0	set	14784
  1400  0000                     _OSCCON1	set	14809
  1401  0000                     _RC3PPS	set	14867
  1402  0000                     _RD2PPS	set	14874
  1403  0000                     _ANSELA	set	14912
  1404  0000                     _ANSELB	set	14928
  1405  0000                     _ANSELC	set	14944
  1406  0000                     _ANSELD	set	14960
  1407  0000                     _LATA	set	16314
  1408  0000                     _LATD	set	16317
  1409  0000                     _LATE	set	16318
  1410  0000                     _TRISA	set	16322
  1411  0000                     _TRISE	set	16326
  1412  0000                     _LATF	set	16319
  1413  0000                     _PORTAbits	set	16330
  1414  0000                     _INTCON0bits	set	16338
  1415  0000                     _TRISF	set	16327
  1416  0000                     _INLVLD	set	14964
  1417  0000                     _SLRCOND	set	14963
  1418  0000                     _ODCOND	set	14962
  1419  0000                     _RD0I2C	set	14970
  1420  0000                     _WPUD	set	14961
  1421  0000                     _ANSELE	set	14976
  1422  0000                     _INLVLC	set	14948
  1423  0000                     _SLRCONC	set	14947
  1424  0000                     _ODCONC	set	14946
  1425  0000                     _RC3I2C	set	14954
  1426  0000                     _WPUC	set	14945
  1427  0000                     _INLVLB	set	14932
  1428  0000                     _SLRCONB	set	14931
  1429  0000                     _ODCONB	set	14930
  1430  0000                     _RB1I2C	set	14938
  1431  0000                     _WPUB	set	14929
  1432  0000                     _INLVLE	set	14980
  1433  0000                     _SLRCONE	set	14979
  1434  0000                     _ODCONE	set	14978
  1435  0000                     _WPUE	set	14977
  1436  0000                     _ANSELF	set	14992
  1437  0000                     _SPI1SCKPPS	set	15070
  1438  0000                     _INLVLF	set	14996
  1439  0000                     _SLRCONF	set	14995
  1440  0000                     _ODCONF	set	14994
  1441  0000                     _WPUF	set	14993
  1442  0000                     _INLVLA	set	14916
  1443  0000                     _SLRCONA	set	14915
  1444  0000                     _ODCONA	set	14914
  1445  0000                     _WPUA	set	14913
  1446  0000                     _RB2I2C	set	14939
  1447  0000                     _RC4I2C	set	14955
  1448  0000                     _RD1I2C	set	14971
  1449  0000                     _RF2PPS	set	14890
  1450  0000                     _SPI1SDIPPS	set	15071
  1451  0000                     _U1RXPPS	set	15077
  1452  0000                     _RC5PPS	set	14869
  1453  0000                     _RC6PPS	set	14870
  1454  0000                     _DMA1SSA	set	15353
  1455  0000                     _DMA2DSZ	set	15310
  1456  0000                     _DMA2DSA	set	15312
  1457  0000                     _DMA1DPTR	set	15340
  1458  0000                     _DMA1DSZ	set	15342
  1459  0000                     _DMA1DSA	set	15344
  1460  0000                     _DMA2CON0bits	set	15324
  1461  0000                     _DMA2CON1bits	set	15325
  1462  0000                     _SPI1RXB	set	15632
  1463  0000                     _SPI1TCNTL	set	15634
  1464  0000                     _SPI1CON0	set	15636
  1465  0000                     _U1RXB	set	15848
  1466  0000                     _U1TXB	set	15850
  1467  0000                     _U1P1L	set	15852
  1468  0000                     _DAC1CON1	set	16028
  1469  0000                     _DAC1CON0	set	16030
  1470  0000                     _SPI1TXB	set	15633
  1471  0000                     _ADLTHL	set	16094
  1472  0000                     _OSCCON3	set	14811
  1473  0000                     _PRLOCK	set	14831
  1474  0000                     _PMD7	set	14791
  1475  0000                     _PMD6	set	14790
  1476  0000                     _PMD5	set	14789
  1477  0000                     _PMD4	set	14788
  1478  0000                     _PMD3	set	14787
  1479  0000                     _PMD2	set	14786
  1480  0000                     _PMD1	set	14785
  1481  0000                     _DMA1PR	set	14835
  1482  0000                     _ADACQL	set	16115
  1483  0000                     _CCPTMRS1bits	set	16223
  1484  0000                     _PWM5DCL	set	16236
  1485  0000                     _PWM5DCH	set	16237
  1486  0000                     _PWM5CON	set	16238
  1487  0000                     _T6TMR	set	16274
  1488  0000                     _T6PR	set	16275
  1489  0000                     _T6HLT	set	16277
  1490  0000                     _T6CLKCON	set	16278
  1491  0000                     _ADCLK	set	16127
  1492  0000                     _ADACT	set	16126
  1493  0000                     _ADREF	set	16125
  1494  0000                     _ADSTAT	set	16124
  1495  0000                     _ADCON3	set	16123
  1496  0000                     _ADCON2	set	16122
  1497  0000                     _PIR4bits	set	14756
  1498  0000                     _PIR2bits	set	14754
  1499  0000                     _PIR8bits	set	14760
  1500  0000                     _PIR9bits	set	14761
  1501  0000                     _IVTLOCK	set	16340
  1502  0000                     _IPR8bits	set	14728
  1503  0000                     _IPR9bits	set	14729
  1504  0000                     _IPR3bits	set	14723
  1505  0000                     _PIE8bits	set	14744
  1506  0000                     _U1ERRIE	set	15866
  1507  0000                     _U1ERRIR	set	15865
  1508  0000                     _U1UIR	set	15864
  1509  0000                     _U1FIFO	set	15863
  1510  0000                     _U1BRGH	set	15862
  1511  0000                     _U1BRGL	set	15861
  1512  0000                     _U1CON2	set	15860
  1513  0000                     _U1CON1	set	15859
  1514  0000                     _U1CON0	set	15858
  1515  0000                     _U1P3H	set	15857
  1516  0000                     _U1P3L	set	15856
  1517  0000                     _U1P2H	set	15855
  1518  0000                     _U1P2L	set	15854
  1519  0000                     _U1P1H	set	15853
  1520  0000                     _T2TMR	set	16298
  1521  0000                     _T2PR	set	16299
  1522  0000                     _T2HLT	set	16301
  1523  0000                     _T2CLKCON	set	16302
  1524  0000                     _T5CLK	set	16285
  1525  0000                     _T5GATE	set	16284
  1526  0000                     _SPI1STATUSbits	set	15639
  1527  0000                     _SPI1BAUD	set	15641
  1528  0000                     _SPI1CLK	set	15644
  1529  0000                     _SPI1CON2	set	15638
  1530  0000                     _SPI1CON1	set	15637
  1531  0000                     _SPI1INTFbits	set	15642
  1532  0000                     _PWM6DCL	set	16232
  1533  0000                     _PWM6DCH	set	16233
  1534  0000                     _PWM6CON	set	16234
  1535  0000                     _T2RST	set	16303
  1536  0000                     _DMA1SPTR	set	15348
  1537  0000                     _DMA1SSZ	set	15351
  1538  0000                     _PORTBbits	set	16331
  1539  0000                     _DMA2SSA	set	15321
  1540  0000                     _DMA2SSZ	set	15319
  1541  00FEF8                     STR_8:
  1542                           
  1543                           ; BSR set to: 0
  1544  00FEF8  20                 	db	32
  1545  00FEF9  50                 	db	80	;'P'
  1546  00FEFA  53                 	db	83	;'S'
  1547  00FEFB  20                 	db	32
  1548  00FEFC  54                 	db	84	;'T'
  1549  00FEFD  65                 	db	101	;'e'
  1550  00FEFE  73                 	db	115	;'s'
  1551  00FEFF  74                 	db	116	;'t'
  1552  00FF00  20                 	db	32
  1553  00FF01  25                 	db	37
  1554  00FF02  31                 	db	49	;'1'
  1555  00FF03  75                 	db	117	;'u'
  1556  00FF04  3A                 	db	58	;':'
  1557  00FF05  20                 	db	32
  1558  00FF06  44                 	db	68	;'D'
  1559  00FF07  41                 	db	65	;'A'
  1560  00FF08  43                 	db	67	;'C'
  1561  00FF09  20                 	db	32
  1562  00FF0A  4F                 	db	79	;'O'
  1563  00FF0B  55                 	db	85	;'U'
  1564  00FF0C  54                 	db	84	;'T'
  1565  00FF0D  3D                 	db	61	;'='
  1566  00FF0E  25                 	db	37
  1567  00FF0F  2E                 	db	46
  1568  00FF10  32                 	db	50	;'2'
  1569  00FF11  75                 	db	117	;'u'
  1570  00FF12  2C                 	db	44
  1571  00FF13  20                 	db	32
  1572  00FF14  53                 	db	83	;'S'
  1573  00FF15  75                 	db	117	;'u'
  1574  00FF16  70                 	db	112	;'p'
  1575  00FF17  70                 	db	112	;'p'
  1576  00FF18  6C                 	db	108	;'l'
  1577  00FF19  79                 	db	121	;'y'
  1578  00FF1A  20                 	db	32
  1579  00FF1B  52                 	db	82	;'R'
  1580  00FF1C  65                 	db	101	;'e'
  1581  00FF1D  61                 	db	97	;'a'
  1582  00FF1E  64                 	db	100	;'d'
  1583  00FF1F  42                 	db	66	;'B'
  1584  00FF20  61                 	db	97	;'a'
  1585  00FF21  63                 	db	99	;'c'
  1586  00FF22  6B                 	db	107	;'k'
  1587  00FF23  20                 	db	32
  1588  00FF24  25                 	db	37
  1589  00FF25  34                 	db	52	;'4'
  1590  00FF26  2E                 	db	46
  1591  00FF27  34                 	db	52	;'4'
  1592  00FF28  75                 	db	117	;'u'
  1593  00FF29  20                 	db	32
  1594  00FF2A  56                 	db	86	;'V'
  1595  00FF2B  3D                 	db	61	;'='
  1596  00FF2C  25                 	db	37
  1597  00FF2D  2B                 	db	43
  1598  00FF2E  36                 	db	54	;'6'
  1599  00FF2F  2E                 	db	46
  1600  00FF30  31                 	db	49	;'1'
  1601  00FF31  66                 	db	102	;'f'
  1602  00FF32  56                 	db	86	;'V'
  1603  00FF33  20                 	db	32
  1604  00FF34  25                 	db	37
  1605  00FF35  34                 	db	52	;'4'
  1606  00FF36  2E                 	db	46
  1607  00FF37  34                 	db	52	;'4'
  1608  00FF38  75                 	db	117	;'u'
  1609  00FF39  20                 	db	32
  1610  00FF3A  49                 	db	73	;'I'
  1611  00FF3B  3D                 	db	61	;'='
  1612  00FF3C  25                 	db	37
  1613  00FF3D  2B                 	db	43
  1614  00FF3E  33                 	db	51	;'3'
  1615  00FF3F  2E                 	db	46
  1616  00FF40  31                 	db	49	;'1'
  1617  00FF41  66                 	db	102	;'f'
  1618  00FF42  6D                 	db	109	;'m'
  1619  00FF43  41                 	db	65	;'A'
  1620  00FF44  0D                 	db	13
  1621  00FF45  0A                 	db	10
  1622  00FF46  00                 	db	0
  1623  00FF47                     STR_3:
  1624                           
  1625                           ; BSR set to: 0
  1626  00FF47  0D                 	db	13
  1627  00FF48  0A                 	db	10
  1628  00FF49  20                 	db	32
  1629  00FF4A  52                 	db	82	;'R'
  1630  00FF4B  61                 	db	97	;'a'
  1631  00FF4C  6D                 	db	109	;'m'
  1632  00FF4D  70                 	db	112	;'p'
  1633  00FF4E  20                 	db	32
  1634  00FF4F  74                 	db	116	;'t'
  1635  00FF50  6F                 	db	111	;'o'
  1636  00FF51  20                 	db	32
  1637  00FF52  31                 	db	49	;'1'
  1638  00FF53  30                 	db	48	;'0'
  1639  00FF54  30                 	db	48	;'0'
  1640  00FF55  30                 	db	48	;'0'
  1641  00FF56  56                 	db	86	;'V'
  1642  00FF57  44                 	db	68	;'D'
  1643  00FF58  43                 	db	67	;'C'
  1644  00FF59  20                 	db	32
  1645  00FF5A  4F                 	db	79	;'O'
  1646  00FF5B  4E                 	db	78	;'N'
  1647  00FF5C  20                 	db	32
  1648  00FF5D  0D                 	db	13
  1649  00FF5E  0A                 	db	10
  1650  00FF5F  00                 	db	0
  1651  00FF60                     STR_4:
  1652                           
  1653                           ; BSR set to: 0
  1654  00FF60  0D                 	db	13
  1655  00FF61  0A                 	db	10
  1656  00FF62  20                 	db	32
  1657  00FF63  53                 	db	83	;'S'
  1658  00FF64  74                 	db	116	;'t'
  1659  00FF65  65                 	db	101	;'e'
  1660  00FF66  61                 	db	97	;'a'
  1661  00FF67  64                 	db	100	;'d'
  1662  00FF68  79                 	db	121	;'y'
  1663  00FF69  20                 	db	32
  1664  00FF6A  31                 	db	49	;'1'
  1665  00FF6B  30                 	db	48	;'0'
  1666  00FF6C  30                 	db	48	;'0'
  1667  00FF6D  30                 	db	48	;'0'
  1668  00FF6E  56                 	db	86	;'V'
  1669  00FF6F  44                 	db	68	;'D'
  1670  00FF70  43                 	db	67	;'C'
  1671  00FF71  20                 	db	32
  1672  00FF72  4F                 	db	79	;'O'
  1673  00FF73  4E                 	db	78	;'N'
  1674  00FF74  20                 	db	32
  1675  00FF75  0D                 	db	13
  1676  00FF76  0A                 	db	10
  1677  00FF77  00                 	db	0
  1678  00FF78                     STR_6:
  1679                           
  1680                           ; BSR set to: 0
  1681  00FF78  53                 	db	83	;'S'
  1682  00FF79  50                 	db	80	;'P'
  1683  00FF7A  49                 	db	73	;'I'
  1684  00FF7B  20                 	db	32
  1685  00FF7C  64                 	db	100	;'d'
  1686  00FF7D  69                 	db	105	;'i'
  1687  00FF7E  73                 	db	115	;'s'
  1688  00FF7F  70                 	db	112	;'p'
  1689  00FF80  6C                 	db	108	;'l'
  1690  00FF81  61                 	db	97	;'a'
  1691  00FF82  79                 	db	121	;'y'
  1692  00FF83  20                 	db	32
  1693  00FF84  74                 	db	116	;'t'
  1694  00FF85  65                 	db	101	;'e'
  1695  00FF86  73                 	db	115	;'s'
  1696  00FF87  74                 	db	116	;'t'
  1697  00FF88  69                 	db	105	;'i'
  1698  00FF89  6E                 	db	110	;'n'
  1699  00FF8A  67                 	db	103	;'g'
  1700  00FF8B  00                 	db	0
  1701  00FF8C                     STR_5:
  1702                           
  1703                           ; BSR set to: 0
  1704  00FF8C  0D                 	db	13
  1705  00FF8D  0A                 	db	10
  1706  00FF8E  20                 	db	32
  1707  00FF8F  56                 	db	86	;'V'
  1708  00FF90  6F                 	db	111	;'o'
  1709  00FF91  6C                 	db	108	;'l'
  1710  00FF92  74                 	db	116	;'t'
  1711  00FF93  61                 	db	97	;'a'
  1712  00FF94  67                 	db	103	;'g'
  1713  00FF95  65                 	db	101	;'e'
  1714  00FF96  20                 	db	32
  1715  00FF97  4F                 	db	79	;'O'
  1716  00FF98  46                 	db	70	;'F'
  1717  00FF99  46                 	db	70	;'F'
  1718  00FF9A  20                 	db	32
  1719  00FF9B  0D                 	db	13
  1720  00FF9C  0A                 	db	10
  1721  00FF9D  00                 	db	0
  1722  00FF9E                     STR_9:
  1723                           
  1724                           ; BSR set to: 0
  1725  00FF9E  44                 	db	68	;'D'
  1726  00FF9F  69                 	db	105	;'i'
  1727  00FFA0  73                 	db	115	;'s'
  1728  00FFA1  70                 	db	112	;'p'
  1729  00FFA2  6C                 	db	108	;'l'
  1730  00FFA3  61                 	db	97	;'a'
  1731  00FFA4  79                 	db	121	;'y'
  1732  00FFA5  20                 	db	32
  1733  00FFA6  74                 	db	116	;'t'
  1734  00FFA7  65                 	db	101	;'e'
  1735  00FFA8  73                 	db	115	;'s'
  1736  00FFA9  74                 	db	116	;'t'
  1737  00FFAA  69                 	db	105	;'i'
  1738  00FFAB  6E                 	db	110	;'n'
  1739  00FFAC  67                 	db	103	;'g'
  1740  00FFAD  20                 	db	32
  1741  00FFAE  20                 	db	32
  1742  00FFAF  00                 	db	0
  1743  00FFB0                     STR_7:
  1744                           
  1745                           ; BSR set to: 0
  1746  00FFB0  0D                 	db	13
  1747  00FFB1  0A                 	db	10
  1748  00FFB2  20                 	db	32
  1749  00FFB3  42                 	db	66	;'B'
  1750  00FFB4  75                 	db	117	;'u'
  1751  00FFB5  69                 	db	105	;'i'
  1752  00FFB6  6C                 	db	108	;'l'
  1753  00FFB7  64                 	db	100	;'d'
  1754  00FFB8  20                 	db	32
  1755  00FFB9  25                 	db	37
  1756  00FFBA  73                 	db	115	;'s'
  1757  00FFBB  20                 	db	32
  1758  00FFBC  25                 	db	37
  1759  00FFBD  73                 	db	115	;'s'
  1760  00FFBE  0D                 	db	13
  1761  00FFBF  0A                 	db	10
  1762  00FFC0  00                 	db	0
  1763  00FFC1                     STR_1:
  1764                           
  1765                           ; BSR set to: 0
  1766  00FFC1  4D                 	db	77	;'M'
  1767  00FFC2  61                 	db	97	;'a'
  1768  00FFC3  72                 	db	114	;'r'
  1769  00FFC4  20                 	db	32
  1770  00FFC5  31                 	db	49	;'1'
  1771  00FFC6  35                 	db	53	;'5'
  1772  00FFC7  20                 	db	32
  1773  00FFC8  32                 	db	50	;'2'
  1774  00FFC9  30                 	db	48	;'0'
  1775  00FFCA  32                 	db	50	;'2'
  1776  00FFCB  32                 	db	50	;'2'
  1777  00FFCC  00                 	db	0
  1778  00FFCD                     STR_2:
  1779                           
  1780                           ; BSR set to: 0
  1781  00FFCD  31                 	db	49	;'1'
  1782  00FFCE  34                 	db	52	;'4'
  1783  00FFCF  3A                 	db	58	;':'
  1784  00FFD0  34                 	db	52	;'4'
  1785  00FFD1  36                 	db	54	;'6'
  1786  00FFD2  3A                 	db	58	;':'
  1787  00FFD3  33                 	db	51	;'3'
  1788  00FFD4  31                 	db	49	;'1'
  1789  00FFD5  00                 	db	0
  1790  00FFD6                     STR_17:
  1791                           
  1792                           ; BSR set to: 0
  1793  00FFD6  49                 	db	73	;'I'
  1794  00FFD7  4E                 	db	78	;'N'
  1795  00FFD8  46                 	db	70	;'F'
  1796  00FFD9  00                 	db	0
  1797  00FFDA                     STR_21:
  1798                           
  1799                           ; BSR set to: 0
  1800  00FFDA  4E                 	db	78	;'N'
  1801  00FFDB  41                 	db	65	;'A'
  1802  00FFDC  4E                 	db	78	;'N'
  1803  00FFDD  00                 	db	0
  1804  00FFDE                     STR_18:
  1805                           
  1806                           ; BSR set to: 0
  1807  00FFDE  69                 	db	105	;'i'
  1808  00FFDF  6E                 	db	110	;'n'
  1809  00FFE0  66                 	db	102	;'f'
  1810  00FFE1  00                 	db	0
  1811  00FFE2                     STR_22:
  1812                           
  1813                           ; BSR set to: 0
  1814  00FFE2  6E                 	db	110	;'n'
  1815  00FFE3  61                 	db	97	;'a'
  1816  00FFE4  6E                 	db	110	;'n'
  1817  00FFE5  00                 	db	0
  1818  00FFE6                     STR_30:
  1819                           
  1820                           ; BSR set to: 0
  1821  00FFE6  6C                 	db	108	;'l'
  1822  00FFE7  6C                 	db	108	;'l'
  1823  00FFE8  73                 	db	115	;'s'
  1824  00FFE9  00                 	db	0
  1825  00FFEA                     STR_25:
  1826                           
  1827                           ; BSR set to: 0
  1828  00FFEA  6C                 	db	108	;'l'
  1829  00FFEB  66                 	db	102	;'f'
  1830  00FFEC  00                 	db	0
  1831  00FFED                     STR_14:
  1832                           
  1833                           ; BSR set to: 0
  1834  00FFED  70                 	db	112	;'p'
  1835  00FFEE  64                 	db	100	;'d'
  1836  00FFEF  00                 	db	0
  1837  00FFF0                     STR_15:
  1838                           
  1839                           ; BSR set to: 0
  1840  00FFF0  70                 	db	112	;'p'
  1841  00FFF1  6C                 	db	108	;'l'
  1842  00FFF2  00                 	db	0
  1843  00FFF3                     STR_12:
  1844                           
  1845                           ; BSR set to: 0
  1846  00FFF3  70                 	db	112	;'p'
  1847  00FFF4  6F                 	db	111	;'o'
  1848  00FFF5  00                 	db	0
  1849  00FFF6                     STR_10:
  1850                           
  1851                           ; BSR set to: 0
  1852  00FFF6  70                 	db	112	;'p'
  1853  00FFF7  72                 	db	114	;'r'
  1854  00FFF8  00                 	db	0
  1855  00FFF9                     STR_11:
  1856                           
  1857                           ; BSR set to: 0
  1858  00FFF9  70                 	db	112	;'p'
  1859  00FFFA  73                 	db	115	;'s'
  1860  00FFFB  00                 	db	0
  1861  00FFFC                     STR_13:
  1862                           
  1863                           ; BSR set to: 0
  1864  00FFFC  70                 	db	112	;'p'
  1865  00FFFD  75                 	db	117	;'u'
  1866  00FFFE  00                 	db	0
  1867  00FFFF  00                 	db	0	; dummy byte at the end
  1868  0000                     
  1869                           ; #config settings
  1870                           
  1871                           	psect	cinit
  1872  01322E                     __pcinit:
  1873                           	callstack 0
  1874  01322E                     start_initialization:
  1875                           	callstack 0
  1876  01322E                     __initialization:
  1877                           	callstack 0
  1878                           
  1879                           ; Initialize objects allocated to BIGRAM (1024 bytes)
  1880                           ; load TBLPTR registers with __pidataBIGRAM
  1881  01322E  0E8A               	movlw	low __pidataBIGRAM
  1882  013230  6EF6               	movwf	tblptrl,c
  1883  013232  0E11               	movlw	high __pidataBIGRAM
  1884  013234  6EF7               	movwf	tblptrh,c
  1885  013236  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  1886  013238  6EF8               	movwf	tblptru,c
  1887  01323A  EE00  F3FF         	lfsr	0,__pdataBIGRAM
  1888  01323E  EE11 F000          	lfsr	1,1024
  1889  013242                     copy_data0:
  1890  013242  0009               	tblrd		*+
  1891  013244  006F FFD7 FFEE     	movff	tablat,postinc0
  1892  01324A  50E5               	movf	postdec1,w,c
  1893  01324C  50E1               	movf	fsr1l,w,c
  1894  01324E  E1F9               	bnz	copy_data0
  1895  013250  50E2               	movf	fsr1h,w,c
  1896  013252  E1F7               	bnz	copy_data0
  1897                           
  1898                           ; Initialize objects allocated to BANK1 (46 bytes)
  1899                           ; load TBLPTR registers with __pidataBANK1
  1900  013254  0EDE               	movlw	low __pidataBANK1
  1901  013256  6EF6               	movwf	tblptrl,c
  1902  013258  0E43               	movlw	high __pidataBANK1
  1903  01325A  6EF7               	movwf	tblptrh,c
  1904  01325C  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1905  01325E  6EF8               	movwf	tblptru,c
  1906  013260  EE00  F1A0         	lfsr	0,__pdataBANK1
  1907  013264  EE10 F02E          	lfsr	1,46
  1908  013268                     copy_data1:
  1909  013268  0009               	tblrd		*+
  1910  01326A  006F FFD7 FFEE     	movff	tablat,postinc0
  1911  013270  50E5               	movf	postdec1,w,c
  1912  013272  50E1               	movf	fsr1l,w,c
  1913  013274  E1F9               	bnz	copy_data1
  1914                           
  1915                           ; Initialize objects allocated to BANK0 (2 bytes)
  1916                           ; load TBLPTR registers with __pidataBANK0
  1917  013276  0E3C               	movlw	low __pidataBANK0
  1918  013278  6EF6               	movwf	tblptrl,c
  1919  01327A  0E48               	movlw	high __pidataBANK0
  1920  01327C  6EF7               	movwf	tblptrh,c
  1921  01327E  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1922  013280  6EF8               	movwf	tblptru,c
  1923  013282  0009               	tblrd		*+	;fetch initializer
  1924  013284  006F FFD4  F0FE    	movff	tablat,__pdataBANK0
  1925  01328A  0009               	tblrd		*+	;fetch initializer
  1926  01328C  006F FFD4  F0FF    	movff	tablat,__pdataBANK0+1
  1927                           
  1928                           ; Clear objects allocated to BANK3 (255 bytes)
  1929  013292  EE00  F300         	lfsr	0,__pbssBANK3
  1930  013296  EE10 F0FF          	lfsr	1,255
  1931  01329A                     clear_0:
  1932  01329A  6AEE               	clrf	postinc0,c
  1933  01329C  50E5               	movf	postdec1,w,c
  1934  01329E  50E1               	movf	fsr1l,w,c
  1935  0132A0  E1FC               	bnz	clear_0
  1936  0132A2  50E2               	movf	fsr1h,w,c
  1937  0132A4  E1FA               	bnz	clear_0
  1938                           
  1939                           ; Clear objects allocated to BANK2 (198 bytes)
  1940  0132A6  EE00  F200         	lfsr	0,__pbssBANK2
  1941  0132AA  0EC6               	movlw	198
  1942  0132AC                     clear_1:
  1943  0132AC  6AEE               	clrf	postinc0,c
  1944  0132AE  06E8               	decf	wreg,f,c
  1945  0132B0  E1FD               	bnz	clear_1
  1946                           
  1947                           ; Clear objects allocated to BANK1 (160 bytes)
  1948  0132B2  EE00  F100         	lfsr	0,__pbssBANK1
  1949  0132B6  0EA0               	movlw	160
  1950  0132B8                     clear_2:
  1951  0132B8  6AEE               	clrf	postinc0,c
  1952  0132BA  06E8               	decf	wreg,f,c
  1953  0132BC  E1FD               	bnz	clear_2
  1954                           
  1955                           ; Clear objects allocated to BANK0 (33 bytes)
  1956  0132BE  EE00  F0DD         	lfsr	0,__pbssBANK0
  1957  0132C2  0E21               	movlw	33
  1958  0132C4                     clear_3:
  1959  0132C4  6AEE               	clrf	postinc0,c
  1960  0132C6  06E8               	decf	wreg,f,c
  1961  0132C8  E1FD               	bnz	clear_3
  1962                           
  1963                           ; Clear objects allocated to COMRAM (22 bytes)
  1964  0132CA  EE00  F033         	lfsr	0,__pbssCOMRAM
  1965  0132CE  0E16               	movlw	22
  1966  0132D0                     clear_4:
  1967  0132D0  6AEE               	clrf	postinc0,c
  1968  0132D2  06E8               	decf	wreg,f,c
  1969  0132D4  E1FD               	bnz	clear_4
  1970                           
  1971                           ;
  1972                           ; Setup IVTBASE
  1973                           ;
  1974  0132D6  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1975  0132D8  6ED5               	movwf	213,c
  1976  0132DA  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1977  0132DC  6ED6               	movwf	214,c
  1978  0132DE  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1979  0132E0  6ED7               	movwf	215,c
  1980  0132E2                     end_of_initialization:
  1981                           	callstack 0
  1982  0132E2                     __end_of__initialization:
  1983                           	callstack 0
  1984  0132E2  0100               	movlb	0
  1985  0132E4  EFF4  F08D         	goto	_main	;jump to C main() function
  1986                           
  1987                           	psect	bssCOMRAM
  1988  000033                     __pbssCOMRAM:
  1989                           	callstack 0
  1990  000033                     _ana:
  1991                           	callstack 0
  1992  000033                     	ds	4
  1993  000037                     _UART1_RxInterruptHandler:
  1994                           	callstack 0
  1995  000037                     	ds	3
  1996  00003A                     _flags:
  1997                           	callstack 0
  1998  00003A                     	ds	2
  1999  00003C                     _timer5ReloadVal:
  2000                           	callstack 0
  2001  00003C                     	ds	2
  2002  00003E                     TMR6_ISR@CountCallBack:
  2003                           	callstack 0
  2004  00003E                     	ds	2
  2005  000040                     _res:
  2006                           	callstack 0
  2007  000040                     	ds	1
  2008  000041                     _adc_chan:
  2009                           	callstack 0
  2010  000041                     	ds	1
  2011  000042                     _uart1RxLastError:
  2012                           	callstack 0
  2013  000042                     	ds	1
  2014  000043                     _uart1RxCount:
  2015                           	callstack 0
  2016  000043                     	ds	1
  2017  000044                     _uart1RxTail:
  2018                           	callstack 0
  2019  000044                     	ds	1
  2020  000045                     _uart1RxHead:
  2021                           	callstack 0
  2022  000045                     	ds	1
  2023  000046                     _uart1TxBufferRemaining:
  2024                           	callstack 0
  2025  000046                     	ds	1
  2026  000047                     _uart1TxTail:
  2027                           	callstack 0
  2028  000047                     	ds	1
  2029  000048                     _uart1TxHead:
  2030                           	callstack 0
  2031  000048                     	ds	1
  2032                           
  2033                           	psect	bssBANK0
  2034  0000DD                     __pbssBANK0:
  2035                           	callstack 0
  2036  0000DD                     wdtdelay@dcount:
  2037                           	callstack 0
  2038  0000DD                     	ds	4
  2039  0000E1                     _DMA1_SCNTI_InterruptHandler:
  2040                           	callstack 0
  2041  0000E1                     	ds	3
  2042  0000E4                     _TMR5_InterruptHandler:
  2043                           	callstack 0
  2044  0000E4                     	ds	3
  2045  0000E7                     _UART1_FramingErrorHandler:
  2046                           	callstack 0
  2047  0000E7                     	ds	3
  2048  0000EA                     _TMR6_InterruptHandler:
  2049                           	callstack 0
  2050  0000EA                     	ds	3
  2051  0000ED                     _ADCC_ADI_InterruptHandler:
  2052                           	callstack 0
  2053  0000ED                     	ds	3
  2054  0000F0                     _UART1_TxInterruptHandler:
  2055                           	callstack 0
  2056  0000F0                     	ds	3
  2057  0000F3                     _nout:
  2058                           	callstack 0
  2059  0000F3                     	ds	2
  2060  0000F5                     _width:
  2061                           	callstack 0
  2062  0000F5                     	ds	2
  2063  0000F7                     _prec:
  2064                           	callstack 0
  2065  0000F7                     	ds	2
  2066  0000F9                     _mode_sw:
  2067                           	callstack 0
  2068  0000F9                     	ds	1
  2069  0000FA                     _dac_v:
  2070                           	callstack 0
  2071  0000FA                     	ds	1
  2072  0000FB                     _mode:
  2073                           	callstack 0
  2074  0000FB                     	ds	1
  2075  0000FC                     _adc_tick:
  2076                           	callstack 0
  2077  0000FC                     	ds	1
  2078  0000FD                     _disp_tick:
  2079                           	callstack 0
  2080  0000FD                     	ds	1
  2081                           
  2082                           	psect	dataBANK0
  2083  0000FE                     __pdataBANK0:
  2084                           	callstack 0
  2085  0000FE                     _static_ps:
  2086                           	callstack 0
  2087  0000FE                     	ds	1
  2088  0000FF                     _roll_max:
  2089                           	callstack 0
  2090  0000FF                     	ds	1
  2091                           
  2092                           	psect	bssBANK1
  2093  000100                     __pbssBANK1:
  2094                           	callstack 0
  2095  000100                     _spi_link:
  2096                           	callstack 0
  2097  000100                     	ds	12
  2098  00010C                     _tickCount:
  2099                           	callstack 0
  2100  00010C                     	ds	12
  2101  000118                     _uart1RxStatusBuffer:
  2102                           	callstack 0
  2103  000118                     	ds	8
  2104  000120                     _uart1RxBuffer:
  2105                           	callstack 0
  2106  000120                     	ds	8
  2107  000128                     _uart1TxBuffer:
  2108                           	callstack 0
  2109  000128                     	ds	8
  2110  000130                     floorf@F526:
  2111                           	callstack 0
  2112  000130                     	ds	4
  2113  000134                     ___fpclassifyf@F465:
  2114                           	callstack 0
  2115  000134                     	ds	4
  2116  000138                     _ival:
  2117                           	callstack 0
  2118  000138                     	ds	4
  2119  00013C                     _vval:
  2120                           	callstack 0
  2121  00013C                     	ds	4
  2122  000140                     _UART1_ErrorHandler:
  2123                           	callstack 0
  2124  000140                     	ds	3
  2125  000143                     _UART1_OverrunErrorHandler:
  2126                           	callstack 0
  2127  000143                     	ds	3
  2128  000146                     _dbuf:
  2129                           	callstack 0
  2130  000146                     	ds	80
  2131  000196                     _SrcVarName0:
  2132                           	callstack 0
  2133  000196                     	ds	10
  2134                           
  2135                           	psect	dataBANK1
  2136  0001A0                     __pdataBANK1:
  2137                           	callstack 0
  2138  0001A0                     stoa@F1164:
  2139                           	callstack 0
  2140  0001A0                     	ds	7
  2141  0001A7                     _build_time:
  2142                           	callstack 0
  2143  0001A7                     	ds	2
  2144  0001A9                     _build_date:
  2145                           	callstack 0
  2146  0001A9                     	ds	2
  2147  0001AB                     _g_cmds:
  2148                           	callstack 0
  2149  0001AB                     	ds	35
  2150                           
  2151                           	psect	bssBANK2
  2152  000200                     __pbssBANK2:
  2153                           	callstack 0
  2154  000200                     _cli_ctx:
  2155                           	callstack 0
  2156  000200                     	ds	131
  2157  000283                     _ring_buf1:
  2158                           	callstack 0
  2159  000283                     	ds	67
  2160                           
  2161                           	psect	bssBANK3
  2162  000300                     __pbssBANK3:
  2163                           	callstack 0
  2164  000300                     _buff1:
  2165                           	callstack 0
  2166  000300                     	ds	255
  2167                           
  2168                           	psect	dataBIGRAM
  2169  0003FF                     __pdataBIGRAM:
  2170                           	callstack 0
  2171  0003FF                     	ds	1024
  2172                           
  2173                           	psect	cstackBANK1
  2174  0001CE                     __pcstackBANK1:
  2175                           	callstack 0
  2176  0001CE                     vfprintf@cfmt:
  2177                           	callstack 0
  2178                           
  2179                           ; 2 bytes @ 0x0
  2180  0001CE                     	ds	2
  2181  0001D0                     ?_sprintf:
  2182                           	callstack 0
  2183  0001D0                     ?_printf:
  2184                           	callstack 0
  2185  0001D0                     sprintf@s:
  2186                           	callstack 0
  2187  0001D0                     printf@fmt:
  2188                           	callstack 0
  2189                           
  2190                           ; 2 bytes @ 0x2
  2191  0001D0                     	ds	2
  2192  0001D2                     sprintf@fmt:
  2193                           	callstack 0
  2194                           
  2195                           ; 2 bytes @ 0x4
  2196  0001D2                     	ds	6
  2197  0001D8                     sprintf@ap:
  2198                           	callstack 0
  2199                           
  2200                           ; 2 bytes @ 0xA
  2201  0001D8                     	ds	2
  2202  0001DA                     sprintf@f:
  2203                           	callstack 0
  2204                           
  2205                           ; 11 bytes @ 0xC
  2206  0001DA                     	ds	8
  2207  0001E2                     printf@ap:
  2208                           	callstack 0
  2209                           
  2210                           ; 2 bytes @ 0x14
  2211  0001E2                     	ds	3
  2212  0001E5                     ??_main:
  2213                           
  2214                           ; 1 bytes @ 0x17
  2215  0001E5                     	ds	2
  2216                           
  2217                           	psect	cstackBANK0
  2218  000060                     __pcstackBANK0:
  2219                           	callstack 0
  2220  000060                     ??__cli_interpret_cmd:
  2221  000060                     ?_floorf:
  2222                           	callstack 0
  2223  000060                     ___flmul@sign:
  2224                           	callstack 0
  2225  000060                     pad@i:
  2226                           	callstack 0
  2227  000060                     floorf@x:
  2228                           	callstack 0
  2229  000060                     stoa@nuls:
  2230                           	callstack 0
  2231                           
  2232                           ; 7 bytes @ 0x0
  2233  000060                     	ds	1
  2234  000061                     ___flmul@aexp:
  2235                           	callstack 0
  2236                           
  2237                           ; 1 bytes @ 0x1
  2238  000061                     	ds	1
  2239  000062                     ___flmul@bexp:
  2240                           	callstack 0
  2241  000062                     pad@w:
  2242                           	callstack 0
  2243                           
  2244                           ; 2 bytes @ 0x2
  2245  000062                     	ds	1
  2246  000063                     ___flmul@grs:
  2247                           	callstack 0
  2248                           
  2249                           ; 4 bytes @ 0x3
  2250  000063                     	ds	1
  2251  000064                     ??_floorf:
  2252  000064                     ?_utoa:
  2253                           	callstack 0
  2254  000064                     utoa@fp:
  2255                           	callstack 0
  2256                           
  2257                           ; 2 bytes @ 0x4
  2258  000064                     	ds	2
  2259  000066                     utoa@d:
  2260                           	callstack 0
  2261                           
  2262                           ; 8 bytes @ 0x6
  2263  000066                     	ds	1
  2264  000067                     stoa@i:
  2265                           	callstack 0
  2266  000067                     ___flmul@prod:
  2267                           	callstack 0
  2268                           
  2269                           ; 4 bytes @ 0x7
  2270  000067                     	ds	1
  2271  000068                     __cli_interpret_cmd@ret:
  2272                           	callstack 0
  2273                           
  2274                           ; 1 bytes @ 0x8
  2275  000068                     	ds	1
  2276  000069                     __cli_interpret_cmd@i:
  2277                           	callstack 0
  2278  000069                     stoa@w:
  2279                           	callstack 0
  2280                           
  2281                           ; 2 bytes @ 0x9
  2282  000069                     	ds	1
  2283  00006A                     cli_read@a_ctx:
  2284                           	callstack 0
  2285  00006A                     floorf@m:
  2286                           	callstack 0
  2287                           
  2288                           ; 4 bytes @ 0xA
  2289  00006A                     	ds	1
  2290  00006B                     ___flmul@temp:
  2291                           	callstack 0
  2292  00006B                     stoa@cp:
  2293                           	callstack 0
  2294                           
  2295                           ; 2 bytes @ 0xB
  2296  00006B                     	ds	1
  2297  00006C                     ??_cli_read:
  2298                           
  2299                           ; 1 bytes @ 0xC
  2300  00006C                     	ds	1
  2301  00006D                     ?___flsub:
  2302                           	callstack 0
  2303  00006D                     stoa@p:
  2304                           	callstack 0
  2305  00006D                     ___flge@ff1:
  2306                           	callstack 0
  2307  00006D                     ___flsub@b:
  2308                           	callstack 0
  2309                           
  2310                           ; 4 bytes @ 0xD
  2311  00006D                     	ds	1
  2312  00006E                     ??_utoa:
  2313  00006E                     floorf@e:
  2314                           	callstack 0
  2315                           
  2316                           ; 2 bytes @ 0xE
  2317  00006E                     	ds	1
  2318  00006F                     _cli_read$2759:
  2319                           	callstack 0
  2320  00006F                     stoa@l:
  2321                           	callstack 0
  2322                           
  2323                           ; 2 bytes @ 0xF
  2324  00006F                     	ds	1
  2325  000070                     floorf@u:
  2326                           	callstack 0
  2327                           
  2328                           ; 4 bytes @ 0x10
  2329  000070                     	ds	1
  2330  000071                     cli_read@i:
  2331                           	callstack 0
  2332  000071                     ___flge@ff2:
  2333                           	callstack 0
  2334  000071                     ___flsub@a:
  2335                           	callstack 0
  2336                           
  2337                           ; 4 bytes @ 0x11
  2338  000071                     	ds	4
  2339  000075                     ??___flge:
  2340                           
  2341                           ; 1 bytes @ 0x15
  2342  000075                     	ds	1
  2343  000076                     utoa@p:
  2344                           	callstack 0
  2345                           
  2346                           ; 2 bytes @ 0x16
  2347  000076                     	ds	2
  2348  000078                     utoa@w:
  2349                           	callstack 0
  2350                           
  2351                           ; 2 bytes @ 0x18
  2352  000078                     	ds	1
  2353  000079                     ?_efgtoa:
  2354                           	callstack 0
  2355  000079                     efgtoa@fp:
  2356                           	callstack 0
  2357                           
  2358                           ; 2 bytes @ 0x19
  2359  000079                     	ds	1
  2360  00007A                     utoa@n:
  2361                           	callstack 0
  2362                           
  2363                           ; 8 bytes @ 0x1A
  2364  00007A                     	ds	1
  2365  00007B                     efgtoa@f:
  2366                           	callstack 0
  2367                           
  2368                           ; 4 bytes @ 0x1B
  2369  00007B                     	ds	4
  2370  00007F                     efgtoa@c:
  2371                           	callstack 0
  2372                           
  2373                           ; 1 bytes @ 0x1F
  2374  00007F                     	ds	1
  2375  000080                     ??_efgtoa:
  2376                           
  2377                           ; 1 bytes @ 0x20
  2378  000080                     	ds	2
  2379  000082                     utoa@i:
  2380                           	callstack 0
  2381                           
  2382                           ; 2 bytes @ 0x22
  2383  000082                     	ds	3
  2384  000085                     _efgtoa$3845:
  2385                           	callstack 0
  2386                           
  2387                           ; 2 bytes @ 0x25
  2388  000085                     	ds	2
  2389  000087                     _efgtoa$3853:
  2390                           	callstack 0
  2391                           
  2392                           ; 2 bytes @ 0x27
  2393  000087                     	ds	2
  2394  000089                     _efgtoa$3854:
  2395                           	callstack 0
  2396                           
  2397                           ; 2 bytes @ 0x29
  2398  000089                     	ds	2
  2399  00008B                     efgtoa@t:
  2400                           	callstack 0
  2401                           
  2402                           ; 2 bytes @ 0x2B
  2403  00008B                     	ds	2
  2404  00008D                     efgtoa@pp:
  2405                           	callstack 0
  2406                           
  2407                           ; 2 bytes @ 0x2D
  2408  00008D                     	ds	2
  2409  00008F                     efgtoa@ne:
  2410                           	callstack 0
  2411                           
  2412                           ; 2 bytes @ 0x2F
  2413  00008F                     	ds	2
  2414  000091                     efgtoa@m:
  2415                           	callstack 0
  2416                           
  2417                           ; 2 bytes @ 0x31
  2418  000091                     	ds	2
  2419  000093                     efgtoa@ou:
  2420                           	callstack 0
  2421                           
  2422                           ; 4 bytes @ 0x33
  2423  000093                     	ds	4
  2424  000097                     efgtoa@d:
  2425                           	callstack 0
  2426                           
  2427                           ; 2 bytes @ 0x37
  2428  000097                     	ds	2
  2429  000099                     efgtoa@sign:
  2430                           	callstack 0
  2431                           
  2432                           ; 2 bytes @ 0x39
  2433  000099                     	ds	2
  2434  00009B                     efgtoa@p:
  2435                           	callstack 0
  2436                           
  2437                           ; 2 bytes @ 0x3B
  2438  00009B                     	ds	2
  2439  00009D                     efgtoa@nmode:
  2440                           	callstack 0
  2441                           
  2442                           ; 1 bytes @ 0x3D
  2443  00009D                     	ds	1
  2444  00009E                     efgtoa@w:
  2445                           	callstack 0
  2446                           
  2447                           ; 2 bytes @ 0x3E
  2448  00009E                     	ds	2
  2449  0000A0                     efgtoa@mode:
  2450                           	callstack 0
  2451                           
  2452                           ; 1 bytes @ 0x40
  2453  0000A0                     	ds	1
  2454  0000A1                     efgtoa@h:
  2455                           	callstack 0
  2456                           
  2457                           ; 4 bytes @ 0x41
  2458  0000A1                     	ds	4
  2459  0000A5                     efgtoa@l:
  2460                           	callstack 0
  2461                           
  2462                           ; 4 bytes @ 0x45
  2463  0000A5                     	ds	4
  2464  0000A9                     efgtoa@g:
  2465                           	callstack 0
  2466                           
  2467                           ; 4 bytes @ 0x49
  2468  0000A9                     	ds	4
  2469  0000AD                     efgtoa@i:
  2470                           	callstack 0
  2471                           
  2472                           ; 2 bytes @ 0x4D
  2473  0000AD                     	ds	2
  2474  0000AF                     efgtoa@e:
  2475                           	callstack 0
  2476                           
  2477                           ; 2 bytes @ 0x4F
  2478  0000AF                     	ds	2
  2479  0000B1                     efgtoa@n:
  2480                           	callstack 0
  2481                           
  2482                           ; 2 bytes @ 0x51
  2483  0000B1                     	ds	2
  2484  0000B3                     efgtoa@u:
  2485                           	callstack 0
  2486                           
  2487                           ; 4 bytes @ 0x53
  2488  0000B3                     	ds	4
  2489  0000B7                     ?_vfpfcnvrt:
  2490                           	callstack 0
  2491  0000B7                     vfpfcnvrt@fp:
  2492                           	callstack 0
  2493                           
  2494                           ; 2 bytes @ 0x57
  2495  0000B7                     	ds	2
  2496  0000B9                     vfpfcnvrt@fmt:
  2497                           	callstack 0
  2498                           
  2499                           ; 2 bytes @ 0x59
  2500  0000B9                     	ds	2
  2501  0000BB                     vfpfcnvrt@ap:
  2502                           	callstack 0
  2503                           
  2504                           ; 2 bytes @ 0x5B
  2505  0000BB                     	ds	2
  2506  0000BD                     ??_vfpfcnvrt:
  2507                           
  2508                           ; 1 bytes @ 0x5D
  2509  0000BD                     	ds	4
  2510  0000C1                     vfpfcnvrt@llu:
  2511                           	callstack 0
  2512                           
  2513                           ; 8 bytes @ 0x61
  2514  0000C1                     	ds	8
  2515  0000C9                     vfpfcnvrt@cp:
  2516                           	callstack 0
  2517                           
  2518                           ; 2 bytes @ 0x69
  2519  0000C9                     	ds	2
  2520  0000CB                     vfpfcnvrt@done:
  2521                           	callstack 0
  2522                           
  2523                           ; 2 bytes @ 0x6B
  2524  0000CB                     	ds	2
  2525  0000CD                     _vfpfcnvrt$3892:
  2526                           	callstack 0
  2527                           
  2528                           ; 2 bytes @ 0x6D
  2529  0000CD                     	ds	2
  2530  0000CF                     vfpfcnvrt@c:
  2531                           	callstack 0
  2532                           
  2533                           ; 1 bytes @ 0x6F
  2534  0000CF                     	ds	1
  2535  0000D0                     vfpfcnvrt@ct:
  2536                           	callstack 0
  2537                           
  2538                           ; 3 bytes @ 0x70
  2539  0000D0                     	ds	3
  2540  0000D3                     vfpfcnvrt@f:
  2541                           	callstack 0
  2542                           
  2543                           ; 4 bytes @ 0x73
  2544  0000D3                     	ds	4
  2545  0000D7                     ?_vfprintf:
  2546                           	callstack 0
  2547  0000D7                     vfprintf@fp:
  2548                           	callstack 0
  2549                           
  2550                           ; 2 bytes @ 0x77
  2551  0000D7                     	ds	2
  2552  0000D9                     vfprintf@fmt:
  2553                           	callstack 0
  2554                           
  2555                           ; 2 bytes @ 0x79
  2556  0000D9                     	ds	2
  2557  0000DB                     vfprintf@ap:
  2558                           	callstack 0
  2559                           
  2560                           ; 2 bytes @ 0x7B
  2561  0000DB                     	ds	2
  2562                           
  2563                           	psect	cstackCOMRAM
  2564  000001                     __pcstackCOMRAM:
  2565                           	callstack 0
  2566  000001                     ?_ADCC_GetConversionResult:
  2567                           	callstack 0
  2568                           
  2569                           ; 2 bytes @ 0x0
  2570  000001                     	ds	2
  2571  000003                     ??_ADCC_GetConversionResult:
  2572                           
  2573                           ; 1 bytes @ 0x2
  2574  000003                     	ds	2
  2575  000005                     ??_Adc_Isr:
  2576                           
  2577                           ; 1 bytes @ 0x4
  2578  000005                     	ds	1
  2579  000006                     ??_ADCC_ISR:
  2580                           
  2581                           ; 1 bytes @ 0x5
  2582  000006                     	ds	2
  2583  000008                     ??_Led_Blink:
  2584                           
  2585                           ; 1 bytes @ 0x7
  2586  000008                     	ds	1
  2587  000009                     ??_TMR6_ISR:
  2588                           
  2589                           ; 1 bytes @ 0x8
  2590  000009                     	ds	2
  2591  00000B                     ??_UART1_tx_vect_isr:
  2592                           
  2593                           ; 1 bytes @ 0xA
  2594  00000B                     	ds	2
  2595  00000D                     TMR5_WriteTimer@timerVal:
  2596                           	callstack 0
  2597                           
  2598                           ; 2 bytes @ 0xC
  2599  00000D                     	ds	2
  2600  00000F                     Timers_Isr@i:
  2601                           	callstack 0
  2602                           
  2603                           ; 2 bytes @ 0xE
  2604  00000F                     	ds	2
  2605  000011                     ??_TMR5_ISR:
  2606                           
  2607                           ; 1 bytes @ 0x10
  2608  000011                     	ds	2
  2609  000013                     ??_DMA1_DMASCNTI_ISR:
  2610                           
  2611                           ; 1 bytes @ 0x12
  2612  000013                     	ds	2
  2613  000015                     ??_UART1_rx_vect_isr:
  2614                           
  2615                           ; 1 bytes @ 0x14
  2616  000015                     	ds	3
  2617  000018                     ??_display_led:
  2618  000018                     ?_strlen:
  2619                           	callstack 0
  2620  000018                     ?___fpclassifyf:
  2621                           	callstack 0
  2622  000018                     ?_isupper:
  2623                           	callstack 0
  2624  000018                     ?_isdigit:
  2625                           	callstack 0
  2626  000018                     ?_isspace:
  2627                           	callstack 0
  2628  000018                     ?___wmul:
  2629                           	callstack 0
  2630  000018                     ?___awdiv:
  2631                           	callstack 0
  2632  000018                     ?___awmod:
  2633                           	callstack 0
  2634  000018                     ?___fladd:
  2635                           	callstack 0
  2636  000018                     ?___fldiv:
  2637                           	callstack 0
  2638  000018                     ?___flneg:
  2639                           	callstack 0
  2640  000018                     ?___fltol:
  2641                           	callstack 0
  2642  000018                     ?___xxtofl:
  2643                           	callstack 0
  2644  000018                     ?___lodiv:
  2645                           	callstack 0
  2646  000018                     ?___lomod:
  2647                           	callstack 0
  2648  000018                     DAC1_SetOutput@inputData:
  2649                           	callstack 0
  2650  000018                     INTERRUPT_Initialize@state:
  2651                           	callstack 0
  2652  000018                     UART1_Read@readValue:
  2653                           	callstack 0
  2654  000018                     UART1_Write@txData:
  2655                           	callstack 0
  2656  000018                     SPI1_ExchangeByte@data:
  2657                           	callstack 0
  2658  000018                     PWM5_LoadDutyValue@dutyValue:
  2659                           	callstack 0
  2660  000018                     PWM6_LoadDutyValue@dutyValue:
  2661                           	callstack 0
  2662  000018                     ringBufS_put_dma@_this:
  2663                           	callstack 0
  2664  000018                     ___wmul@multiplier:
  2665                           	callstack 0
  2666  000018                     ___awdiv@dividend:
  2667                           	callstack 0
  2668  000018                     ___awmod@dividend:
  2669                           	callstack 0
  2670  000018                     memcpy@d1:
  2671                           	callstack 0
  2672  000018                     memset@dest:
  2673                           	callstack 0
  2674  000018                     isdigit@c:
  2675                           	callstack 0
  2676  000018                     isspace@c:
  2677                           	callstack 0
  2678  000018                     isupper@c:
  2679                           	callstack 0
  2680  000018                     strcpy@dest:
  2681                           	callstack 0
  2682  000018                     strlen@s:
  2683                           	callstack 0
  2684  000018                     ADCC_SetADIInterruptHandler@InterruptHandler:
  2685                           	callstack 0
  2686  000018                     TMR6_SetInterruptHandler@InterruptHandler:
  2687                           	callstack 0
  2688  000018                     UART1_SetFramingErrorHandler@interruptHandler:
  2689                           	callstack 0
  2690  000018                     UART1_SetOverrunErrorHandler@interruptHandler:
  2691                           	callstack 0
  2692  000018                     UART1_SetErrorHandler@interruptHandler:
  2693                           	callstack 0
  2694  000018                     UART1_SetRxInterruptHandler@InterruptHandler:
  2695                           	callstack 0
  2696  000018                     UART1_SetTxInterruptHandler@InterruptHandler:
  2697                           	callstack 0
  2698  000018                     TMR5_SetInterruptHandler@InterruptHandler:
  2699                           	callstack 0
  2700  000018                     DMA1_SetSCNTIInterruptHandler@InterruptHandler:
  2701                           	callstack 0
  2702  000018                     wdtdelay@delay:
  2703                           	callstack 0
  2704  000018                     ___fleq@ff1:
  2705                           	callstack 0
  2706  000018                     ___flneg@f1:
  2707                           	callstack 0
  2708  000018                     ___fltol@f1:
  2709                           	callstack 0
  2710  000018                     ___fladd@b:
  2711                           	callstack 0
  2712  000018                     ___fldiv@b:
  2713                           	callstack 0
  2714  000018                     ___xxtofl@val:
  2715                           	callstack 0
  2716  000018                     ___fpclassifyf@x:
  2717                           	callstack 0
  2718  000018                     ___lodiv@dividend:
  2719                           	callstack 0
  2720  000018                     ___lomod@dividend:
  2721                           	callstack 0
  2722                           
  2723                           ; 8 bytes @ 0x17
  2724  000018                     	ds	1
  2725  000019                     putch@txData:
  2726                           	callstack 0
  2727  000019                     linux_getc@a_data:
  2728                           	callstack 0
  2729                           
  2730                           ; 1 bytes @ 0x18
  2731  000019                     	ds	1
  2732  00001A                     ??_isupper:
  2733  00001A                     ??_isdigit:
  2734  00001A                     ??_isspace:
  2735  00001A                     ??_PWM5_LoadDutyValue:
  2736  00001A                     ??_PWM6_LoadDutyValue:
  2737  00001A                     ??_linux_getc:
  2738  00001A                     ?_fputc:
  2739                           	callstack 0
  2740  00001A                     display_led@led:
  2741                           	callstack 0
  2742  00001A                     ringBufS_put_dma@c:
  2743                           	callstack 0
  2744  00001A                     ___wmul@multiplicand:
  2745                           	callstack 0
  2746  00001A                     ___awdiv@divisor:
  2747                           	callstack 0
  2748  00001A                     ___awmod@divisor:
  2749                           	callstack 0
  2750  00001A                     memcpy@s1:
  2751                           	callstack 0
  2752  00001A                     memset@c:
  2753                           	callstack 0
  2754  00001A                     fputc@c:
  2755                           	callstack 0
  2756  00001A                     strcpy@src:
  2757                           	callstack 0
  2758  00001A                     strlen@a:
  2759                           	callstack 0
  2760                           
  2761                           ; 2 bytes @ 0x19
  2762  00001A                     	ds	1
  2763  00001B                     ??_TMR5_Initialize:
  2764  00001B                     ??_ringBufS_put_dma:
  2765                           
  2766                           ; 1 bytes @ 0x1A
  2767  00001B                     	ds	1
  2768  00001C                     ??___fpclassifyf:
  2769  00001C                     ??_strcpy:
  2770  00001C                     ??___fltol:
  2771  00001C                     ??___xxtofl:
  2772  00001C                     ?_strncmp:
  2773                           	callstack 0
  2774  00001C                     send_lcd_data@data:
  2775                           	callstack 0
  2776  00001C                     send_lcd_cmd@cmd:
  2777                           	callstack 0
  2778  00001C                     send_lcd_cmd_long@cmd:
  2779                           	callstack 0
  2780  00001C                     ___awdiv@counter:
  2781                           	callstack 0
  2782  00001C                     ___awmod@counter:
  2783                           	callstack 0
  2784  00001C                     ___wmul@product:
  2785                           	callstack 0
  2786  00001C                     memcpy@n:
  2787                           	callstack 0
  2788  00001C                     memset@n:
  2789                           	callstack 0
  2790  00001C                     fputc@fp:
  2791                           	callstack 0
  2792  00001C                     strncmp@_l:
  2793                           	callstack 0
  2794  00001C                     ___fleq@ff2:
  2795                           	callstack 0
  2796  00001C                     ___fladd@a:
  2797                           	callstack 0
  2798  00001C                     ___fldiv@a:
  2799                           	callstack 0
  2800                           
  2801                           ; 4 bytes @ 0x1B
  2802  00001C                     	ds	1
  2803  00001D                     ___awdiv@sign:
  2804                           	callstack 0
  2805  00001D                     ___awmod@sign:
  2806                           	callstack 0
  2807                           
  2808                           ; 1 bytes @ 0x1C
  2809  00001D                     	ds	1
  2810  00001E                     ??_memset:
  2811  00001E                     ??_fputc:
  2812  00001E                     ?_tolower:
  2813                           	callstack 0
  2814  00001E                     memcpy@tmp:
  2815                           	callstack 0
  2816  00001E                     _isspace$3957:
  2817                           	callstack 0
  2818  00001E                     ___awdiv@quotient:
  2819                           	callstack 0
  2820  00001E                     strcpy@s:
  2821                           	callstack 0
  2822  00001E                     strncmp@_r:
  2823                           	callstack 0
  2824  00001E                     tolower@c:
  2825                           	callstack 0
  2826                           
  2827                           ; 2 bytes @ 0x1D
  2828  00001E                     	ds	1
  2829  00001F                     ?_atoi:
  2830                           	callstack 0
  2831  00001F                     memcpy@d:
  2832                           	callstack 0
  2833  00001F                     atoi@s:
  2834                           	callstack 0
  2835                           
  2836                           ; 2 bytes @ 0x1E
  2837  00001F                     	ds	1
  2838  000020                     ??___fladd:
  2839  000020                     ??___fldiv:
  2840  000020                     ??_tolower:
  2841  000020                     ??___fleq:
  2842  000020                     ___fltol@sign1:
  2843                           	callstack 0
  2844  000020                     ___xxtofl@sign:
  2845                           	callstack 0
  2846  000020                     memset@k:
  2847                           	callstack 0
  2848  000020                     ___fpclassifyf@e:
  2849                           	callstack 0
  2850  000020                     strcpy@d:
  2851                           	callstack 0
  2852  000020                     strncmp@n:
  2853                           	callstack 0
  2854  000020                     ___lodiv@divisor:
  2855                           	callstack 0
  2856  000020                     ___lomod@divisor:
  2857                           	callstack 0
  2858                           
  2859                           ; 8 bytes @ 0x1F
  2860  000020                     	ds	1
  2861  000021                     ??_atoi:
  2862  000021                     ___fltol@exp1:
  2863                           	callstack 0
  2864  000021                     ___xxtofl@exp:
  2865                           	callstack 0
  2866  000021                     memcpy@s:
  2867                           	callstack 0
  2868                           
  2869                           ; 2 bytes @ 0x20
  2870  000021                     	ds	1
  2871  000022                     ??_strncmp:
  2872  000022                     memset@s:
  2873                           	callstack 0
  2874  000022                     ___xxtofl@arg:
  2875                           	callstack 0
  2876  000022                     ___fpclassifyf@u:
  2877                           	callstack 0
  2878                           
  2879                           ; 4 bytes @ 0x21
  2880  000022                     	ds	1
  2881  000023                     ?_fputs:
  2882                           	callstack 0
  2883  000023                     ?_stoa:
  2884                           	callstack 0
  2885  000023                     ringBufS_put_dma_cpy@_this:
  2886                           	callstack 0
  2887  000023                     stoa@fp:
  2888                           	callstack 0
  2889  000023                     fputs@s:
  2890                           	callstack 0
  2891                           
  2892                           ; 2 bytes @ 0x22
  2893  000023                     	ds	1
  2894  000024                     ___fladd@signs:
  2895                           	callstack 0
  2896  000024                     ringBufS_init@_this:
  2897                           	callstack 0
  2898  000024                     ringBufS_flush@_this:
  2899                           	callstack 0
  2900  000024                     strncmp@l:
  2901                           	callstack 0
  2902  000024                     ___fldiv@rem:
  2903                           	callstack 0
  2904                           
  2905                           ; 4 bytes @ 0x23
  2906  000024                     	ds	1
  2907  000025                     ___fladd@aexp:
  2908                           	callstack 0
  2909  000025                     ringBufS_put_dma_cpy@ptr:
  2910                           	callstack 0
  2911  000025                     stoa@s:
  2912                           	callstack 0
  2913  000025                     atoi@neg:
  2914                           	callstack 0
  2915  000025                     fputs@fp:
  2916                           	callstack 0
  2917                           
  2918                           ; 2 bytes @ 0x24
  2919  000025                     	ds	1
  2920  000026                     ?___flmul:
  2921                           	callstack 0
  2922  000026                     ringBufS_flush@clearBuffer:
  2923                           	callstack 0
  2924  000026                     ___fladd@bexp:
  2925                           	callstack 0
  2926  000026                     strncmp@r:
  2927                           	callstack 0
  2928  000026                     ___flmul@b:
  2929                           	callstack 0
  2930                           
  2931                           ; 4 bytes @ 0x25
  2932  000026                     	ds	1
  2933  000027                     ??_fputs:
  2934  000027                     ??_stoa:
  2935  000027                     send_lcd_data_dma@strPtr:
  2936                           	callstack 0
  2937  000027                     ringBufS_put_dma_cpy@len:
  2938                           	callstack 0
  2939  000027                     ___fladd@grs:
  2940                           	callstack 0
  2941  000027                     atoi@n:
  2942                           	callstack 0
  2943                           
  2944                           ; 2 bytes @ 0x26
  2945  000027                     	ds	1
  2946  000028                     send_lcd_cmd_dma@strPtr:
  2947                           	callstack 0
  2948  000028                     ___lomod@counter:
  2949                           	callstack 0
  2950  000028                     ___fldiv@sign:
  2951                           	callstack 0
  2952  000028                     ___lodiv@quotient:
  2953                           	callstack 0
  2954                           
  2955                           ; 8 bytes @ 0x27
  2956  000028                     	ds	1
  2957  000029                     eaDogM_WriteCommand@cmd:
  2958                           	callstack 0
  2959  000029                     fputs@c:
  2960                           	callstack 0
  2961  000029                     eaDogM_WriteString@strPtr:
  2962                           	callstack 0
  2963  000029                     ___fldiv@new_exp:
  2964                           	callstack 0
  2965                           
  2966                           ; 2 bytes @ 0x28
  2967  000029                     	ds	1
  2968  00002A                     fputs@i:
  2969                           	callstack 0
  2970  00002A                     ___flmul@a:
  2971                           	callstack 0
  2972                           
  2973                           ; 4 bytes @ 0x29
  2974  00002A                     	ds	1
  2975  00002B                     ??_eaDogM_WriteString:
  2976  00002B                     ___fldiv@grs:
  2977                           	callstack 0
  2978                           
  2979                           ; 4 bytes @ 0x2A
  2980  00002B                     	ds	1
  2981  00002C                     ?_pad:
  2982                           	callstack 0
  2983  00002C                     pad@fp:
  2984                           	callstack 0
  2985  00002C                     puts@s:
  2986                           	callstack 0
  2987                           
  2988                           ; 2 bytes @ 0x2B
  2989  00002C                     	ds	1
  2990  00002D                     eaDogM_WriteString@len:
  2991                           	callstack 0
  2992                           
  2993                           ; 1 bytes @ 0x2C
  2994  00002D                     	ds	1
  2995  00002E                     ??___flmul:
  2996  00002E                     _puts$4036:
  2997                           	callstack 0
  2998  00002E                     pad@buf:
  2999                           	callstack 0
  3000                           
  3001                           ; 2 bytes @ 0x2D
  3002  00002E                     	ds	1
  3003  00002F                     ___fldiv@bexp:
  3004                           	callstack 0
  3005  00002F                     fh_pr@a_data:
  3006                           	callstack 0
  3007  00002F                     fh_pl@a_data:
  3008                           	callstack 0
  3009  00002F                     cli_init@a_ctx:
  3010                           	callstack 0
  3011  00002F                     linux_putc@data:
  3012                           	callstack 0
  3013                           
  3014                           ; 2 bytes @ 0x2E
  3015  00002F                     	ds	1
  3016  000030                     ___lodiv@counter:
  3017                           	callstack 0
  3018  000030                     ___fldiv@aexp:
  3019                           	callstack 0
  3020  000030                     pad@p:
  3021                           	callstack 0
  3022                           
  3023                           ; 2 bytes @ 0x2F
  3024  000030                     	ds	1
  3025  000031                     linux_putc@a_len:
  3026                           	callstack 0
  3027  000031                     cli_init@a_cmds:
  3028                           	callstack 0
  3029  000031                     __cli_interpret_cmd@a_ctx:
  3030                           	callstack 0
  3031                           
  3032                           ; 2 bytes @ 0x30
  3033  000031                     	ds	1
  3034  000032                     ??_pad:
  3035                           
  3036                           ; 1 bytes @ 0x31
  3037  000032                     	ds	1
  3038  000033                     
  3039                           ; 1 bytes @ 0x32
  3040 ;;
  3041 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3042 ;;
  3043 ;; *************** function _main *****************
  3044 ;; Defined at:
  3045 ;;		line 140 in file "main.c"
  3046 ;; Parameters:    Size  Location     Type
  3047 ;;		None
  3048 ;; Auto vars:     Size  Location     Type
  3049 ;;		None
  3050 ;; Return value:  Size  Location     Type
  3051 ;;                  1    wreg      void 
  3052 ;; Registers used:
  3053 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  3054 ;; Tracked objects:
  3055 ;;		On entry : 0/0
  3056 ;;		On exit  : 3F/0
  3057 ;;		Unchanged: 0/0
  3058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3061 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3062 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3063 ;;Total ram usage:        2 bytes
  3064 ;; Hardware stack levels required when called: 16
  3065 ;; This function calls:
  3066 ;;		_ADCC_SetADIInterruptHandler
  3067 ;;		_DAC1_GetOutput
  3068 ;;		_DAC1_SetOutput
  3069 ;;		_DMA1_SetSCNTIInterruptHandler
  3070 ;;		_PWM5_LoadDutyValue
  3071 ;;		_PWM6_LoadDutyValue
  3072 ;;		_SYSTEM_Initialize
  3073 ;;		_TMR5_SetInterruptHandler
  3074 ;;		_TMR6_SetInterruptHandler
  3075 ;;		___flmul
  3076 ;;		___xxtofl
  3077 ;;		_cli_read
  3078 ;;		_display_led
  3079 ;;		_eaDogM_WriteCommand
  3080 ;;		_eaDogM_WriteString
  3081 ;;		_init_display
  3082 ;;		_printf
  3083 ;;		_puts
  3084 ;;		_scmd_init
  3085 ;;		_sprintf
  3086 ;; This function is called by:
  3087 ;;		Startup code after reset
  3088 ;; This function uses a non-reentrant model
  3089 ;;
  3090                           
  3091                           	psect	text0
  3092  011BE8                     __ptext0:
  3093                           	callstack 0
  3094  011BE8                     _main:
  3095                           	callstack 15
  3096                           
  3097                           ;main.c: 144:  SYSTEM_Initialize();
  3098                           
  3099                           ;incstack = 0
  3100  011BE8  EC47  F0A0         	call	_SYSTEM_Initialize	;wreg free
  3101                           
  3102                           ; BSR set to: 57
  3103  011BEC  92BD               	bcf	189,1,c	;volatile
  3104                           
  3105                           ; BSR set to: 57
  3106  011BEE  94BE               	bcf	190,2,c	;volatile
  3107                           
  3108                           ; BSR set to: 57
  3109                           ;main.c: 148:  TMR6_SetInterruptHandler(Led_Blink);
  3110  011BF0  0E14               	movlw	low _Led_Blink
  3111  011BF2  6E18               	movwf	TMR6_SetInterruptHandler@InterruptHandler^0,c
  3112  011BF4  0E46               	movlw	high _Led_Blink
  3113  011BF6  6E19               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)^0,c
  3114  011BF8  0E01               	movlw	low (_Led_Blink shr (0+16))
  3115  011BFA  6E1A               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)^0,c
  3116  011BFC  ECC9  F0A3         	call	_TMR6_SetInterruptHandler	;wreg free
  3117                           
  3118                           ;main.c: 149:  TMR5_SetInterruptHandler(Timers_Isr);
  3119  011C00  0E3C               	movlw	low _Timers_Isr
  3120  011C02  6E18               	movwf	TMR5_SetInterruptHandler@InterruptHandler^0,c
  3121  011C04  0E3D               	movlw	high _Timers_Isr
  3122  011C06  6E19               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)^0,c
  3123  011C08  0E01               	movlw	low (_Timers_Isr shr (0+16))
  3124  011C0A  6E1A               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)^0,c
  3125  011C0C  ECD0  F0A3         	call	_TMR5_SetInterruptHandler	;wreg free
  3126                           
  3127                           ;main.c: 150:  ADCC_SetADIInterruptHandler(Adc_Isr);
  3128  011C10  0EA4               	movlw	low _Adc_Isr
  3129  011C12  6E18               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler^0,c
  3130  011C14  0E42               	movlw	high _Adc_Isr
  3131  011C16  6E19               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)^0,c
  3132  011C18  0E01               	movlw	low (_Adc_Isr shr (0+16))
  3133  011C1A  6E1A               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+2)^0,c
  3134  011C1C  ECE5  F0A3         	call	_ADCC_SetADIInterruptHandler	;wreg free
  3135                           
  3136                           ; BSR set to: 57
  3137                           ;main.c: 151:  ADPCH = adc_chan;
  3138  011C20  0060  F107  FEF1   	movff	_adc_chan,16113	;volatile
  3139                           
  3140                           ;main.c: 152:  PWM5_LoadDutyValue(0);
  3141  011C26  0E00               	movlw	0
  3142  011C28  6E19               	movwf	(PWM5_LoadDutyValue@dutyValue+1)^0,c
  3143  011C2A  0E00               	movlw	0
  3144  011C2C  6E18               	movwf	PWM5_LoadDutyValue@dutyValue^0,c
  3145  011C2E  ECA6  F0A1         	call	_PWM5_LoadDutyValue	;wreg free
  3146                           
  3147                           ;main.c: 153:  PWM6_LoadDutyValue(0);
  3148  011C32  0E00               	movlw	0
  3149  011C34  6E19               	movwf	(PWM6_LoadDutyValue@dutyValue+1)^0,c
  3150  011C36  0E00               	movlw	0
  3151  011C38  6E18               	movwf	PWM6_LoadDutyValue@dutyValue^0,c
  3152  011C3A  EC8D  F0A1         	call	_PWM6_LoadDutyValue	;wreg free
  3153                           
  3154                           ;main.c: 154:  DMA1_SetSCNTIInterruptHandler(source_dma_done);
  3155  011C3E  0E32               	movlw	low _source_dma_done
  3156  011C40  6E18               	movwf	DMA1_SetSCNTIInterruptHandler@InterruptHandler^0,c
  3157  011C42  0E48               	movlw	high _source_dma_done
  3158  011C44  6E19               	movwf	(DMA1_SetSCNTIInterruptHandler@InterruptHandler+1)^0,c
  3159  011C46  0E01               	movlw	low (_source_dma_done shr (0+16))
  3160  011C48  6E1A               	movwf	(DMA1_SetSCNTIInterruptHandler@InterruptHandler+2)^0,c
  3161  011C4A  ECDE  F0A3         	call	_DMA1_SetSCNTIInterruptHandler	;wreg free
  3162                           
  3163                           ; BSR set to: 57
  3164                           ;main.c: 157:  (INTCON0bits.GIEH = 1);
  3165  011C4E  8ED2               	bsf	210,7,c	;volatile
  3166                           
  3167                           ; BSR set to: 57
  3168                           ;main.c: 160:  (INTCON0bits.GIEL = 1);
  3169  011C50  8CD2               	bsf	210,6,c	;volatile
  3170                           
  3171                           ; BSR set to: 57
  3172                           ;main.c: 162:  DAC1_SetOutput(dac_v);
  3173  011C52  0100               	movlb	0	; () banked
  3174  011C54  51FA               	movf	_dac_v& (0+255),w,b
  3175  011C56  EC0B  F0A4         	call	_DAC1_SetOutput
  3176                           
  3177                           ;main.c: 164:  init_display();
  3178  011C5A  ECB7  F098         	call	_init_display	;wreg free
  3179                           
  3180                           ; BSR set to: 61
  3181                           ;main.c: 165:  eaDogM_WriteCommand(0b00001100);
  3182  011C5E  0E0C               	movlw	12
  3183  011C60  ECF2  F0A3         	call	_eaDogM_WriteCommand
  3184                           
  3185                           ; BSR set to: 61
  3186                           ;main.c: 166:  eaDogM_WriteString("SPI display testing");
  3187  011C64  0E78               	movlw	low STR_6
  3188  011C66  6E29               	movwf	eaDogM_WriteString@strPtr^0,c
  3189  011C68  0EFF               	movlw	high STR_6
  3190  011C6A  6E2A               	movwf	(eaDogM_WriteString@strPtr+1)^0,c
  3191  011C6C  EC5F  F09C         	call	_eaDogM_WriteString	;wreg free
  3192                           
  3193                           ; BSR set to: 59
  3194                           ;main.c: 170:  scmd_init();
  3195  011C70  EC67  F0A3         	call	_scmd_init	;wreg free
  3196                           
  3197                           ;main.c: 171:  sprintf(buff1, "\r\n Build %s %s\r\n", build_date, build_time);
  3198  011C74  0E00               	movlw	low _buff1
  3199  011C76  0101               	movlb	1	; () banked
  3200  011C78  6FD0               	movwf	sprintf@s& (0+255),b
  3201  011C7A  0E03               	movlw	high _buff1
  3202  011C7C  6FD1               	movwf	(sprintf@s+1)& (0+255),b
  3203  011C7E  0EB0               	movlw	low STR_7
  3204  011C80  6FD2               	movwf	sprintf@fmt& (0+255),b
  3205  011C82  0EFF               	movlw	high STR_7
  3206  011C84  6FD3               	movwf	(sprintf@fmt+1)& (0+255),b
  3207  011C86  0EC1               	movlw	low STR_1
  3208  011C88  6FD4               	movwf	(?_sprintf+4)& (0+255),b
  3209  011C8A  0EFF               	movlw	high STR_1
  3210  011C8C  6FD5               	movwf	(?_sprintf+5)& (0+255),b
  3211  011C8E  0ECD               	movlw	low STR_2
  3212  011C90  6FD6               	movwf	(?_sprintf+6)& (0+255),b
  3213  011C92  0EFF               	movlw	high STR_2
  3214  011C94  6FD7               	movwf	(?_sprintf+7)& (0+255),b
  3215  011C96  EC23  F09E         	call	_sprintf	;wreg free
  3216                           
  3217                           ; BSR set to: 1
  3218                           ;main.c: 172:  puts(buff1);
  3219  011C9A  0E00               	movlw	low _buff1
  3220  011C9C  6E2C               	movwf	puts@s^0,c
  3221  011C9E  0E03               	movlw	high _buff1
  3222  011CA0  6E2D               	movwf	(puts@s+1)^0,c
  3223  011CA2  EC35  F0A1         	call	_puts	;wreg free
  3224  011CA6                     l11689:
  3225                           
  3226                           ;main.c: 175:   if (adc_tick) {
  3227  011CA6  0100               	movlb	0	; () banked
  3228  011CA8  51FC               	movf	_adc_tick& (0+255),w,b	;volatile
  3229  011CAA  B4D8               	btfsc	status,2,c
  3230  011CAC  D7FC               	goto	l11689
  3231                           
  3232                           ; BSR set to: 0
  3233                           ;main.c: 176:    if (ana[0] < 900) {
  3234  011CAE  0E84               	movlw	132
  3235  011CB0  5C33               	subwf	_ana^0,w,c	;volatile
  3236  011CB2  0E03               	movlw	3
  3237  011CB4  5834               	subwfb	(_ana+1)^0,w,c	;volatile
  3238  011CB6  B0D8               	btfsc	status,0,c
  3239  011CB8  D004               	goto	l11695
  3240                           
  3241                           ; BSR set to: 0
  3242                           ;main.c: 177:     display_led(oo00_off);
  3243  011CBA  0E00               	movlw	0
  3244  011CBC  ECD1  F099         	call	_display_led
  3245                           
  3246                           ;main.c: 178:    } else {
  3247  011CC0  D00D               	goto	l11701
  3248  011CC2                     l11695:
  3249                           
  3250                           ; BSR set to: 0
  3251                           ;main.c: 179:     if (ana[0] > 1800) {
  3252  011CC2  0E09               	movlw	9
  3253  011CC4  5C33               	subwf	_ana^0,w,c	;volatile
  3254  011CC6  0E07               	movlw	7
  3255  011CC8  5834               	subwfb	(_ana+1)^0,w,c	;volatile
  3256  011CCA  A0D8               	btfss	status,0,c
  3257  011CCC  D004               	goto	l11699
  3258                           
  3259                           ; BSR set to: 0
  3260                           ;main.c: 180:      display_led(oo00_g);
  3261  011CCE  0E01               	movlw	1
  3262  011CD0  ECD1  F099         	call	_display_led
  3263                           
  3264                           ;main.c: 181:     } else {
  3265  011CD4  D003               	goto	l11701
  3266  011CD6                     l11699:
  3267                           
  3268                           ; BSR set to: 0
  3269                           ;main.c: 182:      display_led(oo00_r);
  3270  011CD6  0E02               	movlw	2
  3271  011CD8  ECD1  F099         	call	_display_led
  3272  011CDC                     l11701:
  3273                           
  3274                           ;main.c: 186:    if (ana[1] < 50) {
  3275  011CDC  5036               	movf	(_ana+3)^0,w,c	;volatile
  3276  011CDE  E108               	bnz	l11705
  3277  011CE0  0E32               	movlw	50
  3278  011CE2  5C35               	subwf	(_ana+2)^0,w,c	;volatile
  3279  011CE4  B0D8               	btfsc	status,0,c
  3280  011CE6  D004               	goto	l11705
  3281                           
  3282                           ;main.c: 187:     display_led(oo10_off);
  3283  011CE8  0E03               	movlw	3
  3284  011CEA  ECD1  F099         	call	_display_led
  3285                           
  3286                           ;main.c: 188:    } else {
  3287  011CEE  D00D               	goto	l11711
  3288  011CF0                     l11705:
  3289                           
  3290                           ;main.c: 189:     if (ana[1] > 150) {
  3291  011CF0  5036               	movf	(_ana+3)^0,w,c	;volatile
  3292  011CF2  E104               	bnz	u12690
  3293  011CF4  0E97               	movlw	151
  3294  011CF6  5C35               	subwf	(_ana+2)^0,w,c	;volatile
  3295  011CF8  A0D8               	btfss	status,0,c
  3296  011CFA  D004               	goto	l11709
  3297  011CFC                     u12690:
  3298                           
  3299                           ;main.c: 190:      display_led(oo10_g);
  3300  011CFC  0E04               	movlw	4
  3301  011CFE  ECD1  F099         	call	_display_led
  3302                           
  3303                           ;main.c: 191:     } else {
  3304  011D02  D003               	goto	l11711
  3305  011D04                     l11709:
  3306                           
  3307                           ;main.c: 192:      display_led(oo10_r);
  3308  011D04  0E05               	movlw	5
  3309  011D06  ECD1  F099         	call	_display_led
  3310  011D0A                     l11711:
  3311                           
  3312                           ;main.c: 195:    adc_tick = 0;
  3313  011D0A  0E00               	movlw	0
  3314  011D0C  0100               	movlb	0	; () banked
  3315  011D0E  6FFC               	movwf	_adc_tick& (0+255),b	;volatile
  3316                           
  3317                           ; BSR set to: 0
  3318                           ;main.c: 197:    if (!PORTAbits.RA6) {
  3319  011D10  BCCA               	btfsc	202,6,c	;volatile
  3320  011D12  D004               	goto	l11717
  3321                           
  3322                           ; BSR set to: 0
  3323                           ;main.c: 198:     display_led(oo30_r);
  3324  011D14  0E0B               	movlw	11
  3325  011D16  ECD1  F099         	call	_display_led
  3326                           
  3327                           ;main.c: 199:    } else {
  3328  011D1A  D003               	goto	l11719
  3329  011D1C                     l11717:
  3330                           
  3331                           ; BSR set to: 0
  3332                           ;main.c: 200:     display_led(oo30_off);
  3333  011D1C  0E09               	movlw	9
  3334  011D1E  ECD1  F099         	call	_display_led
  3335  011D22                     l11719:
  3336                           
  3337                           ;main.c: 204:    if (!PORTAbits.RA4) {
  3338  011D22  B8CA               	btfsc	202,4,c	;volatile
  3339  011D24  D004               	goto	l11723
  3340                           
  3341                           ;main.c: 205:     display_led(oo20_g);
  3342  011D26  0E07               	movlw	7
  3343  011D28  ECD1  F099         	call	_display_led
  3344                           
  3345                           ;main.c: 206:    } else {
  3346  011D2C  D003               	goto	l11725
  3347  011D2E                     l11723:
  3348                           
  3349                           ;main.c: 207:     display_led(oo20_off);
  3350  011D2E  0E06               	movlw	6
  3351  011D30  ECD1  F099         	call	_display_led
  3352  011D34                     l11725:
  3353                           
  3354                           ;main.c: 210:    if (disp_tick) {
  3355  011D34  0100               	movlb	0	; () banked
  3356  011D36  51FD               	movf	_disp_tick& (0+255),w,b	;volatile
  3357  011D38  B4D8               	btfsc	status,2,c
  3358  011D3A  D7B5               	goto	l11689
  3359                           
  3360                           ; BSR set to: 0
  3361                           ;main.c: 211:     vval = (double) ana[0] * 0.405194;
  3362  011D3C  C033  F018         	movff	_ana,___xxtofl@val	;volatile
  3363  011D40  C034  F019         	movff	_ana+1,___xxtofl@val+1	;volatile
  3364  011D44  6A1A               	clrf	(___xxtofl@val+2)^0,c
  3365  011D46  6A1B               	clrf	(___xxtofl@val+3)^0,c
  3366  011D48  0E00               	movlw	0
  3367  011D4A  EC7B  F096         	call	___xxtofl
  3368  011D4E  C018  F026         	movff	?___xxtofl,___flmul@b
  3369  011D52  C019  F027         	movff	?___xxtofl+1,___flmul@b+1
  3370  011D56  C01A  F028         	movff	?___xxtofl+2,___flmul@b+2
  3371  011D5A  C01B  F029         	movff	?___xxtofl+3,___flmul@b+3
  3372  011D5E  0E97               	movlw	151
  3373  011D60  6E2A               	movwf	___flmul@a^0,c
  3374  011D62  0E75               	movlw	117
  3375  011D64  6E2B               	movwf	(___flmul@a+1)^0,c
  3376  011D66  0ECF               	movlw	207
  3377  011D68  6E2C               	movwf	(___flmul@a+2)^0,c
  3378  011D6A  0E3E               	movlw	62
  3379  011D6C  6E2D               	movwf	(___flmul@a+3)^0,c
  3380  011D6E  ECC5  F08A         	call	___flmul	;wreg free
  3381  011D72  C026  F13C         	movff	?___flmul,_vval
  3382  011D76  C027  F13D         	movff	?___flmul+1,_vval+1
  3383  011D7A  C028  F13E         	movff	?___flmul+2,_vval+2
  3384  011D7E  C029  F13F         	movff	?___flmul+3,_vval+3
  3385                           
  3386                           ;main.c: 212:     ival = (double) ana[1] * 0.004;
  3387  011D82  C035  F018         	movff	_ana+2,___xxtofl@val	;volatile
  3388  011D86  C036  F019         	movff	_ana+3,___xxtofl@val+1	;volatile
  3389  011D8A  6A1A               	clrf	(___xxtofl@val+2)^0,c
  3390  011D8C  6A1B               	clrf	(___xxtofl@val+3)^0,c
  3391  011D8E  0E00               	movlw	0
  3392  011D90  EC7B  F096         	call	___xxtofl
  3393  011D94  C018  F026         	movff	?___xxtofl,___flmul@b
  3394  011D98  C019  F027         	movff	?___xxtofl+1,___flmul@b+1
  3395  011D9C  C01A  F028         	movff	?___xxtofl+2,___flmul@b+2
  3396  011DA0  C01B  F029         	movff	?___xxtofl+3,___flmul@b+3
  3397  011DA4  0E6F               	movlw	111
  3398  011DA6  6E2A               	movwf	___flmul@a^0,c
  3399  011DA8  0E12               	movlw	18
  3400  011DAA  6E2B               	movwf	(___flmul@a+1)^0,c
  3401  011DAC  0E83               	movlw	131
  3402  011DAE  6E2C               	movwf	(___flmul@a+2)^0,c
  3403  011DB0  0E3B               	movlw	59
  3404  011DB2  6E2D               	movwf	(___flmul@a+3)^0,c
  3405  011DB4  ECC5  F08A         	call	___flmul	;wreg free
  3406  011DB8  C026  F138         	movff	?___flmul,_ival
  3407  011DBC  C027  F139         	movff	?___flmul+1,_ival+1
  3408  011DC0  C028  F13A         	movff	?___flmul+2,_ival+2
  3409  011DC4  C029  F13B         	movff	?___flmul+3,_ival+3
  3410                           
  3411                           ; BSR set to: 0
  3412                           ;main.c: 213:     printf(" PS Test %1u: DAC OUT=%.2u, Supply ReadBack %4.4u V=%+6.1fV %4
      +                          .4u I=%+3.1fmA\r\n", mode, (uint16_t) DAC1_GetOutput(), ana[0], vval, ana[1], ival);
  3413  011DC8  0EF8               	movlw	low STR_8
  3414  011DCA  0101               	movlb	1	; () banked
  3415  011DCC  6FD0               	movwf	printf@fmt& (0+255),b
  3416  011DCE  0EFE               	movlw	high STR_8
  3417  011DD0  6FD1               	movwf	(printf@fmt+1)& (0+255),b
  3418  011DD2  C0FB  F1D2         	movff	_mode,?_printf+2
  3419  011DD6  6BD3               	clrf	(?_printf+3)& (0+255),b
  3420  011DD8  EC13  F0A4         	call	_DAC1_GetOutput	;wreg free
  3421  011DDC  0101               	movlb	1	; () banked
  3422  011DDE  6FE5               	movwf	??_main& (0+255),b
  3423  011DE0  51E5               	movf	??_main& (0+255),w,b
  3424  011DE2  6FD4               	movwf	(?_printf+4)& (0+255),b
  3425  011DE4  6BD5               	clrf	(?_printf+5)& (0+255),b
  3426  011DE6  C033  F1D6         	movff	_ana,?_printf+6	;volatile
  3427  011DEA  C034  F1D7         	movff	_ana+1,?_printf+7	;volatile
  3428  011DEE  C13C  F1D8         	movff	_vval,?_printf+8
  3429  011DF2  C13D  F1D9         	movff	_vval+1,?_printf+9
  3430  011DF6  C13E  F1DA         	movff	_vval+2,?_printf+10
  3431  011DFA  C13F  F1DB         	movff	_vval+3,?_printf+11
  3432  011DFE  C035  F1DC         	movff	_ana+2,?_printf+12	;volatile
  3433  011E02  C036  F1DD         	movff	_ana+3,?_printf+13	;volatile
  3434  011E06  C138  F1DE         	movff	_ival,?_printf+14
  3435  011E0A  C139  F1DF         	movff	_ival+1,?_printf+15
  3436  011E0E  C13A  F1E0         	movff	_ival+2,?_printf+16
  3437  011E12  C13B  F1E1         	movff	_ival+3,?_printf+17
  3438  011E16  EC60  F0A2         	call	_printf	;wreg free
  3439                           
  3440                           ; BSR set to: 0
  3441                           ;main.c: 214:     eaDogM_WriteString("Display testing  ");
  3442  011E1A  0E9E               	movlw	low STR_9
  3443  011E1C  6E29               	movwf	eaDogM_WriteString@strPtr^0,c
  3444  011E1E  0EFF               	movlw	high STR_9
  3445  011E20  6E2A               	movwf	(eaDogM_WriteString@strPtr+1)^0,c
  3446  011E22  EC5F  F09C         	call	_eaDogM_WriteString	;wreg free
  3447                           
  3448                           ;main.c: 218:     switch (mode) {
  3449  011E26  D021               	goto	l11759
  3450  011E28                     l11733:
  3451                           
  3452                           ; BSR set to: 1
  3453                           ;main.c: 220:      if (dac_v > roll_max) {
  3454  011E28  0100               	movlb	0	; () banked
  3455  011E2A  51FA               	movf	_dac_v& (0+255),w,b
  3456  011E2C  5DFF               	subwf	_roll_max& (0+255),w,b
  3457  011E2E  B0D8               	btfsc	status,0,c
  3458  011E30  D002               	goto	l11737
  3459                           
  3460                           ; BSR set to: 0
  3461                           ;main.c: 221:       dac_v = 0;
  3462  011E32  0E00               	movlw	0
  3463  011E34  6FFA               	movwf	_dac_v& (0+255),b
  3464  011E36                     l11737:
  3465                           
  3466                           ; BSR set to: 0
  3467                           ;main.c: 223:      DAC1_SetOutput(++dac_v);
  3468  011E36  2BFA               	incf	_dac_v& (0+255),f,b
  3469  011E38  51FA               	movf	_dac_v& (0+255),w,b
  3470  011E3A  EC0B  F0A4         	call	_DAC1_SetOutput
  3471  011E3E  D008               	goto	l11745
  3472  011E40                     l11741:
  3473  011E40  9ABA               	bcf	186,5,c	;volatile
  3474  011E42  D027               	goto	l11761
  3475  011E44                     l1182:
  3476                           
  3477                           ; BSR set to: 1
  3478                           ;main.c: 228:      dac_v = static_ps;
  3479  011E44  C0FE  F0FA         	movff	_static_ps,_dac_v
  3480                           
  3481                           ; BSR set to: 1
  3482                           ;main.c: 229:      DAC1_SetOutput(dac_v);
  3483  011E48  0100               	movlb	0	; () banked
  3484  011E4A  51FA               	movf	_dac_v& (0+255),w,b
  3485  011E4C  EC0B  F0A4         	call	_DAC1_SetOutput
  3486  011E50                     l11745:
  3487  011E50  82BD               	bsf	189,1,c	;volatile
  3488  011E52  D7F6               	goto	l11741
  3489  011E54                     l11749:
  3490                           
  3491                           ; BSR set to: 1
  3492                           ;main.c: 235:      mode = off_mode;
  3493  011E54  0E00               	movlw	0
  3494  011E56  0100               	movlb	0	; () banked
  3495  011E58  6FFB               	movwf	_mode& (0+255),b
  3496                           
  3497                           ;main.c: 236:      dac_v = 0;
  3498  011E5A  0E00               	movlw	0
  3499  011E5C  6FFA               	movwf	_dac_v& (0+255),b
  3500                           
  3501                           ; BSR set to: 0
  3502                           ;main.c: 237:      DAC1_SetOutput(dac_v);
  3503  011E5E  0E00               	movlw	0
  3504  011E60  EC0B  F0A4         	call	_DAC1_SetOutput
  3505  011E64  92BD               	bcf	189,1,c	;volatile
  3506  011E66  8ABA               	bsf	186,5,c	;volatile
  3507  011E68  D014               	goto	l11761
  3508  011E6A                     l11759:
  3509                           
  3510                           ; BSR set to: 59
  3511  011E6A  0100               	movlb	0	; () banked
  3512  011E6C  51FB               	movf	_mode& (0+255),w,b
  3513  011E6E  0101               	movlb	1	; () banked
  3514  011E70  6FE5               	movwf	??_main& (0+255),b
  3515  011E72  6BE6               	clrf	(??_main+1)& (0+255),b
  3516                           
  3517                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3518                           ; Switch size 1, requested type "simple"
  3519                           ; Number of cases is 1, Range of values is 0 to 0
  3520                           ; switch strategies available:
  3521                           ; Name         Instructions Cycles
  3522                           ; simple_byte            4     3 (average)
  3523                           ;	Chosen strategy is simple_byte
  3524  011E74  51E6               	movf	(??_main+1)& (0+255),w,b
  3525  011E76  0A00               	xorlw	0	; case 0
  3526  011E78  A4D8               	btfss	status,2,c
  3527  011E7A  D7EC               	goto	l11749
  3528                           
  3529                           ; BSR set to: 1
  3530                           ; Switch size 1, requested type "simple"
  3531                           ; Number of cases is 3, Range of values is 0 to 2
  3532                           ; switch strategies available:
  3533                           ; Name         Instructions Cycles
  3534                           ; simple_byte           10     6 (average)
  3535                           ;	Chosen strategy is simple_byte
  3536  011E7C  51E5               	movf	??_main& (0+255),w,b
  3537  011E7E  0A00               	xorlw	0	; case 0
  3538  011E80  B4D8               	btfsc	status,2,c
  3539  011E82  D7E8               	goto	l11749
  3540  011E84  0A01               	xorlw	1	; case 1
  3541  011E86  B4D8               	btfsc	status,2,c
  3542  011E88  D7CF               	goto	l11733
  3543  011E8A  0A03               	xorlw	3	; case 2
  3544  011E8C  B4D8               	btfsc	status,2,c
  3545  011E8E  D7DA               	goto	l1182
  3546  011E90  D7E1               	goto	l11749
  3547  011E92                     l11761:
  3548                           
  3549                           ;main.c: 247:     cli_read(&cli_ctx);
  3550  011E92  0E00               	movlw	low _cli_ctx
  3551  011E94  0100               	movlb	0	; () banked
  3552  011E96  6F6A               	movwf	cli_read@a_ctx& (0+255),b
  3553  011E98  0E02               	movlw	high _cli_ctx
  3554  011E9A  6F6B               	movwf	(cli_read@a_ctx+1)& (0+255),b
  3555  011E9C  ECE4  F093         	call	_cli_read	;wreg free
  3556                           
  3557                           ;main.c: 248:     disp_tick = 0;
  3558  011EA0  0E00               	movlw	0
  3559  011EA2  0100               	movlb	0	; () banked
  3560  011EA4  6FFD               	movwf	_disp_tick& (0+255),b	;volatile
  3561                           
  3562                           ; BSR set to: 0
  3563                           ;main.c: 249:     if (!PORTBbits.RB0) {
  3564  011EA6  B0CB               	btfsc	203,0,c	;volatile
  3565  011EA8  D009               	goto	l11775
  3566                           
  3567                           ; BSR set to: 0
  3568                           ;main.c: 250:      if (++mode_sw > 4) {
  3569  011EAA  2BF9               	incf	_mode_sw& (0+255),f,b
  3570  011EAC  0E04               	movlw	4
  3571  011EAE  65F9               	cpfsgt	_mode_sw& (0+255),b
  3572  011EB0  D6FA               	goto	l11689
  3573                           
  3574                           ; BSR set to: 0
  3575                           ;main.c: 251:       mode++;
  3576  011EB2  2BFB               	incf	_mode& (0+255),f,b
  3577                           
  3578                           ; BSR set to: 0
  3579                           ;main.c: 252:       mode_sw = 0;
  3580  011EB4  0E00               	movlw	0
  3581  011EB6  6FF9               	movwf	_mode_sw& (0+255),b
  3582                           
  3583                           ; BSR set to: 0
  3584  011EB8  84BE               	bsf	190,2,c	;volatile
  3585  011EBA  D6F5               	goto	l11689
  3586  011EBC                     l11775:
  3587                           
  3588                           ; BSR set to: 0
  3589                           ;main.c: 256:      mode_sw = 0;
  3590  011EBC  0E00               	movlw	0
  3591  011EBE  6FF9               	movwf	_mode_sw& (0+255),b
  3592                           
  3593                           ; BSR set to: 0
  3594  011EC0  94BE               	bcf	190,2,c	;volatile
  3595  011EC2  D6F1               	goto	l11689
  3596  011EC4                     __end_of_main:
  3597                           	callstack 0
  3598                           
  3599 ;; *************** function _sprintf *****************
  3600 ;; Defined at:
  3601 ;;		line 9 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/nf_sprintf.c"
  3602 ;; Parameters:    Size  Location     Type
  3603 ;;  s               2    2[BANK1 ] PTR unsigned char 
  3604 ;;		 -> buff1(255), 
  3605 ;;  fmt             2    4[BANK1 ] PTR const unsigned char 
  3606 ;;		 -> STR_7(17), 
  3607 ;; Auto vars:     Size  Location     Type
  3608 ;;  f              11   12[BANK1 ] struct _IO_FILE
  3609 ;;  ap              2   10[BANK1 ] PTR void [1]
  3610 ;;		 -> ?_printf(2), ?_sprintf(2), 
  3611 ;;  ret             2    0        int 
  3612 ;; Return value:  Size  Location     Type
  3613 ;;                  2    2[BANK1 ] int 
  3614 ;; Registers used:
  3615 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3616 ;; Tracked objects:
  3617 ;;		On entry : 3F/1
  3618 ;;		On exit  : 3F/1
  3619 ;;		Unchanged: 0/0
  3620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3621 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3622 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3624 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3625 ;;Total ram usage:       21 bytes
  3626 ;; Hardware stack levels used: 1
  3627 ;; Hardware stack levels required when called: 15
  3628 ;; This function calls:
  3629 ;;		_vfprintf
  3630 ;; This function is called by:
  3631 ;;		_main
  3632 ;; This function uses a non-reentrant model
  3633 ;;
  3634                           
  3635                           	psect	text1
  3636  013C46                     __ptext1:
  3637                           	callstack 0
  3638  013C46                     _sprintf:
  3639                           	callstack 15
  3640                           
  3641                           ; BSR set to: 1
  3642                           
  3643                           ; BSR set to: 0
  3644                           ;incstack = 0
  3645  013C46  0ED4               	movlw	low (?_sprintf+4)
  3646  013C48  6FD8               	movwf	sprintf@ap& (0+255),b
  3647  013C4A  0E01               	movlw	high (?_sprintf+4)
  3648  013C4C  6FD9               	movwf	(sprintf@ap+1)& (0+255),b
  3649  013C4E  C1D0  F1DA         	movff	sprintf@s,sprintf@f
  3650  013C52  C1D1  F1DB         	movff	sprintf@s+1,sprintf@f+1
  3651                           
  3652                           ; BSR set to: 1
  3653  013C56  0E00               	movlw	0
  3654  013C58  6FDE               	movwf	(sprintf@f+4)& (0+255),b
  3655  013C5A  0E00               	movlw	0
  3656  013C5C  6FDD               	movwf	(sprintf@f+3)& (0+255),b
  3657                           
  3658                           ; BSR set to: 1
  3659  013C5E  0E00               	movlw	0
  3660  013C60  6FE4               	movwf	(sprintf@f+10)& (0+255),b
  3661  013C62  0E00               	movlw	0
  3662  013C64  6FE3               	movwf	(sprintf@f+9)& (0+255),b
  3663                           
  3664                           ; BSR set to: 1
  3665  013C66  0EDA               	movlw	low sprintf@f
  3666  013C68  0100               	movlb	0	; () banked
  3667  013C6A  6FD7               	movwf	vfprintf@fp& (0+255),b
  3668  013C6C  0E01               	movlw	high sprintf@f
  3669  013C6E  6FD8               	movwf	(vfprintf@fp+1)& (0+255),b
  3670  013C70  C1D2  F0D9         	movff	sprintf@fmt,vfprintf@fmt
  3671  013C74  C1D3  F0DA         	movff	sprintf@fmt+1,vfprintf@fmt+1
  3672  013C78  0ED8               	movlw	low sprintf@ap
  3673  013C7A  6FDB               	movwf	vfprintf@ap& (0+255),b
  3674  013C7C  0E01               	movlw	high sprintf@ap
  3675  013C7E  6FDC               	movwf	(vfprintf@ap+1)& (0+255),b
  3676  013C80  ECA1  F09D         	call	_vfprintf	;wreg free
  3677                           
  3678                           ; BSR set to: 0
  3679  013C84  0101               	movlb	1	; () banked
  3680  013C86  51DD               	movf	(sprintf@f+3)& (0+255),w,b
  3681  013C88  25D0               	addwf	sprintf@s& (0+255),w,b
  3682  013C8A  6ED9               	movwf	fsr2l,c
  3683  013C8C  51DE               	movf	(sprintf@f+4)& (0+255),w,b
  3684  013C8E  21D1               	addwfc	(sprintf@s+1)& (0+255),w,b
  3685  013C90  6EDA               	movwf	fsr2h,c
  3686  013C92  0E00               	movlw	0
  3687  013C94  6EDF               	movwf	indf2,c
  3688                           
  3689                           ; BSR set to: 1
  3690  013C96  0012               	return		;funcret
  3691  013C98                     __end_of_sprintf:
  3692                           	callstack 0
  3693                           
  3694 ;; *************** function _scmd_init *****************
  3695 ;; Defined at:
  3696 ;;		line 33 in file "scdm.c"
  3697 ;; Parameters:    Size  Location     Type
  3698 ;;		None
  3699 ;; Auto vars:     Size  Location     Type
  3700 ;;		None
  3701 ;; Return value:  Size  Location     Type
  3702 ;;                  1    wreg      void 
  3703 ;; Registers used:
  3704 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3705 ;; Tracked objects:
  3706 ;;		On entry : 3F/3B
  3707 ;;		On exit  : 0/0
  3708 ;;		Unchanged: 0/0
  3709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3714 ;;Total ram usage:        0 bytes
  3715 ;; Hardware stack levels used: 1
  3716 ;; Hardware stack levels required when called: 13
  3717 ;; This function calls:
  3718 ;;		_cli_init
  3719 ;; This function is called by:
  3720 ;;		_main
  3721 ;; This function uses a non-reentrant model
  3722 ;;
  3723                           
  3724                           	psect	text2
  3725  0146CE                     __ptext2:
  3726                           	callstack 0
  3727  0146CE                     _scmd_init:
  3728                           	callstack 17
  3729                           
  3730                           ; BSR set to: 59
  3731                           ;scdm.c: 35:  cli_init(&cli_ctx, g_cmds);
  3732                           
  3733                           ; BSR set to: 1
  3734                           ;incstack = 0
  3735  0146CE  0E00               	movlw	low _cli_ctx
  3736  0146D0  6E2F               	movwf	cli_init@a_ctx^0,c
  3737  0146D2  0E02               	movlw	high _cli_ctx
  3738  0146D4  6E30               	movwf	(cli_init@a_ctx+1)^0,c
  3739  0146D6  0EAB               	movlw	low _g_cmds
  3740  0146D8  6E31               	movwf	cli_init@a_cmds^0,c
  3741  0146DA  0E01               	movlw	high _g_cmds
  3742  0146DC  6E32               	movwf	(cli_init@a_cmds+1)^0,c
  3743  0146DE  ECA4  F09F         	call	_cli_init	;wreg free
  3744  0146E2  0012               	return		;funcret
  3745  0146E4                     __end_of_scmd_init:
  3746                           	callstack 0
  3747                           
  3748 ;; *************** function _cli_init *****************
  3749 ;; Defined at:
  3750 ;;		line 23 in file "scdm.c"
  3751 ;; Parameters:    Size  Location     Type
  3752 ;;  a_ctx           2   46[COMRAM] PTR struct _t_cli_ctx
  3753 ;;		 -> cli_ctx(131), 
  3754 ;;  a_cmds          2   48[COMRAM] PTR struct _t_cmd
  3755 ;;		 -> g_cmds(35), 
  3756 ;; Auto vars:     Size  Location     Type
  3757 ;;		None
  3758 ;; Return value:  Size  Location     Type
  3759 ;;                  1    wreg      void 
  3760 ;; Registers used:
  3761 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3762 ;; Tracked objects:
  3763 ;;		On entry : 3F/3B
  3764 ;;		On exit  : 0/0
  3765 ;;		Unchanged: 0/0
  3766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3767 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3770 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3771 ;;Total ram usage:        4 bytes
  3772 ;; Hardware stack levels used: 1
  3773 ;; Hardware stack levels required when called: 12
  3774 ;; This function calls:
  3775 ;;		_memset
  3776 ;;		_puts
  3777 ;; This function is called by:
  3778 ;;		_scmd_init
  3779 ;; This function uses a non-reentrant model
  3780 ;;
  3781                           
  3782                           	psect	text3
  3783  013F48                     __ptext3:
  3784                           	callstack 0
  3785  013F48                     _cli_init:
  3786                           	callstack 17
  3787                           
  3788                           ; BSR set to: 59
  3789                           ;scdm.c: 23: static void cli_init(t_cli_ctx *a_ctx, t_cmd *a_cmds);scdm.c: 24: {;scdm.c:
      +                           25:  memset(a_ctx, 0x00, sizeof(t_cli_ctx));
  3790                           
  3791                           ;incstack = 0
  3792  013F48  C02F  F018         	movff	cli_init@a_ctx,memset@dest
  3793  013F4C  C030  F019         	movff	cli_init@a_ctx+1,memset@dest+1
  3794  013F50  0E00               	movlw	0
  3795  013F52  6E1B               	movwf	(memset@c+1)^0,c
  3796  013F54  0E00               	movlw	0
  3797  013F56  6E1A               	movwf	memset@c^0,c
  3798  013F58  0E00               	movlw	0
  3799  013F5A  6E1D               	movwf	(memset@n+1)^0,c
  3800  013F5C  0E83               	movlw	131
  3801  013F5E  6E1C               	movwf	memset@n^0,c
  3802  013F60  EC35  F095         	call	_memset	;wreg free
  3803                           
  3804                           ;scdm.c: 26:  a_ctx->cmds = a_cmds;
  3805  013F64  0060  F0BF  FFD9   	movff	cli_init@a_ctx,fsr2l
  3806  013F6A  0060  F0C3  FFDA   	movff	cli_init@a_ctx+1,fsr2h
  3807  013F70  0060  F0C7  FFDE   	movff	cli_init@a_cmds,postinc2
  3808  013F76  0060  F0CB  FFDD   	movff	cli_init@a_cmds+1,postdec2
  3809                           
  3810                           ;scdm.c: 30:  puts(cmdm);
  3811  013F7C  0EDC               	movlw	low _cmdm
  3812  013F7E  6E2C               	movwf	puts@s^0,c
  3813  013F80  0EFE               	movlw	high _cmdm
  3814  013F82  6E2D               	movwf	(puts@s+1)^0,c
  3815  013F84  EC35  F0A1         	call	_puts	;wreg free
  3816  013F88  0012               	return		;funcret
  3817  013F8A                     __end_of_cli_init:
  3818                           	callstack 0
  3819                           
  3820 ;; *************** function _printf *****************
  3821 ;; Defined at:
  3822 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/printf.c"
  3823 ;; Parameters:    Size  Location     Type
  3824 ;;  fmt             2    2[BANK1 ] PTR const unsigned char 
  3825 ;;		 -> STR_8(79), 
  3826 ;; Auto vars:     Size  Location     Type
  3827 ;;  ap              2   20[BANK1 ] PTR void [1]
  3828 ;;		 -> ?_printf(2), ?_sprintf(2), 
  3829 ;;  ret             2    0        int 
  3830 ;; Return value:  Size  Location     Type
  3831 ;;                  2    2[BANK1 ] int 
  3832 ;; Registers used:
  3833 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3834 ;; Tracked objects:
  3835 ;;		On entry : 3F/1
  3836 ;;		On exit  : 3F/0
  3837 ;;		Unchanged: 0/0
  3838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3839 ;;      Params:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3840 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3842 ;;      Totals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3843 ;;Total ram usage:       20 bytes
  3844 ;; Hardware stack levels used: 1
  3845 ;; Hardware stack levels required when called: 15
  3846 ;; This function calls:
  3847 ;;		_vfprintf
  3848 ;; This function is called by:
  3849 ;;		_main
  3850 ;; This function uses a non-reentrant model
  3851 ;;
  3852                           
  3853                           	psect	text4
  3854  0144C0                     __ptext4:
  3855                           	callstack 0
  3856  0144C0                     _printf:
  3857                           	callstack 15
  3858                           
  3859                           ; BSR set to: 1
  3860                           
  3861                           ;incstack = 0
  3862  0144C0  0ED2               	movlw	low (?_printf+2)
  3863  0144C2  6FE2               	movwf	printf@ap& (0+255),b
  3864  0144C4  0E01               	movlw	high (?_printf+2)
  3865  0144C6  6FE3               	movwf	(printf@ap+1)& (0+255),b
  3866                           
  3867                           ; BSR set to: 1
  3868  0144C8  0E00               	movlw	0
  3869  0144CA  0100               	movlb	0	; () banked
  3870  0144CC  6FD7               	movwf	vfprintf@fp& (0+255),b
  3871  0144CE  0E00               	movlw	0
  3872  0144D0  6FD8               	movwf	(vfprintf@fp+1)& (0+255),b
  3873  0144D2  C1D0  F0D9         	movff	printf@fmt,vfprintf@fmt
  3874  0144D6  C1D1  F0DA         	movff	printf@fmt+1,vfprintf@fmt+1
  3875  0144DA  0EE2               	movlw	low printf@ap
  3876  0144DC  6FDB               	movwf	vfprintf@ap& (0+255),b
  3877  0144DE  0E01               	movlw	high printf@ap
  3878  0144E0  6FDC               	movwf	(vfprintf@ap+1)& (0+255),b
  3879  0144E2  ECA1  F09D         	call	_vfprintf	;wreg free
  3880                           
  3881                           ; BSR set to: 0
  3882  0144E6  0012               	return		;funcret
  3883  0144E8                     __end_of_printf:
  3884                           	callstack 0
  3885                           
  3886 ;; *************** function _vfprintf *****************
  3887 ;; Defined at:
  3888 ;;		line 1390 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  3889 ;; Parameters:    Size  Location     Type
  3890 ;;  fp              2  119[BANK0 ] PTR struct _IO_FILE
  3891 ;;		 -> sprintf@f(11), NULL(0), 
  3892 ;;  fmt             2  121[BANK0 ] PTR const unsigned char 
  3893 ;;		 -> STR_8(79), STR_7(17), 
  3894 ;;  ap              2  123[BANK0 ] PTR PTR void 
  3895 ;;		 -> printf@ap(2), sprintf@ap(2), 
  3896 ;; Auto vars:     Size  Location     Type
  3897 ;;  cfmt            2    0[BANK1 ] PTR unsigned char 
  3898 ;;		 -> STR_8(79), STR_7(17), 
  3899 ;; Return value:  Size  Location     Type
  3900 ;;                  2  119[BANK0 ] int 
  3901 ;; Registers used:
  3902 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3903 ;; Tracked objects:
  3904 ;;		On entry : 3F/0
  3905 ;;		On exit  : 3F/0
  3906 ;;		Unchanged: 0/0
  3907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3908 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3909 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3911 ;;      Totals:         0       6       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3912 ;;Total ram usage:        8 bytes
  3913 ;; Hardware stack levels used: 1
  3914 ;; Hardware stack levels required when called: 14
  3915 ;; This function calls:
  3916 ;;		_vfpfcnvrt
  3917 ;; This function is called by:
  3918 ;;		_sprintf
  3919 ;;		_printf
  3920 ;; This function uses a non-reentrant model
  3921 ;;
  3922                           
  3923                           	psect	text5
  3924  013B42                     __ptext5:
  3925                           	callstack 0
  3926  013B42                     _vfprintf:
  3927                           	callstack 15
  3928                           
  3929                           ; BSR set to: 0
  3930                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1390: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1
      +                          391: {;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1393:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1395:     cfmt = (char *)fmt;
  3931                           
  3932                           ; BSR set to: 0
  3933                           ;incstack = 0
  3934  013B42  C0D9  F1CE         	movff	vfprintf@fmt,vfprintf@cfmt
  3935  013B46  C0DA  F1CF         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3936                           
  3937                           ; BSR set to: 0
  3938                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1396:     nout = 0;
  3939  013B4A  0E00               	movlw	0
  3940  013B4C  6FF4               	movwf	(_nout+1)& (0+255),b
  3941  013B4E  0E00               	movlw	0
  3942  013B50  6FF3               	movwf	_nout& (0+255),b
  3943                           
  3944                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1397:     while (*cfmt) {
  3945  013B52  D012               	goto	l11643
  3946  013B54                     l11641:
  3947                           
  3948                           ; BSR set to: 0
  3949                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1398:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  3950  013B54  C0D7  F0B7         	movff	vfprintf@fp,vfpfcnvrt@fp
  3951  013B58  C0D8  F0B8         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3952  013B5C  0ECE               	movlw	low vfprintf@cfmt
  3953  013B5E  6FB9               	movwf	vfpfcnvrt@fmt& (0+255),b
  3954  013B60  0E01               	movlw	high vfprintf@cfmt
  3955  013B62  6FBA               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  3956  013B64  C0DB  F0BB         	movff	vfprintf@ap,vfpfcnvrt@ap
  3957  013B68  C0DC  F0BC         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3958  013B6C  ECDE  F084         	call	_vfpfcnvrt	;wreg free
  3959  013B70  51B7               	movf	?_vfpfcnvrt& (0+255),w,b
  3960  013B72  27F3               	addwf	_nout& (0+255),f,b
  3961  013B74  51B8               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  3962  013B76  23F4               	addwfc	(_nout+1)& (0+255),f,b
  3963  013B78                     l11643:
  3964                           
  3965                           ; BSR set to: 0
  3966                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1397:     while (*cfmt) {
  3967  013B78  0060  F73B  FFF6   	movff	vfprintf@cfmt,tblptrl
  3968  013B7E  0060  F73F  FFF7   	movff	vfprintf@cfmt+1,tblptrh
  3969  013B84                     	if	0	;tblptru may be non-zero
  3970  013B84                     	endif
  3971  013B84                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3972  013B84  0E00               	movlw	low (__mediumconst shr (0+16))
  3973  013B86  6EF8               	movwf	tblptru,c
  3974  013B88                     	endif
  3975  013B88  0008               	tblrd		*
  3976  013B8A  50F5               	movf	tablat,w,c
  3977  013B8C  0900               	iorlw	0
  3978  013B8E  A4D8               	btfss	status,2,c
  3979  013B90  D7E1               	goto	l11641
  3980                           
  3981                           ; BSR set to: 0
  3982                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1400:     return nout;
  3983  013B92  C0F3  F0D7         	movff	_nout,?_vfprintf
  3984  013B96  C0F4  F0D8         	movff	_nout+1,?_vfprintf+1
  3985                           
  3986                           ; BSR set to: 0
  3987  013B9A  0012               	return		;funcret
  3988  013B9C                     __end_of_vfprintf:
  3989                           	callstack 0
  3990                           
  3991 ;; *************** function _vfpfcnvrt *****************
  3992 ;; Defined at:
  3993 ;;		line 692 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  3994 ;; Parameters:    Size  Location     Type
  3995 ;;  fp              2   87[BANK0 ] PTR struct _IO_FILE
  3996 ;;		 -> sprintf@f(11), NULL(0), 
  3997 ;;  fmt             2   89[BANK0 ] PTR PTR unsigned char 
  3998 ;;		 -> vfprintf@cfmt(2), 
  3999 ;;  ap              2   91[BANK0 ] PTR PTR void 
  4000 ;;		 -> printf@ap(2), sprintf@ap(2), 
  4001 ;; Auto vars:     Size  Location     Type
  4002 ;;  llu             8   97[BANK0 ] unsigned long long 
  4003 ;;  ll              8    0        long long 
  4004 ;;  f               4  115[BANK0 ] long long 
  4005 ;;  ct              3  112[BANK0 ] unsigned char [3]
  4006 ;;  vp              3    0        PTR void 
  4007 ;;  done            2  107[BANK0 ] int 
  4008 ;;  cp              2  105[BANK0 ] PTR unsigned char 
  4009 ;;		 -> ?_printf(2), ?_sprintf(2), STR_2(9), STR_1(12), 
  4010 ;;  i               2    0        int 
  4011 ;;  c               1  111[BANK0 ] unsigned char 
  4012 ;; Return value:  Size  Location     Type
  4013 ;;                  2   87[BANK0 ] int 
  4014 ;; Registers used:
  4015 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4016 ;; Tracked objects:
  4017 ;;		On entry : 3F/0
  4018 ;;		On exit  : 3F/0
  4019 ;;		Unchanged: 0/0
  4020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4021 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4022 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4023 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4024 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4025 ;;Total ram usage:       32 bytes
  4026 ;; Hardware stack levels used: 1
  4027 ;; Hardware stack levels required when called: 13
  4028 ;; This function calls:
  4029 ;;		_atoi
  4030 ;;		_efgtoa
  4031 ;;		_fputc
  4032 ;;		_isdigit
  4033 ;;		_isupper
  4034 ;;		_stoa
  4035 ;;		_strncmp
  4036 ;;		_tolower
  4037 ;;		_utoa
  4038 ;; This function is called by:
  4039 ;;		_vfprintf
  4040 ;; This function uses a non-reentrant model
  4041 ;;
  4042                           
  4043                           	psect	text6
  4044  0109BC                     __ptext6:
  4045                           	callstack 0
  4046  0109BC                     _vfpfcnvrt:
  4047                           	callstack 15
  4048                           
  4049                           ; BSR set to: 0
  4050                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 692: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c
      +                          : 693: {;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 694:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 695:     int done, i;;
      +                          /opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 696:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 697:     unsigned long long llu;
  4051                           
  4052                           ; BSR set to: 0
  4053                           ;incstack = 0
  4054  0109BC  0060  F2E7  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4055  0109C2  0060  F2EB  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4056  0109C8  006F FF7B FFF6     	movff	postinc2,tblptrl
  4057  0109CE  006F FF77 FFF7     	movff	postdec2,tblptrh
  4058  0109D4                     	if	0	;tblptru may be non-zero
  4059  0109D4                     	endif
  4060  0109D4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4061  0109D4  0E00               	movlw	low (__mediumconst shr (0+16))
  4062  0109D6  6EF8               	movwf	tblptru,c
  4063  0109D8                     	endif
  4064  0109D8  0008               	tblrd		*
  4065  0109DA  50F5               	movf	tablat,w,c
  4066  0109DC  0A25               	xorlw	37
  4067  0109DE  A4D8               	btfss	status,2,c
  4068  0109E0  D3B2               	goto	l11625
  4069                           
  4070                           ; BSR set to: 0
  4071                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 703:         ++*fmt;
  4072  0109E2  0060  F2E7  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4073  0109E8  0060  F2EB  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4074  0109EE  2ADE               	incf	postinc2,f,c
  4075  0109F0  0E00               	movlw	0
  4076  0109F2  22DD               	addwfc	postdec2,f,c
  4077                           
  4078                           ; BSR set to: 0
  4079                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 705:         flags = width = 
      +                          0;
  4080  0109F4  0E00               	movlw	0
  4081  0109F6  6FF6               	movwf	(_width+1)& (0+255),b
  4082  0109F8  0E00               	movlw	0
  4083  0109FA  6FF5               	movwf	_width& (0+255),b
  4084  0109FC  C0F5  F03A         	movff	_width,_flags
  4085  010A00  C0F6  F03B         	movff	_width+1,_flags+1
  4086                           
  4087                           ; BSR set to: 0
  4088                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 706:         prec = -1;
  4089  010A04  69F7               	setf	_prec& (0+255),b
  4090  010A06  69F8               	setf	(_prec+1)& (0+255),b
  4091                           
  4092                           ; BSR set to: 0
  4093                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 710:         done = 0;
  4094  010A08  0E00               	movlw	0
  4095  010A0A  6FCC               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  4096  010A0C  0E00               	movlw	0
  4097  010A0E  D016               	goto	L1
  4098  010A10                     l11481:
  4099                           
  4100                           ; BSR set to: 0
  4101                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 714:                     flag
      +                          s |= (1 << 0);
  4102  010A10  803A               	bsf	_flags^0,0,c
  4103  010A12                     l11483:
  4104                           
  4105                           ; BSR set to: 0
  4106                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 715:                     ++*f
      +                          mt;
  4107  010A12  0060  F2E7  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4108  010A18  0060  F2EB  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4109  010A1E  2ADE               	incf	postinc2,f,c
  4110  010A20  0E00               	movlw	0
  4111  010A22  22DD               	addwfc	postdec2,f,c
  4112                           
  4113                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 716:                     brea
      +                          k;
  4114  010A24  D034               	goto	l11507
  4115  010A26                     l11485:
  4116                           
  4117                           ; BSR set to: 0
  4118                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 718:                     flag
      +                          s |= (1 << 1);
  4119  010A26  823A               	bsf	_flags^0,1,c
  4120  010A28  D7F4               	goto	l11483
  4121  010A2A                     l11489:
  4122                           
  4123                           ; BSR set to: 0
  4124                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 722:                     flag
      +                          s |= (1 << 2);
  4125  010A2A  843A               	bsf	_flags^0,2,c
  4126  010A2C  D7F2               	goto	l11483
  4127  010A2E                     l11493:
  4128                           
  4129                           ; BSR set to: 0
  4130                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 726:                     flag
      +                          s |= (1 << 3);
  4131  010A2E  863A               	bsf	_flags^0,3,c
  4132  010A30  D7F0               	goto	l11483
  4133  010A32                     l11497:
  4134                           
  4135                           ; BSR set to: 0
  4136                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 730:                     flag
      +                          s |= (1 << 4);
  4137  010A32  883A               	bsf	_flags^0,4,c
  4138  010A34  D7EE               	goto	l11483
  4139  010A36                     l11501:
  4140                           
  4141                           ; BSR set to: 0
  4142                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 734:                     done
      +                           = 1;
  4143  010A36  0E00               	movlw	0
  4144  010A38  6FCC               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  4145  010A3A  0E01               	movlw	1
  4146  010A3C                     L1:
  4147  010A3C  6FCB               	movwf	vfpfcnvrt@done& (0+255),b
  4148                           
  4149                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 735:                     brea
      +                          k;
  4150  010A3E  D027               	goto	l11507
  4151  010A40                     l11505:
  4152                           
  4153                           ; BSR set to: 0
  4154  010A40  0060  F2E7  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4155  010A46  0060  F2EB  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4156  010A4C  006F FF7B FFF6     	movff	postinc2,tblptrl
  4157  010A52  006F FF77 FFF7     	movff	postdec2,tblptrh
  4158  010A58                     	if	0	;tblptru may be non-zero
  4159  010A58                     	endif
  4160  010A58                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4161  010A58  0E00               	movlw	low (__mediumconst shr (0+16))
  4162  010A5A  6EF8               	movwf	tblptru,c
  4163  010A5C                     	endif
  4164  010A5C  0008               	tblrd		*
  4165  010A5E  50F5               	movf	tablat,w,c
  4166  010A60  6FBD               	movwf	??_vfpfcnvrt& (0+255),b
  4167  010A62  6BBE               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  4168                           
  4169                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4170                           ; Switch size 1, requested type "simple"
  4171                           ; Number of cases is 1, Range of values is 0 to 0
  4172                           ; switch strategies available:
  4173                           ; Name         Instructions Cycles
  4174                           ; simple_byte            4     3 (average)
  4175                           ;	Chosen strategy is simple_byte
  4176  010A64  51BE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4177  010A66  0A00               	xorlw	0	; case 0
  4178  010A68  A4D8               	btfss	status,2,c
  4179  010A6A  D7E5               	goto	l11501
  4180                           
  4181                           ; BSR set to: 0
  4182                           ; Switch size 1, requested type "simple"
  4183                           ; Number of cases is 5, Range of values is 32 to 48
  4184                           ; switch strategies available:
  4185                           ; Name         Instructions Cycles
  4186                           ; simple_byte           16     9 (average)
  4187                           ;	Chosen strategy is simple_byte
  4188  010A6C  51BD               	movf	??_vfpfcnvrt& (0+255),w,b
  4189  010A6E  0A20               	xorlw	32	; case 32
  4190  010A70  B4D8               	btfsc	status,2,c
  4191  010A72  D7DD               	goto	l11493
  4192  010A74  0A03               	xorlw	3	; case 35
  4193  010A76  B4D8               	btfsc	status,2,c
  4194  010A78  D7DC               	goto	l11497
  4195  010A7A  0A08               	xorlw	8	; case 43
  4196  010A7C  B4D8               	btfsc	status,2,c
  4197  010A7E  D7D5               	goto	l11489
  4198  010A80  0A06               	xorlw	6	; case 45
  4199  010A82  B4D8               	btfsc	status,2,c
  4200  010A84  D7C5               	goto	l11481
  4201  010A86  0A1D               	xorlw	29	; case 48
  4202  010A88  B4D8               	btfsc	status,2,c
  4203  010A8A  D7CD               	goto	l11485
  4204  010A8C  D7D4               	goto	l11501
  4205  010A8E                     l11507:
  4206                           
  4207                           ; BSR set to: 0
  4208                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 711:         while (!done) {
  4209  010A8E  51CB               	movf	vfpfcnvrt@done& (0+255),w,b
  4210  010A90  11CC               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  4211  010A92  B4D8               	btfsc	status,2,c
  4212  010A94  D7D5               	goto	l11505
  4213                           
  4214                           ; BSR set to: 0
  4215                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 738:         if (flags & (1 <
      +                          < 0)) {
  4216  010A96  B03A               	btfsc	_flags^0,0,c
  4217                           
  4218                           ; BSR set to: 0
  4219                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 739:             flags &= ~(1
      +                           << 1);
  4220  010A98  923A               	bcf	_flags^0,1,c
  4221                           
  4222                           ; BSR set to: 0
  4223                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 745:         if ((*fmt)[0] ==
      +                           '*') {
  4224  010A9A  0060  F2E7  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4225  010AA0  0060  F2EB  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4226  010AA6  006F FF7B FFF6     	movff	postinc2,tblptrl
  4227  010AAC  006F FF77 FFF7     	movff	postdec2,tblptrh
  4228  010AB2                     	if	0	;tblptru may be non-zero
  4229  010AB2                     	endif
  4230  010AB2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4231  010AB2  0E00               	movlw	low (__mediumconst shr (0+16))
  4232  010AB4  6EF8               	movwf	tblptru,c
  4233  010AB6                     	endif
  4234  010AB6  0008               	tblrd		*
  4235  010AB8  50F5               	movf	tablat,w,c
  4236  010ABA  0A2A               	xorlw	42
  4237  010ABC  A4D8               	btfss	status,2,c
  4238  010ABE  D02D               	goto	l11519
  4239                           
  4240                           ; BSR set to: 0
  4241                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 746:             ++*fmt;
  4242  010AC0  0060  F2E7  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4243  010AC6  0060  F2EB  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4244  010ACC  2ADE               	incf	postinc2,f,c
  4245  010ACE  0E00               	movlw	0
  4246  010AD0  22DD               	addwfc	postdec2,f,c
  4247                           
  4248                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 747:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  4249  010AD2  0060  F2EF  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  4250  010AD8  0060  F2F3  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  4251  010ADE  006F FF7C  F0BD    	movff	indf2,??_vfpfcnvrt
  4252  010AE4  0E02               	movlw	2
  4253  010AE6  26DE               	addwf	postinc2,f,c
  4254  010AE8  006F FF7C  F0BE    	movff	indf2,??_vfpfcnvrt+1
  4255  010AEE  0E00               	movlw	0
  4256  010AF0  22DD               	addwfc	postdec2,f,c
  4257  010AF2  0060  F2F7  FFD9   	movff	??_vfpfcnvrt,fsr2l
  4258  010AF8  0060  F2FB  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  4259  010AFE  006F FF78  F0F5    	movff	postinc2,_width
  4260  010B04  006F FF74  F0F6    	movff	postdec2,_width+1
  4261                           
  4262                           ; BSR set to: 0
  4263                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 748:             if (width < 
      +                          0) {
  4264  010B0A  AFF6               	btfss	(_width+1)& (0+255),7,b
  4265  010B0C  D043               	goto	u12500
  4266                           
  4267                           ; BSR set to: 0
  4268                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 749:                 flags |=
      +                           (1 << 0);
  4269  010B0E  803A               	bsf	_flags^0,0,c
  4270                           
  4271                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 750:                 width = 
      +                          -width;
  4272  010B10  6DF5               	negf	_width& (0+255),b
  4273  010B12  1FF6               	comf	(_width+1)& (0+255),f,b
  4274  010B14  B0D8               	btfsc	status,0,c
  4275  010B16  2BF6               	incf	(_width+1)& (0+255),f,b
  4276  010B18  D03D               	goto	u12500
  4277  010B1A                     l11519:
  4278                           
  4279                           ; BSR set to: 0
  4280                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 753:             width = atoi
      +                          (*fmt);
  4281  010B1A  0060  F2E7  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4282  010B20  0060  F2EB  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4283  010B26  006F FF78  F01F    	movff	postinc2,atoi@s
  4284  010B2C  006F FF74  F020    	movff	postdec2,atoi@s+1
  4285  010B32  ECDB  F095         	call	_atoi	;wreg free
  4286  010B36  C01F  F0F5         	movff	?_atoi,_width
  4287  010B3A  C020  F0F6         	movff	?_atoi+1,_width+1
  4288                           
  4289                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 754:             while ((0 &&
      +                           isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  4290  010B3E  D009               	goto	l11525
  4291  010B40                     l11521:
  4292                           
  4293                           ; BSR set to: 0
  4294                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 755:                 ++*fmt;
  4295  010B40  0060  F2E7  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4296  010B46  0060  F2EB  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4297  010B4C  2ADE               	incf	postinc2,f,c
  4298  010B4E  0E00               	movlw	0
  4299  010B50  22DD               	addwfc	postdec2,f,c
  4300  010B52                     l11525:
  4301  010B52  0ED0               	movlw	208
  4302  010B54  0100               	movlb	0	; () banked
  4303  010B56  6FBD               	movwf	??_vfpfcnvrt& (0+255),b
  4304  010B58  0EFF               	movlw	255
  4305  010B5A  6FBE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  4306  010B5C  0060  F2E7  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4307  010B62  0060  F2EB  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4308  010B68  006F FF7B FFF6     	movff	postinc2,tblptrl
  4309  010B6E  006F FF77 FFF7     	movff	postdec2,tblptrh
  4310  010B74                     	if	0	;tblptru may be non-zero
  4311  010B74                     	endif
  4312  010B74                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4313  010B74  0E00               	movlw	low (__mediumconst shr (0+16))
  4314  010B76  6EF8               	movwf	tblptru,c
  4315  010B78                     	endif
  4316  010B78  0008               	tblrd		*
  4317  010B7A  50F5               	movf	tablat,w,c
  4318  010B7C  6FBF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  4319  010B7E  6BC0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  4320  010B80  51BD               	movf	??_vfpfcnvrt& (0+255),w,b
  4321  010B82  27BF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  4322  010B84  51BE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4323  010B86  23C0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  4324  010B88  51C0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  4325  010B8A  E104               	bnz	u12500
  4326  010B8C  0E0A               	movlw	10
  4327  010B8E  5DBF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  4328  010B90  A0D8               	btfss	status,0,c
  4329  010B92  D7D6               	goto	l11521
  4330  010B94                     u12500:
  4331                           
  4332                           ; BSR set to: 0
  4333                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 762:         if ((*fmt)[0] ==
      +                           '.') {
  4334  010B94  0060  F2E7  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4335  010B9A  0060  F2EB  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4336  010BA0  006F FF7B FFF6     	movff	postinc2,tblptrl
  4337  010BA6  006F FF77 FFF7     	movff	postdec2,tblptrh
  4338  010BAC                     	if	0	;tblptru may be non-zero
  4339  010BAC                     	endif
  4340  010BAC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4341  010BAC  0E00               	movlw	low (__mediumconst shr (0+16))
  4342  010BAE  6EF8               	movwf	tblptru,c
  4343  010BB0                     	endif
  4344  010BB0  0008               	tblrd		*
  4345  010BB2  50F5               	movf	tablat,w,c
  4346  010BB4  0A2E               	xorlw	46
  4347  010BB6  A4D8               	btfss	status,2,c
  4348  010BB8  D083               	goto	u12530
  4349                           
  4350                           ; BSR set to: 0
  4351                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 763:             prec = 0;
  4352  010BBA  0E00               	movlw	0
  4353  010BBC  6FF8               	movwf	(_prec+1)& (0+255),b
  4354  010BBE  0E00               	movlw	0
  4355  010BC0  6FF7               	movwf	_prec& (0+255),b
  4356                           
  4357                           ; BSR set to: 0
  4358                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 764:             ++*fmt;
  4359  010BC2  0060  F2E7  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4360  010BC8  0060  F2EB  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4361  010BCE  2ADE               	incf	postinc2,f,c
  4362  010BD0  0E00               	movlw	0
  4363  010BD2  22DD               	addwfc	postdec2,f,c
  4364                           
  4365                           ; BSR set to: 0
  4366                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 765:             if ((*fmt)[0
      +                          ] == '*') {
  4367  010BD4  0060  F2E7  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4368  010BDA  0060  F2EB  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4369  010BE0  006F FF7B FFF6     	movff	postinc2,tblptrl
  4370  010BE6  006F FF77 FFF7     	movff	postdec2,tblptrh
  4371  010BEC                     	if	0	;tblptru may be non-zero
  4372  010BEC                     	endif
  4373  010BEC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4374  010BEC  0E00               	movlw	low (__mediumconst shr (0+16))
  4375  010BEE  6EF8               	movwf	tblptru,c
  4376  010BF0                     	endif
  4377  010BF0  0008               	tblrd		*
  4378  010BF2  50F5               	movf	tablat,w,c
  4379  010BF4  0A2A               	xorlw	42
  4380  010BF6  A4D8               	btfss	status,2,c
  4381  010BF8  D026               	goto	l11537
  4382                           
  4383                           ; BSR set to: 0
  4384                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 766:                 ++*fmt;
  4385  010BFA  0060  F2E7  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4386  010C00  0060  F2EB  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4387  010C06  2ADE               	incf	postinc2,f,c
  4388  010C08  0E00               	movlw	0
  4389  010C0A  22DD               	addwfc	postdec2,f,c
  4390                           
  4391                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 767:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  4392  010C0C  0060  F2EF  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  4393  010C12  0060  F2F3  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  4394  010C18  006F FF7C  F0BD    	movff	indf2,??_vfpfcnvrt
  4395  010C1E  0E02               	movlw	2
  4396  010C20  26DE               	addwf	postinc2,f,c
  4397  010C22  006F FF7C  F0BE    	movff	indf2,??_vfpfcnvrt+1
  4398  010C28  0E00               	movlw	0
  4399  010C2A  22DD               	addwfc	postdec2,f,c
  4400  010C2C  0060  F2F7  FFD9   	movff	??_vfpfcnvrt,fsr2l
  4401  010C32  0060  F2FB  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  4402  010C38  006F FF78  F0F7    	movff	postinc2,_prec
  4403  010C3E  006F FF74  F0F8    	movff	postdec2,_prec+1
  4404                           
  4405                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 768:             } else {
  4406  010C44  D03D               	goto	u12530
  4407  010C46                     l11537:
  4408                           
  4409                           ; BSR set to: 0
  4410                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 769:                 prec = a
      +                          toi(*fmt);
  4411  010C46  0060  F2E7  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4412  010C4C  0060  F2EB  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4413  010C52  006F FF78  F01F    	movff	postinc2,atoi@s
  4414  010C58  006F FF74  F020    	movff	postdec2,atoi@s+1
  4415  010C5E  ECDB  F095         	call	_atoi	;wreg free
  4416  010C62  C01F  F0F7         	movff	?_atoi,_prec
  4417  010C66  C020  F0F8         	movff	?_atoi+1,_prec+1
  4418                           
  4419                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 770:                 while ((
      +                          0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  4420  010C6A  D009               	goto	l11543
  4421  010C6C                     l11539:
  4422                           
  4423                           ; BSR set to: 0
  4424                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 771:                     ++*f
      +                          mt;
  4425  010C6C  0060  F2E7  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4426  010C72  0060  F2EB  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4427  010C78  2ADE               	incf	postinc2,f,c
  4428  010C7A  0E00               	movlw	0
  4429  010C7C  22DD               	addwfc	postdec2,f,c
  4430  010C7E                     l11543:
  4431  010C7E  0ED0               	movlw	208
  4432  010C80  0100               	movlb	0	; () banked
  4433  010C82  6FBD               	movwf	??_vfpfcnvrt& (0+255),b
  4434  010C84  0EFF               	movlw	255
  4435  010C86  6FBE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  4436  010C88  0060  F2E7  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4437  010C8E  0060  F2EB  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4438  010C94  006F FF7B FFF6     	movff	postinc2,tblptrl
  4439  010C9A  006F FF77 FFF7     	movff	postdec2,tblptrh
  4440  010CA0                     	if	0	;tblptru may be non-zero
  4441  010CA0                     	endif
  4442  010CA0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4443  010CA0  0E00               	movlw	low (__mediumconst shr (0+16))
  4444  010CA2  6EF8               	movwf	tblptru,c
  4445  010CA4                     	endif
  4446  010CA4  0008               	tblrd		*
  4447  010CA6  50F5               	movf	tablat,w,c
  4448  010CA8  6FBF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  4449  010CAA  6BC0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  4450  010CAC  51BD               	movf	??_vfpfcnvrt& (0+255),w,b
  4451  010CAE  27BF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  4452  010CB0  51BE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4453  010CB2  23C0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  4454  010CB4  51C0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  4455  010CB6  E104               	bnz	u12530
  4456  010CB8  0E0A               	movlw	10
  4457  010CBA  5DBF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  4458  010CBC  A0D8               	btfss	status,0,c
  4459  010CBE  D7D6               	goto	l11539
  4460  010CC0                     u12530:
  4461                           
  4462                           ; BSR set to: 0
  4463                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 779:         ct[0] = (char)to
      +                          lower((int)(*fmt)[0]);
  4464  010CC0  0060  F2E7  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4465  010CC6  0060  F2EB  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4466  010CCC  006F FF7B FFF6     	movff	postinc2,tblptrl
  4467  010CD2  006F FF77 FFF7     	movff	postdec2,tblptrh
  4468  010CD8                     	if	0	;tblptru may be non-zero
  4469  010CD8                     	endif
  4470  010CD8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4471  010CD8  0E00               	movlw	low (__mediumconst shr (0+16))
  4472  010CDA  6EF8               	movwf	tblptru,c
  4473  010CDC                     	endif
  4474  010CDC  0008               	tblrd		*
  4475  010CDE  50F5               	movf	tablat,w,c
  4476  010CE0  6E1E               	movwf	tolower@c^0,c
  4477  010CE2  6A1F               	clrf	(tolower@c+1)^0,c
  4478  010CE4  ECC1  F0A0         	call	_tolower	;wreg free
  4479  010CE8  501E               	movf	?_tolower^0,w,c
  4480  010CEA  6FD0               	movwf	vfpfcnvrt@ct& (0+255),b
  4481                           
  4482                           ; BSR set to: 0
  4483                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 780:         if (ct[0]) {
  4484  010CEC  51D0               	movf	vfpfcnvrt@ct& (0+255),w,b
  4485  010CEE  B4D8               	btfsc	status,2,c
  4486  010CF0  D043               	goto	l11555
  4487                           
  4488                           ; BSR set to: 0
  4489                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 781:             ct[1] = (cha
      +                          r)tolower((int)(*fmt)[1]);
  4490  010CF2  0060  F2E7  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4491  010CF8  0060  F2EB  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4492  010CFE  006F FF78  F0BD    	movff	postinc2,??_vfpfcnvrt
  4493  010D04  006F FF74  F0BE    	movff	postdec2,??_vfpfcnvrt+1
  4494  010D0A  0E01               	movlw	1
  4495  010D0C  27BD               	addwf	??_vfpfcnvrt& (0+255),f,b
  4496  010D0E  0E00               	movlw	0
  4497  010D10  23BE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  4498  010D12  0060  F2F7  FFF6   	movff	??_vfpfcnvrt,tblptrl
  4499  010D18  0060  F2FB  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  4500  010D1E                     	if	0	;tblptru may be non-zero
  4501  010D1E                     	endif
  4502  010D1E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4503  010D1E  0E00               	movlw	low (__mediumconst shr (0+16))
  4504  010D20  6EF8               	movwf	tblptru,c
  4505  010D22                     	endif
  4506  010D22  0008               	tblrd		*
  4507  010D24  50F5               	movf	tablat,w,c
  4508  010D26  6E1E               	movwf	tolower@c^0,c
  4509  010D28  6A1F               	clrf	(tolower@c+1)^0,c
  4510  010D2A  ECC1  F0A0         	call	_tolower	;wreg free
  4511  010D2E  501E               	movf	?_tolower^0,w,c
  4512  010D30  6FD1               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  4513                           
  4514                           ; BSR set to: 0
  4515                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 782:             if (ct[1]) {
  4516  010D32  51D1               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  4517  010D34  B4D8               	btfsc	status,2,c
  4518  010D36  D020               	goto	l11555
  4519                           
  4520                           ; BSR set to: 0
  4521                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 783:                 ct[2] = 
      +                          (char)tolower((int)(*fmt)[2]);
  4522  010D38  0060  F2E7  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4523  010D3E  0060  F2EB  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4524  010D44  006F FF78  F0BD    	movff	postinc2,??_vfpfcnvrt
  4525  010D4A  006F FF74  F0BE    	movff	postdec2,??_vfpfcnvrt+1
  4526  010D50  0E02               	movlw	2
  4527  010D52  27BD               	addwf	??_vfpfcnvrt& (0+255),f,b
  4528  010D54  0E00               	movlw	0
  4529  010D56  23BE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  4530  010D58  0060  F2F7  FFF6   	movff	??_vfpfcnvrt,tblptrl
  4531  010D5E  0060  F2FB  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  4532  010D64                     	if	0	;tblptru may be non-zero
  4533  010D64                     	endif
  4534  010D64                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4535  010D64  0E00               	movlw	low (__mediumconst shr (0+16))
  4536  010D66  6EF8               	movwf	tblptru,c
  4537  010D68                     	endif
  4538  010D68  0008               	tblrd		*
  4539  010D6A  50F5               	movf	tablat,w,c
  4540  010D6C  6E1E               	movwf	tolower@c^0,c
  4541  010D6E  6A1F               	clrf	(tolower@c+1)^0,c
  4542  010D70  ECC1  F0A0         	call	_tolower	;wreg free
  4543  010D74  501E               	movf	?_tolower^0,w,c
  4544  010D76  6FD2               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  4545  010D78                     l11555:
  4546                           
  4547                           ; BSR set to: 0
  4548                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 942:         if (ct[0] == 'f'
      +                          ) {
  4549  010D78  0E66               	movlw	102
  4550  010D7A  19D0               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  4551  010D7C  A4D8               	btfss	status,2,c
  4552  010D7E  D052               	goto	l11567
  4553                           
  4554                           ; BSR set to: 0
  4555                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 944:             c = (*fmt)[0
      +                          ];
  4556  010D80  0060  F2E7  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4557  010D86  0060  F2EB  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4558  010D8C  006F FF7B FFF6     	movff	postinc2,tblptrl
  4559  010D92  006F FF77 FFF7     	movff	postdec2,tblptrh
  4560  010D98                     	if	0	;tblptru may be non-zero
  4561  010D98                     	endif
  4562  010D98                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4563  010D98  0E00               	movlw	low (__mediumconst shr (0+16))
  4564  010D9A  6EF8               	movwf	tblptru,c
  4565  010D9C                     	endif
  4566  010D9C  0008               	tblrd		*
  4567  010D9E  006F FFD4  F0CF    	movff	tablat,vfpfcnvrt@c
  4568                           
  4569                           ; BSR set to: 0
  4570                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 945:             ++*fmt;
  4571  010DA4  0060  F2E7  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4572  010DAA  0060  F2EB  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4573  010DB0  2ADE               	incf	postinc2,f,c
  4574  010DB2  0E00               	movlw	0
  4575  010DB4  22DD               	addwfc	postdec2,f,c
  4576                           
  4577                           ; BSR set to: 0
  4578                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 946:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  4579  010DB6  0060  F2EF  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  4580  010DBC  0060  F2F3  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  4581  010DC2  006F FF7C  F0BD    	movff	indf2,??_vfpfcnvrt
  4582  010DC8  0E04               	movlw	4
  4583  010DCA  26DE               	addwf	postinc2,f,c
  4584  010DCC  006F FF7C  F0BE    	movff	indf2,??_vfpfcnvrt+1
  4585  010DD2  0E00               	movlw	0
  4586  010DD4  22DD               	addwfc	postdec2,f,c
  4587  010DD6  0060  F2F7  FFD9   	movff	??_vfpfcnvrt,fsr2l
  4588  010DDC  0060  F2FB  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  4589  010DE2  006F FF78  F0D3    	movff	postinc2,vfpfcnvrt@f
  4590  010DE8  006F FF78  F0D4    	movff	postinc2,vfpfcnvrt@f+1
  4591  010DEE  006F FF78  F0D5    	movff	postinc2,vfpfcnvrt@f+2
  4592  010DF4  006F FF78  F0D6    	movff	postinc2,vfpfcnvrt@f+3
  4593  010DFA                     l11563:
  4594                           
  4595                           ; BSR set to: 0
  4596                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 948:             return efgto
      +                          a(fp, f, c);
  4597  010DFA  C0B7  F079         	movff	vfpfcnvrt@fp,efgtoa@fp
  4598  010DFE  C0B8  F07A         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  4599  010E02  C0D3  F07B         	movff	vfpfcnvrt@f,efgtoa@f
  4600  010E06  C0D4  F07C         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  4601  010E0A  C0D5  F07D         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  4602  010E0E  C0D6  F07E         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  4603  010E12  C0CF  F07F         	movff	vfpfcnvrt@c,efgtoa@c
  4604  010E16  EC00  F080         	call	_efgtoa	;wreg free
  4605  010E1A  C079  F0B7         	movff	?_efgtoa,?_vfpfcnvrt
  4606  010E1E  C07A  F0B8         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  4607  010E22  0012               	return	
  4608  010E24                     l11567:
  4609                           
  4610                           ; BSR set to: 0
  4611                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 950:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  4612  010E24  0ED0               	movlw	low vfpfcnvrt@ct
  4613  010E26  6E1C               	movwf	strncmp@_l^0,c
  4614  010E28  6A1D               	clrf	(strncmp@_l+1)^0,c
  4615  010E2A  0EEA               	movlw	low STR_25
  4616  010E2C  6E1E               	movwf	strncmp@_r^0,c
  4617  010E2E  0EFF               	movlw	high STR_25
  4618  010E30  6E1F               	movwf	(strncmp@_r+1)^0,c
  4619  010E32  0E00               	movlw	0
  4620  010E34  6E21               	movwf	(strncmp@n+1)^0,c
  4621  010E36  0E02               	movlw	2
  4622  010E38  6E20               	movwf	strncmp@n^0,c
  4623  010E3A  EC33  F093         	call	_strncmp	;wreg free
  4624  010E3E  501C               	movf	?_strncmp^0,w,c
  4625  010E40  101D               	iorwf	(?_strncmp+1)^0,w,c
  4626  010E42  A4D8               	btfss	status,2,c
  4627  010E44  D068               	goto	l11583
  4628                           
  4629                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 952:             c = (*fmt)[1
      +                          ];
  4630  010E46  0060  F2E7  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4631  010E4C  0060  F2EB  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4632  010E52  006F FF78  F0BD    	movff	postinc2,??_vfpfcnvrt
  4633  010E58  006F FF74  F0BE    	movff	postdec2,??_vfpfcnvrt+1
  4634  010E5E  0E01               	movlw	1
  4635  010E60  0100               	movlb	0	; () banked
  4636  010E62  27BD               	addwf	??_vfpfcnvrt& (0+255),f,b
  4637  010E64  0E00               	movlw	0
  4638  010E66  23BE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  4639  010E68  0060  F2F7  FFF6   	movff	??_vfpfcnvrt,tblptrl
  4640  010E6E  0060  F2FB  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  4641  010E74                     	if	0	;tblptru may be non-zero
  4642  010E74                     	endif
  4643  010E74                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4644  010E74  0E00               	movlw	low (__mediumconst shr (0+16))
  4645  010E76  6EF8               	movwf	tblptru,c
  4646  010E78                     	endif
  4647  010E78  0008               	tblrd		*
  4648  010E7A  006F FFD4  F0CF    	movff	tablat,vfpfcnvrt@c
  4649                           
  4650                           ; BSR set to: 0
  4651                           
  4652                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 953:             if ((0 && is
      +                          upper((int)(*fmt)[0]), ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  4653  010E80  0EBF               	movlw	191
  4654  010E82  6FBD               	movwf	??_vfpfcnvrt& (0+255),b
  4655  010E84  0EFF               	movlw	255
  4656  010E86  6FBE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  4657  010E88  0060  F2E7  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4658  010E8E  0060  F2EB  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4659  010E94  006F FF7B FFF6     	movff	postinc2,tblptrl
  4660  010E9A  006F FF77 FFF7     	movff	postdec2,tblptrh
  4661  010EA0                     	if	0	;tblptru may be non-zero
  4662  010EA0                     	endif
  4663  010EA0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4664  010EA0  0E00               	movlw	low (__mediumconst shr (0+16))
  4665  010EA2  6EF8               	movwf	tblptru,c
  4666  010EA4                     	endif
  4667  010EA4  0008               	tblrd		*
  4668  010EA6  50F5               	movf	tablat,w,c
  4669  010EA8  6FBF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  4670  010EAA  6BC0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  4671  010EAC  51BD               	movf	??_vfpfcnvrt& (0+255),w,b
  4672  010EAE  27BF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  4673  010EB0  51BE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4674  010EB2  23C0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  4675  010EB4  51C0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  4676  010EB6  E102               	bnz	l11577
  4677  010EB8  0E1A               	movlw	26
  4678  010EBA  5DBF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  4679  010EBC                     l11577:
  4680                           
  4681                           ; BSR set to: 0
  4682                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 956:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4683  010EBC  0060  F2EF  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  4684  010EC2  0060  F2F3  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  4685  010EC8  006F FF7C  F0BD    	movff	indf2,??_vfpfcnvrt
  4686  010ECE  0E04               	movlw	4
  4687  010ED0  26DE               	addwf	postinc2,f,c
  4688  010ED2  006F FF7C  F0BE    	movff	indf2,??_vfpfcnvrt+1
  4689  010ED8  0E00               	movlw	0
  4690  010EDA  22DD               	addwfc	postdec2,f,c
  4691  010EDC  0060  F2F7  FFD9   	movff	??_vfpfcnvrt,fsr2l
  4692  010EE2  0060  F2FB  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  4693  010EE8  006F FF78  F0D3    	movff	postinc2,vfpfcnvrt@f
  4694  010EEE  006F FF78  F0D4    	movff	postinc2,vfpfcnvrt@f+1
  4695  010EF4  006F FF78  F0D5    	movff	postinc2,vfpfcnvrt@f+2
  4696  010EFA  006F FF78  F0D6    	movff	postinc2,vfpfcnvrt@f+3
  4697                           
  4698                           ; BSR set to: 0
  4699                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 958:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  4700                           
  4701                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 957:             }
  4702  010F00  0E02               	movlw	2
  4703  010F02  0060  F2E7  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4704  010F08  0060  F2EB  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4705  010F0E  26DE               	addwf	postinc2,f,c
  4706  010F10  0E00               	movlw	0
  4707  010F12  22DD               	addwfc	postdec2,f,c
  4708  010F14  D772               	goto	l11563
  4709  010F16                     l11583:
  4710                           
  4711                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1171:         if (*fmt[0] == 
      +                          's' || !strncmp(*fmt, "lls", ((sizeof("lls")/sizeof("lls"[0]))-1))) {
  4712  010F16  0060  F2E7  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4713  010F1C  0060  F2EB  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4714  010F22  006F FF7B FFF6     	movff	postinc2,tblptrl
  4715  010F28  006F FF77 FFF7     	movff	postdec2,tblptrh
  4716  010F2E                     	if	0	;tblptru may be non-zero
  4717  010F2E                     	endif
  4718  010F2E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4719  010F2E  0E00               	movlw	low (__mediumconst shr (0+16))
  4720  010F30  6EF8               	movwf	tblptru,c
  4721  010F32                     	endif
  4722  010F32  0008               	tblrd		*
  4723  010F34  50F5               	movf	tablat,w,c
  4724  010F36  0A73               	xorlw	115
  4725  010F38  B4D8               	btfsc	status,2,c
  4726  010F3A  D01A               	goto	u12600
  4727  010F3C  0060  F2E7  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4728  010F42  0060  F2EB  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4729  010F48  006F FF78  F01C    	movff	postinc2,strncmp@_l
  4730  010F4E  006F FF74  F01D    	movff	postdec2,strncmp@_l+1
  4731  010F54  0EE6               	movlw	low STR_30
  4732  010F56  6E1E               	movwf	strncmp@_r^0,c
  4733  010F58  0EFF               	movlw	high STR_30
  4734  010F5A  6E1F               	movwf	(strncmp@_r+1)^0,c
  4735  010F5C  0E00               	movlw	0
  4736  010F5E  6E21               	movwf	(strncmp@n+1)^0,c
  4737  010F60  0E03               	movlw	3
  4738  010F62  6E20               	movwf	strncmp@n^0,c
  4739  010F64  EC33  F093         	call	_strncmp	;wreg free
  4740  010F68  501C               	movf	?_strncmp^0,w,c
  4741  010F6A  101D               	iorwf	(?_strncmp+1)^0,w,c
  4742  010F6C  A4D8               	btfss	status,2,c
  4743  010F6E  D052               	goto	l11601
  4744  010F70                     u12600:
  4745                           
  4746                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1173:    *fmt += *fmt[0] == '
      +                          s' ? 1 : ((sizeof("lls")/sizeof("lls"[0]))-1);
  4747  010F70  0060  F2E7  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4748  010F76  0060  F2EB  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4749  010F7C  006F FF7B FFF6     	movff	postinc2,tblptrl
  4750  010F82  006F FF77 FFF7     	movff	postdec2,tblptrh
  4751  010F88                     	if	0	;tblptru may be non-zero
  4752  010F88                     	endif
  4753  010F88                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4754  010F88  0E00               	movlw	low (__mediumconst shr (0+16))
  4755  010F8A  6EF8               	movwf	tblptru,c
  4756  010F8C                     	endif
  4757  010F8C  0008               	tblrd		*
  4758  010F8E  50F5               	movf	tablat,w,c
  4759  010F90  0A73               	xorlw	115
  4760  010F92  B4D8               	btfsc	status,2,c
  4761  010F94  D005               	goto	l11591
  4762  010F96  0E00               	movlw	0
  4763  010F98  0100               	movlb	0	; () banked
  4764  010F9A  6FCE               	movwf	(_vfpfcnvrt$3892+1)& (0+255),b
  4765  010F9C  0E03               	movlw	3
  4766  010F9E  D004               	goto	L2
  4767  010FA0                     l11591:
  4768  010FA0  0E00               	movlw	0
  4769  010FA2  0100               	movlb	0	; () banked
  4770  010FA4  6FCE               	movwf	(_vfpfcnvrt$3892+1)& (0+255),b
  4771  010FA6  0E01               	movlw	1
  4772  010FA8                     L2:
  4773  010FA8  6FCD               	movwf	_vfpfcnvrt$3892& (0+255),b
  4774                           
  4775                           ; BSR set to: 0
  4776  010FAA  0060  F2E7  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4777  010FB0  0060  F2EB  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4778  010FB6  51CD               	movf	_vfpfcnvrt$3892& (0+255),w,b
  4779  010FB8  26DE               	addwf	postinc2,f,c
  4780  010FBA  51CE               	movf	(_vfpfcnvrt$3892+1)& (0+255),w,b
  4781  010FBC  22DD               	addwfc	postdec2,f,c
  4782                           
  4783                           ; BSR set to: 0
  4784                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1174:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  4785  010FBE  0060  F2EF  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  4786  010FC4  0060  F2F3  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  4787  010FCA  006F FF7C  F0BD    	movff	indf2,??_vfpfcnvrt
  4788  010FD0  0E02               	movlw	2
  4789  010FD2  26DE               	addwf	postinc2,f,c
  4790  010FD4  006F FF7C  F0BE    	movff	indf2,??_vfpfcnvrt+1
  4791  010FDA  0E00               	movlw	0
  4792  010FDC  22DD               	addwfc	postdec2,f,c
  4793  010FDE  0060  F2F7  FFD9   	movff	??_vfpfcnvrt,fsr2l
  4794  010FE4  0060  F2FB  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  4795  010FEA  006F FF78  F0C9    	movff	postinc2,vfpfcnvrt@cp
  4796  010FF0  006F FF74  F0CA    	movff	postdec2,vfpfcnvrt@cp+1
  4797                           
  4798                           ; BSR set to: 0
  4799                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1176:             return stoa
      +                          (fp, cp);
  4800  010FF6  C0B7  F023         	movff	vfpfcnvrt@fp,stoa@fp
  4801  010FFA  C0B8  F024         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  4802  010FFE  C0C9  F025         	movff	vfpfcnvrt@cp,stoa@s
  4803  011002  C0CA  F026         	movff	vfpfcnvrt@cp+1,stoa@s+1
  4804  011006  EC8D  F094         	call	_stoa	;wreg free
  4805  01100A  C023  F0B7         	movff	?_stoa,?_vfpfcnvrt
  4806  01100E  C024  F0B8         	movff	?_stoa+1,?_vfpfcnvrt+1
  4807  011012  0012               	return	
  4808  011014                     l11601:
  4809                           
  4810                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1204:         if (*fmt[0] == 
      +                          'u') {
  4811  011014  0060  F2E7  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4812  01101A  0060  F2EB  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4813  011020  006F FF7B FFF6     	movff	postinc2,tblptrl
  4814  011026  006F FF77 FFF7     	movff	postdec2,tblptrh
  4815  01102C                     	if	0	;tblptru may be non-zero
  4816  01102C                     	endif
  4817  01102C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4818  01102C  0E00               	movlw	low (__mediumconst shr (0+16))
  4819  01102E  6EF8               	movwf	tblptru,c
  4820  011030                     	endif
  4821  011030  0008               	tblrd		*
  4822  011032  50F5               	movf	tablat,w,c
  4823  011034  0A75               	xorlw	117
  4824  011036  A4D8               	btfss	status,2,c
  4825  011038  D04B               	goto	l11609
  4826                           
  4827                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1206:             ++*fmt;
  4828  01103A  0060  F2E7  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4829  011040  0060  F2EB  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4830  011046  2ADE               	incf	postinc2,f,c
  4831  011048  0E00               	movlw	0
  4832  01104A  22DD               	addwfc	postdec2,f,c
  4833                           
  4834                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1207:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  4835  01104C  0060  F2EF  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  4836  011052  0060  F2F3  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  4837  011058  006F FF7C  F0BD    	movff	indf2,??_vfpfcnvrt
  4838  01105E  0E02               	movlw	2
  4839  011060  26DE               	addwf	postinc2,f,c
  4840  011062  006F FF7C  F0BE    	movff	indf2,??_vfpfcnvrt+1
  4841  011068  0E00               	movlw	0
  4842  01106A  22DD               	addwfc	postdec2,f,c
  4843  01106C  0060  F2F7  FFD9   	movff	??_vfpfcnvrt,fsr2l
  4844  011072  0060  F2FB  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  4845  011078  006F FF78  F0BF    	movff	postinc2,??_vfpfcnvrt+2
  4846  01107E  006F FF74  F0C0    	movff	postdec2,??_vfpfcnvrt+3
  4847  011084  C0BF  F0C1         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4848  011088  C0C0  F0C2         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4849  01108C  0100               	movlb	0	; () banked
  4850  01108E  6BC3               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  4851  011090  6BC4               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  4852  011092  6BC5               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  4853  011094  6BC6               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  4854  011096  6BC7               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  4855  011098  6BC8               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  4856                           
  4857                           ; BSR set to: 0
  4858                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1209:             return utoa
      +                          (fp, llu);
  4859  01109A  C0B7  F064         	movff	vfpfcnvrt@fp,utoa@fp
  4860  01109E  C0B8  F065         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  4861  0110A2  C0C1  F066         	movff	vfpfcnvrt@llu,utoa@d
  4862  0110A6  C0C2  F067         	movff	vfpfcnvrt@llu+1,utoa@d+1
  4863  0110AA  C0C3  F068         	movff	vfpfcnvrt@llu+2,utoa@d+2
  4864  0110AE  C0C4  F069         	movff	vfpfcnvrt@llu+3,utoa@d+3
  4865  0110B2  C0C5  F06A         	movff	vfpfcnvrt@llu+4,utoa@d+4
  4866  0110B6  C0C6  F06B         	movff	vfpfcnvrt@llu+5,utoa@d+5
  4867  0110BA  C0C7  F06C         	movff	vfpfcnvrt@llu+6,utoa@d+6
  4868  0110BE  C0C8  F06D         	movff	vfpfcnvrt@llu+7,utoa@d+7
  4869  0110C2  EC86  F091         	call	_utoa	;wreg free
  4870  0110C6  C064  F0B7         	movff	?_utoa,?_vfpfcnvrt
  4871  0110CA  C065  F0B8         	movff	?_utoa+1,?_vfpfcnvrt+1
  4872  0110CE  0012               	return	
  4873  0110D0                     l11609:
  4874                           
  4875                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1372:         if ((*fmt)[0] =
      +                          = '%') {
  4876  0110D0  0060  F2E7  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4877  0110D6  0060  F2EB  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4878  0110DC  006F FF7B FFF6     	movff	postinc2,tblptrl
  4879  0110E2  006F FF77 FFF7     	movff	postdec2,tblptrh
  4880  0110E8                     	if	0	;tblptru may be non-zero
  4881  0110E8                     	endif
  4882  0110E8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4883  0110E8  0E00               	movlw	low (__mediumconst shr (0+16))
  4884  0110EA  6EF8               	movwf	tblptru,c
  4885  0110EC                     	endif
  4886  0110EC  0008               	tblrd		*
  4887  0110EE  50F5               	movf	tablat,w,c
  4888  0110F0  0A25               	xorlw	37
  4889  0110F2  A4D8               	btfss	status,2,c
  4890  0110F4  D019               	goto	l11619
  4891                           
  4892                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1373:             ++*fmt;
  4893  0110F6  0060  F2E7  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4894  0110FC  0060  F2EB  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4895  011102  2ADE               	incf	postinc2,f,c
  4896  011104  0E00               	movlw	0
  4897  011106  22DD               	addwfc	postdec2,f,c
  4898                           
  4899                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1374:             fputc((int)
      +                          '%', fp);
  4900  011108  0E00               	movlw	0
  4901  01110A  6E1B               	movwf	(fputc@c+1)^0,c
  4902  01110C  0E25               	movlw	37
  4903  01110E  6E1A               	movwf	fputc@c^0,c
  4904  011110  C0B7  F01C         	movff	vfpfcnvrt@fp,fputc@fp
  4905  011114  C0B8  F01D         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4906  011118  EC88  F09A         	call	_fputc	;wreg free
  4907  01111C                     l11615:
  4908                           
  4909                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1375:             return 1;
  4910  01111C  0E00               	movlw	0
  4911  01111E  0100               	movlb	0	; () banked
  4912  011120  6FB8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  4913  011122  0E01               	movlw	1
  4914  011124  6FB7               	movwf	?_vfpfcnvrt& (0+255),b
  4915  011126  0012               	return	
  4916  011128                     l11619:
  4917                           
  4918                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1379:         ++*fmt;
  4919  011128  0060  F2E7  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4920  01112E  0060  F2EB  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4921  011134  2ADE               	incf	postinc2,f,c
  4922  011136  0E00               	movlw	0
  4923  011138  22DD               	addwfc	postdec2,f,c
  4924                           
  4925                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1380:         return 0;
  4926  01113A  0E00               	movlw	0
  4927  01113C  0100               	movlb	0	; () banked
  4928  01113E  6FB8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  4929  011140  0E00               	movlw	0
  4930  011142  6FB7               	movwf	?_vfpfcnvrt& (0+255),b
  4931  011144  0012               	return	
  4932  011146                     l11625:
  4933                           
  4934                           ; BSR set to: 0
  4935                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1384:     fputc((int)(*fmt)[0
      +                          ], fp);
  4936  011146  0060  F2E7  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4937  01114C  0060  F2EB  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4938  011152  006F FF7B FFF6     	movff	postinc2,tblptrl
  4939  011158  006F FF77 FFF7     	movff	postdec2,tblptrh
  4940  01115E                     	if	0	;tblptru may be non-zero
  4941  01115E                     	endif
  4942  01115E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4943  01115E  0E00               	movlw	low (__mediumconst shr (0+16))
  4944  011160  6EF8               	movwf	tblptru,c
  4945  011162                     	endif
  4946  011162  0008               	tblrd		*
  4947  011164  50F5               	movf	tablat,w,c
  4948  011166  6E1A               	movwf	fputc@c^0,c
  4949  011168  6A1B               	clrf	(fputc@c+1)^0,c
  4950  01116A  C0B7  F01C         	movff	vfpfcnvrt@fp,fputc@fp
  4951  01116E  C0B8  F01D         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4952  011172  EC88  F09A         	call	_fputc	;wreg free
  4953                           
  4954                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1385:     ++*fmt;
  4955  011176  0060  F2E7  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4956  01117C  0060  F2EB  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4957  011182  2ADE               	incf	postinc2,f,c
  4958  011184  0E00               	movlw	0
  4959  011186  22DD               	addwfc	postdec2,f,c
  4960  011188  D7C9               	goto	l11615
  4961  01118A                     __end_of_vfpfcnvrt:
  4962                           	callstack 0
  4963                           
  4964 ;; *************** function _utoa *****************
  4965 ;; Defined at:
  4966 ;;		line 615 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  4967 ;; Parameters:    Size  Location     Type
  4968 ;;  fp              2    4[BANK0 ] PTR struct _IO_FILE
  4969 ;;		 -> sprintf@f(11), NULL(0), 
  4970 ;;  d               8    6[BANK0 ] unsigned long long 
  4971 ;; Auto vars:     Size  Location     Type
  4972 ;;  n               8   26[BANK0 ] unsigned long long 
  4973 ;;  i               2   34[BANK0 ] int 
  4974 ;;  w               2   24[BANK0 ] int 
  4975 ;;  p               2   22[BANK0 ] int 
  4976 ;; Return value:  Size  Location     Type
  4977 ;;                  2    4[BANK0 ] int 
  4978 ;; Registers used:
  4979 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4980 ;; Tracked objects:
  4981 ;;		On entry : 3F/0
  4982 ;;		On exit  : 3F/0
  4983 ;;		Unchanged: 0/0
  4984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4985 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4986 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4987 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4988 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4989 ;;Total ram usage:       32 bytes
  4990 ;; Hardware stack levels used: 1
  4991 ;; Hardware stack levels required when called: 12
  4992 ;; This function calls:
  4993 ;;		___lodiv
  4994 ;;		___lomod
  4995 ;;		_pad
  4996 ;; This function is called by:
  4997 ;;		_vfpfcnvrt
  4998 ;; This function uses a non-reentrant model
  4999 ;;
  5000                           
  5001                           	psect	text7
  5002  01230C                     __ptext7:
  5003                           	callstack 0
  5004  01230C                     _utoa:
  5005                           	callstack 15
  5006                           
  5007                           ; BSR set to: 0
  5008                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 615: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 616: {
      +                          ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 617:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 618:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 621:     if (!(prec < 0)) {
  5009                           
  5010                           ; BSR set to: 0
  5011                           ;incstack = 0
  5012  01230C  AFF8               	btfss	(_prec+1)& (0+255),7,b
  5013                           
  5014                           ; BSR set to: 0
  5015                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 622:         flags &= ~(1 << 
      +                          1);
  5016  01230E  923A               	bcf	_flags^0,1,c
  5017                           
  5018                           ; BSR set to: 0
  5019                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 624:     p = (0 < prec) ? pre
      +                          c : 1;
  5020  012310  BFF8               	btfsc	(_prec+1)& (0+255),7,b
  5021  012312  D005               	goto	u11940
  5022  012314  51F8               	movf	(_prec+1)& (0+255),w,b
  5023  012316  E108               	bnz	l2477
  5024  012318  05F7               	decf	_prec& (0+255),w,b
  5025  01231A  B0D8               	btfsc	status,0,c
  5026  01231C  D005               	goto	l2477
  5027  01231E                     u11940:
  5028                           
  5029                           ; BSR set to: 0
  5030  01231E  0E00               	movlw	0
  5031  012320  6F77               	movwf	(utoa@p+1)& (0+255),b
  5032  012322  0E01               	movlw	1
  5033  012324  6F76               	movwf	utoa@p& (0+255),b
  5034  012326  D004               	goto	l2479
  5035  012328                     l2477:
  5036                           
  5037                           ; BSR set to: 0
  5038  012328  C0F7  F076         	movff	_prec,utoa@p
  5039  01232C  C0F8  F077         	movff	_prec+1,utoa@p+1
  5040  012330                     l2479:
  5041                           
  5042                           ; BSR set to: 0
  5043                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 625:     w = width;
  5044  012330  C0F5  F078         	movff	_width,utoa@w
  5045  012334  C0F6  F079         	movff	_width+1,utoa@w+1
  5046                           
  5047                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 628:     n = d;
  5048  012338  C066  F07A         	movff	utoa@d,utoa@n
  5049  01233C  C067  F07B         	movff	utoa@d+1,utoa@n+1
  5050  012340  C068  F07C         	movff	utoa@d+2,utoa@n+2
  5051  012344  C069  F07D         	movff	utoa@d+3,utoa@n+3
  5052  012348  C06A  F07E         	movff	utoa@d+4,utoa@n+4
  5053  01234C  C06B  F07F         	movff	utoa@d+5,utoa@n+5
  5054  012350  C06C  F080         	movff	utoa@d+6,utoa@n+6
  5055  012354  C06D  F081         	movff	utoa@d+7,utoa@n+7
  5056                           
  5057                           ; BSR set to: 0
  5058                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 629:     i = sizeof(dbuf) - 1
      +                          ;
  5059  012358  0E00               	movlw	0
  5060  01235A  6F83               	movwf	(utoa@i+1)& (0+255),b
  5061  01235C  0E4F               	movlw	79
  5062  01235E  6F82               	movwf	utoa@i& (0+255),b
  5063                           
  5064                           ; BSR set to: 0
  5065                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 630:     dbuf[i] = '\0';
  5066  012360  0E00               	movlw	0
  5067  012362  0101               	movlb	1	; () banked
  5068  012364  6F95               	movwf	(_dbuf+79)& (0+255),b
  5069                           
  5070                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 631:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  5071  012366  D076               	goto	l10879
  5072  012368                     l10869:
  5073                           
  5074                           ; BSR set to: 0
  5075                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 632:         --i;
  5076  012368  0782               	decf	utoa@i& (0+255),f,b
  5077  01236A  A0D8               	btfss	status,0,c
  5078  01236C  0783               	decf	(utoa@i+1)& (0+255),f,b
  5079                           
  5080                           ; BSR set to: 0
  5081                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 633:         dbuf[i] = '0' + 
      +                          (n % 10);
  5082  01236E  0E46               	movlw	low _dbuf
  5083  012370  2582               	addwf	utoa@i& (0+255),w,b
  5084  012372  6ED9               	movwf	fsr2l,c
  5085  012374  0E01               	movlw	high _dbuf
  5086  012376  2183               	addwfc	(utoa@i+1)& (0+255),w,b
  5087  012378  6EDA               	movwf	fsr2h,c
  5088  01237A  C07A  F018         	movff	utoa@n,___lomod@dividend
  5089  01237E  C07B  F019         	movff	utoa@n+1,___lomod@dividend+1
  5090  012382  C07C  F01A         	movff	utoa@n+2,___lomod@dividend+2
  5091  012386  C07D  F01B         	movff	utoa@n+3,___lomod@dividend+3
  5092  01238A  C07E  F01C         	movff	utoa@n+4,___lomod@dividend+4
  5093  01238E  C07F  F01D         	movff	utoa@n+5,___lomod@dividend+5
  5094  012392  C080  F01E         	movff	utoa@n+6,___lomod@dividend+6
  5095  012396  C081  F01F         	movff	utoa@n+7,___lomod@dividend+7
  5096  01239A  0E0A               	movlw	10
  5097  01239C  6E20               	movwf	___lomod@divisor^0,c
  5098  01239E  0E00               	movlw	0
  5099  0123A0  6E21               	movwf	(___lomod@divisor+1)^0,c
  5100  0123A2  0E00               	movlw	0
  5101  0123A4  6E22               	movwf	(___lomod@divisor+2)^0,c
  5102  0123A6  0E00               	movlw	0
  5103  0123A8  6E23               	movwf	(___lomod@divisor+3)^0,c
  5104  0123AA  0E00               	movlw	0
  5105  0123AC  6E24               	movwf	(___lomod@divisor+4)^0,c
  5106  0123AE  0E00               	movlw	0
  5107  0123B0  6E25               	movwf	(___lomod@divisor+5)^0,c
  5108  0123B2  0E00               	movlw	0
  5109  0123B4  6E26               	movwf	(___lomod@divisor+6)^0,c
  5110  0123B6  0E00               	movlw	0
  5111  0123B8  6E27               	movwf	(___lomod@divisor+7)^0,c
  5112  0123BA  ECE2  F09A         	call	___lomod	;wreg free
  5113  0123BE  C018  F06E         	movff	?___lomod,??_utoa
  5114  0123C2  C019  F06F         	movff	?___lomod+1,??_utoa+1
  5115  0123C6  C01A  F070         	movff	?___lomod+2,??_utoa+2
  5116  0123CA  C01B  F071         	movff	?___lomod+3,??_utoa+3
  5117  0123CE  C01C  F072         	movff	?___lomod+4,??_utoa+4
  5118  0123D2  C01D  F073         	movff	?___lomod+5,??_utoa+5
  5119  0123D6  C01E  F074         	movff	?___lomod+6,??_utoa+6
  5120  0123DA  C01F  F075         	movff	?___lomod+7,??_utoa+7
  5121  0123DE  516E               	movf	??_utoa& (0+255),w,b
  5122  0123E0  0F30               	addlw	48
  5123  0123E2  6EDF               	movwf	indf2,c
  5124                           
  5125                           ; BSR set to: 0
  5126                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 634:         --p;
  5127  0123E4  0776               	decf	utoa@p& (0+255),f,b
  5128  0123E6  A0D8               	btfss	status,0,c
  5129  0123E8  0777               	decf	(utoa@p+1)& (0+255),f,b
  5130                           
  5131                           ; BSR set to: 0
  5132                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 635:         --w;
  5133  0123EA  0778               	decf	utoa@w& (0+255),f,b
  5134  0123EC  A0D8               	btfss	status,0,c
  5135  0123EE  0779               	decf	(utoa@w+1)& (0+255),f,b
  5136                           
  5137                           ; BSR set to: 0
  5138                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 636:         n = n / 10;
  5139  0123F0  C07A  F018         	movff	utoa@n,___lodiv@dividend
  5140  0123F4  C07B  F019         	movff	utoa@n+1,___lodiv@dividend+1
  5141  0123F8  C07C  F01A         	movff	utoa@n+2,___lodiv@dividend+2
  5142  0123FC  C07D  F01B         	movff	utoa@n+3,___lodiv@dividend+3
  5143  012400  C07E  F01C         	movff	utoa@n+4,___lodiv@dividend+4
  5144  012404  C07F  F01D         	movff	utoa@n+5,___lodiv@dividend+5
  5145  012408  C080  F01E         	movff	utoa@n+6,___lodiv@dividend+6
  5146  01240C  C081  F01F         	movff	utoa@n+7,___lodiv@dividend+7
  5147  012410  0E0A               	movlw	10
  5148  012412  6E20               	movwf	___lodiv@divisor^0,c
  5149  012414  0E00               	movlw	0
  5150  012416  6E21               	movwf	(___lodiv@divisor+1)^0,c
  5151  012418  0E00               	movlw	0
  5152  01241A  6E22               	movwf	(___lodiv@divisor+2)^0,c
  5153  01241C  0E00               	movlw	0
  5154  01241E  6E23               	movwf	(___lodiv@divisor+3)^0,c
  5155  012420  0E00               	movlw	0
  5156  012422  6E24               	movwf	(___lodiv@divisor+4)^0,c
  5157  012424  0E00               	movlw	0
  5158  012426  6E25               	movwf	(___lodiv@divisor+5)^0,c
  5159  012428  0E00               	movlw	0
  5160  01242A  6E26               	movwf	(___lodiv@divisor+6)^0,c
  5161  01242C  0E00               	movlw	0
  5162  01242E  6E27               	movwf	(___lodiv@divisor+7)^0,c
  5163  012430  EC83  F097         	call	___lodiv	;wreg free
  5164  012434  C018  F07A         	movff	?___lodiv,utoa@n
  5165  012438  C019  F07B         	movff	?___lodiv+1,utoa@n+1
  5166  01243C  C01A  F07C         	movff	?___lodiv+2,utoa@n+2
  5167  012440  C01B  F07D         	movff	?___lodiv+3,utoa@n+3
  5168  012444  C01C  F07E         	movff	?___lodiv+4,utoa@n+4
  5169  012448  C01D  F07F         	movff	?___lodiv+5,utoa@n+5
  5170  01244C  C01E  F080         	movff	?___lodiv+6,utoa@n+6
  5171  012450  C01F  F081         	movff	?___lodiv+7,utoa@n+7
  5172  012454                     l10879:
  5173                           
  5174                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 631:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  5175  012454  0100               	movlb	0	; () banked
  5176  012456  5182               	movf	utoa@i& (0+255),w,b
  5177  012458  1183               	iorwf	(utoa@i+1)& (0+255),w,b
  5178  01245A  B4D8               	btfsc	status,2,c
  5179  01245C  D01A               	goto	u11990
  5180                           
  5181                           ; BSR set to: 0
  5182  01245E  517A               	movf	utoa@n& (0+255),w,b
  5183  012460  117B               	iorwf	(utoa@n+1)& (0+255),w,b
  5184  012462  117C               	iorwf	(utoa@n+2)& (0+255),w,b
  5185  012464  117D               	iorwf	(utoa@n+3)& (0+255),w,b
  5186  012466  117E               	iorwf	(utoa@n+4)& (0+255),w,b
  5187  012468  117F               	iorwf	(utoa@n+5)& (0+255),w,b
  5188  01246A  1180               	iorwf	(utoa@n+6)& (0+255),w,b
  5189  01246C  1181               	iorwf	(utoa@n+7)& (0+255),w,b
  5190  01246E  A4D8               	btfss	status,2,c
  5191  012470  D77B               	goto	l10869
  5192                           
  5193                           ; BSR set to: 0
  5194  012472  BF77               	btfsc	(utoa@p+1)& (0+255),7,b
  5195  012474  D005               	goto	u11970
  5196  012476  5177               	movf	(utoa@p+1)& (0+255),w,b
  5197  012478  E102               	bnz	u11971
  5198  01247A  0576               	decf	utoa@p& (0+255),w,b
  5199  01247C  B0D8               	btfsc	status,0,c
  5200  01247E                     u11971:
  5201  01247E  D774               	goto	l10869
  5202  012480                     u11970:
  5203                           
  5204                           ; BSR set to: 0
  5205  012480  BF79               	btfsc	(utoa@w+1)& (0+255),7,b
  5206  012482  D007               	goto	u11990
  5207  012484  5179               	movf	(utoa@w+1)& (0+255),w,b
  5208  012486  E103               	bnz	u11980
  5209  012488  0578               	decf	utoa@w& (0+255),w,b
  5210  01248A  A0D8               	btfss	status,0,c
  5211  01248C  D002               	goto	u11990
  5212  01248E                     u11980:
  5213                           
  5214                           ; BSR set to: 0
  5215  01248E  B23A               	btfsc	_flags^0,1,c
  5216  012490  D76B               	goto	l10869
  5217  012492                     u11990:
  5218                           
  5219                           ; BSR set to: 0
  5220                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 640:     return pad(fp, &dbuf
      +                          [i], w);
  5221  012492  C064  F02C         	movff	utoa@fp,pad@fp
  5222  012496  C065  F02D         	movff	utoa@fp+1,pad@fp+1
  5223  01249A  0E46               	movlw	low _dbuf
  5224  01249C  2582               	addwf	utoa@i& (0+255),w,b
  5225  01249E  6E2E               	movwf	pad@buf^0,c
  5226  0124A0  0E01               	movlw	high _dbuf
  5227  0124A2  2183               	addwfc	(utoa@i+1)& (0+255),w,b
  5228  0124A4  6E2F               	movwf	(pad@buf+1)^0,c
  5229  0124A6  C078  F030         	movff	utoa@w,pad@p
  5230  0124AA  C079  F031         	movff	utoa@w+1,pad@p+1
  5231  0124AE  EC89  F09B         	call	_pad	;wreg free
  5232  0124B2  C02C  F064         	movff	?_pad,?_utoa
  5233  0124B6  C02D  F065         	movff	?_pad+1,?_utoa+1
  5234                           
  5235                           ; BSR set to: 0
  5236  0124BA  0012               	return		;funcret
  5237  0124BC                     __end_of_utoa:
  5238                           	callstack 0
  5239                           
  5240 ;; *************** function ___lomod *****************
  5241 ;; Defined at:
  5242 ;;		line 9 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/lomod.c"
  5243 ;; Parameters:    Size  Location     Type
  5244 ;;  dividend        8   23[COMRAM] unsigned long long 
  5245 ;;  divisor         8   31[COMRAM] unsigned long long 
  5246 ;; Auto vars:     Size  Location     Type
  5247 ;;  counter         1   39[COMRAM] unsigned char 
  5248 ;; Return value:  Size  Location     Type
  5249 ;;                  8   23[COMRAM] unsigned long long 
  5250 ;; Registers used:
  5251 ;;		wreg, status,2, status,0
  5252 ;; Tracked objects:
  5253 ;;		On entry : 3F/0
  5254 ;;		On exit  : 3F/0
  5255 ;;		Unchanged: 3F/0
  5256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5257 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5258 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5260 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5261 ;;Total ram usage:       17 bytes
  5262 ;; Hardware stack levels used: 1
  5263 ;; Hardware stack levels required when called: 7
  5264 ;; This function calls:
  5265 ;;		Nothing
  5266 ;; This function is called by:
  5267 ;;		_utoa
  5268 ;; This function uses a non-reentrant model
  5269 ;;
  5270                           
  5271                           	psect	text8
  5272  0135C4                     __ptext8:
  5273                           	callstack 0
  5274  0135C4                     ___lomod:
  5275                           	callstack 19
  5276                           
  5277                           ; BSR set to: 0
  5278                           
  5279                           ; BSR set to: 0
  5280                           ;incstack = 0
  5281  0135C4  5020               	movf	___lomod@divisor^0,w,c
  5282  0135C6  1021               	iorwf	(___lomod@divisor+1)^0,w,c
  5283  0135C8  1022               	iorwf	(___lomod@divisor+2)^0,w,c
  5284  0135CA  1023               	iorwf	(___lomod@divisor+3)^0,w,c
  5285  0135CC  1024               	iorwf	(___lomod@divisor+4)^0,w,c
  5286  0135CE  1025               	iorwf	(___lomod@divisor+5)^0,w,c
  5287  0135D0  1026               	iorwf	(___lomod@divisor+6)^0,w,c
  5288  0135D2  1027               	iorwf	(___lomod@divisor+7)^0,w,c
  5289  0135D4  B4D8               	btfsc	status,2,c
  5290  0135D6  D03C               	goto	l2070
  5291                           
  5292                           ; BSR set to: 0
  5293  0135D8  0E01               	movlw	1
  5294  0135DA  6E28               	movwf	___lomod@counter^0,c
  5295  0135DC  D00A               	goto	l10367
  5296  0135DE                     l10365:
  5297                           
  5298                           ; BSR set to: 0
  5299  0135DE  90D8               	bcf	status,0,c
  5300  0135E0  3620               	rlcf	___lomod@divisor^0,f,c
  5301  0135E2  3621               	rlcf	(___lomod@divisor+1)^0,f,c
  5302  0135E4  3622               	rlcf	(___lomod@divisor+2)^0,f,c
  5303  0135E6  3623               	rlcf	(___lomod@divisor+3)^0,f,c
  5304  0135E8  3624               	rlcf	(___lomod@divisor+4)^0,f,c
  5305  0135EA  3625               	rlcf	(___lomod@divisor+5)^0,f,c
  5306  0135EC  3626               	rlcf	(___lomod@divisor+6)^0,f,c
  5307  0135EE  3627               	rlcf	(___lomod@divisor+7)^0,f,c
  5308  0135F0  2A28               	incf	___lomod@counter^0,f,c
  5309  0135F2                     l10367:
  5310                           
  5311                           ; BSR set to: 0
  5312  0135F2  AE27               	btfss	(___lomod@divisor+7)^0,7,c
  5313  0135F4  D7F4               	goto	l10365
  5314  0135F6                     u10930:
  5315                           
  5316                           ; BSR set to: 0
  5317  0135F6  5020               	movf	___lomod@divisor^0,w,c
  5318  0135F8  5C18               	subwf	___lomod@dividend^0,w,c
  5319  0135FA  5021               	movf	(___lomod@divisor+1)^0,w,c
  5320  0135FC  5819               	subwfb	(___lomod@dividend+1)^0,w,c
  5321  0135FE  5022               	movf	(___lomod@divisor+2)^0,w,c
  5322  013600  581A               	subwfb	(___lomod@dividend+2)^0,w,c
  5323  013602  5023               	movf	(___lomod@divisor+3)^0,w,c
  5324  013604  581B               	subwfb	(___lomod@dividend+3)^0,w,c
  5325  013606  5024               	movf	(___lomod@divisor+4)^0,w,c
  5326  013608  581C               	subwfb	(___lomod@dividend+4)^0,w,c
  5327  01360A  5025               	movf	(___lomod@divisor+5)^0,w,c
  5328  01360C  581D               	subwfb	(___lomod@dividend+5)^0,w,c
  5329  01360E  5026               	movf	(___lomod@divisor+6)^0,w,c
  5330  013610  581E               	subwfb	(___lomod@dividend+6)^0,w,c
  5331  013612  5027               	movf	(___lomod@divisor+7)^0,w,c
  5332  013614  581F               	subwfb	(___lomod@dividend+7)^0,w,c
  5333  013616  A0D8               	btfss	status,0,c
  5334  013618  D010               	goto	l10373
  5335                           
  5336                           ; BSR set to: 0
  5337  01361A  5020               	movf	___lomod@divisor^0,w,c
  5338  01361C  5E18               	subwf	___lomod@dividend^0,f,c
  5339  01361E  5021               	movf	(___lomod@divisor+1)^0,w,c
  5340  013620  5A19               	subwfb	(___lomod@dividend+1)^0,f,c
  5341  013622  5022               	movf	(___lomod@divisor+2)^0,w,c
  5342  013624  5A1A               	subwfb	(___lomod@dividend+2)^0,f,c
  5343  013626  5023               	movf	(___lomod@divisor+3)^0,w,c
  5344  013628  5A1B               	subwfb	(___lomod@dividend+3)^0,f,c
  5345  01362A  5024               	movf	(___lomod@divisor+4)^0,w,c
  5346  01362C  5A1C               	subwfb	(___lomod@dividend+4)^0,f,c
  5347  01362E  5025               	movf	(___lomod@divisor+5)^0,w,c
  5348  013630  5A1D               	subwfb	(___lomod@dividend+5)^0,f,c
  5349  013632  5026               	movf	(___lomod@divisor+6)^0,w,c
  5350  013634  5A1E               	subwfb	(___lomod@dividend+6)^0,f,c
  5351  013636  5027               	movf	(___lomod@divisor+7)^0,w,c
  5352  013638  5A1F               	subwfb	(___lomod@dividend+7)^0,f,c
  5353  01363A                     l10373:
  5354                           
  5355                           ; BSR set to: 0
  5356  01363A  90D8               	bcf	status,0,c
  5357  01363C  3227               	rrcf	(___lomod@divisor+7)^0,f,c
  5358  01363E  3226               	rrcf	(___lomod@divisor+6)^0,f,c
  5359  013640  3225               	rrcf	(___lomod@divisor+5)^0,f,c
  5360  013642  3224               	rrcf	(___lomod@divisor+4)^0,f,c
  5361  013644  3223               	rrcf	(___lomod@divisor+3)^0,f,c
  5362  013646  3222               	rrcf	(___lomod@divisor+2)^0,f,c
  5363  013648  3221               	rrcf	(___lomod@divisor+1)^0,f,c
  5364  01364A  3220               	rrcf	___lomod@divisor^0,f,c
  5365                           
  5366                           ; BSR set to: 0
  5367  01364C  2E28               	decfsz	___lomod@counter^0,f,c
  5368  01364E  D7D3               	goto	u10930
  5369  013650                     l2070:
  5370                           
  5371                           ; BSR set to: 0
  5372  013650  C018  F018         	movff	___lomod@dividend,?___lomod
  5373  013654  C019  F019         	movff	___lomod@dividend+1,?___lomod+1
  5374  013658  C01A  F01A         	movff	___lomod@dividend+2,?___lomod+2
  5375  01365C  C01B  F01B         	movff	___lomod@dividend+3,?___lomod+3
  5376  013660  C01C  F01C         	movff	___lomod@dividend+4,?___lomod+4
  5377  013664  C01D  F01D         	movff	___lomod@dividend+5,?___lomod+5
  5378  013668  C01E  F01E         	movff	___lomod@dividend+6,?___lomod+6
  5379  01366C  C01F  F01F         	movff	___lomod@dividend+7,?___lomod+7
  5380                           
  5381                           ; BSR set to: 0
  5382  013670  0012               	return		;funcret
  5383  013672                     __end_of___lomod:
  5384                           	callstack 0
  5385                           
  5386 ;; *************** function ___lodiv *****************
  5387 ;; Defined at:
  5388 ;;		line 9 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/lodiv.c"
  5389 ;; Parameters:    Size  Location     Type
  5390 ;;  dividend        8   23[COMRAM] unsigned long long 
  5391 ;;  divisor         8   31[COMRAM] unsigned long long 
  5392 ;; Auto vars:     Size  Location     Type
  5393 ;;  quotient        8   39[COMRAM] unsigned long long 
  5394 ;;  counter         1   47[COMRAM] unsigned char 
  5395 ;; Return value:  Size  Location     Type
  5396 ;;                  8   23[COMRAM] unsigned long long 
  5397 ;; Registers used:
  5398 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5399 ;; Tracked objects:
  5400 ;;		On entry : 3F/0
  5401 ;;		On exit  : 3F/0
  5402 ;;		Unchanged: 3F/0
  5403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5404 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5405 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5407 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5408 ;;Total ram usage:       25 bytes
  5409 ;; Hardware stack levels used: 1
  5410 ;; Hardware stack levels required when called: 7
  5411 ;; This function calls:
  5412 ;;		Nothing
  5413 ;; This function is called by:
  5414 ;;		_utoa
  5415 ;; This function uses a non-reentrant model
  5416 ;;
  5417                           
  5418                           	psect	text9
  5419  012F06                     __ptext9:
  5420                           	callstack 0
  5421  012F06                     ___lodiv:
  5422                           	callstack 19
  5423                           
  5424                           ; BSR set to: 0
  5425                           
  5426                           ; BSR set to: 0
  5427                           ;incstack = 0
  5428  012F06  EE20  F028         	lfsr	2,___lodiv@quotient
  5429  012F0A  0E07               	movlw	7
  5430  012F0C                     u10881:
  5431  012F0C  6ADE               	clrf	postinc2,c
  5432  012F0E  06E8               	decf	wreg,f,c
  5433  012F10  E2FD               	bc	u10881
  5434                           
  5435                           ; BSR set to: 0
  5436  012F12  5020               	movf	___lodiv@divisor^0,w,c
  5437  012F14  1021               	iorwf	(___lodiv@divisor+1)^0,w,c
  5438  012F16  1022               	iorwf	(___lodiv@divisor+2)^0,w,c
  5439  012F18  1023               	iorwf	(___lodiv@divisor+3)^0,w,c
  5440  012F1A  1024               	iorwf	(___lodiv@divisor+4)^0,w,c
  5441  012F1C  1025               	iorwf	(___lodiv@divisor+5)^0,w,c
  5442  012F1E  1026               	iorwf	(___lodiv@divisor+6)^0,w,c
  5443  012F20  1027               	iorwf	(___lodiv@divisor+7)^0,w,c
  5444  012F22  B4D8               	btfsc	status,2,c
  5445  012F24  D046               	goto	l2060
  5446                           
  5447                           ; BSR set to: 0
  5448  012F26  0E01               	movlw	1
  5449  012F28  6E30               	movwf	___lodiv@counter^0,c
  5450  012F2A  D00A               	goto	l10347
  5451  012F2C                     l10345:
  5452                           
  5453                           ; BSR set to: 0
  5454  012F2C  90D8               	bcf	status,0,c
  5455  012F2E  3620               	rlcf	___lodiv@divisor^0,f,c
  5456  012F30  3621               	rlcf	(___lodiv@divisor+1)^0,f,c
  5457  012F32  3622               	rlcf	(___lodiv@divisor+2)^0,f,c
  5458  012F34  3623               	rlcf	(___lodiv@divisor+3)^0,f,c
  5459  012F36  3624               	rlcf	(___lodiv@divisor+4)^0,f,c
  5460  012F38  3625               	rlcf	(___lodiv@divisor+5)^0,f,c
  5461  012F3A  3626               	rlcf	(___lodiv@divisor+6)^0,f,c
  5462  012F3C  3627               	rlcf	(___lodiv@divisor+7)^0,f,c
  5463  012F3E  2A30               	incf	___lodiv@counter^0,f,c
  5464  012F40                     l10347:
  5465                           
  5466                           ; BSR set to: 0
  5467  012F40  AE27               	btfss	(___lodiv@divisor+7)^0,7,c
  5468  012F42  D7F4               	goto	l10345
  5469  012F44                     u10900:
  5470                           
  5471                           ; BSR set to: 0
  5472  012F44  90D8               	bcf	status,0,c
  5473  012F46  3628               	rlcf	___lodiv@quotient^0,f,c
  5474  012F48  3629               	rlcf	(___lodiv@quotient+1)^0,f,c
  5475  012F4A  362A               	rlcf	(___lodiv@quotient+2)^0,f,c
  5476  012F4C  362B               	rlcf	(___lodiv@quotient+3)^0,f,c
  5477  012F4E  362C               	rlcf	(___lodiv@quotient+4)^0,f,c
  5478  012F50  362D               	rlcf	(___lodiv@quotient+5)^0,f,c
  5479  012F52  362E               	rlcf	(___lodiv@quotient+6)^0,f,c
  5480  012F54  362F               	rlcf	(___lodiv@quotient+7)^0,f,c
  5481                           
  5482                           ; BSR set to: 0
  5483  012F56  5020               	movf	___lodiv@divisor^0,w,c
  5484  012F58  5C18               	subwf	___lodiv@dividend^0,w,c
  5485  012F5A  5021               	movf	(___lodiv@divisor+1)^0,w,c
  5486  012F5C  5819               	subwfb	(___lodiv@dividend+1)^0,w,c
  5487  012F5E  5022               	movf	(___lodiv@divisor+2)^0,w,c
  5488  012F60  581A               	subwfb	(___lodiv@dividend+2)^0,w,c
  5489  012F62  5023               	movf	(___lodiv@divisor+3)^0,w,c
  5490  012F64  581B               	subwfb	(___lodiv@dividend+3)^0,w,c
  5491  012F66  5024               	movf	(___lodiv@divisor+4)^0,w,c
  5492  012F68  581C               	subwfb	(___lodiv@dividend+4)^0,w,c
  5493  012F6A  5025               	movf	(___lodiv@divisor+5)^0,w,c
  5494  012F6C  581D               	subwfb	(___lodiv@dividend+5)^0,w,c
  5495  012F6E  5026               	movf	(___lodiv@divisor+6)^0,w,c
  5496  012F70  581E               	subwfb	(___lodiv@dividend+6)^0,w,c
  5497  012F72  5027               	movf	(___lodiv@divisor+7)^0,w,c
  5498  012F74  581F               	subwfb	(___lodiv@dividend+7)^0,w,c
  5499  012F76  A0D8               	btfss	status,0,c
  5500  012F78  D011               	goto	l10357
  5501                           
  5502                           ; BSR set to: 0
  5503  012F7A  5020               	movf	___lodiv@divisor^0,w,c
  5504  012F7C  5E18               	subwf	___lodiv@dividend^0,f,c
  5505  012F7E  5021               	movf	(___lodiv@divisor+1)^0,w,c
  5506  012F80  5A19               	subwfb	(___lodiv@dividend+1)^0,f,c
  5507  012F82  5022               	movf	(___lodiv@divisor+2)^0,w,c
  5508  012F84  5A1A               	subwfb	(___lodiv@dividend+2)^0,f,c
  5509  012F86  5023               	movf	(___lodiv@divisor+3)^0,w,c
  5510  012F88  5A1B               	subwfb	(___lodiv@dividend+3)^0,f,c
  5511  012F8A  5024               	movf	(___lodiv@divisor+4)^0,w,c
  5512  012F8C  5A1C               	subwfb	(___lodiv@dividend+4)^0,f,c
  5513  012F8E  5025               	movf	(___lodiv@divisor+5)^0,w,c
  5514  012F90  5A1D               	subwfb	(___lodiv@dividend+5)^0,f,c
  5515  012F92  5026               	movf	(___lodiv@divisor+6)^0,w,c
  5516  012F94  5A1E               	subwfb	(___lodiv@dividend+6)^0,f,c
  5517  012F96  5027               	movf	(___lodiv@divisor+7)^0,w,c
  5518  012F98  5A1F               	subwfb	(___lodiv@dividend+7)^0,f,c
  5519                           
  5520                           ; BSR set to: 0
  5521  012F9A  8028               	bsf	___lodiv@quotient^0,0,c
  5522  012F9C                     l10357:
  5523                           
  5524                           ; BSR set to: 0
  5525  012F9C  90D8               	bcf	status,0,c
  5526  012F9E  3227               	rrcf	(___lodiv@divisor+7)^0,f,c
  5527  012FA0  3226               	rrcf	(___lodiv@divisor+6)^0,f,c
  5528  012FA2  3225               	rrcf	(___lodiv@divisor+5)^0,f,c
  5529  012FA4  3224               	rrcf	(___lodiv@divisor+4)^0,f,c
  5530  012FA6  3223               	rrcf	(___lodiv@divisor+3)^0,f,c
  5531  012FA8  3222               	rrcf	(___lodiv@divisor+2)^0,f,c
  5532  012FAA  3221               	rrcf	(___lodiv@divisor+1)^0,f,c
  5533  012FAC  3220               	rrcf	___lodiv@divisor^0,f,c
  5534                           
  5535                           ; BSR set to: 0
  5536  012FAE  2E30               	decfsz	___lodiv@counter^0,f,c
  5537  012FB0  D7C9               	goto	u10900
  5538  012FB2                     l2060:
  5539                           
  5540                           ; BSR set to: 0
  5541  012FB2  C028  F018         	movff	___lodiv@quotient,?___lodiv
  5542  012FB6  C029  F019         	movff	___lodiv@quotient+1,?___lodiv+1
  5543  012FBA  C02A  F01A         	movff	___lodiv@quotient+2,?___lodiv+2
  5544  012FBE  C02B  F01B         	movff	___lodiv@quotient+3,?___lodiv+3
  5545  012FC2  C02C  F01C         	movff	___lodiv@quotient+4,?___lodiv+4
  5546  012FC6  C02D  F01D         	movff	___lodiv@quotient+5,?___lodiv+5
  5547  012FCA  C02E  F01E         	movff	___lodiv@quotient+6,?___lodiv+6
  5548  012FCE  C02F  F01F         	movff	___lodiv@quotient+7,?___lodiv+7
  5549                           
  5550                           ; BSR set to: 0
  5551  012FD2  0012               	return		;funcret
  5552  012FD4                     __end_of___lodiv:
  5553                           	callstack 0
  5554                           
  5555 ;; *************** function _stoa *****************
  5556 ;; Defined at:
  5557 ;;		line 568 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  5558 ;; Parameters:    Size  Location     Type
  5559 ;;  fp              2   34[COMRAM] PTR struct _IO_FILE
  5560 ;;		 -> sprintf@f(11), NULL(0), 
  5561 ;;  s               2   36[COMRAM] PTR unsigned char 
  5562 ;;		 -> ?_printf(2), ?_sprintf(2), STR_2(9), STR_1(12), 
  5563 ;; Auto vars:     Size  Location     Type
  5564 ;;  nuls            7    0[BANK0 ] unsigned char [7]
  5565 ;;  l               2   15[BANK0 ] int 
  5566 ;;  p               2   13[BANK0 ] int 
  5567 ;;  cp              2   11[BANK0 ] PTR unsigned char 
  5568 ;;		 -> ?_printf(2), stoa@nuls(7), ?_sprintf(2), STR_2(9), 
  5569 ;;		 -> STR_1(12), 
  5570 ;;  w               2    9[BANK0 ] int 
  5571 ;;  i               2    7[BANK0 ] int 
  5572 ;; Return value:  Size  Location     Type
  5573 ;;                  2   34[COMRAM] int 
  5574 ;; Registers used:
  5575 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5576 ;; Tracked objects:
  5577 ;;		On entry : 3F/0
  5578 ;;		On exit  : 3F/0
  5579 ;;		Unchanged: 0/0
  5580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5581 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5582 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5583 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5584 ;;      Totals:         5      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5585 ;;Total ram usage:       22 bytes
  5586 ;; Hardware stack levels used: 1
  5587 ;; Hardware stack levels required when called: 10
  5588 ;; This function calls:
  5589 ;;		_fputc
  5590 ;;		_strlen
  5591 ;; This function is called by:
  5592 ;;		_vfpfcnvrt
  5593 ;; This function uses a non-reentrant model
  5594 ;;
  5595                           
  5596                           	psect	text10
  5597  01291A                     __ptext10:
  5598                           	callstack 0
  5599  01291A                     _stoa:
  5600                           	callstack 17
  5601                           
  5602                           ; BSR set to: 0
  5603                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 568: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 569: {;/opt/microch
      +                          ip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 570:     char *cp, nuls[] = "(null)";
  5604                           
  5605                           ; BSR set to: 0
  5606                           ;incstack = 0
  5607  01291A  EE20  F1A0         	lfsr	2,stoa@F1164
  5608  01291E  EE10  F060         	lfsr	1,stoa@nuls
  5609  012922  0E06               	movlw	6
  5610  012924                     u11831:
  5611  012924  006F FF6F FFE3     	movff	plusw2,plusw1
  5612  01292A  06E8               	decf	wreg,f,c
  5613  01292C  E2FB               	bc	u11831
  5614                           
  5615                           ; BSR set to: 0
  5616                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 571:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 574:     cp = s;
  5617  01292E  C025  F06B         	movff	stoa@s,stoa@cp
  5618  012932  C026  F06C         	movff	stoa@s+1,stoa@cp+1
  5619                           
  5620                           ; BSR set to: 0
  5621                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 575:     if (!cp) {
  5622  012936  516B               	movf	stoa@cp& (0+255),w,b
  5623  012938  116C               	iorwf	(stoa@cp+1)& (0+255),w,b
  5624  01293A  A4D8               	btfss	status,2,c
  5625  01293C  D003               	goto	l10823
  5626                           
  5627                           ; BSR set to: 0
  5628                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 576:         cp = nuls;
  5629  01293E  0E60               	movlw	low stoa@nuls
  5630  012940  6F6B               	movwf	stoa@cp& (0+255),b
  5631  012942  6B6C               	clrf	(stoa@cp+1)& (0+255),b
  5632  012944                     l10823:
  5633                           
  5634                           ; BSR set to: 0
  5635                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 580:     l = (int)strlen(cp);
  5636  012944  C06B  F018         	movff	stoa@cp,strlen@s
  5637  012948  C06C  F019         	movff	stoa@cp+1,strlen@s+1
  5638  01294C  ECEF  F09E         	call	_strlen	;wreg free
  5639  012950  C018  F06F         	movff	?_strlen,stoa@l
  5640  012954  C019  F070         	movff	?_strlen+1,stoa@l+1
  5641                           
  5642                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 581:     p = prec;
  5643  012958  C0F7  F06D         	movff	_prec,stoa@p
  5644  01295C  C0F8  F06E         	movff	_prec+1,stoa@p+1
  5645                           
  5646                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 582:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  5647  012960  0100               	movlb	0	; () banked
  5648  012962  BF6E               	btfsc	(stoa@p+1)& (0+255),7,b
  5649  012964  D00E               	goto	l2458
  5650                           
  5651                           ; BSR set to: 0
  5652  012966  516F               	movf	stoa@l& (0+255),w,b
  5653  012968  5D6D               	subwf	stoa@p& (0+255),w,b
  5654  01296A  516E               	movf	(stoa@p+1)& (0+255),w,b
  5655  01296C  0A80               	xorlw	128
  5656  01296E  6E27               	movwf	??_stoa^0,c
  5657  012970  5170               	movf	(stoa@l+1)& (0+255),w,b
  5658  012972  0A80               	xorlw	128
  5659  012974  5827               	subwfb	??_stoa^0,w,c
  5660  012976  B0D8               	btfsc	status,0,c
  5661  012978  D004               	goto	l2458
  5662                           
  5663                           ; BSR set to: 0
  5664  01297A  C06D  F06F         	movff	stoa@p,stoa@l
  5665  01297E  C06E  F070         	movff	stoa@p+1,stoa@l+1
  5666  012982                     l2458:
  5667                           
  5668                           ; BSR set to: 0
  5669                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 583:     p = l;
  5670  012982  C06F  F06D         	movff	stoa@l,stoa@p
  5671  012986  C070  F06E         	movff	stoa@l+1,stoa@p+1
  5672                           
  5673                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 584:     w = width;
  5674  01298A  C0F5  F069         	movff	_width,stoa@w
  5675  01298E  C0F6  F06A         	movff	_width+1,stoa@w+1
  5676                           
  5677                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 587:     if (!(flags & (1 << 
      +                          0))) {
  5678  012992  A03A               	btfss	_flags^0,0,c
  5679  012994  D00E               	goto	l10837
  5680  012996  D017               	goto	u11880
  5681  012998                     l10833:
  5682                           
  5683                           ; BSR set to: 0
  5684                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 589:             fputc(' ', f
      +                          p);
  5685  012998  0E00               	movlw	0
  5686  01299A  6E1B               	movwf	(fputc@c+1)^0,c
  5687  01299C  0E20               	movlw	32
  5688  01299E  6E1A               	movwf	fputc@c^0,c
  5689  0129A0  C023  F01C         	movff	stoa@fp,fputc@fp
  5690  0129A4  C024  F01D         	movff	stoa@fp+1,fputc@fp+1
  5691  0129A8  EC88  F09A         	call	_fputc	;wreg free
  5692                           
  5693                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 590:             ++l;
  5694  0129AC  0100               	movlb	0	; () banked
  5695  0129AE  4B6F               	infsnz	stoa@l& (0+255),f,b
  5696  0129B0  2B70               	incf	(stoa@l+1)& (0+255),f,b
  5697  0129B2                     l10837:
  5698                           
  5699                           ; BSR set to: 0
  5700                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 588:         while (l < w) {
  5701  0129B2  5169               	movf	stoa@w& (0+255),w,b
  5702  0129B4  5D6F               	subwf	stoa@l& (0+255),w,b
  5703  0129B6  5170               	movf	(stoa@l+1)& (0+255),w,b
  5704  0129B8  0A80               	xorlw	128
  5705  0129BA  6E27               	movwf	??_stoa^0,c
  5706  0129BC  516A               	movf	(stoa@w+1)& (0+255),w,b
  5707  0129BE  0A80               	xorlw	128
  5708  0129C0  5827               	subwfb	??_stoa^0,w,c
  5709  0129C2  A0D8               	btfss	status,0,c
  5710  0129C4  D7E9               	goto	l10833
  5711  0129C6                     u11880:
  5712                           
  5713                           ; BSR set to: 0
  5714                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 595:     i = 0;
  5715  0129C6  0E00               	movlw	0
  5716  0129C8  6F68               	movwf	(stoa@i+1)& (0+255),b
  5717  0129CA  0E00               	movlw	0
  5718  0129CC  6F67               	movwf	stoa@i& (0+255),b
  5719                           
  5720                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 596:     while (i < p) {
  5721  0129CE  D024               	goto	l10847
  5722  0129D0                     l10841:
  5723                           
  5724                           ; BSR set to: 0
  5725                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 597:         fputc(*cp, fp);
  5726  0129D0  0060  F1AF  FFF6   	movff	stoa@cp,tblptrl
  5727  0129D6  0060  F1B3  FFF7   	movff	stoa@cp+1,tblptrh
  5728  0129DC  0E00               	movlw	low (__mediumconst shr (0+16))
  5729  0129DE  6EF8               	movwf	tblptru,c
  5730  0129E0  0E1F               	movlw	(high __ramtop+-1)
  5731  0129E2  64F7               	cpfsgt	tblptrh,c
  5732  0129E4  D003               	bra	u11897
  5733  0129E6  0008               	tblrd		*
  5734  0129E8  50F5               	movf	tablat,w,c
  5735  0129EA  D007               	bra	u11890
  5736  0129EC                     u11897:
  5737  0129EC  006F FFDB FFE1     	movff	tblptrl,fsr1l
  5738  0129F2  006F FFDF FFE2     	movff	tblptrh,fsr1h
  5739  0129F8  50E7               	movf	indf1,w,c
  5740  0129FA                     u11890:
  5741  0129FA  6E27               	movwf	??_stoa^0,c
  5742  0129FC  5027               	movf	??_stoa^0,w,c
  5743  0129FE  6E1A               	movwf	fputc@c^0,c
  5744  012A00  6A1B               	clrf	(fputc@c+1)^0,c
  5745  012A02  C023  F01C         	movff	stoa@fp,fputc@fp
  5746  012A06  C024  F01D         	movff	stoa@fp+1,fputc@fp+1
  5747  012A0A  EC88  F09A         	call	_fputc	;wreg free
  5748                           
  5749                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 598:         ++cp;
  5750  012A0E  0100               	movlb	0	; () banked
  5751  012A10  4B6B               	infsnz	stoa@cp& (0+255),f,b
  5752  012A12  2B6C               	incf	(stoa@cp+1)& (0+255),f,b
  5753                           
  5754                           ; BSR set to: 0
  5755                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 599:         ++i;
  5756  012A14  4B67               	infsnz	stoa@i& (0+255),f,b
  5757  012A16  2B68               	incf	(stoa@i+1)& (0+255),f,b
  5758  012A18                     l10847:
  5759                           
  5760                           ; BSR set to: 0
  5761                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 596:     while (i < p) {
  5762  012A18  516D               	movf	stoa@p& (0+255),w,b
  5763  012A1A  5D67               	subwf	stoa@i& (0+255),w,b
  5764  012A1C  5168               	movf	(stoa@i+1)& (0+255),w,b
  5765  012A1E  0A80               	xorlw	128
  5766  012A20  6E27               	movwf	??_stoa^0,c
  5767  012A22  516E               	movf	(stoa@p+1)& (0+255),w,b
  5768  012A24  0A80               	xorlw	128
  5769  012A26  5827               	subwfb	??_stoa^0,w,c
  5770  012A28  A0D8               	btfss	status,0,c
  5771  012A2A  D7D2               	goto	l10841
  5772                           
  5773                           ; BSR set to: 0
  5774                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 603:     if (flags & (1 << 0)
      +                          ) {
  5775  012A2C  B03A               	btfsc	_flags^0,0,c
  5776  012A2E  D00E               	goto	l10855
  5777  012A30  D017               	goto	u11920
  5778  012A32                     l10851:
  5779                           
  5780                           ; BSR set to: 0
  5781                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 605:             fputc(' ', f
      +                          p);
  5782  012A32  0E00               	movlw	0
  5783  012A34  6E1B               	movwf	(fputc@c+1)^0,c
  5784  012A36  0E20               	movlw	32
  5785  012A38  6E1A               	movwf	fputc@c^0,c
  5786  012A3A  C023  F01C         	movff	stoa@fp,fputc@fp
  5787  012A3E  C024  F01D         	movff	stoa@fp+1,fputc@fp+1
  5788  012A42  EC88  F09A         	call	_fputc	;wreg free
  5789                           
  5790                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 606:             ++l;
  5791  012A46  0100               	movlb	0	; () banked
  5792  012A48  4B6F               	infsnz	stoa@l& (0+255),f,b
  5793  012A4A  2B70               	incf	(stoa@l+1)& (0+255),f,b
  5794  012A4C                     l10855:
  5795                           
  5796                           ; BSR set to: 0
  5797                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 604:         while (l < w) {
  5798  012A4C  5169               	movf	stoa@w& (0+255),w,b
  5799  012A4E  5D6F               	subwf	stoa@l& (0+255),w,b
  5800  012A50  5170               	movf	(stoa@l+1)& (0+255),w,b
  5801  012A52  0A80               	xorlw	128
  5802  012A54  6E27               	movwf	??_stoa^0,c
  5803  012A56  516A               	movf	(stoa@w+1)& (0+255),w,b
  5804  012A58  0A80               	xorlw	128
  5805  012A5A  5827               	subwfb	??_stoa^0,w,c
  5806  012A5C  A0D8               	btfss	status,0,c
  5807  012A5E  D7E9               	goto	l10851
  5808  012A60                     u11920:
  5809                           
  5810                           ; BSR set to: 0
  5811                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 610:     return l;
  5812                           
  5813                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 608:     }
  5814  012A60  C06F  F023         	movff	stoa@l,?_stoa
  5815  012A64  C070  F024         	movff	stoa@l+1,?_stoa+1
  5816                           
  5817                           ; BSR set to: 0
  5818  012A68  0012               	return		;funcret
  5819  012A6A                     __end_of_stoa:
  5820                           	callstack 0
  5821                           
  5822 ;; *************** function _efgtoa *****************
  5823 ;; Defined at:
  5824 ;;		line 332 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  5825 ;; Parameters:    Size  Location     Type
  5826 ;;  fp              2   25[BANK0 ] PTR struct _IO_FILE
  5827 ;;		 -> sprintf@f(11), NULL(0), 
  5828 ;;  f               4   27[BANK0 ] PTR struct _IO_FILE
  5829 ;;  c               1   31[BANK0 ] unsigned char 
  5830 ;; Auto vars:     Size  Location     Type
  5831 ;;  u               4   83[BANK0 ] unsigned char 
  5832 ;;  g               4   73[BANK0 ] unsigned char 
  5833 ;;  l               4   69[BANK0 ] unsigned char 
  5834 ;;  h               4   65[BANK0 ] unsigned char 
  5835 ;;  ou              4   51[BANK0 ] unsigned char 
  5836 ;;  n               2   81[BANK0 ] int 
  5837 ;;  e               2   79[BANK0 ] int 
  5838 ;;  i               2   77[BANK0 ] int 
  5839 ;;  w               2   62[BANK0 ] int 
  5840 ;;  p               2   59[BANK0 ] int 
  5841 ;;  sign            2   57[BANK0 ] int 
  5842 ;;  d               2   55[BANK0 ] int 
  5843 ;;  m               2   49[BANK0 ] int 
  5844 ;;  ne              2   47[BANK0 ] int 
  5845 ;;  pp              2   45[BANK0 ] int 
  5846 ;;  t               2   43[BANK0 ] int 
  5847 ;;  mode            1   64[BANK0 ] unsigned char 
  5848 ;;  nmode           1   61[BANK0 ] unsigned char 
  5849 ;; Return value:  Size  Location     Type
  5850 ;;                  2   25[BANK0 ] int 
  5851 ;; Registers used:
  5852 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5853 ;; Tracked objects:
  5854 ;;		On entry : 3F/0
  5855 ;;		On exit  : 3F/0
  5856 ;;		Unchanged: 0/0
  5857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5858 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5859 ;;      Locals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5860 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5861 ;;      Totals:         0      62       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5862 ;;Total ram usage:       62 bytes
  5863 ;; Hardware stack levels used: 1
  5864 ;; Hardware stack levels required when called: 12
  5865 ;; This function calls:
  5866 ;;		___awdiv
  5867 ;;		___awmod
  5868 ;;		___fladd
  5869 ;;		___fldiv
  5870 ;;		___fleq
  5871 ;;		___flge
  5872 ;;		___flmul
  5873 ;;		___flneg
  5874 ;;		___flsub
  5875 ;;		___fltol
  5876 ;;		___fpclassifyf
  5877 ;;		_floorf
  5878 ;;		_isupper
  5879 ;;		_pad
  5880 ;;		_strcpy
  5881 ;;		_tolower
  5882 ;; This function is called by:
  5883 ;;		_vfpfcnvrt
  5884 ;; This function uses a non-reentrant model
  5885 ;;
  5886                           
  5887                           	psect	text11
  5888  010000                     __ptext11:
  5889                           	callstack 0
  5890  010000                     _efgtoa:
  5891                           	callstack 15
  5892                           
  5893                           ; BSR set to: 0
  5894                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 332: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 333
      +                          : {;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 334:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 335:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 336:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 3
      +                          39:     sign = 0;
  5895                           
  5896                           ; BSR set to: 0
  5897                           ;incstack = 0
  5898  010000  0E00               	movlw	0
  5899  010002  6F9A               	movwf	(efgtoa@sign+1)& (0+255),b
  5900  010004  0E00               	movlw	0
  5901  010006  6F99               	movwf	efgtoa@sign& (0+255),b
  5902                           
  5903                           ; BSR set to: 0
  5904                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 340:     g = f;
  5905  010008  C07B  F0A9         	movff	efgtoa@f,efgtoa@g
  5906  01000C  C07C  F0AA         	movff	efgtoa@f+1,efgtoa@g+1
  5907  010010  C07D  F0AB         	movff	efgtoa@f+2,efgtoa@g+2
  5908  010014  C07E  F0AC         	movff	efgtoa@f+3,efgtoa@g+3
  5909                           
  5910                           ; BSR set to: 0
  5911                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 341:     if (g < 0.0) {
  5912  010018  AFAC               	btfss	(efgtoa@g+3)& (0+255),7,b
  5913  01001A  D016               	goto	l10519
  5914                           
  5915                           ; BSR set to: 0
  5916                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 342:         sign = 1;
  5917  01001C  0E00               	movlw	0
  5918  01001E  6F9A               	movwf	(efgtoa@sign+1)& (0+255),b
  5919  010020  0E01               	movlw	1
  5920  010022  6F99               	movwf	efgtoa@sign& (0+255),b
  5921                           
  5922                           ; BSR set to: 0
  5923                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 343:         g = -g;
  5924  010024  C0A9  F018         	movff	efgtoa@g,___flneg@f1
  5925  010028  C0AA  F019         	movff	efgtoa@g+1,___flneg@f1+1
  5926  01002C  C0AB  F01A         	movff	efgtoa@g+2,___flneg@f1+2
  5927  010030  C0AC  F01B         	movff	efgtoa@g+3,___flneg@f1+3
  5928  010034  EC06  F0A2         	call	___flneg	;wreg free
  5929  010038  C018  F0A9         	movff	?___flneg,efgtoa@g
  5930  01003C  C019  F0AA         	movff	?___flneg+1,efgtoa@g+1
  5931  010040  C01A  F0AB         	movff	?___flneg+2,efgtoa@g+2
  5932  010044  C01B  F0AC         	movff	?___flneg+3,efgtoa@g+3
  5933  010048                     l10519:
  5934                           
  5935                           ; BSR set to: 0
  5936                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 347:     n = 0;
  5937  010048  0E00               	movlw	0
  5938  01004A  6FB2               	movwf	(efgtoa@n+1)& (0+255),b
  5939  01004C  0E00               	movlw	0
  5940  01004E  6FB1               	movwf	efgtoa@n& (0+255),b
  5941                           
  5942                           ; BSR set to: 0
  5943                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 348:     w = width;
  5944  010050  C0F5  F09E         	movff	_width,efgtoa@w
  5945  010054  C0F6  F09F         	movff	_width+1,efgtoa@w+1
  5946                           
  5947                           ; BSR set to: 0
  5948                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 349:     if (sign || (flags &
      +                           (1 << 2))) {
  5949  010058  5199               	movf	efgtoa@sign& (0+255),w,b
  5950  01005A  119A               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5951  01005C  A4D8               	btfss	status,2,c
  5952  01005E  D002               	goto	u11370
  5953                           
  5954                           ; BSR set to: 0
  5955  010060  A43A               	btfss	_flags^0,2,c
  5956  010062  D013               	goto	l10539
  5957  010064                     u11370:
  5958                           
  5959                           ; BSR set to: 0
  5960                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 350:         dbuf[n] = sign ?
      +                           '-' : '+';
  5961  010064  5199               	movf	efgtoa@sign& (0+255),w,b
  5962  010066  119A               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5963  010068  A4D8               	btfss	status,2,c
  5964  01006A  D004               	goto	l10531
  5965                           
  5966                           ; BSR set to: 0
  5967  01006C  0E00               	movlw	0
  5968  01006E  6F86               	movwf	(_efgtoa$3845+1)& (0+255),b
  5969  010070  0E2B               	movlw	43
  5970  010072  D003               	goto	L3
  5971  010074                     l10531:
  5972                           
  5973                           ; BSR set to: 0
  5974  010074  0E00               	movlw	0
  5975  010076  6F86               	movwf	(_efgtoa$3845+1)& (0+255),b
  5976  010078  0E2D               	movlw	45
  5977  01007A                     L3:
  5978  01007A  6F85               	movwf	_efgtoa$3845& (0+255),b
  5979                           
  5980                           ; BSR set to: 0
  5981  01007C  C085  F146         	movff	_efgtoa$3845,_dbuf
  5982                           
  5983                           ; BSR set to: 0
  5984                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 351:         ++n;
  5985  010080  4BB1               	infsnz	efgtoa@n& (0+255),f,b
  5986  010082  2BB2               	incf	(efgtoa@n+1)& (0+255),f,b
  5987                           
  5988                           ; BSR set to: 0
  5989                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 352:         --w;
  5990  010084  079E               	decf	efgtoa@w& (0+255),f,b
  5991  010086  A0D8               	btfss	status,0,c
  5992  010088  079F               	decf	(efgtoa@w+1)& (0+255),f,b
  5993  01008A                     l10539:
  5994                           
  5995                           ; BSR set to: 0
  5996                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 356:     if (( __fpclassifyf(
      +                          g) == 1 )) {
  5997  01008A  C0A9  F018         	movff	efgtoa@g,___fpclassifyf@x
  5998  01008E  C0AA  F019         	movff	efgtoa@g+1,___fpclassifyf@x+1
  5999  010092  C0AB  F01A         	movff	efgtoa@g+2,___fpclassifyf@x+2
  6000  010096  C0AC  F01B         	movff	efgtoa@g+3,___fpclassifyf@x+3
  6001  01009A  EC51  F098         	call	___fpclassifyf	;wreg free
  6002  01009E  0418               	decf	?___fpclassifyf^0,w,c
  6003  0100A0  1019               	iorwf	(?___fpclassifyf+1)^0,w,c
  6004  0100A2  A4D8               	btfss	status,2,c
  6005  0100A4  D043               	goto	l10557
  6006  0100A6  0EBF               	movlw	191
  6007  0100A8  0100               	movlb	0	; () banked
  6008  0100AA  6F80               	movwf	??_efgtoa& (0+255),b
  6009  0100AC  0EFF               	movlw	255
  6010  0100AE  6F81               	movwf	(??_efgtoa+1)& (0+255),b
  6011  0100B0  517F               	movf	efgtoa@c& (0+255),w,b
  6012  0100B2  6F82               	movwf	(??_efgtoa+2)& (0+255),b
  6013  0100B4  6B83               	clrf	(??_efgtoa+3)& (0+255),b
  6014  0100B6  5180               	movf	??_efgtoa& (0+255),w,b
  6015  0100B8  2782               	addwf	(??_efgtoa+2)& (0+255),f,b
  6016  0100BA  5181               	movf	(??_efgtoa+1)& (0+255),w,b
  6017  0100BC  2383               	addwfc	(??_efgtoa+3)& (0+255),f,b
  6018  0100BE  5183               	movf	(??_efgtoa+3)& (0+255),w,b
  6019  0100C0  E111               	bnz	l10549
  6020  0100C2  0E1A               	movlw	26
  6021  0100C4  5D82               	subwf	(??_efgtoa+2)& (0+255),w,b
  6022  0100C6  B0D8               	btfsc	status,0,c
  6023  0100C8  D00D               	goto	l10549
  6024                           
  6025                           ; BSR set to: 0
  6026                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 358:             strcpy(&dbuf
      +                          [n], "INF");
  6027  0100CA  0E46               	movlw	low _dbuf
  6028  0100CC  25B1               	addwf	efgtoa@n& (0+255),w,b
  6029  0100CE  6E18               	movwf	strcpy@dest^0,c
  6030  0100D0  0E01               	movlw	high _dbuf
  6031  0100D2  21B2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6032  0100D4  6E19               	movwf	(strcpy@dest+1)^0,c
  6033  0100D6  0ED6               	movlw	low STR_17
  6034  0100D8  6E1A               	movwf	strcpy@src^0,c
  6035  0100DA  0EFF               	movlw	high STR_17
  6036  0100DC  6E1B               	movwf	(strcpy@src+1)^0,c
  6037  0100DE  EC43  F09D         	call	_strcpy	;wreg free
  6038                           
  6039                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 359:         } else {
  6040  0100E2  D00C               	goto	l10551
  6041  0100E4                     l10549:
  6042                           
  6043                           ; BSR set to: 0
  6044                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 360:             strcpy(&dbuf
      +                          [n], "inf");
  6045  0100E4  0E46               	movlw	low _dbuf
  6046  0100E6  25B1               	addwf	efgtoa@n& (0+255),w,b
  6047  0100E8  6E18               	movwf	strcpy@dest^0,c
  6048  0100EA  0E01               	movlw	high _dbuf
  6049  0100EC  21B2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6050  0100EE  6E19               	movwf	(strcpy@dest+1)^0,c
  6051  0100F0  0EDE               	movlw	low STR_18
  6052  0100F2  6E1A               	movwf	strcpy@src^0,c
  6053  0100F4  0EFF               	movlw	high STR_18
  6054  0100F6  6E1B               	movwf	(strcpy@src+1)^0,c
  6055  0100F8  EC43  F09D         	call	_strcpy	;wreg free
  6056  0100FC                     l10551:
  6057                           
  6058                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 362:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
  6059  0100FC  0100               	movlb	0	; () banked
  6060  0100FE  0EFD               	movlw	253
  6061  010100  279E               	addwf	efgtoa@w& (0+255),f,b
  6062  010102  0EFF               	movlw	255
  6063  010104  239F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  6064  010106                     l10553:
  6065                           
  6066                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 363:         return pad(fp, &
      +                          dbuf[0], w);
  6067  010106  C079  F02C         	movff	efgtoa@fp,pad@fp
  6068  01010A  C07A  F02D         	movff	efgtoa@fp+1,pad@fp+1
  6069  01010E  0E46               	movlw	low _dbuf
  6070  010110  6E2E               	movwf	pad@buf^0,c
  6071  010112  0E01               	movlw	high _dbuf
  6072  010114  6E2F               	movwf	(pad@buf+1)^0,c
  6073  010116  C09E  F030         	movff	efgtoa@w,pad@p
  6074  01011A  C09F  F031         	movff	efgtoa@w+1,pad@p+1
  6075  01011E  EC89  F09B         	call	_pad	;wreg free
  6076  010122  C02C  F079         	movff	?_pad,?_efgtoa
  6077  010126  C02D  F07A         	movff	?_pad+1,?_efgtoa+1
  6078  01012A  0012               	return	
  6079  01012C                     l10557:
  6080                           
  6081                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 365:     if (( __fpclassifyf(
      +                          g) == 0 )) {
  6082  01012C  C0A9  F018         	movff	efgtoa@g,___fpclassifyf@x
  6083  010130  C0AA  F019         	movff	efgtoa@g+1,___fpclassifyf@x+1
  6084  010134  C0AB  F01A         	movff	efgtoa@g+2,___fpclassifyf@x+2
  6085  010138  C0AC  F01B         	movff	efgtoa@g+3,___fpclassifyf@x+3
  6086  01013C  EC51  F098         	call	___fpclassifyf	;wreg free
  6087  010140  5018               	movf	?___fpclassifyf^0,w,c
  6088  010142  1019               	iorwf	(?___fpclassifyf+1)^0,w,c
  6089  010144  A4D8               	btfss	status,2,c
  6090  010146  D02C               	goto	l10575
  6091  010148  0EBF               	movlw	191
  6092  01014A  0100               	movlb	0	; () banked
  6093  01014C  6F80               	movwf	??_efgtoa& (0+255),b
  6094  01014E  0EFF               	movlw	255
  6095  010150  6F81               	movwf	(??_efgtoa+1)& (0+255),b
  6096  010152  517F               	movf	efgtoa@c& (0+255),w,b
  6097  010154  6F82               	movwf	(??_efgtoa+2)& (0+255),b
  6098  010156  6B83               	clrf	(??_efgtoa+3)& (0+255),b
  6099  010158  5180               	movf	??_efgtoa& (0+255),w,b
  6100  01015A  2782               	addwf	(??_efgtoa+2)& (0+255),f,b
  6101  01015C  5181               	movf	(??_efgtoa+1)& (0+255),w,b
  6102  01015E  2383               	addwfc	(??_efgtoa+3)& (0+255),f,b
  6103  010160  5183               	movf	(??_efgtoa+3)& (0+255),w,b
  6104  010162  E111               	bnz	l10567
  6105  010164  0E1A               	movlw	26
  6106  010166  5D82               	subwf	(??_efgtoa+2)& (0+255),w,b
  6107  010168  B0D8               	btfsc	status,0,c
  6108  01016A  D00D               	goto	l10567
  6109                           
  6110                           ; BSR set to: 0
  6111                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 367:             strcpy(&dbuf
      +                          [n], "NAN");
  6112  01016C  0E46               	movlw	low _dbuf
  6113  01016E  25B1               	addwf	efgtoa@n& (0+255),w,b
  6114  010170  6E18               	movwf	strcpy@dest^0,c
  6115  010172  0E01               	movlw	high _dbuf
  6116  010174  21B2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6117  010176  6E19               	movwf	(strcpy@dest+1)^0,c
  6118  010178  0EDA               	movlw	low STR_21
  6119  01017A  6E1A               	movwf	strcpy@src^0,c
  6120  01017C  0EFF               	movlw	high STR_21
  6121  01017E  6E1B               	movwf	(strcpy@src+1)^0,c
  6122  010180  EC43  F09D         	call	_strcpy	;wreg free
  6123                           
  6124                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 368:         } else {
  6125  010184  D7BB               	goto	l10551
  6126  010186                     l10567:
  6127                           
  6128                           ; BSR set to: 0
  6129                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 369:             strcpy(&dbuf
      +                          [n], "nan");
  6130  010186  0E46               	movlw	low _dbuf
  6131  010188  25B1               	addwf	efgtoa@n& (0+255),w,b
  6132  01018A  6E18               	movwf	strcpy@dest^0,c
  6133  01018C  0E01               	movlw	high _dbuf
  6134  01018E  21B2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6135  010190  6E19               	movwf	(strcpy@dest+1)^0,c
  6136  010192  0EE2               	movlw	low STR_22
  6137  010194  6E1A               	movwf	strcpy@src^0,c
  6138  010196  0EFF               	movlw	high STR_22
  6139  010198  6E1B               	movwf	(strcpy@src+1)^0,c
  6140  01019A  EC43  F09D         	call	_strcpy	;wreg free
  6141  01019E  D7AE               	goto	l10551
  6142  0101A0                     l10575:
  6143                           
  6144                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 376:     u = 1.0;
  6145  0101A0  0E00               	movlw	0
  6146  0101A2  0100               	movlb	0	; () banked
  6147  0101A4  6FB3               	movwf	efgtoa@u& (0+255),b
  6148  0101A6  0E00               	movlw	0
  6149  0101A8  6FB4               	movwf	(efgtoa@u+1)& (0+255),b
  6150  0101AA  0E80               	movlw	128
  6151  0101AC  6FB5               	movwf	(efgtoa@u+2)& (0+255),b
  6152  0101AE  0E3F               	movlw	63
  6153  0101B0  6FB6               	movwf	(efgtoa@u+3)& (0+255),b
  6154                           
  6155                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 377:     e = 0;
  6156  0101B2  0E00               	movlw	0
  6157  0101B4  6FB0               	movwf	(efgtoa@e+1)& (0+255),b
  6158  0101B6  0E00               	movlw	0
  6159  0101B8  6FAF               	movwf	efgtoa@e& (0+255),b
  6160                           
  6161                           ; BSR set to: 0
  6162                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 378:     if (!(g == 0.0)) {
  6163  0101BA  C0A9  F018         	movff	efgtoa@g,___fleq@ff1
  6164  0101BE  C0AA  F019         	movff	efgtoa@g+1,___fleq@ff1+1
  6165  0101C2  C0AB  F01A         	movff	efgtoa@g+2,___fleq@ff1+2
  6166  0101C6  C0AC  F01B         	movff	efgtoa@g+3,___fleq@ff1+3
  6167  0101CA  0E00               	movlw	0
  6168  0101CC  6E1C               	movwf	___fleq@ff2^0,c
  6169  0101CE  0E00               	movlw	0
  6170  0101D0  6E1D               	movwf	(___fleq@ff2+1)^0,c
  6171  0101D2  0E00               	movlw	0
  6172  0101D4  6E1E               	movwf	(___fleq@ff2+2)^0,c
  6173  0101D6  0E00               	movlw	0
  6174  0101D8  6E1F               	movwf	(___fleq@ff2+3)^0,c
  6175  0101DA  ECD8  F09B         	call	___fleq	;wreg free
  6176  0101DE  A0D8               	btfss	status,0,c
  6177  0101E0  D01D               	goto	l10585
  6178  0101E2  D074               	goto	u11450
  6179  0101E4                     l10581:
  6180                           
  6181                           ; BSR set to: 0
  6182                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 380:             u = u*10.0;
  6183  0101E4  C0B3  F026         	movff	efgtoa@u,___flmul@b
  6184  0101E8  C0B4  F027         	movff	efgtoa@u+1,___flmul@b+1
  6185  0101EC  C0B5  F028         	movff	efgtoa@u+2,___flmul@b+2
  6186  0101F0  C0B6  F029         	movff	efgtoa@u+3,___flmul@b+3
  6187  0101F4  0E00               	movlw	0
  6188  0101F6  6E2A               	movwf	___flmul@a^0,c
  6189  0101F8  0E00               	movlw	0
  6190  0101FA  6E2B               	movwf	(___flmul@a+1)^0,c
  6191  0101FC  0E20               	movlw	32
  6192  0101FE  6E2C               	movwf	(___flmul@a+2)^0,c
  6193  010200  0E41               	movlw	65
  6194  010202  6E2D               	movwf	(___flmul@a+3)^0,c
  6195  010204  ECC5  F08A         	call	___flmul	;wreg free
  6196  010208  C026  F0B3         	movff	?___flmul,efgtoa@u
  6197  01020C  C027  F0B4         	movff	?___flmul+1,efgtoa@u+1
  6198  010210  C028  F0B5         	movff	?___flmul+2,efgtoa@u+2
  6199  010214  C029  F0B6         	movff	?___flmul+3,efgtoa@u+3
  6200                           
  6201                           ; BSR set to: 0
  6202                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 381:             ++e;
  6203  010218  4BAF               	infsnz	efgtoa@e& (0+255),f,b
  6204  01021A  2BB0               	incf	(efgtoa@e+1)& (0+255),f,b
  6205  01021C                     l10585:
  6206                           
  6207                           ; BSR set to: 0
  6208                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 379:         while (!(g < (u*
      +                          10.0))) {
  6209  01021C  C0A9  F06D         	movff	efgtoa@g,___flge@ff1
  6210  010220  C0AA  F06E         	movff	efgtoa@g+1,___flge@ff1+1
  6211  010224  C0AB  F06F         	movff	efgtoa@g+2,___flge@ff1+2
  6212  010228  C0AC  F070         	movff	efgtoa@g+3,___flge@ff1+3
  6213  01022C  0E00               	movlw	0
  6214  01022E  6E2A               	movwf	___flmul@a^0,c
  6215  010230  0E00               	movlw	0
  6216  010232  6E2B               	movwf	(___flmul@a+1)^0,c
  6217  010234  0E20               	movlw	32
  6218  010236  6E2C               	movwf	(___flmul@a+2)^0,c
  6219  010238  0E41               	movlw	65
  6220  01023A  6E2D               	movwf	(___flmul@a+3)^0,c
  6221  01023C  C0B3  F026         	movff	efgtoa@u,___flmul@b
  6222  010240  C0B4  F027         	movff	efgtoa@u+1,___flmul@b+1
  6223  010244  C0B5  F028         	movff	efgtoa@u+2,___flmul@b+2
  6224  010248  C0B6  F029         	movff	efgtoa@u+3,___flmul@b+3
  6225  01024C  ECC5  F08A         	call	___flmul	;wreg free
  6226  010250  C026  F071         	movff	?___flmul,___flge@ff2
  6227  010254  C027  F072         	movff	?___flmul+1,___flge@ff2+1
  6228  010258  C028  F073         	movff	?___flmul+2,___flge@ff2+2
  6229  01025C  C029  F074         	movff	?___flmul+3,___flge@ff2+3
  6230  010260  EC1B  F097         	call	___flge	;wreg free
  6231  010264  A0D8               	btfss	status,0,c
  6232  010266  D01E               	goto	l10591
  6233  010268  D7BD               	goto	l10581
  6234  01026A                     l10587:
  6235                           
  6236                           ; BSR set to: 0
  6237                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 384:             u = u/10.0;
  6238  01026A  C0B3  F018         	movff	efgtoa@u,___fldiv@b
  6239  01026E  C0B4  F019         	movff	efgtoa@u+1,___fldiv@b+1
  6240  010272  C0B5  F01A         	movff	efgtoa@u+2,___fldiv@b+2
  6241  010276  C0B6  F01B         	movff	efgtoa@u+3,___fldiv@b+3
  6242  01027A  0E00               	movlw	0
  6243  01027C  6E1C               	movwf	___fldiv@a^0,c
  6244  01027E  0E00               	movlw	0
  6245  010280  6E1D               	movwf	(___fldiv@a+1)^0,c
  6246  010282  0E20               	movlw	32
  6247  010284  6E1E               	movwf	(___fldiv@a+2)^0,c
  6248  010286  0E41               	movlw	65
  6249  010288  6E1F               	movwf	(___fldiv@a+3)^0,c
  6250  01028A  EC62  F08F         	call	___fldiv	;wreg free
  6251  01028E  C018  F0B3         	movff	?___fldiv,efgtoa@u
  6252  010292  C019  F0B4         	movff	?___fldiv+1,efgtoa@u+1
  6253  010296  C01A  F0B5         	movff	?___fldiv+2,efgtoa@u+2
  6254  01029A  C01B  F0B6         	movff	?___fldiv+3,efgtoa@u+3
  6255                           
  6256                           ; BSR set to: 0
  6257                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 385:             --e;
  6258  01029E  07AF               	decf	efgtoa@e& (0+255),f,b
  6259  0102A0  A0D8               	btfss	status,0,c
  6260  0102A2  07B0               	decf	(efgtoa@e+1)& (0+255),f,b
  6261  0102A4                     l10591:
  6262                           
  6263                           ; BSR set to: 0
  6264                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 383:         while (g < u) {
  6265  0102A4  C0A9  F06D         	movff	efgtoa@g,___flge@ff1
  6266  0102A8  C0AA  F06E         	movff	efgtoa@g+1,___flge@ff1+1
  6267  0102AC  C0AB  F06F         	movff	efgtoa@g+2,___flge@ff1+2
  6268  0102B0  C0AC  F070         	movff	efgtoa@g+3,___flge@ff1+3
  6269  0102B4  C0B3  F071         	movff	efgtoa@u,___flge@ff2
  6270  0102B8  C0B4  F072         	movff	efgtoa@u+1,___flge@ff2+1
  6271  0102BC  C0B5  F073         	movff	efgtoa@u+2,___flge@ff2+2
  6272  0102C0  C0B6  F074         	movff	efgtoa@u+3,___flge@ff2+3
  6273  0102C4  EC1B  F097         	call	___flge	;wreg free
  6274  0102C8  A0D8               	btfss	status,0,c
  6275  0102CA  D7CF               	goto	l10587
  6276  0102CC                     u11450:
  6277                           
  6278                           ; BSR set to: 0
  6279                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 390:     mode = (char)tolower
      +                          ((int)c);
  6280  0102CC  C07F  F01E         	movff	efgtoa@c,tolower@c
  6281  0102D0  6A1F               	clrf	(tolower@c+1)^0,c
  6282  0102D2  ECC1  F0A0         	call	_tolower	;wreg free
  6283  0102D6  501E               	movf	?_tolower^0,w,c
  6284  0102D8  6FA0               	movwf	efgtoa@mode& (0+255),b
  6285                           
  6286                           ; BSR set to: 0
  6287                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 391:     nmode = mode;
  6288  0102DA  C0A0  F09D         	movff	efgtoa@mode,efgtoa@nmode
  6289                           
  6290                           ; BSR set to: 0
  6291                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 392:     if (mode == 'g') {
  6292  0102DE  0E67               	movlw	103
  6293  0102E0  19A0               	xorwf	efgtoa@mode& (0+255),w,b
  6294  0102E2  A4D8               	btfss	status,2,c
  6295  0102E4  D019               	goto	l10607
  6296                           
  6297                           ; BSR set to: 0
  6298                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 393:   if (prec == 0) {
  6299  0102E6  51F7               	movf	_prec& (0+255),w,b
  6300  0102E8  11F8               	iorwf	(_prec+1)& (0+255),w,b
  6301  0102EA  A4D8               	btfss	status,2,c
  6302  0102EC  D004               	goto	l10603
  6303                           
  6304                           ; BSR set to: 0
  6305                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 394:    prec = 1;
  6306  0102EE  0E00               	movlw	0
  6307  0102F0  6FF8               	movwf	(_prec+1)& (0+255),b
  6308  0102F2  0E01               	movlw	1
  6309  0102F4  6FF7               	movwf	_prec& (0+255),b
  6310  0102F6                     l10603:
  6311                           
  6312                           ; BSR set to: 0
  6313                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 396:         p = (0 < prec) ?
      +                           prec : 6;
  6314  0102F6  BFF8               	btfsc	(_prec+1)& (0+255),7,b
  6315  0102F8  D005               	goto	u11480
  6316  0102FA  51F8               	movf	(_prec+1)& (0+255),w,b
  6317  0102FC  E108               	bnz	l2394
  6318  0102FE  05F7               	decf	_prec& (0+255),w,b
  6319  010300  B0D8               	btfsc	status,0,c
  6320  010302  D005               	goto	l2394
  6321  010304                     u11480:
  6322                           
  6323                           ; BSR set to: 0
  6324  010304  0E00               	movlw	0
  6325  010306  6F9C               	movwf	(efgtoa@p+1)& (0+255),b
  6326  010308  0E06               	movlw	6
  6327  01030A  6F9B               	movwf	efgtoa@p& (0+255),b
  6328  01030C  D008               	goto	l10613
  6329  01030E                     l2394:
  6330                           
  6331                           ; BSR set to: 0
  6332  01030E  C0F7  F09B         	movff	_prec,efgtoa@p
  6333  010312  C0F8  F09C         	movff	_prec+1,efgtoa@p+1
  6334  010316  D003               	goto	l10613
  6335  010318                     l10607:
  6336                           
  6337                           ; BSR set to: 0
  6338                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 398:         p = (prec < 0) ?
      +                           6 : prec;
  6339  010318  AFF8               	btfss	(_prec+1)& (0+255),7,b
  6340  01031A  D7F9               	goto	l2394
  6341  01031C  D7F3               	goto	u11480
  6342  01031E                     l10613:
  6343                           
  6344                           ; BSR set to: 0
  6345                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 402:     if (mode == 'g') {
  6346  01031E  0E67               	movlw	103
  6347  010320  19A0               	xorwf	efgtoa@mode& (0+255),w,b
  6348  010322  A4D8               	btfss	status,2,c
  6349  010324  D022               	goto	l10623
  6350                           
  6351                           ; BSR set to: 0
  6352                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 403:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
  6353  010326  AFB0               	btfss	(efgtoa@e+1)& (0+255),7,b
  6354  010328  D006               	goto	u11510
  6355  01032A  0EFC               	movlw	252
  6356  01032C  5DAF               	subwf	efgtoa@e& (0+255),w,b
  6357  01032E  0EFF               	movlw	255
  6358  010330  59B0               	subwfb	(efgtoa@e+1)& (0+255),w,b
  6359  010332  A0D8               	btfss	status,0,c
  6360  010334  D018               	goto	l10621
  6361  010336                     u11510:
  6362                           
  6363                           ; BSR set to: 0
  6364  010336  0EFF               	movlw	255
  6365  010338  6F80               	movwf	??_efgtoa& (0+255),b
  6366  01033A  0EFF               	movlw	255
  6367  01033C  6F81               	movwf	(??_efgtoa+1)& (0+255),b
  6368  01033E  C09B  F082         	movff	efgtoa@p,??_efgtoa+2
  6369  010342  C09C  F083         	movff	efgtoa@p+1,??_efgtoa+3
  6370  010346  5180               	movf	??_efgtoa& (0+255),w,b
  6371  010348  2782               	addwf	(??_efgtoa+2)& (0+255),f,b
  6372  01034A  5181               	movf	(??_efgtoa+1)& (0+255),w,b
  6373  01034C  2383               	addwfc	(??_efgtoa+3)& (0+255),f,b
  6374  01034E  51AF               	movf	efgtoa@e& (0+255),w,b
  6375  010350  5D82               	subwf	(??_efgtoa+2)& (0+255),w,b
  6376  010352  5183               	movf	(??_efgtoa+3)& (0+255),w,b
  6377  010354  0A80               	xorlw	128
  6378  010356  6F84               	movwf	(??_efgtoa+4)& (0+255),b
  6379  010358  51B0               	movf	(efgtoa@e+1)& (0+255),w,b
  6380  01035A  0A80               	xorlw	128
  6381  01035C  5984               	subwfb	(??_efgtoa+4)& (0+255),w,b
  6382  01035E  A0D8               	btfss	status,0,c
  6383  010360  D002               	goto	l10621
  6384                           
  6385                           ; BSR set to: 0
  6386                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 404:             nmode = 'f';
  6387  010362  0E66               	movlw	102
  6388  010364  D001               	goto	L4
  6389  010366                     l10621:
  6390                           
  6391                           ; BSR set to: 0
  6392                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 406:             nmode = 'e';
  6393  010366  0E65               	movlw	101
  6394  010368                     L4:
  6395  010368  6F9D               	movwf	efgtoa@nmode& (0+255),b
  6396  01036A                     l10623:
  6397                           
  6398                           ; BSR set to: 0
  6399                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 411:     m = p;
  6400  01036A  C09B  F091         	movff	efgtoa@p,efgtoa@m
  6401  01036E  C09C  F092         	movff	efgtoa@p+1,efgtoa@m+1
  6402                           
  6403                           ; BSR set to: 0
  6404                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 412:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
  6405  010372  0E67               	movlw	103
  6406  010374  19A0               	xorwf	efgtoa@mode& (0+255),w,b
  6407  010376  A4D8               	btfss	status,2,c
  6408  010378  D005               	goto	u11550
  6409                           
  6410                           ; BSR set to: 0
  6411  01037A  0E66               	movlw	102
  6412  01037C  199D               	xorwf	efgtoa@nmode& (0+255),w,b
  6413  01037E  B4D8               	btfsc	status,2,c
  6414                           
  6415                           ; BSR set to: 0
  6416  010380  AFB0               	btfss	(efgtoa@e+1)& (0+255),7,b
  6417  010382  D002               	goto	l10633
  6418  010384                     u11550:
  6419                           
  6420                           ; BSR set to: 0
  6421                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 413:         ++m;
  6422  010384  4B91               	infsnz	efgtoa@m& (0+255),f,b
  6423  010386  2B92               	incf	(efgtoa@m+1)& (0+255),f,b
  6424  010388                     l10633:
  6425                           
  6426                           ; BSR set to: 0
  6427                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 417:     if (nmode == 'f') {
  6428  010388  0E66               	movlw	102
  6429  01038A  199D               	xorwf	efgtoa@nmode& (0+255),w,b
  6430  01038C  A4D8               	btfss	status,2,c
  6431  01038E  D016               	goto	l10643
  6432                           
  6433                           ; BSR set to: 0
  6434                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 418:         if (e < 0) {
  6435  010390  AFB0               	btfss	(efgtoa@e+1)& (0+255),7,b
  6436  010392  D00C               	goto	l10639
  6437                           
  6438                           ; BSR set to: 0
  6439                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 419:             u = 1.0;
  6440  010394  0E00               	movlw	0
  6441  010396  6FB3               	movwf	efgtoa@u& (0+255),b
  6442  010398  0E00               	movlw	0
  6443  01039A  6FB4               	movwf	(efgtoa@u+1)& (0+255),b
  6444  01039C  0E80               	movlw	128
  6445  01039E  6FB5               	movwf	(efgtoa@u+2)& (0+255),b
  6446  0103A0  0E3F               	movlw	63
  6447  0103A2  6FB6               	movwf	(efgtoa@u+3)& (0+255),b
  6448                           
  6449                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 420:             e = 0;
  6450  0103A4  0E00               	movlw	0
  6451  0103A6  6FB0               	movwf	(efgtoa@e+1)& (0+255),b
  6452  0103A8  0E00               	movlw	0
  6453  0103AA  6FAF               	movwf	efgtoa@e& (0+255),b
  6454  0103AC                     l10639:
  6455                           
  6456                           ; BSR set to: 0
  6457                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 422:         if (!(mode == 'g
      +                          ')) {
  6458  0103AC  0E67               	movlw	103
  6459  0103AE  19A0               	xorwf	efgtoa@mode& (0+255),w,b
  6460  0103B0  B4D8               	btfsc	status,2,c
  6461  0103B2  D004               	goto	l10643
  6462                           
  6463                           ; BSR set to: 0
  6464                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 423:             m += e;
  6465  0103B4  51AF               	movf	efgtoa@e& (0+255),w,b
  6466  0103B6  2791               	addwf	efgtoa@m& (0+255),f,b
  6467  0103B8  51B0               	movf	(efgtoa@e+1)& (0+255),w,b
  6468  0103BA  2392               	addwfc	(efgtoa@m+1)& (0+255),f,b
  6469  0103BC                     l10643:
  6470                           
  6471                           ; BSR set to: 0
  6472                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 428:     i = 0;
  6473  0103BC  0E00               	movlw	0
  6474  0103BE  6FAE               	movwf	(efgtoa@i+1)& (0+255),b
  6475  0103C0  0E00               	movlw	0
  6476  0103C2  6FAD               	movwf	efgtoa@i& (0+255),b
  6477                           
  6478                           ; BSR set to: 0
  6479                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 429:     h = g;
  6480  0103C4  C0A9  F0A1         	movff	efgtoa@g,efgtoa@h
  6481  0103C8  C0AA  F0A2         	movff	efgtoa@g+1,efgtoa@h+1
  6482  0103CC  C0AB  F0A3         	movff	efgtoa@g+2,efgtoa@h+2
  6483  0103D0  C0AC  F0A4         	movff	efgtoa@g+3,efgtoa@h+3
  6484                           
  6485                           ; BSR set to: 0
  6486                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 430:     ou = u;
  6487  0103D4  C0B3  F093         	movff	efgtoa@u,efgtoa@ou
  6488  0103D8  C0B4  F094         	movff	efgtoa@u+1,efgtoa@ou+1
  6489  0103DC  C0B5  F095         	movff	efgtoa@u+2,efgtoa@ou+2
  6490  0103E0  C0B6  F096         	movff	efgtoa@u+3,efgtoa@ou+3
  6491                           
  6492                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 431:     while (i < m) {
  6493  0103E4  D07A               	goto	l10657
  6494  0103E6                     l10649:
  6495                           
  6496                           ; BSR set to: 0
  6497                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 432:         l = floorf(h/u);
  6498  0103E6  C0A1  F018         	movff	efgtoa@h,___fldiv@b
  6499  0103EA  C0A2  F019         	movff	efgtoa@h+1,___fldiv@b+1
  6500  0103EE  C0A3  F01A         	movff	efgtoa@h+2,___fldiv@b+2
  6501  0103F2  C0A4  F01B         	movff	efgtoa@h+3,___fldiv@b+3
  6502  0103F6  C0B3  F01C         	movff	efgtoa@u,___fldiv@a
  6503  0103FA  C0B4  F01D         	movff	efgtoa@u+1,___fldiv@a+1
  6504  0103FE  C0B5  F01E         	movff	efgtoa@u+2,___fldiv@a+2
  6505  010402  C0B6  F01F         	movff	efgtoa@u+3,___fldiv@a+3
  6506  010406  EC62  F08F         	call	___fldiv	;wreg free
  6507  01040A  C018  F060         	movff	?___fldiv,floorf@x
  6508  01040E  C019  F061         	movff	?___fldiv+1,floorf@x+1
  6509  010412  C01A  F062         	movff	?___fldiv+2,floorf@x+2
  6510  010416  C01B  F063         	movff	?___fldiv+3,floorf@x+3
  6511  01041A  EC5E  F092         	call	_floorf	;wreg free
  6512  01041E  C060  F0A5         	movff	?_floorf,efgtoa@l
  6513  010422  C061  F0A6         	movff	?_floorf+1,efgtoa@l+1
  6514  010426  C062  F0A7         	movff	?_floorf+2,efgtoa@l+2
  6515  01042A  C063  F0A8         	movff	?_floorf+3,efgtoa@l+3
  6516                           
  6517                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 433:         d = (int)l;
  6518  01042E  C0A5  F018         	movff	efgtoa@l,___fltol@f1
  6519  010432  C0A6  F019         	movff	efgtoa@l+1,___fltol@f1+1
  6520  010436  C0A7  F01A         	movff	efgtoa@l+2,___fltol@f1+2
  6521  01043A  C0A8  F01B         	movff	efgtoa@l+3,___fltol@f1+3
  6522  01043E  EC74  F099         	call	___fltol	;wreg free
  6523  010442  C018  F097         	movff	?___fltol,efgtoa@d
  6524  010446  C019  F098         	movff	?___fltol+1,efgtoa@d+1
  6525                           
  6526                           ; BSR set to: 0
  6527                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 434:         h -= l*u;
  6528  01044A  C0A1  F06D         	movff	efgtoa@h,___flsub@b
  6529  01044E  C0A2  F06E         	movff	efgtoa@h+1,___flsub@b+1
  6530  010452  C0A3  F06F         	movff	efgtoa@h+2,___flsub@b+2
  6531  010456  C0A4  F070         	movff	efgtoa@h+3,___flsub@b+3
  6532  01045A  C0B3  F02A         	movff	efgtoa@u,___flmul@a
  6533  01045E  C0B4  F02B         	movff	efgtoa@u+1,___flmul@a+1
  6534  010462  C0B5  F02C         	movff	efgtoa@u+2,___flmul@a+2
  6535  010466  C0B6  F02D         	movff	efgtoa@u+3,___flmul@a+3
  6536  01046A  C0A5  F026         	movff	efgtoa@l,___flmul@b
  6537  01046E  C0A6  F027         	movff	efgtoa@l+1,___flmul@b+1
  6538  010472  C0A7  F028         	movff	efgtoa@l+2,___flmul@b+2
  6539  010476  C0A8  F029         	movff	efgtoa@l+3,___flmul@b+3
  6540  01047A  ECC5  F08A         	call	___flmul	;wreg free
  6541  01047E  C026  F071         	movff	?___flmul,___flsub@a
  6542  010482  C027  F072         	movff	?___flmul+1,___flsub@a+1
  6543  010486  C028  F073         	movff	?___flmul+2,___flsub@a+2
  6544  01048A  C029  F074         	movff	?___flmul+3,___flsub@a+3
  6545  01048E  EC5E  F09F         	call	___flsub	;wreg free
  6546  010492  C06D  F0A1         	movff	?___flsub,efgtoa@h
  6547  010496  C06E  F0A2         	movff	?___flsub+1,efgtoa@h+1
  6548  01049A  C06F  F0A3         	movff	?___flsub+2,efgtoa@h+2
  6549  01049E  C070  F0A4         	movff	?___flsub+3,efgtoa@h+3
  6550                           
  6551                           ; BSR set to: 0
  6552                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 435:         u = u/10.0;
  6553  0104A2  C0B3  F018         	movff	efgtoa@u,___fldiv@b
  6554  0104A6  C0B4  F019         	movff	efgtoa@u+1,___fldiv@b+1
  6555  0104AA  C0B5  F01A         	movff	efgtoa@u+2,___fldiv@b+2
  6556  0104AE  C0B6  F01B         	movff	efgtoa@u+3,___fldiv@b+3
  6557  0104B2  0E00               	movlw	0
  6558  0104B4  6E1C               	movwf	___fldiv@a^0,c
  6559  0104B6  0E00               	movlw	0
  6560  0104B8  6E1D               	movwf	(___fldiv@a+1)^0,c
  6561  0104BA  0E20               	movlw	32
  6562  0104BC  6E1E               	movwf	(___fldiv@a+2)^0,c
  6563  0104BE  0E41               	movlw	65
  6564  0104C0  6E1F               	movwf	(___fldiv@a+3)^0,c
  6565  0104C2  EC62  F08F         	call	___fldiv	;wreg free
  6566  0104C6  C018  F0B3         	movff	?___fldiv,efgtoa@u
  6567  0104CA  C019  F0B4         	movff	?___fldiv+1,efgtoa@u+1
  6568  0104CE  C01A  F0B5         	movff	?___fldiv+2,efgtoa@u+2
  6569  0104D2  C01B  F0B6         	movff	?___fldiv+3,efgtoa@u+3
  6570                           
  6571                           ; BSR set to: 0
  6572                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 436:         ++i;
  6573  0104D6  4BAD               	infsnz	efgtoa@i& (0+255),f,b
  6574  0104D8  2BAE               	incf	(efgtoa@i+1)& (0+255),f,b
  6575  0104DA                     l10657:
  6576                           
  6577                           ; BSR set to: 0
  6578                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 431:     while (i < m) {
  6579  0104DA  5191               	movf	efgtoa@m& (0+255),w,b
  6580  0104DC  5DAD               	subwf	efgtoa@i& (0+255),w,b
  6581  0104DE  51AE               	movf	(efgtoa@i+1)& (0+255),w,b
  6582  0104E0  0A80               	xorlw	128
  6583  0104E2  6F80               	movwf	??_efgtoa& (0+255),b
  6584  0104E4  5192               	movf	(efgtoa@m+1)& (0+255),w,b
  6585  0104E6  0A80               	xorlw	128
  6586  0104E8  5980               	subwfb	??_efgtoa& (0+255),w,b
  6587  0104EA  A0D8               	btfss	status,0,c
  6588  0104EC  D77C               	goto	l10649
  6589                           
  6590                           ; BSR set to: 0
  6591                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 440:     l = u*5.0;
  6592  0104EE  C0B3  F026         	movff	efgtoa@u,___flmul@b
  6593  0104F2  C0B4  F027         	movff	efgtoa@u+1,___flmul@b+1
  6594  0104F6  C0B5  F028         	movff	efgtoa@u+2,___flmul@b+2
  6595  0104FA  C0B6  F029         	movff	efgtoa@u+3,___flmul@b+3
  6596  0104FE  0E00               	movlw	0
  6597  010500  6E2A               	movwf	___flmul@a^0,c
  6598  010502  0E00               	movlw	0
  6599  010504  6E2B               	movwf	(___flmul@a+1)^0,c
  6600  010506  0EA0               	movlw	160
  6601  010508  6E2C               	movwf	(___flmul@a+2)^0,c
  6602  01050A  0E40               	movlw	64
  6603  01050C  6E2D               	movwf	(___flmul@a+3)^0,c
  6604  01050E  ECC5  F08A         	call	___flmul	;wreg free
  6605  010512  C026  F0A5         	movff	?___flmul,efgtoa@l
  6606  010516  C027  F0A6         	movff	?___flmul+1,efgtoa@l+1
  6607  01051A  C028  F0A7         	movff	?___flmul+2,efgtoa@l+2
  6608  01051E  C029  F0A8         	movff	?___flmul+3,efgtoa@l+3
  6609                           
  6610                           ; BSR set to: 0
  6611                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 441:     if (h < l) {
  6612  010522  C0A1  F06D         	movff	efgtoa@h,___flge@ff1
  6613  010526  C0A2  F06E         	movff	efgtoa@h+1,___flge@ff1+1
  6614  01052A  C0A3  F06F         	movff	efgtoa@h+2,___flge@ff1+2
  6615  01052E  C0A4  F070         	movff	efgtoa@h+3,___flge@ff1+3
  6616  010532  C0A5  F071         	movff	efgtoa@l,___flge@ff2
  6617  010536  C0A6  F072         	movff	efgtoa@l+1,___flge@ff2+1
  6618  01053A  C0A7  F073         	movff	efgtoa@l+2,___flge@ff2+2
  6619  01053E  C0A8  F074         	movff	efgtoa@l+3,___flge@ff2+3
  6620  010542  EC1B  F097         	call	___flge	;wreg free
  6621  010546  A0D8               	btfss	status,0,c
  6622  010548  D015               	goto	u11620
  6623                           
  6624                           ; BSR set to: 0
  6625                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 445:         if ((h == l) && 
      +                          !(d % 2)) {
  6626                           
  6627                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 443:     } else {
  6628                           
  6629                           ; BSR set to: 0
  6630                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 442:         l = 0.0;
  6631  01054A  C0A1  F018         	movff	efgtoa@h,___fleq@ff1
  6632  01054E  C0A2  F019         	movff	efgtoa@h+1,___fleq@ff1+1
  6633  010552  C0A3  F01A         	movff	efgtoa@h+2,___fleq@ff1+2
  6634  010556  C0A4  F01B         	movff	efgtoa@h+3,___fleq@ff1+3
  6635  01055A  C0A5  F01C         	movff	efgtoa@l,___fleq@ff2
  6636  01055E  C0A6  F01D         	movff	efgtoa@l+1,___fleq@ff2+1
  6637  010562  C0A7  F01E         	movff	efgtoa@l+2,___fleq@ff2+2
  6638  010566  C0A8  F01F         	movff	efgtoa@l+3,___fleq@ff2+3
  6639  01056A  ECD8  F09B         	call	___fleq	;wreg free
  6640  01056E  B0D8               	btfsc	status,0,c
  6641                           
  6642                           ; BSR set to: 0
  6643  010570  B197               	btfsc	efgtoa@d& (0+255),0,b
  6644  010572  D008               	goto	l10671
  6645  010574                     u11620:
  6646                           
  6647                           ; BSR set to: 0
  6648                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 446:             l = 0.0;
  6649  010574  0E00               	movlw	0
  6650  010576  6FA5               	movwf	efgtoa@l& (0+255),b
  6651  010578  0E00               	movlw	0
  6652  01057A  6FA6               	movwf	(efgtoa@l+1)& (0+255),b
  6653  01057C  0E00               	movlw	0
  6654  01057E  6FA7               	movwf	(efgtoa@l+2)& (0+255),b
  6655  010580  0E00               	movlw	0
  6656  010582  6FA8               	movwf	(efgtoa@l+3)& (0+255),b
  6657  010584                     l10671:
  6658                           
  6659                           ; BSR set to: 0
  6660                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 451:     h = g + l;
  6661  010584  C0A9  F018         	movff	efgtoa@g,___fladd@b
  6662  010588  C0AA  F019         	movff	efgtoa@g+1,___fladd@b+1
  6663  01058C  C0AB  F01A         	movff	efgtoa@g+2,___fladd@b+2
  6664  010590  C0AC  F01B         	movff	efgtoa@g+3,___fladd@b+3
  6665  010594  C0A5  F01C         	movff	efgtoa@l,___fladd@a
  6666  010598  C0A6  F01D         	movff	efgtoa@l+1,___fladd@a+1
  6667  01059C  C0A7  F01E         	movff	efgtoa@l+2,___fladd@a+2
  6668  0105A0  C0A8  F01F         	movff	efgtoa@l+3,___fladd@a+3
  6669  0105A4  EC6E  F08C         	call	___fladd	;wreg free
  6670  0105A8  C018  F0A1         	movff	?___fladd,efgtoa@h
  6671  0105AC  C019  F0A2         	movff	?___fladd+1,efgtoa@h+1
  6672  0105B0  C01A  F0A3         	movff	?___fladd+2,efgtoa@h+2
  6673  0105B4  C01B  F0A4         	movff	?___fladd+3,efgtoa@h+3
  6674                           
  6675                           ; BSR set to: 0
  6676                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 453:  if (h >= (ou*10.0)) {
  6677  0105B8  C0A1  F06D         	movff	efgtoa@h,___flge@ff1
  6678  0105BC  C0A2  F06E         	movff	efgtoa@h+1,___flge@ff1+1
  6679  0105C0  C0A3  F06F         	movff	efgtoa@h+2,___flge@ff1+2
  6680  0105C4  C0A4  F070         	movff	efgtoa@h+3,___flge@ff1+3
  6681  0105C8  0E00               	movlw	0
  6682  0105CA  6E2A               	movwf	___flmul@a^0,c
  6683  0105CC  0E00               	movlw	0
  6684  0105CE  6E2B               	movwf	(___flmul@a+1)^0,c
  6685  0105D0  0E20               	movlw	32
  6686  0105D2  6E2C               	movwf	(___flmul@a+2)^0,c
  6687  0105D4  0E41               	movlw	65
  6688  0105D6  6E2D               	movwf	(___flmul@a+3)^0,c
  6689  0105D8  C093  F026         	movff	efgtoa@ou,___flmul@b
  6690  0105DC  C094  F027         	movff	efgtoa@ou+1,___flmul@b+1
  6691  0105E0  C095  F028         	movff	efgtoa@ou+2,___flmul@b+2
  6692  0105E4  C096  F029         	movff	efgtoa@ou+3,___flmul@b+3
  6693  0105E8  ECC5  F08A         	call	___flmul	;wreg free
  6694  0105EC  C026  F071         	movff	?___flmul,___flge@ff2
  6695  0105F0  C027  F072         	movff	?___flmul+1,___flge@ff2+1
  6696  0105F4  C028  F073         	movff	?___flmul+2,___flge@ff2+2
  6697  0105F8  C029  F074         	movff	?___flmul+3,___flge@ff2+3
  6698  0105FC  EC1B  F097         	call	___flge	;wreg free
  6699  010600  A0D8               	btfss	status,0,c
  6700  010602  D022               	goto	l10683
  6701                           
  6702                           ; BSR set to: 0
  6703                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 454:   e++;
  6704  010604  4BAF               	infsnz	efgtoa@e& (0+255),f,b
  6705  010606  2BB0               	incf	(efgtoa@e+1)& (0+255),f,b
  6706                           
  6707                           ; BSR set to: 0
  6708                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 455:   ou *= 10.0;
  6709  010608  C093  F026         	movff	efgtoa@ou,___flmul@b
  6710  01060C  C094  F027         	movff	efgtoa@ou+1,___flmul@b+1
  6711  010610  C095  F028         	movff	efgtoa@ou+2,___flmul@b+2
  6712  010614  C096  F029         	movff	efgtoa@ou+3,___flmul@b+3
  6713  010618  0E00               	movlw	0
  6714  01061A  6E2A               	movwf	___flmul@a^0,c
  6715  01061C  0E00               	movlw	0
  6716  01061E  6E2B               	movwf	(___flmul@a+1)^0,c
  6717  010620  0E20               	movlw	32
  6718  010622  6E2C               	movwf	(___flmul@a+2)^0,c
  6719  010624  0E41               	movlw	65
  6720  010626  6E2D               	movwf	(___flmul@a+3)^0,c
  6721  010628  ECC5  F08A         	call	___flmul	;wreg free
  6722  01062C  C026  F093         	movff	?___flmul,efgtoa@ou
  6723  010630  C027  F094         	movff	?___flmul+1,efgtoa@ou+1
  6724  010634  C028  F095         	movff	?___flmul+2,efgtoa@ou+2
  6725  010638  C029  F096         	movff	?___flmul+3,efgtoa@ou+3
  6726                           
  6727                           ; BSR set to: 0
  6728                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 456:   if (nmode == 'f') {
  6729  01063C  0E66               	movlw	102
  6730  01063E  199D               	xorwf	efgtoa@nmode& (0+255),w,b
  6731  010640  A4D8               	btfss	status,2,c
  6732  010642  D002               	goto	l10683
  6733                           
  6734                           ; BSR set to: 0
  6735                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 458:    m++;
  6736  010644  4B91               	infsnz	efgtoa@m& (0+255),f,b
  6737  010646  2B92               	incf	(efgtoa@m+1)& (0+255),f,b
  6738  010648                     l10683:
  6739                           
  6740                           ; BSR set to: 0
  6741                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 463:     u = ou;
  6742  010648  C093  F0B3         	movff	efgtoa@ou,efgtoa@u
  6743  01064C  C094  F0B4         	movff	efgtoa@ou+1,efgtoa@u+1
  6744  010650  C095  F0B5         	movff	efgtoa@ou+2,efgtoa@u+2
  6745  010654  C096  F0B6         	movff	efgtoa@ou+3,efgtoa@u+3
  6746                           
  6747                           ; BSR set to: 0
  6748                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 464:     ne = (nmode == 'e') 
      +                          ? 0 : e;
  6749  010658  0E65               	movlw	101
  6750  01065A  199D               	xorwf	efgtoa@nmode& (0+255),w,b
  6751  01065C  B4D8               	btfsc	status,2,c
  6752  01065E  D005               	goto	l10689
  6753                           
  6754                           ; BSR set to: 0
  6755  010660  C0AF  F08F         	movff	efgtoa@e,efgtoa@ne
  6756  010664  C0B0  F090         	movff	efgtoa@e+1,efgtoa@ne+1
  6757  010668  D004               	goto	l2422
  6758  01066A                     l10689:
  6759                           
  6760                           ; BSR set to: 0
  6761  01066A  0E00               	movlw	0
  6762  01066C  6F90               	movwf	(efgtoa@ne+1)& (0+255),b
  6763  01066E  0E00               	movlw	0
  6764  010670  6F8F               	movwf	efgtoa@ne& (0+255),b
  6765  010672                     l2422:
  6766                           
  6767                           ; BSR set to: 0
  6768                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 465:     pp = 0;
  6769  010672  0E00               	movlw	0
  6770  010674  6F8E               	movwf	(efgtoa@pp+1)& (0+255),b
  6771  010676  0E00               	movlw	0
  6772  010678  6F8D               	movwf	efgtoa@pp& (0+255),b
  6773                           
  6774                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 466:     t = 0;
  6775  01067A  0E00               	movlw	0
  6776  01067C  6F8C               	movwf	(efgtoa@t+1)& (0+255),b
  6777  01067E  0E00               	movlw	0
  6778  010680  6F8B               	movwf	efgtoa@t& (0+255),b
  6779                           
  6780                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 467:     i = 0;
  6781  010682  0E00               	movlw	0
  6782  010684  6FAE               	movwf	(efgtoa@i+1)& (0+255),b
  6783  010686  0E00               	movlw	0
  6784  010688  6FAD               	movwf	efgtoa@i& (0+255),b
  6785                           
  6786                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 468:     while ((i < m) && (n
      +                           < (80 - 5))) {
  6787  01068A  D0C4               	goto	l10739
  6788  01068C                     l10691:
  6789                           
  6790                           ; BSR set to: 0
  6791                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 469:         l = floorf(h/u);
  6792  01068C  C0A1  F018         	movff	efgtoa@h,___fldiv@b
  6793  010690  C0A2  F019         	movff	efgtoa@h+1,___fldiv@b+1
  6794  010694  C0A3  F01A         	movff	efgtoa@h+2,___fldiv@b+2
  6795  010698  C0A4  F01B         	movff	efgtoa@h+3,___fldiv@b+3
  6796  01069C  C0B3  F01C         	movff	efgtoa@u,___fldiv@a
  6797  0106A0  C0B4  F01D         	movff	efgtoa@u+1,___fldiv@a+1
  6798  0106A4  C0B5  F01E         	movff	efgtoa@u+2,___fldiv@a+2
  6799  0106A8  C0B6  F01F         	movff	efgtoa@u+3,___fldiv@a+3
  6800  0106AC  EC62  F08F         	call	___fldiv	;wreg free
  6801  0106B0  C018  F060         	movff	?___fldiv,floorf@x
  6802  0106B4  C019  F061         	movff	?___fldiv+1,floorf@x+1
  6803  0106B8  C01A  F062         	movff	?___fldiv+2,floorf@x+2
  6804  0106BC  C01B  F063         	movff	?___fldiv+3,floorf@x+3
  6805  0106C0  EC5E  F092         	call	_floorf	;wreg free
  6806  0106C4  C060  F0A5         	movff	?_floorf,efgtoa@l
  6807  0106C8  C061  F0A6         	movff	?_floorf+1,efgtoa@l+1
  6808  0106CC  C062  F0A7         	movff	?_floorf+2,efgtoa@l+2
  6809  0106D0  C063  F0A8         	movff	?_floorf+3,efgtoa@l+3
  6810                           
  6811                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 470:         d = (int)l;
  6812  0106D4  C0A5  F018         	movff	efgtoa@l,___fltol@f1
  6813  0106D8  C0A6  F019         	movff	efgtoa@l+1,___fltol@f1+1
  6814  0106DC  C0A7  F01A         	movff	efgtoa@l+2,___fltol@f1+2
  6815  0106E0  C0A8  F01B         	movff	efgtoa@l+3,___fltol@f1+3
  6816  0106E4  EC74  F099         	call	___fltol	;wreg free
  6817  0106E8  C018  F097         	movff	?___fltol,efgtoa@d
  6818  0106EC  C019  F098         	movff	?___fltol+1,efgtoa@d+1
  6819                           
  6820                           ; BSR set to: 0
  6821                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 471:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
  6822  0106F0  B83A               	btfsc	_flags^0,4,c
  6823  0106F2  D00C               	goto	l10703
  6824                           
  6825                           ; BSR set to: 0
  6826  0106F4  5197               	movf	efgtoa@d& (0+255),w,b
  6827  0106F6  1198               	iorwf	(efgtoa@d+1)& (0+255),w,b
  6828  0106F8  A4D8               	btfss	status,2,c
  6829  0106FA  D008               	goto	l10703
  6830                           
  6831                           ; BSR set to: 0
  6832  0106FC  0E67               	movlw	103
  6833  0106FE  19A0               	xorwf	efgtoa@mode& (0+255),w,b
  6834  010700  B4D8               	btfsc	status,2,c
  6835                           
  6836                           ; BSR set to: 0
  6837  010702  AF90               	btfss	(efgtoa@ne+1)& (0+255),7,b
  6838  010704  D003               	goto	l10703
  6839                           
  6840                           ; BSR set to: 0
  6841                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 472:             ++t;
  6842  010706  4B8B               	infsnz	efgtoa@t& (0+255),f,b
  6843  010708  2B8C               	incf	(efgtoa@t+1)& (0+255),f,b
  6844                           
  6845                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 473:         } else {
  6846  01070A  D039               	goto	l10731
  6847  01070C                     l10703:
  6848                           
  6849                           ; BSR set to: 0
  6850                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 474:             if (!pp && (
      +                          ne < 0)) {
  6851  01070C  518D               	movf	efgtoa@pp& (0+255),w,b
  6852  01070E  118E               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  6853  010710  B4D8               	btfsc	status,2,c
  6854                           
  6855                           ; BSR set to: 0
  6856  010712  AF90               	btfss	(efgtoa@ne+1)& (0+255),7,b
  6857  010714  D022               	goto	l10723
  6858                           
  6859                           ; BSR set to: 0
  6860                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 475:                 dbuf[n++
      +                          ] = '.';
  6861  010716  0E46               	movlw	low _dbuf
  6862  010718  25B1               	addwf	efgtoa@n& (0+255),w,b
  6863  01071A  6ED9               	movwf	fsr2l,c
  6864  01071C  0E01               	movlw	high _dbuf
  6865  01071E  21B2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6866  010720  6EDA               	movwf	fsr2h,c
  6867  010722  0E2E               	movlw	46
  6868  010724  6EDF               	movwf	indf2,c
  6869                           
  6870                           ; BSR set to: 0
  6871  010726  4BB1               	infsnz	efgtoa@n& (0+255),f,b
  6872  010728  2BB2               	incf	(efgtoa@n+1)& (0+255),f,b
  6873                           
  6874                           ; BSR set to: 0
  6875                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 476:                 --w;
  6876  01072A  079E               	decf	efgtoa@w& (0+255),f,b
  6877  01072C  A0D8               	btfss	status,0,c
  6878  01072E  079F               	decf	(efgtoa@w+1)& (0+255),f,b
  6879                           
  6880                           ; BSR set to: 0
  6881                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 477:                 pp = 1;
  6882  010730  0E00               	movlw	0
  6883  010732  6F8E               	movwf	(efgtoa@pp+1)& (0+255),b
  6884  010734  0E01               	movlw	1
  6885  010736  6F8D               	movwf	efgtoa@pp& (0+255),b
  6886  010738  D010               	goto	l10723
  6887  01073A                     l10715:
  6888                           
  6889                           ; BSR set to: 0
  6890                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 480:                 dbuf[n++
      +                          ] = '0';
  6891  01073A  0E46               	movlw	low _dbuf
  6892  01073C  25B1               	addwf	efgtoa@n& (0+255),w,b
  6893  01073E  6ED9               	movwf	fsr2l,c
  6894  010740  0E01               	movlw	high _dbuf
  6895  010742  21B2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6896  010744  6EDA               	movwf	fsr2h,c
  6897  010746  0E30               	movlw	48
  6898  010748  6EDF               	movwf	indf2,c
  6899                           
  6900                           ; BSR set to: 0
  6901  01074A  4BB1               	infsnz	efgtoa@n& (0+255),f,b
  6902  01074C  2BB2               	incf	(efgtoa@n+1)& (0+255),f,b
  6903                           
  6904                           ; BSR set to: 0
  6905                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 481:                 --w;
  6906  01074E  079E               	decf	efgtoa@w& (0+255),f,b
  6907  010750  A0D8               	btfss	status,0,c
  6908  010752  079F               	decf	(efgtoa@w+1)& (0+255),f,b
  6909                           
  6910                           ; BSR set to: 0
  6911                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 482:                 --t;
  6912  010754  078B               	decf	efgtoa@t& (0+255),f,b
  6913  010756  A0D8               	btfss	status,0,c
  6914  010758  078C               	decf	(efgtoa@t+1)& (0+255),f,b
  6915  01075A                     l10723:
  6916                           
  6917                           ; BSR set to: 0
  6918                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 479:             while (t) {
  6919  01075A  518B               	movf	efgtoa@t& (0+255),w,b
  6920  01075C  118C               	iorwf	(efgtoa@t+1)& (0+255),w,b
  6921  01075E  A4D8               	btfss	status,2,c
  6922  010760  D7EC               	goto	l10715
  6923                           
  6924                           ; BSR set to: 0
  6925                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 484:             dbuf[n++] = 
      +                          (char)((int)'0' + d);
  6926  010762  0E46               	movlw	low _dbuf
  6927  010764  25B1               	addwf	efgtoa@n& (0+255),w,b
  6928  010766  6ED9               	movwf	fsr2l,c
  6929  010768  0E01               	movlw	high _dbuf
  6930  01076A  21B2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6931  01076C  6EDA               	movwf	fsr2h,c
  6932  01076E  5197               	movf	efgtoa@d& (0+255),w,b
  6933  010770  0F30               	addlw	48
  6934  010772  6EDF               	movwf	indf2,c
  6935                           
  6936                           ; BSR set to: 0
  6937  010774  4BB1               	infsnz	efgtoa@n& (0+255),f,b
  6938  010776  2BB2               	incf	(efgtoa@n+1)& (0+255),f,b
  6939                           
  6940                           ; BSR set to: 0
  6941                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 485:             --w;
  6942  010778  079E               	decf	efgtoa@w& (0+255),f,b
  6943  01077A  A0D8               	btfss	status,0,c
  6944  01077C  079F               	decf	(efgtoa@w+1)& (0+255),f,b
  6945  01077E                     l10731:
  6946                           
  6947                           ; BSR set to: 0
  6948                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 487:         h -= l*u;
  6949  01077E  C0A1  F06D         	movff	efgtoa@h,___flsub@b
  6950  010782  C0A2  F06E         	movff	efgtoa@h+1,___flsub@b+1
  6951  010786  C0A3  F06F         	movff	efgtoa@h+2,___flsub@b+2
  6952  01078A  C0A4  F070         	movff	efgtoa@h+3,___flsub@b+3
  6953  01078E  C0B3  F02A         	movff	efgtoa@u,___flmul@a
  6954  010792  C0B4  F02B         	movff	efgtoa@u+1,___flmul@a+1
  6955  010796  C0B5  F02C         	movff	efgtoa@u+2,___flmul@a+2
  6956  01079A  C0B6  F02D         	movff	efgtoa@u+3,___flmul@a+3
  6957  01079E  C0A5  F026         	movff	efgtoa@l,___flmul@b
  6958  0107A2  C0A6  F027         	movff	efgtoa@l+1,___flmul@b+1
  6959  0107A6  C0A7  F028         	movff	efgtoa@l+2,___flmul@b+2
  6960  0107AA  C0A8  F029         	movff	efgtoa@l+3,___flmul@b+3
  6961  0107AE  ECC5  F08A         	call	___flmul	;wreg free
  6962  0107B2  C026  F071         	movff	?___flmul,___flsub@a
  6963  0107B6  C027  F072         	movff	?___flmul+1,___flsub@a+1
  6964  0107BA  C028  F073         	movff	?___flmul+2,___flsub@a+2
  6965  0107BE  C029  F074         	movff	?___flmul+3,___flsub@a+3
  6966  0107C2  EC5E  F09F         	call	___flsub	;wreg free
  6967  0107C6  C06D  F0A1         	movff	?___flsub,efgtoa@h
  6968  0107CA  C06E  F0A2         	movff	?___flsub+1,efgtoa@h+1
  6969  0107CE  C06F  F0A3         	movff	?___flsub+2,efgtoa@h+2
  6970  0107D2  C070  F0A4         	movff	?___flsub+3,efgtoa@h+3
  6971                           
  6972                           ; BSR set to: 0
  6973                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 488:         u = u/10.0;
  6974  0107D6  C0B3  F018         	movff	efgtoa@u,___fldiv@b
  6975  0107DA  C0B4  F019         	movff	efgtoa@u+1,___fldiv@b+1
  6976  0107DE  C0B5  F01A         	movff	efgtoa@u+2,___fldiv@b+2
  6977  0107E2  C0B6  F01B         	movff	efgtoa@u+3,___fldiv@b+3
  6978  0107E6  0E00               	movlw	0
  6979  0107E8  6E1C               	movwf	___fldiv@a^0,c
  6980  0107EA  0E00               	movlw	0
  6981  0107EC  6E1D               	movwf	(___fldiv@a+1)^0,c
  6982  0107EE  0E20               	movlw	32
  6983  0107F0  6E1E               	movwf	(___fldiv@a+2)^0,c
  6984  0107F2  0E41               	movlw	65
  6985  0107F4  6E1F               	movwf	(___fldiv@a+3)^0,c
  6986  0107F6  EC62  F08F         	call	___fldiv	;wreg free
  6987  0107FA  C018  F0B3         	movff	?___fldiv,efgtoa@u
  6988  0107FE  C019  F0B4         	movff	?___fldiv+1,efgtoa@u+1
  6989  010802  C01A  F0B5         	movff	?___fldiv+2,efgtoa@u+2
  6990  010806  C01B  F0B6         	movff	?___fldiv+3,efgtoa@u+3
  6991                           
  6992                           ; BSR set to: 0
  6993                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 489:         --ne;
  6994  01080A  078F               	decf	efgtoa@ne& (0+255),f,b
  6995  01080C  A0D8               	btfss	status,0,c
  6996  01080E  0790               	decf	(efgtoa@ne+1)& (0+255),f,b
  6997                           
  6998                           ; BSR set to: 0
  6999                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 490:         ++i;
  7000  010810  4BAD               	infsnz	efgtoa@i& (0+255),f,b
  7001  010812  2BAE               	incf	(efgtoa@i+1)& (0+255),f,b
  7002  010814                     l10739:
  7003                           
  7004                           ; BSR set to: 0
  7005                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 468:     while ((i < m) && (n
      +                           < (80 - 5))) {
  7006  010814  5191               	movf	efgtoa@m& (0+255),w,b
  7007  010816  5DAD               	subwf	efgtoa@i& (0+255),w,b
  7008  010818  51AE               	movf	(efgtoa@i+1)& (0+255),w,b
  7009  01081A  0A80               	xorlw	128
  7010  01081C  6F80               	movwf	??_efgtoa& (0+255),b
  7011  01081E  5192               	movf	(efgtoa@m+1)& (0+255),w,b
  7012  010820  0A80               	xorlw	128
  7013  010822  5980               	subwfb	??_efgtoa& (0+255),w,b
  7014  010824  B0D8               	btfsc	status,0,c
  7015  010826  D008               	goto	u11740
  7016                           
  7017                           ; BSR set to: 0
  7018  010828  BFB2               	btfsc	(efgtoa@n+1)& (0+255),7,b
  7019  01082A  D730               	goto	l10691
  7020  01082C  51B2               	movf	(efgtoa@n+1)& (0+255),w,b
  7021  01082E  E104               	bnz	u11740
  7022  010830  0E4B               	movlw	75
  7023  010832  5DB1               	subwf	efgtoa@n& (0+255),w,b
  7024  010834  A0D8               	btfss	status,0,c
  7025  010836  D72A               	goto	l10691
  7026  010838                     u11740:
  7027                           
  7028                           ; BSR set to: 0
  7029                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 492:     if (!pp && (flags & 
      +                          (1 << 4))) {
  7030  010838  518D               	movf	efgtoa@pp& (0+255),w,b
  7031  01083A  118E               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  7032  01083C  B4D8               	btfsc	status,2,c
  7033                           
  7034                           ; BSR set to: 0
  7035  01083E  A83A               	btfss	_flags^0,4,c
  7036  010840  D00A               	goto	l10751
  7037                           
  7038                           ; BSR set to: 0
  7039                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 493:         dbuf[n++] = '.';
  7040  010842  0E46               	movlw	low _dbuf
  7041  010844  25B1               	addwf	efgtoa@n& (0+255),w,b
  7042  010846  6ED9               	movwf	fsr2l,c
  7043  010848  0E01               	movlw	high _dbuf
  7044  01084A  21B2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7045  01084C  6EDA               	movwf	fsr2h,c
  7046  01084E  0E2E               	movlw	46
  7047  010850  6EDF               	movwf	indf2,c
  7048                           
  7049                           ; BSR set to: 0
  7050  010852  4BB1               	infsnz	efgtoa@n& (0+255),f,b
  7051  010854  2BB2               	incf	(efgtoa@n+1)& (0+255),f,b
  7052  010856                     l10751:
  7053                           
  7054                           ; BSR set to: 0
  7055                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 495:     dbuf[n] = '\0';
  7056  010856  0E46               	movlw	low _dbuf
  7057  010858  25B1               	addwf	efgtoa@n& (0+255),w,b
  7058  01085A  6ED9               	movwf	fsr2l,c
  7059  01085C  0E01               	movlw	high _dbuf
  7060  01085E  21B2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7061  010860  6EDA               	movwf	fsr2h,c
  7062  010862  0E00               	movlw	0
  7063  010864  6EDF               	movwf	indf2,c
  7064                           
  7065                           ; BSR set to: 0
  7066                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 498:     if (nmode == 'e') {
  7067  010866  0E65               	movlw	101
  7068  010868  199D               	xorwf	efgtoa@nmode& (0+255),w,b
  7069  01086A  A4D8               	btfss	status,2,c
  7070  01086C  D44C               	goto	l10553
  7071                           
  7072                           ; BSR set to: 0
  7073                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 499:         i = sizeof(dbuf)
      +                           - 1;
  7074  01086E  0E00               	movlw	0
  7075  010870  6FAE               	movwf	(efgtoa@i+1)& (0+255),b
  7076  010872  0E4F               	movlw	79
  7077  010874  6FAD               	movwf	efgtoa@i& (0+255),b
  7078                           
  7079                           ; BSR set to: 0
  7080                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 500:         dbuf[i] = '\0';
  7081  010876  0E46               	movlw	low _dbuf
  7082  010878  25AD               	addwf	efgtoa@i& (0+255),w,b
  7083  01087A  6ED9               	movwf	fsr2l,c
  7084  01087C  0E01               	movlw	high _dbuf
  7085  01087E  21AE               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7086  010880  6EDA               	movwf	fsr2h,c
  7087  010882  0E00               	movlw	0
  7088  010884  6EDF               	movwf	indf2,c
  7089                           
  7090                           ; BSR set to: 0
  7091                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 501:         sign = 0;
  7092  010886  0E00               	movlw	0
  7093  010888  6F9A               	movwf	(efgtoa@sign+1)& (0+255),b
  7094  01088A  0E00               	movlw	0
  7095  01088C  6F99               	movwf	efgtoa@sign& (0+255),b
  7096                           
  7097                           ; BSR set to: 0
  7098                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 502:         if (e < 0) {
  7099  01088E  AFB0               	btfss	(efgtoa@e+1)& (0+255),7,b
  7100  010890  D008               	goto	l10767
  7101                           
  7102                           ; BSR set to: 0
  7103                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 503:             sign = 1;
  7104  010892  0E00               	movlw	0
  7105  010894  6F9A               	movwf	(efgtoa@sign+1)& (0+255),b
  7106  010896  0E01               	movlw	1
  7107  010898  6F99               	movwf	efgtoa@sign& (0+255),b
  7108                           
  7109                           ; BSR set to: 0
  7110                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 504:             e = -e;
  7111  01089A  6DAF               	negf	efgtoa@e& (0+255),b
  7112  01089C  1FB0               	comf	(efgtoa@e+1)& (0+255),f,b
  7113  01089E  B0D8               	btfsc	status,0,c
  7114  0108A0  2BB0               	incf	(efgtoa@e+1)& (0+255),f,b
  7115  0108A2                     l10767:
  7116                           
  7117                           ; BSR set to: 0
  7118                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 506:         p = 2;
  7119  0108A2  0E00               	movlw	0
  7120  0108A4  6F9C               	movwf	(efgtoa@p+1)& (0+255),b
  7121  0108A6  0E02               	movlw	2
  7122  0108A8  6F9B               	movwf	efgtoa@p& (0+255),b
  7123                           
  7124                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 507:         while (e || (0 <
      +                           p)) {
  7125  0108AA  D02A               	goto	l10779
  7126  0108AC                     l10769:
  7127                           
  7128                           ; BSR set to: 0
  7129                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 508:             --i;
  7130  0108AC  07AD               	decf	efgtoa@i& (0+255),f,b
  7131  0108AE  A0D8               	btfss	status,0,c
  7132  0108B0  07AE               	decf	(efgtoa@i+1)& (0+255),f,b
  7133                           
  7134                           ; BSR set to: 0
  7135                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 509:             dbuf[i] = '0
      +                          ' + (e % 10);
  7136  0108B2  0E46               	movlw	low _dbuf
  7137  0108B4  25AD               	addwf	efgtoa@i& (0+255),w,b
  7138  0108B6  6ED9               	movwf	fsr2l,c
  7139  0108B8  0E01               	movlw	high _dbuf
  7140  0108BA  21AE               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7141  0108BC  6EDA               	movwf	fsr2h,c
  7142  0108BE  C0AF  F018         	movff	efgtoa@e,___awmod@dividend
  7143  0108C2  C0B0  F019         	movff	efgtoa@e+1,___awmod@dividend+1
  7144  0108C6  0E00               	movlw	0
  7145  0108C8  6E1B               	movwf	(___awmod@divisor+1)^0,c
  7146  0108CA  0E0A               	movlw	10
  7147  0108CC  6E1A               	movwf	___awmod@divisor^0,c
  7148  0108CE  ECD7  F09C         	call	___awmod	;wreg free
  7149  0108D2  5018               	movf	?___awmod^0,w,c
  7150  0108D4  0F30               	addlw	48
  7151  0108D6  6EDF               	movwf	indf2,c
  7152                           
  7153                           ; BSR set to: 0
  7154                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 510:             e = e / 10;
  7155  0108D8  C0AF  F018         	movff	efgtoa@e,___awdiv@dividend
  7156  0108DC  C0B0  F019         	movff	efgtoa@e+1,___awdiv@dividend+1
  7157  0108E0  0E00               	movlw	0
  7158  0108E2  6E1B               	movwf	(___awdiv@divisor+1)^0,c
  7159  0108E4  0E0A               	movlw	10
  7160  0108E6  6E1A               	movwf	___awdiv@divisor^0,c
  7161  0108E8  EC1D  F09C         	call	___awdiv	;wreg free
  7162  0108EC  C018  F0AF         	movff	?___awdiv,efgtoa@e
  7163  0108F0  C019  F0B0         	movff	?___awdiv+1,efgtoa@e+1
  7164                           
  7165                           ; BSR set to: 0
  7166                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 511:             --p;
  7167  0108F4  079B               	decf	efgtoa@p& (0+255),f,b
  7168  0108F6  A0D8               	btfss	status,0,c
  7169  0108F8  079C               	decf	(efgtoa@p+1)& (0+255),f,b
  7170                           
  7171                           ; BSR set to: 0
  7172                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 512:             --w;
  7173  0108FA  079E               	decf	efgtoa@w& (0+255),f,b
  7174  0108FC  A0D8               	btfss	status,0,c
  7175  0108FE  079F               	decf	(efgtoa@w+1)& (0+255),f,b
  7176  010900                     l10779:
  7177                           
  7178                           ; BSR set to: 0
  7179                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 507:         while (e || (0 <
      +                           p)) {
  7180  010900  51AF               	movf	efgtoa@e& (0+255),w,b
  7181  010902  11B0               	iorwf	(efgtoa@e+1)& (0+255),w,b
  7182  010904  A4D8               	btfss	status,2,c
  7183  010906  D7D2               	goto	l10769
  7184                           
  7185                           ; BSR set to: 0
  7186  010908  BF9C               	btfsc	(efgtoa@p+1)& (0+255),7,b
  7187  01090A  D005               	goto	u11800
  7188  01090C  519C               	movf	(efgtoa@p+1)& (0+255),w,b
  7189  01090E  E1CE               	bnz	l10769
  7190  010910  059B               	decf	efgtoa@p& (0+255),w,b
  7191  010912  B0D8               	btfsc	status,0,c
  7192  010914  D7CB               	goto	l10769
  7193  010916                     u11800:
  7194                           
  7195                           ; BSR set to: 0
  7196                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 514:         --i;
  7197  010916  07AD               	decf	efgtoa@i& (0+255),f,b
  7198  010918  A0D8               	btfss	status,0,c
  7199  01091A  07AE               	decf	(efgtoa@i+1)& (0+255),f,b
  7200                           
  7201                           ; BSR set to: 0
  7202                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 515:         dbuf[i] = sign ?
      +                           '-' : '+';
  7203  01091C  5199               	movf	efgtoa@sign& (0+255),w,b
  7204  01091E  119A               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  7205  010920  A4D8               	btfss	status,2,c
  7206  010922  D004               	goto	l10789
  7207                           
  7208                           ; BSR set to: 0
  7209  010924  0E00               	movlw	0
  7210  010926  6F88               	movwf	(_efgtoa$3853+1)& (0+255),b
  7211  010928  0E2B               	movlw	43
  7212  01092A  D003               	goto	L5
  7213  01092C                     l10789:
  7214                           
  7215                           ; BSR set to: 0
  7216  01092C  0E00               	movlw	0
  7217  01092E  6F88               	movwf	(_efgtoa$3853+1)& (0+255),b
  7218  010930  0E2D               	movlw	45
  7219  010932                     L5:
  7220  010932  6F87               	movwf	_efgtoa$3853& (0+255),b
  7221                           
  7222                           ; BSR set to: 0
  7223  010934  0E46               	movlw	low _dbuf
  7224  010936  25AD               	addwf	efgtoa@i& (0+255),w,b
  7225  010938  6ED9               	movwf	fsr2l,c
  7226  01093A  0E01               	movlw	high _dbuf
  7227  01093C  21AE               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7228  01093E  6EDA               	movwf	fsr2h,c
  7229  010940  0060  F21F  FFDF   	movff	_efgtoa$3853,indf2
  7230                           
  7231                           ; BSR set to: 0
  7232                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 516:         --w;
  7233  010946  079E               	decf	efgtoa@w& (0+255),f,b
  7234  010948  A0D8               	btfss	status,0,c
  7235  01094A  079F               	decf	(efgtoa@w+1)& (0+255),f,b
  7236                           
  7237                           ; BSR set to: 0
  7238                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 517:         --i;
  7239  01094C  07AD               	decf	efgtoa@i& (0+255),f,b
  7240  01094E  A0D8               	btfss	status,0,c
  7241  010950  07AE               	decf	(efgtoa@i+1)& (0+255),f,b
  7242                           
  7243                           ; BSR set to: 0
  7244                           
  7245                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 518:         dbuf[i] = (0 && 
      +                          isupper((int)c), ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  7246  010952  0EBF               	movlw	191
  7247  010954  6F80               	movwf	??_efgtoa& (0+255),b
  7248  010956  0EFF               	movlw	255
  7249  010958  6F81               	movwf	(??_efgtoa+1)& (0+255),b
  7250  01095A  517F               	movf	efgtoa@c& (0+255),w,b
  7251  01095C  6F82               	movwf	(??_efgtoa+2)& (0+255),b
  7252  01095E  6B83               	clrf	(??_efgtoa+3)& (0+255),b
  7253  010960  5180               	movf	??_efgtoa& (0+255),w,b
  7254  010962  2782               	addwf	(??_efgtoa+2)& (0+255),f,b
  7255  010964  5181               	movf	(??_efgtoa+1)& (0+255),w,b
  7256  010966  2383               	addwfc	(??_efgtoa+3)& (0+255),f,b
  7257  010968  5183               	movf	(??_efgtoa+3)& (0+255),w,b
  7258  01096A  E104               	bnz	u11820
  7259  01096C  0E1A               	movlw	26
  7260  01096E  5D82               	subwf	(??_efgtoa+2)& (0+255),w,b
  7261  010970  A0D8               	btfss	status,0,c
  7262  010972  D004               	goto	l10803
  7263  010974                     u11820:
  7264                           
  7265                           ; BSR set to: 0
  7266  010974  0E00               	movlw	0
  7267  010976  6F8A               	movwf	(_efgtoa$3854+1)& (0+255),b
  7268  010978  0E65               	movlw	101
  7269  01097A  D003               	goto	L6
  7270  01097C                     l10803:
  7271                           
  7272                           ; BSR set to: 0
  7273  01097C  0E00               	movlw	0
  7274  01097E  6F8A               	movwf	(_efgtoa$3854+1)& (0+255),b
  7275  010980  0E45               	movlw	69
  7276  010982                     L6:
  7277  010982  6F89               	movwf	_efgtoa$3854& (0+255),b
  7278                           
  7279                           ; BSR set to: 0
  7280  010984  0E46               	movlw	low _dbuf
  7281  010986  25AD               	addwf	efgtoa@i& (0+255),w,b
  7282  010988  6ED9               	movwf	fsr2l,c
  7283  01098A  0E01               	movlw	high _dbuf
  7284  01098C  21AE               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7285  01098E  6EDA               	movwf	fsr2h,c
  7286  010990  0060  F227  FFDF   	movff	_efgtoa$3854,indf2
  7287                           
  7288                           ; BSR set to: 0
  7289                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 519:         --w;
  7290  010996  079E               	decf	efgtoa@w& (0+255),f,b
  7291  010998  A0D8               	btfss	status,0,c
  7292  01099A  079F               	decf	(efgtoa@w+1)& (0+255),f,b
  7293                           
  7294                           ; BSR set to: 0
  7295                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 520:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
  7296  01099C  0E46               	movlw	low _dbuf
  7297  01099E  25B1               	addwf	efgtoa@n& (0+255),w,b
  7298  0109A0  6E18               	movwf	strcpy@dest^0,c
  7299  0109A2  0E01               	movlw	high _dbuf
  7300  0109A4  21B2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7301  0109A6  6E19               	movwf	(strcpy@dest+1)^0,c
  7302  0109A8  0E46               	movlw	low _dbuf
  7303  0109AA  25AD               	addwf	efgtoa@i& (0+255),w,b
  7304  0109AC  6E1A               	movwf	strcpy@src^0,c
  7305  0109AE  0E01               	movlw	high _dbuf
  7306  0109B0  21AE               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7307  0109B2  6E1B               	movwf	(strcpy@src+1)^0,c
  7308  0109B4  EC43  F09D         	call	_strcpy	;wreg free
  7309  0109B8  EF83  F080         	goto	l10553
  7310  0109BC                     __end_of_efgtoa:
  7311                           	callstack 0
  7312                           
  7313 ;; *************** function _tolower *****************
  7314 ;; Defined at:
  7315 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/tolower.c"
  7316 ;; Parameters:    Size  Location     Type
  7317 ;;  c               2   29[COMRAM] int 
  7318 ;; Auto vars:     Size  Location     Type
  7319 ;;		None
  7320 ;; Return value:  Size  Location     Type
  7321 ;;                  2   29[COMRAM] int 
  7322 ;; Registers used:
  7323 ;;		wreg, status,2, status,0
  7324 ;; Tracked objects:
  7325 ;;		On entry : 3F/0
  7326 ;;		On exit  : 3F/0
  7327 ;;		Unchanged: 3F/0
  7328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7329 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7331 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7332 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7333 ;;Total ram usage:        6 bytes
  7334 ;; Hardware stack levels used: 1
  7335 ;; Hardware stack levels required when called: 8
  7336 ;; This function calls:
  7337 ;;		_isupper
  7338 ;; This function is called by:
  7339 ;;		_efgtoa
  7340 ;;		_vfpfcnvrt
  7341 ;; This function uses a non-reentrant model
  7342 ;;
  7343                           
  7344                           	psect	text12
  7345  014182                     __ptext12:
  7346                           	callstack 0
  7347  014182                     _tolower:
  7348                           	callstack 19
  7349                           
  7350                           ; BSR set to: 0
  7351                           
  7352                           ; BSR set to: 0
  7353                           
  7354                           ; BSR set to: 0
  7355                           ;incstack = 0
  7356  014182  0EBF               	movlw	191
  7357  014184  6E20               	movwf	??_tolower^0,c
  7358  014186  0EFF               	movlw	255
  7359  014188  6E21               	movwf	(??_tolower+1)^0,c
  7360  01418A  C01E  F022         	movff	tolower@c,??_tolower+2
  7361  01418E  C01F  F023         	movff	tolower@c+1,??_tolower+3
  7362  014192  5020               	movf	??_tolower^0,w,c
  7363  014194  2622               	addwf	(??_tolower+2)^0,f,c
  7364  014196  5021               	movf	(??_tolower+1)^0,w,c
  7365  014198  2223               	addwfc	(??_tolower+3)^0,f,c
  7366  01419A  5023               	movf	(??_tolower+3)^0,w,c
  7367  01419C  E10A               	bnz	l2673
  7368  01419E  0E1A               	movlw	26
  7369  0141A0  5C22               	subwf	(??_tolower+2)^0,w,c
  7370  0141A2  B0D8               	btfsc	status,0,c
  7371  0141A4  D006               	goto	l2673
  7372                           
  7373                           ; BSR set to: 0
  7374  0141A6  0E20               	movlw	32
  7375  0141A8  101E               	iorwf	tolower@c^0,w,c
  7376  0141AA  6E1E               	movwf	?_tolower^0,c
  7377  0141AC  501F               	movf	(tolower@c+1)^0,w,c
  7378  0141AE  6E1F               	movwf	(?_tolower+1)^0,c
  7379  0141B0  0012               	return	
  7380  0141B2                     l2673:
  7381                           
  7382                           ; BSR set to: 0
  7383  0141B2  C01E  F01E         	movff	tolower@c,?_tolower
  7384  0141B6  C01F  F01F         	movff	tolower@c+1,?_tolower+1
  7385                           
  7386                           ; BSR set to: 0
  7387  0141BA  0012               	return		;funcret
  7388  0141BC                     __end_of_tolower:
  7389                           	callstack 0
  7390                           
  7391 ;; *************** function _isupper *****************
  7392 ;; Defined at:
  7393 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/isupper.c"
  7394 ;; Parameters:    Size  Location     Type
  7395 ;;  c               2   23[COMRAM] int 
  7396 ;; Auto vars:     Size  Location     Type
  7397 ;;		None
  7398 ;; Return value:  Size  Location     Type
  7399 ;;                  2   23[COMRAM] int 
  7400 ;; Registers used:
  7401 ;;		wreg, status,2, status,0
  7402 ;; Tracked objects:
  7403 ;;		On entry : 0/0
  7404 ;;		On exit  : 0/0
  7405 ;;		Unchanged: 0/0
  7406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7407 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7409 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7410 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7411 ;;Total ram usage:        6 bytes
  7412 ;; Hardware stack levels used: 1
  7413 ;; Hardware stack levels required when called: 7
  7414 ;; This function calls:
  7415 ;;		Nothing
  7416 ;; This function is called by:
  7417 ;;		_efgtoa
  7418 ;;		_vfpfcnvrt
  7419 ;;		_tolower
  7420 ;; This function uses a non-reentrant model
  7421 ;;
  7422                           
  7423                           	psect	text13
  7424  01437E                     __ptext13:
  7425                           	callstack 0
  7426  01437E                     _isupper:
  7427                           	callstack 19
  7428                           
  7429                           ; BSR set to: 0
  7430                           ;incstack = 0
  7431  01437E  0EBF               	movlw	191
  7432  014380  6E1A               	movwf	??_isupper^0,c
  7433  014382  0EFF               	movlw	255
  7434  014384  6E1B               	movwf	(??_isupper+1)^0,c
  7435  014386  C018  F01C         	movff	isupper@c,??_isupper+2
  7436  01438A  C019  F01D         	movff	isupper@c+1,??_isupper+3
  7437  01438E  501A               	movf	??_isupper^0,w,c
  7438  014390  261C               	addwf	(??_isupper+2)^0,f,c
  7439  014392  501B               	movf	(??_isupper+1)^0,w,c
  7440  014394  221D               	addwfc	(??_isupper+3)^0,f,c
  7441  014396  501D               	movf	(??_isupper+3)^0,w,c
  7442  014398  E106               	bnz	u10170
  7443  01439A  0E1A               	movlw	26
  7444  01439C  5C1C               	subwf	(??_isupper+2)^0,w,c
  7445  01439E  B0D8               	btfsc	status,0,c
  7446  0143A0  D002               	goto	u10170
  7447  0143A2  0E01               	movlw	1
  7448  0143A4  D001               	goto	u10180
  7449  0143A6                     u10170:
  7450  0143A6  0E00               	movlw	0
  7451  0143A8                     u10180:
  7452  0143A8  6E18               	movwf	?_isupper^0,c
  7453  0143AA  6A19               	clrf	(?_isupper+1)^0,c
  7454  0143AC  0012               	return		;funcret
  7455  0143AE                     __end_of_isupper:
  7456                           	callstack 0
  7457                           
  7458 ;; *************** function _strcpy *****************
  7459 ;; Defined at:
  7460 ;;		line 3 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/strcpy.c"
  7461 ;; Parameters:    Size  Location     Type
  7462 ;;  dest            2   23[COMRAM] PTR unsigned char 
  7463 ;;		 -> dbuf(80), 
  7464 ;;  src             2   25[COMRAM] PTR const unsigned char 
  7465 ;;		 -> STR_22(4), STR_21(4), STR_18(4), STR_17(4), 
  7466 ;;		 -> dbuf(80), 
  7467 ;; Auto vars:     Size  Location     Type
  7468 ;;  d               2   31[COMRAM] PTR unsigned char 
  7469 ;;		 -> dbuf(80), 
  7470 ;;  s               2   29[COMRAM] PTR const unsigned char 
  7471 ;;		 -> STR_22(4), STR_21(4), STR_18(4), STR_17(4), 
  7472 ;;		 -> dbuf(80), 
  7473 ;; Return value:  Size  Location     Type
  7474 ;;                  2   23[COMRAM] PTR unsigned char 
  7475 ;; Registers used:
  7476 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7477 ;; Tracked objects:
  7478 ;;		On entry : 3F/0
  7479 ;;		On exit  : 0/0
  7480 ;;		Unchanged: 0/0
  7481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7482 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7483 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7484 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7485 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7486 ;;Total ram usage:       10 bytes
  7487 ;; Hardware stack levels used: 1
  7488 ;; Hardware stack levels required when called: 7
  7489 ;; This function calls:
  7490 ;;		Nothing
  7491 ;; This function is called by:
  7492 ;;		_efgtoa
  7493 ;; This function uses a non-reentrant model
  7494 ;;
  7495                           
  7496                           	psect	text14
  7497  013A86                     __ptext14:
  7498                           	callstack 0
  7499  013A86                     _strcpy:
  7500                           	callstack 19
  7501                           
  7502                           ; BSR set to: 0
  7503                           
  7504                           ;incstack = 0
  7505  013A86  C01A  F01E         	movff	strcpy@src,strcpy@s
  7506  013A8A  C01B  F01F         	movff	strcpy@src+1,strcpy@s+1
  7507  013A8E  C018  F020         	movff	strcpy@dest,strcpy@d
  7508  013A92  C019  F021         	movff	strcpy@dest+1,strcpy@d+1
  7509  013A96                     l10423:
  7510  013A96  501E               	movf	strcpy@s^0,w,c
  7511  013A98  6E1C               	movwf	??_strcpy^0,c
  7512  013A9A  501F               	movf	(strcpy@s+1)^0,w,c
  7513  013A9C  6E1D               	movwf	(??_strcpy+1)^0,c
  7514  013A9E  4A1E               	infsnz	strcpy@s^0,f,c
  7515  013AA0  2A1F               	incf	(strcpy@s+1)^0,f,c
  7516  013AA2  0060  F073  FFF6   	movff	??_strcpy,tblptrl
  7517  013AA8  0060  F077  FFF7   	movff	??_strcpy+1,tblptrh
  7518  013AAE  0E00               	movlw	low (__mediumconst shr (0+16))
  7519  013AB0  6EF8               	movwf	tblptru,c
  7520  013AB2  0060  F083  FFD9   	movff	strcpy@d,fsr2l
  7521  013AB8  0060  F087  FFDA   	movff	strcpy@d+1,fsr2h
  7522  013ABE  4A20               	infsnz	strcpy@d^0,f,c
  7523  013AC0  2A21               	incf	(strcpy@d+1)^0,f,c
  7524  013AC2  0E1F               	movlw	(high __ramtop+-1)
  7525  013AC4  64F7               	cpfsgt	tblptrh,c
  7526  013AC6  D003               	bra	u11067
  7527  013AC8  0008               	tblrd		*
  7528  013ACA  50F5               	movf	tablat,w,c
  7529  013ACC  D007               	bra	u11060
  7530  013ACE                     u11067:
  7531  013ACE  006F FFDB FFE1     	movff	tblptrl,fsr1l
  7532  013AD4  006F FFDF FFE2     	movff	tblptrh,fsr1h
  7533  013ADA  50E7               	movf	indf1,w,c
  7534  013ADC                     u11060:
  7535  013ADC  6EDF               	movwf	indf2,c
  7536  013ADE  50DF               	movf	indf2,w,c
  7537  013AE0  B4D8               	btfsc	status,2,c
  7538  013AE2  0012               	return	
  7539  013AE4  D7D8               	goto	l10423
  7540  013AE6                     __end_of_strcpy:
  7541                           	callstack 0
  7542                           
  7543 ;; *************** function _pad *****************
  7544 ;; Defined at:
  7545 ;;		line 72 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  7546 ;; Parameters:    Size  Location     Type
  7547 ;;  fp              2   43[COMRAM] PTR struct _IO_FILE
  7548 ;;		 -> sprintf@f(11), NULL(0), 
  7549 ;;  buf             2   45[COMRAM] PTR unsigned char 
  7550 ;;		 -> dbuf(80), 
  7551 ;;  p               2   47[COMRAM] int 
  7552 ;; Auto vars:     Size  Location     Type
  7553 ;;  w               2    2[BANK0 ] int 
  7554 ;;  i               2    0[BANK0 ] int 
  7555 ;; Return value:  Size  Location     Type
  7556 ;;                  2   43[COMRAM] int 
  7557 ;; Registers used:
  7558 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7559 ;; Tracked objects:
  7560 ;;		On entry : 0/0
  7561 ;;		On exit  : 3F/0
  7562 ;;		Unchanged: 0/0
  7563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7564 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7565 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7566 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7567 ;;      Totals:         7       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7568 ;;Total ram usage:       11 bytes
  7569 ;; Hardware stack levels used: 1
  7570 ;; Hardware stack levels required when called: 11
  7571 ;; This function calls:
  7572 ;;		_fputc
  7573 ;;		_fputs
  7574 ;;		_strlen
  7575 ;; This function is called by:
  7576 ;;		_efgtoa
  7577 ;;		_utoa
  7578 ;; This function uses a non-reentrant model
  7579 ;;
  7580                           
  7581                           	psect	text15
  7582  013712                     __ptext15:
  7583                           	callstack 0
  7584  013712                     _pad:
  7585                           	callstack 15
  7586                           
  7587                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.36/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  7588                           
  7589                           ;incstack = 0
  7590  013712  A03A               	btfss	_flags^0,0,c
  7591  013714  D00A               	goto	l10381
  7592                           
  7593                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  7594  013716  C02E  F023         	movff	pad@buf,fputs@s
  7595  01371A  C02F  F024         	movff	pad@buf+1,fputs@s+1
  7596  01371E  C02C  F025         	movff	pad@fp,fputs@fp
  7597  013722  C02D  F026         	movff	pad@fp+1,fputs@fp+1
  7598  013726  EC0F  F09D         	call	_fputs	;wreg free
  7599  01372A                     l10381:
  7600                           
  7601                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  7602  01372A  BE31               	btfsc	(pad@p+1)^0,7,c
  7603  01372C  D005               	goto	l10385
  7604  01372E  C030  F062         	movff	pad@p,pad@w
  7605  013732  C031  F063         	movff	pad@p+1,pad@w+1
  7606  013736  D005               	goto	l2357
  7607  013738                     l10385:
  7608  013738  0E00               	movlw	0
  7609  01373A  0100               	movlb	0	; () banked
  7610  01373C  6F63               	movwf	(pad@w+1)& (0+255),b
  7611  01373E  0E00               	movlw	0
  7612  013740  6F62               	movwf	pad@w& (0+255),b
  7613  013742                     l2357:
  7614                           
  7615                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  7616  013742  0E00               	movlw	0
  7617  013744  0100               	movlb	0	; () banked
  7618  013746  6F61               	movwf	(pad@i+1)& (0+255),b
  7619  013748  0E00               	movlw	0
  7620  01374A  6F60               	movwf	pad@i& (0+255),b
  7621                           
  7622                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  7623  01374C  D00D               	goto	l10391
  7624  01374E                     l10387:
  7625                           
  7626                           ; BSR set to: 0
  7627                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  7628  01374E  0E00               	movlw	0
  7629  013750  6E1B               	movwf	(fputc@c+1)^0,c
  7630  013752  0E20               	movlw	32
  7631  013754  6E1A               	movwf	fputc@c^0,c
  7632  013756  C02C  F01C         	movff	pad@fp,fputc@fp
  7633  01375A  C02D  F01D         	movff	pad@fp+1,fputc@fp+1
  7634  01375E  EC88  F09A         	call	_fputc	;wreg free
  7635                           
  7636                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 86:         ++i;
  7637  013762  0100               	movlb	0	; () banked
  7638  013764  4B60               	infsnz	pad@i& (0+255),f,b
  7639  013766  2B61               	incf	(pad@i+1)& (0+255),f,b
  7640  013768                     l10391:
  7641                           
  7642                           ; BSR set to: 0
  7643                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  7644  013768  5162               	movf	pad@w& (0+255),w,b
  7645  01376A  5D60               	subwf	pad@i& (0+255),w,b
  7646  01376C  5161               	movf	(pad@i+1)& (0+255),w,b
  7647  01376E  0A80               	xorlw	128
  7648  013770  6E32               	movwf	??_pad^0,c
  7649  013772  5163               	movf	(pad@w+1)& (0+255),w,b
  7650  013774  0A80               	xorlw	128
  7651  013776  5832               	subwfb	??_pad^0,w,c
  7652  013778  A0D8               	btfss	status,0,c
  7653  01377A  D7E9               	goto	l10387
  7654                           
  7655                           ; BSR set to: 0
  7656                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  7657  01377C  B03A               	btfsc	_flags^0,0,c
  7658  01377E  D00A               	goto	l10395
  7659                           
  7660                           ; BSR set to: 0
  7661                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  7662  013780  C02E  F023         	movff	pad@buf,fputs@s
  7663  013784  C02F  F024         	movff	pad@buf+1,fputs@s+1
  7664  013788  C02C  F025         	movff	pad@fp,fputs@fp
  7665  01378C  C02D  F026         	movff	pad@fp+1,fputs@fp+1
  7666  013790  EC0F  F09D         	call	_fputs	;wreg free
  7667  013794                     l10395:
  7668                           
  7669                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 94:     return (int)(strlen(b
      +                          uf) + (size_t)w);
  7670  013794  C02E  F018         	movff	pad@buf,strlen@s
  7671  013798  C02F  F019         	movff	pad@buf+1,strlen@s+1
  7672  01379C  ECEF  F09E         	call	_strlen	;wreg free
  7673  0137A0  0100               	movlb	0	; () banked
  7674  0137A2  5162               	movf	pad@w& (0+255),w,b
  7675  0137A4  2418               	addwf	?_strlen^0,w,c
  7676  0137A6  6E2C               	movwf	?_pad^0,c
  7677  0137A8  5163               	movf	(pad@w+1)& (0+255),w,b
  7678  0137AA  2019               	addwfc	(?_strlen+1)^0,w,c
  7679  0137AC  6E2D               	movwf	(?_pad+1)^0,c
  7680                           
  7681                           ; BSR set to: 0
  7682  0137AE  0012               	return		;funcret
  7683  0137B0                     __end_of_pad:
  7684                           	callstack 0
  7685                           
  7686 ;; *************** function _floorf *****************
  7687 ;; Defined at:
  7688 ;;		line 3 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/floorf.c"
  7689 ;; Parameters:    Size  Location     Type
  7690 ;;  x               4    0[BANK0 ] float 
  7691 ;; Auto vars:     Size  Location     Type
  7692 ;;  u               4   16[BANK0 ] struct .
  7693 ;;  m               4   10[BANK0 ] unsigned long 
  7694 ;;  e               2   14[BANK0 ] int 
  7695 ;; Return value:  Size  Location     Type
  7696 ;;                  4    0[BANK0 ] float 
  7697 ;; Registers used:
  7698 ;;		wreg, status,2, status,0
  7699 ;; Tracked objects:
  7700 ;;		On entry : 3F/0
  7701 ;;		On exit  : 3F/0
  7702 ;;		Unchanged: 0/0
  7703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7704 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7705 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7706 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7707 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7708 ;;Total ram usage:       20 bytes
  7709 ;; Hardware stack levels used: 1
  7710 ;; Hardware stack levels required when called: 7
  7711 ;; This function calls:
  7712 ;;		Nothing
  7713 ;; This function is called by:
  7714 ;;		_efgtoa
  7715 ;; This function uses a non-reentrant model
  7716 ;;
  7717                           
  7718                           	psect	text16
  7719  0124BC                     __ptext16:
  7720                           	callstack 0
  7721  0124BC                     _floorf:
  7722                           	callstack 19
  7723                           
  7724                           ; BSR set to: 0
  7725                           
  7726                           ; BSR set to: 0
  7727                           ;incstack = 0
  7728  0124BC  C130  F070         	movff	floorf@F526,floorf@u
  7729  0124C0  C131  F071         	movff	floorf@F526+1,floorf@u+1
  7730  0124C4  C132  F072         	movff	floorf@F526+2,floorf@u+2
  7731  0124C8  C133  F073         	movff	floorf@F526+3,floorf@u+3
  7732  0124CC  C060  F070         	movff	floorf@x,floorf@u
  7733  0124D0  C061  F071         	movff	floorf@x+1,floorf@u+1
  7734  0124D4  C062  F072         	movff	floorf@x+2,floorf@u+2
  7735  0124D8  C063  F073         	movff	floorf@x+3,floorf@u+3
  7736                           
  7737                           ; BSR set to: 0
  7738  0124DC  0E81               	movlw	129
  7739  0124DE  6F64               	movwf	??_floorf& (0+255),b
  7740  0124E0  0EFF               	movlw	255
  7741  0124E2  6F65               	movwf	(??_floorf+1)& (0+255),b
  7742  0124E4  C070  F066         	movff	floorf@u,??_floorf+2
  7743  0124E8  C071  F067         	movff	floorf@u+1,??_floorf+3
  7744  0124EC  C072  F068         	movff	floorf@u+2,??_floorf+4
  7745  0124F0  C073  F069         	movff	floorf@u+3,??_floorf+5
  7746  0124F4  0E18               	movlw	24
  7747  0124F6  D005               	goto	u11090
  7748  0124F8                     u11095:
  7749  0124F8  90D8               	bcf	status,0,c
  7750  0124FA  3369               	rrcf	(??_floorf+5)& (0+255),f,b
  7751  0124FC  3368               	rrcf	(??_floorf+4)& (0+255),f,b
  7752  0124FE  3367               	rrcf	(??_floorf+3)& (0+255),f,b
  7753  012500  3366               	rrcf	(??_floorf+2)& (0+255),f,b
  7754  012502                     u11090:
  7755  012502  2EE8               	decfsz	wreg,f,c
  7756  012504  D7F9               	goto	u11095
  7757  012506  5166               	movf	(??_floorf+2)& (0+255),w,b
  7758  012508  2564               	addwf	??_floorf& (0+255),w,b
  7759  01250A  6F6E               	movwf	floorf@e& (0+255),b
  7760  01250C  0E00               	movlw	0
  7761  01250E  2165               	addwfc	(??_floorf+1)& (0+255),w,b
  7762  012510  6F6F               	movwf	(floorf@e+1)& (0+255),b
  7763  012512  BF6F               	btfsc	(floorf@e+1)& (0+255),7,b
  7764  012514  D00F               	goto	l10441
  7765  012516  516F               	movf	(floorf@e+1)& (0+255),w,b
  7766  012518  E104               	bnz	u11100
  7767  01251A  0E17               	movlw	23
  7768  01251C  5D6E               	subwf	floorf@e& (0+255),w,b
  7769  01251E  A0D8               	btfss	status,0,c
  7770  012520  D009               	goto	l10441
  7771  012522                     u11100:
  7772                           
  7773                           ; BSR set to: 0
  7774  012522  C060  F060         	movff	floorf@x,?_floorf
  7775  012526  C061  F061         	movff	floorf@x+1,?_floorf+1
  7776  01252A  C062  F062         	movff	floorf@x+2,?_floorf+2
  7777  01252E  C063  F063         	movff	floorf@x+3,?_floorf+3
  7778  012532  0012               	return	
  7779  012534                     l10441:
  7780                           
  7781                           ; BSR set to: 0
  7782  012534  BF6F               	btfsc	(floorf@e+1)& (0+255),7,b
  7783  012536  D05C               	goto	l10451
  7784                           
  7785                           ; BSR set to: 0
  7786  012538  C06E  F064         	movff	floorf@e,??_floorf
  7787  01253C  0EFF               	movlw	255
  7788  01253E  6F65               	movwf	(??_floorf+1)& (0+255),b
  7789  012540  0EFF               	movlw	255
  7790  012542  6F66               	movwf	(??_floorf+2)& (0+255),b
  7791  012544  0E7F               	movlw	127
  7792  012546  6F67               	movwf	(??_floorf+3)& (0+255),b
  7793  012548  0E00               	movlw	0
  7794  01254A  6F68               	movwf	(??_floorf+4)& (0+255),b
  7795  01254C                     u11125:
  7796  01254C  6764               	tstfsz	??_floorf& (0+255),b
  7797  01254E  D001               	goto	u11126
  7798  012550  D007               	goto	u11127
  7799  012552                     u11126:
  7800  012552  3568               	rlcf	(??_floorf+4)& (0+255),w,b
  7801  012554  3368               	rrcf	(??_floorf+4)& (0+255),f,b
  7802  012556  3367               	rrcf	(??_floorf+3)& (0+255),f,b
  7803  012558  3366               	rrcf	(??_floorf+2)& (0+255),f,b
  7804  01255A  3365               	rrcf	(??_floorf+1)& (0+255),f,b
  7805  01255C  2F64               	decfsz	??_floorf& (0+255),f,b
  7806  01255E  D7F6               	goto	u11125
  7807  012560                     u11127:
  7808  012560  C065  F06A         	movff	??_floorf+1,floorf@m
  7809  012564  C066  F06B         	movff	??_floorf+2,floorf@m+1
  7810  012568  C067  F06C         	movff	??_floorf+3,floorf@m+2
  7811  01256C  C068  F06D         	movff	??_floorf+4,floorf@m+3
  7812  012570  0100               	movlb	0	; () banked
  7813  012572  516A               	movf	floorf@m& (0+255),w,b
  7814  012574  1570               	andwf	floorf@u& (0+255),w,b
  7815  012576  6F64               	movwf	??_floorf& (0+255),b
  7816  012578  516B               	movf	(floorf@m+1)& (0+255),w,b
  7817  01257A  1571               	andwf	(floorf@u+1)& (0+255),w,b
  7818  01257C  6F65               	movwf	(??_floorf+1)& (0+255),b
  7819  01257E  516C               	movf	(floorf@m+2)& (0+255),w,b
  7820  012580  1572               	andwf	(floorf@u+2)& (0+255),w,b
  7821  012582  6F66               	movwf	(??_floorf+2)& (0+255),b
  7822  012584  516D               	movf	(floorf@m+3)& (0+255),w,b
  7823  012586  1573               	andwf	(floorf@u+3)& (0+255),w,b
  7824  012588  6F67               	movwf	(??_floorf+3)& (0+255),b
  7825  01258A  5164               	movf	??_floorf& (0+255),w,b
  7826  01258C  1165               	iorwf	(??_floorf+1)& (0+255),w,b
  7827  01258E  1166               	iorwf	(??_floorf+2)& (0+255),w,b
  7828  012590  1167               	iorwf	(??_floorf+3)& (0+255),w,b
  7829  012592  B4D8               	btfsc	status,2,c
  7830  012594  D7C6               	goto	u11100
  7831                           
  7832                           ; BSR set to: 0
  7833  012596  C070  F064         	movff	floorf@u,??_floorf
  7834  01259A  C071  F065         	movff	floorf@u+1,??_floorf+1
  7835  01259E  C072  F066         	movff	floorf@u+2,??_floorf+2
  7836  0125A2  C073  F067         	movff	floorf@u+3,??_floorf+3
  7837  0125A6  0E20               	movlw	32
  7838  0125A8  D005               	goto	u11140
  7839  0125AA                     u11145:
  7840  0125AA  90D8               	bcf	status,0,c
  7841  0125AC  3367               	rrcf	(??_floorf+3)& (0+255),f,b
  7842  0125AE  3366               	rrcf	(??_floorf+2)& (0+255),f,b
  7843  0125B0  3365               	rrcf	(??_floorf+1)& (0+255),f,b
  7844  0125B2  3364               	rrcf	??_floorf& (0+255),f,b
  7845  0125B4                     u11140:
  7846  0125B4  2EE8               	decfsz	wreg,f,c
  7847  0125B6  D7F9               	goto	u11145
  7848  0125B8  5164               	movf	??_floorf& (0+255),w,b
  7849  0125BA  B4D8               	btfsc	status,2,c
  7850  0125BC  D008               	goto	l2587
  7851                           
  7852                           ; BSR set to: 0
  7853  0125BE  516A               	movf	floorf@m& (0+255),w,b
  7854  0125C0  2770               	addwf	floorf@u& (0+255),f,b
  7855  0125C2  516B               	movf	(floorf@m+1)& (0+255),w,b
  7856  0125C4  2371               	addwfc	(floorf@u+1)& (0+255),f,b
  7857  0125C6  516C               	movf	(floorf@m+2)& (0+255),w,b
  7858  0125C8  2372               	addwfc	(floorf@u+2)& (0+255),f,b
  7859  0125CA  516D               	movf	(floorf@m+3)& (0+255),w,b
  7860  0125CC  2373               	addwfc	(floorf@u+3)& (0+255),f,b
  7861  0125CE                     l2587:
  7862                           
  7863                           ; BSR set to: 0
  7864  0125CE  1D6A               	comf	floorf@m& (0+255),w,b
  7865  0125D0  6F64               	movwf	??_floorf& (0+255),b
  7866  0125D2  1D6B               	comf	(floorf@m+1)& (0+255),w,b
  7867  0125D4  6F65               	movwf	(??_floorf+1)& (0+255),b
  7868  0125D6  1D6C               	comf	(floorf@m+2)& (0+255),w,b
  7869  0125D8  6F66               	movwf	(??_floorf+2)& (0+255),b
  7870  0125DA  1D6D               	comf	(floorf@m+3)& (0+255),w,b
  7871  0125DC  6F67               	movwf	(??_floorf+3)& (0+255),b
  7872  0125DE  5164               	movf	??_floorf& (0+255),w,b
  7873  0125E0  1770               	andwf	floorf@u& (0+255),f,b
  7874  0125E2  5165               	movf	(??_floorf+1)& (0+255),w,b
  7875  0125E4  1771               	andwf	(floorf@u+1)& (0+255),f,b
  7876  0125E6  5166               	movf	(??_floorf+2)& (0+255),w,b
  7877  0125E8  1772               	andwf	(floorf@u+2)& (0+255),f,b
  7878  0125EA  5167               	movf	(??_floorf+3)& (0+255),w,b
  7879  0125EC  1773               	andwf	(floorf@u+3)& (0+255),f,b
  7880  0125EE  D032               	goto	l10459
  7881  0125F0                     l10451:
  7882                           
  7883                           ; BSR set to: 0
  7884  0125F0  C070  F064         	movff	floorf@u,??_floorf
  7885  0125F4  C071  F065         	movff	floorf@u+1,??_floorf+1
  7886  0125F8  C072  F066         	movff	floorf@u+2,??_floorf+2
  7887  0125FC  C073  F067         	movff	floorf@u+3,??_floorf+3
  7888  012600  0E20               	movlw	32
  7889  012602  D005               	goto	u11160
  7890  012604                     u11165:
  7891  012604  90D8               	bcf	status,0,c
  7892  012606  3367               	rrcf	(??_floorf+3)& (0+255),f,b
  7893  012608  3366               	rrcf	(??_floorf+2)& (0+255),f,b
  7894  01260A  3365               	rrcf	(??_floorf+1)& (0+255),f,b
  7895  01260C  3364               	rrcf	??_floorf& (0+255),f,b
  7896  01260E                     u11160:
  7897  01260E  2EE8               	decfsz	wreg,f,c
  7898  012610  D7F9               	goto	u11165
  7899  012612  6764               	tstfsz	??_floorf& (0+255),b
  7900  012614  D008               	goto	l10455
  7901                           
  7902                           ; BSR set to: 0
  7903  012616  0E00               	movlw	0
  7904  012618  6F70               	movwf	floorf@u& (0+255),b
  7905  01261A  0E00               	movlw	0
  7906  01261C  6F71               	movwf	(floorf@u+1)& (0+255),b
  7907  01261E  0E00               	movlw	0
  7908  012620  6F72               	movwf	(floorf@u+2)& (0+255),b
  7909  012622  0E00               	movlw	0
  7910  012624  D016               	goto	L7
  7911  012626                     l10455:
  7912                           
  7913                           ; BSR set to: 0
  7914  012626  90D8               	bcf	status,0,c
  7915  012628  3570               	rlcf	floorf@u& (0+255),w,b
  7916  01262A  6F64               	movwf	??_floorf& (0+255),b
  7917  01262C  3571               	rlcf	(floorf@u+1)& (0+255),w,b
  7918  01262E  6F65               	movwf	(??_floorf+1)& (0+255),b
  7919  012630  3572               	rlcf	(floorf@u+2)& (0+255),w,b
  7920  012632  6F66               	movwf	(??_floorf+2)& (0+255),b
  7921  012634  3573               	rlcf	(floorf@u+3)& (0+255),w,b
  7922  012636  6F67               	movwf	(??_floorf+3)& (0+255),b
  7923  012638  5164               	movf	??_floorf& (0+255),w,b
  7924  01263A  1165               	iorwf	(??_floorf+1)& (0+255),w,b
  7925  01263C  1166               	iorwf	(??_floorf+2)& (0+255),w,b
  7926  01263E  1167               	iorwf	(??_floorf+3)& (0+255),w,b
  7927  012640  B4D8               	btfsc	status,2,c
  7928  012642  D008               	goto	l10459
  7929                           
  7930                           ; BSR set to: 0
  7931  012644  0E00               	movlw	0
  7932  012646  6F70               	movwf	floorf@u& (0+255),b
  7933  012648  0E00               	movlw	0
  7934  01264A  6F71               	movwf	(floorf@u+1)& (0+255),b
  7935  01264C  0E80               	movlw	128
  7936  01264E  6F72               	movwf	(floorf@u+2)& (0+255),b
  7937  012650  0EBF               	movlw	191
  7938  012652                     L7:
  7939  012652  6F73               	movwf	(floorf@u+3)& (0+255),b
  7940  012654                     l10459:
  7941                           
  7942                           ; BSR set to: 0
  7943  012654  C070  F060         	movff	floorf@u,?_floorf
  7944  012658  C071  F061         	movff	floorf@u+1,?_floorf+1
  7945  01265C  C072  F062         	movff	floorf@u+2,?_floorf+2
  7946  012660  C073  F063         	movff	floorf@u+3,?_floorf+3
  7947                           
  7948                           ; BSR set to: 0
  7949  012664  0012               	return		;funcret
  7950  012666                     __end_of_floorf:
  7951                           	callstack 0
  7952                           
  7953 ;; *************** function ___fpclassifyf *****************
  7954 ;; Defined at:
  7955 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/__fpclassifyf.c"
  7956 ;; Parameters:    Size  Location     Type
  7957 ;;  x               4   23[COMRAM] float 
  7958 ;; Auto vars:     Size  Location     Type
  7959 ;;  u               4   33[COMRAM] struct .
  7960 ;;  e               2   31[COMRAM] int 
  7961 ;; Return value:  Size  Location     Type
  7962 ;;                  2   23[COMRAM] int 
  7963 ;; Registers used:
  7964 ;;		wreg, status,2, status,0
  7965 ;; Tracked objects:
  7966 ;;		On entry : 0/0
  7967 ;;		On exit  : 0/0
  7968 ;;		Unchanged: 0/0
  7969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7970 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7971 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7972 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7973 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7974 ;;Total ram usage:       14 bytes
  7975 ;; Hardware stack levels used: 1
  7976 ;; Hardware stack levels required when called: 7
  7977 ;; This function calls:
  7978 ;;		Nothing
  7979 ;; This function is called by:
  7980 ;;		_efgtoa
  7981 ;; This function uses a non-reentrant model
  7982 ;;
  7983                           
  7984                           	psect	text17
  7985  0130A2                     __ptext17:
  7986                           	callstack 0
  7987  0130A2                     ___fpclassifyf:
  7988                           	callstack 19
  7989                           
  7990                           ; BSR set to: 0
  7991                           ;incstack = 0
  7992  0130A2  C134  F022         	movff	___fpclassifyf@F465,___fpclassifyf@u
  7993  0130A6  C135  F023         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  7994  0130AA  C136  F024         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  7995  0130AE  C137  F025         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  7996  0130B2  C018  F022         	movff	___fpclassifyf@x,___fpclassifyf@u
  7997  0130B6  C019  F023         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  7998  0130BA  C01A  F024         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  7999  0130BE  C01B  F025         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  8000  0130C2  C022  F01C         	movff	___fpclassifyf@u,??___fpclassifyf
  8001  0130C6  C023  F01D         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  8002  0130CA  C024  F01E         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  8003  0130CE  C025  F01F         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  8004  0130D2  0E18               	movlw	24
  8005  0130D4  D005               	goto	u10990
  8006  0130D6                     u10995:
  8007  0130D6  90D8               	bcf	status,0,c
  8008  0130D8  321F               	rrcf	(??___fpclassifyf+3)^0,f,c
  8009  0130DA  321E               	rrcf	(??___fpclassifyf+2)^0,f,c
  8010  0130DC  321D               	rrcf	(??___fpclassifyf+1)^0,f,c
  8011  0130DE  321C               	rrcf	??___fpclassifyf^0,f,c
  8012  0130E0                     u10990:
  8013  0130E0  2EE8               	decfsz	wreg,f,c
  8014  0130E2  D7F9               	goto	u10995
  8015  0130E4  501C               	movf	??___fpclassifyf^0,w,c
  8016  0130E6  6E20               	movwf	___fpclassifyf@e^0,c
  8017  0130E8  6A21               	clrf	(___fpclassifyf@e+1)^0,c
  8018  0130EA  5020               	movf	___fpclassifyf@e^0,w,c
  8019  0130EC  1021               	iorwf	(___fpclassifyf@e+1)^0,w,c
  8020  0130EE  A4D8               	btfss	status,2,c
  8021  0130F0  D019               	goto	l10411
  8022  0130F2  90D8               	bcf	status,0,c
  8023  0130F4  3422               	rlcf	___fpclassifyf@u^0,w,c
  8024  0130F6  6E1C               	movwf	??___fpclassifyf^0,c
  8025  0130F8  3423               	rlcf	(___fpclassifyf@u+1)^0,w,c
  8026  0130FA  6E1D               	movwf	(??___fpclassifyf+1)^0,c
  8027  0130FC  3424               	rlcf	(___fpclassifyf@u+2)^0,w,c
  8028  0130FE  6E1E               	movwf	(??___fpclassifyf+2)^0,c
  8029  013100  3425               	rlcf	(___fpclassifyf@u+3)^0,w,c
  8030  013102  6E1F               	movwf	(??___fpclassifyf+3)^0,c
  8031  013104  501C               	movf	??___fpclassifyf^0,w,c
  8032  013106  101D               	iorwf	(??___fpclassifyf+1)^0,w,c
  8033  013108  101E               	iorwf	(??___fpclassifyf+2)^0,w,c
  8034  01310A  101F               	iorwf	(??___fpclassifyf+3)^0,w,c
  8035  01310C  A4D8               	btfss	status,2,c
  8036  01310E  D005               	goto	l10407
  8037  013110  0E00               	movlw	0
  8038  013112  6E19               	movwf	(?___fpclassifyf+1)^0,c
  8039  013114  0E02               	movlw	2
  8040  013116  6E18               	movwf	?___fpclassifyf^0,c
  8041  013118  0012               	return	
  8042  01311A                     l10407:
  8043  01311A  0E00               	movlw	0
  8044  01311C  6E19               	movwf	(?___fpclassifyf+1)^0,c
  8045  01311E  0E03               	movlw	3
  8046  013120  6E18               	movwf	?___fpclassifyf^0,c
  8047  013122  0012               	return	
  8048  013124                     l10411:
  8049  013124  2820               	incf	___fpclassifyf@e^0,w,c
  8050  013126  1021               	iorwf	(___fpclassifyf@e+1)^0,w,c
  8051  013128  A4D8               	btfss	status,2,c
  8052  01312A  D01C               	goto	l10417
  8053  01312C  C022  F01C         	movff	___fpclassifyf@u,??___fpclassifyf
  8054  013130  C023  F01D         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  8055  013134  C024  F01E         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  8056  013138  C025  F01F         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  8057  01313C  0E09               	movlw	9
  8058  01313E                     u11035:
  8059  01313E  90D8               	bcf	status,0,c
  8060  013140  361C               	rlcf	??___fpclassifyf^0,f,c
  8061  013142  361D               	rlcf	(??___fpclassifyf+1)^0,f,c
  8062  013144  361E               	rlcf	(??___fpclassifyf+2)^0,f,c
  8063  013146  361F               	rlcf	(??___fpclassifyf+3)^0,f,c
  8064  013148  2EE8               	decfsz	wreg,f,c
  8065  01314A  D7F9               	goto	u11035
  8066  01314C  501C               	movf	??___fpclassifyf^0,w,c
  8067  01314E  101D               	iorwf	(??___fpclassifyf+1)^0,w,c
  8068  013150  101E               	iorwf	(??___fpclassifyf+2)^0,w,c
  8069  013152  101F               	iorwf	(??___fpclassifyf+3)^0,w,c
  8070  013154  A4D8               	btfss	status,2,c
  8071  013156  D002               	goto	u11040
  8072  013158  0E01               	movlw	1
  8073  01315A  D001               	goto	u11050
  8074  01315C                     u11040:
  8075  01315C  0E00               	movlw	0
  8076  01315E                     u11050:
  8077  01315E  6E18               	movwf	?___fpclassifyf^0,c
  8078  013160  6A19               	clrf	(?___fpclassifyf+1)^0,c
  8079  013162  0012               	return	
  8080  013164                     l10417:
  8081  013164  0E00               	movlw	0
  8082  013166  6E19               	movwf	(?___fpclassifyf+1)^0,c
  8083  013168  0E04               	movlw	4
  8084  01316A  6E18               	movwf	?___fpclassifyf^0,c
  8085  01316C  0012               	return		;funcret
  8086  01316E                     __end_of___fpclassifyf:
  8087                           	callstack 0
  8088                           
  8089 ;; *************** function ___fltol *****************
  8090 ;; Defined at:
  8091 ;;		line 43 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/fltol.c"
  8092 ;; Parameters:    Size  Location     Type
  8093 ;;  f1              4   23[COMRAM] int 
  8094 ;; Auto vars:     Size  Location     Type
  8095 ;;  exp1            1   32[COMRAM] unsigned char 
  8096 ;;  sign1           1   31[COMRAM] unsigned char 
  8097 ;; Return value:  Size  Location     Type
  8098 ;;                  4   23[COMRAM] long 
  8099 ;; Registers used:
  8100 ;;		wreg, status,2, status,0
  8101 ;; Tracked objects:
  8102 ;;		On entry : 3F/0
  8103 ;;		On exit  : 3F/0
  8104 ;;		Unchanged: 3F/0
  8105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8106 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8107 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8108 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8109 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8110 ;;Total ram usage:       10 bytes
  8111 ;; Hardware stack levels used: 1
  8112 ;; Hardware stack levels required when called: 7
  8113 ;; This function calls:
  8114 ;;		Nothing
  8115 ;; This function is called by:
  8116 ;;		_efgtoa
  8117 ;; This function uses a non-reentrant model
  8118 ;;
  8119                           
  8120                           	psect	text18
  8121  0132E8                     __ptext18:
  8122                           	callstack 0
  8123  0132E8                     ___fltol:
  8124                           	callstack 19
  8125                           
  8126                           ; BSR set to: 0
  8127                           
  8128                           ;incstack = 0
  8129  0132E8  341A               	rlcf	(___fltol@f1+2)^0,w,c
  8130  0132EA  341B               	rlcf	(___fltol@f1+3)^0,w,c
  8131  0132EC  6E21               	movwf	___fltol@exp1^0,c
  8132  0132EE  5021               	movf	___fltol@exp1^0,w,c
  8133  0132F0  A4D8               	btfss	status,2,c
  8134  0132F2  D009               	goto	l10301
  8135  0132F4                     u10810:
  8136                           
  8137                           ; BSR set to: 0
  8138  0132F4  0E00               	movlw	0
  8139  0132F6  6E18               	movwf	?___fltol^0,c
  8140  0132F8  0E00               	movlw	0
  8141  0132FA  6E19               	movwf	(?___fltol+1)^0,c
  8142  0132FC  0E00               	movlw	0
  8143  0132FE  6E1A               	movwf	(?___fltol+2)^0,c
  8144  013300  0E00               	movlw	0
  8145  013302  6E1B               	movwf	(?___fltol+3)^0,c
  8146  013304  0012               	return	
  8147  013306                     l10301:
  8148                           
  8149                           ; BSR set to: 0
  8150  013306  C018  F01C         	movff	___fltol@f1,??___fltol
  8151  01330A  C019  F01D         	movff	___fltol@f1+1,??___fltol+1
  8152  01330E  C01A  F01E         	movff	___fltol@f1+2,??___fltol+2
  8153  013312  C01B  F01F         	movff	___fltol@f1+3,??___fltol+3
  8154  013316  0E20               	movlw	32
  8155  013318  D005               	goto	u10820
  8156  01331A                     u10825:
  8157  01331A  90D8               	bcf	status,0,c
  8158  01331C  321F               	rrcf	(??___fltol+3)^0,f,c
  8159  01331E  321E               	rrcf	(??___fltol+2)^0,f,c
  8160  013320  321D               	rrcf	(??___fltol+1)^0,f,c
  8161  013322  321C               	rrcf	??___fltol^0,f,c
  8162  013324                     u10820:
  8163  013324  2EE8               	decfsz	wreg,f,c
  8164  013326  D7F9               	goto	u10825
  8165  013328  501C               	movf	??___fltol^0,w,c
  8166  01332A  6E20               	movwf	___fltol@sign1^0,c
  8167                           
  8168                           ; BSR set to: 0
  8169  01332C  8E1A               	bsf	(___fltol@f1+2)^0,7,c
  8170                           
  8171                           ; BSR set to: 0
  8172  01332E  0EFF               	movlw	255
  8173  013330  1618               	andwf	___fltol@f1^0,f,c
  8174  013332  0EFF               	movlw	255
  8175  013334  1619               	andwf	(___fltol@f1+1)^0,f,c
  8176  013336  0EFF               	movlw	255
  8177  013338  161A               	andwf	(___fltol@f1+2)^0,f,c
  8178  01333A  0E00               	movlw	0
  8179  01333C  161B               	andwf	(___fltol@f1+3)^0,f,c
  8180                           
  8181                           ; BSR set to: 0
  8182  01333E  0E96               	movlw	150
  8183  013340  5E21               	subwf	___fltol@exp1^0,f,c
  8184                           
  8185                           ; BSR set to: 0
  8186  013342  AE21               	btfss	___fltol@exp1^0,7,c
  8187  013344  D00D               	goto	l10321
  8188                           
  8189                           ; BSR set to: 0
  8190  013346  5021               	movf	___fltol@exp1^0,w,c
  8191  013348  0A80               	xorlw	128
  8192  01334A  0F97               	addlw	151
  8193  01334C  A0D8               	btfss	status,0,c
  8194  01334E  D7D2               	goto	u10810
  8195  013350                     l10317:
  8196                           
  8197                           ; BSR set to: 0
  8198  013350  90D8               	bcf	status,0,c
  8199  013352  321B               	rrcf	(___fltol@f1+3)^0,f,c
  8200  013354  321A               	rrcf	(___fltol@f1+2)^0,f,c
  8201  013356  3219               	rrcf	(___fltol@f1+1)^0,f,c
  8202  013358  3218               	rrcf	___fltol@f1^0,f,c
  8203                           
  8204                           ; BSR set to: 0
  8205  01335A  3E21               	incfsz	___fltol@exp1^0,f,c
  8206  01335C  D7F9               	goto	l10317
  8207  01335E  D00D               	goto	u10860
  8208  013360                     l10321:
  8209                           
  8210                           ; BSR set to: 0
  8211  013360  0E1F               	movlw	31
  8212  013362  6421               	cpfsgt	___fltol@exp1^0,c
  8213  013364  D007               	goto	l10329
  8214  013366  D7C6               	goto	u10810
  8215  013368                     l10327:
  8216                           
  8217                           ; BSR set to: 0
  8218  013368  90D8               	bcf	status,0,c
  8219  01336A  3618               	rlcf	___fltol@f1^0,f,c
  8220  01336C  3619               	rlcf	(___fltol@f1+1)^0,f,c
  8221  01336E  361A               	rlcf	(___fltol@f1+2)^0,f,c
  8222  013370  361B               	rlcf	(___fltol@f1+3)^0,f,c
  8223  013372  0621               	decf	___fltol@exp1^0,f,c
  8224  013374                     l10329:
  8225                           
  8226                           ; BSR set to: 0
  8227  013374  5021               	movf	___fltol@exp1^0,w,c
  8228  013376  A4D8               	btfss	status,2,c
  8229  013378  D7F7               	goto	l10327
  8230  01337A                     u10860:
  8231                           
  8232                           ; BSR set to: 0
  8233  01337A  5020               	movf	___fltol@sign1^0,w,c
  8234  01337C  B4D8               	btfsc	status,2,c
  8235  01337E  D008               	goto	l10335
  8236                           
  8237                           ; BSR set to: 0
  8238  013380  1E1B               	comf	(___fltol@f1+3)^0,f,c
  8239  013382  1E1A               	comf	(___fltol@f1+2)^0,f,c
  8240  013384  1E19               	comf	(___fltol@f1+1)^0,f,c
  8241  013386  6C18               	negf	___fltol@f1^0,c
  8242  013388  0E00               	movlw	0
  8243  01338A  2219               	addwfc	(___fltol@f1+1)^0,f,c
  8244  01338C  221A               	addwfc	(___fltol@f1+2)^0,f,c
  8245  01338E  221B               	addwfc	(___fltol@f1+3)^0,f,c
  8246  013390                     l10335:
  8247                           
  8248                           ; BSR set to: 0
  8249  013390  C018  F018         	movff	___fltol@f1,?___fltol
  8250  013394  C019  F019         	movff	___fltol@f1+1,?___fltol+1
  8251  013398  C01A  F01A         	movff	___fltol@f1+2,?___fltol+2
  8252  01339C  C01B  F01B         	movff	___fltol@f1+3,?___fltol+3
  8253                           
  8254                           ; BSR set to: 0
  8255  0133A0  0012               	return		;funcret
  8256  0133A2                     __end_of___fltol:
  8257                           	callstack 0
  8258                           
  8259 ;; *************** function ___flsub *****************
  8260 ;; Defined at:
  8261 ;;		line 245 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/sprcadd.c"
  8262 ;; Parameters:    Size  Location     Type
  8263 ;;  b               4   13[BANK0 ] long 
  8264 ;;  a               4   17[BANK0 ] long 
  8265 ;; Auto vars:     Size  Location     Type
  8266 ;;		None
  8267 ;; Return value:  Size  Location     Type
  8268 ;;                  4   13[BANK0 ] long 
  8269 ;; Registers used:
  8270 ;;		wreg, status,2, status,0, cstack
  8271 ;; Tracked objects:
  8272 ;;		On entry : 3F/0
  8273 ;;		On exit  : 3F/0
  8274 ;;		Unchanged: 0/0
  8275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8276 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8279 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8280 ;;Total ram usage:        8 bytes
  8281 ;; Hardware stack levels used: 1
  8282 ;; Hardware stack levels required when called: 8
  8283 ;; This function calls:
  8284 ;;		___fladd
  8285 ;; This function is called by:
  8286 ;;		_efgtoa
  8287 ;; This function uses a non-reentrant model
  8288 ;;
  8289                           
  8290                           	psect	text19
  8291  013EBC                     __ptext19:
  8292                           	callstack 0
  8293  013EBC                     ___flsub:
  8294                           	callstack 18
  8295                           
  8296                           ; BSR set to: 0
  8297                           
  8298                           ; BSR set to: 0
  8299                           ;incstack = 0
  8300  013EBC  0E00               	movlw	0
  8301  013EBE  1B71               	xorwf	___flsub@a& (0+255),f,b
  8302  013EC0  0E00               	movlw	0
  8303  013EC2  1B72               	xorwf	(___flsub@a+1)& (0+255),f,b
  8304  013EC4  0E00               	movlw	0
  8305  013EC6  1B73               	xorwf	(___flsub@a+2)& (0+255),f,b
  8306  013EC8  0E80               	movlw	128
  8307  013ECA  1B74               	xorwf	(___flsub@a+3)& (0+255),f,b
  8308                           
  8309                           ; BSR set to: 0
  8310  013ECC  C06D  F018         	movff	___flsub@b,___fladd@b
  8311  013ED0  C06E  F019         	movff	___flsub@b+1,___fladd@b+1
  8312  013ED4  C06F  F01A         	movff	___flsub@b+2,___fladd@b+2
  8313  013ED8  C070  F01B         	movff	___flsub@b+3,___fladd@b+3
  8314  013EDC  C071  F01C         	movff	___flsub@a,___fladd@a
  8315  013EE0  C072  F01D         	movff	___flsub@a+1,___fladd@a+1
  8316  013EE4  C073  F01E         	movff	___flsub@a+2,___fladd@a+2
  8317  013EE8  C074  F01F         	movff	___flsub@a+3,___fladd@a+3
  8318  013EEC  EC6E  F08C         	call	___fladd	;wreg free
  8319  013EF0  C018  F06D         	movff	?___fladd,?___flsub
  8320  013EF4  C019  F06E         	movff	?___fladd+1,?___flsub+1
  8321  013EF8  C01A  F06F         	movff	?___fladd+2,?___flsub+2
  8322  013EFC  C01B  F070         	movff	?___fladd+3,?___flsub+3
  8323                           
  8324                           ; BSR set to: 0
  8325  013F00  0012               	return		;funcret
  8326  013F02                     __end_of___flsub:
  8327                           	callstack 0
  8328                           
  8329 ;; *************** function ___fladd *****************
  8330 ;; Defined at:
  8331 ;;		line 10 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/sprcadd.c"
  8332 ;; Parameters:    Size  Location     Type
  8333 ;;  b               4   23[COMRAM] long 
  8334 ;;  a               4   27[COMRAM] long 
  8335 ;; Auto vars:     Size  Location     Type
  8336 ;;  grs             1   38[COMRAM] unsigned char 
  8337 ;;  bexp            1   37[COMRAM] unsigned char 
  8338 ;;  aexp            1   36[COMRAM] unsigned char 
  8339 ;;  signs           1   35[COMRAM] unsigned char 
  8340 ;; Return value:  Size  Location     Type
  8341 ;;                  4   23[COMRAM] unsigned char 
  8342 ;; Registers used:
  8343 ;;		wreg, status,2, status,0
  8344 ;; Tracked objects:
  8345 ;;		On entry : 3F/0
  8346 ;;		On exit  : 3F/0
  8347 ;;		Unchanged: 3F/0
  8348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8349 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8350 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8351 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8352 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8353 ;;Total ram usage:       16 bytes
  8354 ;; Hardware stack levels used: 1
  8355 ;; Hardware stack levels required when called: 7
  8356 ;; This function calls:
  8357 ;;		Nothing
  8358 ;; This function is called by:
  8359 ;;		___flsub
  8360 ;;		_efgtoa
  8361 ;; This function uses a non-reentrant model
  8362 ;;
  8363                           
  8364                           	psect	text20
  8365  0118DC                     __ptext20:
  8366                           	callstack 0
  8367  0118DC                     ___fladd:
  8368                           	callstack 18
  8369                           
  8370                           ; BSR set to: 0
  8371                           
  8372                           ; BSR set to: 0
  8373                           ;incstack = 0
  8374  0118DC  501B               	movf	(___fladd@b+3)^0,w,c
  8375  0118DE  0B80               	andlw	128
  8376  0118E0  6E24               	movwf	___fladd@signs^0,c
  8377  0118E2  501B               	movf	(___fladd@b+3)^0,w,c
  8378  0118E4  241B               	addwf	(___fladd@b+3)^0,w,c
  8379  0118E6  6E26               	movwf	___fladd@bexp^0,c
  8380                           
  8381                           ; BSR set to: 0
  8382  0118E8  BE1A               	btfsc	(___fladd@b+2)^0,7,c
  8383                           
  8384                           ; BSR set to: 0
  8385  0118EA  8026               	bsf	___fladd@bexp^0,0,c
  8386                           
  8387                           ; BSR set to: 0
  8388  0118EC  5026               	movf	___fladd@bexp^0,w,c
  8389  0118EE  B4D8               	btfsc	status,2,c
  8390  0118F0  D00D               	goto	l9691
  8391                           
  8392                           ; BSR set to: 0
  8393  0118F2  2826               	incf	___fladd@bexp^0,w,c
  8394  0118F4  A4D8               	btfss	status,2,c
  8395  0118F6  D008               	goto	l9687
  8396                           
  8397                           ; BSR set to: 0
  8398  0118F8  0E00               	movlw	0
  8399  0118FA  6E18               	movwf	___fladd@b^0,c
  8400  0118FC  0E00               	movlw	0
  8401  0118FE  6E19               	movwf	(___fladd@b+1)^0,c
  8402  011900  0E00               	movlw	0
  8403  011902  6E1A               	movwf	(___fladd@b+2)^0,c
  8404  011904  0E00               	movlw	0
  8405  011906  6E1B               	movwf	(___fladd@b+3)^0,c
  8406  011908                     l9687:
  8407                           
  8408                           ; BSR set to: 0
  8409  011908  8E1A               	bsf	(___fladd@b+2)^0,7,c
  8410  01190A  D006               	goto	L8
  8411  01190C                     l9691:
  8412                           
  8413                           ; BSR set to: 0
  8414  01190C  0E00               	movlw	0
  8415  01190E  6E18               	movwf	___fladd@b^0,c
  8416  011910  0E00               	movlw	0
  8417  011912  6E19               	movwf	(___fladd@b+1)^0,c
  8418  011914  0E00               	movlw	0
  8419  011916  6E1A               	movwf	(___fladd@b+2)^0,c
  8420  011918                     L8:
  8421  011918  0E00               	movlw	0
  8422  01191A  6E1B               	movwf	(___fladd@b+3)^0,c
  8423                           
  8424                           ; BSR set to: 0
  8425  01191C  501F               	movf	(___fladd@a+3)^0,w,c
  8426  01191E  0B80               	andlw	128
  8427  011920  6E25               	movwf	___fladd@aexp^0,c
  8428                           
  8429                           ; BSR set to: 0
  8430  011922  5024               	movf	___fladd@signs^0,w,c
  8431  011924  1825               	xorwf	___fladd@aexp^0,w,c
  8432  011926  A4D8               	btfss	status,2,c
  8433                           
  8434                           ; BSR set to: 0
  8435  011928  8C24               	bsf	___fladd@signs^0,6,c
  8436                           
  8437                           ; BSR set to: 0
  8438  01192A  501F               	movf	(___fladd@a+3)^0,w,c
  8439  01192C  241F               	addwf	(___fladd@a+3)^0,w,c
  8440  01192E  6E25               	movwf	___fladd@aexp^0,c
  8441                           
  8442                           ; BSR set to: 0
  8443  011930  BE1E               	btfsc	(___fladd@a+2)^0,7,c
  8444                           
  8445                           ; BSR set to: 0
  8446  011932  8025               	bsf	___fladd@aexp^0,0,c
  8447                           
  8448                           ; BSR set to: 0
  8449  011934  5025               	movf	___fladd@aexp^0,w,c
  8450  011936  B4D8               	btfsc	status,2,c
  8451  011938  D00D               	goto	l9715
  8452                           
  8453                           ; BSR set to: 0
  8454  01193A  2825               	incf	___fladd@aexp^0,w,c
  8455  01193C  A4D8               	btfss	status,2,c
  8456  01193E  D008               	goto	l9711
  8457                           
  8458                           ; BSR set to: 0
  8459  011940  0E00               	movlw	0
  8460  011942  6E1C               	movwf	___fladd@a^0,c
  8461  011944  0E00               	movlw	0
  8462  011946  6E1D               	movwf	(___fladd@a+1)^0,c
  8463  011948  0E00               	movlw	0
  8464  01194A  6E1E               	movwf	(___fladd@a+2)^0,c
  8465  01194C  0E00               	movlw	0
  8466  01194E  6E1F               	movwf	(___fladd@a+3)^0,c
  8467  011950                     l9711:
  8468                           
  8469                           ; BSR set to: 0
  8470  011950  8E1E               	bsf	(___fladd@a+2)^0,7,c
  8471  011952  D006               	goto	L9
  8472  011954                     l9715:
  8473                           
  8474                           ; BSR set to: 0
  8475  011954  0E00               	movlw	0
  8476  011956  6E1C               	movwf	___fladd@a^0,c
  8477  011958  0E00               	movlw	0
  8478  01195A  6E1D               	movwf	(___fladd@a+1)^0,c
  8479  01195C  0E00               	movlw	0
  8480  01195E  6E1E               	movwf	(___fladd@a+2)^0,c
  8481  011960                     L9:
  8482  011960  0E00               	movlw	0
  8483  011962  6E1F               	movwf	(___fladd@a+3)^0,c
  8484                           
  8485                           ; BSR set to: 0
  8486  011964  5026               	movf	___fladd@bexp^0,w,c
  8487  011966  5C25               	subwf	___fladd@aexp^0,w,c
  8488  011968  B0D8               	btfsc	status,0,c
  8489  01196A  D022               	goto	l9753
  8490                           
  8491                           ; BSR set to: 0
  8492  01196C  AC24               	btfss	___fladd@signs^0,6,c
  8493  01196E  D002               	goto	l9723
  8494                           
  8495                           ; BSR set to: 0
  8496  011970  0E80               	movlw	128
  8497  011972  1A24               	xorwf	___fladd@signs^0,f,c
  8498  011974                     l9723:
  8499                           
  8500                           ; BSR set to: 0
  8501  011974  C026  F027         	movff	___fladd@bexp,___fladd@grs
  8502                           
  8503                           ; BSR set to: 0
  8504  011978  C025  F026         	movff	___fladd@aexp,___fladd@bexp
  8505                           
  8506                           ; BSR set to: 0
  8507  01197C  C027  F025         	movff	___fladd@grs,___fladd@aexp
  8508                           
  8509                           ; BSR set to: 0
  8510  011980  C018  F027         	movff	___fladd@b,___fladd@grs
  8511                           
  8512                           ; BSR set to: 0
  8513  011984  C01C  F018         	movff	___fladd@a,___fladd@b
  8514                           
  8515                           ; BSR set to: 0
  8516  011988  C027  F01C         	movff	___fladd@grs,___fladd@a
  8517                           
  8518                           ; BSR set to: 0
  8519  01198C  C019  F027         	movff	___fladd@b+1,___fladd@grs
  8520                           
  8521                           ; BSR set to: 0
  8522  011990  C01D  F019         	movff	___fladd@a+1,___fladd@b+1
  8523                           
  8524                           ; BSR set to: 0
  8525  011994  C027  F01D         	movff	___fladd@grs,___fladd@a+1
  8526                           
  8527                           ; BSR set to: 0
  8528  011998  C01A  F027         	movff	___fladd@b+2,___fladd@grs
  8529                           
  8530                           ; BSR set to: 0
  8531  01199C  C01E  F01A         	movff	___fladd@a+2,___fladd@b+2
  8532                           
  8533                           ; BSR set to: 0
  8534  0119A0  C027  F01E         	movff	___fladd@grs,___fladd@a+2
  8535                           
  8536                           ; BSR set to: 0
  8537  0119A4  C01B  F027         	movff	___fladd@b+3,___fladd@grs
  8538                           
  8539                           ; BSR set to: 0
  8540  0119A8  C01F  F01B         	movff	___fladd@a+3,___fladd@b+3
  8541                           
  8542                           ; BSR set to: 0
  8543  0119AC  C027  F01F         	movff	___fladd@grs,___fladd@a+3
  8544  0119B0                     l9753:
  8545                           
  8546                           ; BSR set to: 0
  8547  0119B0  0E00               	movlw	0
  8548  0119B2  6E27               	movwf	___fladd@grs^0,c
  8549                           
  8550                           ; BSR set to: 0
  8551  0119B4  5026               	movf	___fladd@bexp^0,w,c
  8552  0119B6  C025  F020         	movff	___fladd@aexp,??___fladd
  8553  0119BA  6A21               	clrf	(??___fladd+1)^0,c
  8554  0119BC  5E20               	subwf	??___fladd^0,f,c
  8555  0119BE  0E00               	movlw	0
  8556  0119C0  5A21               	subwfb	(??___fladd+1)^0,f,c
  8557  0119C2  BE21               	btfsc	(??___fladd+1)^0,7,c
  8558  0119C4  D02C               	goto	l2151
  8559  0119C6  5021               	movf	(??___fladd+1)^0,w,c
  8560  0119C8  E104               	bnz	u9850
  8561  0119CA  0E1A               	movlw	26
  8562  0119CC  5C20               	subwf	??___fladd^0,w,c
  8563  0119CE  A0D8               	btfss	status,0,c
  8564  0119D0  D026               	goto	l2151
  8565  0119D2                     u9850:
  8566                           
  8567                           ; BSR set to: 0
  8568  0119D2  5018               	movf	___fladd@b^0,w,c
  8569  0119D4  1019               	iorwf	(___fladd@b+1)^0,w,c
  8570  0119D6  101A               	iorwf	(___fladd@b+2)^0,w,c
  8571  0119D8  101B               	iorwf	(___fladd@b+3)^0,w,c
  8572  0119DA  B4D8               	btfsc	status,2,c
  8573  0119DC  D002               	goto	u9860
  8574  0119DE  0E01               	movlw	1
  8575  0119E0  D001               	goto	u9870
  8576  0119E2                     u9860:
  8577  0119E2  0E00               	movlw	0
  8578  0119E4                     u9870:
  8579  0119E4  6E27               	movwf	___fladd@grs^0,c
  8580                           
  8581                           ; BSR set to: 0
  8582  0119E6  0E00               	movlw	0
  8583  0119E8  6E18               	movwf	___fladd@b^0,c
  8584  0119EA  0E00               	movlw	0
  8585  0119EC  6E19               	movwf	(___fladd@b+1)^0,c
  8586  0119EE  0E00               	movlw	0
  8587  0119F0  6E1A               	movwf	(___fladd@b+2)^0,c
  8588  0119F2  0E00               	movlw	0
  8589  0119F4  6E1B               	movwf	(___fladd@b+3)^0,c
  8590                           
  8591                           ; BSR set to: 0
  8592  0119F6  C025  F026         	movff	___fladd@aexp,___fladd@bexp
  8593  0119FA  D015               	goto	u9900
  8594  0119FC                     l2152:
  8595                           
  8596                           ; BSR set to: 0
  8597  0119FC  A027               	btfss	___fladd@grs^0,0,c
  8598  0119FE  D005               	goto	l9765
  8599                           
  8600                           ; BSR set to: 0
  8601  011A00  90D8               	bcf	status,0,c
  8602  011A02  3027               	rrcf	___fladd@grs^0,w,c
  8603  011A04  0901               	iorlw	1
  8604  011A06  6E27               	movwf	___fladd@grs^0,c
  8605  011A08  D002               	goto	l9767
  8606  011A0A                     l9765:
  8607                           
  8608                           ; BSR set to: 0
  8609  011A0A  90D8               	bcf	status,0,c
  8610  011A0C  3227               	rrcf	___fladd@grs^0,f,c
  8611  011A0E                     l9767:
  8612                           
  8613                           ; BSR set to: 0
  8614  011A0E  B018               	btfsc	___fladd@b^0,0,c
  8615                           
  8616                           ; BSR set to: 0
  8617  011A10  8E27               	bsf	___fladd@grs^0,7,c
  8618                           
  8619                           ; BSR set to: 0
  8620  011A12  341B               	rlcf	(___fladd@b+3)^0,w,c
  8621  011A14  321B               	rrcf	(___fladd@b+3)^0,f,c
  8622  011A16  321A               	rrcf	(___fladd@b+2)^0,f,c
  8623  011A18  3219               	rrcf	(___fladd@b+1)^0,f,c
  8624  011A1A  3218               	rrcf	___fladd@b^0,f,c
  8625                           
  8626                           ; BSR set to: 0
  8627  011A1C  2A26               	incf	___fladd@bexp^0,f,c
  8628  011A1E                     l2151:
  8629                           
  8630                           ; BSR set to: 0
  8631  011A1E  5025               	movf	___fladd@aexp^0,w,c
  8632  011A20  5C26               	subwf	___fladd@bexp^0,w,c
  8633  011A22  A0D8               	btfss	status,0,c
  8634  011A24  D7EB               	goto	l2152
  8635  011A26                     u9900:
  8636                           
  8637                           ; BSR set to: 0
  8638  011A26  BC24               	btfsc	___fladd@signs^0,6,c
  8639  011A28  D028               	goto	l9799
  8640                           
  8641                           ; BSR set to: 0
  8642  011A2A  5026               	movf	___fladd@bexp^0,w,c
  8643  011A2C  A4D8               	btfss	status,2,c
  8644  011A2E  D009               	goto	l9781
  8645                           
  8646                           ; BSR set to: 0
  8647  011A30  0E00               	movlw	0
  8648  011A32  6E18               	movwf	?___fladd^0,c
  8649  011A34  0E00               	movlw	0
  8650  011A36  6E19               	movwf	(?___fladd+1)^0,c
  8651  011A38  0E00               	movlw	0
  8652  011A3A  6E1A               	movwf	(?___fladd+2)^0,c
  8653  011A3C  0E00               	movlw	0
  8654  011A3E  6E1B               	movwf	(?___fladd+3)^0,c
  8655  011A40  0012               	return	
  8656  011A42                     l9781:
  8657                           
  8658                           ; BSR set to: 0
  8659  011A42  501C               	movf	___fladd@a^0,w,c
  8660  011A44  2618               	addwf	___fladd@b^0,f,c
  8661  011A46  501D               	movf	(___fladd@a+1)^0,w,c
  8662  011A48  2219               	addwfc	(___fladd@b+1)^0,f,c
  8663  011A4A  501E               	movf	(___fladd@a+2)^0,w,c
  8664  011A4C  221A               	addwfc	(___fladd@b+2)^0,f,c
  8665  011A4E  501F               	movf	(___fladd@a+3)^0,w,c
  8666  011A50  221B               	addwfc	(___fladd@b+3)^0,f,c
  8667                           
  8668                           ; BSR set to: 0
  8669  011A52  A01B               	btfss	(___fladd@b+3)^0,0,c
  8670  011A54  D071               	goto	u10030
  8671                           
  8672                           ; BSR set to: 0
  8673  011A56  A027               	btfss	___fladd@grs^0,0,c
  8674  011A58  D005               	goto	l9789
  8675                           
  8676                           ; BSR set to: 0
  8677  011A5A  90D8               	bcf	status,0,c
  8678  011A5C  3027               	rrcf	___fladd@grs^0,w,c
  8679  011A5E  0901               	iorlw	1
  8680  011A60  6E27               	movwf	___fladd@grs^0,c
  8681  011A62  D002               	goto	l9791
  8682  011A64                     l9789:
  8683                           
  8684                           ; BSR set to: 0
  8685  011A64  90D8               	bcf	status,0,c
  8686  011A66  3227               	rrcf	___fladd@grs^0,f,c
  8687  011A68                     l9791:
  8688                           
  8689                           ; BSR set to: 0
  8690  011A68  B018               	btfsc	___fladd@b^0,0,c
  8691                           
  8692                           ; BSR set to: 0
  8693  011A6A  8E27               	bsf	___fladd@grs^0,7,c
  8694                           
  8695                           ; BSR set to: 0
  8696  011A6C  341B               	rlcf	(___fladd@b+3)^0,w,c
  8697  011A6E  321B               	rrcf	(___fladd@b+3)^0,f,c
  8698  011A70  321A               	rrcf	(___fladd@b+2)^0,f,c
  8699  011A72  3219               	rrcf	(___fladd@b+1)^0,f,c
  8700  011A74  3218               	rrcf	___fladd@b^0,f,c
  8701                           
  8702                           ; BSR set to: 0
  8703  011A76  2A26               	incf	___fladd@bexp^0,f,c
  8704  011A78  D05F               	goto	u10030
  8705  011A7A                     l9799:
  8706                           
  8707                           ; BSR set to: 0
  8708  011A7A  501C               	movf	___fladd@a^0,w,c
  8709  011A7C  5C18               	subwf	___fladd@b^0,w,c
  8710  011A7E  501D               	movf	(___fladd@a+1)^0,w,c
  8711  011A80  5819               	subwfb	(___fladd@b+1)^0,w,c
  8712  011A82  501E               	movf	(___fladd@a+2)^0,w,c
  8713  011A84  581A               	subwfb	(___fladd@b+2)^0,w,c
  8714  011A86  501B               	movf	(___fladd@b+3)^0,w,c
  8715  011A88  0A80               	xorlw	128
  8716  011A8A  6E20               	movwf	??___fladd^0,c
  8717  011A8C  501F               	movf	(___fladd@a+3)^0,w,c
  8718  011A8E  0A80               	xorlw	128
  8719  011A90  5820               	subwfb	??___fladd^0,w,c
  8720  011A92  B0D8               	btfsc	status,0,c
  8721  011A94  D025               	goto	l9809
  8722                           
  8723                           ; BSR set to: 0
  8724  011A96  5018               	movf	___fladd@b^0,w,c
  8725  011A98  5C1C               	subwf	___fladd@a^0,w,c
  8726  011A9A  6E20               	movwf	??___fladd^0,c
  8727  011A9C  5019               	movf	(___fladd@b+1)^0,w,c
  8728  011A9E  581D               	subwfb	(___fladd@a+1)^0,w,c
  8729  011AA0  6E21               	movwf	(??___fladd+1)^0,c
  8730  011AA2  501A               	movf	(___fladd@b+2)^0,w,c
  8731  011AA4  581E               	subwfb	(___fladd@a+2)^0,w,c
  8732  011AA6  6E22               	movwf	(??___fladd+2)^0,c
  8733  011AA8  501B               	movf	(___fladd@b+3)^0,w,c
  8734  011AAA  581F               	subwfb	(___fladd@a+3)^0,w,c
  8735  011AAC  6E23               	movwf	(??___fladd+3)^0,c
  8736  011AAE  0EFF               	movlw	255
  8737  011AB0  2420               	addwf	??___fladd^0,w,c
  8738  011AB2  6E18               	movwf	___fladd@b^0,c
  8739  011AB4  0EFF               	movlw	255
  8740  011AB6  2021               	addwfc	(??___fladd+1)^0,w,c
  8741  011AB8  6E19               	movwf	(___fladd@b+1)^0,c
  8742  011ABA  0EFF               	movlw	255
  8743  011ABC  2022               	addwfc	(??___fladd+2)^0,w,c
  8744  011ABE  6E1A               	movwf	(___fladd@b+2)^0,c
  8745  011AC0  0EFF               	movlw	255
  8746  011AC2  2023               	addwfc	(??___fladd+3)^0,w,c
  8747  011AC4  6E1B               	movwf	(___fladd@b+3)^0,c
  8748  011AC6  0E80               	movlw	128
  8749  011AC8  1A24               	xorwf	___fladd@signs^0,f,c
  8750                           
  8751                           ; BSR set to: 0
  8752  011ACA  6C27               	negf	___fladd@grs^0,c
  8753                           
  8754                           ; BSR set to: 0
  8755  011ACC  5027               	movf	___fladd@grs^0,w,c
  8756  011ACE  A4D8               	btfss	status,2,c
  8757  011AD0  D00F               	goto	l2167
  8758                           
  8759                           ; BSR set to: 0
  8760  011AD2  0E01               	movlw	1
  8761  011AD4  2618               	addwf	___fladd@b^0,f,c
  8762  011AD6  0E00               	movlw	0
  8763  011AD8  2219               	addwfc	(___fladd@b+1)^0,f,c
  8764  011ADA  221A               	addwfc	(___fladd@b+2)^0,f,c
  8765  011ADC  221B               	addwfc	(___fladd@b+3)^0,f,c
  8766  011ADE  D008               	goto	l2167
  8767  011AE0                     l9809:
  8768                           
  8769                           ; BSR set to: 0
  8770  011AE0  501C               	movf	___fladd@a^0,w,c
  8771  011AE2  5E18               	subwf	___fladd@b^0,f,c
  8772  011AE4  501D               	movf	(___fladd@a+1)^0,w,c
  8773  011AE6  5A19               	subwfb	(___fladd@b+1)^0,f,c
  8774  011AE8  501E               	movf	(___fladd@a+2)^0,w,c
  8775  011AEA  5A1A               	subwfb	(___fladd@b+2)^0,f,c
  8776  011AEC  501F               	movf	(___fladd@a+3)^0,w,c
  8777  011AEE  5A1B               	subwfb	(___fladd@b+3)^0,f,c
  8778  011AF0                     l2167:
  8779                           
  8780                           ; BSR set to: 0
  8781  011AF0  5018               	movf	___fladd@b^0,w,c
  8782  011AF2  1019               	iorwf	(___fladd@b+1)^0,w,c
  8783  011AF4  101A               	iorwf	(___fladd@b+2)^0,w,c
  8784  011AF6  101B               	iorwf	(___fladd@b+3)^0,w,c
  8785  011AF8  A4D8               	btfss	status,2,c
  8786  011AFA  D01C               	goto	l9833
  8787                           
  8788                           ; BSR set to: 0
  8789  011AFC  5027               	movf	___fladd@grs^0,w,c
  8790  011AFE  A4D8               	btfss	status,2,c
  8791  011B00  D019               	goto	l9833
  8792                           
  8793                           ; BSR set to: 0
  8794  011B02  0E00               	movlw	0
  8795  011B04  6E18               	movwf	?___fladd^0,c
  8796  011B06  0E00               	movlw	0
  8797  011B08  6E19               	movwf	(?___fladd+1)^0,c
  8798  011B0A  0E00               	movlw	0
  8799  011B0C  6E1A               	movwf	(?___fladd+2)^0,c
  8800  011B0E  0E00               	movlw	0
  8801  011B10  6E1B               	movwf	(?___fladd+3)^0,c
  8802  011B12  0012               	return	
  8803  011B14                     l9817:
  8804                           
  8805                           ; BSR set to: 0
  8806  011B14  90D8               	bcf	status,0,c
  8807  011B16  3618               	rlcf	___fladd@b^0,f,c
  8808  011B18  3619               	rlcf	(___fladd@b+1)^0,f,c
  8809  011B1A  361A               	rlcf	(___fladd@b+2)^0,f,c
  8810  011B1C  361B               	rlcf	(___fladd@b+3)^0,f,c
  8811                           
  8812                           ; BSR set to: 0
  8813  011B1E  BE27               	btfsc	___fladd@grs^0,7,c
  8814                           
  8815                           ; BSR set to: 0
  8816  011B20  8018               	bsf	___fladd@b^0,0,c
  8817                           
  8818                           ; BSR set to: 0
  8819  011B22  A027               	btfss	___fladd@grs^0,0,c
  8820  011B24  D002               	goto	l9827
  8821                           
  8822                           ; BSR set to: 0
  8823  011B26  80D8               	bsf	status,0,c
  8824  011B28  D001               	goto	L10
  8825  011B2A                     l9827:
  8826                           
  8827                           ; BSR set to: 0
  8828  011B2A  90D8               	bcf	status,0,c
  8829  011B2C                     L10:
  8830  011B2C  3627               	rlcf	___fladd@grs^0,f,c
  8831                           
  8832                           ; BSR set to: 0
  8833  011B2E  5026               	movf	___fladd@bexp^0,w,c
  8834  011B30  A4D8               	btfss	status,2,c
  8835                           
  8836                           ; BSR set to: 0
  8837  011B32  0626               	decf	___fladd@bexp^0,f,c
  8838  011B34                     l9833:
  8839                           
  8840                           ; BSR set to: 0
  8841  011B34  AE1A               	btfss	(___fladd@b+2)^0,7,c
  8842  011B36  D7EE               	goto	l9817
  8843  011B38                     u10030:
  8844                           
  8845                           ; BSR set to: 0
  8846  011B38  0E00               	movlw	0
  8847  011B3A  6E25               	movwf	___fladd@aexp^0,c
  8848                           
  8849                           ; BSR set to: 0
  8850  011B3C  AE27               	btfss	___fladd@grs^0,7,c
  8851  011B3E  D00B               	goto	l2176
  8852                           
  8853                           ; BSR set to: 0
  8854  011B40  C027  F020         	movff	___fladd@grs,??___fladd
  8855  011B44  0E7F               	movlw	127
  8856  011B46  1620               	andwf	??___fladd^0,f,c
  8857  011B48  B4D8               	btfsc	status,2,c
  8858  011B4A  D003               	goto	l2177
  8859  011B4C                     u10050:
  8860                           
  8861                           ; BSR set to: 0
  8862  011B4C  0E01               	movlw	1
  8863  011B4E  6E25               	movwf	___fladd@aexp^0,c
  8864  011B50  D002               	goto	l2176
  8865  011B52                     l2177:
  8866                           
  8867                           ; BSR set to: 0
  8868  011B52  B018               	btfsc	___fladd@b^0,0,c
  8869  011B54  D7FB               	goto	u10050
  8870  011B56                     l2176:
  8871                           
  8872                           ; BSR set to: 0
  8873  011B56  5025               	movf	___fladd@aexp^0,w,c
  8874  011B58  B4D8               	btfsc	status,2,c
  8875  011B5A  D020               	goto	l9853
  8876                           
  8877                           ; BSR set to: 0
  8878  011B5C  0E01               	movlw	1
  8879  011B5E  2618               	addwf	___fladd@b^0,f,c
  8880  011B60  0E00               	movlw	0
  8881  011B62  2219               	addwfc	(___fladd@b+1)^0,f,c
  8882  011B64  221A               	addwfc	(___fladd@b+2)^0,f,c
  8883  011B66  221B               	addwfc	(___fladd@b+3)^0,f,c
  8884                           
  8885                           ; BSR set to: 0
  8886  011B68  A01B               	btfss	(___fladd@b+3)^0,0,c
  8887  011B6A  D018               	goto	l9853
  8888                           
  8889                           ; BSR set to: 0
  8890  011B6C  C018  F020         	movff	___fladd@b,??___fladd
  8891  011B70  C019  F021         	movff	___fladd@b+1,??___fladd+1
  8892  011B74  C01A  F022         	movff	___fladd@b+2,??___fladd+2
  8893  011B78  C01B  F023         	movff	___fladd@b+3,??___fladd+3
  8894  011B7C  3423               	rlcf	(??___fladd+3)^0,w,c
  8895  011B7E  3223               	rrcf	(??___fladd+3)^0,f,c
  8896  011B80  3222               	rrcf	(??___fladd+2)^0,f,c
  8897  011B82  3221               	rrcf	(??___fladd+1)^0,f,c
  8898  011B84  3220               	rrcf	??___fladd^0,f,c
  8899  011B86  C020  F018         	movff	??___fladd,___fladd@b
  8900  011B8A  C021  F019         	movff	??___fladd+1,___fladd@b+1
  8901  011B8E  C022  F01A         	movff	??___fladd+2,___fladd@b+2
  8902  011B92  C023  F01B         	movff	??___fladd+3,___fladd@b+3
  8903  011B96  2826               	incf	___fladd@bexp^0,w,c
  8904  011B98  A4D8               	btfss	status,2,c
  8905                           
  8906                           ; BSR set to: 0
  8907  011B9A  2A26               	incf	___fladd@bexp^0,f,c
  8908  011B9C                     l9853:
  8909                           
  8910                           ; BSR set to: 0
  8911  011B9C  2826               	incf	___fladd@bexp^0,w,c
  8912  011B9E  B4D8               	btfsc	status,2,c
  8913  011BA0  D003               	goto	u10110
  8914                           
  8915                           ; BSR set to: 0
  8916  011BA2  5026               	movf	___fladd@bexp^0,w,c
  8917  011BA4  A4D8               	btfss	status,2,c
  8918  011BA6  D00D               	goto	l9861
  8919  011BA8                     u10110:
  8920                           
  8921                           ; BSR set to: 0
  8922  011BA8  0E00               	movlw	0
  8923  011BAA  6E18               	movwf	___fladd@b^0,c
  8924  011BAC  0E00               	movlw	0
  8925  011BAE  6E19               	movwf	(___fladd@b+1)^0,c
  8926  011BB0  0E00               	movlw	0
  8927  011BB2  6E1A               	movwf	(___fladd@b+2)^0,c
  8928  011BB4  0E00               	movlw	0
  8929  011BB6  6E1B               	movwf	(___fladd@b+3)^0,c
  8930  011BB8  5026               	movf	___fladd@bexp^0,w,c
  8931  011BBA  A4D8               	btfss	status,2,c
  8932  011BBC  D002               	goto	l9861
  8933                           
  8934                           ; BSR set to: 0
  8935  011BBE  0E00               	movlw	0
  8936  011BC0  6E24               	movwf	___fladd@signs^0,c
  8937  011BC2                     l9861:
  8938                           
  8939                           ; BSR set to: 0
  8940  011BC2  A026               	btfss	___fladd@bexp^0,0,c
  8941  011BC4  D002               	goto	l9865
  8942                           
  8943                           ; BSR set to: 0
  8944  011BC6  8E1A               	bsf	(___fladd@b+2)^0,7,c
  8945  011BC8  D001               	goto	l9867
  8946  011BCA                     l9865:
  8947                           
  8948                           ; BSR set to: 0
  8949  011BCA  9E1A               	bcf	(___fladd@b+2)^0,7,c
  8950  011BCC                     l9867:
  8951                           
  8952                           ; BSR set to: 0
  8953  011BCC  90D8               	bcf	status,0,c
  8954  011BCE  3026               	rrcf	___fladd@bexp^0,w,c
  8955  011BD0  6E1B               	movwf	(___fladd@b+3)^0,c
  8956                           
  8957                           ; BSR set to: 0
  8958  011BD2  BE24               	btfsc	___fladd@signs^0,7,c
  8959                           
  8960                           ; BSR set to: 0
  8961  011BD4  8E1B               	bsf	(___fladd@b+3)^0,7,c
  8962                           
  8963                           ; BSR set to: 0
  8964  011BD6  C018  F018         	movff	___fladd@b,?___fladd
  8965  011BDA  C019  F019         	movff	___fladd@b+1,?___fladd+1
  8966  011BDE  C01A  F01A         	movff	___fladd@b+2,?___fladd+2
  8967  011BE2  C01B  F01B         	movff	___fladd@b+3,?___fladd+3
  8968                           
  8969                           ; BSR set to: 0
  8970  011BE6  0012               	return		;funcret
  8971  011BE8                     __end_of___fladd:
  8972                           	callstack 0
  8973                           
  8974 ;; *************** function ___flneg *****************
  8975 ;; Defined at:
  8976 ;;		line 15 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/flneg.c"
  8977 ;; Parameters:    Size  Location     Type
  8978 ;;  f1              4   23[COMRAM] unsigned char 
  8979 ;; Auto vars:     Size  Location     Type
  8980 ;;		None
  8981 ;; Return value:  Size  Location     Type
  8982 ;;                  4   23[COMRAM] unsigned char 
  8983 ;; Registers used:
  8984 ;;		wreg, status,2, status,0
  8985 ;; Tracked objects:
  8986 ;;		On entry : 3F/0
  8987 ;;		On exit  : 3F/0
  8988 ;;		Unchanged: 3F/0
  8989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8990 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8993 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8994 ;;Total ram usage:        4 bytes
  8995 ;; Hardware stack levels used: 1
  8996 ;; Hardware stack levels required when called: 7
  8997 ;; This function calls:
  8998 ;;		Nothing
  8999 ;; This function is called by:
  9000 ;;		_efgtoa
  9001 ;; This function uses a non-reentrant model
  9002 ;;
  9003                           
  9004                           	psect	text21
  9005  01440C                     __ptext21:
  9006                           	callstack 0
  9007  01440C                     ___flneg:
  9008                           	callstack 19
  9009                           
  9010                           ; BSR set to: 0
  9011                           
  9012                           ; BSR set to: 0
  9013                           ;incstack = 0
  9014  01440C  5018               	movf	___flneg@f1^0,w,c
  9015  01440E  1019               	iorwf	(___flneg@f1+1)^0,w,c
  9016  014410  101A               	iorwf	(___flneg@f1+2)^0,w,c
  9017  014412  101B               	iorwf	(___flneg@f1+3)^0,w,c
  9018  014414  B4D8               	btfsc	status,2,c
  9019  014416  D008               	goto	l10291
  9020                           
  9021                           ; BSR set to: 0
  9022  014418  0E00               	movlw	0
  9023  01441A  1A18               	xorwf	___flneg@f1^0,f,c
  9024  01441C  0E00               	movlw	0
  9025  01441E  1A19               	xorwf	(___flneg@f1+1)^0,f,c
  9026  014420  0E00               	movlw	0
  9027  014422  1A1A               	xorwf	(___flneg@f1+2)^0,f,c
  9028  014424  0E80               	movlw	128
  9029  014426  1A1B               	xorwf	(___flneg@f1+3)^0,f,c
  9030  014428                     l10291:
  9031                           
  9032                           ; BSR set to: 0
  9033  014428  C018  F018         	movff	___flneg@f1,?___flneg
  9034  01442C  C019  F019         	movff	___flneg@f1+1,?___flneg+1
  9035  014430  C01A  F01A         	movff	___flneg@f1+2,?___flneg+2
  9036  014434  C01B  F01B         	movff	___flneg@f1+3,?___flneg+3
  9037                           
  9038                           ; BSR set to: 0
  9039  014438  0012               	return		;funcret
  9040  01443A                     __end_of___flneg:
  9041                           	callstack 0
  9042                           
  9043 ;; *************** function ___flmul *****************
  9044 ;; Defined at:
  9045 ;;		line 8 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/sprcmul.c"
  9046 ;; Parameters:    Size  Location     Type
  9047 ;;  b               4   37[COMRAM] unsigned char 
  9048 ;;  a               4   41[COMRAM] unsigned char 
  9049 ;; Auto vars:     Size  Location     Type
  9050 ;;  prod            4    7[BANK0 ] struct .
  9051 ;;  grs             4    3[BANK0 ] unsigned long 
  9052 ;;  temp            2   11[BANK0 ] struct .
  9053 ;;  bexp            1    2[BANK0 ] unsigned char 
  9054 ;;  aexp            1    1[BANK0 ] unsigned char 
  9055 ;;  sign            1    0[BANK0 ] unsigned char 
  9056 ;; Return value:  Size  Location     Type
  9057 ;;                  4   37[COMRAM] unsigned char 
  9058 ;; Registers used:
  9059 ;;		wreg, status,2, status,0, prodl, prodh
  9060 ;; Tracked objects:
  9061 ;;		On entry : 0/0
  9062 ;;		On exit  : 3F/0
  9063 ;;		Unchanged: 0/0
  9064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9065 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9066 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9067 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9068 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9069 ;;Total ram usage:       25 bytes
  9070 ;; Hardware stack levels used: 1
  9071 ;; Hardware stack levels required when called: 7
  9072 ;; This function calls:
  9073 ;;		Nothing
  9074 ;; This function is called by:
  9075 ;;		_main
  9076 ;;		_efgtoa
  9077 ;; This function uses a non-reentrant model
  9078 ;;
  9079                           
  9080                           	psect	text22
  9081  01158A                     __ptext22:
  9082                           	callstack 0
  9083  01158A                     ___flmul:
  9084                           	callstack 19
  9085                           
  9086                           ; BSR set to: 0
  9087                           ;incstack = 0
  9088  01158A  5029               	movf	(___flmul@b+3)^0,w,c
  9089  01158C  0B80               	andlw	128
  9090  01158E  0100               	movlb	0	; () banked
  9091  011590  6F60               	movwf	___flmul@sign& (0+255),b
  9092  011592  5029               	movf	(___flmul@b+3)^0,w,c
  9093  011594  2429               	addwf	(___flmul@b+3)^0,w,c
  9094  011596  6F62               	movwf	___flmul@bexp& (0+255),b
  9095                           
  9096                           ; BSR set to: 0
  9097  011598  BE28               	btfsc	(___flmul@b+2)^0,7,c
  9098                           
  9099                           ; BSR set to: 0
  9100  01159A  8162               	bsf	___flmul@bexp& (0+255),0,b
  9101                           
  9102                           ; BSR set to: 0
  9103  01159C  5162               	movf	___flmul@bexp& (0+255),w,b
  9104  01159E  B4D8               	btfsc	status,2,c
  9105  0115A0  D00D               	goto	l10047
  9106                           
  9107                           ; BSR set to: 0
  9108  0115A2  2962               	incf	___flmul@bexp& (0+255),w,b
  9109  0115A4  A4D8               	btfss	status,2,c
  9110  0115A6  D008               	goto	l10045
  9111                           
  9112                           ; BSR set to: 0
  9113  0115A8  0E00               	movlw	0
  9114  0115AA  6E26               	movwf	___flmul@b^0,c
  9115  0115AC  0E00               	movlw	0
  9116  0115AE  6E27               	movwf	(___flmul@b+1)^0,c
  9117  0115B0  0E00               	movlw	0
  9118  0115B2  6E28               	movwf	(___flmul@b+2)^0,c
  9119  0115B4  0E00               	movlw	0
  9120  0115B6  6E29               	movwf	(___flmul@b+3)^0,c
  9121  0115B8                     l10045:
  9122                           
  9123                           ; BSR set to: 0
  9124  0115B8  8E28               	bsf	(___flmul@b+2)^0,7,c
  9125  0115BA  D008               	goto	l10049
  9126  0115BC                     l10047:
  9127                           
  9128                           ; BSR set to: 0
  9129  0115BC  0E00               	movlw	0
  9130  0115BE  6E26               	movwf	___flmul@b^0,c
  9131  0115C0  0E00               	movlw	0
  9132  0115C2  6E27               	movwf	(___flmul@b+1)^0,c
  9133  0115C4  0E00               	movlw	0
  9134  0115C6  6E28               	movwf	(___flmul@b+2)^0,c
  9135  0115C8  0E00               	movlw	0
  9136  0115CA  6E29               	movwf	(___flmul@b+3)^0,c
  9137  0115CC                     l10049:
  9138                           
  9139                           ; BSR set to: 0
  9140  0115CC  502D               	movf	(___flmul@a+3)^0,w,c
  9141  0115CE  0B80               	andlw	128
  9142  0115D0  1B60               	xorwf	___flmul@sign& (0+255),f,b
  9143                           
  9144                           ; BSR set to: 0
  9145  0115D2  502D               	movf	(___flmul@a+3)^0,w,c
  9146  0115D4  242D               	addwf	(___flmul@a+3)^0,w,c
  9147  0115D6  6F61               	movwf	___flmul@aexp& (0+255),b
  9148                           
  9149                           ; BSR set to: 0
  9150  0115D8  BE2C               	btfsc	(___flmul@a+2)^0,7,c
  9151                           
  9152                           ; BSR set to: 0
  9153  0115DA  8161               	bsf	___flmul@aexp& (0+255),0,b
  9154                           
  9155                           ; BSR set to: 0
  9156  0115DC  5161               	movf	___flmul@aexp& (0+255),w,b
  9157  0115DE  B4D8               	btfsc	status,2,c
  9158  0115E0  D00D               	goto	l10065
  9159                           
  9160                           ; BSR set to: 0
  9161  0115E2  2961               	incf	___flmul@aexp& (0+255),w,b
  9162  0115E4  A4D8               	btfss	status,2,c
  9163  0115E6  D008               	goto	l10063
  9164                           
  9165                           ; BSR set to: 0
  9166  0115E8  0E00               	movlw	0
  9167  0115EA  6E2A               	movwf	___flmul@a^0,c
  9168  0115EC  0E00               	movlw	0
  9169  0115EE  6E2B               	movwf	(___flmul@a+1)^0,c
  9170  0115F0  0E00               	movlw	0
  9171  0115F2  6E2C               	movwf	(___flmul@a+2)^0,c
  9172  0115F4  0E00               	movlw	0
  9173  0115F6  6E2D               	movwf	(___flmul@a+3)^0,c
  9174  0115F8                     l10063:
  9175                           
  9176                           ; BSR set to: 0
  9177  0115F8  8E2C               	bsf	(___flmul@a+2)^0,7,c
  9178  0115FA  D008               	goto	l2236
  9179  0115FC                     l10065:
  9180                           
  9181                           ; BSR set to: 0
  9182  0115FC  0E00               	movlw	0
  9183  0115FE  6E2A               	movwf	___flmul@a^0,c
  9184  011600  0E00               	movlw	0
  9185  011602  6E2B               	movwf	(___flmul@a+1)^0,c
  9186  011604  0E00               	movlw	0
  9187  011606  6E2C               	movwf	(___flmul@a+2)^0,c
  9188  011608  0E00               	movlw	0
  9189  01160A  6E2D               	movwf	(___flmul@a+3)^0,c
  9190  01160C                     l2236:
  9191                           
  9192                           ; BSR set to: 0
  9193  01160C  5161               	movf	___flmul@aexp& (0+255),w,b
  9194  01160E  B4D8               	btfsc	status,2,c
  9195  011610  D003               	goto	u10490
  9196                           
  9197                           ; BSR set to: 0
  9198  011612  5162               	movf	___flmul@bexp& (0+255),w,b
  9199  011614  A4D8               	btfss	status,2,c
  9200  011616  D009               	goto	l10073
  9201  011618                     u10490:
  9202                           
  9203                           ; BSR set to: 0
  9204  011618  0E00               	movlw	0
  9205  01161A  6E26               	movwf	?___flmul^0,c
  9206  01161C  0E00               	movlw	0
  9207  01161E  6E27               	movwf	(?___flmul+1)^0,c
  9208  011620  0E00               	movlw	0
  9209  011622  6E28               	movwf	(?___flmul+2)^0,c
  9210  011624  0E00               	movlw	0
  9211  011626  6E29               	movwf	(?___flmul+3)^0,c
  9212  011628  0012               	return	
  9213  01162A                     l10073:
  9214                           
  9215                           ; BSR set to: 0
  9216  01162A  502C               	movf	(___flmul@a+2)^0,w,c
  9217  01162C  0226               	mulwf	___flmul@b^0,c
  9218  01162E  006F FFCC  F06B    	movff	prodl,___flmul@temp
  9219  011634  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  9220                           
  9221                           ; BSR set to: 0
  9222  01163A  516B               	movf	___flmul@temp& (0+255),w,b
  9223  01163C  6F63               	movwf	___flmul@grs& (0+255),b
  9224  01163E  6B64               	clrf	(___flmul@grs+1)& (0+255),b
  9225  011640  6B65               	clrf	(___flmul@grs+2)& (0+255),b
  9226  011642  6B66               	clrf	(___flmul@grs+3)& (0+255),b
  9227                           
  9228                           ; BSR set to: 0
  9229  011644  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  9230  011646  6F67               	movwf	___flmul@prod& (0+255),b
  9231  011648  6B68               	clrf	(___flmul@prod+1)& (0+255),b
  9232  01164A  6B69               	clrf	(___flmul@prod+2)& (0+255),b
  9233  01164C  6B6A               	clrf	(___flmul@prod+3)& (0+255),b
  9234  01164E  502B               	movf	(___flmul@a+1)^0,w,c
  9235  011650  0227               	mulwf	(___flmul@b+1)^0,c
  9236  011652  006F FFCC  F06B    	movff	prodl,___flmul@temp
  9237  011658  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  9238                           
  9239                           ; BSR set to: 0
  9240  01165E  516B               	movf	___flmul@temp& (0+255),w,b
  9241  011660  2763               	addwf	___flmul@grs& (0+255),f,b
  9242  011662  0E00               	movlw	0
  9243  011664  2364               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9244  011666  2365               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9245  011668  2366               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9246                           
  9247                           ; BSR set to: 0
  9248  01166A  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  9249  01166C  2767               	addwf	___flmul@prod& (0+255),f,b
  9250  01166E  0E00               	movlw	0
  9251  011670  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9252  011672  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9253  011674  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9254  011676  502A               	movf	___flmul@a^0,w,c
  9255  011678  0228               	mulwf	(___flmul@b+2)^0,c
  9256  01167A  006F FFCC  F06B    	movff	prodl,___flmul@temp
  9257  011680  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  9258                           
  9259                           ; BSR set to: 0
  9260  011686  516B               	movf	___flmul@temp& (0+255),w,b
  9261  011688  2763               	addwf	___flmul@grs& (0+255),f,b
  9262  01168A  0E00               	movlw	0
  9263  01168C  2364               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9264  01168E  2365               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9265  011690  2366               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9266                           
  9267                           ; BSR set to: 0
  9268  011692  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  9269  011694  2767               	addwf	___flmul@prod& (0+255),f,b
  9270  011696  0E00               	movlw	0
  9271  011698  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9272  01169A  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9273  01169C  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9274                           
  9275                           ; BSR set to: 0
  9276  01169E  C065  F066         	movff	___flmul@grs+2,___flmul@grs+3
  9277  0116A2  C064  F065         	movff	___flmul@grs+1,___flmul@grs+2
  9278  0116A6  C063  F064         	movff	___flmul@grs,___flmul@grs+1
  9279  0116AA  6B63               	clrf	___flmul@grs& (0+255),b
  9280                           
  9281                           ; BSR set to: 0
  9282  0116AC  502A               	movf	___flmul@a^0,w,c
  9283  0116AE  0227               	mulwf	(___flmul@b+1)^0,c
  9284  0116B0  006F FFCC  F06B    	movff	prodl,___flmul@temp
  9285  0116B6  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  9286                           
  9287                           ; BSR set to: 0
  9288  0116BC  516B               	movf	___flmul@temp& (0+255),w,b
  9289  0116BE  2763               	addwf	___flmul@grs& (0+255),f,b
  9290  0116C0  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  9291  0116C2  2364               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9292  0116C4  0E00               	movlw	0
  9293  0116C6  2365               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9294  0116C8  0E00               	movlw	0
  9295  0116CA  2366               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9296                           
  9297                           ; BSR set to: 0
  9298  0116CC  502B               	movf	(___flmul@a+1)^0,w,c
  9299  0116CE  0226               	mulwf	___flmul@b^0,c
  9300  0116D0  006F FFCC  F06B    	movff	prodl,___flmul@temp
  9301  0116D6  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  9302                           
  9303                           ; BSR set to: 0
  9304  0116DC  516B               	movf	___flmul@temp& (0+255),w,b
  9305  0116DE  2763               	addwf	___flmul@grs& (0+255),f,b
  9306  0116E0  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  9307  0116E2  2364               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9308  0116E4  0E00               	movlw	0
  9309  0116E6  2365               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9310  0116E8  0E00               	movlw	0
  9311  0116EA  2366               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9312                           
  9313                           ; BSR set to: 0
  9314  0116EC  C065  F066         	movff	___flmul@grs+2,___flmul@grs+3
  9315  0116F0  C064  F065         	movff	___flmul@grs+1,___flmul@grs+2
  9316  0116F4  C063  F064         	movff	___flmul@grs,___flmul@grs+1
  9317  0116F8  6B63               	clrf	___flmul@grs& (0+255),b
  9318  0116FA  502A               	movf	___flmul@a^0,w,c
  9319  0116FC  0226               	mulwf	___flmul@b^0,c
  9320  0116FE  006F FFCC  F06B    	movff	prodl,___flmul@temp
  9321  011704  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  9322                           
  9323                           ; BSR set to: 0
  9324  01170A  516B               	movf	___flmul@temp& (0+255),w,b
  9325  01170C  2763               	addwf	___flmul@grs& (0+255),f,b
  9326  01170E  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  9327  011710  2364               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9328  011712  0E00               	movlw	0
  9329  011714  2365               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9330  011716  0E00               	movlw	0
  9331  011718  2366               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9332                           
  9333                           ; BSR set to: 0
  9334  01171A  502C               	movf	(___flmul@a+2)^0,w,c
  9335  01171C  0227               	mulwf	(___flmul@b+1)^0,c
  9336  01171E  006F FFCC  F06B    	movff	prodl,___flmul@temp
  9337  011724  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  9338  01172A  516B               	movf	___flmul@temp& (0+255),w,b
  9339  01172C  2767               	addwf	___flmul@prod& (0+255),f,b
  9340  01172E  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  9341  011730  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9342  011732  0E00               	movlw	0
  9343  011734  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9344  011736  0E00               	movlw	0
  9345  011738  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9346                           
  9347                           ; BSR set to: 0
  9348  01173A  502B               	movf	(___flmul@a+1)^0,w,c
  9349  01173C  0228               	mulwf	(___flmul@b+2)^0,c
  9350  01173E  006F FFCC  F06B    	movff	prodl,___flmul@temp
  9351  011744  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  9352                           
  9353                           ; BSR set to: 0
  9354  01174A  516B               	movf	___flmul@temp& (0+255),w,b
  9355  01174C  2767               	addwf	___flmul@prod& (0+255),f,b
  9356  01174E  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  9357  011750  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9358  011752  0E00               	movlw	0
  9359  011754  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9360  011756  0E00               	movlw	0
  9361  011758  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9362  01175A  502C               	movf	(___flmul@a+2)^0,w,c
  9363  01175C  0228               	mulwf	(___flmul@b+2)^0,c
  9364  01175E  006F FFCC  F06B    	movff	prodl,___flmul@temp
  9365  011764  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  9366                           
  9367                           ; BSR set to: 0
  9368  01176A  516B               	movf	___flmul@temp& (0+255),w,b
  9369  01176C  6E2E               	movwf	??___flmul^0,c
  9370  01176E  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  9371  011770  6E2F               	movwf	(??___flmul+1)^0,c
  9372  011772  6A30               	clrf	(??___flmul+2)^0,c
  9373  011774  6A31               	clrf	(??___flmul+3)^0,c
  9374  011776  C030  F031         	movff	??___flmul+2,??___flmul+3
  9375  01177A  C02F  F030         	movff	??___flmul+1,??___flmul+2
  9376  01177E  C02E  F02F         	movff	??___flmul,??___flmul+1
  9377  011782  6A2E               	clrf	??___flmul^0,c
  9378  011784  502E               	movf	??___flmul^0,w,c
  9379  011786  2767               	addwf	___flmul@prod& (0+255),f,b
  9380  011788  502F               	movf	(??___flmul+1)^0,w,c
  9381  01178A  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9382  01178C  5030               	movf	(??___flmul+2)^0,w,c
  9383  01178E  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9384  011790  5031               	movf	(??___flmul+3)^0,w,c
  9385  011792  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9386                           
  9387                           ; BSR set to: 0
  9388  011794  5166               	movf	(___flmul@grs+3)& (0+255),w,b
  9389  011796  2767               	addwf	___flmul@prod& (0+255),f,b
  9390  011798  0E00               	movlw	0
  9391  01179A  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9392  01179C  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9393  01179E  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9394                           
  9395                           ; BSR set to: 0
  9396  0117A0  C065  F066         	movff	___flmul@grs+2,___flmul@grs+3
  9397  0117A4  C064  F065         	movff	___flmul@grs+1,___flmul@grs+2
  9398  0117A8  C063  F064         	movff	___flmul@grs,___flmul@grs+1
  9399  0117AC  6B63               	clrf	___flmul@grs& (0+255),b
  9400                           
  9401                           ; BSR set to: 0
  9402  0117AE  5161               	movf	___flmul@aexp& (0+255),w,b
  9403  0117B0  C062  F02E         	movff	___flmul@bexp,??___flmul
  9404  0117B4  6A2F               	clrf	(??___flmul+1)^0,c
  9405  0117B6  262E               	addwf	??___flmul^0,f,c
  9406  0117B8  0E00               	movlw	0
  9407  0117BA  222F               	addwfc	(??___flmul+1)^0,f,c
  9408  0117BC  0E82               	movlw	130
  9409  0117BE  242E               	addwf	??___flmul^0,w,c
  9410  0117C0  6F6B               	movwf	___flmul@temp& (0+255),b
  9411  0117C2  0EFF               	movlw	255
  9412  0117C4  202F               	addwfc	(??___flmul+1)^0,w,c
  9413  0117C6  6F6C               	movwf	(___flmul@temp+1)& (0+255),b
  9414  0117C8  D00F               	goto	l10121
  9415  0117CA                     l10115:
  9416                           
  9417                           ; BSR set to: 0
  9418  0117CA  90D8               	bcf	status,0,c
  9419  0117CC  3767               	rlcf	___flmul@prod& (0+255),f,b
  9420  0117CE  3768               	rlcf	(___flmul@prod+1)& (0+255),f,b
  9421  0117D0  3769               	rlcf	(___flmul@prod+2)& (0+255),f,b
  9422  0117D2  376A               	rlcf	(___flmul@prod+3)& (0+255),f,b
  9423                           
  9424                           ; BSR set to: 0
  9425  0117D4  BF66               	btfsc	(___flmul@grs+3)& (0+255),7,b
  9426                           
  9427                           ; BSR set to: 0
  9428  0117D6  8167               	bsf	___flmul@prod& (0+255),0,b
  9429                           
  9430                           ; BSR set to: 0
  9431  0117D8  90D8               	bcf	status,0,c
  9432  0117DA  3763               	rlcf	___flmul@grs& (0+255),f,b
  9433  0117DC  3764               	rlcf	(___flmul@grs+1)& (0+255),f,b
  9434  0117DE  3765               	rlcf	(___flmul@grs+2)& (0+255),f,b
  9435  0117E0  3766               	rlcf	(___flmul@grs+3)& (0+255),f,b
  9436  0117E2  076B               	decf	___flmul@temp& (0+255),f,b
  9437  0117E4  A0D8               	btfss	status,0,c
  9438  0117E6  076C               	decf	(___flmul@temp+1)& (0+255),f,b
  9439  0117E8                     l10121:
  9440                           
  9441                           ; BSR set to: 0
  9442  0117E8  AF69               	btfss	(___flmul@prod+2)& (0+255),7,b
  9443  0117EA  D7EF               	goto	l10115
  9444                           
  9445                           ; BSR set to: 0
  9446  0117EC  0E00               	movlw	0
  9447  0117EE  6F61               	movwf	___flmul@aexp& (0+255),b
  9448                           
  9449                           ; BSR set to: 0
  9450  0117F0  AF66               	btfss	(___flmul@grs+3)& (0+255),7,b
  9451  0117F2  D017               	goto	l2245
  9452                           
  9453                           ; BSR set to: 0
  9454  0117F4  0EFF               	movlw	255
  9455  0117F6  1563               	andwf	___flmul@grs& (0+255),w,b
  9456  0117F8  6E2E               	movwf	??___flmul^0,c
  9457  0117FA  0EFF               	movlw	255
  9458  0117FC  1564               	andwf	(___flmul@grs+1)& (0+255),w,b
  9459  0117FE  6E2F               	movwf	(??___flmul+1)^0,c
  9460  011800  0EFF               	movlw	255
  9461  011802  1565               	andwf	(___flmul@grs+2)& (0+255),w,b
  9462  011804  6E30               	movwf	(??___flmul+2)^0,c
  9463  011806  0E7F               	movlw	127
  9464  011808  1566               	andwf	(___flmul@grs+3)& (0+255),w,b
  9465  01180A  6E31               	movwf	(??___flmul+3)^0,c
  9466  01180C  502E               	movf	??___flmul^0,w,c
  9467  01180E  102F               	iorwf	(??___flmul+1)^0,w,c
  9468  011810  1030               	iorwf	(??___flmul+2)^0,w,c
  9469  011812  1031               	iorwf	(??___flmul+3)^0,w,c
  9470  011814  B4D8               	btfsc	status,2,c
  9471  011816  D003               	goto	l2246
  9472  011818                     u10530:
  9473                           
  9474                           ; BSR set to: 0
  9475  011818  0E01               	movlw	1
  9476  01181A  6F61               	movwf	___flmul@aexp& (0+255),b
  9477  01181C  D002               	goto	l2245
  9478  01181E                     l2246:
  9479                           
  9480                           ; BSR set to: 0
  9481  01181E  B167               	btfsc	___flmul@prod& (0+255),0,b
  9482  011820  D7FB               	goto	u10530
  9483  011822                     l2245:
  9484                           
  9485                           ; BSR set to: 0
  9486  011822  5161               	movf	___flmul@aexp& (0+255),w,b
  9487  011824  B4D8               	btfsc	status,2,c
  9488  011826  D01F               	goto	l10141
  9489                           
  9490                           ; BSR set to: 0
  9491  011828  0E01               	movlw	1
  9492  01182A  2767               	addwf	___flmul@prod& (0+255),f,b
  9493  01182C  0E00               	movlw	0
  9494  01182E  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9495  011830  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9496  011832  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9497                           
  9498                           ; BSR set to: 0
  9499  011834  A16A               	btfss	(___flmul@prod+3)& (0+255),0,b
  9500  011836  D017               	goto	l10141
  9501                           
  9502                           ; BSR set to: 0
  9503  011838  C067  F02E         	movff	___flmul@prod,??___flmul
  9504  01183C  C068  F02F         	movff	___flmul@prod+1,??___flmul+1
  9505  011840  C069  F030         	movff	___flmul@prod+2,??___flmul+2
  9506  011844  C06A  F031         	movff	___flmul@prod+3,??___flmul+3
  9507  011848  3431               	rlcf	(??___flmul+3)^0,w,c
  9508  01184A  3231               	rrcf	(??___flmul+3)^0,f,c
  9509  01184C  3230               	rrcf	(??___flmul+2)^0,f,c
  9510  01184E  322F               	rrcf	(??___flmul+1)^0,f,c
  9511  011850  322E               	rrcf	??___flmul^0,f,c
  9512  011852  C02E  F067         	movff	??___flmul,___flmul@prod
  9513  011856  C02F  F068         	movff	??___flmul+1,___flmul@prod+1
  9514  01185A  C030  F069         	movff	??___flmul+2,___flmul@prod+2
  9515  01185E  C031  F06A         	movff	??___flmul+3,___flmul@prod+3
  9516                           
  9517                           ; BSR set to: 0
  9518  011862  4B6B               	infsnz	___flmul@temp& (0+255),f,b
  9519  011864  2B6C               	incf	(___flmul@temp+1)& (0+255),f,b
  9520  011866                     l10141:
  9521                           
  9522                           ; BSR set to: 0
  9523  011866  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  9524  011868  D00D               	goto	l10145
  9525  01186A  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  9526  01186C  E103               	bnz	u10570
  9527  01186E  296B               	incf	___flmul@temp& (0+255),w,b
  9528  011870  A0D8               	btfss	status,0,c
  9529  011872  D008               	goto	l10145
  9530  011874                     u10570:
  9531                           
  9532                           ; BSR set to: 0
  9533  011874  0E00               	movlw	0
  9534  011876  6F67               	movwf	___flmul@prod& (0+255),b
  9535  011878  0E00               	movlw	0
  9536  01187A  6F68               	movwf	(___flmul@prod+1)& (0+255),b
  9537  01187C  0E80               	movlw	128
  9538  01187E  6F69               	movwf	(___flmul@prod+2)& (0+255),b
  9539  011880  0E7F               	movlw	127
  9540  011882  D020               	goto	L11
  9541  011884                     l10145:
  9542                           
  9543                           ; BSR set to: 0
  9544  011884  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  9545  011886  D005               	goto	u10580
  9546  011888  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  9547  01188A  E10E               	bnz	l2253
  9548  01188C  056B               	decf	___flmul@temp& (0+255),w,b
  9549  01188E  B0D8               	btfsc	status,0,c
  9550  011890  D00B               	goto	l2253
  9551  011892                     u10580:
  9552                           
  9553                           ; BSR set to: 0
  9554  011892  0E00               	movlw	0
  9555  011894  6F67               	movwf	___flmul@prod& (0+255),b
  9556  011896  0E00               	movlw	0
  9557  011898  6F68               	movwf	(___flmul@prod+1)& (0+255),b
  9558  01189A  0E00               	movlw	0
  9559  01189C  6F69               	movwf	(___flmul@prod+2)& (0+255),b
  9560  01189E  0E00               	movlw	0
  9561  0118A0  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  9562  0118A2  0E00               	movlw	0
  9563  0118A4  6F60               	movwf	___flmul@sign& (0+255),b
  9564  0118A6  D00F               	goto	l10157
  9565  0118A8                     l2253:
  9566                           
  9567                           ; BSR set to: 0
  9568  0118A8  C06B  F062         	movff	___flmul@temp,___flmul@bexp
  9569                           
  9570                           ; BSR set to: 0
  9571  0118AC  0EFF               	movlw	255
  9572  0118AE  1767               	andwf	___flmul@prod& (0+255),f,b
  9573  0118B0  0EFF               	movlw	255
  9574  0118B2  1768               	andwf	(___flmul@prod+1)& (0+255),f,b
  9575  0118B4  0E7F               	movlw	127
  9576  0118B6  1769               	andwf	(___flmul@prod+2)& (0+255),f,b
  9577  0118B8  0E00               	movlw	0
  9578  0118BA  176A               	andwf	(___flmul@prod+3)& (0+255),f,b
  9579                           
  9580                           ; BSR set to: 0
  9581  0118BC  B162               	btfsc	___flmul@bexp& (0+255),0,b
  9582                           
  9583                           ; BSR set to: 0
  9584  0118BE  8F69               	bsf	(___flmul@prod+2)& (0+255),7,b
  9585                           
  9586                           ; BSR set to: 0
  9587  0118C0  90D8               	bcf	status,0,c
  9588  0118C2  3162               	rrcf	___flmul@bexp& (0+255),w,b
  9589  0118C4                     L11:
  9590  0118C4  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  9591  0118C6                     l10157:
  9592                           
  9593                           ; BSR set to: 0
  9594  0118C6  5160               	movf	___flmul@sign& (0+255),w,b
  9595  0118C8  136A               	iorwf	(___flmul@prod+3)& (0+255),f,b
  9596                           
  9597                           ; BSR set to: 0
  9598  0118CA  C067  F026         	movff	___flmul@prod,?___flmul
  9599  0118CE  C068  F027         	movff	___flmul@prod+1,?___flmul+1
  9600  0118D2  C069  F028         	movff	___flmul@prod+2,?___flmul+2
  9601  0118D6  C06A  F029         	movff	___flmul@prod+3,?___flmul+3
  9602                           
  9603                           ; BSR set to: 0
  9604  0118DA  0012               	return		;funcret
  9605  0118DC                     __end_of___flmul:
  9606                           	callstack 0
  9607                           
  9608 ;; *************** function ___flge *****************
  9609 ;; Defined at:
  9610 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/flge.c"
  9611 ;; Parameters:    Size  Location     Type
  9612 ;;  ff1             4   13[BANK0 ] unsigned char 
  9613 ;;  ff2             4   17[BANK0 ] unsigned char 
  9614 ;; Auto vars:     Size  Location     Type
  9615 ;;		None
  9616 ;; Return value:  Size  Location     Type
  9617 ;;		None               void
  9618 ;; Registers used:
  9619 ;;		wreg, status,2, status,0
  9620 ;; Tracked objects:
  9621 ;;		On entry : 3F/0
  9622 ;;		On exit  : 3F/0
  9623 ;;		Unchanged: 0/0
  9624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9625 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9627 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9628 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9629 ;;Total ram usage:       12 bytes
  9630 ;; Hardware stack levels used: 1
  9631 ;; Hardware stack levels required when called: 7
  9632 ;; This function calls:
  9633 ;;		Nothing
  9634 ;; This function is called by:
  9635 ;;		_efgtoa
  9636 ;; This function uses a non-reentrant model
  9637 ;;
  9638                           
  9639                           	psect	text23
  9640  012E36                     __ptext23:
  9641                           	callstack 0
  9642  012E36                     ___flge:
  9643                           	callstack 19
  9644                           
  9645                           ; BSR set to: 0
  9646                           
  9647                           ; BSR set to: 0
  9648                           ;incstack = 0
  9649  012E36  0E00               	movlw	0
  9650  012E38  156D               	andwf	___flge@ff1& (0+255),w,b
  9651  012E3A  6F75               	movwf	??___flge& (0+255),b
  9652  012E3C  0E00               	movlw	0
  9653  012E3E  156E               	andwf	(___flge@ff1+1)& (0+255),w,b
  9654  012E40  6F76               	movwf	(??___flge+1)& (0+255),b
  9655  012E42  0E80               	movlw	128
  9656  012E44  156F               	andwf	(___flge@ff1+2)& (0+255),w,b
  9657  012E46  6F77               	movwf	(??___flge+2)& (0+255),b
  9658  012E48  0E7F               	movlw	127
  9659  012E4A  1570               	andwf	(___flge@ff1+3)& (0+255),w,b
  9660  012E4C  6F78               	movwf	(??___flge+3)& (0+255),b
  9661  012E4E  5175               	movf	??___flge& (0+255),w,b
  9662  012E50  1176               	iorwf	(??___flge+1)& (0+255),w,b
  9663  012E52  1177               	iorwf	(??___flge+2)& (0+255),w,b
  9664  012E54  1178               	iorwf	(??___flge+3)& (0+255),w,b
  9665  012E56  A4D8               	btfss	status,2,c
  9666  012E58  D008               	goto	l10269
  9667                           
  9668                           ; BSR set to: 0
  9669  012E5A  0E00               	movlw	0
  9670  012E5C  6F6D               	movwf	___flge@ff1& (0+255),b
  9671  012E5E  0E00               	movlw	0
  9672  012E60  6F6E               	movwf	(___flge@ff1+1)& (0+255),b
  9673  012E62  0E00               	movlw	0
  9674  012E64  6F6F               	movwf	(___flge@ff1+2)& (0+255),b
  9675  012E66  0E00               	movlw	0
  9676  012E68  6F70               	movwf	(___flge@ff1+3)& (0+255),b
  9677  012E6A                     l10269:
  9678                           
  9679                           ; BSR set to: 0
  9680  012E6A  0E00               	movlw	0
  9681  012E6C  1571               	andwf	___flge@ff2& (0+255),w,b
  9682  012E6E  6F75               	movwf	??___flge& (0+255),b
  9683  012E70  0E00               	movlw	0
  9684  012E72  1572               	andwf	(___flge@ff2+1)& (0+255),w,b
  9685  012E74  6F76               	movwf	(??___flge+1)& (0+255),b
  9686  012E76  0E80               	movlw	128
  9687  012E78  1573               	andwf	(___flge@ff2+2)& (0+255),w,b
  9688  012E7A  6F77               	movwf	(??___flge+2)& (0+255),b
  9689  012E7C  0E7F               	movlw	127
  9690  012E7E  1574               	andwf	(___flge@ff2+3)& (0+255),w,b
  9691  012E80  6F78               	movwf	(??___flge+3)& (0+255),b
  9692  012E82  5175               	movf	??___flge& (0+255),w,b
  9693  012E84  1176               	iorwf	(??___flge+1)& (0+255),w,b
  9694  012E86  1177               	iorwf	(??___flge+2)& (0+255),w,b
  9695  012E88  1178               	iorwf	(??___flge+3)& (0+255),w,b
  9696  012E8A  A4D8               	btfss	status,2,c
  9697  012E8C  D008               	goto	l10273
  9698                           
  9699                           ; BSR set to: 0
  9700  012E8E  0E00               	movlw	0
  9701  012E90  6F71               	movwf	___flge@ff2& (0+255),b
  9702  012E92  0E00               	movlw	0
  9703  012E94  6F72               	movwf	(___flge@ff2+1)& (0+255),b
  9704  012E96  0E00               	movlw	0
  9705  012E98  6F73               	movwf	(___flge@ff2+2)& (0+255),b
  9706  012E9A  0E00               	movlw	0
  9707  012E9C  6F74               	movwf	(___flge@ff2+3)& (0+255),b
  9708  012E9E                     l10273:
  9709                           
  9710                           ; BSR set to: 0
  9711  012E9E  AF70               	btfss	(___flge@ff1+3)& (0+255),7,b
  9712  012EA0  D009               	goto	l10277
  9713                           
  9714                           ; BSR set to: 0
  9715  012EA2  6D6D               	negf	___flge@ff1& (0+255),b
  9716  012EA4  1F6E               	comf	(___flge@ff1+1)& (0+255),f,b
  9717  012EA6  B0D8               	btfsc	status,0,c
  9718  012EA8  2B6E               	incf	(___flge@ff1+1)& (0+255),f,b
  9719  012EAA  1F6F               	comf	(___flge@ff1+2)& (0+255),f,b
  9720  012EAC  B0D8               	btfsc	status,0,c
  9721  012EAE  2B6F               	incf	(___flge@ff1+2)& (0+255),f,b
  9722  012EB0  0E80               	movlw	128
  9723  012EB2  5770               	subfwb	(___flge@ff1+3)& (0+255),f,b
  9724  012EB4                     l10277:
  9725                           
  9726                           ; BSR set to: 0
  9727  012EB4  AF74               	btfss	(___flge@ff2+3)& (0+255),7,b
  9728  012EB6  D009               	goto	l1887
  9729                           
  9730                           ; BSR set to: 0
  9731  012EB8  6D71               	negf	___flge@ff2& (0+255),b
  9732  012EBA  1F72               	comf	(___flge@ff2+1)& (0+255),f,b
  9733  012EBC  B0D8               	btfsc	status,0,c
  9734  012EBE  2B72               	incf	(___flge@ff2+1)& (0+255),f,b
  9735  012EC0  1F73               	comf	(___flge@ff2+2)& (0+255),f,b
  9736  012EC2  B0D8               	btfsc	status,0,c
  9737  012EC4  2B73               	incf	(___flge@ff2+2)& (0+255),f,b
  9738  012EC6  0E80               	movlw	128
  9739  012EC8  5774               	subfwb	(___flge@ff2+3)& (0+255),f,b
  9740  012ECA                     l1887:
  9741                           
  9742                           ; BSR set to: 0
  9743  012ECA  0E00               	movlw	0
  9744  012ECC  1B6D               	xorwf	___flge@ff1& (0+255),f,b
  9745  012ECE  0E00               	movlw	0
  9746  012ED0  1B6E               	xorwf	(___flge@ff1+1)& (0+255),f,b
  9747  012ED2  0E00               	movlw	0
  9748  012ED4  1B6F               	xorwf	(___flge@ff1+2)& (0+255),f,b
  9749  012ED6  0E80               	movlw	128
  9750  012ED8  1B70               	xorwf	(___flge@ff1+3)& (0+255),f,b
  9751  012EDA  0E00               	movlw	0
  9752  012EDC  1B71               	xorwf	___flge@ff2& (0+255),f,b
  9753  012EDE  0E00               	movlw	0
  9754  012EE0  1B72               	xorwf	(___flge@ff2+1)& (0+255),f,b
  9755  012EE2  0E00               	movlw	0
  9756  012EE4  1B73               	xorwf	(___flge@ff2+2)& (0+255),f,b
  9757  012EE6  0E80               	movlw	128
  9758  012EE8  1B74               	xorwf	(___flge@ff2+3)& (0+255),f,b
  9759  012EEA  5171               	movf	___flge@ff2& (0+255),w,b
  9760  012EEC  5D6D               	subwf	___flge@ff1& (0+255),w,b
  9761  012EEE  5172               	movf	(___flge@ff2+1)& (0+255),w,b
  9762  012EF0  596E               	subwfb	(___flge@ff1+1)& (0+255),w,b
  9763  012EF2  5173               	movf	(___flge@ff2+2)& (0+255),w,b
  9764  012EF4  596F               	subwfb	(___flge@ff1+2)& (0+255),w,b
  9765  012EF6  5174               	movf	(___flge@ff2+3)& (0+255),w,b
  9766  012EF8  5970               	subwfb	(___flge@ff1+3)& (0+255),w,b
  9767  012EFA  B0D8               	btfsc	status,0,c
  9768  012EFC  D002               	goto	l10283
  9769                           
  9770                           ; BSR set to: 0
  9771  012EFE  90D8               	bcf	status,0,c
  9772  012F00  0012               	return	
  9773  012F02                     l10283:
  9774                           
  9775                           ; BSR set to: 0
  9776  012F02  80D8               	bsf	status,0,c
  9777                           
  9778                           ; BSR set to: 0
  9779  012F04  0012               	return		;funcret
  9780  012F06                     __end_of___flge:
  9781                           	callstack 0
  9782                           
  9783 ;; *************** function ___fleq *****************
  9784 ;; Defined at:
  9785 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/fleq.c"
  9786 ;; Parameters:    Size  Location     Type
  9787 ;;  ff1             4   23[COMRAM] unsigned char 
  9788 ;;  ff2             4   27[COMRAM] unsigned char 
  9789 ;; Auto vars:     Size  Location     Type
  9790 ;;		None
  9791 ;; Return value:  Size  Location     Type
  9792 ;;		None               void
  9793 ;; Registers used:
  9794 ;;		wreg, status,2, status,0
  9795 ;; Tracked objects:
  9796 ;;		On entry : 3F/0
  9797 ;;		On exit  : 3F/0
  9798 ;;		Unchanged: 3F/0
  9799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9800 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9802 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9803 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9804 ;;Total ram usage:       12 bytes
  9805 ;; Hardware stack levels used: 1
  9806 ;; Hardware stack levels required when called: 7
  9807 ;; This function calls:
  9808 ;;		Nothing
  9809 ;; This function is called by:
  9810 ;;		_efgtoa
  9811 ;; This function uses a non-reentrant model
  9812 ;;
  9813                           
  9814                           	psect	text24
  9815  0137B0                     __ptext24:
  9816                           	callstack 0
  9817  0137B0                     ___fleq:
  9818                           	callstack 19
  9819                           
  9820                           ; BSR set to: 0
  9821                           
  9822                           ; BSR set to: 0
  9823                           ;incstack = 0
  9824  0137B0  0E00               	movlw	0
  9825  0137B2  1418               	andwf	___fleq@ff1^0,w,c
  9826  0137B4  6E20               	movwf	??___fleq^0,c
  9827  0137B6  0E00               	movlw	0
  9828  0137B8  1419               	andwf	(___fleq@ff1+1)^0,w,c
  9829  0137BA  6E21               	movwf	(??___fleq+1)^0,c
  9830  0137BC  0E80               	movlw	128
  9831  0137BE  141A               	andwf	(___fleq@ff1+2)^0,w,c
  9832  0137C0  6E22               	movwf	(??___fleq+2)^0,c
  9833  0137C2  0E7F               	movlw	127
  9834  0137C4  141B               	andwf	(___fleq@ff1+3)^0,w,c
  9835  0137C6  6E23               	movwf	(??___fleq+3)^0,c
  9836  0137C8  5020               	movf	??___fleq^0,w,c
  9837  0137CA  1021               	iorwf	(??___fleq+1)^0,w,c
  9838  0137CC  1022               	iorwf	(??___fleq+2)^0,w,c
  9839  0137CE  1023               	iorwf	(??___fleq+3)^0,w,c
  9840  0137D0  A4D8               	btfss	status,2,c
  9841  0137D2  D008               	goto	l10253
  9842                           
  9843                           ; BSR set to: 0
  9844  0137D4  0E00               	movlw	0
  9845  0137D6  6E18               	movwf	___fleq@ff1^0,c
  9846  0137D8  0E00               	movlw	0
  9847  0137DA  6E19               	movwf	(___fleq@ff1+1)^0,c
  9848  0137DC  0E00               	movlw	0
  9849  0137DE  6E1A               	movwf	(___fleq@ff1+2)^0,c
  9850  0137E0  0E00               	movlw	0
  9851  0137E2  6E1B               	movwf	(___fleq@ff1+3)^0,c
  9852  0137E4                     l10253:
  9853                           
  9854                           ; BSR set to: 0
  9855  0137E4  0E00               	movlw	0
  9856  0137E6  141C               	andwf	___fleq@ff2^0,w,c
  9857  0137E8  6E20               	movwf	??___fleq^0,c
  9858  0137EA  0E00               	movlw	0
  9859  0137EC  141D               	andwf	(___fleq@ff2+1)^0,w,c
  9860  0137EE  6E21               	movwf	(??___fleq+1)^0,c
  9861  0137F0  0E80               	movlw	128
  9862  0137F2  141E               	andwf	(___fleq@ff2+2)^0,w,c
  9863  0137F4  6E22               	movwf	(??___fleq+2)^0,c
  9864  0137F6  0E7F               	movlw	127
  9865  0137F8  141F               	andwf	(___fleq@ff2+3)^0,w,c
  9866  0137FA  6E23               	movwf	(??___fleq+3)^0,c
  9867  0137FC  5020               	movf	??___fleq^0,w,c
  9868  0137FE  1021               	iorwf	(??___fleq+1)^0,w,c
  9869  013800  1022               	iorwf	(??___fleq+2)^0,w,c
  9870  013802  1023               	iorwf	(??___fleq+3)^0,w,c
  9871  013804  A4D8               	btfss	status,2,c
  9872  013806  D008               	goto	l10257
  9873                           
  9874                           ; BSR set to: 0
  9875  013808  0E00               	movlw	0
  9876  01380A  6E1C               	movwf	___fleq@ff2^0,c
  9877  01380C  0E00               	movlw	0
  9878  01380E  6E1D               	movwf	(___fleq@ff2+1)^0,c
  9879  013810  0E00               	movlw	0
  9880  013812  6E1E               	movwf	(___fleq@ff2+2)^0,c
  9881  013814  0E00               	movlw	0
  9882  013816  6E1F               	movwf	(___fleq@ff2+3)^0,c
  9883  013818                     l10257:
  9884                           
  9885                           ; BSR set to: 0
  9886  013818  501C               	movf	___fleq@ff2^0,w,c
  9887  01381A  1818               	xorwf	___fleq@ff1^0,w,c
  9888  01381C  E10A               	bnz	u10740
  9889  01381E  501D               	movf	(___fleq@ff2+1)^0,w,c
  9890  013820  1819               	xorwf	(___fleq@ff1+1)^0,w,c
  9891  013822  E107               	bnz	u10740
  9892  013824  501E               	movf	(___fleq@ff2+2)^0,w,c
  9893  013826  181A               	xorwf	(___fleq@ff1+2)^0,w,c
  9894  013828  E104               	bnz	u10740
  9895  01382A  501F               	movf	(___fleq@ff2+3)^0,w,c
  9896  01382C  181B               	xorwf	(___fleq@ff1+3)^0,w,c
  9897  01382E  B4D8               	btfsc	status,2,c
  9898  013830  D002               	goto	l10261
  9899  013832                     u10740:
  9900                           
  9901                           ; BSR set to: 0
  9902  013832  90D8               	bcf	status,0,c
  9903  013834  0012               	return	
  9904  013836                     l10261:
  9905                           
  9906                           ; BSR set to: 0
  9907  013836  80D8               	bsf	status,0,c
  9908                           
  9909                           ; BSR set to: 0
  9910  013838  0012               	return		;funcret
  9911  01383A                     __end_of___fleq:
  9912                           	callstack 0
  9913                           
  9914 ;; *************** function ___fldiv *****************
  9915 ;; Defined at:
  9916 ;;		line 11 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/sprcdiv.c"
  9917 ;; Parameters:    Size  Location     Type
  9918 ;;  b               4   23[COMRAM] unsigned char 
  9919 ;;  a               4   27[COMRAM] unsigned char 
  9920 ;; Auto vars:     Size  Location     Type
  9921 ;;  grs             4   42[COMRAM] unsigned long 
  9922 ;;  rem             4   35[COMRAM] unsigned long 
  9923 ;;  new_exp         2   40[COMRAM] short 
  9924 ;;  aexp            1   47[COMRAM] unsigned char 
  9925 ;;  bexp            1   46[COMRAM] unsigned char 
  9926 ;;  sign            1   39[COMRAM] unsigned char 
  9927 ;; Return value:  Size  Location     Type
  9928 ;;                  4   23[COMRAM] unsigned char 
  9929 ;; Registers used:
  9930 ;;		wreg, status,2, status,0
  9931 ;; Tracked objects:
  9932 ;;		On entry : 3F/0
  9933 ;;		On exit  : 3F/0
  9934 ;;		Unchanged: 3F/0
  9935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9936 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9937 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9938 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9939 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9940 ;;Total ram usage:       25 bytes
  9941 ;; Hardware stack levels used: 1
  9942 ;; Hardware stack levels required when called: 7
  9943 ;; This function calls:
  9944 ;;		Nothing
  9945 ;; This function is called by:
  9946 ;;		_efgtoa
  9947 ;; This function uses a non-reentrant model
  9948 ;;
  9949                           
  9950                           	psect	text25
  9951  011EC4                     __ptext25:
  9952                           	callstack 0
  9953  011EC4                     ___fldiv:
  9954                           	callstack 19
  9955                           
  9956                           ; BSR set to: 0
  9957                           
  9958                           ; BSR set to: 0
  9959                           ;incstack = 0
  9960  011EC4  501B               	movf	(___fldiv@b+3)^0,w,c
  9961  011EC6  0B80               	andlw	128
  9962  011EC8  6E28               	movwf	___fldiv@sign^0,c
  9963  011ECA  501B               	movf	(___fldiv@b+3)^0,w,c
  9964  011ECC  241B               	addwf	(___fldiv@b+3)^0,w,c
  9965  011ECE  6E2F               	movwf	___fldiv@bexp^0,c
  9966                           
  9967                           ; BSR set to: 0
  9968  011ED0  BE1A               	btfsc	(___fldiv@b+2)^0,7,c
  9969                           
  9970                           ; BSR set to: 0
  9971  011ED2  802F               	bsf	___fldiv@bexp^0,0,c
  9972                           
  9973                           ; BSR set to: 0
  9974  011ED4  502F               	movf	___fldiv@bexp^0,w,c
  9975  011ED6  B4D8               	btfsc	status,2,c
  9976  011ED8  D00D               	goto	l9911
  9977                           
  9978                           ; BSR set to: 0
  9979  011EDA  282F               	incf	___fldiv@bexp^0,w,c
  9980  011EDC  A4D8               	btfss	status,2,c
  9981  011EDE  D008               	goto	l9907
  9982                           
  9983                           ; BSR set to: 0
  9984  011EE0  0E00               	movlw	0
  9985  011EE2  6E18               	movwf	___fldiv@b^0,c
  9986  011EE4  0E00               	movlw	0
  9987  011EE6  6E19               	movwf	(___fldiv@b+1)^0,c
  9988  011EE8  0E00               	movlw	0
  9989  011EEA  6E1A               	movwf	(___fldiv@b+2)^0,c
  9990  011EEC  0E00               	movlw	0
  9991  011EEE  6E1B               	movwf	(___fldiv@b+3)^0,c
  9992  011EF0                     l9907:
  9993                           
  9994                           ; BSR set to: 0
  9995  011EF0  8E1A               	bsf	(___fldiv@b+2)^0,7,c
  9996  011EF2  D006               	goto	L12
  9997  011EF4                     l9911:
  9998                           
  9999                           ; BSR set to: 0
 10000  011EF4  0E00               	movlw	0
 10001  011EF6  6E18               	movwf	___fldiv@b^0,c
 10002  011EF8  0E00               	movlw	0
 10003  011EFA  6E19               	movwf	(___fldiv@b+1)^0,c
 10004  011EFC  0E00               	movlw	0
 10005  011EFE  6E1A               	movwf	(___fldiv@b+2)^0,c
 10006  011F00                     L12:
 10007  011F00  0E00               	movlw	0
 10008  011F02  6E1B               	movwf	(___fldiv@b+3)^0,c
 10009                           
 10010                           ; BSR set to: 0
 10011  011F04  501F               	movf	(___fldiv@a+3)^0,w,c
 10012  011F06  0B80               	andlw	128
 10013  011F08  1A28               	xorwf	___fldiv@sign^0,f,c
 10014                           
 10015                           ; BSR set to: 0
 10016  011F0A  501F               	movf	(___fldiv@a+3)^0,w,c
 10017  011F0C  241F               	addwf	(___fldiv@a+3)^0,w,c
 10018  011F0E  6E30               	movwf	___fldiv@aexp^0,c
 10019                           
 10020                           ; BSR set to: 0
 10021  011F10  BE1E               	btfsc	(___fldiv@a+2)^0,7,c
 10022                           
 10023                           ; BSR set to: 0
 10024  011F12  8030               	bsf	___fldiv@aexp^0,0,c
 10025                           
 10026                           ; BSR set to: 0
 10027  011F14  5030               	movf	___fldiv@aexp^0,w,c
 10028  011F16  B4D8               	btfsc	status,2,c
 10029  011F18  D00D               	goto	l9931
 10030                           
 10031                           ; BSR set to: 0
 10032  011F1A  2830               	incf	___fldiv@aexp^0,w,c
 10033  011F1C  A4D8               	btfss	status,2,c
 10034  011F1E  D008               	goto	l9927
 10035                           
 10036                           ; BSR set to: 0
 10037  011F20  0E00               	movlw	0
 10038  011F22  6E1C               	movwf	___fldiv@a^0,c
 10039  011F24  0E00               	movlw	0
 10040  011F26  6E1D               	movwf	(___fldiv@a+1)^0,c
 10041  011F28  0E00               	movlw	0
 10042  011F2A  6E1E               	movwf	(___fldiv@a+2)^0,c
 10043  011F2C  0E00               	movlw	0
 10044  011F2E  6E1F               	movwf	(___fldiv@a+3)^0,c
 10045  011F30                     l9927:
 10046                           
 10047                           ; BSR set to: 0
 10048  011F30  8E1E               	bsf	(___fldiv@a+2)^0,7,c
 10049  011F32  D006               	goto	L13
 10050  011F34                     l9931:
 10051                           
 10052                           ; BSR set to: 0
 10053  011F34  0E00               	movlw	0
 10054  011F36  6E1C               	movwf	___fldiv@a^0,c
 10055  011F38  0E00               	movlw	0
 10056  011F3A  6E1D               	movwf	(___fldiv@a+1)^0,c
 10057  011F3C  0E00               	movlw	0
 10058  011F3E  6E1E               	movwf	(___fldiv@a+2)^0,c
 10059  011F40                     L13:
 10060  011F40  0E00               	movlw	0
 10061  011F42  6E1F               	movwf	(___fldiv@a+3)^0,c
 10062                           
 10063                           ; BSR set to: 0
 10064  011F44  501C               	movf	___fldiv@a^0,w,c
 10065  011F46  101D               	iorwf	(___fldiv@a+1)^0,w,c
 10066  011F48  101E               	iorwf	(___fldiv@a+2)^0,w,c
 10067  011F4A  101F               	iorwf	(___fldiv@a+3)^0,w,c
 10068  011F4C  A4D8               	btfss	status,2,c
 10069  011F4E  D017               	goto	l9945
 10070                           
 10071                           ; BSR set to: 0
 10072  011F50  0E00               	movlw	0
 10073  011F52  6E18               	movwf	___fldiv@b^0,c
 10074  011F54  0E00               	movlw	0
 10075  011F56  6E19               	movwf	(___fldiv@b+1)^0,c
 10076  011F58  0E00               	movlw	0
 10077  011F5A  6E1A               	movwf	(___fldiv@b+2)^0,c
 10078  011F5C  0E00               	movlw	0
 10079  011F5E  6E1B               	movwf	(___fldiv@b+3)^0,c
 10080                           
 10081                           ; BSR set to: 0
 10082  011F60  0E80               	movlw	128
 10083  011F62  121A               	iorwf	(___fldiv@b+2)^0,f,c
 10084  011F64  0E7F               	movlw	127
 10085  011F66  121B               	iorwf	(___fldiv@b+3)^0,f,c
 10086  011F68                     l9939:
 10087                           
 10088                           ; BSR set to: 0
 10089  011F68  5028               	movf	___fldiv@sign^0,w,c
 10090  011F6A  121B               	iorwf	(___fldiv@b+3)^0,f,c
 10091                           
 10092                           ; BSR set to: 0
 10093  011F6C  C018  F018         	movff	___fldiv@b,?___fldiv
 10094  011F70  C019  F019         	movff	___fldiv@b+1,?___fldiv+1
 10095  011F74  C01A  F01A         	movff	___fldiv@b+2,?___fldiv+2
 10096  011F78  C01B  F01B         	movff	___fldiv@b+3,?___fldiv+3
 10097  011F7C  0012               	return	
 10098  011F7E                     l9945:
 10099                           
 10100                           ; BSR set to: 0
 10101  011F7E  502F               	movf	___fldiv@bexp^0,w,c
 10102  011F80  A4D8               	btfss	status,2,c
 10103  011F82  D009               	goto	l9953
 10104                           
 10105                           ; BSR set to: 0
 10106                           
 10107                           ; BSR set to: 0
 10108  011F84  0E00               	movlw	0
 10109  011F86  6E18               	movwf	?___fldiv^0,c
 10110  011F88  0E00               	movlw	0
 10111  011F8A  6E19               	movwf	(?___fldiv+1)^0,c
 10112  011F8C  0E00               	movlw	0
 10113  011F8E  6E1A               	movwf	(?___fldiv+2)^0,c
 10114  011F90  0E00               	movlw	0
 10115  011F92  6E1B               	movwf	(?___fldiv+3)^0,c
 10116  011F94  0012               	return	
 10117  011F96                     l9953:
 10118                           
 10119                           ; BSR set to: 0
 10120  011F96  5030               	movf	___fldiv@aexp^0,w,c
 10121  011F98  C02F  F020         	movff	___fldiv@bexp,??___fldiv
 10122  011F9C  6A21               	clrf	(??___fldiv+1)^0,c
 10123  011F9E  5E20               	subwf	??___fldiv^0,f,c
 10124  011FA0  0E00               	movlw	0
 10125  011FA2  5A21               	subwfb	(??___fldiv+1)^0,f,c
 10126  011FA4  0E7F               	movlw	127
 10127  011FA6  2420               	addwf	??___fldiv^0,w,c
 10128  011FA8  6E29               	movwf	___fldiv@new_exp^0,c
 10129  011FAA  0E00               	movlw	0
 10130  011FAC  2021               	addwfc	(??___fldiv+1)^0,w,c
 10131  011FAE  6E2A               	movwf	(___fldiv@new_exp+1)^0,c
 10132                           
 10133                           ; BSR set to: 0
 10134  011FB0  C018  F024         	movff	___fldiv@b,___fldiv@rem
 10135  011FB4  C019  F025         	movff	___fldiv@b+1,___fldiv@rem+1
 10136  011FB8  C01A  F026         	movff	___fldiv@b+2,___fldiv@rem+2
 10137  011FBC  C01B  F027         	movff	___fldiv@b+3,___fldiv@rem+3
 10138                           
 10139                           ; BSR set to: 0
 10140  011FC0  0E00               	movlw	0
 10141  011FC2  6E18               	movwf	___fldiv@b^0,c
 10142  011FC4  0E00               	movlw	0
 10143  011FC6  6E19               	movwf	(___fldiv@b+1)^0,c
 10144  011FC8  0E00               	movlw	0
 10145  011FCA  6E1A               	movwf	(___fldiv@b+2)^0,c
 10146  011FCC  0E00               	movlw	0
 10147  011FCE  6E1B               	movwf	(___fldiv@b+3)^0,c
 10148                           
 10149                           ; BSR set to: 0
 10150  011FD0  0E00               	movlw	0
 10151  011FD2  6E2B               	movwf	___fldiv@grs^0,c
 10152  011FD4  0E00               	movlw	0
 10153  011FD6  6E2C               	movwf	(___fldiv@grs+1)^0,c
 10154  011FD8  0E00               	movlw	0
 10155  011FDA  6E2D               	movwf	(___fldiv@grs+2)^0,c
 10156  011FDC  0E00               	movlw	0
 10157  011FDE  6E2E               	movwf	(___fldiv@grs+3)^0,c
 10158                           
 10159                           ; BSR set to: 0
 10160  011FE0  0E00               	movlw	0
 10161  011FE2  6E30               	movwf	___fldiv@aexp^0,c
 10162  011FE4  D028               	goto	l2206
 10163  011FE6                     l9963:
 10164                           
 10165                           ; BSR set to: 0
 10166  011FE6  5030               	movf	___fldiv@aexp^0,w,c
 10167  011FE8  B4D8               	btfsc	status,2,c
 10168  011FEA  D011               	goto	l9971
 10169                           
 10170                           ; BSR set to: 0
 10171  011FEC  90D8               	bcf	status,0,c
 10172  011FEE  3624               	rlcf	___fldiv@rem^0,f,c
 10173  011FF0  3625               	rlcf	(___fldiv@rem+1)^0,f,c
 10174  011FF2  3626               	rlcf	(___fldiv@rem+2)^0,f,c
 10175  011FF4  3627               	rlcf	(___fldiv@rem+3)^0,f,c
 10176  011FF6  90D8               	bcf	status,0,c
 10177  011FF8  3618               	rlcf	___fldiv@b^0,f,c
 10178  011FFA  3619               	rlcf	(___fldiv@b+1)^0,f,c
 10179  011FFC  361A               	rlcf	(___fldiv@b+2)^0,f,c
 10180  011FFE  361B               	rlcf	(___fldiv@b+3)^0,f,c
 10181                           
 10182                           ; BSR set to: 0
 10183  012000  BE2E               	btfsc	(___fldiv@grs+3)^0,7,c
 10184                           
 10185                           ; BSR set to: 0
 10186  012002  8018               	bsf	___fldiv@b^0,0,c
 10187                           
 10188                           ; BSR set to: 0
 10189  012004  90D8               	bcf	status,0,c
 10190  012006  362B               	rlcf	___fldiv@grs^0,f,c
 10191  012008  362C               	rlcf	(___fldiv@grs+1)^0,f,c
 10192  01200A  362D               	rlcf	(___fldiv@grs+2)^0,f,c
 10193  01200C  362E               	rlcf	(___fldiv@grs+3)^0,f,c
 10194  01200E                     l9971:
 10195                           
 10196                           ; BSR set to: 0
 10197  01200E  501C               	movf	___fldiv@a^0,w,c
 10198  012010  5C24               	subwf	___fldiv@rem^0,w,c
 10199  012012  501D               	movf	(___fldiv@a+1)^0,w,c
 10200  012014  5825               	subwfb	(___fldiv@rem+1)^0,w,c
 10201  012016  501E               	movf	(___fldiv@a+2)^0,w,c
 10202  012018  5826               	subwfb	(___fldiv@rem+2)^0,w,c
 10203  01201A  501F               	movf	(___fldiv@a+3)^0,w,c
 10204  01201C  5827               	subwfb	(___fldiv@rem+3)^0,w,c
 10205  01201E  A0D8               	btfss	status,0,c
 10206  012020  D009               	goto	l9977
 10207                           
 10208                           ; BSR set to: 0
 10209  012022  8C2E               	bsf	(___fldiv@grs+3)^0,6,c
 10210                           
 10211                           ; BSR set to: 0
 10212  012024  501C               	movf	___fldiv@a^0,w,c
 10213  012026  5E24               	subwf	___fldiv@rem^0,f,c
 10214  012028  501D               	movf	(___fldiv@a+1)^0,w,c
 10215  01202A  5A25               	subwfb	(___fldiv@rem+1)^0,f,c
 10216  01202C  501E               	movf	(___fldiv@a+2)^0,w,c
 10217  01202E  5A26               	subwfb	(___fldiv@rem+2)^0,f,c
 10218  012030  501F               	movf	(___fldiv@a+3)^0,w,c
 10219  012032  5A27               	subwfb	(___fldiv@rem+3)^0,f,c
 10220  012034                     l9977:
 10221                           
 10222                           ; BSR set to: 0
 10223  012034  2A30               	incf	___fldiv@aexp^0,f,c
 10224  012036                     l2206:
 10225                           
 10226                           ; BSR set to: 0
 10227  012036  0E19               	movlw	25
 10228  012038  6430               	cpfsgt	___fldiv@aexp^0,c
 10229  01203A  D7D5               	goto	l9963
 10230                           
 10231                           ; BSR set to: 0
 10232  01203C  5024               	movf	___fldiv@rem^0,w,c
 10233  01203E  1025               	iorwf	(___fldiv@rem+1)^0,w,c
 10234  012040  1026               	iorwf	(___fldiv@rem+2)^0,w,c
 10235  012042  1027               	iorwf	(___fldiv@rem+3)^0,w,c
 10236  012044  B4D8               	btfsc	status,2,c
 10237  012046  D011               	goto	l9989
 10238                           
 10239                           ; BSR set to: 0
 10240  012048  802B               	bsf	___fldiv@grs^0,0,c
 10241  01204A  D00F               	goto	l9989
 10242  01204C                     l9983:
 10243                           
 10244                           ; BSR set to: 0
 10245  01204C  90D8               	bcf	status,0,c
 10246  01204E  3618               	rlcf	___fldiv@b^0,f,c
 10247  012050  3619               	rlcf	(___fldiv@b+1)^0,f,c
 10248  012052  361A               	rlcf	(___fldiv@b+2)^0,f,c
 10249  012054  361B               	rlcf	(___fldiv@b+3)^0,f,c
 10250                           
 10251                           ; BSR set to: 0
 10252  012056  BE2E               	btfsc	(___fldiv@grs+3)^0,7,c
 10253                           
 10254                           ; BSR set to: 0
 10255  012058  8018               	bsf	___fldiv@b^0,0,c
 10256                           
 10257                           ; BSR set to: 0
 10258  01205A  90D8               	bcf	status,0,c
 10259  01205C  362B               	rlcf	___fldiv@grs^0,f,c
 10260  01205E  362C               	rlcf	(___fldiv@grs+1)^0,f,c
 10261  012060  362D               	rlcf	(___fldiv@grs+2)^0,f,c
 10262  012062  362E               	rlcf	(___fldiv@grs+3)^0,f,c
 10263  012064  0629               	decf	___fldiv@new_exp^0,f,c
 10264  012066  A0D8               	btfss	status,0,c
 10265  012068  062A               	decf	(___fldiv@new_exp+1)^0,f,c
 10266  01206A                     l9989:
 10267                           
 10268                           ; BSR set to: 0
 10269  01206A  AE1A               	btfss	(___fldiv@b+2)^0,7,c
 10270  01206C  D7EF               	goto	l9983
 10271                           
 10272                           ; BSR set to: 0
 10273  01206E  0E00               	movlw	0
 10274  012070  6E30               	movwf	___fldiv@aexp^0,c
 10275                           
 10276                           ; BSR set to: 0
 10277  012072  AE2E               	btfss	(___fldiv@grs+3)^0,7,c
 10278  012074  D017               	goto	l2217
 10279                           
 10280                           ; BSR set to: 0
 10281  012076  0EFF               	movlw	255
 10282  012078  142B               	andwf	___fldiv@grs^0,w,c
 10283  01207A  6E20               	movwf	??___fldiv^0,c
 10284  01207C  0EFF               	movlw	255
 10285  01207E  142C               	andwf	(___fldiv@grs+1)^0,w,c
 10286  012080  6E21               	movwf	(??___fldiv+1)^0,c
 10287  012082  0EFF               	movlw	255
 10288  012084  142D               	andwf	(___fldiv@grs+2)^0,w,c
 10289  012086  6E22               	movwf	(??___fldiv+2)^0,c
 10290  012088  0E7F               	movlw	127
 10291  01208A  142E               	andwf	(___fldiv@grs+3)^0,w,c
 10292  01208C  6E23               	movwf	(??___fldiv+3)^0,c
 10293  01208E  5020               	movf	??___fldiv^0,w,c
 10294  012090  1021               	iorwf	(??___fldiv+1)^0,w,c
 10295  012092  1022               	iorwf	(??___fldiv+2)^0,w,c
 10296  012094  1023               	iorwf	(??___fldiv+3)^0,w,c
 10297  012096  B4D8               	btfsc	status,2,c
 10298  012098  D003               	goto	l2218
 10299  01209A                     u10350:
 10300                           
 10301                           ; BSR set to: 0
 10302  01209A  0E01               	movlw	1
 10303  01209C  6E30               	movwf	___fldiv@aexp^0,c
 10304  01209E  D002               	goto	l2217
 10305  0120A0                     l2218:
 10306                           
 10307                           ; BSR set to: 0
 10308  0120A0  B018               	btfsc	___fldiv@b^0,0,c
 10309  0120A2  D7FB               	goto	u10350
 10310  0120A4                     l2217:
 10311                           
 10312                           ; BSR set to: 0
 10313  0120A4  5030               	movf	___fldiv@aexp^0,w,c
 10314  0120A6  B4D8               	btfsc	status,2,c
 10315  0120A8  D01F               	goto	l10009
 10316                           
 10317                           ; BSR set to: 0
 10318  0120AA  0E01               	movlw	1
 10319  0120AC  2618               	addwf	___fldiv@b^0,f,c
 10320  0120AE  0E00               	movlw	0
 10321  0120B0  2219               	addwfc	(___fldiv@b+1)^0,f,c
 10322  0120B2  221A               	addwfc	(___fldiv@b+2)^0,f,c
 10323  0120B4  221B               	addwfc	(___fldiv@b+3)^0,f,c
 10324                           
 10325                           ; BSR set to: 0
 10326  0120B6  A01B               	btfss	(___fldiv@b+3)^0,0,c
 10327  0120B8  D017               	goto	l10009
 10328                           
 10329                           ; BSR set to: 0
 10330  0120BA  C018  F020         	movff	___fldiv@b,??___fldiv
 10331  0120BE  C019  F021         	movff	___fldiv@b+1,??___fldiv+1
 10332  0120C2  C01A  F022         	movff	___fldiv@b+2,??___fldiv+2
 10333  0120C6  C01B  F023         	movff	___fldiv@b+3,??___fldiv+3
 10334  0120CA  3423               	rlcf	(??___fldiv+3)^0,w,c
 10335  0120CC  3223               	rrcf	(??___fldiv+3)^0,f,c
 10336  0120CE  3222               	rrcf	(??___fldiv+2)^0,f,c
 10337  0120D0  3221               	rrcf	(??___fldiv+1)^0,f,c
 10338  0120D2  3220               	rrcf	??___fldiv^0,f,c
 10339  0120D4  C020  F018         	movff	??___fldiv,___fldiv@b
 10340  0120D8  C021  F019         	movff	??___fldiv+1,___fldiv@b+1
 10341  0120DC  C022  F01A         	movff	??___fldiv+2,___fldiv@b+2
 10342  0120E0  C023  F01B         	movff	??___fldiv+3,___fldiv@b+3
 10343                           
 10344                           ; BSR set to: 0
 10345  0120E4  4A29               	infsnz	___fldiv@new_exp^0,f,c
 10346  0120E6  2A2A               	incf	(___fldiv@new_exp+1)^0,f,c
 10347  0120E8                     l10009:
 10348                           
 10349                           ; BSR set to: 0
 10350  0120E8  BE2A               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10351  0120EA  D010               	goto	l10013
 10352  0120EC  502A               	movf	(___fldiv@new_exp+1)^0,w,c
 10353  0120EE  E103               	bnz	u10390
 10354  0120F0  2829               	incf	___fldiv@new_exp^0,w,c
 10355  0120F2  A0D8               	btfss	status,0,c
 10356  0120F4  D00B               	goto	l10013
 10357  0120F6                     u10390:
 10358                           
 10359                           ; BSR set to: 0
 10360  0120F6  0E00               	movlw	0
 10361  0120F8  6E2A               	movwf	(___fldiv@new_exp+1)^0,c
 10362  0120FA  6829               	setf	___fldiv@new_exp^0,c
 10363  0120FC  0E00               	movlw	0
 10364  0120FE  6E18               	movwf	___fldiv@b^0,c
 10365  012100  0E00               	movlw	0
 10366  012102  6E19               	movwf	(___fldiv@b+1)^0,c
 10367  012104  0E00               	movlw	0
 10368  012106  6E1A               	movwf	(___fldiv@b+2)^0,c
 10369  012108  0E00               	movlw	0
 10370  01210A  6E1B               	movwf	(___fldiv@b+3)^0,c
 10371  01210C                     l10013:
 10372                           
 10373                           ; BSR set to: 0
 10374  01210C  BE2A               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10375  01210E  D005               	goto	u10400
 10376  012110  502A               	movf	(___fldiv@new_exp+1)^0,w,c
 10377  012112  E111               	bnz	l10017
 10378  012114  0429               	decf	___fldiv@new_exp^0,w,c
 10379  012116  B0D8               	btfsc	status,0,c
 10380  012118  D00E               	goto	l10017
 10381  01211A                     u10400:
 10382                           
 10383                           ; BSR set to: 0
 10384  01211A  0E00               	movlw	0
 10385  01211C  6E2A               	movwf	(___fldiv@new_exp+1)^0,c
 10386  01211E  0E00               	movlw	0
 10387  012120  6E29               	movwf	___fldiv@new_exp^0,c
 10388  012122  0E00               	movlw	0
 10389  012124  6E18               	movwf	___fldiv@b^0,c
 10390  012126  0E00               	movlw	0
 10391  012128  6E19               	movwf	(___fldiv@b+1)^0,c
 10392  01212A  0E00               	movlw	0
 10393  01212C  6E1A               	movwf	(___fldiv@b+2)^0,c
 10394  01212E  0E00               	movlw	0
 10395  012130  6E1B               	movwf	(___fldiv@b+3)^0,c
 10396  012132  0E00               	movlw	0
 10397  012134  6E28               	movwf	___fldiv@sign^0,c
 10398  012136                     l10017:
 10399                           
 10400                           ; BSR set to: 0
 10401  012136  C029  F02F         	movff	___fldiv@new_exp,___fldiv@bexp
 10402                           
 10403                           ; BSR set to: 0
 10404  01213A  A02F               	btfss	___fldiv@bexp^0,0,c
 10405  01213C  D002               	goto	l10023
 10406                           
 10407                           ; BSR set to: 0
 10408  01213E  8E1A               	bsf	(___fldiv@b+2)^0,7,c
 10409  012140  D001               	goto	l10025
 10410  012142                     l10023:
 10411                           
 10412                           ; BSR set to: 0
 10413  012142  9E1A               	bcf	(___fldiv@b+2)^0,7,c
 10414  012144                     l10025:
 10415                           
 10416                           ; BSR set to: 0
 10417  012144  90D8               	bcf	status,0,c
 10418  012146  302F               	rrcf	___fldiv@bexp^0,w,c
 10419  012148  6E1B               	movwf	(___fldiv@b+3)^0,c
 10420  01214A  D70E               	goto	l9939
 10421  01214C                     __end_of___fldiv:
 10422                           	callstack 0
 10423                           
 10424 ;; *************** function ___awmod *****************
 10425 ;; Defined at:
 10426 ;;		line 7 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/awmod.c"
 10427 ;; Parameters:    Size  Location     Type
 10428 ;;  dividend        2   23[COMRAM] int 
 10429 ;;  divisor         2   25[COMRAM] int 
 10430 ;; Auto vars:     Size  Location     Type
 10431 ;;  sign            1   28[COMRAM] unsigned char 
 10432 ;;  counter         1   27[COMRAM] unsigned char 
 10433 ;; Return value:  Size  Location     Type
 10434 ;;                  2   23[COMRAM] int 
 10435 ;; Registers used:
 10436 ;;		wreg, status,2, status,0
 10437 ;; Tracked objects:
 10438 ;;		On entry : 3F/0
 10439 ;;		On exit  : 3F/0
 10440 ;;		Unchanged: 3F/0
 10441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10442 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10443 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10445 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10446 ;;Total ram usage:        6 bytes
 10447 ;; Hardware stack levels used: 1
 10448 ;; Hardware stack levels required when called: 7
 10449 ;; This function calls:
 10450 ;;		Nothing
 10451 ;; This function is called by:
 10452 ;;		_efgtoa
 10453 ;; This function uses a non-reentrant model
 10454 ;;
 10455                           
 10456                           	psect	text26
 10457  0139AE                     __ptext26:
 10458                           	callstack 0
 10459  0139AE                     ___awmod:
 10460                           	callstack 19
 10461                           
 10462                           ; BSR set to: 0
 10463                           
 10464                           ; BSR set to: 0
 10465                           ;incstack = 0
 10466  0139AE  0E00               	movlw	0
 10467  0139B0  6E1D               	movwf	___awmod@sign^0,c
 10468                           
 10469                           ; BSR set to: 0
 10470  0139B2  AE19               	btfss	(___awmod@dividend+1)^0,7,c
 10471  0139B4  D006               	goto	l10221
 10472                           
 10473                           ; BSR set to: 0
 10474  0139B6  6C18               	negf	___awmod@dividend^0,c
 10475  0139B8  1E19               	comf	(___awmod@dividend+1)^0,f,c
 10476  0139BA  B0D8               	btfsc	status,0,c
 10477  0139BC  2A19               	incf	(___awmod@dividend+1)^0,f,c
 10478                           
 10479                           ; BSR set to: 0
 10480  0139BE  0E01               	movlw	1
 10481  0139C0  6E1D               	movwf	___awmod@sign^0,c
 10482  0139C2                     l10221:
 10483                           
 10484                           ; BSR set to: 0
 10485  0139C2  AE1B               	btfss	(___awmod@divisor+1)^0,7,c
 10486  0139C4  D004               	goto	l10225
 10487                           
 10488                           ; BSR set to: 0
 10489  0139C6  6C1A               	negf	___awmod@divisor^0,c
 10490  0139C8  1E1B               	comf	(___awmod@divisor+1)^0,f,c
 10491  0139CA  B0D8               	btfsc	status,0,c
 10492  0139CC  2A1B               	incf	(___awmod@divisor+1)^0,f,c
 10493  0139CE                     l10225:
 10494                           
 10495                           ; BSR set to: 0
 10496  0139CE  501A               	movf	___awmod@divisor^0,w,c
 10497  0139D0  101B               	iorwf	(___awmod@divisor+1)^0,w,c
 10498  0139D2  B4D8               	btfsc	status,2,c
 10499  0139D4  D018               	goto	l10241
 10500                           
 10501                           ; BSR set to: 0
 10502  0139D6  0E01               	movlw	1
 10503  0139D8  6E1C               	movwf	___awmod@counter^0,c
 10504  0139DA  D004               	goto	l10231
 10505  0139DC                     l10229:
 10506                           
 10507                           ; BSR set to: 0
 10508  0139DC  90D8               	bcf	status,0,c
 10509  0139DE  361A               	rlcf	___awmod@divisor^0,f,c
 10510  0139E0  361B               	rlcf	(___awmod@divisor+1)^0,f,c
 10511  0139E2  2A1C               	incf	___awmod@counter^0,f,c
 10512  0139E4                     l10231:
 10513                           
 10514                           ; BSR set to: 0
 10515  0139E4  AE1B               	btfss	(___awmod@divisor+1)^0,7,c
 10516  0139E6  D7FA               	goto	l10229
 10517  0139E8                     u10690:
 10518                           
 10519                           ; BSR set to: 0
 10520  0139E8  501A               	movf	___awmod@divisor^0,w,c
 10521  0139EA  5C18               	subwf	___awmod@dividend^0,w,c
 10522  0139EC  501B               	movf	(___awmod@divisor+1)^0,w,c
 10523  0139EE  5819               	subwfb	(___awmod@dividend+1)^0,w,c
 10524  0139F0  A0D8               	btfss	status,0,c
 10525  0139F2  D004               	goto	l10237
 10526                           
 10527                           ; BSR set to: 0
 10528  0139F4  501A               	movf	___awmod@divisor^0,w,c
 10529  0139F6  5E18               	subwf	___awmod@dividend^0,f,c
 10530  0139F8  501B               	movf	(___awmod@divisor+1)^0,w,c
 10531  0139FA  5A19               	subwfb	(___awmod@dividend+1)^0,f,c
 10532  0139FC                     l10237:
 10533                           
 10534                           ; BSR set to: 0
 10535  0139FC  90D8               	bcf	status,0,c
 10536  0139FE  321B               	rrcf	(___awmod@divisor+1)^0,f,c
 10537  013A00  321A               	rrcf	___awmod@divisor^0,f,c
 10538                           
 10539                           ; BSR set to: 0
 10540  013A02  2E1C               	decfsz	___awmod@counter^0,f,c
 10541  013A04  D7F1               	goto	u10690
 10542  013A06                     l10241:
 10543                           
 10544                           ; BSR set to: 0
 10545  013A06  501D               	movf	___awmod@sign^0,w,c
 10546  013A08  B4D8               	btfsc	status,2,c
 10547  013A0A  D004               	goto	l10245
 10548                           
 10549                           ; BSR set to: 0
 10550  013A0C  6C18               	negf	___awmod@dividend^0,c
 10551  013A0E  1E19               	comf	(___awmod@dividend+1)^0,f,c
 10552  013A10  B0D8               	btfsc	status,0,c
 10553  013A12  2A19               	incf	(___awmod@dividend+1)^0,f,c
 10554  013A14                     l10245:
 10555                           
 10556                           ; BSR set to: 0
 10557  013A14  C018  F018         	movff	___awmod@dividend,?___awmod
 10558  013A18  C019  F019         	movff	___awmod@dividend+1,?___awmod+1
 10559                           
 10560                           ; BSR set to: 0
 10561  013A1C  0012               	return		;funcret
 10562  013A1E                     __end_of___awmod:
 10563                           	callstack 0
 10564                           
 10565 ;; *************** function ___awdiv *****************
 10566 ;; Defined at:
 10567 ;;		line 7 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/awdiv.c"
 10568 ;; Parameters:    Size  Location     Type
 10569 ;;  dividend        2   23[COMRAM] int 
 10570 ;;  divisor         2   25[COMRAM] int 
 10571 ;; Auto vars:     Size  Location     Type
 10572 ;;  quotient        2   29[COMRAM] int 
 10573 ;;  sign            1   28[COMRAM] unsigned char 
 10574 ;;  counter         1   27[COMRAM] unsigned char 
 10575 ;; Return value:  Size  Location     Type
 10576 ;;                  2   23[COMRAM] int 
 10577 ;; Registers used:
 10578 ;;		wreg, status,2, status,0
 10579 ;; Tracked objects:
 10580 ;;		On entry : 3F/0
 10581 ;;		On exit  : 3F/0
 10582 ;;		Unchanged: 3F/0
 10583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10584 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10585 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10587 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10588 ;;Total ram usage:        8 bytes
 10589 ;; Hardware stack levels used: 1
 10590 ;; Hardware stack levels required when called: 7
 10591 ;; This function calls:
 10592 ;;		Nothing
 10593 ;; This function is called by:
 10594 ;;		_efgtoa
 10595 ;; This function uses a non-reentrant model
 10596 ;;
 10597                           
 10598                           	psect	text27
 10599  01383A                     __ptext27:
 10600                           	callstack 0
 10601  01383A                     ___awdiv:
 10602                           	callstack 19
 10603                           
 10604                           ; BSR set to: 0
 10605                           
 10606                           ; BSR set to: 0
 10607                           ;incstack = 0
 10608  01383A  0E00               	movlw	0
 10609  01383C  6E1D               	movwf	___awdiv@sign^0,c
 10610                           
 10611                           ; BSR set to: 0
 10612  01383E  AE1B               	btfss	(___awdiv@divisor+1)^0,7,c
 10613  013840  D006               	goto	l10177
 10614                           
 10615                           ; BSR set to: 0
 10616  013842  6C1A               	negf	___awdiv@divisor^0,c
 10617  013844  1E1B               	comf	(___awdiv@divisor+1)^0,f,c
 10618  013846  B0D8               	btfsc	status,0,c
 10619  013848  2A1B               	incf	(___awdiv@divisor+1)^0,f,c
 10620                           
 10621                           ; BSR set to: 0
 10622  01384A  0E01               	movlw	1
 10623  01384C  6E1D               	movwf	___awdiv@sign^0,c
 10624  01384E                     l10177:
 10625                           
 10626                           ; BSR set to: 0
 10627  01384E  AE19               	btfss	(___awdiv@dividend+1)^0,7,c
 10628  013850  D006               	goto	l10183
 10629                           
 10630                           ; BSR set to: 0
 10631  013852  6C18               	negf	___awdiv@dividend^0,c
 10632  013854  1E19               	comf	(___awdiv@dividend+1)^0,f,c
 10633  013856  B0D8               	btfsc	status,0,c
 10634  013858  2A19               	incf	(___awdiv@dividend+1)^0,f,c
 10635                           
 10636                           ; BSR set to: 0
 10637  01385A  0E01               	movlw	1
 10638  01385C  1A1D               	xorwf	___awdiv@sign^0,f,c
 10639  01385E                     l10183:
 10640                           
 10641                           ; BSR set to: 0
 10642  01385E  0E00               	movlw	0
 10643  013860  6E1F               	movwf	(___awdiv@quotient+1)^0,c
 10644  013862  0E00               	movlw	0
 10645  013864  6E1E               	movwf	___awdiv@quotient^0,c
 10646                           
 10647                           ; BSR set to: 0
 10648  013866  501A               	movf	___awdiv@divisor^0,w,c
 10649  013868  101B               	iorwf	(___awdiv@divisor+1)^0,w,c
 10650  01386A  B4D8               	btfsc	status,2,c
 10651  01386C  D01C               	goto	l10205
 10652                           
 10653                           ; BSR set to: 0
 10654  01386E  0E01               	movlw	1
 10655  013870  6E1C               	movwf	___awdiv@counter^0,c
 10656  013872  D004               	goto	l10191
 10657  013874                     l10189:
 10658                           
 10659                           ; BSR set to: 0
 10660  013874  90D8               	bcf	status,0,c
 10661  013876  361A               	rlcf	___awdiv@divisor^0,f,c
 10662  013878  361B               	rlcf	(___awdiv@divisor+1)^0,f,c
 10663  01387A  2A1C               	incf	___awdiv@counter^0,f,c
 10664  01387C                     l10191:
 10665                           
 10666                           ; BSR set to: 0
 10667  01387C  AE1B               	btfss	(___awdiv@divisor+1)^0,7,c
 10668  01387E  D7FA               	goto	l10189
 10669  013880                     u10630:
 10670                           
 10671                           ; BSR set to: 0
 10672  013880  90D8               	bcf	status,0,c
 10673  013882  361E               	rlcf	___awdiv@quotient^0,f,c
 10674  013884  361F               	rlcf	(___awdiv@quotient+1)^0,f,c
 10675                           
 10676                           ; BSR set to: 0
 10677  013886  501A               	movf	___awdiv@divisor^0,w,c
 10678  013888  5C18               	subwf	___awdiv@dividend^0,w,c
 10679  01388A  501B               	movf	(___awdiv@divisor+1)^0,w,c
 10680  01388C  5819               	subwfb	(___awdiv@dividend+1)^0,w,c
 10681  01388E  A0D8               	btfss	status,0,c
 10682  013890  D005               	goto	l10201
 10683                           
 10684                           ; BSR set to: 0
 10685  013892  501A               	movf	___awdiv@divisor^0,w,c
 10686  013894  5E18               	subwf	___awdiv@dividend^0,f,c
 10687  013896  501B               	movf	(___awdiv@divisor+1)^0,w,c
 10688  013898  5A19               	subwfb	(___awdiv@dividend+1)^0,f,c
 10689                           
 10690                           ; BSR set to: 0
 10691  01389A  801E               	bsf	___awdiv@quotient^0,0,c
 10692  01389C                     l10201:
 10693                           
 10694                           ; BSR set to: 0
 10695  01389C  90D8               	bcf	status,0,c
 10696  01389E  321B               	rrcf	(___awdiv@divisor+1)^0,f,c
 10697  0138A0  321A               	rrcf	___awdiv@divisor^0,f,c
 10698                           
 10699                           ; BSR set to: 0
 10700  0138A2  2E1C               	decfsz	___awdiv@counter^0,f,c
 10701  0138A4  D7ED               	goto	u10630
 10702  0138A6                     l10205:
 10703                           
 10704                           ; BSR set to: 0
 10705  0138A6  501D               	movf	___awdiv@sign^0,w,c
 10706  0138A8  B4D8               	btfsc	status,2,c
 10707  0138AA  D004               	goto	l10209
 10708                           
 10709                           ; BSR set to: 0
 10710  0138AC  6C1E               	negf	___awdiv@quotient^0,c
 10711  0138AE  1E1F               	comf	(___awdiv@quotient+1)^0,f,c
 10712  0138B0  B0D8               	btfsc	status,0,c
 10713  0138B2  2A1F               	incf	(___awdiv@quotient+1)^0,f,c
 10714  0138B4                     l10209:
 10715                           
 10716                           ; BSR set to: 0
 10717  0138B4  C01E  F018         	movff	___awdiv@quotient,?___awdiv
 10718  0138B8  C01F  F019         	movff	___awdiv@quotient+1,?___awdiv+1
 10719                           
 10720                           ; BSR set to: 0
 10721  0138BC  0012               	return		;funcret
 10722  0138BE                     __end_of___awdiv:
 10723                           	callstack 0
 10724                           
 10725 ;; *************** function _atoi *****************
 10726 ;; Defined at:
 10727 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/atoi.c"
 10728 ;; Parameters:    Size  Location     Type
 10729 ;;  s               2   30[COMRAM] PTR const unsigned char 
 10730 ;;		 -> STR_8(79), STR_7(17), 
 10731 ;; Auto vars:     Size  Location     Type
 10732 ;;  n               2   38[COMRAM] int 
 10733 ;;  neg             2   36[COMRAM] int 
 10734 ;; Return value:  Size  Location     Type
 10735 ;;                  2   30[COMRAM] int 
 10736 ;; Registers used:
 10737 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10738 ;; Tracked objects:
 10739 ;;		On entry : 3F/0
 10740 ;;		On exit  : 0/0
 10741 ;;		Unchanged: 0/0
 10742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10743 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10744 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10745 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10746 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10747 ;;Total ram usage:       10 bytes
 10748 ;; Hardware stack levels used: 1
 10749 ;; Hardware stack levels required when called: 8
 10750 ;; This function calls:
 10751 ;;		___wmul
 10752 ;;		_isdigit
 10753 ;;		_isspace
 10754 ;; This function is called by:
 10755 ;;		_vfpfcnvrt
 10756 ;; This function uses a non-reentrant model
 10757 ;;
 10758                           
 10759                           	psect	text28
 10760  012BB6                     __ptext28:
 10761                           	callstack 0
 10762  012BB6                     _atoi:
 10763                           	callstack 19
 10764                           
 10765                           ; BSR set to: 0
 10766                           
 10767                           ; BSR set to: 0
 10768                           ;incstack = 0
 10769  012BB6  0E00               	movlw	0
 10770  012BB8  6E28               	movwf	(atoi@n+1)^0,c
 10771  012BBA  0E00               	movlw	0
 10772  012BBC  6E27               	movwf	atoi@n^0,c
 10773  012BBE  0E00               	movlw	0
 10774  012BC0  6E26               	movwf	(atoi@neg+1)^0,c
 10775  012BC2  0E00               	movlw	0
 10776  012BC4  6E25               	movwf	atoi@neg^0,c
 10777  012BC6  D002               	goto	l10899
 10778  012BC8                     l10895:
 10779                           
 10780                           ; BSR set to: 0
 10781  012BC8  4A1F               	infsnz	atoi@s^0,f,c
 10782  012BCA  2A20               	incf	(atoi@s+1)^0,f,c
 10783  012BCC                     l10899:
 10784                           
 10785                           ; BSR set to: 0
 10786  012BCC  0060  F07F  FFF6   	movff	atoi@s,tblptrl
 10787  012BD2  0060  F083  FFF7   	movff	atoi@s+1,tblptrh
 10788  012BD8                     	if	0	;tblptru may be non-zero
 10789  012BD8                     	endif
 10790  012BD8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10791  012BD8  0E00               	movlw	low (__mediumconst shr (0+16))
 10792  012BDA  6EF8               	movwf	tblptru,c
 10793  012BDC                     	endif
 10794  012BDC  0008               	tblrd		*
 10795  012BDE  50F5               	movf	tablat,w,c
 10796  012BE0  0A20               	xorlw	32
 10797  012BE2  B4D8               	btfsc	status,2,c
 10798  012BE4  D7F1               	goto	l10895
 10799                           
 10800                           ; BSR set to: 0
 10801  012BE6  0EF7               	movlw	247
 10802  012BE8  6E21               	movwf	??_atoi^0,c
 10803  012BEA  0EFF               	movlw	255
 10804  012BEC  6E22               	movwf	(??_atoi+1)^0,c
 10805  012BEE  0060  F07F  FFF6   	movff	atoi@s,tblptrl
 10806  012BF4  0060  F083  FFF7   	movff	atoi@s+1,tblptrh
 10807  012BFA                     	if	0	;tblptru may be non-zero
 10808  012BFA                     	endif
 10809  012BFA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10810  012BFA  0E00               	movlw	low (__mediumconst shr (0+16))
 10811  012BFC  6EF8               	movwf	tblptru,c
 10812  012BFE                     	endif
 10813  012BFE  0008               	tblrd		*
 10814  012C00  50F5               	movf	tablat,w,c
 10815  012C02  6E23               	movwf	(??_atoi+2)^0,c
 10816  012C04  6A24               	clrf	(??_atoi+3)^0,c
 10817  012C06  5021               	movf	??_atoi^0,w,c
 10818  012C08  2623               	addwf	(??_atoi+2)^0,f,c
 10819  012C0A  5022               	movf	(??_atoi+1)^0,w,c
 10820  012C0C  2224               	addwfc	(??_atoi+3)^0,f,c
 10821  012C0E  5024               	movf	(??_atoi+3)^0,w,c
 10822  012C10  E10C               	bnz	l10907
 10823  012C12  0E05               	movlw	5
 10824  012C14  5C23               	subwf	(??_atoi+2)^0,w,c
 10825  012C16  B0D8               	btfsc	status,0,c
 10826  012C18  D008               	goto	l10907
 10827  012C1A  D7D6               	goto	l10895
 10828  012C1C                     l10903:
 10829                           
 10830                           ; BSR set to: 0
 10831  012C1C  0E00               	movlw	0
 10832  012C1E  6E26               	movwf	(atoi@neg+1)^0,c
 10833  012C20  0E01               	movlw	1
 10834  012C22  6E25               	movwf	atoi@neg^0,c
 10835  012C24                     l10905:
 10836  012C24  4A1F               	infsnz	atoi@s^0,f,c
 10837  012C26  2A20               	incf	(atoi@s+1)^0,f,c
 10838  012C28  D036               	goto	l10915
 10839  012C2A                     l10907:
 10840                           
 10841                           ; BSR set to: 0
 10842  012C2A  0060  F07F  FFF6   	movff	atoi@s,tblptrl
 10843  012C30  0060  F083  FFF7   	movff	atoi@s+1,tblptrh
 10844  012C36                     	if	0	;tblptru may be non-zero
 10845  012C36                     	endif
 10846  012C36                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10847  012C36  0E00               	movlw	low (__mediumconst shr (0+16))
 10848  012C38  6EF8               	movwf	tblptru,c
 10849  012C3A                     	endif
 10850  012C3A  0008               	tblrd		*
 10851  012C3C  50F5               	movf	tablat,w,c
 10852  012C3E  6E21               	movwf	??_atoi^0,c
 10853  012C40  6A22               	clrf	(??_atoi+1)^0,c
 10854                           
 10855                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10856                           ; Switch size 1, requested type "simple"
 10857                           ; Number of cases is 1, Range of values is 0 to 0
 10858                           ; switch strategies available:
 10859                           ; Name         Instructions Cycles
 10860                           ; simple_byte            4     3 (average)
 10861                           ;	Chosen strategy is simple_byte
 10862  012C42  5022               	movf	(??_atoi+1)^0,w,c
 10863  012C44  0A00               	xorlw	0	; case 0
 10864  012C46  A4D8               	btfss	status,2,c
 10865  012C48  D026               	goto	l10915
 10866                           
 10867                           ; BSR set to: 0
 10868                           ; Switch size 1, requested type "simple"
 10869                           ; Number of cases is 2, Range of values is 43 to 45
 10870                           ; switch strategies available:
 10871                           ; Name         Instructions Cycles
 10872                           ; simple_byte            7     4 (average)
 10873                           ;	Chosen strategy is simple_byte
 10874  012C4A  5021               	movf	??_atoi^0,w,c
 10875  012C4C  0A2B               	xorlw	43	; case 43
 10876  012C4E  B4D8               	btfsc	status,2,c
 10877  012C50  D7E9               	goto	l10905
 10878  012C52  0A06               	xorlw	6	; case 45
 10879  012C54  B4D8               	btfsc	status,2,c
 10880  012C56  D7E2               	goto	l10903
 10881  012C58  D01E               	goto	l10915
 10882  012C5A                     l10909:
 10883  012C5A  C027  F018         	movff	atoi@n,___wmul@multiplier
 10884  012C5E  C028  F019         	movff	atoi@n+1,___wmul@multiplier+1
 10885  012C62  0E00               	movlw	0
 10886  012C64  6E1B               	movwf	(___wmul@multiplicand+1)^0,c
 10887  012C66  0E0A               	movlw	10
 10888  012C68  6E1A               	movwf	___wmul@multiplicand^0,c
 10889  012C6A  EC4B  F0A2         	call	___wmul	;wreg free
 10890  012C6E  0060  F07F  FFF6   	movff	atoi@s,tblptrl
 10891  012C74  0060  F083  FFF7   	movff	atoi@s+1,tblptrh
 10892  012C7A                     	if	0	;tblptru may be non-zero
 10893  012C7A                     	endif
 10894  012C7A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10895  012C7A  0E00               	movlw	low (__mediumconst shr (0+16))
 10896  012C7C  6EF8               	movwf	tblptru,c
 10897  012C7E                     	endif
 10898  012C7E  0008               	tblrd		*
 10899  012C80  50F5               	movf	tablat,w,c
 10900  012C82  5E18               	subwf	?___wmul^0,f,c
 10901  012C84  0E00               	movlw	0
 10902  012C86  5A19               	subwfb	(?___wmul+1)^0,f,c
 10903  012C88  0E30               	movlw	48
 10904  012C8A  2418               	addwf	?___wmul^0,w,c
 10905  012C8C  6E27               	movwf	atoi@n^0,c
 10906  012C8E  0E00               	movlw	0
 10907  012C90  2019               	addwfc	(?___wmul+1)^0,w,c
 10908  012C92  6E28               	movwf	(atoi@n+1)^0,c
 10909  012C94  D7C7               	goto	l10905
 10910  012C96                     l10915:
 10911  012C96  0ED0               	movlw	208
 10912  012C98  6E21               	movwf	??_atoi^0,c
 10913  012C9A  0EFF               	movlw	255
 10914  012C9C  6E22               	movwf	(??_atoi+1)^0,c
 10915  012C9E  0060  F07F  FFF6   	movff	atoi@s,tblptrl
 10916  012CA4  0060  F083  FFF7   	movff	atoi@s+1,tblptrh
 10917  012CAA                     	if	0	;tblptru may be non-zero
 10918  012CAA                     	endif
 10919  012CAA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10920  012CAA  0E00               	movlw	low (__mediumconst shr (0+16))
 10921  012CAC  6EF8               	movwf	tblptru,c
 10922  012CAE                     	endif
 10923  012CAE  0008               	tblrd		*
 10924  012CB0  50F5               	movf	tablat,w,c
 10925  012CB2  6E23               	movwf	(??_atoi+2)^0,c
 10926  012CB4  6A24               	clrf	(??_atoi+3)^0,c
 10927  012CB6  5021               	movf	??_atoi^0,w,c
 10928  012CB8  2623               	addwf	(??_atoi+2)^0,f,c
 10929  012CBA  5022               	movf	(??_atoi+1)^0,w,c
 10930  012CBC  2224               	addwfc	(??_atoi+3)^0,f,c
 10931  012CBE  5024               	movf	(??_atoi+3)^0,w,c
 10932  012CC0  E104               	bnz	u12020
 10933  012CC2  0E0A               	movlw	10
 10934  012CC4  5C23               	subwf	(??_atoi+2)^0,w,c
 10935  012CC6  A0D8               	btfss	status,0,c
 10936  012CC8  D7C8               	goto	l10909
 10937  012CCA                     u12020:
 10938  012CCA  5025               	movf	atoi@neg^0,w,c
 10939  012CCC  1026               	iorwf	(atoi@neg+1)^0,w,c
 10940  012CCE  A4D8               	btfss	status,2,c
 10941  012CD0  D00D               	goto	l2575
 10942  012CD2  C027  F021         	movff	atoi@n,??_atoi
 10943  012CD6  C028  F022         	movff	atoi@n+1,??_atoi+1
 10944  012CDA  1E21               	comf	??_atoi^0,f,c
 10945  012CDC  1E22               	comf	(??_atoi+1)^0,f,c
 10946  012CDE  4A21               	infsnz	??_atoi^0,f,c
 10947  012CE0  2A22               	incf	(??_atoi+1)^0,f,c
 10948  012CE2  C021  F01F         	movff	??_atoi,?_atoi
 10949  012CE6  C022  F020         	movff	??_atoi+1,?_atoi+1
 10950  012CEA  0012               	return	
 10951  012CEC                     l2575:
 10952  012CEC  C027  F01F         	movff	atoi@n,?_atoi
 10953  012CF0  C028  F020         	movff	atoi@n+1,?_atoi+1
 10954  012CF4  0012               	return		;funcret
 10955  012CF6                     __end_of_atoi:
 10956                           	callstack 0
 10957                           
 10958 ;; *************** function _isspace *****************
 10959 ;; Defined at:
 10960 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/isspace.c"
 10961 ;; Parameters:    Size  Location     Type
 10962 ;;  c               2   23[COMRAM] int 
 10963 ;; Auto vars:     Size  Location     Type
 10964 ;;		None
 10965 ;; Return value:  Size  Location     Type
 10966 ;;                  2   23[COMRAM] int 
 10967 ;; Registers used:
 10968 ;;		wreg, status,2, status,0
 10969 ;; Tracked objects:
 10970 ;;		On entry : 0/0
 10971 ;;		On exit  : 0/0
 10972 ;;		Unchanged: 0/0
 10973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10974 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10975 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10976 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10977 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10978 ;;Total ram usage:        7 bytes
 10979 ;; Hardware stack levels used: 1
 10980 ;; Hardware stack levels required when called: 7
 10981 ;; This function calls:
 10982 ;;		Nothing
 10983 ;; This function is called by:
 10984 ;;		_atoi
 10985 ;; This function uses a non-reentrant model
 10986 ;;
 10987                           
 10988                           	psect	text29
 10989  014012                     __ptext29:
 10990                           	callstack 0
 10991  014012                     _isspace:
 10992                           	callstack 19
 10993                           
 10994                           ;incstack = 0
 10995  014012  0E01               	movlw	1
 10996  014014  6E1E               	movwf	_isspace$3957^0,c
 10997  014016  0E20               	movlw	32
 10998  014018  1818               	xorwf	isspace@c^0,w,c
 10999  01401A  1019               	iorwf	(isspace@c+1)^0,w,c
 11000  01401C  B4D8               	btfsc	status,2,c
 11001  01401E  D014               	goto	l10475
 11002  014020  0EF7               	movlw	247
 11003  014022  6E1A               	movwf	??_isspace^0,c
 11004  014024  0EFF               	movlw	255
 11005  014026  6E1B               	movwf	(??_isspace+1)^0,c
 11006  014028  C018  F01C         	movff	isspace@c,??_isspace+2
 11007  01402C  C019  F01D         	movff	isspace@c+1,??_isspace+3
 11008  014030  501A               	movf	??_isspace^0,w,c
 11009  014032  261C               	addwf	(??_isspace+2)^0,f,c
 11010  014034  501B               	movf	(??_isspace+1)^0,w,c
 11011  014036  221D               	addwfc	(??_isspace+3)^0,f,c
 11012  014038  501D               	movf	(??_isspace+3)^0,w,c
 11013  01403A  E104               	bnz	u11220
 11014  01403C  0E05               	movlw	5
 11015  01403E  5C1C               	subwf	(??_isspace+2)^0,w,c
 11016  014040  A0D8               	btfss	status,0,c
 11017  014042  D002               	goto	l10475
 11018  014044                     u11220:
 11019  014044  0E00               	movlw	0
 11020  014046  6E1E               	movwf	_isspace$3957^0,c
 11021  014048                     l10475:
 11022  014048  C01E  F018         	movff	_isspace$3957,?_isspace
 11023  01404C  6A19               	clrf	(?_isspace+1)^0,c
 11024  01404E  0012               	return		;funcret
 11025  014050                     __end_of_isspace:
 11026                           	callstack 0
 11027                           
 11028 ;; *************** function _isdigit *****************
 11029 ;; Defined at:
 11030 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/isdigit.c"
 11031 ;; Parameters:    Size  Location     Type
 11032 ;;  c               2   23[COMRAM] int 
 11033 ;; Auto vars:     Size  Location     Type
 11034 ;;		None
 11035 ;; Return value:  Size  Location     Type
 11036 ;;                  2   23[COMRAM] int 
 11037 ;; Registers used:
 11038 ;;		wreg, status,2, status,0
 11039 ;; Tracked objects:
 11040 ;;		On entry : 0/0
 11041 ;;		On exit  : 0/0
 11042 ;;		Unchanged: 0/0
 11043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11044 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11046 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11047 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11048 ;;Total ram usage:        6 bytes
 11049 ;; Hardware stack levels used: 1
 11050 ;; Hardware stack levels required when called: 7
 11051 ;; This function calls:
 11052 ;;		Nothing
 11053 ;; This function is called by:
 11054 ;;		_vfpfcnvrt
 11055 ;;		_atoi
 11056 ;; This function uses a non-reentrant model
 11057 ;;
 11058                           
 11059                           	psect	text30
 11060  0143AE                     __ptext30:
 11061                           	callstack 0
 11062  0143AE                     _isdigit:
 11063                           	callstack 20
 11064                           
 11065                           ;incstack = 0
 11066  0143AE  0ED0               	movlw	208
 11067  0143B0  6E1A               	movwf	??_isdigit^0,c
 11068  0143B2  0EFF               	movlw	255
 11069  0143B4  6E1B               	movwf	(??_isdigit+1)^0,c
 11070  0143B6  C018  F01C         	movff	isdigit@c,??_isdigit+2
 11071  0143BA  C019  F01D         	movff	isdigit@c+1,??_isdigit+3
 11072  0143BE  501A               	movf	??_isdigit^0,w,c
 11073  0143C0  261C               	addwf	(??_isdigit+2)^0,f,c
 11074  0143C2  501B               	movf	(??_isdigit+1)^0,w,c
 11075  0143C4  221D               	addwfc	(??_isdigit+3)^0,f,c
 11076  0143C6  501D               	movf	(??_isdigit+3)^0,w,c
 11077  0143C8  E106               	bnz	u11190
 11078  0143CA  0E0A               	movlw	10
 11079  0143CC  5C1C               	subwf	(??_isdigit+2)^0,w,c
 11080  0143CE  B0D8               	btfsc	status,0,c
 11081  0143D0  D002               	goto	u11190
 11082  0143D2  0E01               	movlw	1
 11083  0143D4  D001               	goto	u11200
 11084  0143D6                     u11190:
 11085  0143D6  0E00               	movlw	0
 11086  0143D8                     u11200:
 11087  0143D8  6E18               	movwf	?_isdigit^0,c
 11088  0143DA  6A19               	clrf	(?_isdigit+1)^0,c
 11089  0143DC  0012               	return		;funcret
 11090  0143DE                     __end_of_isdigit:
 11091                           	callstack 0
 11092                           
 11093 ;; *************** function ___wmul *****************
 11094 ;; Defined at:
 11095 ;;		line 15 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/Umul16.c"
 11096 ;; Parameters:    Size  Location     Type
 11097 ;;  multiplier      2   23[COMRAM] unsigned int 
 11098 ;;  multiplicand    2   25[COMRAM] unsigned int 
 11099 ;; Auto vars:     Size  Location     Type
 11100 ;;  product         2   27[COMRAM] unsigned int 
 11101 ;; Return value:  Size  Location     Type
 11102 ;;                  2   23[COMRAM] unsigned int 
 11103 ;; Registers used:
 11104 ;;		wreg, status,2, status,0, prodl, prodh
 11105 ;; Tracked objects:
 11106 ;;		On entry : 0/0
 11107 ;;		On exit  : 0/0
 11108 ;;		Unchanged: 0/0
 11109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11110 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11111 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11113 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11114 ;;Total ram usage:        6 bytes
 11115 ;; Hardware stack levels used: 1
 11116 ;; Hardware stack levels required when called: 7
 11117 ;; This function calls:
 11118 ;;		Nothing
 11119 ;; This function is called by:
 11120 ;;		_atoi
 11121 ;; This function uses a non-reentrant model
 11122 ;;
 11123                           
 11124                           	psect	text31
 11125  014496                     __ptext31:
 11126                           	callstack 0
 11127  014496                     ___wmul:
 11128                           	callstack 19
 11129                           
 11130                           ;incstack = 0
 11131  014496  5018               	movf	___wmul@multiplier^0,w,c
 11132  014498  021A               	mulwf	___wmul@multiplicand^0,c
 11133  01449A  006F FFCC  F01C    	movff	prodl,___wmul@product
 11134  0144A0  006F FFD0  F01D    	movff	prodh,___wmul@product+1
 11135  0144A6  5018               	movf	___wmul@multiplier^0,w,c
 11136  0144A8  021B               	mulwf	(___wmul@multiplicand+1)^0,c
 11137  0144AA  50F3               	movf	243,w,c
 11138  0144AC  261D               	addwf	(___wmul@product+1)^0,f,c
 11139  0144AE  5019               	movf	(___wmul@multiplier+1)^0,w,c
 11140  0144B0  021A               	mulwf	___wmul@multiplicand^0,c
 11141  0144B2  50F3               	movf	243,w,c
 11142  0144B4  261D               	addwf	(___wmul@product+1)^0,f,c
 11143  0144B6  C01C  F018         	movff	___wmul@product,?___wmul
 11144  0144BA  C01D  F019         	movff	___wmul@product+1,?___wmul+1
 11145  0144BE  0012               	return		;funcret
 11146  0144C0                     __end_of___wmul:
 11147                           	callstack 0
 11148                           
 11149 ;; *************** function _init_display *****************
 11150 ;; Defined at:
 11151 ;;		line 31 in file "eadog.c"
 11152 ;; Parameters:    Size  Location     Type
 11153 ;;		None
 11154 ;; Auto vars:     Size  Location     Type
 11155 ;;		None
 11156 ;; Return value:  Size  Location     Type
 11157 ;;                  1    wreg      void 
 11158 ;; Registers used:
 11159 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11160 ;; Tracked objects:
 11161 ;;		On entry : 0/39
 11162 ;;		On exit  : 3F/3D
 11163 ;;		Unchanged: 0/0
 11164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11169 ;;Total ram usage:        0 bytes
 11170 ;; Hardware stack levels used: 1
 11171 ;; Hardware stack levels required when called: 9
 11172 ;; This function calls:
 11173 ;;		_ringBufS_init
 11174 ;;		_send_lcd_cmd
 11175 ;;		_send_lcd_cmd_long
 11176 ;;		_send_lcd_data
 11177 ;;		_wdtdelay
 11178 ;; This function is called by:
 11179 ;;		_main
 11180 ;; This function uses a non-reentrant model
 11181 ;;
 11182                           
 11183                           	psect	text32
 11184  01316E                     __ptext32:
 11185                           	callstack 0
 11186  01316E                     _init_display:
 11187                           	callstack 21
 11188                           
 11189                           ;eadog.c: 33:  spi_link.tx1a = &ring_buf1;
 11190                           
 11191                           ;incstack = 0
 11192  01316E  0E83               	movlw	low _ring_buf1
 11193  013170  0101               	movlb	1	; () banked
 11194  013172  6F06               	movwf	(_spi_link+6)& (0+255),b	;volatile
 11195  013174  0E02               	movlw	high _ring_buf1
 11196  013176  6F07               	movwf	(_spi_link+7)& (0+255),b	;volatile
 11197                           
 11198                           ; BSR set to: 1
 11199                           ;eadog.c: 34:  ringBufS_init(spi_link.tx1a);
 11200  013178  C106  F024         	movff	_spi_link+6,ringBufS_init@_this	;volatile
 11201  01317C  C107  F025         	movff	_spi_link+7,ringBufS_init@_this+1	;volatile
 11202  013180  ECEC  F0A2         	call	_ringBufS_init	;wreg free
 11203                           
 11204                           ;eadog.c: 40:  SPI1CON0bits.EN = 0;
 11205  013184  013D               	movlb	61	; () banked
 11206  013186  9F14               	bcf	20,7,b	;volatile
 11207                           
 11208                           ; BSR set to: 61
 11209                           ;eadog.c: 42:  SPI1CON1 = 0x20;
 11210  013188  0E20               	movlw	32
 11211  01318A  6F15               	movwf	21,b	;volatile
 11212                           
 11213                           ; BSR set to: 61
 11214                           ;eadog.c: 44:  SPI1CON2 = 0x03;
 11215  01318C  0E03               	movlw	3
 11216  01318E  6F16               	movwf	22,b	;volatile
 11217                           
 11218                           ; BSR set to: 61
 11219                           ;eadog.c: 46:  SPI1BAUD = 0x04;
 11220  013190  0E04               	movlw	4
 11221  013192  6F19               	movwf	25,b	;volatile
 11222                           
 11223                           ; BSR set to: 61
 11224                           ;eadog.c: 48:  SPI1CLK = 0x02;
 11225  013194  0E02               	movlw	2
 11226  013196  6F1C               	movwf	28,b	;volatile
 11227                           
 11228                           ; BSR set to: 61
 11229                           ;eadog.c: 50:  SPI1CON0 = 0x83;
 11230  013198  0E83               	movlw	131
 11231  01319A  6F14               	movwf	20,b	;volatile
 11232                           
 11233                           ; BSR set to: 61
 11234                           ;eadog.c: 51:  SPI1CON0bits.EN = 1;
 11235  01319C  8F14               	bsf	20,7,b	;volatile
 11236                           
 11237                           ; BSR set to: 61
 11238                           ;eadog.c: 53:  wdtdelay(350000);
 11239  01319E  0E30               	movlw	48
 11240  0131A0  6E18               	movwf	wdtdelay@delay^0,c
 11241  0131A2  0E57               	movlw	87
 11242  0131A4  6E19               	movwf	(wdtdelay@delay+1)^0,c
 11243  0131A6  0E05               	movlw	5
 11244  0131A8  6E1A               	movwf	(wdtdelay@delay+2)^0,c
 11245  0131AA  0E00               	movlw	0
 11246  0131AC  6E1B               	movwf	(wdtdelay@delay+3)^0,c
 11247  0131AE  EC18  F0A1         	call	_wdtdelay	;wreg free
 11248                           
 11249                           ; BSR set to: 0
 11250                           ;eadog.c: 54:  send_lcd_cmd_long(0x46);
 11251  0131B2  0E46               	movlw	70
 11252  0131B4  ECDE  F0A0         	call	_send_lcd_cmd_long
 11253                           
 11254                           ; BSR set to: 0
 11255                           ;eadog.c: 55:  send_lcd_cmd(0x41);
 11256  0131B8  0E41               	movlw	65
 11257  0131BA  ECFB  F0A0         	call	_send_lcd_cmd
 11258                           
 11259                           ; BSR set to: 0
 11260                           ;eadog.c: 56:  wdtdelay(80);
 11261  0131BE  0E50               	movlw	80
 11262  0131C0  6E18               	movwf	wdtdelay@delay^0,c
 11263  0131C2  0E00               	movlw	0
 11264  0131C4  6E19               	movwf	(wdtdelay@delay+1)^0,c
 11265  0131C6  0E00               	movlw	0
 11266  0131C8  6E1A               	movwf	(wdtdelay@delay+2)^0,c
 11267  0131CA  0E00               	movlw	0
 11268  0131CC  6E1B               	movwf	(wdtdelay@delay+3)^0,c
 11269  0131CE  EC18  F0A1         	call	_wdtdelay	;wreg free
 11270                           
 11271                           ; BSR set to: 0
 11272                           ;eadog.c: 57:  send_lcd_cmd(0x53);
 11273  0131D2  0E53               	movlw	83
 11274  0131D4  ECFB  F0A0         	call	_send_lcd_cmd
 11275                           
 11276                           ; BSR set to: 0
 11277                           ;eadog.c: 58:  send_lcd_data(2);
 11278  0131D8  0E02               	movlw	2
 11279  0131DA  ECCC  F0A2         	call	_send_lcd_data
 11280                           
 11281                           ; BSR set to: 0
 11282                           ;eadog.c: 59:  wdtdelay(80);
 11283  0131DE  0E50               	movlw	80
 11284  0131E0  6E18               	movwf	wdtdelay@delay^0,c
 11285  0131E2  0E00               	movlw	0
 11286  0131E4  6E19               	movwf	(wdtdelay@delay+1)^0,c
 11287  0131E6  0E00               	movlw	0
 11288  0131E8  6E1A               	movwf	(wdtdelay@delay+2)^0,c
 11289  0131EA  0E00               	movlw	0
 11290  0131EC  6E1B               	movwf	(wdtdelay@delay+3)^0,c
 11291  0131EE  EC18  F0A1         	call	_wdtdelay	;wreg free
 11292                           
 11293                           ; BSR set to: 0
 11294                           ;eadog.c: 60:  send_lcd_cmd_long(0x51);
 11295  0131F2  0E51               	movlw	81
 11296  0131F4  ECDE  F0A0         	call	_send_lcd_cmd_long
 11297                           
 11298                           ; BSR set to: 0
 11299                           ;eadog.c: 61:  SPI1CON0bits.EN = 0;
 11300  0131F8  013D               	movlb	61	; () banked
 11301  0131FA  9F14               	bcf	20,7,b	;volatile
 11302                           
 11303                           ; BSR set to: 61
 11304                           ;eadog.c: 62:  SPI1CON2 = 0x02;
 11305  0131FC  0E02               	movlw	2
 11306  0131FE  6F16               	movwf	22,b	;volatile
 11307                           
 11308                           ; BSR set to: 61
 11309                           ;eadog.c: 63:  SPI1CON0bits.EN = 1;
 11310  013200  8F14               	bsf	20,7,b	;volatile
 11311                           
 11312                           ; BSR set to: 61
 11313                           ;eadog.c: 65:  SPI1INTFbits.SPI1TXUIF = 0;
 11314  013202  931A               	bcf	26,1,b	;volatile
 11315                           
 11316                           ; BSR set to: 61
 11317                           ;eadog.c: 66:  DMA1CON1bits.DMODE = 0;
 11318  013204  0E3F               	movlw	-193
 11319  013206  013B               	movlb	59	; () banked
 11320  013208  17FD               	andwf	253,f,b	;volatile
 11321                           
 11322                           ; BSR set to: 59
 11323                           ;eadog.c: 67:  DMA1CON1bits.DSTP = 0;
 11324  01320A  9BFD               	bcf	253,5,b	;volatile
 11325                           
 11326                           ; BSR set to: 59
 11327                           ;eadog.c: 68:  DMA1CON1bits.SMODE = 1;
 11328  01320C  51FD               	movf	253,w,b	;volatile
 11329  01320E  0BF9               	andlw	-7
 11330  013210  0902               	iorlw	2
 11331  013212  6FFD               	movwf	253,b	;volatile
 11332                           
 11333                           ; BSR set to: 59
 11334                           ;eadog.c: 69:  DMA1CON1bits.SMR = 0;
 11335  013214  0EE7               	movlw	-25
 11336  013216  17FD               	andwf	253,f,b	;volatile
 11337                           
 11338                           ; BSR set to: 59
 11339                           ;eadog.c: 70:  DMA1CON1bits.SSTP = 1;
 11340  013218  81FD               	bsf	253,0,b	;volatile
 11341                           
 11342                           ; BSR set to: 59
 11343                           ;eadog.c: 71:  DMA1SSA = (uint24_t) & ring_buf1;
 11344  01321A  0E83               	movlw	low _ring_buf1
 11345  01321C  6FF9               	movwf	249,b	;volatile
 11346  01321E  0E02               	movlw	high _ring_buf1
 11347  013220  6FFA               	movwf	250,b	;volatile
 11348  013222  0E00               	movlw	low (_ring_buf1 shr (0+16))
 11349  013224  6FFB               	movwf	251,b	;volatile
 11350                           
 11351                           ; BSR set to: 59
 11352                           ;eadog.c: 72:  DMA1CON0bits.DGO = 0;
 11353  013226  9BFC               	bcf	252,5,b	;volatile
 11354                           
 11355                           ; BSR set to: 59
 11356                           ;eadog.c: 73:  SPI1INTFbits.SPI1TXUIF = 1;
 11357  013228  013D               	movlb	61	; () banked
 11358  01322A  831A               	bsf	26,1,b	;volatile
 11359                           
 11360                           ; BSR set to: 61
 11361  01322C  0012               	return		;funcret
 11362  01322E                     __end_of_init_display:
 11363                           	callstack 0
 11364                           
 11365 ;; *************** function _send_lcd_data *****************
 11366 ;; Defined at:
 11367 ;;		line 101 in file "eadog.c"
 11368 ;; Parameters:    Size  Location     Type
 11369 ;;  data            1    wreg     const unsigned char 
 11370 ;; Auto vars:     Size  Location     Type
 11371 ;;  data            1   27[COMRAM] const unsigned char 
 11372 ;; Return value:  Size  Location     Type
 11373 ;;                  1    wreg      void 
 11374 ;; Registers used:
 11375 ;;		wreg, status,2, status,0, cstack
 11376 ;; Tracked objects:
 11377 ;;		On entry : 3F/0
 11378 ;;		On exit  : 3F/0
 11379 ;;		Unchanged: 0/0
 11380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11382 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11384 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11385 ;;Total ram usage:        1 bytes
 11386 ;; Hardware stack levels used: 1
 11387 ;; Hardware stack levels required when called: 8
 11388 ;; This function calls:
 11389 ;;		_SPI1_ExchangeByte
 11390 ;;		_wdtdelay
 11391 ;; This function is called by:
 11392 ;;		_init_display
 11393 ;; This function uses a non-reentrant model
 11394 ;;
 11395                           
 11396                           	psect	text33
 11397  014598                     __ptext33:
 11398                           	callstack 0
 11399  014598                     _send_lcd_data:
 11400                           	callstack 21
 11401                           
 11402                           ; BSR set to: 61
 11403                           ;incstack = 0
 11404                           ;send_lcd_data@data stored from wreg
 11405  014598  6E1C               	movwf	send_lcd_data@data^0,c
 11406                           
 11407                           ;eadog.c: 101: static void send_lcd_data(const uint8_t data);eadog.c: 102: {;eadog.c: 10
      +                          3:  do { LATCbits.LATC2 = 0; } while(0);
 11408  01459A  94BC               	bcf	188,2,c	;volatile
 11409                           
 11410                           ;eadog.c: 104:  SPI1_ExchangeByte(data);
 11411  01459C  501C               	movf	send_lcd_data@data^0,w,c
 11412  01459E  EC35  F0A3         	call	_SPI1_ExchangeByte
 11413                           
 11414                           ; BSR set to: 61
 11415                           ;eadog.c: 105:  wdtdelay(8);
 11416  0145A2  0E08               	movlw	8
 11417  0145A4  6E18               	movwf	wdtdelay@delay^0,c
 11418  0145A6  0E00               	movlw	0
 11419  0145A8  6E19               	movwf	(wdtdelay@delay+1)^0,c
 11420  0145AA  0E00               	movlw	0
 11421  0145AC  6E1A               	movwf	(wdtdelay@delay+2)^0,c
 11422  0145AE  0E00               	movlw	0
 11423  0145B0  6E1B               	movwf	(wdtdelay@delay+3)^0,c
 11424  0145B2  EC18  F0A1         	call	_wdtdelay	;wreg free
 11425                           
 11426                           ; BSR set to: 0
 11427  0145B6  0012               	return		;funcret
 11428  0145B8                     __end_of_send_lcd_data:
 11429                           	callstack 0
 11430                           
 11431 ;; *************** function _send_lcd_cmd_long *****************
 11432 ;; Defined at:
 11433 ;;		line 117 in file "eadog.c"
 11434 ;; Parameters:    Size  Location     Type
 11435 ;;  cmd             1    wreg     const unsigned char 
 11436 ;; Auto vars:     Size  Location     Type
 11437 ;;  cmd             1   27[COMRAM] const unsigned char 
 11438 ;; Return value:  Size  Location     Type
 11439 ;;                  1    wreg      void 
 11440 ;; Registers used:
 11441 ;;		wreg, status,2, status,0, cstack
 11442 ;; Tracked objects:
 11443 ;;		On entry : 3F/0
 11444 ;;		On exit  : 3F/0
 11445 ;;		Unchanged: 0/0
 11446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11448 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11450 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11451 ;;Total ram usage:        1 bytes
 11452 ;; Hardware stack levels used: 1
 11453 ;; Hardware stack levels required when called: 8
 11454 ;; This function calls:
 11455 ;;		_SPI1_ExchangeByte
 11456 ;;		_wdtdelay
 11457 ;; This function is called by:
 11458 ;;		_init_display
 11459 ;; This function uses a non-reentrant model
 11460 ;;
 11461                           
 11462                           	psect	text34
 11463  0141BC                     __ptext34:
 11464                           	callstack 0
 11465  0141BC                     _send_lcd_cmd_long:
 11466                           	callstack 21
 11467                           
 11468                           ; BSR set to: 0
 11469                           ;incstack = 0
 11470                           ;send_lcd_cmd_long@cmd stored from wreg
 11471  0141BC  6E1C               	movwf	send_lcd_cmd_long@cmd^0,c
 11472                           
 11473                           ;eadog.c: 117: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 118: {;eadog.c:
      +                           119:  do { LATCbits.LATC2 = 0; } while(0);
 11474  0141BE  94BC               	bcf	188,2,c	;volatile
 11475                           
 11476                           ;eadog.c: 120:  SPI1_ExchangeByte(0xFE);
 11477  0141C0  0EFE               	movlw	254
 11478  0141C2  EC35  F0A3         	call	_SPI1_ExchangeByte
 11479                           
 11480                           ; BSR set to: 61
 11481                           ;eadog.c: 121:  wdtdelay(8);
 11482  0141C6  0E08               	movlw	8
 11483  0141C8  6E18               	movwf	wdtdelay@delay^0,c
 11484  0141CA  0E00               	movlw	0
 11485  0141CC  6E19               	movwf	(wdtdelay@delay+1)^0,c
 11486  0141CE  0E00               	movlw	0
 11487  0141D0  6E1A               	movwf	(wdtdelay@delay+2)^0,c
 11488  0141D2  0E00               	movlw	0
 11489  0141D4  6E1B               	movwf	(wdtdelay@delay+3)^0,c
 11490  0141D6  EC18  F0A1         	call	_wdtdelay	;wreg free
 11491                           
 11492                           ; BSR set to: 0
 11493                           ;eadog.c: 122:  SPI1_ExchangeByte(cmd);
 11494  0141DA  501C               	movf	send_lcd_cmd_long@cmd^0,w,c
 11495  0141DC  EC35  F0A3         	call	_SPI1_ExchangeByte
 11496                           
 11497                           ;eadog.c: 123:  wdtdelay(800);
 11498  0141E0  0E20               	movlw	32
 11499  0141E2  6E18               	movwf	wdtdelay@delay^0,c
 11500  0141E4  0E03               	movlw	3
 11501  0141E6  6E19               	movwf	(wdtdelay@delay+1)^0,c
 11502  0141E8  0E00               	movlw	0
 11503  0141EA  6E1A               	movwf	(wdtdelay@delay+2)^0,c
 11504  0141EC  0E00               	movlw	0
 11505  0141EE  6E1B               	movwf	(wdtdelay@delay+3)^0,c
 11506  0141F0  EC18  F0A1         	call	_wdtdelay	;wreg free
 11507                           
 11508                           ; BSR set to: 0
 11509  0141F4  0012               	return		;funcret
 11510  0141F6                     __end_of_send_lcd_cmd_long:
 11511                           	callstack 0
 11512                           
 11513 ;; *************** function _send_lcd_cmd *****************
 11514 ;; Defined at:
 11515 ;;		line 108 in file "eadog.c"
 11516 ;; Parameters:    Size  Location     Type
 11517 ;;  cmd             1    wreg     const unsigned char 
 11518 ;; Auto vars:     Size  Location     Type
 11519 ;;  cmd             1   27[COMRAM] const unsigned char 
 11520 ;; Return value:  Size  Location     Type
 11521 ;;                  1    wreg      void 
 11522 ;; Registers used:
 11523 ;;		wreg, status,2, status,0, cstack
 11524 ;; Tracked objects:
 11525 ;;		On entry : 3F/0
 11526 ;;		On exit  : 3F/0
 11527 ;;		Unchanged: 0/0
 11528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11530 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11532 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11533 ;;Total ram usage:        1 bytes
 11534 ;; Hardware stack levels used: 1
 11535 ;; Hardware stack levels required when called: 8
 11536 ;; This function calls:
 11537 ;;		_SPI1_ExchangeByte
 11538 ;;		_wdtdelay
 11539 ;; This function is called by:
 11540 ;;		_init_display
 11541 ;; This function uses a non-reentrant model
 11542 ;;
 11543                           
 11544                           	psect	text35
 11545  0141F6                     __ptext35:
 11546                           	callstack 0
 11547  0141F6                     _send_lcd_cmd:
 11548                           	callstack 21
 11549                           
 11550                           ; BSR set to: 0
 11551                           ;incstack = 0
 11552                           ;send_lcd_cmd@cmd stored from wreg
 11553  0141F6  6E1C               	movwf	send_lcd_cmd@cmd^0,c
 11554                           
 11555                           ;eadog.c: 108: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 109: {;eadog.c: 110:
      +                            do { LATCbits.LATC2 = 0; } while(0);
 11556  0141F8  94BC               	bcf	188,2,c	;volatile
 11557                           
 11558                           ;eadog.c: 111:  SPI1_ExchangeByte(0xFE);
 11559  0141FA  0EFE               	movlw	254
 11560  0141FC  EC35  F0A3         	call	_SPI1_ExchangeByte
 11561                           
 11562                           ; BSR set to: 61
 11563                           ;eadog.c: 112:  wdtdelay(8);
 11564  014200  0E08               	movlw	8
 11565  014202  6E18               	movwf	wdtdelay@delay^0,c
 11566  014204  0E00               	movlw	0
 11567  014206  6E19               	movwf	(wdtdelay@delay+1)^0,c
 11568  014208  0E00               	movlw	0
 11569  01420A  6E1A               	movwf	(wdtdelay@delay+2)^0,c
 11570  01420C  0E00               	movlw	0
 11571  01420E  6E1B               	movwf	(wdtdelay@delay+3)^0,c
 11572  014210  EC18  F0A1         	call	_wdtdelay	;wreg free
 11573                           
 11574                           ; BSR set to: 0
 11575                           ;eadog.c: 113:  SPI1_ExchangeByte(cmd);
 11576  014214  501C               	movf	send_lcd_cmd@cmd^0,w,c
 11577  014216  EC35  F0A3         	call	_SPI1_ExchangeByte
 11578                           
 11579                           ;eadog.c: 114:  wdtdelay(8);
 11580  01421A  0E08               	movlw	8
 11581  01421C  6E18               	movwf	wdtdelay@delay^0,c
 11582  01421E  0E00               	movlw	0
 11583  014220  6E19               	movwf	(wdtdelay@delay+1)^0,c
 11584  014222  0E00               	movlw	0
 11585  014224  6E1A               	movwf	(wdtdelay@delay+2)^0,c
 11586  014226  0E00               	movlw	0
 11587  014228  6E1B               	movwf	(wdtdelay@delay+3)^0,c
 11588  01422A  EC18  F0A1         	call	_wdtdelay	;wreg free
 11589                           
 11590                           ; BSR set to: 0
 11591  01422E  0012               	return		;funcret
 11592  014230                     __end_of_send_lcd_cmd:
 11593                           	callstack 0
 11594                           
 11595 ;; *************** function _wdtdelay *****************
 11596 ;; Defined at:
 11597 ;;		line 17 in file "eadog.c"
 11598 ;; Parameters:    Size  Location     Type
 11599 ;;  delay           4   23[COMRAM] const unsigned long 
 11600 ;; Auto vars:     Size  Location     Type
 11601 ;;		None
 11602 ;; Return value:  Size  Location     Type
 11603 ;;                  1    wreg      void 
 11604 ;; Registers used:
 11605 ;;		wreg, status,2, status,0
 11606 ;; Tracked objects:
 11607 ;;		On entry : 2/3D
 11608 ;;		On exit  : 3F/0
 11609 ;;		Unchanged: 0/0
 11610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11611 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11614 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11615 ;;Total ram usage:        4 bytes
 11616 ;; Hardware stack levels used: 1
 11617 ;; Hardware stack levels required when called: 7
 11618 ;; This function calls:
 11619 ;;		Nothing
 11620 ;; This function is called by:
 11621 ;;		_init_display
 11622 ;;		_send_lcd_data
 11623 ;;		_send_lcd_cmd
 11624 ;;		_send_lcd_cmd_long
 11625 ;; This function uses a non-reentrant model
 11626 ;;
 11627                           
 11628                           	psect	text36
 11629  014230                     __ptext36:
 11630                           	callstack 0
 11631  014230                     _wdtdelay:
 11632                           	callstack 22
 11633                           
 11634                           ;eadog.c: 17: void wdtdelay(const uint32_t delay);eadog.c: 18: {;eadog.c: 19:  static ui
      +                          nt32_t dcount;;eadog.c: 21:  for (dcount = 0; dcount <= delay; dcount++) {
 11635                           
 11636                           ; BSR set to: 0
 11637                           ;incstack = 0
 11638  014230  0E00               	movlw	0
 11639  014232  0100               	movlb	0	; () banked
 11640  014234  6FDD               	movwf	wdtdelay@dcount& (0+255),b
 11641  014236  0E00               	movlw	0
 11642  014238  6FDE               	movwf	(wdtdelay@dcount+1)& (0+255),b
 11643  01423A  0E00               	movlw	0
 11644  01423C  6FDF               	movwf	(wdtdelay@dcount+2)& (0+255),b
 11645  01423E  0E00               	movlw	0
 11646  014240  6FE0               	movwf	(wdtdelay@dcount+3)& (0+255),b
 11647  014242                     l1478:
 11648                           
 11649                           ; BSR set to: 0
 11650                           ;eadog.c: 22:   __nop();
 11651  014242  F000               	nop	
 11652  014244  0004               	clrwdt		;# 
 11653                           
 11654                           ;eadog.c: 24:  };
 11655  014246  0E01               	movlw	1
 11656  014248  0100               	movlb	0	; () banked
 11657  01424A  27DD               	addwf	wdtdelay@dcount& (0+255),f,b
 11658  01424C  0E00               	movlw	0
 11659  01424E  23DE               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
 11660  014250  23DF               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
 11661  014252  23E0               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
 11662  014254  51DD               	movf	wdtdelay@dcount& (0+255),w,b
 11663  014256  5C18               	subwf	wdtdelay@delay^0,w,c
 11664  014258  51DE               	movf	(wdtdelay@dcount+1)& (0+255),w,b
 11665  01425A  5819               	subwfb	(wdtdelay@delay+1)^0,w,c
 11666  01425C  51DF               	movf	(wdtdelay@dcount+2)& (0+255),w,b
 11667  01425E  581A               	subwfb	(wdtdelay@delay+2)^0,w,c
 11668  014260  51E0               	movf	(wdtdelay@dcount+3)& (0+255),w,b
 11669  014262  581B               	subwfb	(wdtdelay@delay+3)^0,w,c
 11670  014264  A0D8               	btfss	status,0,c
 11671  014266  0012               	return	
 11672  014268  D7EC               	goto	l1478
 11673  01426A                     __end_of_wdtdelay:
 11674                           	callstack 0
 11675                           
 11676 ;; *************** function _SPI1_ExchangeByte *****************
 11677 ;; Defined at:
 11678 ;;		line 100 in file "mcc_generated_files/spi1.c"
 11679 ;; Parameters:    Size  Location     Type
 11680 ;;  data            1    wreg     unsigned char 
 11681 ;; Auto vars:     Size  Location     Type
 11682 ;;  data            1   23[COMRAM] unsigned char 
 11683 ;; Return value:  Size  Location     Type
 11684 ;;                  1    wreg      unsigned char 
 11685 ;; Registers used:
 11686 ;;		wreg, status,2
 11687 ;; Tracked objects:
 11688 ;;		On entry : 0/0
 11689 ;;		On exit  : 3F/3D
 11690 ;;		Unchanged: 0/0
 11691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11693 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11695 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11696 ;;Total ram usage:        1 bytes
 11697 ;; Hardware stack levels used: 1
 11698 ;; Hardware stack levels required when called: 7
 11699 ;; This function calls:
 11700 ;;		Nothing
 11701 ;; This function is called by:
 11702 ;;		_send_lcd_data
 11703 ;;		_send_lcd_cmd
 11704 ;;		_send_lcd_cmd_long
 11705 ;; This function uses a non-reentrant model
 11706 ;;
 11707                           
 11708                           	psect	text37
 11709  01466A                     __ptext37:
 11710                           	callstack 0
 11711  01466A                     _SPI1_ExchangeByte:
 11712                           	callstack 21
 11713                           
 11714                           ; BSR set to: 0
 11715                           ;incstack = 0
 11716                           ;SPI1_ExchangeByte@data stored from wreg
 11717  01466A  6E18               	movwf	SPI1_ExchangeByte@data^0,c
 11718                           
 11719                           ;mcc_generated_files/spi1.c: 100: uint8_t SPI1_ExchangeByte(uint8_t data);mcc_generated_
      +                          files/spi1.c: 101: {;mcc_generated_files/spi1.c: 102:     SPI1TCNTL = 1;
 11720  01466C  0E01               	movlw	1
 11721  01466E  013D               	movlb	61	; () banked
 11722  014670  6F12               	movwf	18,b	;volatile
 11723                           
 11724                           ; BSR set to: 61
 11725                           ;mcc_generated_files/spi1.c: 103:     SPI1TXB = data;
 11726  014672  0060  F063  FD11   	movff	SPI1_ExchangeByte@data,15633	;volatile
 11727  014678                     l808:
 11728  014678  0139               	movlb	57	; () banked
 11729  01467A  A9A2               	btfss	162,4,b	;volatile
 11730  01467C  D7FD               	goto	l808
 11731                           
 11732                           ; BSR set to: 57
 11733                           ;mcc_generated_files/spi1.c: 105:     return SPI1RXB;
 11734  01467E  013D               	movlb	61	; () banked
 11735  014680  5110               	movf	16,w,b	;volatile
 11736                           
 11737                           ; BSR set to: 61
 11738  014682  0012               	return		;funcret
 11739  014684                     __end_of_SPI1_ExchangeByte:
 11740                           	callstack 0
 11741                           
 11742 ;; *************** function _ringBufS_init *****************
 11743 ;; Defined at:
 11744 ;;		line 22 in file "ringbufs.c"
 11745 ;; Parameters:    Size  Location     Type
 11746 ;;  _this           2   35[COMRAM] PTR volatile struct ring
 11747 ;;		 -> ring_buf1(67), 
 11748 ;; Auto vars:     Size  Location     Type
 11749 ;;		None
 11750 ;; Return value:  Size  Location     Type
 11751 ;;                  1    wreg      void 
 11752 ;; Registers used:
 11753 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11754 ;; Tracked objects:
 11755 ;;		On entry : 3F/1
 11756 ;;		On exit  : 4/0
 11757 ;;		Unchanged: 4/0
 11758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11759 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11762 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11763 ;;Total ram usage:        2 bytes
 11764 ;; Hardware stack levels used: 1
 11765 ;; Hardware stack levels required when called: 8
 11766 ;; This function calls:
 11767 ;;		_memset
 11768 ;; This function is called by:
 11769 ;;		_init_display
 11770 ;; This function uses a non-reentrant model
 11771 ;;
 11772                           
 11773                           	psect	text38
 11774  0145D8                     __ptext38:
 11775                           	callstack 0
 11776  0145D8                     _ringBufS_init:
 11777                           	callstack 21
 11778                           
 11779                           ; BSR set to: 1
 11780                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*) _this, 0, sizeof(*_this));
 11781                           
 11782                           ; BSR set to: 61
 11783                           ;incstack = 0
 11784  0145D8  C024  F018         	movff	ringBufS_init@_this,memset@dest
 11785  0145DC  C025  F019         	movff	ringBufS_init@_this+1,memset@dest+1
 11786  0145E0  0E00               	movlw	0
 11787  0145E2  6E1B               	movwf	(memset@c+1)^0,c
 11788  0145E4  0E00               	movlw	0
 11789  0145E6  6E1A               	movwf	memset@c^0,c
 11790  0145E8  0E00               	movlw	0
 11791  0145EA  6E1D               	movwf	(memset@n+1)^0,c
 11792  0145EC  0E43               	movlw	67
 11793  0145EE  6E1C               	movwf	memset@n^0,c
 11794  0145F0  EC35  F095         	call	_memset	;wreg free
 11795  0145F4  0012               	return		;funcret
 11796  0145F6                     __end_of_ringBufS_init:
 11797                           	callstack 0
 11798                           
 11799 ;; *************** function _eaDogM_WriteString *****************
 11800 ;; Defined at:
 11801 ;;		line 129 in file "eadog.c"
 11802 ;; Parameters:    Size  Location     Type
 11803 ;;  strPtr          2   40[COMRAM] PTR unsigned char 
 11804 ;;		 -> STR_9(18), STR_6(20), 
 11805 ;; Auto vars:     Size  Location     Type
 11806 ;;  len             1   44[COMRAM] unsigned char 
 11807 ;; Return value:  Size  Location     Type
 11808 ;;                  1    wreg      void 
 11809 ;; Registers used:
 11810 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11811 ;; Tracked objects:
 11812 ;;		On entry : 2/3D
 11813 ;;		On exit  : 3F/3B
 11814 ;;		Unchanged: 0/0
 11815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11816 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11817 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11818 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11819 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11820 ;;Total ram usage:        5 bytes
 11821 ;; Hardware stack levels used: 1
 11822 ;; Hardware stack levels required when called: 9
 11823 ;; This function calls:
 11824 ;;		_ringBufS_flush
 11825 ;;		_ringBufS_put_dma_cpy
 11826 ;;		_start_lcd
 11827 ;;		_strlen
 11828 ;;		_wait_lcd_set
 11829 ;; This function is called by:
 11830 ;;		_main
 11831 ;; This function uses a non-reentrant model
 11832 ;;
 11833                           
 11834                           	psect	text39
 11835  0138BE                     __ptext39:
 11836                           	callstack 0
 11837  0138BE                     _eaDogM_WriteString:
 11838                           	callstack 21
 11839                           
 11840                           ;eadog.c: 129: void eaDogM_WriteString(char *strPtr);eadog.c: 130: {;eadog.c: 131:  uint
      +                          8_t len = (uint8_t) strlen(strPtr);
 11841                           
 11842                           ;incstack = 0
 11843  0138BE  C029  F018         	movff	eaDogM_WriteString@strPtr,strlen@s
 11844  0138C2  C02A  F019         	movff	eaDogM_WriteString@strPtr+1,strlen@s+1
 11845  0138C6  ECEF  F09E         	call	_strlen	;wreg free
 11846  0138CA  5018               	movf	?_strlen^0,w,c
 11847  0138CC  6E2D               	movwf	eaDogM_WriteString@len^0,c
 11848                           
 11849                           ;eadog.c: 136:  wait_lcd_set();
 11850  0138CE  EC10  F0A4         	call	_wait_lcd_set	;wreg free
 11851                           
 11852                           ; BSR set to: 1
 11853                           ;eadog.c: 138:  ringBufS_flush(spi_link.tx1a, 0);
 11854  0138D2  C106  F024         	movff	_spi_link+6,ringBufS_flush@_this	;volatile
 11855  0138D6  C107  F025         	movff	_spi_link+7,ringBufS_flush@_this+1	;volatile
 11856  0138DA  0E00               	movlw	0
 11857  0138DC  6E26               	movwf	ringBufS_flush@clearBuffer^0,c
 11858  0138DE  ECF9  F09D         	call	_ringBufS_flush	;wreg free
 11859  0138E2  94BC               	bcf	188,2,c	;volatile
 11860                           
 11861                           ;eadog.c: 140:  if (len > 64) {
 11862  0138E4  0E40               	movlw	64
 11863  0138E6  642D               	cpfsgt	eaDogM_WriteString@len^0,c
 11864  0138E8  D013               	goto	l11165
 11865                           
 11866                           ;eadog.c: 141:   strPtr[64] = 0;
 11867  0138EA  0E40               	movlw	64
 11868  0138EC  2429               	addwf	eaDogM_WriteString@strPtr^0,w,c
 11869  0138EE  6E2B               	movwf	??_eaDogM_WriteString^0,c
 11870  0138F0  0E00               	movlw	0
 11871  0138F2  202A               	addwfc	(eaDogM_WriteString@strPtr+1)^0,w,c
 11872  0138F4  6E2C               	movwf	(??_eaDogM_WriteString+1)^0,c
 11873  0138F6  0060  F0AF  FFF6   	movff	??_eaDogM_WriteString,tblptrl
 11874  0138FC  0060  F0B3  FFF7   	movff	??_eaDogM_WriteString+1,tblptrh
 11875  013902                     	if	0	;tblptru may be non-zero
 11876  013902                     	endif
 11877  013902                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11878  013902  0E00               	movlw	low (__mediumconst shr (0+16))
 11879  013904  6EF8               	movwf	tblptru,c
 11880  013906                     	endif
 11881  013906  0E00               	movlw	0
 11882  013908  6EF5               	movwf	tablat,c
 11883  01390A  000C               	tblwt		*
 11884                           
 11885                           ;eadog.c: 142:   len = 64;
 11886  01390C  0E40               	movlw	64
 11887  01390E  6E2D               	movwf	eaDogM_WriteString@len^0,c
 11888  013910                     l11165:
 11889                           
 11890                           ;eadog.c: 144:  DMA1CON0bits.EN = 0;
 11891  013910  013B               	movlb	59	; () banked
 11892  013912  9FFC               	bcf	252,7,b	;volatile
 11893                           
 11894                           ; BSR set to: 59
 11895                           ;eadog.c: 145:  DMA1SSZ = len;
 11896  013914  0060  F0B7  FBF7   	movff	eaDogM_WriteString@len,15351	;volatile
 11897  01391A  6BF8               	clrf	248,b	;volatile
 11898                           
 11899                           ; BSR set to: 59
 11900                           ;eadog.c: 146:  DMA1CON0bits.EN = 1;
 11901  01391C  8FFC               	bsf	252,7,b	;volatile
 11902                           
 11903                           ; BSR set to: 59
 11904                           ;eadog.c: 147:  ringBufS_put_dma_cpy(spi_link.tx1a, strPtr, len);
 11905  01391E  C106  F023         	movff	_spi_link+6,ringBufS_put_dma_cpy@_this	;volatile
 11906  013922  C107  F024         	movff	_spi_link+7,ringBufS_put_dma_cpy@_this+1	;volatile
 11907  013926  C029  F025         	movff	eaDogM_WriteString@strPtr,ringBufS_put_dma_cpy@ptr
 11908  01392A  C02A  F026         	movff	eaDogM_WriteString@strPtr+1,ringBufS_put_dma_cpy@ptr+1
 11909  01392E  C02D  F027         	movff	eaDogM_WriteString@len,ringBufS_put_dma_cpy@len
 11910  013932  EC4C  F09E         	call	_ringBufS_put_dma_cpy	;wreg free
 11911                           
 11912                           ; BSR set to: 59
 11913                           ;eadog.c: 148:  start_lcd();
 11914  013936  EC1C  F0A4         	call	_start_lcd	;wreg free
 11915                           
 11916                           ; BSR set to: 59
 11917  01393A  0012               	return		;funcret
 11918  01393C                     __end_of_eaDogM_WriteString:
 11919                           	callstack 0
 11920                           
 11921 ;; *************** function _ringBufS_put_dma_cpy *****************
 11922 ;; Defined at:
 11923 ;;		line 76 in file "ringbufs.c"
 11924 ;; Parameters:    Size  Location     Type
 11925 ;;  _this           2   34[COMRAM] PTR struct ringBufS_t
 11926 ;;		 -> ring_buf1(67), 
 11927 ;;  ptr             2   36[COMRAM] PTR const unsigned char 
 11928 ;;		 -> STR_9(18), STR_6(20), 
 11929 ;;  len             1   38[COMRAM] const unsigned char 
 11930 ;; Auto vars:     Size  Location     Type
 11931 ;;		None
 11932 ;; Return value:  Size  Location     Type
 11933 ;;                  1    wreg      void 
 11934 ;; Registers used:
 11935 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11936 ;; Tracked objects:
 11937 ;;		On entry : 3F/3B
 11938 ;;		On exit  : 3F/3B
 11939 ;;		Unchanged: 3E/0
 11940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11941 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11943 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11944 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11945 ;;Total ram usage:        6 bytes
 11946 ;; Hardware stack levels used: 1
 11947 ;; Hardware stack levels required when called: 8
 11948 ;; This function calls:
 11949 ;;		_memcpy
 11950 ;; This function is called by:
 11951 ;;		_eaDogM_WriteString
 11952 ;; This function uses a non-reentrant model
 11953 ;;
 11954                           
 11955                           	psect	text40
 11956  013C98                     __ptext40:
 11957                           	callstack 0
 11958  013C98                     _ringBufS_put_dma_cpy:
 11959                           	callstack 21
 11960                           
 11961                           ; BSR set to: 59
 11962                           ;ringbufs.c: 76: void ringBufS_put_dma_cpy(ringBufS_t *_this, const char *ptr, const uin
      +                          t8_t len);ringbufs.c: 77: {;ringbufs.c: 78:  if (_this->count < 64) {
 11963                           
 11964                           ; BSR set to: 59
 11965                           ;incstack = 0
 11966  013C98  EE20 F042          	lfsr	2,66
 11967  013C9C  5023               	movf	ringBufS_put_dma_cpy@_this^0,w,c
 11968  013C9E  26D9               	addwf	fsr2l,f,c
 11969  013CA0  5024               	movf	(ringBufS_put_dma_cpy@_this+1)^0,w,c
 11970  013CA2  22DA               	addwfc	fsr2h,f,c
 11971  013CA4  0E40               	movlw	64
 11972  013CA6  60DF               	cpfslt	indf2,c
 11973  013CA8  0012               	return	
 11974                           
 11975                           ; BSR set to: 59
 11976                           ;ringbufs.c: 79:   memcpy(_this->buf, ptr, len);
 11977  013CAA  C023  F018         	movff	ringBufS_put_dma_cpy@_this,memcpy@d1
 11978  013CAE  C024  F019         	movff	ringBufS_put_dma_cpy@_this+1,memcpy@d1+1
 11979  013CB2  C025  F01A         	movff	ringBufS_put_dma_cpy@ptr,memcpy@s1
 11980  013CB6  C026  F01B         	movff	ringBufS_put_dma_cpy@ptr+1,memcpy@s1+1
 11981  013CBA  C027  F01C         	movff	ringBufS_put_dma_cpy@len,memcpy@n
 11982  013CBE  6A1D               	clrf	(memcpy@n+1)^0,c
 11983  013CC0  ECCE  F09D         	call	_memcpy	;wreg free
 11984                           
 11985                           ; BSR set to: 59
 11986                           ;ringbufs.c: 80:   _this->head = len;
 11987  013CC4  EE20 F040          	lfsr	2,64
 11988  013CC8  5023               	movf	ringBufS_put_dma_cpy@_this^0,w,c
 11989  013CCA  26D9               	addwf	fsr2l,f,c
 11990  013CCC  5024               	movf	(ringBufS_put_dma_cpy@_this+1)^0,w,c
 11991  013CCE  22DA               	addwfc	fsr2h,f,c
 11992  013CD0  0060  F09F  FFDF   	movff	ringBufS_put_dma_cpy@len,indf2
 11993                           
 11994                           ; BSR set to: 59
 11995                           ;ringbufs.c: 81:   _this->count = len;
 11996  013CD6  EE20 F042          	lfsr	2,66
 11997  013CDA  5023               	movf	ringBufS_put_dma_cpy@_this^0,w,c
 11998  013CDC  26D9               	addwf	fsr2l,f,c
 11999  013CDE  5024               	movf	(ringBufS_put_dma_cpy@_this+1)^0,w,c
 12000  013CE0  22DA               	addwfc	fsr2h,f,c
 12001  013CE2  0060  F09F  FFDF   	movff	ringBufS_put_dma_cpy@len,indf2
 12002                           
 12003                           ; BSR set to: 59
 12004  013CE8  0012               	return		;funcret
 12005  013CEA                     __end_of_ringBufS_put_dma_cpy:
 12006                           	callstack 0
 12007                           
 12008 ;; *************** function _memcpy *****************
 12009 ;; Defined at:
 12010 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/memcpy.c"
 12011 ;; Parameters:    Size  Location     Type
 12012 ;;  d1              2   23[COMRAM] PTR void 
 12013 ;;		 -> ring_buf1(67), 
 12014 ;;  s1              2   25[COMRAM] PTR const void 
 12015 ;;		 -> STR_9(18), STR_6(20), 
 12016 ;;  n               2   27[COMRAM] unsigned int 
 12017 ;; Auto vars:     Size  Location     Type
 12018 ;;  s               2   32[COMRAM] PTR const unsigned char 
 12019 ;;		 -> STR_9(18), STR_6(20), 
 12020 ;;  d               2   30[COMRAM] PTR unsigned char 
 12021 ;;		 -> ring_buf1(67), 
 12022 ;;  tmp             1   29[COMRAM] unsigned char 
 12023 ;; Return value:  Size  Location     Type
 12024 ;;                  2   23[COMRAM] PTR void 
 12025 ;; Registers used:
 12026 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12027 ;; Tracked objects:
 12028 ;;		On entry : 3F/3B
 12029 ;;		On exit  : 3F/3B
 12030 ;;		Unchanged: 3E/0
 12031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12032 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12033 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12035 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12036 ;;Total ram usage:       11 bytes
 12037 ;; Hardware stack levels used: 1
 12038 ;; Hardware stack levels required when called: 7
 12039 ;; This function calls:
 12040 ;;		Nothing
 12041 ;; This function is called by:
 12042 ;;		_ringBufS_put_dma_cpy
 12043 ;; This function uses a non-reentrant model
 12044 ;;
 12045                           
 12046                           	psect	text41
 12047  013B9C                     __ptext41:
 12048                           	callstack 0
 12049  013B9C                     _memcpy:
 12050                           	callstack 21
 12051                           
 12052                           ; BSR set to: 59
 12053                           
 12054                           ; BSR set to: 59
 12055                           ;incstack = 0
 12056  013B9C  C01A  F021         	movff	memcpy@s1,memcpy@s
 12057  013BA0  C01B  F022         	movff	memcpy@s1+1,memcpy@s+1
 12058  013BA4  C018  F01F         	movff	memcpy@d1,memcpy@d
 12059  013BA8  C019  F020         	movff	memcpy@d1+1,memcpy@d+1
 12060  013BAC  D019               	goto	l9003
 12061  013BAE                     l8995:
 12062                           
 12063                           ; BSR set to: 59
 12064  013BAE  0060  F087  FFF6   	movff	memcpy@s,tblptrl
 12065  013BB4  0060  F08B  FFF7   	movff	memcpy@s+1,tblptrh
 12066  013BBA                     	if	0	;tblptru may be non-zero
 12067  013BBA                     	endif
 12068  013BBA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12069  013BBA  0E00               	movlw	low (__mediumconst shr (0+16))
 12070  013BBC  6EF8               	movwf	tblptru,c
 12071  013BBE                     	endif
 12072  013BBE  0008               	tblrd		*
 12073  013BC0  006F FFD4  F01E    	movff	tablat,memcpy@tmp
 12074                           
 12075                           ; BSR set to: 59
 12076  013BC6  4A21               	infsnz	memcpy@s^0,f,c
 12077  013BC8  2A22               	incf	(memcpy@s+1)^0,f,c
 12078                           
 12079                           ; BSR set to: 59
 12080  013BCA  0060  F07F  FFD9   	movff	memcpy@d,fsr2l
 12081  013BD0  0060  F083  FFDA   	movff	memcpy@d+1,fsr2h
 12082  013BD6  0060  F07B  FFDF   	movff	memcpy@tmp,indf2
 12083                           
 12084                           ; BSR set to: 59
 12085  013BDC  4A1F               	infsnz	memcpy@d^0,f,c
 12086  013BDE  2A20               	incf	(memcpy@d+1)^0,f,c
 12087  013BE0                     l9003:
 12088                           
 12089                           ; BSR set to: 59
 12090  013BE0  061C               	decf	memcpy@n^0,f,c
 12091  013BE2  A0D8               	btfss	status,0,c
 12092  013BE4  061D               	decf	(memcpy@n+1)^0,f,c
 12093  013BE6  281C               	incf	memcpy@n^0,w,c
 12094  013BE8  E1E2               	bnz	l8995
 12095  013BEA  281D               	incf	(memcpy@n+1)^0,w,c
 12096  013BEC  B4D8               	btfsc	status,2,c
 12097  013BEE  0012               	return	
 12098  013BF0  D7DE               	goto	l8995
 12099  013BF2                     __end_of_memcpy:
 12100                           	callstack 0
 12101                           
 12102 ;; *************** function _eaDogM_WriteCommand *****************
 12103 ;; Defined at:
 12104 ;;		line 239 in file "eadog.c"
 12105 ;; Parameters:    Size  Location     Type
 12106 ;;  cmd             1    wreg     const unsigned char 
 12107 ;; Auto vars:     Size  Location     Type
 12108 ;;  cmd             1   40[COMRAM] const unsigned char 
 12109 ;; Return value:  Size  Location     Type
 12110 ;;                  1    wreg      void 
 12111 ;; Registers used:
 12112 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12113 ;; Tracked objects:
 12114 ;;		On entry : 3F/3D
 12115 ;;		On exit  : 3F/3D
 12116 ;;		Unchanged: 0/0
 12117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12119 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12121 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12122 ;;Total ram usage:        1 bytes
 12123 ;; Hardware stack levels used: 1
 12124 ;; Hardware stack levels required when called: 11
 12125 ;; This function calls:
 12126 ;;		_send_lcd_cmd_dma
 12127 ;; This function is called by:
 12128 ;;		_main
 12129 ;; This function uses a non-reentrant model
 12130 ;;
 12131                           
 12132                           	psect	text42
 12133  0147E4                     __ptext42:
 12134                           	callstack 0
 12135  0147E4                     _eaDogM_WriteCommand:
 12136                           	callstack 19
 12137                           
 12138                           ; BSR set to: 59
 12139                           ;incstack = 0
 12140                           ;eaDogM_WriteCommand@cmd stored from wreg
 12141  0147E4  6E29               	movwf	eaDogM_WriteCommand@cmd^0,c
 12142                           
 12143                           ;eadog.c: 239: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 240: {;eadog.c: 241:
      +                            send_lcd_cmd_dma(cmd);
 12144  0147E6  5029               	movf	eaDogM_WriteCommand@cmd^0,w,c
 12145  0147E8  EC19  F0A3         	call	_send_lcd_cmd_dma
 12146                           
 12147                           ; BSR set to: 61
 12148  0147EC  0012               	return		;funcret
 12149  0147EE                     __end_of_eaDogM_WriteCommand:
 12150                           	callstack 0
 12151                           
 12152 ;; *************** function _send_lcd_cmd_dma *****************
 12153 ;; Defined at:
 12154 ;;		line 160 in file "eadog.c"
 12155 ;; Parameters:    Size  Location     Type
 12156 ;;  strPtr          1    wreg     const unsigned char 
 12157 ;; Auto vars:     Size  Location     Type
 12158 ;;  strPtr          1   39[COMRAM] const unsigned char 
 12159 ;; Return value:  Size  Location     Type
 12160 ;;                  1    wreg      void 
 12161 ;; Registers used:
 12162 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12163 ;; Tracked objects:
 12164 ;;		On entry : 0/3D
 12165 ;;		On exit  : 3F/3D
 12166 ;;		Unchanged: 0/0
 12167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12169 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12171 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12172 ;;Total ram usage:        1 bytes
 12173 ;; Hardware stack levels used: 1
 12174 ;; Hardware stack levels required when called: 10
 12175 ;; This function calls:
 12176 ;;		_send_lcd_data_dma
 12177 ;;		_wait_lcd_done
 12178 ;; This function is called by:
 12179 ;;		_eaDogM_WriteCommand
 12180 ;; This function uses a non-reentrant model
 12181 ;;
 12182                           
 12183                           	psect	text43
 12184  014632                     __ptext43:
 12185                           	callstack 0
 12186  014632                     _send_lcd_cmd_dma:
 12187                           	callstack 19
 12188                           
 12189                           ; BSR set to: 61
 12190                           ;incstack = 0
 12191                           ;send_lcd_cmd_dma@strPtr stored from wreg
 12192  014632  6E28               	movwf	send_lcd_cmd_dma@strPtr^0,c
 12193                           
 12194                           ;eadog.c: 160: void send_lcd_cmd_dma(const uint8_t strPtr);eadog.c: 161: {;eadog.c: 162:
      +                            wait_lcd_done();
 12195  014634  EC91  F0A3         	call	_wait_lcd_done	;wreg free
 12196                           
 12197                           ; BSR set to: 61
 12198                           ;eadog.c: 163:  send_lcd_data_dma(0xFE);
 12199  014638  0EFE               	movlw	254
 12200  01463A  EC85  F0A0         	call	_send_lcd_data_dma
 12201                           
 12202                           ; BSR set to: 59
 12203                           ;eadog.c: 164:  wait_lcd_done();
 12204  01463E  EC91  F0A3         	call	_wait_lcd_done	;wreg free
 12205                           
 12206                           ;eadog.c: 165:  send_lcd_data_dma(strPtr);
 12207  014642  5028               	movf	send_lcd_cmd_dma@strPtr^0,w,c
 12208  014644  EC85  F0A0         	call	_send_lcd_data_dma
 12209                           
 12210                           ; BSR set to: 59
 12211                           ;eadog.c: 166:  wait_lcd_done();
 12212  014648  EC91  F0A3         	call	_wait_lcd_done	;wreg free
 12213                           
 12214                           ; BSR set to: 61
 12215  01464C  0012               	return		;funcret
 12216  01464E                     __end_of_send_lcd_cmd_dma:
 12217                           	callstack 0
 12218                           
 12219 ;; *************** function _wait_lcd_done *****************
 12220 ;; Defined at:
 12221 ;;		line 298 in file "eadog.c"
 12222 ;; Parameters:    Size  Location     Type
 12223 ;;		None
 12224 ;; Auto vars:     Size  Location     Type
 12225 ;;		None
 12226 ;; Return value:  Size  Location     Type
 12227 ;;                  1    wreg      void 
 12228 ;; Registers used:
 12229 ;;		None
 12230 ;; Tracked objects:
 12231 ;;		On entry : 0/3D
 12232 ;;		On exit  : 3F/3D
 12233 ;;		Unchanged: 0/0
 12234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12239 ;;Total ram usage:        0 bytes
 12240 ;; Hardware stack levels used: 1
 12241 ;; Hardware stack levels required when called: 7
 12242 ;; This function calls:
 12243 ;;		Nothing
 12244 ;; This function is called by:
 12245 ;;		_send_lcd_cmd_dma
 12246 ;; This function uses a non-reentrant model
 12247 ;;
 12248                           
 12249                           	psect	text44
 12250  014722                     __ptext44:
 12251                           	callstack 0
 12252  014722                     _wait_lcd_done:
 12253                           	callstack 21
 12254                           
 12255                           ;eadog.c: 300:  while (spi_link.LCD_DATA);
 12256                           
 12257                           ; BSR set to: 61
 12258                           ;incstack = 0
 12259  014722  0101               	movlb	1	; () banked
 12260  014724  B700               	btfsc	_spi_link& (0+255),3,b	;volatile
 12261  014726  D7FD               	goto	__ptext44
 12262  014728                     u5890:
 12263  014728  013D               	movlb	61	; () banked
 12264  01472A  BB17               	btfsc	23,5,b	;volatile
 12265  01472C  0012               	return	
 12266  01472E  D7FC               	goto	u5890
 12267  014730                     __end_of_wait_lcd_done:
 12268                           	callstack 0
 12269                           
 12270 ;; *************** function _send_lcd_data_dma *****************
 12271 ;; Defined at:
 12272 ;;		line 172 in file "eadog.c"
 12273 ;; Parameters:    Size  Location     Type
 12274 ;;  strPtr          1    wreg     const unsigned char 
 12275 ;; Auto vars:     Size  Location     Type
 12276 ;;  strPtr          1   38[COMRAM] const unsigned char 
 12277 ;; Return value:  Size  Location     Type
 12278 ;;                  1    wreg      void 
 12279 ;; Registers used:
 12280 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12281 ;; Tracked objects:
 12282 ;;		On entry : 3F/3D
 12283 ;;		On exit  : 3F/3B
 12284 ;;		Unchanged: 0/0
 12285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12287 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12289 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12290 ;;Total ram usage:        1 bytes
 12291 ;; Hardware stack levels used: 1
 12292 ;; Hardware stack levels required when called: 9
 12293 ;; This function calls:
 12294 ;;		_ringBufS_flush
 12295 ;;		_ringBufS_put_dma
 12296 ;;		_start_lcd
 12297 ;;		_wait_lcd_set
 12298 ;; This function is called by:
 12299 ;;		_send_lcd_cmd_dma
 12300 ;; This function uses a non-reentrant model
 12301 ;;
 12302                           
 12303                           	psect	text45
 12304  01410A                     __ptext45:
 12305                           	callstack 0
 12306  01410A                     _send_lcd_data_dma:
 12307                           	callstack 19
 12308                           
 12309                           ; BSR set to: 61
 12310                           ;incstack = 0
 12311                           ;send_lcd_data_dma@strPtr stored from wreg
 12312  01410A  6E27               	movwf	send_lcd_data_dma@strPtr^0,c
 12313                           
 12314                           ;eadog.c: 172: void send_lcd_data_dma(const uint8_t strPtr);eadog.c: 173: {;eadog.c: 177
      +                          :  wait_lcd_set();
 12315  01410C  EC10  F0A4         	call	_wait_lcd_set	;wreg free
 12316                           
 12317                           ; BSR set to: 1
 12318                           ;eadog.c: 179:  ringBufS_flush(spi_link.tx1a, 0);
 12319  014110  C106  F024         	movff	_spi_link+6,ringBufS_flush@_this	;volatile
 12320  014114  C107  F025         	movff	_spi_link+7,ringBufS_flush@_this+1	;volatile
 12321  014118  0E00               	movlw	0
 12322  01411A  6E26               	movwf	ringBufS_flush@clearBuffer^0,c
 12323  01411C  ECF9  F09D         	call	_ringBufS_flush	;wreg free
 12324  014120  94BC               	bcf	188,2,c	;volatile
 12325                           
 12326                           ;eadog.c: 181:  DMA1CON0bits.EN = 0;
 12327  014122  013B               	movlb	59	; () banked
 12328  014124  9FFC               	bcf	252,7,b	;volatile
 12329                           
 12330                           ; BSR set to: 59
 12331                           ;eadog.c: 182:  DMA1SSZ = 1;
 12332  014126  0E00               	movlw	0
 12333  014128  6FF8               	movwf	248,b	;volatile
 12334  01412A  0E01               	movlw	1
 12335  01412C  6FF7               	movwf	247,b	;volatile
 12336                           
 12337                           ; BSR set to: 59
 12338                           ;eadog.c: 183:  DMA1CON0bits.EN = 1;
 12339  01412E  8FFC               	bsf	252,7,b	;volatile
 12340                           
 12341                           ; BSR set to: 59
 12342                           ;eadog.c: 184:  ringBufS_put_dma(spi_link.tx1a, strPtr);
 12343  014130  C106  F018         	movff	_spi_link+6,ringBufS_put_dma@_this	;volatile
 12344  014134  C107  F019         	movff	_spi_link+7,ringBufS_put_dma@_this+1	;volatile
 12345  014138  C027  F01A         	movff	send_lcd_data_dma@strPtr,ringBufS_put_dma@c
 12346  01413C  EC75  F09E         	call	_ringBufS_put_dma	;wreg free
 12347                           
 12348                           ; BSR set to: 59
 12349                           ;eadog.c: 185:  start_lcd();
 12350  014140  EC1C  F0A4         	call	_start_lcd	;wreg free
 12351                           
 12352                           ; BSR set to: 59
 12353  014144  0012               	return		;funcret
 12354  014146                     __end_of_send_lcd_data_dma:
 12355                           	callstack 0
 12356                           
 12357 ;; *************** function _wait_lcd_set *****************
 12358 ;; Defined at:
 12359 ;;		line 288 in file "eadog.c"
 12360 ;; Parameters:    Size  Location     Type
 12361 ;;		None
 12362 ;; Auto vars:     Size  Location     Type
 12363 ;;		None
 12364 ;; Return value:  Size  Location     Type
 12365 ;;                  1    wreg      void 
 12366 ;; Registers used:
 12367 ;;		None
 12368 ;; Tracked objects:
 12369 ;;		On entry : 0/3D
 12370 ;;		On exit  : 3F/1
 12371 ;;		Unchanged: 0/0
 12372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12377 ;;Total ram usage:        0 bytes
 12378 ;; Hardware stack levels used: 1
 12379 ;; Hardware stack levels required when called: 7
 12380 ;; This function calls:
 12381 ;;		Nothing
 12382 ;; This function is called by:
 12383 ;;		_eaDogM_WriteString
 12384 ;;		_send_lcd_data_dma
 12385 ;; This function uses a non-reentrant model
 12386 ;;
 12387                           
 12388                           	psect	text46
 12389  014820                     __ptext46:
 12390                           	callstack 0
 12391  014820                     _wait_lcd_set:
 12392                           	callstack 22
 12393                           
 12394                           ;eadog.c: 290:  spi_link.LCD_DATA = 1;
 12395                           
 12396                           ; BSR set to: 59
 12397                           ;incstack = 0
 12398  014820  0101               	movlb	1	; () banked
 12399  014822  8700               	bsf	_spi_link& (0+255),3,b	;volatile
 12400                           
 12401                           ; BSR set to: 1
 12402  014824  0012               	return		;funcret
 12403  014826                     __end_of_wait_lcd_set:
 12404                           	callstack 0
 12405                           
 12406 ;; *************** function _start_lcd *****************
 12407 ;; Defined at:
 12408 ;;		line 283 in file "eadog.c"
 12409 ;; Parameters:    Size  Location     Type
 12410 ;;		None
 12411 ;; Auto vars:     Size  Location     Type
 12412 ;;		None
 12413 ;; Return value:  Size  Location     Type
 12414 ;;                  1    wreg      void 
 12415 ;; Registers used:
 12416 ;;		None
 12417 ;; Tracked objects:
 12418 ;;		On entry : 3F/3B
 12419 ;;		On exit  : 3F/3B
 12420 ;;		Unchanged: 0/0
 12421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12426 ;;Total ram usage:        0 bytes
 12427 ;; Hardware stack levels used: 1
 12428 ;; Hardware stack levels required when called: 7
 12429 ;; This function calls:
 12430 ;;		Nothing
 12431 ;; This function is called by:
 12432 ;;		_eaDogM_WriteString
 12433 ;;		_send_lcd_data_dma
 12434 ;; This function uses a non-reentrant model
 12435 ;;
 12436                           
 12437                           	psect	text47
 12438  014838                     __ptext47:
 12439                           	callstack 0
 12440  014838                     _start_lcd:
 12441                           	callstack 22
 12442                           
 12443                           ; BSR set to: 59
 12444                           ;eadog.c: 285:  DMA1CON0bits.DMA1SIRQEN = 1;
 12445                           
 12446                           ; BSR set to: 1
 12447                           ;incstack = 0
 12448  014838  8DFC               	bsf	252,6,b	;volatile
 12449                           
 12450                           ; BSR set to: 59
 12451  01483A  0012               	return		;funcret
 12452  01483C                     __end_of_start_lcd:
 12453                           	callstack 0
 12454                           
 12455 ;; *************** function _ringBufS_put_dma *****************
 12456 ;; Defined at:
 12457 ;;		line 67 in file "ringbufs.c"
 12458 ;; Parameters:    Size  Location     Type
 12459 ;;  _this           2   23[COMRAM] PTR struct ringBufS_t
 12460 ;;		 -> ring_buf1(67), 
 12461 ;;  c               1   25[COMRAM] const unsigned char 
 12462 ;; Auto vars:     Size  Location     Type
 12463 ;;		None
 12464 ;; Return value:  Size  Location     Type
 12465 ;;                  1    wreg      void 
 12466 ;; Registers used:
 12467 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12468 ;; Tracked objects:
 12469 ;;		On entry : 3F/3B
 12470 ;;		On exit  : 3F/3B
 12471 ;;		Unchanged: 3E/0
 12472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12473 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12475 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12476 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12477 ;;Total ram usage:        4 bytes
 12478 ;; Hardware stack levels used: 1
 12479 ;; Hardware stack levels required when called: 7
 12480 ;; This function calls:
 12481 ;;		Nothing
 12482 ;; This function is called by:
 12483 ;;		_send_lcd_data_dma
 12484 ;; This function uses a non-reentrant model
 12485 ;;
 12486                           
 12487                           	psect	text48
 12488  013CEA                     __ptext48:
 12489                           	callstack 0
 12490  013CEA                     _ringBufS_put_dma:
 12491                           	callstack 20
 12492                           
 12493                           ; BSR set to: 59
 12494                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 12495                           
 12496                           ; BSR set to: 59
 12497                           ;incstack = 0
 12498  013CEA  EE20 F042          	lfsr	2,66
 12499  013CEE  5018               	movf	ringBufS_put_dma@_this^0,w,c
 12500  013CF0  26D9               	addwf	fsr2l,f,c
 12501  013CF2  5019               	movf	(ringBufS_put_dma@_this+1)^0,w,c
 12502  013CF4  22DA               	addwfc	fsr2h,f,c
 12503  013CF6  0E40               	movlw	64
 12504  013CF8  60DF               	cpfslt	indf2,c
 12505  013CFA  0012               	return	
 12506                           
 12507                           ; BSR set to: 59
 12508                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 12509  013CFC  EE20 F040          	lfsr	2,64
 12510  013D00  5018               	movf	ringBufS_put_dma@_this^0,w,c
 12511  013D02  26D9               	addwf	fsr2l,f,c
 12512  013D04  5019               	movf	(ringBufS_put_dma@_this+1)^0,w,c
 12513  013D06  22DA               	addwfc	fsr2h,f,c
 12514  013D08  50DF               	movf	indf2,w,c
 12515  013D0A  6E1B               	movwf	??_ringBufS_put_dma^0,c
 12516  013D0C  501B               	movf	??_ringBufS_put_dma^0,w,c
 12517  013D0E  2418               	addwf	ringBufS_put_dma@_this^0,w,c
 12518  013D10  6ED9               	movwf	fsr2l,c
 12519  013D12  0E00               	movlw	0
 12520  013D14  2019               	addwfc	(ringBufS_put_dma@_this+1)^0,w,c
 12521  013D16  6EDA               	movwf	fsr2h,c
 12522  013D18  0060  F06B  FFDF   	movff	ringBufS_put_dma@c,indf2
 12523                           
 12524                           ;ringbufs.c: 71:   ++_this->head;
 12525  013D1E  EE20 F040          	lfsr	2,64
 12526  013D22  5018               	movf	ringBufS_put_dma@_this^0,w,c
 12527  013D24  26D9               	addwf	fsr2l,f,c
 12528  013D26  5019               	movf	(ringBufS_put_dma@_this+1)^0,w,c
 12529  013D28  22DA               	addwfc	fsr2h,f,c
 12530  013D2A  2ADF               	incf	indf2,f,c
 12531                           
 12532                           ;ringbufs.c: 72:   ++_this->count;
 12533  013D2C  EE20 F042          	lfsr	2,66
 12534  013D30  5018               	movf	ringBufS_put_dma@_this^0,w,c
 12535  013D32  26D9               	addwf	fsr2l,f,c
 12536  013D34  5019               	movf	(ringBufS_put_dma@_this+1)^0,w,c
 12537  013D36  22DA               	addwfc	fsr2h,f,c
 12538  013D38  2ADF               	incf	indf2,f,c
 12539                           
 12540                           ; BSR set to: 59
 12541  013D3A  0012               	return		;funcret
 12542  013D3C                     __end_of_ringBufS_put_dma:
 12543                           	callstack 0
 12544                           
 12545 ;; *************** function _ringBufS_flush *****************
 12546 ;; Defined at:
 12547 ;;		line 85 in file "ringbufs.c"
 12548 ;; Parameters:    Size  Location     Type
 12549 ;;  _this           2   35[COMRAM] PTR struct ringBufS_t
 12550 ;;		 -> ring_buf1(67), 
 12551 ;;  clearBuffer     1   37[COMRAM] const char 
 12552 ;; Auto vars:     Size  Location     Type
 12553 ;;		None
 12554 ;; Return value:  Size  Location     Type
 12555 ;;                  1    wreg      void 
 12556 ;; Registers used:
 12557 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12558 ;; Tracked objects:
 12559 ;;		On entry : 3F/1
 12560 ;;		On exit  : 4/0
 12561 ;;		Unchanged: 4/0
 12562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12563 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12566 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12567 ;;Total ram usage:        3 bytes
 12568 ;; Hardware stack levels used: 1
 12569 ;; Hardware stack levels required when called: 8
 12570 ;; This function calls:
 12571 ;;		_memset
 12572 ;; This function is called by:
 12573 ;;		_eaDogM_WriteString
 12574 ;;		_send_lcd_data_dma
 12575 ;; This function uses a non-reentrant model
 12576 ;;
 12577                           
 12578                           	psect	text49
 12579  013BF2                     __ptext49:
 12580                           	callstack 0
 12581  013BF2                     _ringBufS_flush:
 12582                           	callstack 21
 12583                           
 12584                           ; BSR set to: 1
 12585                           ;ringbufs.c: 85: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 86: {;ringbufs.c: 87:  _this->count = 0;
 12586                           
 12587                           ; BSR set to: 59
 12588                           ;incstack = 0
 12589  013BF2  EE20 F042          	lfsr	2,66
 12590  013BF6  5024               	movf	ringBufS_flush@_this^0,w,c
 12591  013BF8  26D9               	addwf	fsr2l,f,c
 12592  013BFA  5025               	movf	(ringBufS_flush@_this+1)^0,w,c
 12593  013BFC  22DA               	addwfc	fsr2h,f,c
 12594  013BFE  0E00               	movlw	0
 12595  013C00  6EDF               	movwf	indf2,c
 12596                           
 12597                           ;ringbufs.c: 88:  _this->head = 0;
 12598  013C02  EE20 F040          	lfsr	2,64
 12599  013C06  5024               	movf	ringBufS_flush@_this^0,w,c
 12600  013C08  26D9               	addwf	fsr2l,f,c
 12601  013C0A  5025               	movf	(ringBufS_flush@_this+1)^0,w,c
 12602  013C0C  22DA               	addwfc	fsr2h,f,c
 12603  013C0E  0E00               	movlw	0
 12604  013C10  6EDF               	movwf	indf2,c
 12605                           
 12606                           ;ringbufs.c: 89:  _this->tail = 0;
 12607  013C12  EE20 F041          	lfsr	2,65
 12608  013C16  5024               	movf	ringBufS_flush@_this^0,w,c
 12609  013C18  26D9               	addwf	fsr2l,f,c
 12610  013C1A  5025               	movf	(ringBufS_flush@_this+1)^0,w,c
 12611  013C1C  22DA               	addwfc	fsr2h,f,c
 12612  013C1E  0E00               	movlw	0
 12613  013C20  6EDF               	movwf	indf2,c
 12614                           
 12615                           ; BSR set to: 1
 12616                           ;ringbufs.c: 90:  if (clearBuffer) {
 12617  013C22  5026               	movf	ringBufS_flush@clearBuffer^0,w,c
 12618  013C24  B4D8               	btfsc	status,2,c
 12619  013C26  0012               	return	
 12620                           
 12621                           ; BSR set to: 1
 12622                           ;ringbufs.c: 91:   memset(_this->buf, 0, sizeof(_this->buf));
 12623  013C28  C024  F018         	movff	ringBufS_flush@_this,memset@dest
 12624  013C2C  C025  F019         	movff	ringBufS_flush@_this+1,memset@dest+1
 12625  013C30  0E00               	movlw	0
 12626  013C32  6E1B               	movwf	(memset@c+1)^0,c
 12627  013C34  0E00               	movlw	0
 12628  013C36  6E1A               	movwf	memset@c^0,c
 12629  013C38  0E00               	movlw	0
 12630  013C3A  6E1D               	movwf	(memset@n+1)^0,c
 12631  013C3C  0E40               	movlw	64
 12632  013C3E  6E1C               	movwf	memset@n^0,c
 12633  013C40  EC35  F095         	call	_memset	;wreg free
 12634  013C44  0012               	return		;funcret
 12635  013C46                     __end_of_ringBufS_flush:
 12636                           	callstack 0
 12637                           
 12638 ;; *************** function _display_led *****************
 12639 ;; Defined at:
 12640 ;;		line 3 in file "disp_led.c"
 12641 ;; Parameters:    Size  Location     Type
 12642 ;;  led             1    wreg     enum E17341
 12643 ;; Auto vars:     Size  Location     Type
 12644 ;;  led             1   25[COMRAM] enum E17341
 12645 ;; Return value:  Size  Location     Type
 12646 ;;                  1    wreg      void 
 12647 ;; Registers used:
 12648 ;;		wreg, status,2, status,0
 12649 ;; Tracked objects:
 12650 ;;		On entry : 0/0
 12651 ;;		On exit  : 0/0
 12652 ;;		Unchanged: 0/0
 12653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12655 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12656 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12657 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12658 ;;Total ram usage:        3 bytes
 12659 ;; Hardware stack levels used: 1
 12660 ;; Hardware stack levels required when called: 7
 12661 ;; This function calls:
 12662 ;;		Nothing
 12663 ;; This function is called by:
 12664 ;;		_main
 12665 ;; This function uses a non-reentrant model
 12666 ;;
 12667                           
 12668                           	psect	text50
 12669  0133A2                     __ptext50:
 12670                           	callstack 0
 12671  0133A2                     _display_led:
 12672                           	callstack 23
 12673                           
 12674                           ;incstack = 0
 12675                           ;display_led@led stored from wreg
 12676  0133A2  6E1A               	movwf	display_led@led^0,c
 12677                           
 12678                           ;disp_led.c: 3: void display_led(DISPLAY_TYPES led);disp_led.c: 4: {;disp_led.c: 5:  swi
      +                          tch (led) {
 12679  0133A4  D02D               	goto	l7207
 12680  0133A6                     l1240:
 12681  0133A6  98BD               	bcf	189,4,c	;volatile
 12682                           
 12683                           ;disp_led.c: 8:   do { LATDbits.LATD5 = 0; } while(0);
 12684  0133A8  9ABD               	bcf	189,5,c	;volatile
 12685  0133AA  0012               	return	
 12686  0133AC                     l1246:
 12687  0133AC  98BD               	bcf	189,4,c	;volatile
 12688                           
 12689                           ;disp_led.c: 12:   do { LATDbits.LATD5 = 1; } while(0);
 12690  0133AE  8ABD               	bsf	189,5,c	;volatile
 12691  0133B0  0012               	return	
 12692  0133B2                     l1251:
 12693  0133B2  88BD               	bsf	189,4,c	;volatile
 12694                           
 12695                           ;disp_led.c: 16:   do { LATDbits.LATD5 = 0; } while(0);
 12696  0133B4  9ABD               	bcf	189,5,c	;volatile
 12697  0133B6  0012               	return	
 12698  0133B8                     l1256:
 12699  0133B8  9CBD               	bcf	189,6,c	;volatile
 12700                           
 12701                           ;disp_led.c: 20:   do { LATDbits.LATD7 = 0; } while(0);
 12702  0133BA  9EBD               	bcf	189,7,c	;volatile
 12703  0133BC  0012               	return	
 12704  0133BE                     l1261:
 12705  0133BE  9CBD               	bcf	189,6,c	;volatile
 12706                           
 12707                           ;disp_led.c: 24:   do { LATDbits.LATD7 = 1; } while(0);
 12708  0133C0  8EBD               	bsf	189,7,c	;volatile
 12709  0133C2  0012               	return	
 12710  0133C4                     l1266:
 12711  0133C4  8CBD               	bsf	189,6,c	;volatile
 12712                           
 12713                           ;disp_led.c: 28:   do { LATDbits.LATD7 = 0; } while(0);
 12714  0133C6  9EBD               	bcf	189,7,c	;volatile
 12715  0133C8  0012               	return	
 12716  0133CA                     l1271:
 12717  0133CA  98BF               	bcf	191,4,c	;volatile
 12718                           
 12719                           ;disp_led.c: 32:   do { LATFbits.LATF5 = 0; } while(0);
 12720  0133CC  9ABF               	bcf	191,5,c	;volatile
 12721  0133CE  0012               	return	
 12722  0133D0                     l1276:
 12723  0133D0  98BF               	bcf	191,4,c	;volatile
 12724                           
 12725                           ;disp_led.c: 36:   do { LATFbits.LATF5 = 1; } while(0);
 12726  0133D2  8ABF               	bsf	191,5,c	;volatile
 12727  0133D4  0012               	return	
 12728  0133D6                     l1281:
 12729  0133D6  88BF               	bsf	191,4,c	;volatile
 12730                           
 12731                           ;disp_led.c: 40:   do { LATFbits.LATF5 = 0; } while(0);
 12732  0133D8  9ABF               	bcf	191,5,c	;volatile
 12733  0133DA  0012               	return	
 12734  0133DC                     l1286:
 12735  0133DC  9CBF               	bcf	191,6,c	;volatile
 12736                           
 12737                           ;disp_led.c: 44:   do { LATFbits.LATF7 = 0; } while(0);
 12738  0133DE  9EBF               	bcf	191,7,c	;volatile
 12739  0133E0  0012               	return	
 12740  0133E2                     l1291:
 12741  0133E2  9CBF               	bcf	191,6,c	;volatile
 12742                           
 12743                           ;disp_led.c: 48:   do { LATFbits.LATF7 = 1; } while(0);
 12744  0133E4  8EBF               	bsf	191,7,c	;volatile
 12745  0133E6  0012               	return	
 12746  0133E8                     l1296:
 12747  0133E8  8CBF               	bsf	191,6,c	;volatile
 12748                           
 12749                           ;disp_led.c: 52:   do { LATFbits.LATF7 = 0; } while(0);
 12750  0133EA  9EBF               	bcf	191,7,c	;volatile
 12751  0133EC  0012               	return	
 12752  0133EE                     l1301:
 12753  0133EE  98BD               	bcf	189,4,c	;volatile
 12754                           
 12755                           ;disp_led.c: 56:   do { LATDbits.LATD5 = 0; } while(0);
 12756  0133F0  9ABD               	bcf	189,5,c	;volatile
 12757                           
 12758                           ;disp_led.c: 57:   do { LATDbits.LATD6 = 0; } while(0);
 12759  0133F2  9CBD               	bcf	189,6,c	;volatile
 12760                           
 12761                           ;disp_led.c: 58:   do { LATDbits.LATD7 = 0; } while(0);
 12762  0133F4  9EBD               	bcf	189,7,c	;volatile
 12763                           
 12764                           ;disp_led.c: 59:   do { LATFbits.LATF4 = 0; } while(0);
 12765  0133F6  98BF               	bcf	191,4,c	;volatile
 12766                           
 12767                           ;disp_led.c: 60:   do { LATFbits.LATF5 = 0; } while(0);
 12768  0133F8  9ABF               	bcf	191,5,c	;volatile
 12769                           
 12770                           ;disp_led.c: 61:   do { LATFbits.LATF6 = 0; } while(0);
 12771  0133FA  9CBF               	bcf	191,6,c	;volatile
 12772                           
 12773                           ;disp_led.c: 62:   do { LATFbits.LATF7 = 0; } while(0);
 12774  0133FC  9EBF               	bcf	191,7,c	;volatile
 12775  0133FE  0012               	return	
 12776  013400                     l7207:
 12777  013400  501A               	movf	display_led@led^0,w,c
 12778  013402  6E18               	movwf	??_display_led^0,c
 12779  013404  6A19               	clrf	(??_display_led+1)^0,c
 12780                           
 12781                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12782                           ; Switch size 1, requested type "simple"
 12783                           ; Number of cases is 1, Range of values is 0 to 0
 12784                           ; switch strategies available:
 12785                           ; Name         Instructions Cycles
 12786                           ; simple_byte            4     3 (average)
 12787                           ;	Chosen strategy is simple_byte
 12788  013406  5019               	movf	(??_display_led+1)^0,w,c
 12789  013408  0A00               	xorlw	0	; case 0
 12790  01340A  A4D8               	btfss	status,2,c
 12791  01340C  D7F0               	goto	l1301
 12792                           
 12793                           ; Switch size 1, requested type "simple"
 12794                           ; Number of cases is 12, Range of values is 0 to 11
 12795                           ; switch strategies available:
 12796                           ; Name         Instructions Cycles
 12797                           ; simple_byte           37    19 (average)
 12798                           ;	Chosen strategy is simple_byte
 12799  01340E  5018               	movf	??_display_led^0,w,c
 12800  013410  0A00               	xorlw	0	; case 0
 12801  013412  B4D8               	btfsc	status,2,c
 12802  013414  D7C8               	goto	l1240
 12803  013416  0A01               	xorlw	1	; case 1
 12804  013418  B4D8               	btfsc	status,2,c
 12805  01341A  D7CB               	goto	l1251
 12806  01341C  0A03               	xorlw	3	; case 2
 12807  01341E  B4D8               	btfsc	status,2,c
 12808  013420  D7C5               	goto	l1246
 12809  013422  0A01               	xorlw	1	; case 3
 12810  013424  B4D8               	btfsc	status,2,c
 12811  013426  D7C8               	goto	l1256
 12812  013428  0A07               	xorlw	7	; case 4
 12813  01342A  B4D8               	btfsc	status,2,c
 12814  01342C  D7CB               	goto	l1266
 12815  01342E  0A01               	xorlw	1	; case 5
 12816  013430  B4D8               	btfsc	status,2,c
 12817  013432  D7C5               	goto	l1261
 12818  013434  0A03               	xorlw	3	; case 6
 12819  013436  B4D8               	btfsc	status,2,c
 12820  013438  D7C8               	goto	l1271
 12821  01343A  0A01               	xorlw	1	; case 7
 12822  01343C  B4D8               	btfsc	status,2,c
 12823  01343E  D7CB               	goto	l1281
 12824  013440  0A0F               	xorlw	15	; case 8
 12825  013442  B4D8               	btfsc	status,2,c
 12826  013444  D7C5               	goto	l1276
 12827  013446  0A01               	xorlw	1	; case 9
 12828  013448  B4D8               	btfsc	status,2,c
 12829  01344A  D7C8               	goto	l1286
 12830  01344C  0A03               	xorlw	3	; case 10
 12831  01344E  B4D8               	btfsc	status,2,c
 12832  013450  D7CB               	goto	l1296
 12833  013452  0A01               	xorlw	1	; case 11
 12834  013454  B4D8               	btfsc	status,2,c
 12835  013456  D7C5               	goto	l1291
 12836  013458  D7CA               	goto	l1301
 12837  01345A                     __end_of_display_led:
 12838                           	callstack 0
 12839                           
 12840 ;; *************** function _cli_read *****************
 12841 ;; Defined at:
 12842 ;;		line 83 in file "scdm.c"
 12843 ;; Parameters:    Size  Location     Type
 12844 ;;  a_ctx           2   10[BANK0 ] PTR struct _t_cli_ctx
 12845 ;;		 -> cli_ctx(131), 
 12846 ;; Auto vars:     Size  Location     Type
 12847 ;;  i               1   17[BANK0 ] unsigned char 
 12848 ;; Return value:  Size  Location     Type
 12849 ;;                  1    wreg      void 
 12850 ;; Registers used:
 12851 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 12852 ;; Tracked objects:
 12853 ;;		On entry : 3F/0
 12854 ;;		On exit  : 0/0
 12855 ;;		Unchanged: 0/0
 12856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12857 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12858 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12859 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12860 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12861 ;;Total ram usage:        8 bytes
 12862 ;; Hardware stack levels used: 1
 12863 ;; Hardware stack levels required when called: 14
 12864 ;; This function calls:
 12865 ;;		__cli_interpret_cmd
 12866 ;;		_linux_getc
 12867 ;;		_linux_putc
 12868 ;;		_memset
 12869 ;; This function is called by:
 12870 ;;		_main
 12871 ;; This function uses a non-reentrant model
 12872 ;;
 12873                           
 12874                           	psect	text51
 12875  0127C8                     __ptext51:
 12876                           	callstack 0
 12877  0127C8                     _cli_read:
 12878                           	callstack 16
 12879                           
 12880                           ; BSR set to: 0
 12881                           ;scdm.c: 83: void cli_read(t_cli_ctx *a_ctx);scdm.c: 84: {;scdm.c: 85:  uint8_t i = 0x00
      +                          ;
 12882                           
 12883                           ;incstack = 0
 12884  0127C8  0E00               	movlw	0
 12885  0127CA  6F71               	movwf	cli_read@i& (0+255),b
 12886                           
 12887                           ; BSR set to: 0
 12888                           ;scdm.c: 88:  if (!linux_getc(&i)) {
 12889  0127CC  0E71               	movlw	low cli_read@i
 12890  0127CE  6E19               	movwf	linux_getc@a_data^0,c
 12891  0127D0  EC74  F0A2         	call	_linux_getc	;wreg free
 12892  0127D4  0900               	iorlw	0
 12893  0127D6  B4D8               	btfsc	status,2,c
 12894  0127D8  0012               	return	
 12895  0127DA  D089               	goto	l11223
 12896  0127DC                     l11201:
 12897                           
 12898                           ; BSR set to: 0
 12899                           ;scdm.c: 100:   a_ctx->cmd[(((a_ctx->cpos) < (128 - 1)) ? (a_ctx->cpos + 1) : (a_ctx->cp
      +                          os))] = '\0';
 12900  0127DC  EE20 F082          	lfsr	2,130
 12901  0127E0  516A               	movf	cli_read@a_ctx& (0+255),w,b
 12902  0127E2  26D9               	addwf	fsr2l,f,c
 12903  0127E4  516B               	movf	(cli_read@a_ctx+1)& (0+255),w,b
 12904  0127E6  22DA               	addwfc	fsr2h,f,c
 12905  0127E8  0E7E               	movlw	126
 12906  0127EA  64DF               	cpfsgt	indf2,c
 12907  0127EC  D00C               	goto	l11205
 12908                           
 12909                           ; BSR set to: 0
 12910  0127EE  EE20 F082          	lfsr	2,130
 12911  0127F2  516A               	movf	cli_read@a_ctx& (0+255),w,b
 12912  0127F4  26D9               	addwf	fsr2l,f,c
 12913  0127F6  516B               	movf	(cli_read@a_ctx+1)& (0+255),w,b
 12914  0127F8  22DA               	addwfc	fsr2h,f,c
 12915  0127FA  50DF               	movf	indf2,w,c
 12916  0127FC  6F6C               	movwf	??_cli_read& (0+255),b
 12917  0127FE  516C               	movf	??_cli_read& (0+255),w,b
 12918  012800  6F6F               	movwf	_cli_read$2759& (0+255),b
 12919  012802  6B70               	clrf	(_cli_read$2759+1)& (0+255),b
 12920  012804  D00E               	goto	l1393
 12921  012806                     l11205:
 12922                           
 12923                           ; BSR set to: 0
 12924  012806  EE20 F082          	lfsr	2,130
 12925  01280A  516A               	movf	cli_read@a_ctx& (0+255),w,b
 12926  01280C  26D9               	addwf	fsr2l,f,c
 12927  01280E  516B               	movf	(cli_read@a_ctx+1)& (0+255),w,b
 12928  012810  22DA               	addwfc	fsr2h,f,c
 12929  012812  50DF               	movf	indf2,w,c
 12930  012814  6F6C               	movwf	??_cli_read& (0+255),b
 12931  012816  0E01               	movlw	1
 12932  012818  256C               	addwf	??_cli_read& (0+255),w,b
 12933  01281A  6F6F               	movwf	_cli_read$2759& (0+255),b
 12934  01281C  6B70               	clrf	(_cli_read$2759+1)& (0+255),b
 12935  01281E  0E00               	movlw	0
 12936  012820  2370               	addwfc	(_cli_read$2759+1)& (0+255),f,b
 12937  012822                     l1393:
 12938                           
 12939                           ; BSR set to: 0
 12940  012822  516F               	movf	_cli_read$2759& (0+255),w,b
 12941  012824  256A               	addwf	cli_read@a_ctx& (0+255),w,b
 12942  012826  6F6C               	movwf	??_cli_read& (0+255),b
 12943  012828  5170               	movf	(_cli_read$2759+1)& (0+255),w,b
 12944  01282A  216B               	addwfc	(cli_read@a_ctx+1)& (0+255),w,b
 12945  01282C  6F6D               	movwf	(??_cli_read+1)& (0+255),b
 12946  01282E  0E02               	movlw	2
 12947  012830  256C               	addwf	??_cli_read& (0+255),w,b
 12948  012832  6ED9               	movwf	fsr2l,c
 12949  012834  0E00               	movlw	0
 12950  012836  216D               	addwfc	(??_cli_read+1)& (0+255),w,b
 12951  012838  6EDA               	movwf	fsr2h,c
 12952  01283A  0E00               	movlw	0
 12953  01283C  6EDF               	movwf	indf2,c
 12954                           
 12955                           ; BSR set to: 0
 12956                           ;scdm.c: 101:   linux_putc((unsigned char *) "\r\n", 2);
 12957  01283E  0E9B               	movlw	low (STR_5+15)
 12958  012840  6E2F               	movwf	linux_putc@data^0,c
 12959  012842  0EFF               	movlw	high (STR_5+15)
 12960  012844  6E30               	movwf	(linux_putc@data+1)^0,c
 12961  012846  0E02               	movlw	2
 12962  012848  6E31               	movwf	linux_putc@a_len^0,c
 12963  01284A  EC98  F0A3         	call	_linux_putc	;wreg free
 12964                           
 12965                           ;scdm.c: 102:   res = _cli_interpret_cmd(a_ctx);
 12966  01284E  C06A  F031         	movff	cli_read@a_ctx,__cli_interpret_cmd@a_ctx
 12967  012852  C06B  F032         	movff	cli_read@a_ctx+1,__cli_interpret_cmd@a_ctx+1
 12968  012856  ECA6  F090         	call	__cli_interpret_cmd	;wreg free
 12969  01285A  6E40               	movwf	_res^0,c
 12970                           
 12971                           ;scdm.c: 103:   a_ctx->cpos = 0;
 12972  01285C  0100               	movlb	0	; () banked
 12973  01285E  EE20 F082          	lfsr	2,130
 12974  012862  516A               	movf	cli_read@a_ctx& (0+255),w,b
 12975  012864  26D9               	addwf	fsr2l,f,c
 12976  012866  516B               	movf	(cli_read@a_ctx+1)& (0+255),w,b
 12977  012868  22DA               	addwfc	fsr2h,f,c
 12978  01286A  0E00               	movlw	0
 12979  01286C  6EDF               	movwf	indf2,c
 12980                           
 12981                           ; BSR set to: 0
 12982                           ;scdm.c: 104:   memset(a_ctx->cmd, 0x00, 128);
 12983  01286E  0E02               	movlw	2
 12984  012870  256A               	addwf	cli_read@a_ctx& (0+255),w,b
 12985  012872  6E18               	movwf	memset@dest^0,c
 12986  012874  0E00               	movlw	0
 12987  012876  216B               	addwfc	(cli_read@a_ctx+1)& (0+255),w,b
 12988  012878  6E19               	movwf	(memset@dest+1)^0,c
 12989  01287A  0E00               	movlw	0
 12990  01287C  6E1B               	movwf	(memset@c+1)^0,c
 12991  01287E  0E00               	movlw	0
 12992  012880  6E1A               	movwf	memset@c^0,c
 12993  012882  0E00               	movlw	0
 12994  012884  6E1D               	movwf	(memset@n+1)^0,c
 12995  012886  0E80               	movlw	128
 12996  012888  6E1C               	movwf	memset@n^0,c
 12997  01288A  EC35  F095         	call	_memset	;wreg free
 12998                           
 12999                           ;scdm.c: 105:   break;
 13000  01288E  0012               	return	
 13001  012890                     l11215:
 13002                           
 13003                           ; BSR set to: 0
 13004                           ;scdm.c: 108:   if (a_ctx->cpos < (128 - 1)) {
 13005  012890  EE20 F082          	lfsr	2,130
 13006  012894  516A               	movf	cli_read@a_ctx& (0+255),w,b
 13007  012896  26D9               	addwf	fsr2l,f,c
 13008  012898  516B               	movf	(cli_read@a_ctx+1)& (0+255),w,b
 13009  01289A  22DA               	addwfc	fsr2h,f,c
 13010  01289C  0E7F               	movlw	127
 13011  01289E  60DF               	cpfslt	indf2,c
 13012  0128A0  0012               	return	
 13013                           
 13014                           ; BSR set to: 0
 13015                           ;scdm.c: 109:    a_ctx->cmd[a_ctx->cpos++] = i;
 13016  0128A2  EE20 F082          	lfsr	2,130
 13017  0128A6  516A               	movf	cli_read@a_ctx& (0+255),w,b
 13018  0128A8  26D9               	addwf	fsr2l,f,c
 13019  0128AA  516B               	movf	(cli_read@a_ctx+1)& (0+255),w,b
 13020  0128AC  22DA               	addwfc	fsr2h,f,c
 13021  0128AE  50DF               	movf	indf2,w,c
 13022  0128B0  6F6C               	movwf	??_cli_read& (0+255),b
 13023  0128B2  516C               	movf	??_cli_read& (0+255),w,b
 13024  0128B4  256A               	addwf	cli_read@a_ctx& (0+255),w,b
 13025  0128B6  6F6D               	movwf	(??_cli_read+1)& (0+255),b
 13026  0128B8  0E00               	movlw	0
 13027  0128BA  216B               	addwfc	(cli_read@a_ctx+1)& (0+255),w,b
 13028  0128BC  6F6E               	movwf	(??_cli_read+2)& (0+255),b
 13029  0128BE  0E02               	movlw	2
 13030  0128C0  256D               	addwf	(??_cli_read+1)& (0+255),w,b
 13031  0128C2  6ED9               	movwf	fsr2l,c
 13032  0128C4  0E00               	movlw	0
 13033  0128C6  216E               	addwfc	(??_cli_read+2)& (0+255),w,b
 13034  0128C8  6EDA               	movwf	fsr2h,c
 13035  0128CA  0060  F1C7  FFDF   	movff	cli_read@i,indf2
 13036  0128D0  EE20 F082          	lfsr	2,130
 13037  0128D4  516A               	movf	cli_read@a_ctx& (0+255),w,b
 13038  0128D6  26D9               	addwf	fsr2l,f,c
 13039  0128D8  516B               	movf	(cli_read@a_ctx+1)& (0+255),w,b
 13040  0128DA  22DA               	addwfc	fsr2h,f,c
 13041  0128DC  2ADF               	incf	indf2,f,c
 13042                           
 13043                           ; BSR set to: 0
 13044                           ;scdm.c: 110:    linux_putc(&i, 1);
 13045  0128DE  0E71               	movlw	low cli_read@i
 13046  0128E0  6E2F               	movwf	linux_putc@data^0,c
 13047  0128E2  6A30               	clrf	(linux_putc@data+1)^0,c
 13048  0128E4  0E01               	movlw	1
 13049  0128E6  6E31               	movwf	linux_putc@a_len^0,c
 13050  0128E8  EC98  F0A3         	call	_linux_putc	;wreg free
 13051  0128EC  0012               	return	
 13052  0128EE                     l11223:
 13053  0128EE  0100               	movlb	0	; () banked
 13054  0128F0  5171               	movf	cli_read@i& (0+255),w,b
 13055  0128F2  6F6C               	movwf	??_cli_read& (0+255),b
 13056  0128F4  6B6D               	clrf	(??_cli_read+1)& (0+255),b
 13057                           
 13058                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13059                           ; Switch size 1, requested type "simple"
 13060                           ; Number of cases is 1, Range of values is 0 to 0
 13061                           ; switch strategies available:
 13062                           ; Name         Instructions Cycles
 13063                           ; simple_byte            4     3 (average)
 13064                           ;	Chosen strategy is simple_byte
 13065  0128F6  516D               	movf	(??_cli_read+1)& (0+255),w,b
 13066  0128F8  0A00               	xorlw	0	; case 0
 13067  0128FA  A4D8               	btfss	status,2,c
 13068  0128FC  D7C9               	goto	l11215
 13069                           
 13070                           ; BSR set to: 0
 13071                           ; Switch size 1, requested type "simple"
 13072                           ; Number of cases is 4, Range of values is 13 to 127
 13073                           ; switch strategies available:
 13074                           ; Name         Instructions Cycles
 13075                           ; simple_byte           13     7 (average)
 13076                           ;	Chosen strategy is simple_byte
 13077  0128FE  516C               	movf	??_cli_read& (0+255),w,b
 13078  012900  0A0D               	xorlw	13	; case 13
 13079  012902  B4D8               	btfsc	status,2,c
 13080  012904  D76B               	goto	l11201
 13081  012906  0A16               	xorlw	22	; case 27
 13082  012908  B4D8               	btfsc	status,2,c
 13083  01290A  0012               	return	
 13084  01290C  0A65               	xorlw	101	; case 126
 13085  01290E  B4D8               	btfsc	status,2,c
 13086  012910  0012               	return	
 13087  012912  0A01               	xorlw	1	; case 127
 13088  012914  B4D8               	btfsc	status,2,c
 13089  012916  0012               	return		;funcret
 13090  012918  D7BB               	goto	l11215
 13091  01291A                     __end_of_cli_read:
 13092                           	callstack 0
 13093                           
 13094 ;; *************** function _memset *****************
 13095 ;; Defined at:
 13096 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/memset.c"
 13097 ;; Parameters:    Size  Location     Type
 13098 ;;  dest            2   23[COMRAM] PTR void 
 13099 ;;		 -> ring_buf1(67), cli_ctx(131), 
 13100 ;;  c               2   25[COMRAM] int 
 13101 ;;  n               2   27[COMRAM] unsigned int 
 13102 ;; Auto vars:     Size  Location     Type
 13103 ;;  s               2   33[COMRAM] PTR unsigned char 
 13104 ;;		 -> ring_buf1(67), cli_ctx(131), 
 13105 ;;  k               2   31[COMRAM] unsigned int 
 13106 ;; Return value:  Size  Location     Type
 13107 ;;                  2   23[COMRAM] PTR void 
 13108 ;; Registers used:
 13109 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13110 ;; Tracked objects:
 13111 ;;		On entry : 4/3B
 13112 ;;		On exit  : 4/0
 13113 ;;		Unchanged: 4/0
 13114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13115 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13116 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13117 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13118 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13119 ;;Total ram usage:       12 bytes
 13120 ;; Hardware stack levels used: 1
 13121 ;; Hardware stack levels required when called: 7
 13122 ;; This function calls:
 13123 ;;		Nothing
 13124 ;; This function is called by:
 13125 ;;		_cli_init
 13126 ;;		_cli_read
 13127 ;;		_ringBufS_init
 13128 ;;		_ringBufS_flush
 13129 ;; This function uses a non-reentrant model
 13130 ;;
 13131                           
 13132                           	psect	text52
 13133  012A6A                     __ptext52:
 13134                           	callstack 0
 13135  012A6A                     _memset:
 13136                           	callstack 21
 13137                           
 13138                           ;incstack = 0
 13139  012A6A  C018  F022         	movff	memset@dest,memset@s
 13140  012A6E  C019  F023         	movff	memset@dest+1,memset@s+1
 13141  012A72  501C               	movf	memset@n^0,w,c
 13142  012A74  101D               	iorwf	(memset@n+1)^0,w,c
 13143  012A76  B4D8               	btfsc	status,2,c
 13144  012A78  0012               	return	
 13145  012A7A  0060  F08B  FFD9   	movff	memset@s,fsr2l
 13146  012A80  0060  F08F  FFDA   	movff	memset@s+1,fsr2h
 13147  012A86  0060  F06B  FFDF   	movff	memset@c,indf2
 13148  012A8C  501C               	movf	memset@n^0,w,c
 13149  012A8E  2422               	addwf	memset@s^0,w,c
 13150  012A90  6E1E               	movwf	??_memset^0,c
 13151  012A92  501D               	movf	(memset@n+1)^0,w,c
 13152  012A94  2023               	addwfc	(memset@s+1)^0,w,c
 13153  012A96  6E1F               	movwf	(??_memset+1)^0,c
 13154  012A98  0EFF               	movlw	255
 13155  012A9A  241E               	addwf	??_memset^0,w,c
 13156  012A9C  6ED9               	movwf	fsr2l,c
 13157  012A9E  0EFF               	movlw	255
 13158  012AA0  201F               	addwfc	(??_memset+1)^0,w,c
 13159  012AA2  6EDA               	movwf	fsr2h,c
 13160  012AA4  0060  F06B  FFDF   	movff	memset@c,indf2
 13161  012AAA  501D               	movf	(memset@n+1)^0,w,c
 13162  012AAC  E104               	bnz	l7863
 13163  012AAE  0E03               	movlw	3
 13164  012AB0  5C1C               	subwf	memset@n^0,w,c
 13165  012AB2  A0D8               	btfss	status,0,c
 13166  012AB4  0012               	return	
 13167  012AB6                     l7863:
 13168  012AB6  EE20 F001          	lfsr	2,1
 13169  012ABA  5022               	movf	memset@s^0,w,c
 13170  012ABC  26D9               	addwf	fsr2l,f,c
 13171  012ABE  5023               	movf	(memset@s+1)^0,w,c
 13172  012AC0  22DA               	addwfc	fsr2h,f,c
 13173  012AC2  0060  F06B  FFDF   	movff	memset@c,indf2
 13174  012AC8  EE20 F002          	lfsr	2,2
 13175  012ACC  5022               	movf	memset@s^0,w,c
 13176  012ACE  26D9               	addwf	fsr2l,f,c
 13177  012AD0  5023               	movf	(memset@s+1)^0,w,c
 13178  012AD2  22DA               	addwfc	fsr2h,f,c
 13179  012AD4  0060  F06B  FFDF   	movff	memset@c,indf2
 13180  012ADA  501C               	movf	memset@n^0,w,c
 13181  012ADC  2422               	addwf	memset@s^0,w,c
 13182  012ADE  6E1E               	movwf	??_memset^0,c
 13183  012AE0  501D               	movf	(memset@n+1)^0,w,c
 13184  012AE2  2023               	addwfc	(memset@s+1)^0,w,c
 13185  012AE4  6E1F               	movwf	(??_memset+1)^0,c
 13186  012AE6  0EFE               	movlw	254
 13187  012AE8  241E               	addwf	??_memset^0,w,c
 13188  012AEA  6ED9               	movwf	fsr2l,c
 13189  012AEC  0EFF               	movlw	255
 13190  012AEE  201F               	addwfc	(??_memset+1)^0,w,c
 13191  012AF0  6EDA               	movwf	fsr2h,c
 13192  012AF2  0060  F06B  FFDF   	movff	memset@c,indf2
 13193  012AF8  501C               	movf	memset@n^0,w,c
 13194  012AFA  2422               	addwf	memset@s^0,w,c
 13195  012AFC  6E1E               	movwf	??_memset^0,c
 13196  012AFE  501D               	movf	(memset@n+1)^0,w,c
 13197  012B00  2023               	addwfc	(memset@s+1)^0,w,c
 13198  012B02  6E1F               	movwf	(??_memset+1)^0,c
 13199  012B04  0EFD               	movlw	253
 13200  012B06  241E               	addwf	??_memset^0,w,c
 13201  012B08  6ED9               	movwf	fsr2l,c
 13202  012B0A  0EFF               	movlw	255
 13203  012B0C  201F               	addwfc	(??_memset+1)^0,w,c
 13204  012B0E  6EDA               	movwf	fsr2h,c
 13205  012B10  0060  F06B  FFDF   	movff	memset@c,indf2
 13206  012B16  501D               	movf	(memset@n+1)^0,w,c
 13207  012B18  E104               	bnz	l7869
 13208  012B1A  0E07               	movlw	7
 13209  012B1C  5C1C               	subwf	memset@n^0,w,c
 13210  012B1E  A0D8               	btfss	status,0,c
 13211  012B20  0012               	return	
 13212  012B22                     l7869:
 13213  012B22  EE20 F003          	lfsr	2,3
 13214  012B26  5022               	movf	memset@s^0,w,c
 13215  012B28  26D9               	addwf	fsr2l,f,c
 13216  012B2A  5023               	movf	(memset@s+1)^0,w,c
 13217  012B2C  22DA               	addwfc	fsr2h,f,c
 13218  012B2E  0060  F06B  FFDF   	movff	memset@c,indf2
 13219  012B34  501C               	movf	memset@n^0,w,c
 13220  012B36  2422               	addwf	memset@s^0,w,c
 13221  012B38  6E1E               	movwf	??_memset^0,c
 13222  012B3A  501D               	movf	(memset@n+1)^0,w,c
 13223  012B3C  2023               	addwfc	(memset@s+1)^0,w,c
 13224  012B3E  6E1F               	movwf	(??_memset+1)^0,c
 13225  012B40  0EFC               	movlw	252
 13226  012B42  241E               	addwf	??_memset^0,w,c
 13227  012B44  6ED9               	movwf	fsr2l,c
 13228  012B46  0EFF               	movlw	255
 13229  012B48  201F               	addwfc	(??_memset+1)^0,w,c
 13230  012B4A  6EDA               	movwf	fsr2h,c
 13231  012B4C  0060  F06B  FFDF   	movff	memset@c,indf2
 13232  012B52  501D               	movf	(memset@n+1)^0,w,c
 13233  012B54  E104               	bnz	l7875
 13234  012B56  0E09               	movlw	9
 13235  012B58  5C1C               	subwf	memset@n^0,w,c
 13236  012B5A  A0D8               	btfss	status,0,c
 13237  012B5C  0012               	return	
 13238  012B5E                     l7875:
 13239  012B5E  C022  F01E         	movff	memset@s,??_memset
 13240  012B62  C023  F01F         	movff	memset@s+1,??_memset+1
 13241  012B66  1E1E               	comf	??_memset^0,f,c
 13242  012B68  1E1F               	comf	(??_memset+1)^0,f,c
 13243  012B6A  4A1E               	infsnz	??_memset^0,f,c
 13244  012B6C  2A1F               	incf	(??_memset+1)^0,f,c
 13245  012B6E  0E03               	movlw	3
 13246  012B70  141E               	andwf	??_memset^0,w,c
 13247  012B72  6E20               	movwf	memset@k^0,c
 13248  012B74  6A21               	clrf	(memset@k+1)^0,c
 13249  012B76  5020               	movf	memset@k^0,w,c
 13250  012B78  2622               	addwf	memset@s^0,f,c
 13251  012B7A  5021               	movf	(memset@k+1)^0,w,c
 13252  012B7C  2223               	addwfc	(memset@s+1)^0,f,c
 13253  012B7E  5020               	movf	memset@k^0,w,c
 13254  012B80  5E1C               	subwf	memset@n^0,f,c
 13255  012B82  5021               	movf	(memset@k+1)^0,w,c
 13256  012B84  5A1D               	subwfb	(memset@n+1)^0,f,c
 13257  012B86  0EFC               	movlw	252
 13258  012B88  161C               	andwf	memset@n^0,f,c
 13259  012B8A  0EFF               	movlw	255
 13260  012B8C  161D               	andwf	(memset@n+1)^0,f,c
 13261  012B8E  D00E               	goto	l7883
 13262  012B90                     l7877:
 13263  012B90  0060  F08B  FFD9   	movff	memset@s,fsr2l
 13264  012B96  0060  F08F  FFDA   	movff	memset@s+1,fsr2h
 13265  012B9C  0060  F06B  FFDF   	movff	memset@c,indf2
 13266  012BA2  061C               	decf	memset@n^0,f,c
 13267  012BA4  A0D8               	btfss	status,0,c
 13268  012BA6  061D               	decf	(memset@n+1)^0,f,c
 13269  012BA8  4A22               	infsnz	memset@s^0,f,c
 13270  012BAA  2A23               	incf	(memset@s+1)^0,f,c
 13271  012BAC                     l7883:
 13272  012BAC  501C               	movf	memset@n^0,w,c
 13273  012BAE  101D               	iorwf	(memset@n+1)^0,w,c
 13274  012BB0  B4D8               	btfsc	status,2,c
 13275  012BB2  0012               	return	
 13276  012BB4  D7ED               	goto	l7877
 13277  012BB6                     __end_of_memset:
 13278                           	callstack 0
 13279                           
 13280 ;; *************** function _linux_putc *****************
 13281 ;; Defined at:
 13282 ;;		line 48 in file "scdm.c"
 13283 ;; Parameters:    Size  Location     Type
 13284 ;;  data            2   46[COMRAM] PTR unsigned char 
 13285 ;;		 -> STR_16(3), cli_read@i(1), 
 13286 ;;  a_len           1   48[COMRAM] unsigned char 
 13287 ;; Auto vars:     Size  Location     Type
 13288 ;;		None
 13289 ;; Return value:  Size  Location     Type
 13290 ;;                  1    wreg      unsigned char 
 13291 ;; Registers used:
 13292 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13293 ;; Tracked objects:
 13294 ;;		On entry : 3F/0
 13295 ;;		On exit  : 0/0
 13296 ;;		Unchanged: 0/0
 13297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13298 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13301 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13302 ;;Total ram usage:        3 bytes
 13303 ;; Hardware stack levels used: 1
 13304 ;; Hardware stack levels required when called: 12
 13305 ;; This function calls:
 13306 ;;		_puts
 13307 ;; This function is called by:
 13308 ;;		_cli_read
 13309 ;; This function uses a non-reentrant model
 13310 ;;
 13311                           
 13312                           	psect	text53
 13313  014730                     __ptext53:
 13314                           	callstack 0
 13315  014730                     _linux_putc:
 13316                           	callstack 17
 13317                           
 13318                           ; BSR set to: 0
 13319                           ;scdm.c: 48: uint8_t linux_putc(uint8_t *data, uint8_t a_len);scdm.c: 49: {;scdm.c: 50: 
      +                           puts((const char *) data);
 13320                           
 13321                           ;incstack = 0
 13322  014730  C02F  F02C         	movff	linux_putc@data,puts@s
 13323  014734  C030  F02D         	movff	linux_putc@data+1,puts@s+1
 13324  014738  EC35  F0A1         	call	_puts	;wreg free
 13325  01473C  0012               	return		;funcret
 13326  01473E                     __end_of_linux_putc:
 13327                           	callstack 0
 13328                           
 13329 ;; *************** function _linux_getc *****************
 13330 ;; Defined at:
 13331 ;;		line 38 in file "scdm.c"
 13332 ;; Parameters:    Size  Location     Type
 13333 ;;  a_data          1   24[COMRAM] PTR unsigned char 
 13334 ;;		 -> cli_read@i(1), 
 13335 ;; Auto vars:     Size  Location     Type
 13336 ;;		None
 13337 ;; Return value:  Size  Location     Type
 13338 ;;                  1    wreg      unsigned char 
 13339 ;; Registers used:
 13340 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13341 ;; Tracked objects:
 13342 ;;		On entry : 3F/0
 13343 ;;		On exit  : 6/0
 13344 ;;		Unchanged: 0/0
 13345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13346 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13348 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13349 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13350 ;;Total ram usage:        2 bytes
 13351 ;; Hardware stack levels used: 1
 13352 ;; Hardware stack levels required when called: 8
 13353 ;; This function calls:
 13354 ;;		_UART1_Read
 13355 ;;		_UART1_is_rx_ready
 13356 ;; This function is called by:
 13357 ;;		_cli_read
 13358 ;; This function uses a non-reentrant model
 13359 ;;
 13360                           
 13361                           	psect	text54
 13362  0144E8                     __ptext54:
 13363                           	callstack 0
 13364  0144E8                     _linux_getc:
 13365                           	callstack 21
 13366                           
 13367                           ; BSR set to: 0
 13368                           ;scdm.c: 38: uint8_t linux_getc(uint8_t *a_data);scdm.c: 39: {;scdm.c: 40:  if (UART1_is
      +                          _rx_ready()) {
 13369                           
 13370                           ;incstack = 0
 13371  0144E8  EC9F  F0A3         	call	_UART1_is_rx_ready	;wreg free
 13372  0144EC  0900               	iorlw	0
 13373  0144EE  B4D8               	btfsc	status,2,c
 13374  0144F0  D00B               	goto	l9187
 13375                           
 13376                           ; BSR set to: 0
 13377                           ;scdm.c: 41:   a_data[0] = UART1_Read();
 13378  0144F2  EC28  F0A0         	call	_UART1_Read	;wreg free
 13379  0144F6  6E1A               	movwf	??_linux_getc^0,c
 13380  0144F8  5019               	movf	linux_getc@a_data^0,w,c
 13381  0144FA  6ED9               	movwf	fsr2l,c
 13382  0144FC  6ADA               	clrf	fsr2h,c
 13383  0144FE  0060  F06B  FFDF   	movff	??_linux_getc,indf2
 13384                           
 13385                           ; BSR set to: 57
 13386                           ;scdm.c: 42:   return 1;
 13387  014504  0E01               	movlw	1
 13388  014506  0012               	return	
 13389  014508                     l9187:
 13390                           
 13391                           ; BSR set to: 0
 13392                           ;scdm.c: 44:   return 0;
 13393  014508  0E00               	movlw	0
 13394  01450A  0012               	return		;funcret
 13395  01450C                     __end_of_linux_getc:
 13396                           	callstack 0
 13397                           
 13398 ;; *************** function _UART1_is_rx_ready *****************
 13399 ;; Defined at:
 13400 ;;		line 161 in file "mcc_generated_files/uart1.c"
 13401 ;; Parameters:    Size  Location     Type
 13402 ;;		None
 13403 ;; Auto vars:     Size  Location     Type
 13404 ;;		None
 13405 ;; Return value:  Size  Location     Type
 13406 ;;                  1    wreg      _Bool 
 13407 ;; Registers used:
 13408 ;;		wreg, status,2
 13409 ;; Tracked objects:
 13410 ;;		On entry : 3F/0
 13411 ;;		On exit  : 3F/0
 13412 ;;		Unchanged: 3F/0
 13413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13418 ;;Total ram usage:        0 bytes
 13419 ;; Hardware stack levels used: 1
 13420 ;; Hardware stack levels required when called: 7
 13421 ;; This function calls:
 13422 ;;		Nothing
 13423 ;; This function is called by:
 13424 ;;		_linux_getc
 13425 ;; This function uses a non-reentrant model
 13426 ;;
 13427                           
 13428                           	psect	text55
 13429  01473E                     __ptext55:
 13430                           	callstack 0
 13431  01473E                     _UART1_is_rx_ready:
 13432                           	callstack 21
 13433                           
 13434                           ; BSR set to: 0
 13435                           ;mcc_generated_files/uart1.c: 163:     return (uart1RxCount ? 1 : 0);
 13436                           
 13437                           ;incstack = 0
 13438  01473E  5043               	movf	_uart1RxCount^0,w,c	;volatile
 13439  014740  B4D8               	btfsc	status,2,c
 13440  014742  D002               	goto	u9190
 13441  014744  0E01               	movlw	1
 13442  014746  0012               	return	
 13443  014748                     u9190:
 13444  014748  0E00               	movlw	0
 13445                           
 13446                           ; BSR set to: 0
 13447  01474A  0012               	return		;funcret
 13448  01474C                     __end_of_UART1_is_rx_ready:
 13449                           	callstack 0
 13450                           
 13451 ;; *************** function _UART1_Read *****************
 13452 ;; Defined at:
 13453 ;;		line 180 in file "mcc_generated_files/uart1.c"
 13454 ;; Parameters:    Size  Location     Type
 13455 ;;		None
 13456 ;; Auto vars:     Size  Location     Type
 13457 ;;  readValue       1   23[COMRAM] unsigned char 
 13458 ;; Return value:  Size  Location     Type
 13459 ;;                  1    wreg      unsigned char 
 13460 ;; Registers used:
 13461 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13462 ;; Tracked objects:
 13463 ;;		On entry : 3F/0
 13464 ;;		On exit  : 3F/39
 13465 ;;		Unchanged: 0/0
 13466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13468 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13470 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13471 ;;Total ram usage:        1 bytes
 13472 ;; Hardware stack levels used: 1
 13473 ;; Hardware stack levels required when called: 7
 13474 ;; This function calls:
 13475 ;;		Nothing
 13476 ;; This function is called by:
 13477 ;;		_linux_getc
 13478 ;; This function uses a non-reentrant model
 13479 ;;
 13480                           
 13481                           	psect	text56
 13482  014050                     __ptext56:
 13483                           	callstack 0
 13484  014050                     _UART1_Read:
 13485                           	callstack 21
 13486                           
 13487                           ; BSR set to: 0
 13488                           ;mcc_generated_files/uart1.c: 184:     while(0 == uart1RxCount)
 13489                           
 13490                           ; BSR set to: 0
 13491                           ;mcc_generated_files/uart1.c: 184:     while(0 == uart1RxCount)
 13492                           
 13493                           ; BSR set to: 0
 13494                           ;incstack = 0
 13495  014050  5043               	movf	_uart1RxCount^0,w,c	;volatile
 13496  014052  B4D8               	btfsc	status,2,c
 13497  014054  D7FD               	goto	__ptext56
 13498                           
 13499                           ; BSR set to: 0
 13500                           ;mcc_generated_files/uart1.c: 188:     uart1RxLastError = uart1RxStatusBuffer[uart1RxTai
      +                          l];
 13501  014056  0E18               	movlw	low _uart1RxStatusBuffer
 13502  014058  2444               	addwf	_uart1RxTail^0,w,c	;volatile
 13503  01405A  6ED9               	movwf	fsr2l,c
 13504  01405C  6ADA               	clrf	fsr2h,c
 13505  01405E  0E01               	movlw	high _uart1RxStatusBuffer
 13506  014060  22DA               	addwfc	fsr2h,f,c
 13507  014062  50DF               	movf	indf2,w,c
 13508  014064  6E42               	movwf	_uart1RxLastError^0,c	;volatile
 13509                           
 13510                           ;mcc_generated_files/uart1.c: 190:     readValue = uart1RxBuffer[uart1RxTail++];
 13511  014066  0E20               	movlw	low _uart1RxBuffer
 13512  014068  2444               	addwf	_uart1RxTail^0,w,c	;volatile
 13513  01406A  6ED9               	movwf	fsr2l,c
 13514  01406C  6ADA               	clrf	fsr2h,c
 13515  01406E  0E01               	movlw	high _uart1RxBuffer
 13516  014070  22DA               	addwfc	fsr2h,f,c
 13517  014072  50DF               	movf	indf2,w,c
 13518  014074  6E18               	movwf	UART1_Read@readValue^0,c
 13519                           
 13520                           ; BSR set to: 0
 13521  014076  2A44               	incf	_uart1RxTail^0,f,c	;volatile
 13522                           
 13523                           ; BSR set to: 0
 13524                           ;mcc_generated_files/uart1.c: 191:     if(sizeof(uart1RxBuffer) <= uart1RxTail)
 13525  014078  0E07               	movlw	7
 13526  01407A  6444               	cpfsgt	_uart1RxTail^0,c
 13527  01407C  D002               	goto	l8949
 13528                           
 13529                           ; BSR set to: 0
 13530                           ;mcc_generated_files/uart1.c: 192:     {;mcc_generated_files/uart1.c: 193:         uart1
      +                          RxTail = 0;
 13531  01407E  0E00               	movlw	0
 13532  014080  6E44               	movwf	_uart1RxTail^0,c	;volatile
 13533  014082                     l8949:
 13534                           
 13535                           ; BSR set to: 0
 13536                           ;mcc_generated_files/uart1.c: 195:     PIE3bits.U1RXIE = 0;
 13537  014082  0139               	movlb	57	; () banked
 13538  014084  9793               	bcf	147,3,b	;volatile
 13539                           
 13540                           ; BSR set to: 57
 13541                           ;mcc_generated_files/uart1.c: 196:     uart1RxCount--;
 13542  014086  0643               	decf	_uart1RxCount^0,f,c	;volatile
 13543                           
 13544                           ; BSR set to: 57
 13545                           ;mcc_generated_files/uart1.c: 197:     PIE3bits.U1RXIE = 1;
 13546  014088  8793               	bsf	147,3,b	;volatile
 13547                           
 13548                           ; BSR set to: 57
 13549                           ;mcc_generated_files/uart1.c: 199:     return readValue;
 13550  01408A  5018               	movf	UART1_Read@readValue^0,w,c
 13551                           
 13552                           ; BSR set to: 57
 13553  01408C  0012               	return		;funcret
 13554  01408E                     __end_of_UART1_Read:
 13555                           	callstack 0
 13556                           
 13557 ;; *************** function __cli_interpret_cmd *****************
 13558 ;; Defined at:
 13559 ;;		line 54 in file "scdm.c"
 13560 ;; Parameters:    Size  Location     Type
 13561 ;;  a_ctx           2   48[COMRAM] PTR struct _t_cli_ctx
 13562 ;;		 -> cli_ctx(131), 
 13563 ;; Auto vars:     Size  Location     Type
 13564 ;;  i               1    9[BANK0 ] unsigned char 
 13565 ;;  ret             1    8[BANK0 ] unsigned char 
 13566 ;; Return value:  Size  Location     Type
 13567 ;;                  1    wreg      unsigned char 
 13568 ;; Registers used:
 13569 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 13570 ;; Tracked objects:
 13571 ;;		On entry : 0/0
 13572 ;;		On exit  : 0/0
 13573 ;;		Unchanged: 0/0
 13574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13575 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13576 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13577 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13578 ;;      Totals:         2      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13579 ;;Total ram usage:       12 bytes
 13580 ;; Hardware stack levels used: 1
 13581 ;; Hardware stack levels required when called: 13
 13582 ;; This function calls:
 13583 ;;		Absolute function
 13584 ;;		_fh_pd
 13585 ;;		_fh_pl
 13586 ;;		_fh_po
 13587 ;;		_fh_pr
 13588 ;;		_fh_ps
 13589 ;;		_fh_pu
 13590 ;;		_strlen
 13591 ;;		_strncmp
 13592 ;; This function is called by:
 13593 ;;		_cli_read
 13594 ;; This function uses a non-reentrant model
 13595 ;;
 13596                           
 13597                           	psect	text57
 13598  01214C                     __ptext57:
 13599                           	callstack 0
 13600  01214C                     __cli_interpret_cmd:
 13601                           	callstack 16
 13602                           
 13603                           ;scdm.c: 54: static uint8_t _cli_interpret_cmd(t_cli_ctx *a_ctx);scdm.c: 55: {;scdm.c: 5
      +                          6:  uint8_t i = 0;
 13604                           
 13605                           ; BSR set to: 57
 13606                           ;incstack = 0
 13607  01214C  0E00               	movlw	0
 13608  01214E  0100               	movlb	0	; () banked
 13609  012150  6F69               	movwf	__cli_interpret_cmd@i& (0+255),b
 13610                           
 13611                           ;scdm.c: 57:  uint8_t ret = E_CMD_OK;
 13612  012152  0E00               	movlw	0
 13613  012154  6F68               	movwf	__cli_interpret_cmd@ret& (0+255),b
 13614                           
 13615                           ; BSR set to: 0
 13616                           ;scdm.c: 59:  if (!strlen(a_ctx->cmd)) {
 13617  012156  0E02               	movlw	2
 13618  012158  2431               	addwf	__cli_interpret_cmd@a_ctx^0,w,c
 13619  01215A  6E18               	movwf	strlen@s^0,c
 13620  01215C  0E00               	movlw	0
 13621  01215E  2032               	addwfc	(__cli_interpret_cmd@a_ctx+1)^0,w,c
 13622  012160  6E19               	movwf	(strlen@s+1)^0,c
 13623  012162  ECEF  F09E         	call	_strlen	;wreg free
 13624  012166  5018               	movf	?_strlen^0,w,c
 13625  012168  1019               	iorwf	(?_strlen+1)^0,w,c
 13626  01216A  A4D8               	btfss	status,2,c
 13627  01216C  D002               	goto	l11123
 13628                           
 13629                           ;scdm.c: 60:   return E_CMD_EMPTY;
 13630  01216E  0E03               	movlw	3
 13631  012170  0012               	return	
 13632  012172                     l11123:
 13633                           
 13634                           ;scdm.c: 63:  if (strlen(a_ctx->cmd) < 2) {
 13635  012172  0E02               	movlw	2
 13636  012174  2431               	addwf	__cli_interpret_cmd@a_ctx^0,w,c
 13637  012176  6E18               	movwf	strlen@s^0,c
 13638  012178  0E00               	movlw	0
 13639  01217A  2032               	addwfc	(__cli_interpret_cmd@a_ctx+1)^0,w,c
 13640  01217C  6E19               	movwf	(strlen@s+1)^0,c
 13641  01217E  ECEF  F09E         	call	_strlen	;wreg free
 13642  012182  5019               	movf	(?_strlen+1)^0,w,c
 13643  012184  E103               	bnz	u12241
 13644  012186  0E02               	movlw	2
 13645  012188  5C18               	subwf	?_strlen^0,w,c
 13646  01218A  B0D8               	btfsc	status,0,c
 13647  01218C                     u12241:
 13648  01218C  D07F               	goto	l11135
 13649                           
 13650                           ;scdm.c: 64:   return E_CMD_TOO_SHORT;
 13651  01218E  0E02               	movlw	2
 13652  012190  0012               	return	
 13653  012192                     l11129:
 13654                           
 13655                           ; BSR set to: 0
 13656                           ;scdm.c: 68:   if (!strncmp(a_ctx->cmds[i].cmd, a_ctx->cmd, strlen(a_ctx->cmds[i].cmd)))
      +                           {
 13657  012192  5169               	movf	__cli_interpret_cmd@i& (0+255),w,b
 13658  012194  0D05               	mullw	5
 13659  012196  006F FFCC  F060    	movff	prodl,??__cli_interpret_cmd
 13660  01219C  006F FFD0  F061    	movff	prodh,??__cli_interpret_cmd+1
 13661  0121A2  0060  F0C7  FFD9   	movff	__cli_interpret_cmd@a_ctx,fsr2l
 13662  0121A8  0060  F0CB  FFDA   	movff	__cli_interpret_cmd@a_ctx+1,fsr2h
 13663  0121AE  006F FF78  F062    	movff	postinc2,??__cli_interpret_cmd+2
 13664  0121B4  006F FF74  F063    	movff	postdec2,??__cli_interpret_cmd+3
 13665  0121BA  5160               	movf	??__cli_interpret_cmd& (0+255),w,b
 13666  0121BC  2562               	addwf	(??__cli_interpret_cmd+2)& (0+255),w,b
 13667  0121BE  6ED9               	movwf	fsr2l,c
 13668  0121C0  5161               	movf	(??__cli_interpret_cmd+1)& (0+255),w,b
 13669  0121C2  2163               	addwfc	(??__cli_interpret_cmd+3)& (0+255),w,b
 13670  0121C4  6EDA               	movwf	fsr2h,c
 13671  0121C6  006F FF78  F01C    	movff	postinc2,strncmp@_l
 13672  0121CC  006F FF74  F01D    	movff	postdec2,strncmp@_l+1
 13673  0121D2  0E02               	movlw	2
 13674  0121D4  2431               	addwf	__cli_interpret_cmd@a_ctx^0,w,c
 13675  0121D6  6E1E               	movwf	strncmp@_r^0,c
 13676  0121D8  0E00               	movlw	0
 13677  0121DA  2032               	addwfc	(__cli_interpret_cmd@a_ctx+1)^0,w,c
 13678  0121DC  6E1F               	movwf	(strncmp@_r+1)^0,c
 13679  0121DE  5169               	movf	__cli_interpret_cmd@i& (0+255),w,b
 13680  0121E0  0D05               	mullw	5
 13681  0121E2  006F FFCC  F064    	movff	prodl,??__cli_interpret_cmd+4
 13682  0121E8  006F FFD0  F065    	movff	prodh,??__cli_interpret_cmd+5
 13683  0121EE  0060  F0C7  FFD9   	movff	__cli_interpret_cmd@a_ctx,fsr2l
 13684  0121F4  0060  F0CB  FFDA   	movff	__cli_interpret_cmd@a_ctx+1,fsr2h
 13685  0121FA  006F FF78  F066    	movff	postinc2,??__cli_interpret_cmd+6
 13686  012200  006F FF74  F067    	movff	postdec2,??__cli_interpret_cmd+7
 13687  012206  5164               	movf	(??__cli_interpret_cmd+4)& (0+255),w,b
 13688  012208  2566               	addwf	(??__cli_interpret_cmd+6)& (0+255),w,b
 13689  01220A  6ED9               	movwf	fsr2l,c
 13690  01220C  5165               	movf	(??__cli_interpret_cmd+5)& (0+255),w,b
 13691  01220E  2167               	addwfc	(??__cli_interpret_cmd+7)& (0+255),w,b
 13692  012210  6EDA               	movwf	fsr2h,c
 13693  012212  006F FF78  F018    	movff	postinc2,strlen@s
 13694  012218  006F FF74  F019    	movff	postdec2,strlen@s+1
 13695  01221E  ECEF  F09E         	call	_strlen	;wreg free
 13696  012222  C018  F020         	movff	?_strlen,strncmp@n
 13697  012226  C019  F021         	movff	?_strlen+1,strncmp@n+1
 13698  01222A  EC33  F093         	call	_strncmp	;wreg free
 13699  01222E  501C               	movf	?_strncmp^0,w,c
 13700  012230  101D               	iorwf	(?_strncmp+1)^0,w,c
 13701  012232  A4D8               	btfss	status,2,c
 13702  012234  D029               	goto	l11133
 13703                           
 13704                           ;scdm.c: 70:    a_ctx->cmds[i].fh((void *) a_ctx);
 13705  012236  C031  F02F         	movff	__cli_interpret_cmd@a_ctx,fh_pl@a_data
 13706  01223A  C032  F030         	movff	__cli_interpret_cmd@a_ctx+1,fh_pl@a_data+1
 13707  01223E  0100               	movlb	0	; () banked
 13708  012240  5169               	movf	__cli_interpret_cmd@i& (0+255),w,b
 13709  012242  0D05               	mullw	5
 13710  012244  0060  F0C7  FFD9   	movff	__cli_interpret_cmd@a_ctx,fsr2l
 13711  01224A  0060  F0CB  FFDA   	movff	__cli_interpret_cmd@a_ctx+1,fsr2h
 13712  012250  006F FF78  F060    	movff	postinc2,??__cli_interpret_cmd
 13713  012256  006F FF74  F061    	movff	postdec2,??__cli_interpret_cmd+1
 13714  01225C  50F3               	movf	243,w,c
 13715  01225E  2760               	addwf	??__cli_interpret_cmd& (0+255),f,b
 13716  012260  50F4               	movf	244,w,c
 13717  012262  2361               	addwfc	(??__cli_interpret_cmd+1)& (0+255),f,b
 13718  012264  0E02               	movlw	2
 13719  012266  2560               	addwf	??__cli_interpret_cmd& (0+255),w,b
 13720  012268  6ED9               	movwf	fsr2l,c
 13721  01226A  0E00               	movlw	0
 13722  01226C  2161               	addwfc	(??__cli_interpret_cmd+1)& (0+255),w,b
 13723  01226E  6EDA               	movwf	fsr2h,c
 13724  012270  D801               	call	u12268
 13725  012272  D02A               	goto	u12270
 13726  012274                     u12268:
 13727  012274  0005               	push	
 13728  012276  6EFA               	movwf	pclath,c
 13729  012278  50DE               	movf	postinc2,w,c
 13730  01227A  6EFD               	movwf	tosl,c
 13731  01227C  50DE               	movf	postinc2,w,c
 13732  01227E  6EFE               	movwf	tosh,c
 13733  012280  50DE               	movf	postinc2,w,c
 13734  012282  6EFF               	movwf	tosu,c
 13735  012284  50FA               	movf	pclath,w,c
 13736  012286  0012               	return		;indir
 13737  012288                     l11133:
 13738                           
 13739                           ;scdm.c: 73:   i++;
 13740  012288  0100               	movlb	0	; () banked
 13741  01228A  2B69               	incf	__cli_interpret_cmd@i& (0+255),f,b
 13742  01228C                     l11135:
 13743                           
 13744                           ;scdm.c: 67:  while (a_ctx->cmds[i].fh) {
 13745  01228C  0100               	movlb	0	; () banked
 13746  01228E  5169               	movf	__cli_interpret_cmd@i& (0+255),w,b
 13747  012290  0D05               	mullw	5
 13748  012292  0060  F0C7  FFD9   	movff	__cli_interpret_cmd@a_ctx,fsr2l
 13749  012298  0060  F0CB  FFDA   	movff	__cli_interpret_cmd@a_ctx+1,fsr2h
 13750  01229E  006F FF78  F060    	movff	postinc2,??__cli_interpret_cmd
 13751  0122A4  006F FF74  F061    	movff	postdec2,??__cli_interpret_cmd+1
 13752  0122AA  50F3               	movf	243,w,c
 13753  0122AC  2760               	addwf	??__cli_interpret_cmd& (0+255),f,b
 13754  0122AE  50F4               	movf	244,w,c
 13755  0122B0  2361               	addwfc	(??__cli_interpret_cmd+1)& (0+255),f,b
 13756  0122B2  0E02               	movlw	2
 13757  0122B4  2560               	addwf	??__cli_interpret_cmd& (0+255),w,b
 13758  0122B6  6ED9               	movwf	fsr2l,c
 13759  0122B8  0E00               	movlw	0
 13760  0122BA  2161               	addwfc	(??__cli_interpret_cmd+1)& (0+255),w,b
 13761  0122BC  6EDA               	movwf	fsr2h,c
 13762  0122BE  50DE               	movf	postinc2,w,c
 13763  0122C0  10DE               	iorwf	postinc2,w,c
 13764  0122C2  10DE               	iorwf	postinc2,w,c
 13765  0122C4  A4D8               	btfss	status,2,c
 13766  0122C6  D765               	goto	l11129
 13767  0122C8                     u12270:
 13768                           
 13769                           ;scdm.c: 76:  if (!a_ctx->cmds[i].fh) {
 13770  0122C8  0100               	movlb	0	; () banked
 13771  0122CA  5169               	movf	__cli_interpret_cmd@i& (0+255),w,b
 13772  0122CC  0D05               	mullw	5
 13773  0122CE  0060  F0C7  FFD9   	movff	__cli_interpret_cmd@a_ctx,fsr2l
 13774  0122D4  0060  F0CB  FFDA   	movff	__cli_interpret_cmd@a_ctx+1,fsr2h
 13775  0122DA  006F FF78  F060    	movff	postinc2,??__cli_interpret_cmd
 13776  0122E0  006F FF74  F061    	movff	postdec2,??__cli_interpret_cmd+1
 13777  0122E6  50F3               	movf	243,w,c
 13778  0122E8  2760               	addwf	??__cli_interpret_cmd& (0+255),f,b
 13779  0122EA  50F4               	movf	244,w,c
 13780  0122EC  2361               	addwfc	(??__cli_interpret_cmd+1)& (0+255),f,b
 13781  0122EE  0E02               	movlw	2
 13782  0122F0  2560               	addwf	??__cli_interpret_cmd& (0+255),w,b
 13783  0122F2  6ED9               	movwf	fsr2l,c
 13784  0122F4  0E00               	movlw	0
 13785  0122F6  2161               	addwfc	(??__cli_interpret_cmd+1)& (0+255),w,b
 13786  0122F8  6EDA               	movwf	fsr2h,c
 13787  0122FA  50DE               	movf	postinc2,w,c
 13788  0122FC  10DE               	iorwf	postinc2,w,c
 13789  0122FE  10DE               	iorwf	postinc2,w,c
 13790  012300  A4D8               	btfss	status,2,c
 13791  012302  D002               	goto	l1379
 13792                           
 13793                           ; BSR set to: 0
 13794                           ;scdm.c: 77:   ret = E_CMD_NOT_FOUND;
 13795  012304  0E01               	movlw	1
 13796  012306  6F68               	movwf	__cli_interpret_cmd@ret& (0+255),b
 13797  012308                     l1379:
 13798                           
 13799                           ; BSR set to: 0
 13800                           ;scdm.c: 80:  return ret;
 13801  012308  5168               	movf	__cli_interpret_cmd@ret& (0+255),w,b
 13802  01230A  0012               	return		;funcret
 13803  01230C                     __end_of__cli_interpret_cmd:
 13804                           	callstack 0
 13805                           
 13806 ;; *************** function _strncmp *****************
 13807 ;; Defined at:
 13808 ;;		line 3 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/strncmp.c"
 13809 ;; Parameters:    Size  Location     Type
 13810 ;;  _l              2   27[COMRAM] PTR const unsigned char 
 13811 ;;		 -> vfpfcnvrt@ct(3), NULL(0), STR_15(3), STR_14(3), 
 13812 ;;		 -> STR_13(3), STR_12(3), STR_11(3), STR_10(3), 
 13813 ;;		 -> STR_8(79), STR_7(17), 
 13814 ;;  _r              2   29[COMRAM] PTR const unsigned char 
 13815 ;;		 -> cli_ctx.cmd(128), STR_32(4), STR_27(3), cli_ctx(131), 
 13816 ;;  n               2   31[COMRAM] unsigned int 
 13817 ;; Auto vars:     Size  Location     Type
 13818 ;;  r               2   37[COMRAM] PTR const unsigned char 
 13819 ;;		 -> cli_ctx.cmd(128), STR_32(4), STR_27(3), cli_ctx(131), 
 13820 ;;  l               2   35[COMRAM] PTR const unsigned char 
 13821 ;;		 -> vfpfcnvrt@ct(3), NULL(0), STR_15(3), STR_14(3), 
 13822 ;;		 -> STR_13(3), STR_12(3), STR_11(3), STR_10(3), 
 13823 ;;		 -> STR_8(79), STR_7(17), 
 13824 ;; Return value:  Size  Location     Type
 13825 ;;                  2   27[COMRAM] int 
 13826 ;; Registers used:
 13827 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 13828 ;; Tracked objects:
 13829 ;;		On entry : 0/0
 13830 ;;		On exit  : 0/0
 13831 ;;		Unchanged: 0/0
 13832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13833 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13834 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13835 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13836 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13837 ;;Total ram usage:       12 bytes
 13838 ;; Hardware stack levels used: 1
 13839 ;; Hardware stack levels required when called: 7
 13840 ;; This function calls:
 13841 ;;		Nothing
 13842 ;; This function is called by:
 13843 ;;		__cli_interpret_cmd
 13844 ;;		_vfpfcnvrt
 13845 ;; This function uses a non-reentrant model
 13846 ;;
 13847                           
 13848                           	psect	text58
 13849  012666                     __ptext58:
 13850                           	callstack 0
 13851  012666                     _strncmp:
 13852                           	callstack 20
 13853                           
 13854                           ;incstack = 0
 13855  012666  C01C  F024         	movff	strncmp@_l,strncmp@l
 13856  01266A  C01D  F025         	movff	strncmp@_l+1,strncmp@l+1
 13857  01266E  C01E  F026         	movff	strncmp@_r,strncmp@r
 13858  012672  C01F  F027         	movff	strncmp@_r+1,strncmp@r+1
 13859  012676  0620               	decf	strncmp@n^0,f,c
 13860  012678  A0D8               	btfss	status,0,c
 13861  01267A  0621               	decf	(strncmp@n+1)^0,f,c
 13862  01267C  2820               	incf	strncmp@n^0,w,c
 13863  01267E  E10F               	bnz	l10497
 13864  012680  2821               	incf	(strncmp@n+1)^0,w,c
 13865  012682  A4D8               	btfss	status,2,c
 13866  012684  D00C               	goto	l10497
 13867  012686  0E00               	movlw	0
 13868  012688  6E1D               	movwf	(?_strncmp+1)^0,c
 13869  01268A  0E00               	movlw	0
 13870  01268C  6E1C               	movwf	?_strncmp^0,c
 13871  01268E  0012               	return	
 13872  012690                     l10495:
 13873  012690  4A24               	infsnz	strncmp@l^0,f,c
 13874  012692  2A25               	incf	(strncmp@l+1)^0,f,c
 13875  012694  4A26               	infsnz	strncmp@r^0,f,c
 13876  012696  2A27               	incf	(strncmp@r+1)^0,f,c
 13877  012698  0620               	decf	strncmp@n^0,f,c
 13878  01269A  A0D8               	btfss	status,0,c
 13879  01269C  0621               	decf	(strncmp@n+1)^0,f,c
 13880  01269E                     l10497:
 13881  01269E  0060  F093  FFF6   	movff	strncmp@l,tblptrl
 13882  0126A4  0060  F097  FFF7   	movff	strncmp@l+1,tblptrh
 13883  0126AA  0E00               	movlw	low (__mediumconst shr (0+16))
 13884  0126AC  6EF8               	movwf	tblptru,c
 13885  0126AE  0E1F               	movlw	(high __ramtop+-1)
 13886  0126B0  64F7               	cpfsgt	tblptrh,c
 13887  0126B2  D003               	bra	u11267
 13888  0126B4  0008               	tblrd		*
 13889  0126B6  50F5               	movf	tablat,w,c
 13890  0126B8  D007               	bra	u11260
 13891  0126BA                     u11267:
 13892  0126BA  006F FFDB FFE1     	movff	tblptrl,fsr1l
 13893  0126C0  006F FFDF FFE2     	movff	tblptrh,fsr1h
 13894  0126C6  50E7               	movf	indf1,w,c
 13895  0126C8                     u11260:
 13896  0126C8  0900               	iorlw	0
 13897  0126CA  B4D8               	btfsc	status,2,c
 13898  0126CC  D04A               	goto	u11320
 13899  0126CE  0060  F09B  FFF6   	movff	strncmp@r,tblptrl
 13900  0126D4  0060  F09F  FFF7   	movff	strncmp@r+1,tblptrh
 13901  0126DA  0E00               	movlw	low (__mediumconst shr (0+16))
 13902  0126DC  6EF8               	movwf	tblptru,c
 13903  0126DE  0E1F               	movlw	(high __ramtop+-1)
 13904  0126E0  64F7               	cpfsgt	tblptrh,c
 13905  0126E2  D003               	bra	u11287
 13906  0126E4  0008               	tblrd		*
 13907  0126E6  50F5               	movf	tablat,w,c
 13908  0126E8  D007               	bra	u11280
 13909  0126EA                     u11287:
 13910  0126EA  006F FFDB FFE1     	movff	tblptrl,fsr1l
 13911  0126F0  006F FFDF FFE2     	movff	tblptrh,fsr1h
 13912  0126F6  50E7               	movf	indf1,w,c
 13913  0126F8                     u11280:
 13914  0126F8  0900               	iorlw	0
 13915  0126FA  B4D8               	btfsc	status,2,c
 13916  0126FC  D032               	goto	u11320
 13917  0126FE  5020               	movf	strncmp@n^0,w,c
 13918  012700  1021               	iorwf	(strncmp@n+1)^0,w,c
 13919  012702  B4D8               	btfsc	status,2,c
 13920  012704  D02E               	goto	u11320
 13921  012706  0060  F09B  FFF6   	movff	strncmp@r,tblptrl
 13922  01270C  0060  F09F  FFF7   	movff	strncmp@r+1,tblptrh
 13923  012712  0E00               	movlw	low (__mediumconst shr (0+16))
 13924  012714  6EF8               	movwf	tblptru,c
 13925  012716  0E1F               	movlw	(high __ramtop+-1)
 13926  012718  64F7               	cpfsgt	tblptrh,c
 13927  01271A  D003               	bra	u11317
 13928  01271C  0008               	tblrd		*
 13929  01271E  50F5               	movf	tablat,w,c
 13930  012720  D007               	bra	u11310
 13931  012722                     u11317:
 13932  012722  006F FFDB FFE1     	movff	tblptrl,fsr1l
 13933  012728  006F FFDF FFE2     	movff	tblptrh,fsr1h
 13934  01272E  50E7               	movf	indf1,w,c
 13935  012730                     u11310:
 13936  012730  6E22               	movwf	??_strncmp^0,c
 13937  012732  0060  F093  FFF6   	movff	strncmp@l,tblptrl
 13938  012738  0060  F097  FFF7   	movff	strncmp@l+1,tblptrh
 13939  01273E  0E00               	movlw	low (__mediumconst shr (0+16))
 13940  012740  6EF8               	movwf	tblptru,c
 13941  012742  0E1F               	movlw	(high __ramtop+-1)
 13942  012744  64F7               	cpfsgt	tblptrh,c
 13943  012746  D003               	bra	u11327
 13944  012748  0008               	tblrd		*
 13945  01274A  50F5               	movf	tablat,w,c
 13946  01274C  D007               	bra	u11325
 13947  01274E                     u11327:
 13948  01274E  006F FFDB FFE1     	movff	tblptrl,fsr1l
 13949  012754  006F FFDF FFE2     	movff	tblptrh,fsr1h
 13950  01275A  50E7               	movf	indf1,w,c
 13951  01275C                     u11325:
 13952  01275C  1822               	xorwf	??_strncmp^0,w,c
 13953  01275E  B4D8               	btfsc	status,2,c
 13954  012760  D797               	goto	l10495
 13955  012762                     u11320:
 13956  012762  0060  F093  FFF6   	movff	strncmp@l,tblptrl
 13957  012768  0060  F097  FFF7   	movff	strncmp@l+1,tblptrh
 13958  01276E  0E00               	movlw	low (__mediumconst shr (0+16))
 13959  012770  6EF8               	movwf	tblptru,c
 13960  012772  0E1F               	movlw	(high __ramtop+-1)
 13961  012774  64F7               	cpfsgt	tblptrh,c
 13962  012776  D003               	bra	u11337
 13963  012778  0008               	tblrd		*
 13964  01277A  50F5               	movf	tablat,w,c
 13965  01277C  D007               	bra	u11330
 13966  01277E                     u11337:
 13967  01277E  006F FFDB FFE1     	movff	tblptrl,fsr1l
 13968  012784  006F FFDF FFE2     	movff	tblptrh,fsr1h
 13969  01278A  50E7               	movf	indf1,w,c
 13970  01278C                     u11330:
 13971  01278C  6E22               	movwf	??_strncmp^0,c
 13972  01278E  0060  F09B  FFF6   	movff	strncmp@r,tblptrl
 13973  012794  0060  F09F  FFF7   	movff	strncmp@r+1,tblptrh
 13974  01279A  0E00               	movlw	low (__mediumconst shr (0+16))
 13975  01279C  6EF8               	movwf	tblptru,c
 13976  01279E  0E1F               	movlw	(high __ramtop+-1)
 13977  0127A0  64F7               	cpfsgt	tblptrh,c
 13978  0127A2  D003               	bra	u11347
 13979  0127A4  0008               	tblrd		*
 13980  0127A6  50F5               	movf	tablat,w,c
 13981  0127A8  D007               	bra	u11340
 13982  0127AA                     u11347:
 13983  0127AA  006F FFDB FFE1     	movff	tblptrl,fsr1l
 13984  0127B0  006F FFDF FFE2     	movff	tblptrh,fsr1h
 13985  0127B6  50E7               	movf	indf1,w,c
 13986  0127B8                     u11340:
 13987  0127B8  6E23               	movwf	(??_strncmp+1)^0,c
 13988  0127BA  5023               	movf	(??_strncmp+1)^0,w,c
 13989  0127BC  5C22               	subwf	??_strncmp^0,w,c
 13990  0127BE  6E1C               	movwf	?_strncmp^0,c
 13991  0127C0  6A1D               	clrf	(?_strncmp+1)^0,c
 13992  0127C2  A0D8               	btfss	status,0,c
 13993  0127C4  061D               	decf	(?_strncmp+1)^0,f,c
 13994  0127C6  0012               	return		;funcret
 13995  0127C8                     __end_of_strncmp:
 13996                           	callstack 0
 13997                           
 13998 ;; *************** function _strlen *****************
 13999 ;; Defined at:
 14000 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/strlen.c"
 14001 ;; Parameters:    Size  Location     Type
 14002 ;;  s               2   23[COMRAM] PTR const unsigned char 
 14003 ;;		 -> cli_ctx.cmd(128), ?_printf(2), stoa@nuls(7), dbuf(80), 
 14004 ;;		 -> ?_sprintf(2), NULL(0), STR_15(3), STR_14(3), 
 14005 ;;		 -> STR_13(3), STR_12(3), STR_11(3), STR_10(3), 
 14006 ;;		 -> cli_ctx(131), STR_9(18), STR_6(20), STR_2(9), 
 14007 ;;		 -> STR_1(12), 
 14008 ;; Auto vars:     Size  Location     Type
 14009 ;;  a               2   25[COMRAM] PTR const unsigned char 
 14010 ;;		 -> cli_ctx.cmd(128), ?_printf(2), stoa@nuls(7), dbuf(80), 
 14011 ;;		 -> ?_sprintf(2), NULL(0), STR_15(3), STR_14(3), 
 14012 ;;		 -> STR_13(3), STR_12(3), STR_11(3), STR_10(3), 
 14013 ;;		 -> cli_ctx(131), STR_9(18), STR_6(20), STR_2(9), 
 14014 ;;		 -> STR_1(12), 
 14015 ;; Return value:  Size  Location     Type
 14016 ;;                  2   23[COMRAM] unsigned int 
 14017 ;; Registers used:
 14018 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 14019 ;; Tracked objects:
 14020 ;;		On entry : 0/0
 14021 ;;		On exit  : 0/0
 14022 ;;		Unchanged: 0/0
 14023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14024 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14025 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14027 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14028 ;;Total ram usage:        4 bytes
 14029 ;; Hardware stack levels used: 1
 14030 ;; Hardware stack levels required when called: 7
 14031 ;; This function calls:
 14032 ;;		Nothing
 14033 ;; This function is called by:
 14034 ;;		__cli_interpret_cmd
 14035 ;;		_eaDogM_WriteString
 14036 ;;		_pad
 14037 ;;		_stoa
 14038 ;; This function uses a non-reentrant model
 14039 ;;
 14040                           
 14041                           	psect	text59
 14042  013DDE                     __ptext59:
 14043                           	callstack 0
 14044  013DDE                     _strlen:
 14045                           	callstack 18
 14046                           
 14047                           ;incstack = 0
 14048  013DDE  C018  F01A         	movff	strlen@s,strlen@a
 14049  013DE2  C019  F01B         	movff	strlen@s+1,strlen@a+1
 14050  013DE6  D002               	goto	l9669
 14051  013DE8                     l9667:
 14052  013DE8  4A18               	infsnz	strlen@s^0,f,c
 14053  013DEA  2A19               	incf	(strlen@s+1)^0,f,c
 14054  013DEC                     l9669:
 14055  013DEC  0060  F063  FFF6   	movff	strlen@s,tblptrl
 14056  013DF2  0060  F067  FFF7   	movff	strlen@s+1,tblptrh
 14057  013DF8  0E00               	movlw	low (__mediumconst shr (0+16))
 14058  013DFA  6EF8               	movwf	tblptru,c
 14059  013DFC  0E1F               	movlw	(high __ramtop+-1)
 14060  013DFE  64F7               	cpfsgt	tblptrh,c
 14061  013E00  D003               	bra	u9747
 14062  013E02  0008               	tblrd		*
 14063  013E04  50F5               	movf	tablat,w,c
 14064  013E06  D007               	bra	u9740
 14065  013E08                     u9747:
 14066  013E08  006F FFDB FFE1     	movff	tblptrl,fsr1l
 14067  013E0E  006F FFDF FFE2     	movff	tblptrh,fsr1h
 14068  013E14  50E7               	movf	indf1,w,c
 14069  013E16                     u9740:
 14070  013E16  0900               	iorlw	0
 14071  013E18  A4D8               	btfss	status,2,c
 14072  013E1A  D7E6               	goto	l9667
 14073  013E1C  501A               	movf	strlen@a^0,w,c
 14074  013E1E  5C18               	subwf	strlen@s^0,w,c
 14075  013E20  6E18               	movwf	?_strlen^0,c
 14076  013E22  501B               	movf	(strlen@a+1)^0,w,c
 14077  013E24  5819               	subwfb	(strlen@s+1)^0,w,c
 14078  013E26  6E19               	movwf	(?_strlen+1)^0,c
 14079  013E28  0012               	return		;funcret
 14080  013E2A                     __end_of_strlen:
 14081                           	callstack 0
 14082                           
 14083 ;; *************** function _fh_pl *****************
 14084 ;; Defined at:
 14085 ;;		line 131 in file "main.c"
 14086 ;; Parameters:    Size  Location     Type
 14087 ;;  a_data          2   46[COMRAM] PTR void 
 14088 ;;		 -> cli_ctx(131), 
 14089 ;; Auto vars:     Size  Location     Type
 14090 ;;		None
 14091 ;; Return value:  Size  Location     Type
 14092 ;;                  1    wreg      void 
 14093 ;; Registers used:
 14094 ;;		wreg, status,2
 14095 ;; Tracked objects:
 14096 ;;		On entry : 3F/0
 14097 ;;		On exit  : 3F/0
 14098 ;;		Unchanged: 0/0
 14099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14100 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14103 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14104 ;;Total ram usage:        2 bytes
 14105 ;; Hardware stack levels used: 1
 14106 ;; Hardware stack levels required when called: 7
 14107 ;; This function calls:
 14108 ;;		Nothing
 14109 ;; This function is called by:
 14110 ;;		__cli_interpret_cmd
 14111 ;; This function uses a non-reentrant model
 14112 ;;
 14113                           
 14114                           	psect	text60
 14115  0147EE                     __ptext60:
 14116                           	callstack 0
 14117  0147EE                     _fh_pl:
 14118                           	callstack 21
 14119                           
 14120                           ; BSR set to: 0
 14121                           ;main.c: 131: void fh_pl(void *a_data);main.c: 132: {;main.c: 133:  roll_max = 2;
 14122                           
 14123                           ;incstack = 0
 14124  0147EE  0E02               	movlw	2
 14125  0147F0  6FFF               	movwf	_roll_max& (0+255),b
 14126                           
 14127                           ;main.c: 134:  static_ps = 3;
 14128  0147F2  0E03               	movlw	3
 14129  0147F4  6FFE               	movwf	_static_ps& (0+255),b
 14130                           
 14131                           ; BSR set to: 0
 14132  0147F6  0012               	return		;funcret
 14133  0147F8                     __end_of_fh_pl:
 14134                           	callstack 0
 14135                           
 14136 ;; *************** function _fh_pd *****************
 14137 ;; Defined at:
 14138 ;;		line 125 in file "main.c"
 14139 ;; Parameters:    Size  Location     Type
 14140 ;;  a_data          2   46[COMRAM] PTR void 
 14141 ;;		 -> cli_ctx(131), 
 14142 ;; Auto vars:     Size  Location     Type
 14143 ;;		None
 14144 ;; Return value:  Size  Location     Type
 14145 ;;                  1    wreg      void 
 14146 ;; Registers used:
 14147 ;;		wreg, status,2
 14148 ;; Tracked objects:
 14149 ;;		On entry : 3F/0
 14150 ;;		On exit  : 3F/0
 14151 ;;		Unchanged: 0/0
 14152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14153 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14156 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14157 ;;Total ram usage:        2 bytes
 14158 ;; Hardware stack levels used: 1
 14159 ;; Hardware stack levels required when called: 7
 14160 ;; This function calls:
 14161 ;;		Nothing
 14162 ;; This function is called by:
 14163 ;;		__cli_interpret_cmd
 14164 ;; This function uses a non-reentrant model
 14165 ;;
 14166                           
 14167                           	psect	text61
 14168  0147F8                     __ptext61:
 14169                           	callstack 0
 14170  0147F8                     _fh_pd:
 14171                           	callstack 21
 14172                           
 14173                           ; BSR set to: 0
 14174                           ;main.c: 125: void fh_pd(void *a_data);main.c: 126: {;main.c: 127:  roll_max = 19 - 10;
 14175                           
 14176                           ; BSR set to: 0
 14177                           ;incstack = 0
 14178  0147F8  0E09               	movlw	9
 14179  0147FA  6FFF               	movwf	_roll_max& (0+255),b
 14180                           
 14181                           ;main.c: 128:  static_ps = 20 - 10;
 14182  0147FC  0E0A               	movlw	10
 14183  0147FE  6FFE               	movwf	_static_ps& (0+255),b
 14184                           
 14185                           ; BSR set to: 0
 14186  014800  0012               	return		;funcret
 14187  014802                     __end_of_fh_pd:
 14188                           	callstack 0
 14189                           
 14190 ;; *************** function _fh_po *****************
 14191 ;; Defined at:
 14192 ;;		line 113 in file "main.c"
 14193 ;; Parameters:    Size  Location     Type
 14194 ;;  a_data          2   46[COMRAM] PTR void 
 14195 ;;		 -> cli_ctx(131), 
 14196 ;; Auto vars:     Size  Location     Type
 14197 ;;		None
 14198 ;; Return value:  Size  Location     Type
 14199 ;;                  1    wreg      void 
 14200 ;; Registers used:
 14201 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14202 ;; Tracked objects:
 14203 ;;		On entry : 3F/0
 14204 ;;		On exit  : 3F/0
 14205 ;;		Unchanged: 0/0
 14206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14207 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14210 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14211 ;;Total ram usage:        2 bytes
 14212 ;; Hardware stack levels used: 1
 14213 ;; Hardware stack levels required when called: 12
 14214 ;; This function calls:
 14215 ;;		_puts
 14216 ;; This function is called by:
 14217 ;;		__cli_interpret_cmd
 14218 ;; This function uses a non-reentrant model
 14219 ;;
 14220                           
 14221                           	psect	text62
 14222  0146FA                     __ptext62:
 14223                           	callstack 0
 14224  0146FA                     _fh_po:
 14225                           	callstack 16
 14226                           
 14227                           ; BSR set to: 0
 14228                           ;main.c: 113: void fh_po(void *a_data);main.c: 114: {;main.c: 115:  puts("\r\n Voltage O
      +                          FF \r\n");
 14229                           
 14230                           ; BSR set to: 0
 14231                           ;incstack = 0
 14232  0146FA  0E8C               	movlw	low STR_5
 14233  0146FC  6E2C               	movwf	puts@s^0,c
 14234  0146FE  0EFF               	movlw	high STR_5
 14235  014700  6E2D               	movwf	(puts@s+1)^0,c
 14236  014702  EC35  F0A1         	call	_puts	;wreg free
 14237                           
 14238                           ;main.c: 116:  mode = off_mode;
 14239  014706  0E00               	movlw	0
 14240  014708  0100               	movlb	0	; () banked
 14241  01470A  6FFB               	movwf	_mode& (0+255),b
 14242                           
 14243                           ; BSR set to: 0
 14244  01470C  0012               	return		;funcret
 14245  01470E                     __end_of_fh_po:
 14246                           	callstack 0
 14247                           
 14248 ;; *************** function _fh_ps *****************
 14249 ;; Defined at:
 14250 ;;		line 107 in file "main.c"
 14251 ;; Parameters:    Size  Location     Type
 14252 ;;  a_data          2   46[COMRAM] PTR void 
 14253 ;;		 -> cli_ctx(131), 
 14254 ;; Auto vars:     Size  Location     Type
 14255 ;;		None
 14256 ;; Return value:  Size  Location     Type
 14257 ;;                  1    wreg      void 
 14258 ;; Registers used:
 14259 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14260 ;; Tracked objects:
 14261 ;;		On entry : 3F/0
 14262 ;;		On exit  : 3F/0
 14263 ;;		Unchanged: 0/0
 14264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14265 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14268 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14269 ;;Total ram usage:        2 bytes
 14270 ;; Hardware stack levels used: 1
 14271 ;; Hardware stack levels required when called: 12
 14272 ;; This function calls:
 14273 ;;		_puts
 14274 ;; This function is called by:
 14275 ;;		__cli_interpret_cmd
 14276 ;; This function uses a non-reentrant model
 14277 ;;
 14278                           
 14279                           	psect	text63
 14280  01470E                     __ptext63:
 14281                           	callstack 0
 14282  01470E                     _fh_ps:
 14283                           	callstack 16
 14284                           
 14285                           ; BSR set to: 0
 14286                           ;main.c: 107: void fh_ps(void *a_data);main.c: 108: {;main.c: 109:  puts("\r\n Steady 10
      +                          00VDC ON \r\n");
 14287                           
 14288                           ; BSR set to: 0
 14289                           ;incstack = 0
 14290  01470E  0E60               	movlw	low STR_4
 14291  014710  6E2C               	movwf	puts@s^0,c
 14292  014712  0EFF               	movlw	high STR_4
 14293  014714  6E2D               	movwf	(puts@s+1)^0,c
 14294  014716  EC35  F0A1         	call	_puts	;wreg free
 14295                           
 14296                           ;main.c: 110:  mode = static_mode;
 14297  01471A  0E02               	movlw	2
 14298  01471C  0100               	movlb	0	; () banked
 14299  01471E  6FFB               	movwf	_mode& (0+255),b
 14300                           
 14301                           ; BSR set to: 0
 14302  014720  0012               	return		;funcret
 14303  014722                     __end_of_fh_ps:
 14304                           	callstack 0
 14305                           
 14306 ;; *************** function _fh_pr *****************
 14307 ;; Defined at:
 14308 ;;		line 100 in file "main.c"
 14309 ;; Parameters:    Size  Location     Type
 14310 ;;  a_data          2   46[COMRAM] PTR void 
 14311 ;;		 -> cli_ctx(131), 
 14312 ;; Auto vars:     Size  Location     Type
 14313 ;;		None
 14314 ;; Return value:  Size  Location     Type
 14315 ;;                  1    wreg      void 
 14316 ;; Registers used:
 14317 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14318 ;; Tracked objects:
 14319 ;;		On entry : 3F/0
 14320 ;;		On exit  : 3F/0
 14321 ;;		Unchanged: 0/0
 14322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14323 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14326 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14327 ;;Total ram usage:        2 bytes
 14328 ;; Hardware stack levels used: 1
 14329 ;; Hardware stack levels required when called: 12
 14330 ;; This function calls:
 14331 ;;		_puts
 14332 ;; This function is called by:
 14333 ;;		__cli_interpret_cmd
 14334 ;; This function uses a non-reentrant model
 14335 ;;
 14336                           
 14337                           	psect	text64
 14338  0145B8                     __ptext64:
 14339                           	callstack 0
 14340  0145B8                     _fh_pr:
 14341                           	callstack 16
 14342                           
 14343                           ; BSR set to: 0
 14344                           ;main.c: 100: void fh_pr(void *a_data);main.c: 101: {;main.c: 102:  puts((const char *) 
      +                          a_data);
 14345                           
 14346                           ; BSR set to: 0
 14347                           ;incstack = 0
 14348  0145B8  C02F  F02C         	movff	fh_pr@a_data,puts@s
 14349  0145BC  C030  F02D         	movff	fh_pr@a_data+1,puts@s+1
 14350  0145C0  EC35  F0A1         	call	_puts	;wreg free
 14351                           
 14352                           ;main.c: 103:  puts("\r\n Ramp to 1000VDC ON \r\n");
 14353  0145C4  0E47               	movlw	low STR_3
 14354  0145C6  6E2C               	movwf	puts@s^0,c
 14355  0145C8  0EFF               	movlw	high STR_3
 14356  0145CA  6E2D               	movwf	(puts@s+1)^0,c
 14357  0145CC  EC35  F0A1         	call	_puts	;wreg free
 14358                           
 14359                           ;main.c: 104:  mode = roll_mode;
 14360  0145D0  0E01               	movlw	1
 14361  0145D2  0100               	movlb	0	; () banked
 14362  0145D4  6FFB               	movwf	_mode& (0+255),b
 14363                           
 14364                           ; BSR set to: 0
 14365  0145D6  0012               	return		;funcret
 14366  0145D8                     __end_of_fh_pr:
 14367                           	callstack 0
 14368                           
 14369 ;; *************** function _fh_pu *****************
 14370 ;; Defined at:
 14371 ;;		line 119 in file "main.c"
 14372 ;; Parameters:    Size  Location     Type
 14373 ;;  a_data          2   46[COMRAM] PTR void 
 14374 ;;		 -> cli_ctx(131), 
 14375 ;; Auto vars:     Size  Location     Type
 14376 ;;		None
 14377 ;; Return value:  Size  Location     Type
 14378 ;;                  1    wreg      void 
 14379 ;; Registers used:
 14380 ;;		wreg, status,2
 14381 ;; Tracked objects:
 14382 ;;		On entry : 3F/0
 14383 ;;		On exit  : 3F/0
 14384 ;;		Unchanged: 0/0
 14385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14386 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14389 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14390 ;;Total ram usage:        2 bytes
 14391 ;; Hardware stack levels used: 1
 14392 ;; Hardware stack levels required when called: 7
 14393 ;; This function calls:
 14394 ;;		Nothing
 14395 ;; This function is called by:
 14396 ;;		__cli_interpret_cmd
 14397 ;; This function uses a non-reentrant model
 14398 ;;
 14399                           
 14400                           	psect	text65
 14401  014802                     __ptext65:
 14402                           	callstack 0
 14403  014802                     _fh_pu:
 14404                           	callstack 21
 14405                           
 14406                           ; BSR set to: 0
 14407                           ;main.c: 119: void fh_pu(void *a_data);main.c: 120: {;main.c: 121:  roll_max = 19 + 10;
 14408                           
 14409                           ; BSR set to: 0
 14410                           ;incstack = 0
 14411  014802  0E1D               	movlw	29
 14412  014804  6FFF               	movwf	_roll_max& (0+255),b
 14413                           
 14414                           ;main.c: 122:  static_ps = 20 + 10;
 14415  014806  0E1E               	movlw	30
 14416  014808  6FFE               	movwf	_static_ps& (0+255),b
 14417                           
 14418                           ; BSR set to: 0
 14419  01480A  0012               	return		;funcret
 14420  01480C                     __end_of_fh_pu:
 14421                           	callstack 0
 14422                           
 14423 ;; *************** function _puts *****************
 14424 ;; Defined at:
 14425 ;;		line 3 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/puts.c"
 14426 ;; Parameters:    Size  Location     Type
 14427 ;;  s               2   43[COMRAM] PTR const unsigned char 
 14428 ;;		 -> STR_16(3), cli_read@i(1), cmdm(28), cli_ctx(131), 
 14429 ;;		 -> buff1(255), STR_5(18), STR_4(24), STR_3(25), 
 14430 ;; Auto vars:     Size  Location     Type
 14431 ;;  r               2    0        int 
 14432 ;; Return value:  Size  Location     Type
 14433 ;;                  2   43[COMRAM] int 
 14434 ;; Registers used:
 14435 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14436 ;; Tracked objects:
 14437 ;;		On entry : 0/1
 14438 ;;		On exit  : 0/0
 14439 ;;		Unchanged: 0/0
 14440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14441 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14442 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14444 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14445 ;;Total ram usage:        3 bytes
 14446 ;; Hardware stack levels used: 1
 14447 ;; Hardware stack levels required when called: 11
 14448 ;; This function calls:
 14449 ;;		_fputc
 14450 ;;		_fputs
 14451 ;; This function is called by:
 14452 ;;		_fh_pr
 14453 ;;		_fh_ps
 14454 ;;		_fh_po
 14455 ;;		_main
 14456 ;;		_cli_init
 14457 ;;		_linux_putc
 14458 ;; This function uses a non-reentrant model
 14459 ;;
 14460                           
 14461                           	psect	text66
 14462  01426A                     __ptext66:
 14463                           	callstack 0
 14464  01426A                     _puts:
 14465                           	callstack 17
 14466                           
 14467                           ; BSR set to: 0
 14468                           ;incstack = 0
 14469  01426A  0E01               	movlw	1
 14470  01426C  6E2E               	movwf	_puts$4036^0,c
 14471  01426E  C02C  F023         	movff	puts@s,fputs@s
 14472  014272  C02D  F024         	movff	puts@s+1,fputs@s+1
 14473  014276  0E00               	movlw	0
 14474  014278  6E25               	movwf	fputs@fp^0,c
 14475  01427A  0E00               	movlw	0
 14476  01427C  6E26               	movwf	(fputs@fp+1)^0,c
 14477  01427E  EC0F  F09D         	call	_fputs	;wreg free
 14478  014282  BE24               	btfsc	(?_fputs+1)^0,7,c
 14479  014284  0012               	return	
 14480  014286  0E00               	movlw	0
 14481  014288  6E1B               	movwf	(fputc@c+1)^0,c
 14482  01428A  0E0A               	movlw	10
 14483  01428C  6E1A               	movwf	fputc@c^0,c
 14484  01428E  0E00               	movlw	0
 14485  014290  6E1C               	movwf	fputc@fp^0,c
 14486  014292  0E00               	movlw	0
 14487  014294  6E1D               	movwf	(fputc@fp+1)^0,c
 14488  014296  EC88  F09A         	call	_fputc	;wreg free
 14489  01429A  BE1B               	btfsc	(?_fputc+1)^0,7,c
 14490  01429C  0012               	return	
 14491  01429E  0E00               	movlw	0
 14492  0142A0  6E2E               	movwf	_puts$4036^0,c
 14493  0142A2  0012               	return		;funcret
 14494  0142A4                     __end_of_puts:
 14495                           	callstack 0
 14496                           
 14497 ;; *************** function _fputs *****************
 14498 ;; Defined at:
 14499 ;;		line 8 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/nf_fputs.c"
 14500 ;; Parameters:    Size  Location     Type
 14501 ;;  s               2   34[COMRAM] PTR const unsigned char 
 14502 ;;		 -> dbuf(80), STR_16(3), cli_read@i(1), cmdm(28), 
 14503 ;;		 -> cli_ctx(131), buff1(255), STR_5(18), STR_4(24), 
 14504 ;;		 -> STR_3(25), 
 14505 ;;  fp              2   36[COMRAM] PTR struct _IO_FILE
 14506 ;;		 -> sprintf@f(11), NULL(0), 
 14507 ;; Auto vars:     Size  Location     Type
 14508 ;;  i               2   41[COMRAM] int 
 14509 ;;  c               1   40[COMRAM] unsigned char 
 14510 ;; Return value:  Size  Location     Type
 14511 ;;                  2   34[COMRAM] int 
 14512 ;; Registers used:
 14513 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14514 ;; Tracked objects:
 14515 ;;		On entry : 0/0
 14516 ;;		On exit  : 0/0
 14517 ;;		Unchanged: 0/0
 14518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14519 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14520 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14521 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14522 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14523 ;;Total ram usage:        9 bytes
 14524 ;; Hardware stack levels used: 1
 14525 ;; Hardware stack levels required when called: 10
 14526 ;; This function calls:
 14527 ;;		_fputc
 14528 ;; This function is called by:
 14529 ;;		_pad
 14530 ;;		_puts
 14531 ;; This function uses a non-reentrant model
 14532 ;;
 14533                           
 14534                           	psect	text67
 14535  013A1E                     __ptext67:
 14536                           	callstack 0
 14537  013A1E                     _fputs:
 14538                           	callstack 15
 14539                           
 14540                           ;incstack = 0
 14541  013A1E  0E00               	movlw	0
 14542  013A20  6E2B               	movwf	(fputs@i+1)^0,c
 14543  013A22  0E00               	movlw	0
 14544  013A24  6E2A               	movwf	fputs@i^0,c
 14545  013A26  D00B               	goto	l9883
 14546  013A28                     l9879:
 14547  013A28  C029  F01A         	movff	fputs@c,fputc@c
 14548  013A2C  6A1B               	clrf	(fputc@c+1)^0,c
 14549  013A2E  C025  F01C         	movff	fputs@fp,fputc@fp
 14550  013A32  C026  F01D         	movff	fputs@fp+1,fputc@fp+1
 14551  013A36  EC88  F09A         	call	_fputc	;wreg free
 14552  013A3A  4A2A               	infsnz	fputs@i^0,f,c
 14553  013A3C  2A2B               	incf	(fputs@i+1)^0,f,c
 14554  013A3E                     l9883:
 14555  013A3E  502A               	movf	fputs@i^0,w,c
 14556  013A40  2423               	addwf	fputs@s^0,w,c
 14557  013A42  6E27               	movwf	??_fputs^0,c
 14558  013A44  502B               	movf	(fputs@i+1)^0,w,c
 14559  013A46  2024               	addwfc	(fputs@s+1)^0,w,c
 14560  013A48  6E28               	movwf	(??_fputs+1)^0,c
 14561  013A4A  0060  F09F  FFF6   	movff	??_fputs,tblptrl
 14562  013A50  0060  F0A3  FFF7   	movff	??_fputs+1,tblptrh
 14563  013A56  0E00               	movlw	low (__mediumconst shr (0+16))
 14564  013A58  6EF8               	movwf	tblptru,c
 14565  013A5A  0E1F               	movlw	(high __ramtop+-1)
 14566  013A5C  64F7               	cpfsgt	tblptrh,c
 14567  013A5E  D003               	bra	u10157
 14568  013A60  0008               	tblrd		*
 14569  013A62  50F5               	movf	tablat,w,c
 14570  013A64  D007               	bra	u10150
 14571  013A66                     u10157:
 14572  013A66  006F FFDB FFE1     	movff	tblptrl,fsr1l
 14573  013A6C  006F FFDF FFE2     	movff	tblptrh,fsr1h
 14574  013A72  50E7               	movf	indf1,w,c
 14575  013A74                     u10150:
 14576  013A74  6E29               	movwf	fputs@c^0,c
 14577  013A76  5029               	movf	fputs@c^0,w,c
 14578  013A78  A4D8               	btfss	status,2,c
 14579  013A7A  D7D6               	goto	l9879
 14580  013A7C  C02A  F023         	movff	fputs@i,?_fputs
 14581  013A80  C02B  F024         	movff	fputs@i+1,?_fputs+1
 14582  013A84  0012               	return		;funcret
 14583  013A86                     __end_of_fputs:
 14584                           	callstack 0
 14585                           
 14586 ;; *************** function _fputc *****************
 14587 ;; Defined at:
 14588 ;;		line 8 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/nf_fputc.c"
 14589 ;; Parameters:    Size  Location     Type
 14590 ;;  c               2   25[COMRAM] int 
 14591 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
 14592 ;;		 -> sprintf@f(11), NULL(0), 
 14593 ;; Auto vars:     Size  Location     Type
 14594 ;;		None
 14595 ;; Return value:  Size  Location     Type
 14596 ;;                  2   25[COMRAM] int 
 14597 ;; Registers used:
 14598 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14599 ;; Tracked objects:
 14600 ;;		On entry : 0/0
 14601 ;;		On exit  : 0/0
 14602 ;;		Unchanged: 0/0
 14603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14604 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14606 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14607 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14608 ;;Total ram usage:        9 bytes
 14609 ;; Hardware stack levels used: 1
 14610 ;; Hardware stack levels required when called: 9
 14611 ;; This function calls:
 14612 ;;		_putch
 14613 ;; This function is called by:
 14614 ;;		_pad
 14615 ;;		_stoa
 14616 ;;		_vfpfcnvrt
 14617 ;;		_fputs
 14618 ;;		_puts
 14619 ;; This function uses a non-reentrant model
 14620 ;;
 14621                           
 14622                           	psect	text68
 14623  013510                     __ptext68:
 14624                           	callstack 0
 14625  013510                     _fputc:
 14626                           	callstack 15
 14627                           
 14628                           ;incstack = 0
 14629  013510  501C               	movf	fputc@fp^0,w,c
 14630  013512  101D               	iorwf	(fputc@fp+1)^0,w,c
 14631  013514  B4D8               	btfsc	status,2,c
 14632  013516  D004               	goto	u9710
 14633  013518  501C               	movf	fputc@fp^0,w,c
 14634  01351A  101D               	iorwf	(fputc@fp+1)^0,w,c
 14635  01351C  A4D8               	btfss	status,2,c
 14636  01351E  D004               	goto	l9655
 14637  013520                     u9710:
 14638  013520  501A               	movf	fputc@c^0,w,c
 14639  013522  EC06  F0A4         	call	_putch
 14640  013526  D04A               	goto	l9661
 14641  013528                     l9655:
 14642  013528  EE20 F009          	lfsr	2,9
 14643  01352C  501C               	movf	fputc@fp^0,w,c
 14644  01352E  26D9               	addwf	fsr2l,f,c
 14645  013530  501D               	movf	(fputc@fp+1)^0,w,c
 14646  013532  22DA               	addwfc	fsr2h,f,c
 14647  013534  50DE               	movf	postinc2,w,c
 14648  013536  10DE               	iorwf	postinc2,w,c
 14649  013538  B4D8               	btfsc	status,2,c
 14650  01353A  D016               	goto	u9730
 14651  01353C  EE20 F009          	lfsr	2,9
 14652  013540  501C               	movf	fputc@fp^0,w,c
 14653  013542  26D9               	addwf	fsr2l,f,c
 14654  013544  501D               	movf	(fputc@fp+1)^0,w,c
 14655  013546  22DA               	addwfc	fsr2h,f,c
 14656  013548  EE10 F003          	lfsr	1,3
 14657  01354C  501C               	movf	fputc@fp^0,w,c
 14658  01354E  26E1               	addwf	fsr1l,f,c
 14659  013550  501D               	movf	(fputc@fp+1)^0,w,c
 14660  013552  22E2               	addwfc	fsr1h,f,c
 14661  013554  50DE               	movf	postinc2,w,c
 14662  013556  5CE6               	subwf	postinc1,w,c
 14663  013558  50E6               	movf	postinc1,w,c
 14664  01355A  0A80               	xorlw	128
 14665  01355C  6E22               	movwf	(??_fputc+4)^0,c
 14666  01355E  50DE               	movf	postinc2,w,c
 14667  013560  0A80               	xorlw	128
 14668  013562  5822               	subwfb	(??_fputc+4)^0,w,c
 14669  013564  B0D8               	btfsc	status,0,c
 14670  013566  D02A               	goto	l9661
 14671  013568                     u9730:
 14672  013568  EE20 F003          	lfsr	2,3
 14673  01356C  501C               	movf	fputc@fp^0,w,c
 14674  01356E  26D9               	addwf	fsr2l,f,c
 14675  013570  501D               	movf	(fputc@fp+1)^0,w,c
 14676  013572  22DA               	addwfc	fsr2h,f,c
 14677  013574  006F FF78  F01E    	movff	postinc2,??_fputc
 14678  01357A  006F FF74  F01F    	movff	postdec2,??_fputc+1
 14679  013580  0060  F073  FFD9   	movff	fputc@fp,fsr2l
 14680  013586  0060  F077  FFDA   	movff	fputc@fp+1,fsr2h
 14681  01358C  006F FF78  F020    	movff	postinc2,??_fputc+2
 14682  013592  006F FF74  F021    	movff	postdec2,??_fputc+3
 14683  013598  501E               	movf	??_fputc^0,w,c
 14684  01359A  2420               	addwf	(??_fputc+2)^0,w,c
 14685  01359C  6ED9               	movwf	fsr2l,c
 14686  01359E  501F               	movf	(??_fputc+1)^0,w,c
 14687  0135A0  2021               	addwfc	(??_fputc+3)^0,w,c
 14688  0135A2  6EDA               	movwf	fsr2h,c
 14689  0135A4  0060  F06B  FFDF   	movff	fputc@c,indf2
 14690  0135AA  EE20 F003          	lfsr	2,3
 14691  0135AE  501C               	movf	fputc@fp^0,w,c
 14692  0135B0  26D9               	addwf	fsr2l,f,c
 14693  0135B2  501D               	movf	(fputc@fp+1)^0,w,c
 14694  0135B4  22DA               	addwfc	fsr2h,f,c
 14695  0135B6  2ADE               	incf	postinc2,f,c
 14696  0135B8  0E00               	movlw	0
 14697  0135BA  22DD               	addwfc	postdec2,f,c
 14698  0135BC                     l9661:
 14699  0135BC  C01A  F01A         	movff	fputc@c,?_fputc
 14700  0135C0  6A1B               	clrf	(?_fputc+1)^0,c
 14701  0135C2  0012               	return		;funcret
 14702  0135C4                     __end_of_fputc:
 14703                           	callstack 0
 14704                           
 14705 ;; *************** function _putch *****************
 14706 ;; Defined at:
 14707 ;;		line 230 in file "mcc_generated_files/uart1.c"
 14708 ;; Parameters:    Size  Location     Type
 14709 ;;  txData          1    wreg     unsigned char 
 14710 ;; Auto vars:     Size  Location     Type
 14711 ;;  txData          1   24[COMRAM] unsigned char 
 14712 ;; Return value:  Size  Location     Type
 14713 ;;                  1    wreg      void 
 14714 ;; Registers used:
 14715 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14716 ;; Tracked objects:
 14717 ;;		On entry : 0/0
 14718 ;;		On exit  : 3F/39
 14719 ;;		Unchanged: 0/0
 14720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14722 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14724 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14725 ;;Total ram usage:        1 bytes
 14726 ;; Hardware stack levels used: 1
 14727 ;; Hardware stack levels required when called: 8
 14728 ;; This function calls:
 14729 ;;		_UART1_Write
 14730 ;; This function is called by:
 14731 ;;		_fputc
 14732 ;; This function uses a non-reentrant model
 14733 ;;
 14734                           
 14735                           	psect	text69
 14736  01480C                     __ptext69:
 14737                           	callstack 0
 14738  01480C                     _putch:
 14739                           	callstack 15
 14740                           
 14741                           ;incstack = 0
 14742                           ;putch@txData stored from wreg
 14743  01480C  6E19               	movwf	putch@txData^0,c
 14744                           
 14745                           ;mcc_generated_files/uart1.c: 230: void putch(char txData);mcc_generated_files/uart1.c: 
      +                          231: {;mcc_generated_files/uart1.c: 232:     UART1_Write(txData);
 14746  01480E  5019               	movf	putch@txData^0,w,c
 14747  014810  ECA3  F0A0         	call	_UART1_Write
 14748                           
 14749                           ; BSR set to: 57
 14750  014814  0012               	return		;funcret
 14751  014816                     __end_of_putch:
 14752                           	callstack 0
 14753                           
 14754 ;; *************** function _UART1_Write *****************
 14755 ;; Defined at:
 14756 ;;		line 202 in file "mcc_generated_files/uart1.c"
 14757 ;; Parameters:    Size  Location     Type
 14758 ;;  txData          1    wreg     unsigned char 
 14759 ;; Auto vars:     Size  Location     Type
 14760 ;;  txData          1   23[COMRAM] unsigned char 
 14761 ;; Return value:  Size  Location     Type
 14762 ;;                  1    wreg      void 
 14763 ;; Registers used:
 14764 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14765 ;; Tracked objects:
 14766 ;;		On entry : 0/0
 14767 ;;		On exit  : 3F/39
 14768 ;;		Unchanged: 0/0
 14769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14771 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14773 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14774 ;;Total ram usage:        1 bytes
 14775 ;; Hardware stack levels used: 1
 14776 ;; Hardware stack levels required when called: 7
 14777 ;; This function calls:
 14778 ;;		Nothing
 14779 ;; This function is called by:
 14780 ;;		_putch
 14781 ;; This function uses a non-reentrant model
 14782 ;;
 14783                           
 14784                           	psect	text70
 14785  014146                     __ptext70:
 14786                           	callstack 0
 14787  014146                     _UART1_Write:
 14788                           	callstack 15
 14789                           
 14790                           ; BSR set to: 57
 14791                           ;incstack = 0
 14792                           ;UART1_Write@txData stored from wreg
 14793  014146  6E18               	movwf	UART1_Write@txData^0,c
 14794  014148                     
 14795                           ;mcc_generated_files/uart1.c: 204:     while(0 == uart1TxBufferRemaining)
 14796                           
 14797                           ;mcc_generated_files/uart1.c: 202: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 203: {;mcc_generated_files/uart1.c: 204:     while(0 == uart1TxBufferRemaining)
 14798  014148  5046               	movf	_uart1TxBufferRemaining^0,w,c	;volatile
 14799  01414A  B4D8               	btfsc	status,2,c
 14800  01414C  D7FD               	goto	l9629
 14801                           
 14802                           ;mcc_generated_files/uart1.c: 208:     if(0 == PIE3bits.U1TXIE)
 14803  01414E  0139               	movlb	57	; () banked
 14804  014150  B993               	btfsc	147,4,b	;volatile
 14805  014152  D004               	goto	l643
 14806                           
 14807                           ; BSR set to: 57
 14808                           ;mcc_generated_files/uart1.c: 209:     {;mcc_generated_files/uart1.c: 210:         U1TXB
      +                           = txData;
 14809  014154  0060  F063  FDEA   	movff	UART1_Write@txData,15850	;volatile
 14810                           
 14811                           ;mcc_generated_files/uart1.c: 211:     }
 14812  01415A  D011               	goto	l9645
 14813  01415C                     l643:
 14814                           
 14815                           ; BSR set to: 57
 14816                           ;mcc_generated_files/uart1.c: 213:     {;mcc_generated_files/uart1.c: 214:         PIE3b
      +                          its.U1TXIE = 0;
 14817  01415C  9993               	bcf	147,4,b	;volatile
 14818                           
 14819                           ; BSR set to: 57
 14820                           ;mcc_generated_files/uart1.c: 215:         uart1TxBuffer[uart1TxHead++] = txData;
 14821  01415E  0E28               	movlw	low _uart1TxBuffer
 14822  014160  2448               	addwf	_uart1TxHead^0,w,c	;volatile
 14823  014162  6ED9               	movwf	fsr2l,c
 14824  014164  6ADA               	clrf	fsr2h,c
 14825  014166  0E01               	movlw	high _uart1TxBuffer
 14826  014168  22DA               	addwfc	fsr2h,f,c
 14827  01416A  0060  F063  FFDF   	movff	UART1_Write@txData,indf2
 14828                           
 14829                           ; BSR set to: 57
 14830  014170  2A48               	incf	_uart1TxHead^0,f,c	;volatile
 14831                           
 14832                           ; BSR set to: 57
 14833                           ;mcc_generated_files/uart1.c: 216:         if(sizeof(uart1TxBuffer) <= uart1TxHead)
 14834  014172  0E07               	movlw	7
 14835  014174  6448               	cpfsgt	_uart1TxHead^0,c
 14836  014176  D002               	goto	l9643
 14837                           
 14838                           ; BSR set to: 57
 14839                           ;mcc_generated_files/uart1.c: 217:         {;mcc_generated_files/uart1.c: 218:          
      +                             uart1TxHead = 0;
 14840  014178  0E00               	movlw	0
 14841  01417A  6E48               	movwf	_uart1TxHead^0,c	;volatile
 14842  01417C                     l9643:
 14843                           
 14844                           ; BSR set to: 57
 14845                           ;mcc_generated_files/uart1.c: 220:         uart1TxBufferRemaining--;
 14846  01417C  0646               	decf	_uart1TxBufferRemaining^0,f,c	;volatile
 14847  01417E                     l9645:
 14848                           
 14849                           ; BSR set to: 57
 14850                           ;mcc_generated_files/uart1.c: 222:     PIE3bits.U1TXIE = 1;
 14851  01417E  8993               	bsf	147,4,b	;volatile
 14852                           
 14853                           ; BSR set to: 57
 14854  014180  0012               	return		;funcret
 14855  014182                     __end_of_UART1_Write:
 14856                           	callstack 0
 14857                           
 14858 ;; *************** function ___xxtofl *****************
 14859 ;; Defined at:
 14860 ;;		line 10 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/xxtofl.c"
 14861 ;; Parameters:    Size  Location     Type
 14862 ;;  sign            1    wreg     unsigned char 
 14863 ;;  val             4   23[COMRAM] long 
 14864 ;; Auto vars:     Size  Location     Type
 14865 ;;  sign            1   31[COMRAM] unsigned char 
 14866 ;;  arg             4   33[COMRAM] unsigned long 
 14867 ;;  exp             1   32[COMRAM] unsigned char 
 14868 ;; Return value:  Size  Location     Type
 14869 ;;                  4   23[COMRAM] unsigned char 
 14870 ;; Registers used:
 14871 ;;		wreg, status,2, status,0
 14872 ;; Tracked objects:
 14873 ;;		On entry : 3F/0
 14874 ;;		On exit  : 0/0
 14875 ;;		Unchanged: 0/0
 14876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14877 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14878 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14879 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14880 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14881 ;;Total ram usage:       14 bytes
 14882 ;; Hardware stack levels used: 1
 14883 ;; Hardware stack levels required when called: 7
 14884 ;; This function calls:
 14885 ;;		Nothing
 14886 ;; This function is called by:
 14887 ;;		_main
 14888 ;; This function uses a non-reentrant model
 14889 ;;
 14890                           
 14891                           	psect	text71
 14892  012CF6                     __ptext71:
 14893                           	callstack 0
 14894  012CF6                     ___xxtofl:
 14895                           	callstack 23
 14896                           
 14897                           ; BSR set to: 57
 14898                           ;incstack = 0
 14899                           ;___xxtofl@sign stored from wreg
 14900  012CF6  6E20               	movwf	___xxtofl@sign^0,c
 14901  012CF8  5020               	movf	___xxtofl@sign^0,w,c
 14902  012CFA  A4D8               	btfss	status,2,c
 14903  012CFC  AE1B               	btfss	(___xxtofl@val+3)^0,7,c
 14904  012CFE  D01A               	goto	l2277
 14905  012D00  C018  F01C         	movff	___xxtofl@val,??___xxtofl
 14906  012D04  C019  F01D         	movff	___xxtofl@val+1,??___xxtofl+1
 14907  012D08  C01A  F01E         	movff	___xxtofl@val+2,??___xxtofl+2
 14908  012D0C  C01B  F01F         	movff	___xxtofl@val+3,??___xxtofl+3
 14909  012D10  1E1C               	comf	??___xxtofl^0,f,c
 14910  012D12  1E1D               	comf	(??___xxtofl+1)^0,f,c
 14911  012D14  1E1E               	comf	(??___xxtofl+2)^0,f,c
 14912  012D16  1E1F               	comf	(??___xxtofl+3)^0,f,c
 14913  012D18  2A1C               	incf	??___xxtofl^0,f,c
 14914  012D1A  0E00               	movlw	0
 14915  012D1C  221D               	addwfc	(??___xxtofl+1)^0,f,c
 14916  012D1E  221E               	addwfc	(??___xxtofl+2)^0,f,c
 14917  012D20  221F               	addwfc	(??___xxtofl+3)^0,f,c
 14918  012D22  C01C  F022         	movff	??___xxtofl,___xxtofl@arg
 14919  012D26  C01D  F023         	movff	??___xxtofl+1,___xxtofl@arg+1
 14920  012D2A  C01E  F024         	movff	??___xxtofl+2,___xxtofl@arg+2
 14921  012D2E  C01F  F025         	movff	??___xxtofl+3,___xxtofl@arg+3
 14922  012D32  D008               	goto	l7275
 14923  012D34                     l2277:
 14924  012D34  C018  F022         	movff	___xxtofl@val,___xxtofl@arg
 14925  012D38  C019  F023         	movff	___xxtofl@val+1,___xxtofl@arg+1
 14926  012D3C  C01A  F024         	movff	___xxtofl@val+2,___xxtofl@arg+2
 14927  012D40  C01B  F025         	movff	___xxtofl@val+3,___xxtofl@arg+3
 14928  012D44                     l7275:
 14929  012D44  5018               	movf	___xxtofl@val^0,w,c
 14930  012D46  1019               	iorwf	(___xxtofl@val+1)^0,w,c
 14931  012D48  101A               	iorwf	(___xxtofl@val+2)^0,w,c
 14932  012D4A  101B               	iorwf	(___xxtofl@val+3)^0,w,c
 14933  012D4C  A4D8               	btfss	status,2,c
 14934  012D4E  D009               	goto	l7281
 14935  012D50  0E00               	movlw	0
 14936  012D52  6E18               	movwf	?___xxtofl^0,c
 14937  012D54  0E00               	movlw	0
 14938  012D56  6E19               	movwf	(?___xxtofl+1)^0,c
 14939  012D58  0E00               	movlw	0
 14940  012D5A  6E1A               	movwf	(?___xxtofl+2)^0,c
 14941  012D5C  0E00               	movlw	0
 14942  012D5E  6E1B               	movwf	(?___xxtofl+3)^0,c
 14943  012D60  0012               	return	
 14944  012D62                     l7281:
 14945  012D62  0E96               	movlw	150
 14946  012D64  6E21               	movwf	___xxtofl@exp^0,c
 14947  012D66  D006               	goto	l7285
 14948  012D68                     l7283:
 14949  012D68  2A21               	incf	___xxtofl@exp^0,f,c
 14950  012D6A  90D8               	bcf	status,0,c
 14951  012D6C  3225               	rrcf	(___xxtofl@arg+3)^0,f,c
 14952  012D6E  3224               	rrcf	(___xxtofl@arg+2)^0,f,c
 14953  012D70  3223               	rrcf	(___xxtofl@arg+1)^0,f,c
 14954  012D72  3222               	rrcf	___xxtofl@arg^0,f,c
 14955  012D74                     l7285:
 14956  012D74  0E00               	movlw	0
 14957  012D76  1422               	andwf	___xxtofl@arg^0,w,c
 14958  012D78  6E1C               	movwf	??___xxtofl^0,c
 14959  012D7A  0E00               	movlw	0
 14960  012D7C  1423               	andwf	(___xxtofl@arg+1)^0,w,c
 14961  012D7E  6E1D               	movwf	(??___xxtofl+1)^0,c
 14962  012D80  0E00               	movlw	0
 14963  012D82  1424               	andwf	(___xxtofl@arg+2)^0,w,c
 14964  012D84  6E1E               	movwf	(??___xxtofl+2)^0,c
 14965  012D86  0EFE               	movlw	254
 14966  012D88  1425               	andwf	(___xxtofl@arg+3)^0,w,c
 14967  012D8A  6E1F               	movwf	(??___xxtofl+3)^0,c
 14968  012D8C  501C               	movf	??___xxtofl^0,w,c
 14969  012D8E  101D               	iorwf	(??___xxtofl+1)^0,w,c
 14970  012D90  101E               	iorwf	(??___xxtofl+2)^0,w,c
 14971  012D92  101F               	iorwf	(??___xxtofl+3)^0,w,c
 14972  012D94  B4D8               	btfsc	status,2,c
 14973  012D96  D00D               	goto	l2284
 14974  012D98  D7E7               	goto	l7283
 14975  012D9A                     l7287:
 14976  012D9A  2A21               	incf	___xxtofl@exp^0,f,c
 14977  012D9C  0E01               	movlw	1
 14978  012D9E  2622               	addwf	___xxtofl@arg^0,f,c
 14979  012DA0  0E00               	movlw	0
 14980  012DA2  2223               	addwfc	(___xxtofl@arg+1)^0,f,c
 14981  012DA4  2224               	addwfc	(___xxtofl@arg+2)^0,f,c
 14982  012DA6  2225               	addwfc	(___xxtofl@arg+3)^0,f,c
 14983  012DA8  90D8               	bcf	status,0,c
 14984  012DAA  3225               	rrcf	(___xxtofl@arg+3)^0,f,c
 14985  012DAC  3224               	rrcf	(___xxtofl@arg+2)^0,f,c
 14986  012DAE  3223               	rrcf	(___xxtofl@arg+1)^0,f,c
 14987  012DB0  3222               	rrcf	___xxtofl@arg^0,f,c
 14988  012DB2                     l2284:
 14989  012DB2  0E00               	movlw	0
 14990  012DB4  1422               	andwf	___xxtofl@arg^0,w,c
 14991  012DB6  6E1C               	movwf	??___xxtofl^0,c
 14992  012DB8  0E00               	movlw	0
 14993  012DBA  1423               	andwf	(___xxtofl@arg+1)^0,w,c
 14994  012DBC  6E1D               	movwf	(??___xxtofl+1)^0,c
 14995  012DBE  0E00               	movlw	0
 14996  012DC0  1424               	andwf	(___xxtofl@arg+2)^0,w,c
 14997  012DC2  6E1E               	movwf	(??___xxtofl+2)^0,c
 14998  012DC4  0EFF               	movlw	255
 14999  012DC6  1425               	andwf	(___xxtofl@arg+3)^0,w,c
 15000  012DC8  6E1F               	movwf	(??___xxtofl+3)^0,c
 15001  012DCA  501C               	movf	??___xxtofl^0,w,c
 15002  012DCC  101D               	iorwf	(??___xxtofl+1)^0,w,c
 15003  012DCE  101E               	iorwf	(??___xxtofl+2)^0,w,c
 15004  012DD0  101F               	iorwf	(??___xxtofl+3)^0,w,c
 15005  012DD2  B4D8               	btfsc	status,2,c
 15006  012DD4  D007               	goto	l7295
 15007  012DD6  D7E1               	goto	l7287
 15008  012DD8                     l7293:
 15009  012DD8  0621               	decf	___xxtofl@exp^0,f,c
 15010  012DDA  90D8               	bcf	status,0,c
 15011  012DDC  3622               	rlcf	___xxtofl@arg^0,f,c
 15012  012DDE  3623               	rlcf	(___xxtofl@arg+1)^0,f,c
 15013  012DE0  3624               	rlcf	(___xxtofl@arg+2)^0,f,c
 15014  012DE2  3625               	rlcf	(___xxtofl@arg+3)^0,f,c
 15015  012DE4                     l7295:
 15016  012DE4  BE24               	btfsc	(___xxtofl@arg+2)^0,7,c
 15017  012DE6  D003               	goto	u6490
 15018  012DE8  0E02               	movlw	2
 15019  012DEA  6021               	cpfslt	___xxtofl@exp^0,c
 15020  012DEC  D7F5               	goto	l7293
 15021  012DEE                     u6490:
 15022  012DEE  A021               	btfss	___xxtofl@exp^0,0,c
 15023  012DF0  9E24               	bcf	(___xxtofl@arg+2)^0,7,c
 15024  012DF2  90D8               	bcf	status,0,c
 15025  012DF4  3221               	rrcf	___xxtofl@exp^0,f,c
 15026  012DF6  C021  F01C         	movff	___xxtofl@exp,??___xxtofl
 15027  012DFA  6A1D               	clrf	(??___xxtofl+1)^0,c
 15028  012DFC  6A1E               	clrf	(??___xxtofl+2)^0,c
 15029  012DFE  6A1F               	clrf	(??___xxtofl+3)^0,c
 15030  012E00  C01C  F01F         	movff	??___xxtofl,??___xxtofl+3
 15031  012E04  6A1E               	clrf	(??___xxtofl+2)^0,c
 15032  012E06  6A1D               	clrf	(??___xxtofl+1)^0,c
 15033  012E08  6A1C               	clrf	??___xxtofl^0,c
 15034  012E0A  501C               	movf	??___xxtofl^0,w,c
 15035  012E0C  1222               	iorwf	___xxtofl@arg^0,f,c
 15036  012E0E  501D               	movf	(??___xxtofl+1)^0,w,c
 15037  012E10  1223               	iorwf	(___xxtofl@arg+1)^0,f,c
 15038  012E12  501E               	movf	(??___xxtofl+2)^0,w,c
 15039  012E14  1224               	iorwf	(___xxtofl@arg+2)^0,f,c
 15040  012E16  501F               	movf	(??___xxtofl+3)^0,w,c
 15041  012E18  1225               	iorwf	(___xxtofl@arg+3)^0,f,c
 15042  012E1A  5020               	movf	___xxtofl@sign^0,w,c
 15043  012E1C  A4D8               	btfss	status,2,c
 15044  012E1E  AE1B               	btfss	(___xxtofl@val+3)^0,7,c
 15045  012E20  D001               	goto	l7311
 15046  012E22  8E25               	bsf	(___xxtofl@arg+3)^0,7,c
 15047  012E24                     l7311:
 15048  012E24  C022  F018         	movff	___xxtofl@arg,?___xxtofl
 15049  012E28  C023  F019         	movff	___xxtofl@arg+1,?___xxtofl+1
 15050  012E2C  C024  F01A         	movff	___xxtofl@arg+2,?___xxtofl+2
 15051  012E30  C025  F01B         	movff	___xxtofl@arg+3,?___xxtofl+3
 15052  012E34  0012               	return		;funcret
 15053  012E36                     __end_of___xxtofl:
 15054                           	callstack 0
 15055                           
 15056 ;; *************** function _SYSTEM_Initialize *****************
 15057 ;; Defined at:
 15058 ;;		line 50 in file "mcc_generated_files/mcc.c"
 15059 ;; Parameters:    Size  Location     Type
 15060 ;;		None
 15061 ;; Auto vars:     Size  Location     Type
 15062 ;;		None
 15063 ;; Return value:  Size  Location     Type
 15064 ;;                  1    wreg      void 
 15065 ;; Registers used:
 15066 ;;		wreg, status,2, status,0, cstack
 15067 ;; Tracked objects:
 15068 ;;		On entry : 0/0
 15069 ;;		On exit  : 3F/39
 15070 ;;		Unchanged: 0/0
 15071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15076 ;;Total ram usage:        0 bytes
 15077 ;; Hardware stack levels used: 1
 15078 ;; Hardware stack levels required when called: 9
 15079 ;; This function calls:
 15080 ;;		_ADCC_Initialize
 15081 ;;		_DAC1_Initialize
 15082 ;;		_DMA1_Initialize
 15083 ;;		_INTERRUPT_Initialize
 15084 ;;		_OSCILLATOR_Initialize
 15085 ;;		_PIN_MANAGER_Initialize
 15086 ;;		_PMD_Initialize
 15087 ;;		_PWM5_Initialize
 15088 ;;		_PWM6_Initialize
 15089 ;;		_SPI1_Initialize
 15090 ;;		_SystemArbiter_Initialize
 15091 ;;		_TMR2_Initialize
 15092 ;;		_TMR5_Initialize
 15093 ;;		_TMR6_Initialize
 15094 ;;		_UART1_Initialize
 15095 ;; This function is called by:
 15096 ;;		_main
 15097 ;; This function uses a non-reentrant model
 15098 ;;
 15099                           
 15100                           	psect	text72
 15101  01408E                     __ptext72:
 15102                           	callstack 0
 15103  01408E                     _SYSTEM_Initialize:
 15104                           	callstack 21
 15105                           
 15106                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 15107                           
 15108                           ;incstack = 0
 15109  01408E  EC81  F09F         	call	_INTERRUPT_Initialize	;wreg free
 15110                           
 15111                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 15112  014092  ECAA  F0A2         	call	_PMD_Initialize	;wreg free
 15113                           
 15114                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 15115  014096  ECEA  F097         	call	_PIN_MANAGER_Initialize	;wreg free
 15116                           
 15117                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 15118  01409A  EC27  F0A3         	call	_OSCILLATOR_Initialize	;wreg free
 15119                           
 15120                           ; BSR set to: 57
 15121                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 15122  01409E  EC9E  F09C         	call	_ADCC_Initialize	;wreg free
 15123                           
 15124                           ; BSR set to: 57
 15125                           ;mcc_generated_files/mcc.c: 57:     DMA1_Initialize();
 15126  0140A2  EC73  F09D         	call	_DMA1_Initialize	;wreg free
 15127                           
 15128                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 15129  0140A6  ECFB  F0A2         	call	_TMR2_Initialize	;wreg free
 15130                           
 15131                           ;mcc_generated_files/mcc.c: 59:     PWM6_Initialize();
 15132  0140AA  EC4F  F0A3         	call	_PWM6_Initialize	;wreg free
 15133                           
 15134                           ; BSR set to: 63
 15135                           ;mcc_generated_files/mcc.c: 60:     TMR6_Initialize();
 15136  0140AE  EC1D  F0A2         	call	_TMR6_Initialize	;wreg free
 15137                           
 15138                           ; BSR set to: 57
 15139                           ;mcc_generated_files/mcc.c: 61:     DAC1_Initialize();
 15140  0140B2  ECEC  F0A3         	call	_DAC1_Initialize	;wreg free
 15141                           
 15142                           ;mcc_generated_files/mcc.c: 62:     TMR5_Initialize();
 15143  0140B6  EC15  F09F         	call	_TMR5_Initialize	;wreg free
 15144                           
 15145                           ; BSR set to: 57
 15146                           ;mcc_generated_files/mcc.c: 63:     PWM5_Initialize();
 15147  0140BA  EC5B  F0A3         	call	_PWM5_Initialize	;wreg free
 15148                           
 15149                           ; BSR set to: 63
 15150                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 15151  0140BE  EC2D  F09A         	call	_UART1_Initialize	;wreg free
 15152                           
 15153                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 15154  0140C2  EC42  F0A3         	call	_SPI1_Initialize	;wreg free
 15155                           
 15156                           ;mcc_generated_files/mcc.c: 66:     SystemArbiter_Initialize();
 15157  0140C6  ECD7  F0A3         	call	_SystemArbiter_Initialize	;wreg free
 15158                           
 15159                           ; BSR set to: 57
 15160  0140CA  0012               	return		;funcret
 15161  0140CC                     __end_of_SYSTEM_Initialize:
 15162                           	callstack 0
 15163                           
 15164 ;; *************** function _UART1_Initialize *****************
 15165 ;; Defined at:
 15166 ;;		line 87 in file "mcc_generated_files/uart1.c"
 15167 ;; Parameters:    Size  Location     Type
 15168 ;;		None
 15169 ;; Auto vars:     Size  Location     Type
 15170 ;;		None
 15171 ;; Return value:  Size  Location     Type
 15172 ;;                  1    wreg      void 
 15173 ;; Registers used:
 15174 ;;		wreg, status,2, status,0, cstack
 15175 ;; Tracked objects:
 15176 ;;		On entry : 3F/3F
 15177 ;;		On exit  : 3F/39
 15178 ;;		Unchanged: 0/0
 15179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15184 ;;Total ram usage:        0 bytes
 15185 ;; Hardware stack levels used: 1
 15186 ;; Hardware stack levels required when called: 8
 15187 ;; This function calls:
 15188 ;;		_UART1_SetErrorHandler
 15189 ;;		_UART1_SetFramingErrorHandler
 15190 ;;		_UART1_SetOverrunErrorHandler
 15191 ;;		_UART1_SetRxInterruptHandler
 15192 ;;		_UART1_SetTxInterruptHandler
 15193 ;; This function is called by:
 15194 ;;		_SYSTEM_Initialize
 15195 ;; This function uses a non-reentrant model
 15196 ;;
 15197                           
 15198                           	psect	text73
 15199  01345A                     __ptext73:
 15200                           	callstack 0
 15201  01345A                     _UART1_Initialize:
 15202                           	callstack 21
 15203                           
 15204                           ; BSR set to: 63
 15205                           ;mcc_generated_files/uart1.c: 90:     PIE3bits.U1RXIE = 0;
 15206                           
 15207                           ; BSR set to: 57
 15208                           ;incstack = 0
 15209  01345A  0139               	movlb	57	; () banked
 15210  01345C  9793               	bcf	147,3,b	;volatile
 15211                           
 15212                           ; BSR set to: 57
 15213                           ;mcc_generated_files/uart1.c: 91:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 15214  01345E  0E72               	movlw	low _UART1_Receive_ISR
 15215  013460  6E18               	movwf	UART1_SetRxInterruptHandler@InterruptHandler^0,c
 15216  013462  0E36               	movlw	high _UART1_Receive_ISR
 15217  013464  6E19               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)^0,c
 15218  013466  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 15219  013468  6E1A               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+2)^0,c
 15220  01346A  ECAD  F0A3         	call	_UART1_SetRxInterruptHandler	;wreg free
 15221                           
 15222                           ; BSR set to: 57
 15223                           ;mcc_generated_files/uart1.c: 92:     PIE3bits.U1TXIE = 0;
 15224  01346E  9993               	bcf	147,4,b	;volatile
 15225                           
 15226                           ;mcc_generated_files/uart1.c: 93:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 15227  013470  0E68               	movlw	low _UART1_Transmit_ISR
 15228  013472  6E18               	movwf	UART1_SetTxInterruptHandler@InterruptHandler^0,c
 15229  013474  0E44               	movlw	high _UART1_Transmit_ISR
 15230  013476  6E19               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)^0,c
 15231  013478  0E01               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 15232  01347A  6E1A               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+2)^0,c
 15233  01347C  ECA6  F0A3         	call	_UART1_SetTxInterruptHandler	;wreg free
 15234                           
 15235                           ; BSR set to: 57
 15236                           ;mcc_generated_files/uart1.c: 98:     U1P1L = 0x00;
 15237  013480  0E00               	movlw	0
 15238  013482  013D               	movlb	61	; () banked
 15239  013484  6FEC               	movwf	236,b	;volatile
 15240                           
 15241                           ; BSR set to: 61
 15242                           ;mcc_generated_files/uart1.c: 101:     U1P1H = 0x00;
 15243  013486  0E00               	movlw	0
 15244  013488  6FED               	movwf	237,b	;volatile
 15245                           
 15246                           ; BSR set to: 61
 15247                           ;mcc_generated_files/uart1.c: 104:     U1P2L = 0x00;
 15248  01348A  0E00               	movlw	0
 15249  01348C  6FEE               	movwf	238,b	;volatile
 15250                           
 15251                           ; BSR set to: 61
 15252                           ;mcc_generated_files/uart1.c: 107:     U1P2H = 0x00;
 15253  01348E  0E00               	movlw	0
 15254  013490  6FEF               	movwf	239,b	;volatile
 15255                           
 15256                           ; BSR set to: 61
 15257                           ;mcc_generated_files/uart1.c: 110:     U1P3L = 0x00;
 15258  013492  0E00               	movlw	0
 15259  013494  6FF0               	movwf	240,b	;volatile
 15260                           
 15261                           ; BSR set to: 61
 15262                           ;mcc_generated_files/uart1.c: 113:     U1P3H = 0x00;
 15263  013496  0E00               	movlw	0
 15264  013498  6FF1               	movwf	241,b	;volatile
 15265                           
 15266                           ; BSR set to: 61
 15267                           ;mcc_generated_files/uart1.c: 116:     U1CON0 = 0xB0;
 15268  01349A  0EB0               	movlw	176
 15269  01349C  6FF2               	movwf	242,b	;volatile
 15270                           
 15271                           ; BSR set to: 61
 15272                           ;mcc_generated_files/uart1.c: 119:     U1CON1 = 0x80;
 15273  01349E  0E80               	movlw	128
 15274  0134A0  6FF3               	movwf	243,b	;volatile
 15275                           
 15276                           ; BSR set to: 61
 15277                           ;mcc_generated_files/uart1.c: 122:     U1CON2 = 0x00;
 15278  0134A2  0E00               	movlw	0
 15279  0134A4  6FF4               	movwf	244,b	;volatile
 15280                           
 15281                           ; BSR set to: 61
 15282                           ;mcc_generated_files/uart1.c: 125:     U1BRGL = 0x8A;
 15283  0134A6  0E8A               	movlw	138
 15284  0134A8  6FF5               	movwf	245,b	;volatile
 15285                           
 15286                           ; BSR set to: 61
 15287                           ;mcc_generated_files/uart1.c: 128:     U1BRGH = 0x00;
 15288  0134AA  0E00               	movlw	0
 15289  0134AC  6FF6               	movwf	246,b	;volatile
 15290                           
 15291                           ; BSR set to: 61
 15292                           ;mcc_generated_files/uart1.c: 131:     U1FIFO = 0x00;
 15293  0134AE  0E00               	movlw	0
 15294  0134B0  6FF7               	movwf	247,b	;volatile
 15295                           
 15296                           ; BSR set to: 61
 15297                           ;mcc_generated_files/uart1.c: 134:     U1UIR = 0x00;
 15298  0134B2  0E00               	movlw	0
 15299  0134B4  6FF8               	movwf	248,b	;volatile
 15300                           
 15301                           ; BSR set to: 61
 15302                           ;mcc_generated_files/uart1.c: 137:     U1ERRIR = 0x00;
 15303  0134B6  0E00               	movlw	0
 15304  0134B8  6FF9               	movwf	249,b	;volatile
 15305                           
 15306                           ; BSR set to: 61
 15307                           ;mcc_generated_files/uart1.c: 140:     U1ERRIE = 0x00;
 15308  0134BA  0E00               	movlw	0
 15309  0134BC  6FFA               	movwf	250,b	;volatile
 15310                           
 15311                           ; BSR set to: 61
 15312                           ;mcc_generated_files/uart1.c: 143:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
 15313  0134BE  0E40               	movlw	low _UART1_DefaultFramingErrorHandler
 15314  0134C0  6E18               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
 15315  0134C2  0E48               	movlw	high _UART1_DefaultFramingErrorHandler
 15316  0134C4  6E19               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
 15317  0134C6  0E01               	movlw	low (_UART1_DefaultFramingErrorHandler shr (0+16))
 15318  0134C8  6E1A               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+2)^0,c
 15319  0134CA  ECBB  F0A3         	call	_UART1_SetFramingErrorHandler	;wreg free
 15320                           
 15321                           ; BSR set to: 61
 15322                           ;mcc_generated_files/uart1.c: 144:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
 15323  0134CE  0E3E               	movlw	low _UART1_DefaultOverrunErrorHandler
 15324  0134D0  6E18               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
 15325  0134D2  0E48               	movlw	high _UART1_DefaultOverrunErrorHandler
 15326  0134D4  6E19               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
 15327  0134D6  0E01               	movlw	low (_UART1_DefaultOverrunErrorHandler shr (0+16))
 15328  0134D8  6E1A               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+2)^0,c
 15329  0134DA  ECB4  F0A3         	call	_UART1_SetOverrunErrorHandler	;wreg free
 15330                           
 15331                           ; BSR set to: 61
 15332                           ;mcc_generated_files/uart1.c: 145:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
 15333  0134DE  0E2C               	movlw	low _UART1_DefaultErrorHandler
 15334  0134E0  6E18               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
 15335  0134E2  0E48               	movlw	high _UART1_DefaultErrorHandler
 15336  0134E4  6E19               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
 15337  0134E6  0E01               	movlw	low (_UART1_DefaultErrorHandler shr (0+16))
 15338  0134E8  6E1A               	movwf	(UART1_SetErrorHandler@interruptHandler+2)^0,c
 15339  0134EA  ECC2  F0A3         	call	_UART1_SetErrorHandler	;wreg free
 15340                           
 15341                           ;mcc_generated_files/uart1.c: 147:     uart1RxLastError.status = 0;
 15342  0134EE  0E00               	movlw	0
 15343  0134F0  6E42               	movwf	_uart1RxLastError^0,c	;volatile
 15344                           
 15345                           ;mcc_generated_files/uart1.c: 150:     uart1TxHead = 0;
 15346  0134F2  0E00               	movlw	0
 15347  0134F4  6E48               	movwf	_uart1TxHead^0,c	;volatile
 15348                           
 15349                           ;mcc_generated_files/uart1.c: 151:     uart1TxTail = 0;
 15350  0134F6  0E00               	movlw	0
 15351  0134F8  6E47               	movwf	_uart1TxTail^0,c	;volatile
 15352                           
 15353                           ;mcc_generated_files/uart1.c: 152:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 15354  0134FA  0E08               	movlw	8
 15355  0134FC  6E46               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 15356                           
 15357                           ;mcc_generated_files/uart1.c: 153:     uart1RxHead = 0;
 15358  0134FE  0E00               	movlw	0
 15359  013500  6E45               	movwf	_uart1RxHead^0,c	;volatile
 15360                           
 15361                           ;mcc_generated_files/uart1.c: 154:     uart1RxTail = 0;
 15362  013502  0E00               	movlw	0
 15363  013504  6E44               	movwf	_uart1RxTail^0,c	;volatile
 15364                           
 15365                           ;mcc_generated_files/uart1.c: 155:     uart1RxCount = 0;
 15366  013506  0E00               	movlw	0
 15367  013508  6E43               	movwf	_uart1RxCount^0,c	;volatile
 15368                           
 15369                           ; BSR set to: 61
 15370                           ;mcc_generated_files/uart1.c: 158:     PIE3bits.U1RXIE = 1;
 15371  01350A  0139               	movlb	57	; () banked
 15372  01350C  8793               	bsf	147,3,b	;volatile
 15373                           
 15374                           ; BSR set to: 57
 15375  01350E  0012               	return		;funcret
 15376  013510                     __end_of_UART1_Initialize:
 15377                           	callstack 0
 15378                           
 15379 ;; *************** function _UART1_SetTxInterruptHandler *****************
 15380 ;; Defined at:
 15381 ;;		line 333 in file "mcc_generated_files/uart1.c"
 15382 ;; Parameters:    Size  Location     Type
 15383 ;;  InterruptHan    3   23[COMRAM] PTR FTN()void 
 15384 ;;		 -> UART1_Transmit_ISR(1), 
 15385 ;; Auto vars:     Size  Location     Type
 15386 ;;		None
 15387 ;; Return value:  Size  Location     Type
 15388 ;;                  1    wreg      void 
 15389 ;; Registers used:
 15390 ;;		wreg, status,2, status,0
 15391 ;; Tracked objects:
 15392 ;;		On entry : 3F/39
 15393 ;;		On exit  : 3F/39
 15394 ;;		Unchanged: 3E/0
 15395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15396 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15399 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15400 ;;Total ram usage:        3 bytes
 15401 ;; Hardware stack levels used: 1
 15402 ;; Hardware stack levels required when called: 7
 15403 ;; This function calls:
 15404 ;;		Nothing
 15405 ;; This function is called by:
 15406 ;;		_UART1_Initialize
 15407 ;; This function uses a non-reentrant model
 15408 ;;
 15409                           
 15410                           	psect	text74
 15411  01474C                     __ptext74:
 15412                           	callstack 0
 15413  01474C                     _UART1_SetTxInterruptHandler:
 15414                           	callstack 21
 15415                           
 15416                           ; BSR set to: 57
 15417                           ;mcc_generated_files/uart1.c: 334:     UART1_TxInterruptHandler = InterruptHandler;
 15418                           
 15419                           ; BSR set to: 57
 15420                           ;incstack = 0
 15421  01474C  C018  F0F0         	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
 15422  014750  C019  F0F1         	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
 15423  014754  C01A  F0F2         	movff	UART1_SetTxInterruptHandler@InterruptHandler+2,_UART1_TxInterruptHandler+2
 15424                           
 15425                           ; BSR set to: 57
 15426  014758  0012               	return		;funcret
 15427  01475A                     __end_of_UART1_SetTxInterruptHandler:
 15428                           	callstack 0
 15429                           
 15430 ;; *************** function _UART1_SetRxInterruptHandler *****************
 15431 ;; Defined at:
 15432 ;;		line 329 in file "mcc_generated_files/uart1.c"
 15433 ;; Parameters:    Size  Location     Type
 15434 ;;  InterruptHan    3   23[COMRAM] PTR FTN()void 
 15435 ;;		 -> UART1_Receive_ISR(1), 
 15436 ;; Auto vars:     Size  Location     Type
 15437 ;;		None
 15438 ;; Return value:  Size  Location     Type
 15439 ;;                  1    wreg      void 
 15440 ;; Registers used:
 15441 ;;		wreg, status,2, status,0
 15442 ;; Tracked objects:
 15443 ;;		On entry : 3F/39
 15444 ;;		On exit  : 3F/39
 15445 ;;		Unchanged: 3E/0
 15446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15447 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15450 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15451 ;;Total ram usage:        3 bytes
 15452 ;; Hardware stack levels used: 1
 15453 ;; Hardware stack levels required when called: 7
 15454 ;; This function calls:
 15455 ;;		Nothing
 15456 ;; This function is called by:
 15457 ;;		_UART1_Initialize
 15458 ;; This function uses a non-reentrant model
 15459 ;;
 15460                           
 15461                           	psect	text75
 15462  01475A                     __ptext75:
 15463                           	callstack 0
 15464  01475A                     _UART1_SetRxInterruptHandler:
 15465                           	callstack 21
 15466                           
 15467                           ; BSR set to: 57
 15468                           ;mcc_generated_files/uart1.c: 330:     UART1_RxInterruptHandler = InterruptHandler;
 15469                           
 15470                           ; BSR set to: 57
 15471                           ;incstack = 0
 15472  01475A  C018  F037         	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
 15473  01475E  C019  F038         	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
 15474  014762  C01A  F039         	movff	UART1_SetRxInterruptHandler@InterruptHandler+2,_UART1_RxInterruptHandler+2
 15475                           
 15476                           ; BSR set to: 57
 15477  014766  0012               	return		;funcret
 15478  014768                     __end_of_UART1_SetRxInterruptHandler:
 15479                           	callstack 0
 15480                           
 15481 ;; *************** function _UART1_SetOverrunErrorHandler *****************
 15482 ;; Defined at:
 15483 ;;		line 319 in file "mcc_generated_files/uart1.c"
 15484 ;; Parameters:    Size  Location     Type
 15485 ;;  interruptHan    3   23[COMRAM] PTR FTN()void 
 15486 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
 15487 ;; Auto vars:     Size  Location     Type
 15488 ;;		None
 15489 ;; Return value:  Size  Location     Type
 15490 ;;                  1    wreg      void 
 15491 ;; Registers used:
 15492 ;;		wreg, status,2, status,0
 15493 ;; Tracked objects:
 15494 ;;		On entry : 3F/3D
 15495 ;;		On exit  : 3F/3D
 15496 ;;		Unchanged: 3E/0
 15497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15498 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15501 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15502 ;;Total ram usage:        3 bytes
 15503 ;; Hardware stack levels used: 1
 15504 ;; Hardware stack levels required when called: 7
 15505 ;; This function calls:
 15506 ;;		Nothing
 15507 ;; This function is called by:
 15508 ;;		_UART1_Initialize
 15509 ;; This function uses a non-reentrant model
 15510 ;;
 15511                           
 15512                           	psect	text76
 15513  014768                     __ptext76:
 15514                           	callstack 0
 15515  014768                     _UART1_SetOverrunErrorHandler:
 15516                           	callstack 21
 15517                           
 15518                           ; BSR set to: 61
 15519                           ;mcc_generated_files/uart1.c: 320:     UART1_OverrunErrorHandler = interruptHandler;
 15520                           
 15521                           ; BSR set to: 57
 15522                           ;incstack = 0
 15523  014768  C018  F143         	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
 15524  01476C  C019  F144         	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
 15525  014770  C01A  F145         	movff	UART1_SetOverrunErrorHandler@interruptHandler+2,_UART1_OverrunErrorHandler+2
 15526                           
 15527                           ; BSR set to: 61
 15528  014774  0012               	return		;funcret
 15529  014776                     __end_of_UART1_SetOverrunErrorHandler:
 15530                           	callstack 0
 15531                           
 15532 ;; *************** function _UART1_SetFramingErrorHandler *****************
 15533 ;; Defined at:
 15534 ;;		line 315 in file "mcc_generated_files/uart1.c"
 15535 ;; Parameters:    Size  Location     Type
 15536 ;;  interruptHan    3   23[COMRAM] PTR FTN()void 
 15537 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
 15538 ;; Auto vars:     Size  Location     Type
 15539 ;;		None
 15540 ;; Return value:  Size  Location     Type
 15541 ;;                  1    wreg      void 
 15542 ;; Registers used:
 15543 ;;		wreg, status,2, status,0
 15544 ;; Tracked objects:
 15545 ;;		On entry : 3F/3D
 15546 ;;		On exit  : 3F/3D
 15547 ;;		Unchanged: 3E/0
 15548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15549 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15552 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15553 ;;Total ram usage:        3 bytes
 15554 ;; Hardware stack levels used: 1
 15555 ;; Hardware stack levels required when called: 7
 15556 ;; This function calls:
 15557 ;;		Nothing
 15558 ;; This function is called by:
 15559 ;;		_UART1_Initialize
 15560 ;; This function uses a non-reentrant model
 15561 ;;
 15562                           
 15563                           	psect	text77
 15564  014776                     __ptext77:
 15565                           	callstack 0
 15566  014776                     _UART1_SetFramingErrorHandler:
 15567                           	callstack 21
 15568                           
 15569                           ; BSR set to: 61
 15570                           ;mcc_generated_files/uart1.c: 316:     UART1_FramingErrorHandler = interruptHandler;
 15571                           
 15572                           ; BSR set to: 61
 15573                           ;incstack = 0
 15574  014776  C018  F0E7         	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
 15575  01477A  C019  F0E8         	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
 15576  01477E  C01A  F0E9         	movff	UART1_SetFramingErrorHandler@interruptHandler+2,_UART1_FramingErrorHandler+2
 15577                           
 15578                           ; BSR set to: 61
 15579  014782  0012               	return		;funcret
 15580  014784                     __end_of_UART1_SetFramingErrorHandler:
 15581                           	callstack 0
 15582                           
 15583 ;; *************** function _UART1_SetErrorHandler *****************
 15584 ;; Defined at:
 15585 ;;		line 323 in file "mcc_generated_files/uart1.c"
 15586 ;; Parameters:    Size  Location     Type
 15587 ;;  interruptHan    3   23[COMRAM] PTR FTN()void 
 15588 ;;		 -> UART1_DefaultErrorHandler(1), 
 15589 ;; Auto vars:     Size  Location     Type
 15590 ;;		None
 15591 ;; Return value:  Size  Location     Type
 15592 ;;                  1    wreg      void 
 15593 ;; Registers used:
 15594 ;;		wreg, status,2, status,0
 15595 ;; Tracked objects:
 15596 ;;		On entry : 3F/3D
 15597 ;;		On exit  : 3F/3D
 15598 ;;		Unchanged: 3E/0
 15599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15600 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15603 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15604 ;;Total ram usage:        3 bytes
 15605 ;; Hardware stack levels used: 1
 15606 ;; Hardware stack levels required when called: 7
 15607 ;; This function calls:
 15608 ;;		Nothing
 15609 ;; This function is called by:
 15610 ;;		_UART1_Initialize
 15611 ;; This function uses a non-reentrant model
 15612 ;;
 15613                           
 15614                           	psect	text78
 15615  014784                     __ptext78:
 15616                           	callstack 0
 15617  014784                     _UART1_SetErrorHandler:
 15618                           	callstack 21
 15619                           
 15620                           ; BSR set to: 61
 15621                           ;mcc_generated_files/uart1.c: 324:     UART1_ErrorHandler = interruptHandler;
 15622                           
 15623                           ; BSR set to: 61
 15624                           ;incstack = 0
 15625  014784  C018  F140         	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
 15626  014788  C019  F141         	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
 15627  01478C  C01A  F142         	movff	UART1_SetErrorHandler@interruptHandler+2,_UART1_ErrorHandler+2
 15628                           
 15629                           ; BSR set to: 61
 15630  014790  0012               	return		;funcret
 15631  014792                     __end_of_UART1_SetErrorHandler:
 15632                           	callstack 0
 15633                           
 15634 ;; *************** function _TMR6_Initialize *****************
 15635 ;; Defined at:
 15636 ;;		line 65 in file "mcc_generated_files/tmr6.c"
 15637 ;; Parameters:    Size  Location     Type
 15638 ;;		None
 15639 ;; Auto vars:     Size  Location     Type
 15640 ;;		None
 15641 ;; Return value:  Size  Location     Type
 15642 ;;                  1    wreg      void 
 15643 ;; Registers used:
 15644 ;;		wreg, status,2, status,0, cstack
 15645 ;; Tracked objects:
 15646 ;;		On entry : 3F/3F
 15647 ;;		On exit  : 3F/39
 15648 ;;		Unchanged: 0/0
 15649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15654 ;;Total ram usage:        0 bytes
 15655 ;; Hardware stack levels used: 1
 15656 ;; Hardware stack levels required when called: 8
 15657 ;; This function calls:
 15658 ;;		_TMR6_SetInterruptHandler
 15659 ;; This function is called by:
 15660 ;;		_SYSTEM_Initialize
 15661 ;; This function uses a non-reentrant model
 15662 ;;
 15663                           
 15664                           	psect	text79
 15665  01443A                     __ptext79:
 15666                           	callstack 0
 15667  01443A                     _TMR6_Initialize:
 15668                           	callstack 21
 15669                           
 15670                           ; BSR set to: 63
 15671                           ;mcc_generated_files/tmr6.c: 70:     T6CLKCON = 0x01;
 15672                           
 15673                           ; BSR set to: 61
 15674                           ;incstack = 0
 15675  01443A  0E01               	movlw	1
 15676  01443C  6E96               	movwf	150,c	;volatile
 15677                           
 15678                           ;mcc_generated_files/tmr6.c: 73:     T6HLT = 0x20;
 15679  01443E  0E20               	movlw	32
 15680  014440  6E95               	movwf	149,c	;volatile
 15681                           
 15682                           ;mcc_generated_files/tmr6.c: 76:     T6RST = 0x00;
 15683  014442  0E00               	movlw	0
 15684  014444  6E97               	movwf	151,c	;volatile
 15685                           
 15686                           ;mcc_generated_files/tmr6.c: 79:     T6PR = 0x4D;
 15687  014446  0E4D               	movlw	77
 15688  014448  6E93               	movwf	147,c	;volatile
 15689                           
 15690                           ;mcc_generated_files/tmr6.c: 82:     T6TMR = 0x00;
 15691  01444A  0E00               	movlw	0
 15692  01444C  6E92               	movwf	146,c	;volatile
 15693                           
 15694                           ; BSR set to: 63
 15695                           ;mcc_generated_files/tmr6.c: 85:     PIR9bits.TMR6IF = 0;
 15696  01444E  0139               	movlb	57	; () banked
 15697  014450  91A9               	bcf	169,0,b	;volatile
 15698                           
 15699                           ; BSR set to: 57
 15700                           ;mcc_generated_files/tmr6.c: 88:     PIE9bits.TMR6IE = 1;
 15701  014452  8199               	bsf	153,0,b	;volatile
 15702                           
 15703                           ; BSR set to: 57
 15704                           ;mcc_generated_files/tmr6.c: 91:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 15705  014454  0E44               	movlw	low _TMR6_DefaultInterruptHandler
 15706  014456  6E18               	movwf	TMR6_SetInterruptHandler@InterruptHandler^0,c
 15707  014458  0E48               	movlw	high _TMR6_DefaultInterruptHandler
 15708  01445A  6E19               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)^0,c
 15709  01445C  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 15710  01445E  6E1A               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)^0,c
 15711  014460  ECC9  F0A3         	call	_TMR6_SetInterruptHandler	;wreg free
 15712                           
 15713                           ; BSR set to: 57
 15714                           ;mcc_generated_files/tmr6.c: 94:     T6CON = 0xFF;
 15715  014464  6894               	setf	148,c	;volatile
 15716                           
 15717                           ; BSR set to: 57
 15718  014466  0012               	return		;funcret
 15719  014468                     __end_of_TMR6_Initialize:
 15720                           	callstack 0
 15721                           
 15722 ;; *************** function _TMR6_SetInterruptHandler *****************
 15723 ;; Defined at:
 15724 ;;		line 194 in file "mcc_generated_files/tmr6.c"
 15725 ;; Parameters:    Size  Location     Type
 15726 ;;  InterruptHan    3   23[COMRAM] PTR FTN()void 
 15727 ;;		 -> Led_Blink(1), TMR6_DefaultInterruptHandler(1), 
 15728 ;; Auto vars:     Size  Location     Type
 15729 ;;		None
 15730 ;; Return value:  Size  Location     Type
 15731 ;;                  1    wreg      void 
 15732 ;; Registers used:
 15733 ;;		wreg, status,2, status,0
 15734 ;; Tracked objects:
 15735 ;;		On entry : 3F/39
 15736 ;;		On exit  : 3F/39
 15737 ;;		Unchanged: 3E/0
 15738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15739 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15742 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15743 ;;Total ram usage:        3 bytes
 15744 ;; Hardware stack levels used: 1
 15745 ;; Hardware stack levels required when called: 7
 15746 ;; This function calls:
 15747 ;;		Nothing
 15748 ;; This function is called by:
 15749 ;;		_TMR6_Initialize
 15750 ;;		_main
 15751 ;; This function uses a non-reentrant model
 15752 ;;
 15753                           
 15754                           	psect	text80
 15755  014792                     __ptext80:
 15756                           	callstack 0
 15757  014792                     _TMR6_SetInterruptHandler:
 15758                           	callstack 23
 15759                           
 15760                           ; BSR set to: 57
 15761                           ;mcc_generated_files/tmr6.c: 195:     TMR6_InterruptHandler = InterruptHandler;
 15762                           
 15763                           ; BSR set to: 57
 15764                           ;incstack = 0
 15765  014792  C018  F0EA         	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
 15766  014796  C019  F0EB         	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
 15767  01479A  C01A  F0EC         	movff	TMR6_SetInterruptHandler@InterruptHandler+2,_TMR6_InterruptHandler+2
 15768                           
 15769                           ; BSR set to: 57
 15770  01479E  0012               	return		;funcret
 15771  0147A0                     __end_of_TMR6_SetInterruptHandler:
 15772                           	callstack 0
 15773                           
 15774 ;; *************** function _TMR5_Initialize *****************
 15775 ;; Defined at:
 15776 ;;		line 65 in file "mcc_generated_files/tmr5.c"
 15777 ;; Parameters:    Size  Location     Type
 15778 ;;		None
 15779 ;; Auto vars:     Size  Location     Type
 15780 ;;		None
 15781 ;; Return value:  Size  Location     Type
 15782 ;;                  1    wreg      void 
 15783 ;; Registers used:
 15784 ;;		wreg, status,2, status,0, cstack
 15785 ;; Tracked objects:
 15786 ;;		On entry : 3F/3E
 15787 ;;		On exit  : 3F/39
 15788 ;;		Unchanged: 0/0
 15789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15792 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15793 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15794 ;;Total ram usage:        2 bytes
 15795 ;; Hardware stack levels used: 1
 15796 ;; Hardware stack levels required when called: 8
 15797 ;; This function calls:
 15798 ;;		_TMR5_SetInterruptHandler
 15799 ;; This function is called by:
 15800 ;;		_SYSTEM_Initialize
 15801 ;; This function uses a non-reentrant model
 15802 ;;
 15803                           
 15804                           	psect	text81
 15805  013E2A                     __ptext81:
 15806                           	callstack 0
 15807  013E2A                     _TMR5_Initialize:
 15808                           	callstack 21
 15809                           
 15810                           ; BSR set to: 62
 15811                           ;mcc_generated_files/tmr5.c: 70:     T5GCON = 0x00;
 15812                           
 15813                           ; BSR set to: 57
 15814                           ;incstack = 0
 15815  013E2A  0E00               	movlw	0
 15816  013E2C  6E9B               	movwf	155,c	;volatile
 15817                           
 15818                           ;mcc_generated_files/tmr5.c: 73:     T5GATE = 0x00;
 15819  013E2E  0E00               	movlw	0
 15820  013E30  6E9C               	movwf	156,c	;volatile
 15821                           
 15822                           ;mcc_generated_files/tmr5.c: 76:     T5CLK = 0x02;
 15823  013E32  0E02               	movlw	2
 15824  013E34  6E9D               	movwf	157,c	;volatile
 15825                           
 15826                           ;mcc_generated_files/tmr5.c: 79:     TMR5H = 0x83;
 15827  013E36  0E83               	movlw	131
 15828  013E38  6E99               	movwf	153,c	;volatile
 15829                           
 15830                           ;mcc_generated_files/tmr5.c: 82:     TMR5L = 0x00;
 15831  013E3A  0E00               	movlw	0
 15832  013E3C  6E98               	movwf	152,c	;volatile
 15833                           
 15834                           ; BSR set to: 62
 15835                           ;mcc_generated_files/tmr5.c: 85:     PIR8bits.TMR5IF = 0;
 15836  013E3E  0139               	movlb	57	; () banked
 15837  013E40  9DA8               	bcf	168,6,b	;volatile
 15838                           
 15839                           ; BSR set to: 57
 15840                           ;mcc_generated_files/tmr5.c: 88:     timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 15841  013E42  5098               	movf	152,w,c	;volatile
 15842  013E44  006F FE64  F01B    	movff	16281,??_TMR5_Initialize	;volatile
 15843  013E4A  6A1C               	clrf	(??_TMR5_Initialize+1)^0,c
 15844  013E4C  C01B  F01C         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 15845  013E50  6A1B               	clrf	??_TMR5_Initialize^0,c
 15846  013E52  101B               	iorwf	??_TMR5_Initialize^0,w,c
 15847  013E54  6E3C               	movwf	_timer5ReloadVal^0,c	;volatile
 15848  013E56  501C               	movf	(??_TMR5_Initialize+1)^0,w,c
 15849  013E58  6E3D               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 15850                           
 15851                           ; BSR set to: 57
 15852                           ;mcc_generated_files/tmr5.c: 91:     PIE8bits.TMR5IE = 1;
 15853  013E5A  8D98               	bsf	152,6,b	;volatile
 15854                           
 15855                           ; BSR set to: 57
 15856                           ;mcc_generated_files/tmr5.c: 94:     TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandl
      +                          er);
 15857  013E5C  0E4A               	movlw	low _TMR5_DefaultInterruptHandler
 15858  013E5E  6E18               	movwf	TMR5_SetInterruptHandler@InterruptHandler^0,c
 15859  013E60  0E48               	movlw	high _TMR5_DefaultInterruptHandler
 15860  013E62  6E19               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)^0,c
 15861  013E64  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 15862  013E66  6E1A               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)^0,c
 15863  013E68  ECD0  F0A3         	call	_TMR5_SetInterruptHandler	;wreg free
 15864                           
 15865                           ; BSR set to: 57
 15866                           ;mcc_generated_files/tmr5.c: 97:     T5CON = 0x01;
 15867  013E6C  0E01               	movlw	1
 15868  013E6E  6E9A               	movwf	154,c	;volatile
 15869                           
 15870                           ; BSR set to: 57
 15871  013E70  0012               	return		;funcret
 15872  013E72                     __end_of_TMR5_Initialize:
 15873                           	callstack 0
 15874                           
 15875 ;; *************** function _TMR5_SetInterruptHandler *****************
 15876 ;; Defined at:
 15877 ;;		line 179 in file "mcc_generated_files/tmr5.c"
 15878 ;; Parameters:    Size  Location     Type
 15879 ;;  InterruptHan    3   23[COMRAM] PTR FTN()void 
 15880 ;;		 -> Timers_Isr(1), TMR5_DefaultInterruptHandler(1), 
 15881 ;; Auto vars:     Size  Location     Type
 15882 ;;		None
 15883 ;; Return value:  Size  Location     Type
 15884 ;;                  1    wreg      void 
 15885 ;; Registers used:
 15886 ;;		wreg, status,2, status,0
 15887 ;; Tracked objects:
 15888 ;;		On entry : 3F/39
 15889 ;;		On exit  : 3F/39
 15890 ;;		Unchanged: 3E/0
 15891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15892 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15895 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15896 ;;Total ram usage:        3 bytes
 15897 ;; Hardware stack levels used: 1
 15898 ;; Hardware stack levels required when called: 7
 15899 ;; This function calls:
 15900 ;;		Nothing
 15901 ;; This function is called by:
 15902 ;;		_TMR5_Initialize
 15903 ;;		_main
 15904 ;; This function uses a non-reentrant model
 15905 ;;
 15906                           
 15907                           	psect	text82
 15908  0147A0                     __ptext82:
 15909                           	callstack 0
 15910  0147A0                     _TMR5_SetInterruptHandler:
 15911                           	callstack 23
 15912                           
 15913                           ; BSR set to: 57
 15914                           ;mcc_generated_files/tmr5.c: 180:     TMR5_InterruptHandler = InterruptHandler;
 15915                           
 15916                           ; BSR set to: 57
 15917                           ;incstack = 0
 15918  0147A0  C018  F0E4         	movff	TMR5_SetInterruptHandler@InterruptHandler,_TMR5_InterruptHandler
 15919  0147A4  C019  F0E5         	movff	TMR5_SetInterruptHandler@InterruptHandler+1,_TMR5_InterruptHandler+1
 15920  0147A8  C01A  F0E6         	movff	TMR5_SetInterruptHandler@InterruptHandler+2,_TMR5_InterruptHandler+2
 15921                           
 15922                           ; BSR set to: 57
 15923  0147AC  0012               	return		;funcret
 15924  0147AE                     __end_of_TMR5_SetInterruptHandler:
 15925                           	callstack 0
 15926                           
 15927 ;; *************** function _TMR2_Initialize *****************
 15928 ;; Defined at:
 15929 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 15930 ;; Parameters:    Size  Location     Type
 15931 ;;		None
 15932 ;; Auto vars:     Size  Location     Type
 15933 ;;		None
 15934 ;; Return value:  Size  Location     Type
 15935 ;;                  1    wreg      void 
 15936 ;; Registers used:
 15937 ;;		wreg, status,2
 15938 ;; Tracked objects:
 15939 ;;		On entry : 3F/3B
 15940 ;;		On exit  : 3F/39
 15941 ;;		Unchanged: 0/0
 15942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15947 ;;Total ram usage:        0 bytes
 15948 ;; Hardware stack levels used: 1
 15949 ;; Hardware stack levels required when called: 7
 15950 ;; This function calls:
 15951 ;;		Nothing
 15952 ;; This function is called by:
 15953 ;;		_SYSTEM_Initialize
 15954 ;; This function uses a non-reentrant model
 15955 ;;
 15956                           
 15957                           	psect	text83
 15958  0145F6                     __ptext83:
 15959                           	callstack 0
 15960  0145F6                     _TMR2_Initialize:
 15961                           	callstack 22
 15962                           
 15963                           ; BSR set to: 59
 15964                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 15965                           
 15966                           ; BSR set to: 57
 15967                           ;incstack = 0
 15968  0145F6  0E01               	movlw	1
 15969  0145F8  6EAE               	movwf	174,c	;volatile
 15970                           
 15971                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 15972  0145FA  0E00               	movlw	0
 15973  0145FC  6EAD               	movwf	173,c	;volatile
 15974                           
 15975                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 15976  0145FE  0E00               	movlw	0
 15977  014600  6EAF               	movwf	175,c	;volatile
 15978                           
 15979                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x9F;
 15980  014602  0E9F               	movlw	159
 15981  014604  6EAB               	movwf	171,c	;volatile
 15982                           
 15983                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 15984  014606  0E00               	movlw	0
 15985  014608  6EAA               	movwf	170,c	;volatile
 15986                           
 15987                           ; BSR set to: 59
 15988                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 15989  01460A  0139               	movlb	57	; () banked
 15990  01460C  95A4               	bcf	164,2,b	;volatile
 15991                           
 15992                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0x80;
 15993  01460E  0E80               	movlw	128
 15994  014610  6EAC               	movwf	172,c	;volatile
 15995                           
 15996                           ; BSR set to: 57
 15997  014612  0012               	return		;funcret
 15998  014614                     __end_of_TMR2_Initialize:
 15999                           	callstack 0
 16000                           
 16001 ;; *************** function _SystemArbiter_Initialize *****************
 16002 ;; Defined at:
 16003 ;;		line 108 in file "mcc_generated_files/mcc.c"
 16004 ;; Parameters:    Size  Location     Type
 16005 ;;		None
 16006 ;; Auto vars:     Size  Location     Type
 16007 ;;		None
 16008 ;; Return value:  Size  Location     Type
 16009 ;;                  1    wreg      void 
 16010 ;; Registers used:
 16011 ;;		wreg, status,2
 16012 ;; Tracked objects:
 16013 ;;		On entry : 3F/3D
 16014 ;;		On exit  : 3F/39
 16015 ;;		Unchanged: 0/0
 16016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16021 ;;Total ram usage:        0 bytes
 16022 ;; Hardware stack levels used: 1
 16023 ;; Hardware stack levels required when called: 7
 16024 ;; This function calls:
 16025 ;;		Nothing
 16026 ;; This function is called by:
 16027 ;;		_SYSTEM_Initialize
 16028 ;; This function uses a non-reentrant model
 16029 ;;
 16030                           
 16031                           	psect	text84
 16032  0147AE                     __ptext84:
 16033                           	callstack 0
 16034  0147AE                     _SystemArbiter_Initialize:
 16035                           	callstack 22
 16036                           
 16037                           ; BSR set to: 61
 16038                           ;mcc_generated_files/mcc.c: 111:     PRLOCK = 0x55;
 16039                           
 16040                           ; BSR set to: 57
 16041                           ;incstack = 0
 16042  0147AE  0E55               	movlw	85
 16043  0147B0  0139               	movlb	57	; () banked
 16044  0147B2  6FEF               	movwf	239,b	;volatile
 16045                           
 16046                           ;mcc_generated_files/mcc.c: 112:     PRLOCK = 0xAA;
 16047  0147B4  0EAA               	movlw	170
 16048  0147B6  6FEF               	movwf	239,b	;volatile
 16049                           
 16050                           ; BSR set to: 57
 16051                           ;mcc_generated_files/mcc.c: 113:     PRLOCKbits.PRLOCKED = 1;
 16052  0147B8  81EF               	bsf	239,0,b	;volatile
 16053                           
 16054                           ; BSR set to: 57
 16055  0147BA  0012               	return		;funcret
 16056  0147BC                     __end_of_SystemArbiter_Initialize:
 16057                           	callstack 0
 16058                           
 16059 ;; *************** function _SPI1_Initialize *****************
 16060 ;; Defined at:
 16061 ;;		line 64 in file "mcc_generated_files/spi1.c"
 16062 ;; Parameters:    Size  Location     Type
 16063 ;;		None
 16064 ;; Auto vars:     Size  Location     Type
 16065 ;;		None
 16066 ;; Return value:  Size  Location     Type
 16067 ;;                  1    wreg      void 
 16068 ;; Registers used:
 16069 ;;		wreg, status,2
 16070 ;; Tracked objects:
 16071 ;;		On entry : 3F/39
 16072 ;;		On exit  : 3F/3D
 16073 ;;		Unchanged: 0/0
 16074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16079 ;;Total ram usage:        0 bytes
 16080 ;; Hardware stack levels used: 1
 16081 ;; Hardware stack levels required when called: 7
 16082 ;; This function calls:
 16083 ;;		Nothing
 16084 ;; This function is called by:
 16085 ;;		_SYSTEM_Initialize
 16086 ;; This function uses a non-reentrant model
 16087 ;;
 16088                           
 16089                           	psect	text85
 16090  014684                     __ptext85:
 16091                           	callstack 0
 16092  014684                     _SPI1_Initialize:
 16093                           	callstack 22
 16094                           
 16095                           ; BSR set to: 57
 16096                           ;mcc_generated_files/spi1.c: 67:     SPI1CON0 = 0x02;
 16097                           
 16098                           ; BSR set to: 57
 16099                           ;incstack = 0
 16100  014684  0E02               	movlw	2
 16101  014686  013D               	movlb	61	; () banked
 16102  014688  6F14               	movwf	20,b	;volatile
 16103                           
 16104                           ;mcc_generated_files/spi1.c: 69:     SPI1CON1 = 0x40;
 16105  01468A  0E40               	movlw	64
 16106  01468C  6F15               	movwf	21,b	;volatile
 16107                           
 16108                           ;mcc_generated_files/spi1.c: 71:     SPI1CON2 = 0x00;
 16109  01468E  0E00               	movlw	0
 16110  014690  6F16               	movwf	22,b	;volatile
 16111                           
 16112                           ;mcc_generated_files/spi1.c: 73:     SPI1CLK = 0x00;
 16113  014692  0E00               	movlw	0
 16114  014694  6F1C               	movwf	28,b	;volatile
 16115                           
 16116                           ;mcc_generated_files/spi1.c: 75:     SPI1BAUD = 0x50;
 16117  014696  0E50               	movlw	80
 16118  014698  6F19               	movwf	25,b	;volatile
 16119                           
 16120                           ; BSR set to: 61
 16121                           ;mcc_generated_files/spi1.c: 76:     TRISCbits.TRISC3 = 0;
 16122  01469A  96C4               	bcf	196,3,c	;volatile
 16123                           
 16124                           ; BSR set to: 61
 16125  01469C  0012               	return		;funcret
 16126  01469E                     __end_of_SPI1_Initialize:
 16127                           	callstack 0
 16128                           
 16129 ;; *************** function _PWM6_Initialize *****************
 16130 ;; Defined at:
 16131 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 16132 ;; Parameters:    Size  Location     Type
 16133 ;;		None
 16134 ;; Auto vars:     Size  Location     Type
 16135 ;;		None
 16136 ;; Return value:  Size  Location     Type
 16137 ;;                  1    wreg      void 
 16138 ;; Registers used:
 16139 ;;		wreg, status,2
 16140 ;; Tracked objects:
 16141 ;;		On entry : 3F/39
 16142 ;;		On exit  : 3F/3F
 16143 ;;		Unchanged: 0/0
 16144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16149 ;;Total ram usage:        0 bytes
 16150 ;; Hardware stack levels used: 1
 16151 ;; Hardware stack levels required when called: 7
 16152 ;; This function calls:
 16153 ;;		Nothing
 16154 ;; This function is called by:
 16155 ;;		_SYSTEM_Initialize
 16156 ;; This function uses a non-reentrant model
 16157 ;;
 16158                           
 16159                           	psect	text86
 16160  01469E                     __ptext86:
 16161                           	callstack 0
 16162  01469E                     _PWM6_Initialize:
 16163                           	callstack 22
 16164                           
 16165                           ; BSR set to: 57
 16166                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
 16167                           
 16168                           ; BSR set to: 61
 16169                           ;incstack = 0
 16170  01469E  0E80               	movlw	128
 16171  0146A0  6E6A               	movwf	106,c	;volatile
 16172                           
 16173                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x4F;
 16174  0146A2  0E4F               	movlw	79
 16175  0146A4  6E69               	movwf	105,c	;volatile
 16176                           
 16177                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0xC0;
 16178  0146A6  0EC0               	movlw	192
 16179  0146A8  6E68               	movwf	104,c	;volatile
 16180                           
 16181                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
 16182  0146AA  013F               	movlb	63	; () banked
 16183  0146AC  515F               	movf	95,w,b	;volatile
 16184  0146AE  0BF3               	andlw	-13
 16185  0146B0  0904               	iorlw	4
 16186  0146B2  6F5F               	movwf	95,b	;volatile
 16187                           
 16188                           ; BSR set to: 63
 16189  0146B4  0012               	return		;funcret
 16190  0146B6                     __end_of_PWM6_Initialize:
 16191                           	callstack 0
 16192                           
 16193 ;; *************** function _PWM5_Initialize *****************
 16194 ;; Defined at:
 16195 ;;		line 58 in file "mcc_generated_files/pwm5.c"
 16196 ;; Parameters:    Size  Location     Type
 16197 ;;		None
 16198 ;; Auto vars:     Size  Location     Type
 16199 ;;		None
 16200 ;; Return value:  Size  Location     Type
 16201 ;;                  1    wreg      void 
 16202 ;; Registers used:
 16203 ;;		wreg, status,2
 16204 ;; Tracked objects:
 16205 ;;		On entry : 3F/39
 16206 ;;		On exit  : 3F/3F
 16207 ;;		Unchanged: 0/0
 16208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16213 ;;Total ram usage:        0 bytes
 16214 ;; Hardware stack levels used: 1
 16215 ;; Hardware stack levels required when called: 7
 16216 ;; This function calls:
 16217 ;;		Nothing
 16218 ;; This function is called by:
 16219 ;;		_SYSTEM_Initialize
 16220 ;; This function uses a non-reentrant model
 16221 ;;
 16222                           
 16223                           	psect	text87
 16224  0146B6                     __ptext87:
 16225                           	callstack 0
 16226  0146B6                     _PWM5_Initialize:
 16227                           	callstack 22
 16228                           
 16229                           ; BSR set to: 57
 16230                           ;mcc_generated_files/pwm5.c: 62:     PWM5CON = 0x80;
 16231                           
 16232                           ; BSR set to: 63
 16233                           ;incstack = 0
 16234  0146B6  0E80               	movlw	128
 16235  0146B8  6E6E               	movwf	110,c	;volatile
 16236                           
 16237                           ;mcc_generated_files/pwm5.c: 65:     PWM5DCH = 0x4F;
 16238  0146BA  0E4F               	movlw	79
 16239  0146BC  6E6D               	movwf	109,c	;volatile
 16240                           
 16241                           ;mcc_generated_files/pwm5.c: 68:     PWM5DCL = 0xC0;
 16242  0146BE  0EC0               	movlw	192
 16243  0146C0  6E6C               	movwf	108,c	;volatile
 16244                           
 16245                           ;mcc_generated_files/pwm5.c: 71:     CCPTMRS1bits.P5TSEL = 1;
 16246  0146C2  013F               	movlb	63	; () banked
 16247  0146C4  515F               	movf	95,w,b	;volatile
 16248  0146C6  0BFC               	andlw	-4
 16249  0146C8  0901               	iorlw	1
 16250  0146CA  6F5F               	movwf	95,b	;volatile
 16251                           
 16252                           ; BSR set to: 63
 16253  0146CC  0012               	return		;funcret
 16254  0146CE                     __end_of_PWM5_Initialize:
 16255                           	callstack 0
 16256                           
 16257 ;; *************** function _PMD_Initialize *****************
 16258 ;; Defined at:
 16259 ;;		line 87 in file "mcc_generated_files/mcc.c"
 16260 ;; Parameters:    Size  Location     Type
 16261 ;;		None
 16262 ;; Auto vars:     Size  Location     Type
 16263 ;;		None
 16264 ;; Return value:  Size  Location     Type
 16265 ;;                  1    wreg      void 
 16266 ;; Registers used:
 16267 ;;		wreg, status,2
 16268 ;; Tracked objects:
 16269 ;;		On entry : 3F/39
 16270 ;;		On exit  : 3F/39
 16271 ;;		Unchanged: 0/0
 16272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16277 ;;Total ram usage:        0 bytes
 16278 ;; Hardware stack levels used: 1
 16279 ;; Hardware stack levels required when called: 7
 16280 ;; This function calls:
 16281 ;;		Nothing
 16282 ;; This function is called by:
 16283 ;;		_SYSTEM_Initialize
 16284 ;; This function uses a non-reentrant model
 16285 ;;
 16286                           
 16287                           	psect	text88
 16288  014554                     __ptext88:
 16289                           	callstack 0
 16290  014554                     _PMD_Initialize:
 16291                           	callstack 22
 16292                           
 16293                           ; BSR set to: 57
 16294                           ;mcc_generated_files/mcc.c: 90:     PMD0 = 0x00;
 16295                           
 16296                           ; BSR set to: 63
 16297                           ;incstack = 0
 16298  014554  0E00               	movlw	0
 16299  014556  6FC0               	movwf	192,b	;volatile
 16300                           
 16301                           ;mcc_generated_files/mcc.c: 92:     PMD1 = 0x00;
 16302  014558  0E00               	movlw	0
 16303  01455A  6FC1               	movwf	193,b	;volatile
 16304                           
 16305                           ;mcc_generated_files/mcc.c: 94:     PMD2 = 0x00;
 16306  01455C  0E00               	movlw	0
 16307  01455E  6FC2               	movwf	194,b	;volatile
 16308                           
 16309                           ;mcc_generated_files/mcc.c: 96:     PMD3 = 0x00;
 16310  014560  0E00               	movlw	0
 16311  014562  6FC3               	movwf	195,b	;volatile
 16312                           
 16313                           ;mcc_generated_files/mcc.c: 98:     PMD4 = 0x00;
 16314  014564  0E00               	movlw	0
 16315  014566  6FC4               	movwf	196,b	;volatile
 16316                           
 16317                           ;mcc_generated_files/mcc.c: 100:     PMD5 = 0x00;
 16318  014568  0E00               	movlw	0
 16319  01456A  6FC5               	movwf	197,b	;volatile
 16320                           
 16321                           ;mcc_generated_files/mcc.c: 102:     PMD6 = 0x00;
 16322  01456C  0E00               	movlw	0
 16323  01456E  6FC6               	movwf	198,b	;volatile
 16324                           
 16325                           ;mcc_generated_files/mcc.c: 104:     PMD7 = 0x00;
 16326  014570  0E00               	movlw	0
 16327  014572  6FC7               	movwf	199,b	;volatile
 16328                           
 16329                           ; BSR set to: 57
 16330  014574  0012               	return		;funcret
 16331  014576                     __end_of_PMD_Initialize:
 16332                           	callstack 0
 16333                           
 16334 ;; *************** function _PIN_MANAGER_Initialize *****************
 16335 ;; Defined at:
 16336 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 16337 ;; Parameters:    Size  Location     Type
 16338 ;;		None
 16339 ;; Auto vars:     Size  Location     Type
 16340 ;;		None
 16341 ;; Return value:  Size  Location     Type
 16342 ;;                  1    wreg      void 
 16343 ;; Registers used:
 16344 ;;		wreg, status,2
 16345 ;; Tracked objects:
 16346 ;;		On entry : 3F/39
 16347 ;;		On exit  : 3F/3A
 16348 ;;		Unchanged: 0/0
 16349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16354 ;;Total ram usage:        0 bytes
 16355 ;; Hardware stack levels used: 1
 16356 ;; Hardware stack levels required when called: 7
 16357 ;; This function calls:
 16358 ;;		Nothing
 16359 ;; This function is called by:
 16360 ;;		_SYSTEM_Initialize
 16361 ;; This function uses a non-reentrant model
 16362 ;;
 16363                           
 16364                           	psect	text89
 16365  012FD4                     __ptext89:
 16366                           	callstack 0
 16367  012FD4                     _PIN_MANAGER_Initialize:
 16368                           	callstack 22
 16369                           
 16370                           ; BSR set to: 57
 16371                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 16372                           
 16373                           ; BSR set to: 57
 16374                           ;incstack = 0
 16375  012FD4  0E00               	movlw	0
 16376  012FD6  6EBE               	movwf	190,c	;volatile
 16377                           
 16378                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x11;
 16379  012FD8  0E11               	movlw	17
 16380  012FDA  6EBD               	movwf	189,c	;volatile
 16381                           
 16382                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x20;
 16383  012FDC  0E20               	movlw	32
 16384  012FDE  6EBA               	movwf	186,c	;volatile
 16385                           
 16386                           ;mcc_generated_files/pin_manager.c: 63:     LATF = 0x00;
 16387  012FE0  0E00               	movlw	0
 16388  012FE2  6EBF               	movwf	191,c	;volatile
 16389                           
 16390                           ;mcc_generated_files/pin_manager.c: 64:     LATB = 0x00;
 16391  012FE4  0E00               	movlw	0
 16392  012FE6  6EBB               	movwf	187,c	;volatile
 16393                           
 16394                           ;mcc_generated_files/pin_manager.c: 65:     LATC = 0x07;
 16395  012FE8  0E07               	movlw	7
 16396  012FEA  6EBC               	movwf	188,c	;volatile
 16397                           
 16398                           ;mcc_generated_files/pin_manager.c: 70:     TRISE = 0x02;
 16399  012FEC  0E02               	movlw	2
 16400  012FEE  6EC6               	movwf	198,c	;volatile
 16401                           
 16402                           ;mcc_generated_files/pin_manager.c: 71:     TRISF = 0x0B;
 16403  012FF0  0E0B               	movlw	11
 16404  012FF2  6EC7               	movwf	199,c	;volatile
 16405                           
 16406                           ;mcc_generated_files/pin_manager.c: 72:     TRISA = 0xDF;
 16407  012FF4  0EDF               	movlw	223
 16408  012FF6  6EC2               	movwf	194,c	;volatile
 16409                           
 16410                           ; BSR set to: 57
 16411                           ;mcc_generated_files/pin_manager.c: 73:     TRISB = 0xFF;
 16412  012FF8  68C3               	setf	195,c	;volatile
 16413                           
 16414                           ;mcc_generated_files/pin_manager.c: 74:     TRISC = 0x90;
 16415  012FFA  0E90               	movlw	144
 16416  012FFC  6EC4               	movwf	196,c	;volatile
 16417                           
 16418                           ;mcc_generated_files/pin_manager.c: 75:     TRISD = 0x08;
 16419  012FFE  0E08               	movlw	8
 16420  013000  6EC5               	movwf	197,c	;volatile
 16421                           
 16422                           ;mcc_generated_files/pin_manager.c: 80:     ANSELD = 0x0C;
 16423  013002  0E0C               	movlw	12
 16424  013004  013A               	movlb	58	; () banked
 16425  013006  6F70               	movwf	112,b	;volatile
 16426                           
 16427                           ;mcc_generated_files/pin_manager.c: 81:     ANSELC = 0x20;
 16428  013008  0E20               	movlw	32
 16429  01300A  6F60               	movwf	96,b	;volatile
 16430                           
 16431                           ;mcc_generated_files/pin_manager.c: 82:     ANSELB = 0xFE;
 16432  01300C  0EFE               	movlw	254
 16433  01300E  6F50               	movwf	80,b	;volatile
 16434                           
 16435                           ;mcc_generated_files/pin_manager.c: 83:     ANSELE = 0x02;
 16436  013010  0E02               	movlw	2
 16437  013012  6F80               	movwf	128,b	;volatile
 16438                           
 16439                           ;mcc_generated_files/pin_manager.c: 84:     ANSELF = 0x0F;
 16440  013014  0E0F               	movlw	15
 16441  013016  6F90               	movwf	144,b	;volatile
 16442                           
 16443                           ;mcc_generated_files/pin_manager.c: 85:     ANSELA = 0x8F;
 16444  013018  0E8F               	movlw	143
 16445  01301A  6F40               	movwf	64,b	;volatile
 16446                           
 16447                           ;mcc_generated_files/pin_manager.c: 90:     WPUD = 0x00;
 16448  01301C  0E00               	movlw	0
 16449  01301E  6F71               	movwf	113,b	;volatile
 16450                           
 16451                           ;mcc_generated_files/pin_manager.c: 91:     WPUF = 0x00;
 16452  013020  0E00               	movlw	0
 16453  013022  6F91               	movwf	145,b	;volatile
 16454                           
 16455                           ;mcc_generated_files/pin_manager.c: 92:     WPUE = 0x00;
 16456  013024  0E00               	movlw	0
 16457  013026  6F81               	movwf	129,b	;volatile
 16458                           
 16459                           ;mcc_generated_files/pin_manager.c: 93:     WPUB = 0x01;
 16460  013028  0E01               	movlw	1
 16461  01302A  6F51               	movwf	81,b	;volatile
 16462                           
 16463                           ;mcc_generated_files/pin_manager.c: 94:     WPUA = 0x50;
 16464  01302C  0E50               	movlw	80
 16465  01302E  6F41               	movwf	65,b	;volatile
 16466                           
 16467                           ;mcc_generated_files/pin_manager.c: 95:     WPUC = 0x00;
 16468  013030  0E00               	movlw	0
 16469  013032  6F61               	movwf	97,b	;volatile
 16470                           
 16471                           ;mcc_generated_files/pin_manager.c: 100:     RB1I2C = 0x00;
 16472  013034  0E00               	movlw	0
 16473  013036  6F5A               	movwf	90,b	;volatile
 16474                           
 16475                           ;mcc_generated_files/pin_manager.c: 101:     RB2I2C = 0x00;
 16476  013038  0E00               	movlw	0
 16477  01303A  6F5B               	movwf	91,b	;volatile
 16478                           
 16479                           ;mcc_generated_files/pin_manager.c: 102:     RC3I2C = 0x00;
 16480  01303C  0E00               	movlw	0
 16481  01303E  6F6A               	movwf	106,b	;volatile
 16482                           
 16483                           ;mcc_generated_files/pin_manager.c: 103:     RC4I2C = 0x00;
 16484  013040  0E00               	movlw	0
 16485  013042  6F6B               	movwf	107,b	;volatile
 16486                           
 16487                           ;mcc_generated_files/pin_manager.c: 104:     RD0I2C = 0x00;
 16488  013044  0E00               	movlw	0
 16489  013046  6F7A               	movwf	122,b	;volatile
 16490                           
 16491                           ;mcc_generated_files/pin_manager.c: 105:     RD1I2C = 0x00;
 16492  013048  0E00               	movlw	0
 16493  01304A  6F7B               	movwf	123,b	;volatile
 16494                           
 16495                           ;mcc_generated_files/pin_manager.c: 110:     ODCONE = 0x00;
 16496  01304C  0E00               	movlw	0
 16497  01304E  6F82               	movwf	130,b	;volatile
 16498                           
 16499                           ;mcc_generated_files/pin_manager.c: 111:     ODCONF = 0x00;
 16500  013050  0E00               	movlw	0
 16501  013052  6F92               	movwf	146,b	;volatile
 16502                           
 16503                           ;mcc_generated_files/pin_manager.c: 112:     ODCONA = 0x00;
 16504  013054  0E00               	movlw	0
 16505  013056  6F42               	movwf	66,b	;volatile
 16506                           
 16507                           ;mcc_generated_files/pin_manager.c: 113:     ODCONB = 0x00;
 16508  013058  0E00               	movlw	0
 16509  01305A  6F52               	movwf	82,b	;volatile
 16510                           
 16511                           ;mcc_generated_files/pin_manager.c: 114:     ODCONC = 0x00;
 16512  01305C  0E00               	movlw	0
 16513  01305E  6F62               	movwf	98,b	;volatile
 16514                           
 16515                           ;mcc_generated_files/pin_manager.c: 115:     ODCOND = 0x00;
 16516  013060  0E00               	movlw	0
 16517  013062  6F72               	movwf	114,b	;volatile
 16518                           
 16519                           ; BSR set to: 58
 16520                           ;mcc_generated_files/pin_manager.c: 120:     SLRCONA = 0xFF;
 16521  013064  6943               	setf	67,b	;volatile
 16522                           
 16523                           ; BSR set to: 58
 16524                           ;mcc_generated_files/pin_manager.c: 121:     SLRCONB = 0xFF;
 16525  013066  6953               	setf	83,b	;volatile
 16526                           
 16527                           ; BSR set to: 58
 16528                           ;mcc_generated_files/pin_manager.c: 122:     SLRCONC = 0xFF;
 16529  013068  6963               	setf	99,b	;volatile
 16530                           
 16531                           ; BSR set to: 58
 16532                           ;mcc_generated_files/pin_manager.c: 123:     SLRCOND = 0xFF;
 16533  01306A  6973               	setf	115,b	;volatile
 16534                           
 16535                           ;mcc_generated_files/pin_manager.c: 124:     SLRCONE = 0x07;
 16536  01306C  0E07               	movlw	7
 16537  01306E  6F83               	movwf	131,b	;volatile
 16538                           
 16539                           ; BSR set to: 58
 16540                           ;mcc_generated_files/pin_manager.c: 125:     SLRCONF = 0xFF;
 16541  013070  6993               	setf	147,b	;volatile
 16542                           
 16543                           ; BSR set to: 58
 16544                           ;mcc_generated_files/pin_manager.c: 130:     INLVLA = 0xFF;
 16545  013072  6944               	setf	68,b	;volatile
 16546                           
 16547                           ; BSR set to: 58
 16548                           ;mcc_generated_files/pin_manager.c: 131:     INLVLB = 0xFF;
 16549  013074  6954               	setf	84,b	;volatile
 16550                           
 16551                           ; BSR set to: 58
 16552                           ;mcc_generated_files/pin_manager.c: 132:     INLVLC = 0xFF;
 16553  013076  6964               	setf	100,b	;volatile
 16554                           
 16555                           ; BSR set to: 58
 16556                           ;mcc_generated_files/pin_manager.c: 133:     INLVLD = 0xFF;
 16557  013078  6974               	setf	116,b	;volatile
 16558                           
 16559                           ;mcc_generated_files/pin_manager.c: 134:     INLVLE = 0x0F;
 16560  01307A  0E0F               	movlw	15
 16561  01307C  6F84               	movwf	132,b	;volatile
 16562                           
 16563                           ; BSR set to: 58
 16564                           ;mcc_generated_files/pin_manager.c: 135:     INLVLF = 0xFF;
 16565  01307E  6994               	setf	148,b	;volatile
 16566                           
 16567                           ;mcc_generated_files/pin_manager.c: 144:     RD2PPS = 0x0E;
 16568  013080  0E0E               	movlw	14
 16569  013082  6F1A               	movwf	26,b	;volatile
 16570                           
 16571                           ;mcc_generated_files/pin_manager.c: 145:     SPI1SCKPPS = 0x13;
 16572  013084  0E13               	movlw	19
 16573  013086  6FDE               	movwf	222,b	;volatile
 16574                           
 16575                           ;mcc_generated_files/pin_manager.c: 146:     RC3PPS = 0x1E;
 16576  013088  0E1E               	movlw	30
 16577  01308A  6F13               	movwf	19,b	;volatile
 16578                           
 16579                           ;mcc_generated_files/pin_manager.c: 147:     RC5PPS = 0x1F;
 16580  01308C  0E1F               	movlw	31
 16581  01308E  6F15               	movwf	21,b	;volatile
 16582                           
 16583                           ;mcc_generated_files/pin_manager.c: 148:     RC6PPS = 0x13;
 16584  013090  0E13               	movlw	19
 16585  013092  6F16               	movwf	22,b	;volatile
 16586                           
 16587                           ;mcc_generated_files/pin_manager.c: 149:     U1RXPPS = 0x17;
 16588  013094  0E17               	movlw	23
 16589  013096  6FE5               	movwf	229,b	;volatile
 16590                           
 16591                           ;mcc_generated_files/pin_manager.c: 150:     RF2PPS = 0x0D;
 16592  013098  0E0D               	movlw	13
 16593  01309A  6F2A               	movwf	42,b	;volatile
 16594                           
 16595                           ;mcc_generated_files/pin_manager.c: 151:     SPI1SDIPPS = 0x14;
 16596  01309C  0E14               	movlw	20
 16597  01309E  6FDF               	movwf	223,b	;volatile
 16598                           
 16599                           ; BSR set to: 58
 16600  0130A0  0012               	return		;funcret
 16601  0130A2                     __end_of_PIN_MANAGER_Initialize:
 16602                           	callstack 0
 16603                           
 16604 ;; *************** function _OSCILLATOR_Initialize *****************
 16605 ;; Defined at:
 16606 ;;		line 69 in file "mcc_generated_files/mcc.c"
 16607 ;; Parameters:    Size  Location     Type
 16608 ;;		None
 16609 ;; Auto vars:     Size  Location     Type
 16610 ;;		None
 16611 ;; Return value:  Size  Location     Type
 16612 ;;                  1    wreg      void 
 16613 ;; Registers used:
 16614 ;;		wreg, status,2
 16615 ;; Tracked objects:
 16616 ;;		On entry : 3F/3A
 16617 ;;		On exit  : 3F/39
 16618 ;;		Unchanged: 0/0
 16619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16624 ;;Total ram usage:        0 bytes
 16625 ;; Hardware stack levels used: 1
 16626 ;; Hardware stack levels required when called: 7
 16627 ;; This function calls:
 16628 ;;		Nothing
 16629 ;; This function is called by:
 16630 ;;		_SYSTEM_Initialize
 16631 ;; This function uses a non-reentrant model
 16632 ;;
 16633                           
 16634                           	psect	text90
 16635  01464E                     __ptext90:
 16636                           	callstack 0
 16637  01464E                     _OSCILLATOR_Initialize:
 16638                           	callstack 22
 16639                           
 16640                           ; BSR set to: 58
 16641                           ;mcc_generated_files/mcc.c: 72:     OSCCON1 = 0x20;
 16642                           
 16643                           ; BSR set to: 58
 16644                           ;incstack = 0
 16645  01464E  0E20               	movlw	32
 16646  014650  0139               	movlb	57	; () banked
 16647  014652  6FD9               	movwf	217,b	;volatile
 16648                           
 16649                           ;mcc_generated_files/mcc.c: 74:     OSCCON3 = 0x00;
 16650  014654  0E00               	movlw	0
 16651  014656  6FDB               	movwf	219,b	;volatile
 16652                           
 16653                           ;mcc_generated_files/mcc.c: 76:     OSCEN = 0x00;
 16654  014658  0E00               	movlw	0
 16655  01465A  6FDD               	movwf	221,b	;volatile
 16656                           
 16657                           ;mcc_generated_files/mcc.c: 78:     OSCFRQ = 0x05;
 16658  01465C  0E05               	movlw	5
 16659  01465E  6FDF               	movwf	223,b	;volatile
 16660                           
 16661                           ;mcc_generated_files/mcc.c: 80:     OSCTUNE = 0x00;
 16662  014660  0E00               	movlw	0
 16663  014662  6FDE               	movwf	222,b	;volatile
 16664  014664                     l205:
 16665                           
 16666                           ; BSR set to: 57
 16667                           ;mcc_generated_files/mcc.c: 82:     while(PLLR == 0)
 16668  014664  B1DC               	btfsc	220,0,b	;volatile
 16669  014666  0012               	return	
 16670  014668  D7FD               	goto	l205
 16671  01466A                     __end_of_OSCILLATOR_Initialize:
 16672                           	callstack 0
 16673                           
 16674 ;; *************** function _INTERRUPT_Initialize *****************
 16675 ;; Defined at:
 16676 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 16677 ;; Parameters:    Size  Location     Type
 16678 ;;		None
 16679 ;; Auto vars:     Size  Location     Type
 16680 ;;  state           1   23[COMRAM] _Bool 
 16681 ;; Return value:  Size  Location     Type
 16682 ;;                  1    wreg      void 
 16683 ;; Registers used:
 16684 ;;		wreg, status,2
 16685 ;; Tracked objects:
 16686 ;;		On entry : 0/0
 16687 ;;		On exit  : 3F/39
 16688 ;;		Unchanged: 0/0
 16689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16691 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16693 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16694 ;;Total ram usage:        1 bytes
 16695 ;; Hardware stack levels used: 1
 16696 ;; Hardware stack levels required when called: 7
 16697 ;; This function calls:
 16698 ;;		Nothing
 16699 ;; This function is called by:
 16700 ;;		_SYSTEM_Initialize
 16701 ;; This function uses a non-reentrant model
 16702 ;;
 16703                           
 16704                           	psect	text91
 16705  013F02                     __ptext91:
 16706                           	callstack 0
 16707  013F02                     _INTERRUPT_Initialize:
 16708                           	callstack 22
 16709                           
 16710                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 16711                           
 16712                           ; BSR set to: 57
 16713                           ;incstack = 0
 16714  013F02  8AD2               	bsf	210,5,c	;volatile
 16715                           
 16716                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 16717  013F04  0E00               	movlw	0
 16718  013F06  BED2               	btfsc	16338,7,c	;volatile
 16719  013F08  0E01               	movlw	1
 16720  013F0A  6E18               	movwf	INTERRUPT_Initialize@state^0,c
 16721                           
 16722                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 16723  013F0C  9ED2               	bcf	16338,7,c	;volatile
 16724                           
 16725                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 16726  013F0E  0E55               	movlw	85
 16727  013F10  6ED4               	movwf	212,c	;volatile
 16728                           
 16729                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 16730  013F12  0EAA               	movlw	170
 16731  013F14  6ED4               	movwf	212,c	;volatile
 16732                           
 16733                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 16734  013F16  90D4               	bcf	212,0,c	;volatile
 16735                           
 16736                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTBASEU = 0;
 16737  013F18  0E00               	movlw	0
 16738  013F1A  6ED7               	movwf	215,c	;volatile
 16739                           
 16740                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTBASEH = 0;
 16741  013F1C  0E00               	movlw	0
 16742  013F1E  6ED6               	movwf	214,c	;volatile
 16743                           
 16744                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTBASEL = 8;
 16745  013F20  0E08               	movlw	8
 16746  013F22  6ED5               	movwf	213,c	;volatile
 16747                           
 16748                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 16749  013F24  0E55               	movlw	85
 16750  013F26  6ED4               	movwf	212,c	;volatile
 16751                           
 16752                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 16753  013F28  0EAA               	movlw	170
 16754  013F2A  6ED4               	movwf	212,c	;volatile
 16755                           
 16756                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 16757  013F2C  80D4               	bsf	212,0,c	;volatile
 16758                           
 16759                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 16760  013F2E  B018               	btfsc	INTERRUPT_Initialize@state^0,0,c
 16761  013F30  D002               	bra	u6115
 16762  013F32  9ED2               	bcf	16338,7,c	;volatile
 16763  013F34  D001               	bra	u6116
 16764  013F36                     u6115:
 16765  013F36  8ED2               	bsf	16338,7,c	;volatile
 16766  013F38                     u6116:
 16767                           
 16768                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1SCNTIP = 1;
 16769  013F38  0139               	movlb	57	; () banked
 16770  013F3A  8182               	bsf	130,0,b	;volatile
 16771                           
 16772                           ; BSR set to: 57
 16773                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR3bits.U1TXIP = 1;
 16774  013F3C  8983               	bsf	131,4,b	;volatile
 16775                           
 16776                           ; BSR set to: 57
 16777                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR3bits.U1RXIP = 0;
 16778  013F3E  9783               	bcf	131,3,b	;volatile
 16779                           
 16780                           ; BSR set to: 57
 16781                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR9bits.TMR6IP = 1;
 16782  013F40  8189               	bsf	137,0,b	;volatile
 16783                           
 16784                           ; BSR set to: 57
 16785                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR8bits.TMR5IP = 1;
 16786  013F42  8D88               	bsf	136,6,b	;volatile
 16787                           
 16788                           ; BSR set to: 57
 16789                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR1bits.ADIP = 1;
 16790  013F44  8581               	bsf	129,2,b	;volatile
 16791                           
 16792                           ; BSR set to: 57
 16793  013F46  0012               	return		;funcret
 16794  013F48                     __end_of_INTERRUPT_Initialize:
 16795                           	callstack 0
 16796                           
 16797 ;; *************** function _DMA1_Initialize *****************
 16798 ;; Defined at:
 16799 ;;		line 60 in file "mcc_generated_files/dma1.c"
 16800 ;; Parameters:    Size  Location     Type
 16801 ;;		None
 16802 ;; Auto vars:     Size  Location     Type
 16803 ;;		None
 16804 ;; Return value:  Size  Location     Type
 16805 ;;                  1    wreg      void 
 16806 ;; Registers used:
 16807 ;;		wreg, status,2, status,0, cstack
 16808 ;; Tracked objects:
 16809 ;;		On entry : 3F/39
 16810 ;;		On exit  : 3F/3B
 16811 ;;		Unchanged: 0/0
 16812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16817 ;;Total ram usage:        0 bytes
 16818 ;; Hardware stack levels used: 1
 16819 ;; Hardware stack levels required when called: 8
 16820 ;; This function calls:
 16821 ;;		_DMA1_SetSCNTIInterruptHandler
 16822 ;; This function is called by:
 16823 ;;		_SYSTEM_Initialize
 16824 ;; This function uses a non-reentrant model
 16825 ;;
 16826                           
 16827                           	psect	text92
 16828  013AE6                     __ptext92:
 16829                           	callstack 0
 16830  013AE6                     _DMA1_Initialize:
 16831                           	callstack 21
 16832                           
 16833                           ; BSR set to: 57
 16834                           ;mcc_generated_files/dma1.c: 63:     DMA1SSA = &SrcVarName0;
 16835                           
 16836                           ; BSR set to: 57
 16837                           ;incstack = 0
 16838  013AE6  0E96               	movlw	low _SrcVarName0
 16839  013AE8  013B               	movlb	59	; () banked
 16840  013AEA  6FF9               	movwf	249,b	;volatile
 16841  013AEC  0E01               	movlw	high _SrcVarName0
 16842  013AEE  6FFA               	movwf	250,b	;volatile
 16843  013AF0  0E00               	movlw	low (_SrcVarName0 shr (0+16))
 16844  013AF2  6FFB               	movwf	251,b	;volatile
 16845                           
 16846                           ;mcc_generated_files/dma1.c: 65:     DMA1DSA = &SPI1TXB;
 16847  013AF4  0E3D               	movlw	61
 16848  013AF6  6FF1               	movwf	241,b	;volatile
 16849  013AF8  0E11               	movlw	17
 16850  013AFA  6FF0               	movwf	240,b	;volatile
 16851                           
 16852                           ;mcc_generated_files/dma1.c: 67:     DMA1CON1 = 0x03;
 16853  013AFC  0E03               	movlw	3
 16854  013AFE  6FFD               	movwf	253,b	;volatile
 16855                           
 16856                           ;mcc_generated_files/dma1.c: 69:     DMA1SSZ = 1;
 16857  013B00  0E00               	movlw	0
 16858  013B02  6FF8               	movwf	248,b	;volatile
 16859  013B04  0E01               	movlw	1
 16860  013B06  6FF7               	movwf	247,b	;volatile
 16861                           
 16862                           ;mcc_generated_files/dma1.c: 71:     DMA1DSZ = 1;
 16863  013B08  0E00               	movlw	0
 16864  013B0A  6FEF               	movwf	239,b	;volatile
 16865  013B0C  0E01               	movlw	1
 16866  013B0E  6FEE               	movwf	238,b	;volatile
 16867                           
 16868                           ;mcc_generated_files/dma1.c: 73:     DMA1SIRQ = 0x15;
 16869  013B10  0E15               	movlw	21
 16870  013B12  6FFF               	movwf	255,b	;volatile
 16871                           
 16872                           ;mcc_generated_files/dma1.c: 75:     DMA1AIRQ = 0x00;
 16873  013B14  0E00               	movlw	0
 16874  013B16  6FFE               	movwf	254,b	;volatile
 16875                           
 16876                           ; BSR set to: 59
 16877                           ;mcc_generated_files/dma1.c: 78:     PIR2bits.DMA1DCNTIF = 0;
 16878  013B18  0139               	movlb	57	; () banked
 16879  013B1A  93A2               	bcf	162,1,b	;volatile
 16880                           
 16881                           ; BSR set to: 57
 16882                           ;mcc_generated_files/dma1.c: 80:     PIR2bits.DMA1SCNTIF = 0;
 16883  013B1C  91A2               	bcf	162,0,b	;volatile
 16884                           
 16885                           ; BSR set to: 57
 16886                           ;mcc_generated_files/dma1.c: 82:     PIR2bits.DMA1AIF = 0;
 16887  013B1E  97A2               	bcf	162,3,b	;volatile
 16888                           
 16889                           ; BSR set to: 57
 16890                           ;mcc_generated_files/dma1.c: 84:     PIR2bits.DMA1ORIF =0;
 16891  013B20  95A2               	bcf	162,2,b	;volatile
 16892                           
 16893                           ; BSR set to: 57
 16894                           ;mcc_generated_files/dma1.c: 86:     PIE2bits.DMA1DCNTIE = 0;
 16895  013B22  9392               	bcf	146,1,b	;volatile
 16896                           
 16897                           ; BSR set to: 57
 16898                           ;mcc_generated_files/dma1.c: 87:     PIE2bits.DMA1SCNTIE = 1;
 16899  013B24  8192               	bsf	146,0,b	;volatile
 16900                           
 16901                           ; BSR set to: 57
 16902                           ;mcc_generated_files/dma1.c: 88:  DMA1_SetSCNTIInterruptHandler(DMA1_DefaultInterruptHan
      +                          dler);
 16903  013B26  0E4C               	movlw	low _DMA1_DefaultInterruptHandler
 16904  013B28  6E18               	movwf	DMA1_SetSCNTIInterruptHandler@InterruptHandler^0,c
 16905  013B2A  0E48               	movlw	high _DMA1_DefaultInterruptHandler
 16906  013B2C  6E19               	movwf	(DMA1_SetSCNTIInterruptHandler@InterruptHandler+1)^0,c
 16907  013B2E  0E01               	movlw	low (_DMA1_DefaultInterruptHandler shr (0+16))
 16908  013B30  6E1A               	movwf	(DMA1_SetSCNTIInterruptHandler@InterruptHandler+2)^0,c
 16909  013B32  ECDE  F0A3         	call	_DMA1_SetSCNTIInterruptHandler	;wreg free
 16910                           
 16911                           ; BSR set to: 57
 16912                           ;mcc_generated_files/dma1.c: 89:     PIE2bits.DMA1AIE = 0;
 16913  013B36  9792               	bcf	146,3,b	;volatile
 16914                           
 16915                           ; BSR set to: 57
 16916                           ;mcc_generated_files/dma1.c: 90:     PIE2bits.DMA1ORIE = 0;
 16917  013B38  9592               	bcf	146,2,b	;volatile
 16918                           
 16919                           ; BSR set to: 57
 16920                           ;mcc_generated_files/dma1.c: 93:     DMA1CON0 = 0xC0;
 16921  013B3A  0EC0               	movlw	192
 16922  013B3C  013B               	movlb	59	; () banked
 16923  013B3E  6FFC               	movwf	252,b	;volatile
 16924                           
 16925                           ; BSR set to: 59
 16926  013B40  0012               	return		;funcret
 16927  013B42                     __end_of_DMA1_Initialize:
 16928                           	callstack 0
 16929                           
 16930 ;; *************** function _DMA1_SetSCNTIInterruptHandler *****************
 16931 ;; Defined at:
 16932 ;;		line 179 in file "mcc_generated_files/dma1.c"
 16933 ;; Parameters:    Size  Location     Type
 16934 ;;  InterruptHan    3   23[COMRAM] PTR FTN()void 
 16935 ;;		 -> source_dma_done(1), DMA1_DefaultInterruptHandler(1), 
 16936 ;; Auto vars:     Size  Location     Type
 16937 ;;		None
 16938 ;; Return value:  Size  Location     Type
 16939 ;;                  1    wreg      void 
 16940 ;; Registers used:
 16941 ;;		wreg, status,2, status,0
 16942 ;; Tracked objects:
 16943 ;;		On entry : 3F/39
 16944 ;;		On exit  : 3F/39
 16945 ;;		Unchanged: 3E/0
 16946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16947 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16950 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16951 ;;Total ram usage:        3 bytes
 16952 ;; Hardware stack levels used: 1
 16953 ;; Hardware stack levels required when called: 7
 16954 ;; This function calls:
 16955 ;;		Nothing
 16956 ;; This function is called by:
 16957 ;;		_DMA1_Initialize
 16958 ;;		_main
 16959 ;; This function uses a non-reentrant model
 16960 ;;
 16961                           
 16962                           	psect	text93
 16963  0147BC                     __ptext93:
 16964                           	callstack 0
 16965  0147BC                     _DMA1_SetSCNTIInterruptHandler:
 16966                           	callstack 21
 16967                           
 16968                           ; BSR set to: 57
 16969                           ;mcc_generated_files/dma1.c: 179: void DMA1_SetSCNTIInterruptHandler(void (* InterruptHa
      +                          ndler)(void));mcc_generated_files/dma1.c: 180: {;mcc_generated_files/dma1.c: 181:   DMA1
      +                          _SCNTI_InterruptHandler = InterruptHandler;
 16970                           
 16971                           ; BSR set to: 59
 16972                           ;incstack = 0
 16973  0147BC  C018  F0E1         	movff	DMA1_SetSCNTIInterruptHandler@InterruptHandler,_DMA1_SCNTI_InterruptHandler
 16974  0147C0  C019  F0E2         	movff	DMA1_SetSCNTIInterruptHandler@InterruptHandler+1,_DMA1_SCNTI_InterruptHandler+1
 16975  0147C4  C01A  F0E3         	movff	DMA1_SetSCNTIInterruptHandler@InterruptHandler+2,_DMA1_SCNTI_InterruptHandler+2
 16976                           
 16977                           ; BSR set to: 57
 16978  0147C8  0012               	return		;funcret
 16979  0147CA                     __end_of_DMA1_SetSCNTIInterruptHandler:
 16980                           	callstack 0
 16981                           
 16982 ;; *************** function _DAC1_Initialize *****************
 16983 ;; Defined at:
 16984 ;;		line 58 in file "mcc_generated_files/dac1.c"
 16985 ;; Parameters:    Size  Location     Type
 16986 ;;		None
 16987 ;; Auto vars:     Size  Location     Type
 16988 ;;		None
 16989 ;; Return value:  Size  Location     Type
 16990 ;;                  1    wreg      void 
 16991 ;; Registers used:
 16992 ;;		wreg, status,2
 16993 ;; Tracked objects:
 16994 ;;		On entry : 3F/39
 16995 ;;		On exit  : 3F/3E
 16996 ;;		Unchanged: 0/0
 16997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17002 ;;Total ram usage:        0 bytes
 17003 ;; Hardware stack levels used: 1
 17004 ;; Hardware stack levels required when called: 7
 17005 ;; This function calls:
 17006 ;;		Nothing
 17007 ;; This function is called by:
 17008 ;;		_SYSTEM_Initialize
 17009 ;; This function uses a non-reentrant model
 17010 ;;
 17011                           
 17012                           	psect	text94
 17013  0147D8                     __ptext94:
 17014                           	callstack 0
 17015  0147D8                     _DAC1_Initialize:
 17016                           	callstack 22
 17017                           
 17018                           ; BSR set to: 57
 17019                           ;mcc_generated_files/dac1.c: 61:     DAC1CON0 = 0xA4;
 17020                           
 17021                           ; BSR set to: 57
 17022                           ;incstack = 0
 17023  0147D8  0EA4               	movlw	164
 17024  0147DA  013E               	movlb	62	; () banked
 17025  0147DC  6F9E               	movwf	158,b	;volatile
 17026                           
 17027                           ;mcc_generated_files/dac1.c: 63:     DAC1CON1 = 0x1F;
 17028  0147DE  0E1F               	movlw	31
 17029  0147E0  6F9C               	movwf	156,b	;volatile
 17030                           
 17031                           ; BSR set to: 62
 17032  0147E2  0012               	return		;funcret
 17033  0147E4                     __end_of_DAC1_Initialize:
 17034                           	callstack 0
 17035                           
 17036 ;; *************** function _ADCC_Initialize *****************
 17037 ;; Defined at:
 17038 ;;		line 64 in file "mcc_generated_files/adcc.c"
 17039 ;; Parameters:    Size  Location     Type
 17040 ;;		None
 17041 ;; Auto vars:     Size  Location     Type
 17042 ;;		None
 17043 ;; Return value:  Size  Location     Type
 17044 ;;                  1    wreg      void 
 17045 ;; Registers used:
 17046 ;;		wreg, status,2, status,0, cstack
 17047 ;; Tracked objects:
 17048 ;;		On entry : 3F/39
 17049 ;;		On exit  : 3F/39
 17050 ;;		Unchanged: 0/0
 17051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17055 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17056 ;;Total ram usage:        0 bytes
 17057 ;; Hardware stack levels used: 1
 17058 ;; Hardware stack levels required when called: 8
 17059 ;; This function calls:
 17060 ;;		_ADCC_SetADIInterruptHandler
 17061 ;; This function is called by:
 17062 ;;		_SYSTEM_Initialize
 17063 ;; This function uses a non-reentrant model
 17064 ;;
 17065                           
 17066                           	psect	text95
 17067  01393C                     __ptext95:
 17068                           	callstack 0
 17069  01393C                     _ADCC_Initialize:
 17070                           	callstack 21
 17071                           
 17072                           ; BSR set to: 57
 17073                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 17074                           
 17075                           ; BSR set to: 62
 17076                           ;incstack = 0
 17077  01393C  0E00               	movlw	0
 17078  01393E  013E               	movlb	62	; () banked
 17079  013940  6FDE               	movwf	222,b	;volatile
 17080                           
 17081                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 17082  013942  0E00               	movlw	0
 17083  013944  6FDF               	movwf	223,b	;volatile
 17084                           
 17085                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 17086  013946  0E00               	movlw	0
 17087  013948  6FE0               	movwf	224,b	;volatile
 17088                           
 17089                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 17090  01394A  0E00               	movlw	0
 17091  01394C  6FE1               	movwf	225,b	;volatile
 17092                           
 17093                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 17094  01394E  0E00               	movlw	0
 17095  013950  6FE4               	movwf	228,b	;volatile
 17096                           
 17097                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 17098  013952  0E00               	movlw	0
 17099  013954  6FE5               	movwf	229,b	;volatile
 17100                           
 17101                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 17102  013956  0E00               	movlw	0
 17103  013958  6FEA               	movwf	234,b	;volatile
 17104                           
 17105                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 17106  01395A  0E00               	movlw	0
 17107  01395C  6FEC               	movwf	236,b	;volatile
 17108                           
 17109                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 17110  01395E  0E00               	movlw	0
 17111  013960  6FF1               	movwf	241,b	;volatile
 17112                           
 17113                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x10;
 17114  013962  0E10               	movlw	16
 17115  013964  6FF3               	movwf	243,b	;volatile
 17116                           
 17117                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 17118  013966  0E00               	movlw	0
 17119  013968  6FF4               	movwf	244,b	;volatile
 17120                           
 17121                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 17122  01396A  0E00               	movlw	0
 17123  01396C  6FF5               	movwf	245,b	;volatile
 17124                           
 17125                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 17126  01396E  0E00               	movlw	0
 17127  013970  6FF6               	movwf	246,b	;volatile
 17128                           
 17129                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 17130  013972  0E00               	movlw	0
 17131  013974  6FF7               	movwf	247,b	;volatile
 17132                           
 17133                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 17134  013976  0E00               	movlw	0
 17135  013978  6FF9               	movwf	249,b	;volatile
 17136                           
 17137                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x00;
 17138  01397A  0E00               	movlw	0
 17139  01397C  6FFA               	movwf	250,b	;volatile
 17140                           
 17141                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x20;
 17142  01397E  0E20               	movlw	32
 17143  013980  6FFB               	movwf	251,b	;volatile
 17144                           
 17145                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 17146  013982  0E00               	movlw	0
 17147  013984  6FFC               	movwf	252,b	;volatile
 17148                           
 17149                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x02;
 17150  013986  0E02               	movlw	2
 17151  013988  6FFD               	movwf	253,b	;volatile
 17152                           
 17153                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x07;
 17154  01398A  0E07               	movlw	7
 17155  01398C  6FFE               	movwf	254,b	;volatile
 17156                           
 17157                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x1F;
 17158  01398E  0E1F               	movlw	31
 17159  013990  6FFF               	movwf	255,b	;volatile
 17160                           
 17161                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0x84;
 17162  013992  0E84               	movlw	132
 17163  013994  6FF8               	movwf	248,b	;volatile
 17164                           
 17165                           ; BSR set to: 62
 17166                           ;mcc_generated_files/adcc.c: 113:     PIR1bits.ADIF = 0;
 17167  013996  0139               	movlb	57	; () banked
 17168  013998  95A1               	bcf	161,2,b	;volatile
 17169                           
 17170                           ; BSR set to: 57
 17171                           ;mcc_generated_files/adcc.c: 115:     PIE1bits.ADIE = 1;
 17172  01399A  8591               	bsf	145,2,b	;volatile
 17173                           
 17174                           ; BSR set to: 57
 17175                           ;mcc_generated_files/adcc.c: 117:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 17176  01399C  0E42               	movlw	low _ADCC_DefaultInterruptHandler
 17177  01399E  6E18               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler^0,c
 17178  0139A0  0E48               	movlw	high _ADCC_DefaultInterruptHandler
 17179  0139A2  6E19               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)^0,c
 17180  0139A4  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 17181  0139A6  6E1A               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+2)^0,c
 17182  0139A8  ECE5  F0A3         	call	_ADCC_SetADIInterruptHandler	;wreg free
 17183                           
 17184                           ; BSR set to: 57
 17185  0139AC  0012               	return		;funcret
 17186  0139AE                     __end_of_ADCC_Initialize:
 17187                           	callstack 0
 17188                           
 17189 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 17190 ;; Defined at:
 17191 ;;		line 316 in file "mcc_generated_files/adcc.c"
 17192 ;; Parameters:    Size  Location     Type
 17193 ;;  InterruptHan    3   23[COMRAM] PTR FTN()void 
 17194 ;;		 -> Adc_Isr(1), ADCC_DefaultInterruptHandler(1), 
 17195 ;; Auto vars:     Size  Location     Type
 17196 ;;		None
 17197 ;; Return value:  Size  Location     Type
 17198 ;;                  1    wreg      void 
 17199 ;; Registers used:
 17200 ;;		wreg, status,2, status,0
 17201 ;; Tracked objects:
 17202 ;;		On entry : 3F/39
 17203 ;;		On exit  : 3F/39
 17204 ;;		Unchanged: 3E/0
 17205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17206 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17209 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17210 ;;Total ram usage:        3 bytes
 17211 ;; Hardware stack levels used: 1
 17212 ;; Hardware stack levels required when called: 7
 17213 ;; This function calls:
 17214 ;;		Nothing
 17215 ;; This function is called by:
 17216 ;;		_ADCC_Initialize
 17217 ;;		_main
 17218 ;; This function uses a non-reentrant model
 17219 ;;
 17220                           
 17221                           	psect	text96
 17222  0147CA                     __ptext96:
 17223                           	callstack 0
 17224  0147CA                     _ADCC_SetADIInterruptHandler:
 17225                           	callstack 21
 17226                           
 17227                           ; BSR set to: 57
 17228                           ;mcc_generated_files/adcc.c: 317:     ADCC_ADI_InterruptHandler = InterruptHandler;
 17229                           
 17230                           ; BSR set to: 57
 17231                           ;incstack = 0
 17232  0147CA  C018  F0ED         	movff	ADCC_SetADIInterruptHandler@InterruptHandler,_ADCC_ADI_InterruptHandler
 17233  0147CE  C019  F0EE         	movff	ADCC_SetADIInterruptHandler@InterruptHandler+1,_ADCC_ADI_InterruptHandler+1
 17234  0147D2  C01A  F0EF         	movff	ADCC_SetADIInterruptHandler@InterruptHandler+2,_ADCC_ADI_InterruptHandler+2
 17235                           
 17236                           ; BSR set to: 57
 17237  0147D6  0012               	return		;funcret
 17238  0147D8                     __end_of_ADCC_SetADIInterruptHandler:
 17239                           	callstack 0
 17240                           
 17241 ;; *************** function _PWM6_LoadDutyValue *****************
 17242 ;; Defined at:
 17243 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 17244 ;; Parameters:    Size  Location     Type
 17245 ;;  dutyValue       2   23[COMRAM] unsigned short 
 17246 ;; Auto vars:     Size  Location     Type
 17247 ;;		None
 17248 ;; Return value:  Size  Location     Type
 17249 ;;                  1    wreg      void 
 17250 ;; Registers used:
 17251 ;;		wreg, status,2, status,0
 17252 ;; Tracked objects:
 17253 ;;		On entry : 3F/39
 17254 ;;		On exit  : 3F/39
 17255 ;;		Unchanged: 3E/0
 17256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17257 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17259 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17260 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17261 ;;Total ram usage:        4 bytes
 17262 ;; Hardware stack levels used: 1
 17263 ;; Hardware stack levels required when called: 7
 17264 ;; This function calls:
 17265 ;;		Nothing
 17266 ;; This function is called by:
 17267 ;;		_main
 17268 ;; This function uses a non-reentrant model
 17269 ;;
 17270                           
 17271                           	psect	text97
 17272  01431A                     __ptext97:
 17273                           	callstack 0
 17274  01431A                     _PWM6_LoadDutyValue:
 17275                           	callstack 23
 17276                           
 17277                           ; BSR set to: 57
 17278                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 17279                           
 17280                           ; BSR set to: 57
 17281                           ;incstack = 0
 17282  01431A  C018  F01A         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
 17283  01431E  C019  F01B         	movff	PWM6_LoadDutyValue@dutyValue+1,??_PWM6_LoadDutyValue+1
 17284  014322  90D8               	bcf	status,0,c
 17285  014324  321B               	rrcf	(??_PWM6_LoadDutyValue+1)^0,f,c
 17286  014326  321A               	rrcf	??_PWM6_LoadDutyValue^0,f,c
 17287  014328  90D8               	bcf	status,0,c
 17288  01432A  321B               	rrcf	(??_PWM6_LoadDutyValue+1)^0,f,c
 17289  01432C  321A               	rrcf	??_PWM6_LoadDutyValue^0,f,c
 17290  01432E  501A               	movf	??_PWM6_LoadDutyValue^0,w,c
 17291  014330  6E69               	movwf	105,c	;volatile
 17292                           
 17293                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
 17294  014332  C018  F01A         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
 17295  014336  0E03               	movlw	3
 17296  014338  161A               	andwf	??_PWM6_LoadDutyValue^0,f,c
 17297  01433A  0E06               	movlw	6
 17298  01433C  6E1B               	movwf	(??_PWM6_LoadDutyValue+1)^0,c
 17299  01433E                     u6355:
 17300  01433E  90D8               	bcf	status,0,c
 17301  014340  361A               	rlcf	??_PWM6_LoadDutyValue^0,f,c
 17302  014342  2E1B               	decfsz	(??_PWM6_LoadDutyValue+1)^0,f,c
 17303  014344  D7FC               	goto	u6355
 17304  014346  501A               	movf	??_PWM6_LoadDutyValue^0,w,c
 17305  014348  6E68               	movwf	104,c	;volatile
 17306                           
 17307                           ; BSR set to: 57
 17308  01434A  0012               	return		;funcret
 17309  01434C                     __end_of_PWM6_LoadDutyValue:
 17310                           	callstack 0
 17311                           
 17312 ;; *************** function _PWM5_LoadDutyValue *****************
 17313 ;; Defined at:
 17314 ;;		line 74 in file "mcc_generated_files/pwm5.c"
 17315 ;; Parameters:    Size  Location     Type
 17316 ;;  dutyValue       2   23[COMRAM] unsigned short 
 17317 ;; Auto vars:     Size  Location     Type
 17318 ;;		None
 17319 ;; Return value:  Size  Location     Type
 17320 ;;                  1    wreg      void 
 17321 ;; Registers used:
 17322 ;;		wreg, status,2, status,0
 17323 ;; Tracked objects:
 17324 ;;		On entry : 3F/39
 17325 ;;		On exit  : 3F/39
 17326 ;;		Unchanged: 3E/0
 17327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17328 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17330 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17331 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17332 ;;Total ram usage:        4 bytes
 17333 ;; Hardware stack levels used: 1
 17334 ;; Hardware stack levels required when called: 7
 17335 ;; This function calls:
 17336 ;;		Nothing
 17337 ;; This function is called by:
 17338 ;;		_main
 17339 ;; This function uses a non-reentrant model
 17340 ;;
 17341                           
 17342                           	psect	text98
 17343  01434C                     __ptext98:
 17344                           	callstack 0
 17345  01434C                     _PWM5_LoadDutyValue:
 17346                           	callstack 23
 17347                           
 17348                           ; BSR set to: 57
 17349                           ;mcc_generated_files/pwm5.c: 74:  void PWM5_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm5.c: 75:  {;mcc_generated_files/pwm5.c: 77:      PWM5DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 17350                           
 17351                           ; BSR set to: 57
 17352                           ;incstack = 0
 17353  01434C  C018  F01A         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
 17354  014350  C019  F01B         	movff	PWM5_LoadDutyValue@dutyValue+1,??_PWM5_LoadDutyValue+1
 17355  014354  90D8               	bcf	status,0,c
 17356  014356  321B               	rrcf	(??_PWM5_LoadDutyValue+1)^0,f,c
 17357  014358  321A               	rrcf	??_PWM5_LoadDutyValue^0,f,c
 17358  01435A  90D8               	bcf	status,0,c
 17359  01435C  321B               	rrcf	(??_PWM5_LoadDutyValue+1)^0,f,c
 17360  01435E  321A               	rrcf	??_PWM5_LoadDutyValue^0,f,c
 17361  014360  501A               	movf	??_PWM5_LoadDutyValue^0,w,c
 17362  014362  6E6D               	movwf	109,c	;volatile
 17363                           
 17364                           ;mcc_generated_files/pwm5.c: 80:      PWM5DCL = (dutyValue & 0x0003)<<6;
 17365  014364  C018  F01A         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
 17366  014368  0E03               	movlw	3
 17367  01436A  161A               	andwf	??_PWM5_LoadDutyValue^0,f,c
 17368  01436C  0E06               	movlw	6
 17369  01436E  6E1B               	movwf	(??_PWM5_LoadDutyValue+1)^0,c
 17370  014370                     u6345:
 17371  014370  90D8               	bcf	status,0,c
 17372  014372  361A               	rlcf	??_PWM5_LoadDutyValue^0,f,c
 17373  014374  2E1B               	decfsz	(??_PWM5_LoadDutyValue+1)^0,f,c
 17374  014376  D7FC               	goto	u6345
 17375  014378  501A               	movf	??_PWM5_LoadDutyValue^0,w,c
 17376  01437A  6E6C               	movwf	108,c	;volatile
 17377                           
 17378                           ; BSR set to: 57
 17379  01437C  0012               	return		;funcret
 17380  01437E                     __end_of_PWM5_LoadDutyValue:
 17381                           	callstack 0
 17382                           
 17383 ;; *************** function _DAC1_SetOutput *****************
 17384 ;; Defined at:
 17385 ;;		line 66 in file "mcc_generated_files/dac1.c"
 17386 ;; Parameters:    Size  Location     Type
 17387 ;;  inputData       1    wreg     unsigned char 
 17388 ;; Auto vars:     Size  Location     Type
 17389 ;;  inputData       1   23[COMRAM] unsigned char 
 17390 ;; Return value:  Size  Location     Type
 17391 ;;                  1    wreg      void 
 17392 ;; Registers used:
 17393 ;;		wreg
 17394 ;; Tracked objects:
 17395 ;;		On entry : 3F/0
 17396 ;;		On exit  : 0/0
 17397 ;;		Unchanged: 0/0
 17398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17400 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17402 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17403 ;;Total ram usage:        1 bytes
 17404 ;; Hardware stack levels used: 1
 17405 ;; Hardware stack levels required when called: 7
 17406 ;; This function calls:
 17407 ;;		Nothing
 17408 ;; This function is called by:
 17409 ;;		_main
 17410 ;; This function uses a non-reentrant model
 17411 ;;
 17412                           
 17413                           	psect	text99
 17414  014816                     __ptext99:
 17415                           	callstack 0
 17416  014816                     _DAC1_SetOutput:
 17417                           	callstack 23
 17418                           
 17419                           ; BSR set to: 57
 17420                           ;incstack = 0
 17421                           ;DAC1_SetOutput@inputData stored from wreg
 17422  014816  6E18               	movwf	DAC1_SetOutput@inputData^0,c
 17423                           
 17424                           ;mcc_generated_files/dac1.c: 66: void DAC1_SetOutput(uint8_t inputData);mcc_generated_fi
      +                          les/dac1.c: 67: {;mcc_generated_files/dac1.c: 68:     DAC1CON1 = inputData;
 17425  014818  0060  F063  FE9C   	movff	DAC1_SetOutput@inputData,16028	;volatile
 17426  01481E  0012               	return		;funcret
 17427  014820                     __end_of_DAC1_SetOutput:
 17428                           	callstack 0
 17429                           
 17430 ;; *************** function _DAC1_GetOutput *****************
 17431 ;; Defined at:
 17432 ;;		line 71 in file "mcc_generated_files/dac1.c"
 17433 ;; Parameters:    Size  Location     Type
 17434 ;;		None
 17435 ;; Auto vars:     Size  Location     Type
 17436 ;;		None
 17437 ;; Return value:  Size  Location     Type
 17438 ;;                  1    wreg      unsigned char 
 17439 ;; Registers used:
 17440 ;;		wreg, status,2
 17441 ;; Tracked objects:
 17442 ;;		On entry : 3F/1
 17443 ;;		On exit  : 3F/3E
 17444 ;;		Unchanged: 0/0
 17445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17450 ;;Total ram usage:        0 bytes
 17451 ;; Hardware stack levels used: 1
 17452 ;; Hardware stack levels required when called: 7
 17453 ;; This function calls:
 17454 ;;		Nothing
 17455 ;; This function is called by:
 17456 ;;		_main
 17457 ;; This function uses a non-reentrant model
 17458 ;;
 17459                           
 17460                           	psect	text100
 17461  014826                     __ptext100:
 17462                           	callstack 0
 17463  014826                     _DAC1_GetOutput:
 17464                           	callstack 23
 17465                           
 17466                           ; BSR set to: 1
 17467                           ;mcc_generated_files/dac1.c: 73:     return DAC1CON1;
 17468                           
 17469                           ;incstack = 0
 17470  014826  013E               	movlb	62	; () banked
 17471  014828  519C               	movf	156,w,b	;volatile
 17472                           
 17473                           ; BSR set to: 62
 17474  01482A  0012               	return		;funcret
 17475  01482C                     __end_of_DAC1_GetOutput:
 17476                           	callstack 0
 17477                           
 17478 ;; *************** function _UART1_rx_vect_isr *****************
 17479 ;; Defined at:
 17480 ;;		line 243 in file "mcc_generated_files/uart1.c"
 17481 ;; Parameters:    Size  Location     Type
 17482 ;;		None
 17483 ;; Auto vars:     Size  Location     Type
 17484 ;;		None
 17485 ;; Return value:  Size  Location     Type
 17486 ;;                  1    wreg      void 
 17487 ;; Registers used:
 17488 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 17489 ;; Tracked objects:
 17490 ;;		On entry : 0/0
 17491 ;;		On exit  : 0/0
 17492 ;;		Unchanged: 0/0
 17493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17496 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17497 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17498 ;;Total ram usage:        3 bytes
 17499 ;; Hardware stack levels used: 1
 17500 ;; Hardware stack levels required when called: 6
 17501 ;; This function calls:
 17502 ;;		Absolute function
 17503 ;;		_UART1_Receive_ISR
 17504 ;; This function is called by:
 17505 ;;		Interrupt level 1
 17506 ;; This function uses a non-reentrant model
 17507 ;;
 17508                           
 17509                           	psect	text101
 17510  013E74                     __ptext101:
 17511                           	callstack 0
 17512  013E74                     _UART1_rx_vect_isr:
 17513                           	callstack 15
 17514                           
 17515                           ; BSR set to: 62
 17516                           ;incstack = 0
 17517  013E74  006F FF60  F015    	movff	status,??_UART1_rx_vect_isr
 17518  013E7A  006F FFE8  F016    	movff	pclath,??_UART1_rx_vect_isr+1
 17519  013E80  006F FFEC  F017    	movff	pclatu,??_UART1_rx_vect_isr+2
 17520                           
 17521                           ;mcc_generated_files/uart1.c: 245:     if(UART1_RxInterruptHandler)
 17522  013E86  5037               	movf	_UART1_RxInterruptHandler^0,w,c
 17523  013E88  1038               	iorwf	(_UART1_RxInterruptHandler+1)^0,w,c
 17524  013E8A  1039               	iorwf	(_UART1_RxInterruptHandler+2)^0,w,c
 17525  013E8C  B4D8               	btfsc	status,2,c
 17526  013E8E  D00C               	goto	i1u659_29
 17527                           
 17528                           ;mcc_generated_files/uart1.c: 246:     {;mcc_generated_files/uart1.c: 247:         UART1
      +                          _RxInterruptHandler();
 17529  013E90  D801               	call	i1u659_28
 17530  013E92  D00A               	goto	i1u659_29
 17531  013E94                     i1u659_28:
 17532  013E94  0005               	push	
 17533  013E96  6EFA               	movwf	pclath,c
 17534  013E98  5037               	movf	_UART1_RxInterruptHandler^0,w,c
 17535  013E9A  6EFD               	movwf	tosl,c
 17536  013E9C  5038               	movf	(_UART1_RxInterruptHandler+1)^0,w,c
 17537  013E9E  6EFE               	movwf	tosh,c
 17538  013EA0  5039               	movf	(_UART1_RxInterruptHandler+2)^0,w,c
 17539  013EA2  6EFF               	movwf	tosu,c
 17540  013EA4  50FA               	movf	pclath,w,c
 17541  013EA6  0012               	return		;indir
 17542  013EA8                     i1u659_29:
 17543  013EA8  0060  F05F  FFFB   	movff	??_UART1_rx_vect_isr+2,pclatu
 17544  013EAE  0060  F05B  FFFA   	movff	??_UART1_rx_vect_isr+1,pclath
 17545  013EB4  0060  F057  FFD8   	movff	??_UART1_rx_vect_isr,status
 17546  013EBA  0011               	retfie		f
 17547  013EBC                     __end_of_UART1_rx_vect_isr:
 17548                           	callstack 0
 17549                           
 17550 ;; *************** function _UART1_Receive_ISR *****************
 17551 ;; Defined at:
 17552 ;;		line 273 in file "mcc_generated_files/uart1.c"
 17553 ;; Parameters:    Size  Location     Type
 17554 ;;		None
 17555 ;; Auto vars:     Size  Location     Type
 17556 ;;		None
 17557 ;; Return value:  Size  Location     Type
 17558 ;;                  1    wreg      void 
 17559 ;; Registers used:
 17560 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 17561 ;; Tracked objects:
 17562 ;;		On entry : 0/0
 17563 ;;		On exit  : 0/0
 17564 ;;		Unchanged: 0/0
 17565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17570 ;;Total ram usage:        0 bytes
 17571 ;; Hardware stack levels used: 1
 17572 ;; Hardware stack levels required when called: 5
 17573 ;; This function calls:
 17574 ;;		Absolute function
 17575 ;;		_UART1_DefaultErrorHandler
 17576 ;;		_UART1_DefaultFramingErrorHandler
 17577 ;;		_UART1_DefaultOverrunErrorHandler
 17578 ;;		_UART1_RxDataHandler
 17579 ;; This function is called by:
 17580 ;;		_UART1_Initialize
 17581 ;;		_UART1_rx_vect_isr
 17582 ;; This function uses a non-reentrant model
 17583 ;;
 17584                           
 17585                           	psect	text102
 17586  013672                     __ptext102:
 17587                           	callstack 0
 17588  013672                     _UART1_Receive_ISR:
 17589                           	callstack 15
 17590                           
 17591                           ;mcc_generated_files/uart1.c: 276:     uart1RxStatusBuffer[uart1RxHead].status = 0;
 17592                           
 17593                           ;incstack = 0
 17594  013672  0E18               	movlw	low _uart1RxStatusBuffer
 17595  013674  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 17596  013676  6ED9               	movwf	fsr2l,c
 17597  013678  6ADA               	clrf	fsr2h,c
 17598  01367A  0E01               	movlw	high _uart1RxStatusBuffer
 17599  01367C  22DA               	addwfc	fsr2h,f,c
 17600  01367E  0E00               	movlw	0
 17601  013680  6EDF               	movwf	indf2,c
 17602                           
 17603                           ;mcc_generated_files/uart1.c: 278:     if(U1ERRIRbits.FERIF){
 17604  013682  013D               	movlb	61	; () banked
 17605  013684  A7F9               	btfss	249,3,b	;volatile
 17606  013686  D015               	goto	i1u628_29
 17607                           
 17608                           ; BSR set to: 61
 17609                           ;mcc_generated_files/uart1.c: 279:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
 17610  013688  0E18               	movlw	low _uart1RxStatusBuffer
 17611  01368A  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 17612  01368C  6ED9               	movwf	fsr2l,c
 17613  01368E  6ADA               	clrf	fsr2h,c
 17614  013690  0E01               	movlw	high _uart1RxStatusBuffer
 17615  013692  22DA               	addwfc	fsr2h,f,c
 17616  013694  0101               	movlb	1	; () banked
 17617  013696  82DF               	bsf	indf2,1,c
 17618                           
 17619                           ; BSR set to: 1
 17620                           ;mcc_generated_files/uart1.c: 280:         UART1_FramingErrorHandler();
 17621  013698  D801               	call	i1u628_28
 17622  01369A  D00B               	goto	i1u628_29
 17623  01369C                     i1u628_28:
 17624  01369C  0005               	push	
 17625  01369E  6EFA               	movwf	pclath,c
 17626  0136A0  0100               	movlb	0	; () banked
 17627  0136A2  51E7               	movf	_UART1_FramingErrorHandler& (0+255),w,b
 17628  0136A4  6EFD               	movwf	tosl,c
 17629  0136A6  51E8               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
 17630  0136A8  6EFE               	movwf	tosh,c
 17631  0136AA  51E9               	movf	(_UART1_FramingErrorHandler+2)& (0+255),w,b
 17632  0136AC  6EFF               	movwf	tosu,c
 17633  0136AE  50FA               	movf	pclath,w,c
 17634  0136B0  0012               	return		;indir
 17635  0136B2                     i1u628_29:
 17636                           
 17637                           ;mcc_generated_files/uart1.c: 283:     if(U1ERRIRbits.RXFOIF){
 17638  0136B2  013D               	movlb	61	; () banked
 17639  0136B4  A3F9               	btfss	249,1,b	;volatile
 17640  0136B6  D014               	goto	i1u630_29
 17641                           
 17642                           ; BSR set to: 61
 17643                           ;mcc_generated_files/uart1.c: 284:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
 17644  0136B8  0E18               	movlw	low _uart1RxStatusBuffer
 17645  0136BA  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 17646  0136BC  6ED9               	movwf	fsr2l,c
 17647  0136BE  6ADA               	clrf	fsr2h,c
 17648  0136C0  0E01               	movlw	high _uart1RxStatusBuffer
 17649  0136C2  22DA               	addwfc	fsr2h,f,c
 17650  0136C4  0101               	movlb	1	; () banked
 17651  0136C6  84DF               	bsf	indf2,2,c
 17652                           
 17653                           ; BSR set to: 1
 17654                           ;mcc_generated_files/uart1.c: 285:         UART1_OverrunErrorHandler();
 17655  0136C8  D801               	call	i1u630_28
 17656  0136CA  D00A               	goto	i1u630_29
 17657  0136CC                     i1u630_28:
 17658  0136CC  0005               	push	
 17659  0136CE  6EFA               	movwf	pclath,c
 17660  0136D0  5143               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
 17661  0136D2  6EFD               	movwf	tosl,c
 17662  0136D4  5144               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
 17663  0136D6  6EFE               	movwf	tosh,c
 17664  0136D8  5145               	movf	(_UART1_OverrunErrorHandler+2)& (0+255),w,b
 17665  0136DA  6EFF               	movwf	tosu,c
 17666  0136DC  50FA               	movf	pclath,w,c
 17667  0136DE  0012               	return		;indir
 17668  0136E0                     i1u630_29:
 17669                           
 17670                           ;mcc_generated_files/uart1.c: 288:     if(uart1RxStatusBuffer[uart1RxHead].status){
 17671  0136E0  0E18               	movlw	low _uart1RxStatusBuffer
 17672  0136E2  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 17673  0136E4  6ED9               	movwf	fsr2l,c
 17674  0136E6  6ADA               	clrf	fsr2h,c
 17675  0136E8  0E01               	movlw	high _uart1RxStatusBuffer
 17676  0136EA  22DA               	addwfc	fsr2h,f,c
 17677  0136EC  50DF               	movf	indf2,w,c
 17678  0136EE  B4D8               	btfsc	status,2,c
 17679  0136F0  D00D               	goto	i1l7087
 17680                           
 17681                           ;mcc_generated_files/uart1.c: 289:         UART1_ErrorHandler();
 17682  0136F2  D801               	call	i1u632_28
 17683  0136F4  0012               	return	
 17684  0136F6                     i1u632_28:
 17685  0136F6  0005               	push	
 17686  0136F8  6EFA               	movwf	pclath,c
 17687  0136FA  0101               	movlb	1	; () banked
 17688  0136FC  5140               	movf	_UART1_ErrorHandler& (0+255),w,b
 17689  0136FE  6EFD               	movwf	tosl,c
 17690  013700  5141               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
 17691  013702  6EFE               	movwf	tosh,c
 17692  013704  5142               	movf	(_UART1_ErrorHandler+2)& (0+255),w,b
 17693  013706  6EFF               	movwf	tosu,c
 17694  013708  50FA               	movf	pclath,w,c
 17695  01370A  0012               	return		;indir
 17696  01370C                     i1l7087:
 17697                           
 17698                           ;mcc_generated_files/uart1.c: 291:         UART1_RxDataHandler();
 17699  01370C  ECBB  F0A2         	call	_UART1_RxDataHandler	;wreg free
 17700  013710  0012               	return		;funcret
 17701  013712                     __end_of_UART1_Receive_ISR:
 17702                           	callstack 0
 17703                           
 17704 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
 17705 ;; Defined at:
 17706 ;;		line 309 in file "mcc_generated_files/uart1.c"
 17707 ;; Parameters:    Size  Location     Type
 17708 ;;		None
 17709 ;; Auto vars:     Size  Location     Type
 17710 ;;		None
 17711 ;; Return value:  Size  Location     Type
 17712 ;;                  1    wreg      void 
 17713 ;; Registers used:
 17714 ;;		None
 17715 ;; Tracked objects:
 17716 ;;		On entry : 3F/1
 17717 ;;		On exit  : 3F/1
 17718 ;;		Unchanged: 3F/0
 17719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17724 ;;Total ram usage:        0 bytes
 17725 ;; Hardware stack levels used: 1
 17726 ;; Hardware stack levels required when called: 3
 17727 ;; This function calls:
 17728 ;;		Nothing
 17729 ;; This function is called by:
 17730 ;;		_UART1_Initialize
 17731 ;;		_UART1_Receive_ISR
 17732 ;; This function uses a non-reentrant model
 17733 ;;
 17734                           
 17735                           	psect	text103
 17736  01483E                     __ptext103:
 17737                           	callstack 0
 17738  01483E                     _UART1_DefaultOverrunErrorHandler:
 17739                           	callstack 16
 17740                           
 17741                           ; BSR set to: 1
 17742                           
 17743                           ;incstack = 0
 17744  01483E  0012               	return		;funcret
 17745  014840                     __end_of_UART1_DefaultOverrunErrorHandler:
 17746                           	callstack 0
 17747                           
 17748 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
 17749 ;; Defined at:
 17750 ;;		line 307 in file "mcc_generated_files/uart1.c"
 17751 ;; Parameters:    Size  Location     Type
 17752 ;;		None
 17753 ;; Auto vars:     Size  Location     Type
 17754 ;;		None
 17755 ;; Return value:  Size  Location     Type
 17756 ;;                  1    wreg      void 
 17757 ;; Registers used:
 17758 ;;		None
 17759 ;; Tracked objects:
 17760 ;;		On entry : 3F/0
 17761 ;;		On exit  : 3F/0
 17762 ;;		Unchanged: 3F/0
 17763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17768 ;;Total ram usage:        0 bytes
 17769 ;; Hardware stack levels used: 1
 17770 ;; Hardware stack levels required when called: 3
 17771 ;; This function calls:
 17772 ;;		Nothing
 17773 ;; This function is called by:
 17774 ;;		_UART1_Initialize
 17775 ;;		_UART1_Receive_ISR
 17776 ;; This function uses a non-reentrant model
 17777 ;;
 17778                           
 17779                           	psect	text104
 17780  014840                     __ptext104:
 17781                           	callstack 0
 17782  014840                     _UART1_DefaultFramingErrorHandler:
 17783                           	callstack 16
 17784                           
 17785                           ; BSR set to: 0
 17786                           
 17787                           ; BSR set to: 1
 17788                           ;incstack = 0
 17789  014840  0012               	return		;funcret
 17790  014842                     __end_of_UART1_DefaultFramingErrorHandler:
 17791                           	callstack 0
 17792                           
 17793 ;; *************** function _UART1_DefaultErrorHandler *****************
 17794 ;; Defined at:
 17795 ;;		line 311 in file "mcc_generated_files/uart1.c"
 17796 ;; Parameters:    Size  Location     Type
 17797 ;;		None
 17798 ;; Auto vars:     Size  Location     Type
 17799 ;;		None
 17800 ;; Return value:  Size  Location     Type
 17801 ;;                  1    wreg      void 
 17802 ;; Registers used:
 17803 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17804 ;; Tracked objects:
 17805 ;;		On entry : 3F/1
 17806 ;;		On exit  : 0/0
 17807 ;;		Unchanged: 0/0
 17808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17813 ;;Total ram usage:        0 bytes
 17814 ;; Hardware stack levels used: 1
 17815 ;; Hardware stack levels required when called: 4
 17816 ;; This function calls:
 17817 ;;		_UART1_RxDataHandler
 17818 ;; This function is called by:
 17819 ;;		_UART1_Initialize
 17820 ;;		_UART1_Receive_ISR
 17821 ;; This function uses a non-reentrant model
 17822 ;;
 17823                           
 17824                           	psect	text105
 17825  01482C                     __ptext105:
 17826                           	callstack 0
 17827  01482C                     _UART1_DefaultErrorHandler:
 17828                           	callstack 15
 17829                           
 17830                           ; BSR set to: 1
 17831                           ;mcc_generated_files/uart1.c: 312:     UART1_RxDataHandler();
 17832                           
 17833                           ; BSR set to: 0
 17834                           ;incstack = 0
 17835  01482C  ECBB  F0A2         	call	_UART1_RxDataHandler	;wreg free
 17836  014830  0012               	return		;funcret
 17837  014832                     __end_of_UART1_DefaultErrorHandler:
 17838                           	callstack 0
 17839                           
 17840 ;; *************** function _UART1_RxDataHandler *****************
 17841 ;; Defined at:
 17842 ;;		line 297 in file "mcc_generated_files/uart1.c"
 17843 ;; Parameters:    Size  Location     Type
 17844 ;;		None
 17845 ;; Auto vars:     Size  Location     Type
 17846 ;;		None
 17847 ;; Return value:  Size  Location     Type
 17848 ;;                  1    wreg      void 
 17849 ;; Registers used:
 17850 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17851 ;; Tracked objects:
 17852 ;;		On entry : 0/3D
 17853 ;;		On exit  : 0/0
 17854 ;;		Unchanged: 0/0
 17855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17860 ;;Total ram usage:        0 bytes
 17861 ;; Hardware stack levels used: 1
 17862 ;; Hardware stack levels required when called: 3
 17863 ;; This function calls:
 17864 ;;		Nothing
 17865 ;; This function is called by:
 17866 ;;		_UART1_Receive_ISR
 17867 ;;		_UART1_DefaultErrorHandler
 17868 ;; This function uses a non-reentrant model
 17869 ;;
 17870                           
 17871                           	psect	text106
 17872  014576                     __ptext106:
 17873                           	callstack 0
 17874  014576                     _UART1_RxDataHandler:
 17875                           	callstack 16
 17876                           
 17877                           ;mcc_generated_files/uart1.c: 299:     uart1RxBuffer[uart1RxHead++] = U1RXB;
 17878                           
 17879                           ;incstack = 0
 17880  014576  0E20               	movlw	low _uart1RxBuffer
 17881  014578  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 17882  01457A  6ED9               	movwf	fsr2l,c
 17883  01457C  6ADA               	clrf	fsr2h,c
 17884  01457E  0E01               	movlw	high _uart1RxBuffer
 17885  014580  22DA               	addwfc	fsr2h,f,c
 17886  014582  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 17887  014588  2A45               	incf	_uart1RxHead^0,f,c	;volatile
 17888                           
 17889                           ;mcc_generated_files/uart1.c: 300:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 17890  01458A  0E07               	movlw	7
 17891  01458C  6445               	cpfsgt	_uart1RxHead^0,c
 17892  01458E  D002               	goto	i1l6521
 17893                           
 17894                           ;mcc_generated_files/uart1.c: 301:     {;mcc_generated_files/uart1.c: 302:         uart1
      +                          RxHead = 0;
 17895  014590  0E00               	movlw	0
 17896  014592  6E45               	movwf	_uart1RxHead^0,c	;volatile
 17897  014594                     i1l6521:
 17898                           
 17899                           ;mcc_generated_files/uart1.c: 304:     uart1RxCount++;
 17900  014594  2A43               	incf	_uart1RxCount^0,f,c	;volatile
 17901  014596  0012               	return		;funcret
 17902  014598                     __end_of_UART1_RxDataHandler:
 17903                           	callstack 0
 17904                           
 17905 ;; *************** function _ADCC_ISR *****************
 17906 ;; Defined at:
 17907 ;;		line 307 in file "mcc_generated_files/adcc.c"
 17908 ;; Parameters:    Size  Location     Type
 17909 ;;		None
 17910 ;; Auto vars:     Size  Location     Type
 17911 ;;		None
 17912 ;; Return value:  Size  Location     Type
 17913 ;;                  1    wreg      void 
 17914 ;; Registers used:
 17915 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 17916 ;; Tracked objects:
 17917 ;;		On entry : 0/0
 17918 ;;		On exit  : 0/0
 17919 ;;		Unchanged: 0/0
 17920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17923 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17924 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17925 ;;Total ram usage:        2 bytes
 17926 ;; Hardware stack levels used: 1
 17927 ;; Hardware stack levels required when called: 2
 17928 ;; This function calls:
 17929 ;;		Absolute function
 17930 ;;		_ADCC_DefaultInterruptHandler
 17931 ;;		_Adc_Isr
 17932 ;; This function is called by:
 17933 ;;		Interrupt level 2
 17934 ;; This function uses a non-reentrant model
 17935 ;;
 17936                           
 17937                           	psect	text107
 17938  013F8C                     __ptext107:
 17939                           	callstack 0
 17940  013F8C                     _ADCC_ISR:
 17941                           	callstack 15
 17942                           
 17943                           ;incstack = 0
 17944  013F8C  006F FFE8  F006    	movff	pclath,??_ADCC_ISR
 17945  013F92  006F FFEC  F007    	movff	pclatu,??_ADCC_ISR+1
 17946                           
 17947                           ;mcc_generated_files/adcc.c: 310:     PIR1bits.ADIF = 0;
 17948  013F98  0139               	movlb	57	; () banked
 17949  013F9A  95A1               	bcf	161,2,b	;volatile
 17950                           
 17951                           ; BSR set to: 57
 17952                           ;mcc_generated_files/adcc.c: 312:     if (ADCC_ADI_InterruptHandler)
 17953  013F9C  0100               	movlb	0	; () banked
 17954  013F9E  51ED               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 17955  013FA0  11EE               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 17956  013FA2  11EF               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 17957  013FA4  B4D8               	btfsc	status,2,c
 17958  013FA6  D00C               	goto	i2u654_49
 17959                           
 17960                           ; BSR set to: 0
 17961                           ;mcc_generated_files/adcc.c: 313:             ADCC_ADI_InterruptHandler();
 17962  013FA8  D801               	call	i2u654_48
 17963  013FAA  D00A               	goto	i2u654_49
 17964  013FAC                     i2u654_48:
 17965  013FAC  0005               	push	
 17966  013FAE  6EFA               	movwf	pclath,c
 17967  013FB0  51ED               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 17968  013FB2  6EFD               	movwf	tosl,c
 17969  013FB4  51EE               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 17970  013FB6  6EFE               	movwf	tosh,c
 17971  013FB8  51EF               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 17972  013FBA  6EFF               	movwf	tosu,c
 17973  013FBC  50FA               	movf	pclath,w,c
 17974  013FBE  0012               	return		;indir
 17975  013FC0                     i2u654_49:
 17976  013FC0  0060  F01F  FFFB   	movff	??_ADCC_ISR+1,pclatu
 17977  013FC6  0060  F01B  FFFA   	movff	??_ADCC_ISR,pclath
 17978  013FCC  0011               	retfie		f
 17979  013FCE                     __end_of_ADCC_ISR:
 17980                           	callstack 0
 17981                           
 17982 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 17983 ;; Defined at:
 17984 ;;		line 320 in file "mcc_generated_files/adcc.c"
 17985 ;; Parameters:    Size  Location     Type
 17986 ;;		None
 17987 ;; Auto vars:     Size  Location     Type
 17988 ;;		None
 17989 ;; Return value:  Size  Location     Type
 17990 ;;                  1    wreg      void 
 17991 ;; Registers used:
 17992 ;;		None
 17993 ;; Tracked objects:
 17994 ;;		On entry : 3F/0
 17995 ;;		On exit  : 3F/0
 17996 ;;		Unchanged: 3F/0
 17997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18002 ;;Total ram usage:        0 bytes
 18003 ;; Hardware stack levels used: 1
 18004 ;; This function calls:
 18005 ;;		Nothing
 18006 ;; This function is called by:
 18007 ;;		_ADCC_Initialize
 18008 ;;		_ADCC_ISR
 18009 ;; This function uses a non-reentrant model
 18010 ;;
 18011                           
 18012                           	psect	text108
 18013  014842                     __ptext108:
 18014                           	callstack 0
 18015  014842                     _ADCC_DefaultInterruptHandler:
 18016                           	callstack 16
 18017                           
 18018                           ; BSR set to: 0
 18019                           
 18020                           ;incstack = 0
 18021  014842  0012               	return		;funcret
 18022  014844                     __end_of_ADCC_DefaultInterruptHandler:
 18023                           	callstack 0
 18024                           
 18025 ;; *************** function _Adc_Isr *****************
 18026 ;; Defined at:
 18027 ;;		line 84 in file "main.c"
 18028 ;; Parameters:    Size  Location     Type
 18029 ;;		None
 18030 ;; Auto vars:     Size  Location     Type
 18031 ;;		None
 18032 ;; Return value:  Size  Location     Type
 18033 ;;                  1    wreg      void 
 18034 ;; Registers used:
 18035 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18036 ;; Tracked objects:
 18037 ;;		On entry : 3F/0
 18038 ;;		On exit  : 3F/0
 18039 ;;		Unchanged: 0/0
 18040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18043 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18044 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18045 ;;Total ram usage:        1 bytes
 18046 ;; Hardware stack levels used: 1
 18047 ;; Hardware stack levels required when called: 1
 18048 ;; This function calls:
 18049 ;;		_ADCC_GetConversionResult
 18050 ;; This function is called by:
 18051 ;;		_main
 18052 ;;		_ADCC_ISR
 18053 ;; This function uses a non-reentrant model
 18054 ;;
 18055                           
 18056                           	psect	text109
 18057  0142A4                     __ptext109:
 18058                           	callstack 0
 18059  0142A4                     _Adc_Isr:
 18060                           	callstack 15
 18061                           
 18062                           ; BSR set to: 0
 18063                           ;main.c: 86:  ana[adc_chan] = ADCC_GetConversionResult();
 18064                           
 18065                           ; BSR set to: 0
 18066                           ;incstack = 0
 18067  0142A4  EC72  F0A3         	call	_ADCC_GetConversionResult	;wreg free
 18068  0142A8  5041               	movf	_adc_chan^0,w,c
 18069  0142AA  0D02               	mullw	2
 18070  0142AC  50F3               	movf	243,w,c
 18071  0142AE  0F33               	addlw	low _ana
 18072  0142B0  6ED9               	movwf	fsr2l,c
 18073  0142B2  6ADA               	clrf	fsr2h,c
 18074  0142B4  0060  F007  FFDE   	movff	?_ADCC_GetConversionResult,postinc2
 18075  0142BA  0060  F00B  FFDD   	movff	?_ADCC_GetConversionResult+1,postdec2
 18076                           
 18077                           ; BSR set to: 62
 18078                           ;main.c: 87:  if (adc_chan++ >= 2) {
 18079  0142C0  2A41               	incf	_adc_chan^0,f,c	;volatile
 18080  0142C2  0441               	decf	_adc_chan^0,w,c	;volatile
 18081  0142C4  6E05               	movwf	??_Adc_Isr^0,c
 18082  0142C6  0E01               	movlw	1
 18083  0142C8  6405               	cpfsgt	??_Adc_Isr^0,c
 18084  0142CA  D002               	goto	i2l7103
 18085                           
 18086                           ; BSR set to: 62
 18087                           ;main.c: 88:   adc_chan = 0;
 18088  0142CC  0E00               	movlw	0
 18089  0142CE  6E41               	movwf	_adc_chan^0,c	;volatile
 18090  0142D0                     i2l7103:
 18091                           
 18092                           ; BSR set to: 62
 18093                           ;main.c: 90:  ADPCH = adc_chan;
 18094  0142D0  0060  F107  FEF1   	movff	_adc_chan,16113	;volatile
 18095                           
 18096                           ;main.c: 94:  adc_tick = 1;
 18097  0142D6  0E01               	movlw	1
 18098  0142D8  0100               	movlb	0	; () banked
 18099  0142DA  6FFC               	movwf	_adc_tick& (0+255),b	;volatile
 18100                           
 18101                           ; BSR set to: 0
 18102  0142DC  0012               	return		;funcret
 18103  0142DE                     __end_of_Adc_Isr:
 18104                           	callstack 0
 18105                           
 18106 ;; *************** function _ADCC_GetConversionResult *****************
 18107 ;; Defined at:
 18108 ;;		line 139 in file "mcc_generated_files/adcc.c"
 18109 ;; Parameters:    Size  Location     Type
 18110 ;;		None
 18111 ;; Auto vars:     Size  Location     Type
 18112 ;;		None
 18113 ;; Return value:  Size  Location     Type
 18114 ;;                  2    0[COMRAM] unsigned short 
 18115 ;; Registers used:
 18116 ;;		wreg, status,2, status,0
 18117 ;; Tracked objects:
 18118 ;;		On entry : 3F/0
 18119 ;;		On exit  : 3F/3E
 18120 ;;		Unchanged: 0/0
 18121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18122 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18124 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18125 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18126 ;;Total ram usage:        4 bytes
 18127 ;; Hardware stack levels used: 1
 18128 ;; This function calls:
 18129 ;;		Nothing
 18130 ;; This function is called by:
 18131 ;;		_Adc_Isr
 18132 ;; This function uses a non-reentrant model
 18133 ;;
 18134                           
 18135                           	psect	text110
 18136  0146E4                     __ptext110:
 18137                           	callstack 0
 18138  0146E4                     _ADCC_GetConversionResult:
 18139                           	callstack 15
 18140                           
 18141                           ; BSR set to: 0
 18142                           ;mcc_generated_files/adcc.c: 142:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 18143                           
 18144                           ; BSR set to: 0
 18145                           ;incstack = 0
 18146  0146E4  013E               	movlb	62	; () banked
 18147  0146E6  51F0               	movf	240,w,b	;volatile
 18148  0146E8  6E04               	movwf	(??_ADCC_GetConversionResult+1)^0,c
 18149  0146EA  6A03               	clrf	??_ADCC_GetConversionResult^0,c
 18150  0146EC  51EF               	movf	239,w,b	;volatile
 18151  0146EE  2403               	addwf	??_ADCC_GetConversionResult^0,w,c
 18152  0146F0  6E01               	movwf	?_ADCC_GetConversionResult^0,c
 18153  0146F2  0E00               	movlw	0
 18154  0146F4  2004               	addwfc	(??_ADCC_GetConversionResult+1)^0,w,c
 18155  0146F6  6E02               	movwf	(?_ADCC_GetConversionResult+1)^0,c
 18156                           
 18157                           ; BSR set to: 62
 18158  0146F8  0012               	return		;funcret
 18159  0146FA                     __end_of_ADCC_GetConversionResult:
 18160                           	callstack 0
 18161                           
 18162 ;; *************** function _TMR6_ISR *****************
 18163 ;; Defined at:
 18164 ;;		line 166 in file "mcc_generated_files/tmr6.c"
 18165 ;; Parameters:    Size  Location     Type
 18166 ;;		None
 18167 ;; Auto vars:     Size  Location     Type
 18168 ;;		None
 18169 ;; Return value:  Size  Location     Type
 18170 ;;                  1    wreg      void 
 18171 ;; Registers used:
 18172 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 18173 ;; Tracked objects:
 18174 ;;		On entry : 0/0
 18175 ;;		On exit  : 0/0
 18176 ;;		Unchanged: 0/0
 18177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18180 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18181 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18182 ;;Total ram usage:        2 bytes
 18183 ;; Hardware stack levels used: 1
 18184 ;; Hardware stack levels required when called: 2
 18185 ;; This function calls:
 18186 ;;		_TMR6_CallBack
 18187 ;; This function is called by:
 18188 ;;		Interrupt level 2
 18189 ;; This function uses a non-reentrant model
 18190 ;;
 18191                           
 18192                           	psect	text111
 18193  0142E0                     __ptext111:
 18194                           	callstack 0
 18195  0142E0                     _TMR6_ISR:
 18196                           	callstack 15
 18197                           
 18198                           ; BSR set to: 62
 18199                           ;incstack = 0
 18200  0142E0  006F FFE8  F009    	movff	pclath,??_TMR6_ISR
 18201  0142E6  006F FFEC  F00A    	movff	pclatu,??_TMR6_ISR+1
 18202                           
 18203                           ;mcc_generated_files/tmr6.c: 168:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr6.c: 171:     PIR9bits.TMR6IF = 0;
 18204  0142EC  0139               	movlb	57	; () banked
 18205  0142EE  91A9               	bcf	169,0,b	;volatile
 18206                           
 18207                           ; BSR set to: 57
 18208                           ;mcc_generated_files/tmr6.c: 174:     if (++CountCallBack >= 23)
 18209  0142F0  4A3E               	infsnz	TMR6_ISR@CountCallBack^0,f,c	;volatile
 18210  0142F2  2A3F               	incf	(TMR6_ISR@CountCallBack+1)^0,f,c	;volatile
 18211  0142F4  503F               	movf	(TMR6_ISR@CountCallBack+1)^0,w,c	;volatile
 18212  0142F6  E104               	bnz	i2u655_40
 18213  0142F8  0E17               	movlw	23
 18214  0142FA  5C3E               	subwf	TMR6_ISR@CountCallBack^0,w,c	;volatile
 18215  0142FC  A0D8               	btfss	status,0,c
 18216  0142FE  D006               	goto	i2l477
 18217  014300                     i2u655_40:
 18218                           
 18219                           ; BSR set to: 57
 18220                           ;mcc_generated_files/tmr6.c: 175:     {;mcc_generated_files/tmr6.c: 177:         TMR6_Ca
      +                          llBack();
 18221  014300  EC86  F0A2         	call	_TMR6_CallBack	;wreg free
 18222                           
 18223                           ;mcc_generated_files/tmr6.c: 180:         CountCallBack = 0;
 18224  014304  0E00               	movlw	0
 18225  014306  6E3F               	movwf	(TMR6_ISR@CountCallBack+1)^0,c	;volatile
 18226  014308  0E00               	movlw	0
 18227  01430A  6E3E               	movwf	TMR6_ISR@CountCallBack^0,c	;volatile
 18228  01430C                     i2l477:
 18229  01430C  0060  F02B  FFFB   	movff	??_TMR6_ISR+1,pclatu
 18230  014312  0060  F027  FFFA   	movff	??_TMR6_ISR,pclath
 18231  014318  0011               	retfie		f
 18232  01431A                     __end_of_TMR6_ISR:
 18233                           	callstack 0
 18234                           
 18235 ;; *************** function _TMR6_CallBack *****************
 18236 ;; Defined at:
 18237 ;;		line 184 in file "mcc_generated_files/tmr6.c"
 18238 ;; Parameters:    Size  Location     Type
 18239 ;;		None
 18240 ;; Auto vars:     Size  Location     Type
 18241 ;;		None
 18242 ;; Return value:  Size  Location     Type
 18243 ;;                  1    wreg      void 
 18244 ;; Registers used:
 18245 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 18246 ;; Tracked objects:
 18247 ;;		On entry : 3F/39
 18248 ;;		On exit  : 0/0
 18249 ;;		Unchanged: 0/0
 18250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18255 ;;Total ram usage:        0 bytes
 18256 ;; Hardware stack levels used: 1
 18257 ;; Hardware stack levels required when called: 1
 18258 ;; This function calls:
 18259 ;;		Absolute function
 18260 ;;		_Led_Blink
 18261 ;;		_TMR6_DefaultInterruptHandler
 18262 ;; This function is called by:
 18263 ;;		_TMR6_ISR
 18264 ;; This function uses a non-reentrant model
 18265 ;;
 18266                           
 18267                           	psect	text112
 18268  01450C                     __ptext112:
 18269                           	callstack 0
 18270  01450C                     _TMR6_CallBack:
 18271                           	callstack 15
 18272                           
 18273                           ; BSR set to: 57
 18274                           ;mcc_generated_files/tmr6.c: 188:     if(TMR6_InterruptHandler)
 18275                           
 18276                           ;incstack = 0
 18277  01450C  0100               	movlb	0	; () banked
 18278  01450E  51EA               	movf	_TMR6_InterruptHandler& (0+255),w,b
 18279  014510  11EB               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 18280  014512  11EC               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 18281  014514  B4D8               	btfsc	status,2,c
 18282  014516  0012               	return	
 18283                           
 18284                           ; BSR set to: 0
 18285                           ;mcc_generated_files/tmr6.c: 189:     {;mcc_generated_files/tmr6.c: 190:         TMR6_In
      +                          terruptHandler();
 18286  014518  D801               	call	i2u624_48
 18287  01451A  0012               	return	
 18288  01451C                     i2u624_48:
 18289  01451C  0005               	push	
 18290  01451E  6EFA               	movwf	pclath,c
 18291  014520  51EA               	movf	_TMR6_InterruptHandler& (0+255),w,b
 18292  014522  6EFD               	movwf	tosl,c
 18293  014524  51EB               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 18294  014526  6EFE               	movwf	tosh,c
 18295  014528  51EC               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 18296  01452A  6EFF               	movwf	tosu,c
 18297  01452C  50FA               	movf	pclath,w,c
 18298  01452E  0012               	return		;indir
 18299  014530                     __end_of_TMR6_CallBack:
 18300                           	callstack 0
 18301                           
 18302 ;; *************** function _Led_Blink *****************
 18303 ;; Defined at:
 18304 ;;		line 68 in file "main.c"
 18305 ;; Parameters:    Size  Location     Type
 18306 ;;		None
 18307 ;; Auto vars:     Size  Location     Type
 18308 ;;		None
 18309 ;; Return value:  Size  Location     Type
 18310 ;;                  1    wreg      void 
 18311 ;; Registers used:
 18312 ;;		wreg, status,2, status,0
 18313 ;; Tracked objects:
 18314 ;;		On entry : 3F/0
 18315 ;;		On exit  : 3F/0
 18316 ;;		Unchanged: 0/0
 18317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18320 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18321 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18322 ;;Total ram usage:        1 bytes
 18323 ;; Hardware stack levels used: 1
 18324 ;; This function calls:
 18325 ;;		Nothing
 18326 ;; This function is called by:
 18327 ;;		_main
 18328 ;;		_TMR6_CallBack
 18329 ;; This function uses a non-reentrant model
 18330 ;;
 18331                           
 18332                           	psect	text113
 18333  014614                     __ptext113:
 18334                           	callstack 0
 18335  014614                     _Led_Blink:
 18336                           	callstack 15
 18337                           
 18338                           ; BSR set to: 0
 18339                           
 18340                           ; BSR set to: 0
 18341                           
 18342                           ;incstack = 0
 18343                           ;main.c: 70:  do { LATEbits.LATE0 = ~LATEbits.LATE0; } while(0);
 18344  014614  A0BE               	btfss	190,0,c	;volatile
 18345  014616  D002               	goto	i2u613_40
 18346  014618  0E01               	movlw	1
 18347  01461A  D001               	goto	i2u613_46
 18348  01461C                     i2u613_40:
 18349  01461C  0E00               	movlw	0
 18350  01461E                     i2u613_46:
 18351  01461E  0AFF               	xorlw	255
 18352  014620  6E08               	movwf	??_Led_Blink^0,c
 18353  014622  50BE               	movf	190,w,c	;volatile
 18354  014624  1808               	xorwf	??_Led_Blink^0,w,c
 18355  014626  0BFE               	andlw	-2
 18356  014628  1808               	xorwf	??_Led_Blink^0,w,c
 18357  01462A  6EBE               	movwf	190,c	;volatile
 18358                           
 18359                           ; BSR set to: 0
 18360                           ;main.c: 74:  disp_tick = 1;
 18361  01462C  0E01               	movlw	1
 18362  01462E  6FFD               	movwf	_disp_tick& (0+255),b	;volatile
 18363                           
 18364                           ; BSR set to: 0
 18365  014630  0012               	return		;funcret
 18366  014632                     __end_of_Led_Blink:
 18367                           	callstack 0
 18368                           
 18369 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 18370 ;; Defined at:
 18371 ;;		line 198 in file "mcc_generated_files/tmr6.c"
 18372 ;; Parameters:    Size  Location     Type
 18373 ;;		None
 18374 ;; Auto vars:     Size  Location     Type
 18375 ;;		None
 18376 ;; Return value:  Size  Location     Type
 18377 ;;                  1    wreg      void 
 18378 ;; Registers used:
 18379 ;;		None
 18380 ;; Tracked objects:
 18381 ;;		On entry : 3F/0
 18382 ;;		On exit  : 3F/0
 18383 ;;		Unchanged: 3F/0
 18384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18389 ;;Total ram usage:        0 bytes
 18390 ;; Hardware stack levels used: 1
 18391 ;; This function calls:
 18392 ;;		Nothing
 18393 ;; This function is called by:
 18394 ;;		_TMR6_Initialize
 18395 ;;		_TMR6_CallBack
 18396 ;; This function uses a non-reentrant model
 18397 ;;
 18398                           
 18399                           	psect	text114
 18400  014844                     __ptext114:
 18401                           	callstack 0
 18402  014844                     _TMR6_DefaultInterruptHandler:
 18403                           	callstack 15
 18404                           
 18405                           ; BSR set to: 0
 18406                           
 18407                           ; BSR set to: 0
 18408                           ;incstack = 0
 18409  014844  0012               	return		;funcret
 18410  014846                     __end_of_TMR6_DefaultInterruptHandler:
 18411                           	callstack 0
 18412                           
 18413 ;; *************** function _Default_ISR *****************
 18414 ;; Defined at:
 18415 ;;		line 80 in file "mcc_generated_files/interrupt_manager.c"
 18416 ;; Parameters:    Size  Location     Type
 18417 ;;		None
 18418 ;; Auto vars:     Size  Location     Type
 18419 ;;		None
 18420 ;; Return value:  Size  Location     Type
 18421 ;;                  1    wreg      void 
 18422 ;; Registers used:
 18423 ;;		None
 18424 ;; Tracked objects:
 18425 ;;		On entry : 0/0
 18426 ;;		On exit  : 0/0
 18427 ;;		Unchanged: 0/0
 18428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18433 ;;Total ram usage:        0 bytes
 18434 ;; Hardware stack levels used: 1
 18435 ;; This function calls:
 18436 ;;		Nothing
 18437 ;; This function is called by:
 18438 ;;		Interrupt level 2
 18439 ;; This function uses a non-reentrant model
 18440 ;;
 18441                           
 18442                           	psect	text115
 18443  014848                     __ptext115:
 18444                           	callstack 0
 18445  014848                     _Default_ISR:
 18446                           	callstack 17
 18447                           
 18448                           ; BSR set to: 0
 18449                           ;incstack = 0
 18450  014848  0011               	retfie		f
 18451  01484A                     __end_of_Default_ISR:
 18452                           	callstack 0
 18453                           
 18454 ;; *************** function _UART1_tx_vect_isr *****************
 18455 ;; Defined at:
 18456 ;;		line 235 in file "mcc_generated_files/uart1.c"
 18457 ;; Parameters:    Size  Location     Type
 18458 ;;		None
 18459 ;; Auto vars:     Size  Location     Type
 18460 ;;		None
 18461 ;; Return value:  Size  Location     Type
 18462 ;;                  1    wreg      void 
 18463 ;; Registers used:
 18464 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 18465 ;; Tracked objects:
 18466 ;;		On entry : 0/0
 18467 ;;		On exit  : 0/0
 18468 ;;		Unchanged: 0/0
 18469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18472 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18473 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18474 ;;Total ram usage:        2 bytes
 18475 ;; Hardware stack levels used: 1
 18476 ;; Hardware stack levels required when called: 1
 18477 ;; This function calls:
 18478 ;;		Absolute function
 18479 ;;		_UART1_Transmit_ISR
 18480 ;; This function is called by:
 18481 ;;		Interrupt level 2
 18482 ;; This function uses a non-reentrant model
 18483 ;;
 18484                           
 18485                           	psect	text116
 18486  0140CC                     __ptext116:
 18487                           	callstack 0
 18488  0140CC                     _UART1_tx_vect_isr:
 18489                           	callstack 16
 18490                           
 18491                           ;incstack = 0
 18492  0140CC  006F FFE8  F00B    	movff	pclath,??_UART1_tx_vect_isr
 18493  0140D2  006F FFEC  F00C    	movff	pclatu,??_UART1_tx_vect_isr+1
 18494                           
 18495                           ;mcc_generated_files/uart1.c: 237:     if(UART1_TxInterruptHandler)
 18496  0140D8  0100               	movlb	0	; () banked
 18497  0140DA  51F0               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 18498  0140DC  11F1               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 18499  0140DE  11F2               	iorwf	(_UART1_TxInterruptHandler+2)& (0+255),w,b
 18500  0140E0  B4D8               	btfsc	status,2,c
 18501  0140E2  D00C               	goto	i2u657_49
 18502                           
 18503                           ; BSR set to: 0
 18504                           ;mcc_generated_files/uart1.c: 238:     {;mcc_generated_files/uart1.c: 239:         UART1
      +                          _TxInterruptHandler();
 18505  0140E4  D801               	call	i2u657_48
 18506  0140E6  D00A               	goto	i2u657_49
 18507  0140E8                     i2u657_48:
 18508  0140E8  0005               	push	
 18509  0140EA  6EFA               	movwf	pclath,c
 18510  0140EC  51F0               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 18511  0140EE  6EFD               	movwf	tosl,c
 18512  0140F0  51F1               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 18513  0140F2  6EFE               	movwf	tosh,c
 18514  0140F4  51F2               	movf	(_UART1_TxInterruptHandler+2)& (0+255),w,b
 18515  0140F6  6EFF               	movwf	tosu,c
 18516  0140F8  50FA               	movf	pclath,w,c
 18517  0140FA  0012               	return		;indir
 18518  0140FC                     i2u657_49:
 18519  0140FC  0060  F033  FFFB   	movff	??_UART1_tx_vect_isr+1,pclatu
 18520  014102  0060  F02F  FFFA   	movff	??_UART1_tx_vect_isr,pclath
 18521  014108  0011               	retfie		f
 18522  01410A                     __end_of_UART1_tx_vect_isr:
 18523                           	callstack 0
 18524                           
 18525 ;; *************** function _UART1_Transmit_ISR *****************
 18526 ;; Defined at:
 18527 ;;		line 253 in file "mcc_generated_files/uart1.c"
 18528 ;; Parameters:    Size  Location     Type
 18529 ;;		None
 18530 ;; Auto vars:     Size  Location     Type
 18531 ;;		None
 18532 ;; Return value:  Size  Location     Type
 18533 ;;                  1    wreg      void 
 18534 ;; Registers used:
 18535 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18536 ;; Tracked objects:
 18537 ;;		On entry : 3F/0
 18538 ;;		On exit  : 3B/39
 18539 ;;		Unchanged: 0/0
 18540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18545 ;;Total ram usage:        0 bytes
 18546 ;; Hardware stack levels used: 1
 18547 ;; This function calls:
 18548 ;;		Nothing
 18549 ;; This function is called by:
 18550 ;;		_UART1_Initialize
 18551 ;;		_UART1_tx_vect_isr
 18552 ;; This function uses a non-reentrant model
 18553 ;;
 18554                           
 18555                           	psect	text117
 18556  014468                     __ptext117:
 18557                           	callstack 0
 18558  014468                     _UART1_Transmit_ISR:
 18559                           	callstack 16
 18560                           
 18561                           ; BSR set to: 0
 18562                           ;mcc_generated_files/uart1.c: 256:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
 18563                           
 18564                           ;incstack = 0
 18565  014468  0E08               	movlw	8
 18566  01446A  6046               	cpfslt	_uart1TxBufferRemaining^0,c
 18567  01446C  D011               	goto	i2l667
 18568                           
 18569                           ; BSR set to: 0
 18570                           ;mcc_generated_files/uart1.c: 257:     {;mcc_generated_files/uart1.c: 258:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
 18571  01446E  0E28               	movlw	low _uart1TxBuffer
 18572  014470  2447               	addwf	_uart1TxTail^0,w,c	;volatile
 18573  014472  6ED9               	movwf	fsr2l,c
 18574  014474  6ADA               	clrf	fsr2h,c
 18575  014476  0E01               	movlw	high _uart1TxBuffer
 18576  014478  22DA               	addwfc	fsr2h,f,c
 18577  01447A  50DF               	movf	indf2,w,c
 18578  01447C  013D               	movlb	61	; () banked
 18579  01447E  6FEA               	movwf	234,b	;volatile
 18580                           
 18581                           ; BSR set to: 61
 18582  014480  2A47               	incf	_uart1TxTail^0,f,c	;volatile
 18583                           
 18584                           ; BSR set to: 61
 18585                           ;mcc_generated_files/uart1.c: 259:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
 18586  014482  0E07               	movlw	7
 18587  014484  6447               	cpfsgt	_uart1TxTail^0,c
 18588  014486  D002               	goto	i2l7067
 18589                           
 18590                           ; BSR set to: 61
 18591                           ;mcc_generated_files/uart1.c: 260:         {;mcc_generated_files/uart1.c: 261:          
      +                             uart1TxTail = 0;
 18592  014488  0E00               	movlw	0
 18593  01448A  6E47               	movwf	_uart1TxTail^0,c	;volatile
 18594  01448C                     i2l7067:
 18595                           
 18596                           ; BSR set to: 61
 18597                           ;mcc_generated_files/uart1.c: 263:         uart1TxBufferRemaining++;
 18598  01448C  2A46               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 18599                           
 18600                           ;mcc_generated_files/uart1.c: 264:     }
 18601  01448E  0012               	return	
 18602  014490                     i2l667:
 18603                           
 18604                           ; BSR set to: 0
 18605                           ;mcc_generated_files/uart1.c: 266:     {;mcc_generated_files/uart1.c: 267:         PIE3b
      +                          its.U1TXIE = 0;
 18606  014490  0139               	movlb	57	; () banked
 18607  014492  9993               	bcf	147,4,b	;volatile
 18608  014494  0012               	return		;funcret
 18609  014496                     __end_of_UART1_Transmit_ISR:
 18610                           	callstack 0
 18611                           
 18612 ;; *************** function _TMR5_ISR *****************
 18613 ;; Defined at:
 18614 ;;		line 165 in file "mcc_generated_files/tmr5.c"
 18615 ;; Parameters:    Size  Location     Type
 18616 ;;		None
 18617 ;; Auto vars:     Size  Location     Type
 18618 ;;		None
 18619 ;; Return value:  Size  Location     Type
 18620 ;;                  1    wreg      void 
 18621 ;; Registers used:
 18622 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 18623 ;; Tracked objects:
 18624 ;;		On entry : 0/0
 18625 ;;		On exit  : 0/0
 18626 ;;		Unchanged: 0/0
 18627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18630 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18631 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18632 ;;Total ram usage:        2 bytes
 18633 ;; Hardware stack levels used: 1
 18634 ;; Hardware stack levels required when called: 1
 18635 ;; This function calls:
 18636 ;;		Absolute function
 18637 ;;		_TMR5_DefaultInterruptHandler
 18638 ;;		_TMR5_WriteTimer
 18639 ;;		_Timers_Isr
 18640 ;; This function is called by:
 18641 ;;		Interrupt level 2
 18642 ;; This function uses a non-reentrant model
 18643 ;;
 18644                           
 18645                           	psect	text118
 18646  013D90                     __ptext118:
 18647                           	callstack 0
 18648  013D90                     _TMR5_ISR:
 18649                           	callstack 16
 18650                           
 18651                           ;incstack = 0
 18652  013D90  006F FFE8  F011    	movff	pclath,??_TMR5_ISR
 18653  013D96  006F FFEC  F012    	movff	pclatu,??_TMR5_ISR+1
 18654                           
 18655                           ;mcc_generated_files/tmr5.c: 169:     PIR8bits.TMR5IF = 0;
 18656  013D9C  0139               	movlb	57	; () banked
 18657  013D9E  9DA8               	bcf	168,6,b	;volatile
 18658                           
 18659                           ; BSR set to: 57
 18660                           ;mcc_generated_files/tmr5.c: 170:     TMR5_WriteTimer(timer5ReloadVal);
 18661  013DA0  C03C  F00D         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 18662  013DA4  C03D  F00E         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 18663  013DA8  EC98  F0A2         	call	_TMR5_WriteTimer	;wreg free
 18664                           
 18665                           ; BSR set to: 57
 18666                           ;mcc_generated_files/tmr5.c: 172:     if(TMR5_InterruptHandler)
 18667  013DAC  0100               	movlb	0	; () banked
 18668  013DAE  51E4               	movf	_TMR5_InterruptHandler& (0+255),w,b
 18669  013DB0  11E5               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 18670  013DB2  11E6               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 18671  013DB4  B4D8               	btfsc	status,2,c
 18672  013DB6  D00C               	goto	i2u661_49
 18673                           
 18674                           ; BSR set to: 0
 18675                           ;mcc_generated_files/tmr5.c: 173:     {;mcc_generated_files/tmr5.c: 174:         TMR5_In
      +                          terruptHandler();
 18676  013DB8  D801               	call	i2u661_48
 18677  013DBA  D00A               	goto	i2u661_49
 18678  013DBC                     i2u661_48:
 18679  013DBC  0005               	push	
 18680  013DBE  6EFA               	movwf	pclath,c
 18681  013DC0  51E4               	movf	_TMR5_InterruptHandler& (0+255),w,b
 18682  013DC2  6EFD               	movwf	tosl,c
 18683  013DC4  51E5               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 18684  013DC6  6EFE               	movwf	tosh,c
 18685  013DC8  51E6               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 18686  013DCA  6EFF               	movwf	tosu,c
 18687  013DCC  50FA               	movf	pclath,w,c
 18688  013DCE  0012               	return		;indir
 18689  013DD0                     i2u661_49:
 18690  013DD0  0060  F04B  FFFB   	movff	??_TMR5_ISR+1,pclatu
 18691  013DD6  0060  F047  FFFA   	movff	??_TMR5_ISR,pclath
 18692  013DDC  0011               	retfie		f
 18693  013DDE                     __end_of_TMR5_ISR:
 18694                           	callstack 0
 18695                           
 18696 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 18697 ;; Defined at:
 18698 ;;		line 183 in file "mcc_generated_files/tmr5.c"
 18699 ;; Parameters:    Size  Location     Type
 18700 ;;		None
 18701 ;; Auto vars:     Size  Location     Type
 18702 ;;		None
 18703 ;; Return value:  Size  Location     Type
 18704 ;;                  1    wreg      void 
 18705 ;; Registers used:
 18706 ;;		None
 18707 ;; Tracked objects:
 18708 ;;		On entry : 3F/0
 18709 ;;		On exit  : 3F/0
 18710 ;;		Unchanged: 3F/0
 18711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18716 ;;Total ram usage:        0 bytes
 18717 ;; Hardware stack levels used: 1
 18718 ;; This function calls:
 18719 ;;		Nothing
 18720 ;; This function is called by:
 18721 ;;		_TMR5_Initialize
 18722 ;;		_TMR5_ISR
 18723 ;; This function uses a non-reentrant model
 18724 ;;
 18725                           
 18726                           	psect	text119
 18727  01484A                     __ptext119:
 18728                           	callstack 0
 18729  01484A                     _TMR5_DefaultInterruptHandler:
 18730                           	callstack 16
 18731                           
 18732                           ; BSR set to: 0
 18733                           
 18734                           ;incstack = 0
 18735  01484A  0012               	return		;funcret
 18736  01484C                     __end_of_TMR5_DefaultInterruptHandler:
 18737                           	callstack 0
 18738                           
 18739 ;; *************** function _Timers_Isr *****************
 18740 ;; Defined at:
 18741 ;;		line 48 in file "timers.c"
 18742 ;; Parameters:    Size  Location     Type
 18743 ;;		None
 18744 ;; Auto vars:     Size  Location     Type
 18745 ;;  i               2   14[COMRAM] int 
 18746 ;; Return value:  Size  Location     Type
 18747 ;;                  1    wreg      void 
 18748 ;; Registers used:
 18749 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18750 ;; Tracked objects:
 18751 ;;		On entry : 3F/0
 18752 ;;		On exit  : 3F/0
 18753 ;;		Unchanged: 3F/0
 18754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18756 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18757 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18758 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18759 ;;Total ram usage:        4 bytes
 18760 ;; Hardware stack levels used: 1
 18761 ;; This function calls:
 18762 ;;		Nothing
 18763 ;; This function is called by:
 18764 ;;		_main
 18765 ;;		_TMR5_ISR
 18766 ;; This function uses a non-reentrant model
 18767 ;;
 18768                           
 18769                           	psect	text120
 18770  013D3C                     __ptext120:
 18771                           	callstack 0
 18772  013D3C                     _Timers_Isr:
 18773                           	callstack 16
 18774                           
 18775                           ; BSR set to: 0
 18776                           ;timers.c: 51:  for (int i = 0; i < TMR_COUNT; i++) {
 18777                           
 18778                           ; BSR set to: 0
 18779                           ;incstack = 0
 18780  013D3C  0E00               	movlw	0
 18781  013D3E  6E10               	movwf	(Timers_Isr@i+1)^0,c
 18782  013D40  0E00               	movlw	0
 18783  013D42  6E0F               	movwf	Timers_Isr@i^0,c
 18784  013D44                     i2l7259:
 18785                           
 18786                           ; BSR set to: 0
 18787                           ;timers.c: 52:   if (tickCount[i] != 0) {
 18788  013D44  90D8               	bcf	status,0,c
 18789  013D46  340F               	rlcf	Timers_Isr@i^0,w,c
 18790  013D48  6ED9               	movwf	fsr2l,c
 18791  013D4A  3410               	rlcf	(Timers_Isr@i+1)^0,w,c
 18792  013D4C  6EDA               	movwf	fsr2h,c
 18793  013D4E  0E0C               	movlw	low _tickCount
 18794  013D50  26D9               	addwf	fsr2l,f,c
 18795  013D52  0E01               	movlw	high _tickCount
 18796  013D54  22DA               	addwfc	fsr2h,f,c
 18797  013D56  50DE               	movf	postinc2,w,c
 18798  013D58  10DE               	iorwf	postinc2,w,c
 18799  013D5A  B4D8               	btfsc	status,2,c
 18800  013D5C  D00C               	goto	i2l7263
 18801                           
 18802                           ; BSR set to: 0
 18803                           ;timers.c: 53:    tickCount[i]--;
 18804  013D5E  90D8               	bcf	status,0,c
 18805  013D60  340F               	rlcf	Timers_Isr@i^0,w,c
 18806  013D62  6ED9               	movwf	fsr2l,c
 18807  013D64  3410               	rlcf	(Timers_Isr@i+1)^0,w,c
 18808  013D66  6EDA               	movwf	fsr2h,c
 18809  013D68  0E0C               	movlw	low _tickCount
 18810  013D6A  26D9               	addwf	fsr2l,f,c
 18811  013D6C  0E01               	movlw	high _tickCount
 18812  013D6E  22DA               	addwfc	fsr2h,f,c
 18813  013D70  06DE               	decf	postinc2,f,c
 18814  013D72  0E00               	movlw	0
 18815  013D74  5ADD               	subwfb	postdec2,f,c
 18816  013D76                     i2l7263:
 18817                           
 18818                           ; BSR set to: 0
 18819                           ;timers.c: 55:  }
 18820  013D76  4A0F               	infsnz	Timers_Isr@i^0,f,c
 18821  013D78  2A10               	incf	(Timers_Isr@i+1)^0,f,c
 18822                           
 18823                           ; BSR set to: 0
 18824  013D7A  BE10               	btfsc	(Timers_Isr@i+1)^0,7,c
 18825  013D7C  D7E3               	goto	i2l7259
 18826  013D7E  5010               	movf	(Timers_Isr@i+1)^0,w,c
 18827  013D80  E105               	bnz	i2u642_40
 18828  013D82  0E06               	movlw	6
 18829  013D84  5C0F               	subwf	Timers_Isr@i^0,w,c
 18830  013D86  B0D8               	btfsc	status,0,c
 18831  013D88  0012               	return	
 18832  013D8A  D7DC               	goto	i2l7259
 18833  013D8C                     i2u642_40:
 18834                           
 18835                           ; BSR set to: 0
 18836  013D8C  0012               	return		;funcret
 18837  013D8E                     __end_of_Timers_Isr:
 18838                           	callstack 0
 18839                           
 18840 ;; *************** function _TMR5_WriteTimer *****************
 18841 ;; Defined at:
 18842 ;;		line 128 in file "mcc_generated_files/tmr5.c"
 18843 ;; Parameters:    Size  Location     Type
 18844 ;;  timerVal        2   12[COMRAM] unsigned short 
 18845 ;; Auto vars:     Size  Location     Type
 18846 ;;		None
 18847 ;; Return value:  Size  Location     Type
 18848 ;;                  1    wreg      void 
 18849 ;; Registers used:
 18850 ;;		None
 18851 ;; Tracked objects:
 18852 ;;		On entry : 3F/39
 18853 ;;		On exit  : 3F/39
 18854 ;;		Unchanged: 3E/0
 18855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18856 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18859 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18860 ;;Total ram usage:        2 bytes
 18861 ;; Hardware stack levels used: 1
 18862 ;; This function calls:
 18863 ;;		Nothing
 18864 ;; This function is called by:
 18865 ;;		_TMR5_ISR
 18866 ;; This function uses a non-reentrant model
 18867 ;;
 18868                           
 18869                           	psect	text121
 18870  014530                     __ptext121:
 18871                           	callstack 0
 18872  014530                     _TMR5_WriteTimer:
 18873                           	callstack 16
 18874                           
 18875                           ; BSR set to: 57
 18876                           ;mcc_generated_files/tmr5.c: 128: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 129: {;mcc_generated_files/tmr5.c: 130:     if (T5CONbits.NOT_SYNC == 1)
 18877                           
 18878                           ; BSR set to: 0
 18879                           ;incstack = 0
 18880  014530  A49A               	btfss	154,2,c	;volatile
 18881  014532  D009               	goto	i2l748
 18882                           
 18883                           ; BSR set to: 57
 18884                           ;mcc_generated_files/tmr5.c: 131:     {;mcc_generated_files/tmr5.c: 133:         T5CONbi
      +                          ts.TMR5ON = 0;
 18885  014534  909A               	bcf	154,0,c	;volatile
 18886                           
 18887                           ;mcc_generated_files/tmr5.c: 136:         TMR5H = (uint8_t)(timerVal >> 8);
 18888  014536  0060  F03B  FF99   	movff	TMR5_WriteTimer@timerVal+1,16281	;volatile
 18889                           
 18890                           ;mcc_generated_files/tmr5.c: 137:         TMR5L = (uint8_t)timerVal;
 18891  01453C  0060  F037  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 18892                           
 18893                           ;mcc_generated_files/tmr5.c: 140:         T5CONbits.TMR5ON =1;
 18894  014542  809A               	bsf	154,0,c	;volatile
 18895                           
 18896                           ;mcc_generated_files/tmr5.c: 141:     }
 18897  014544  0012               	return	
 18898  014546                     i2l748:
 18899                           
 18900                           ; BSR set to: 57
 18901                           ;mcc_generated_files/tmr5.c: 143:     {;mcc_generated_files/tmr5.c: 145:         TMR5H =
      +                           (uint8_t)(timerVal >> 8);
 18902  014546  0060  F03B  FF99   	movff	TMR5_WriteTimer@timerVal+1,16281	;volatile
 18903                           
 18904                           ;mcc_generated_files/tmr5.c: 146:         TMR5L = (uint8_t)timerVal;
 18905  01454C  0060  F037  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 18906                           
 18907                           ; BSR set to: 57
 18908  014552  0012               	return		;funcret
 18909  014554                     __end_of_TMR5_WriteTimer:
 18910                           	callstack 0
 18911                           
 18912 ;; *************** function _DMA1_DMASCNTI_ISR *****************
 18913 ;; Defined at:
 18914 ;;		line 170 in file "mcc_generated_files/dma1.c"
 18915 ;; Parameters:    Size  Location     Type
 18916 ;;		None
 18917 ;; Auto vars:     Size  Location     Type
 18918 ;;		None
 18919 ;; Return value:  Size  Location     Type
 18920 ;;                  1    wreg      void 
 18921 ;; Registers used:
 18922 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 18923 ;; Tracked objects:
 18924 ;;		On entry : 0/0
 18925 ;;		On exit  : 0/0
 18926 ;;		Unchanged: 0/0
 18927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18930 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18931 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18932 ;;Total ram usage:        2 bytes
 18933 ;; Hardware stack levels used: 1
 18934 ;; Hardware stack levels required when called: 1
 18935 ;; This function calls:
 18936 ;;		Absolute function
 18937 ;;		_DMA1_DefaultInterruptHandler
 18938 ;;		_source_dma_done
 18939 ;; This function is called by:
 18940 ;;		Interrupt level 2
 18941 ;; This function uses a non-reentrant model
 18942 ;;
 18943                           
 18944                           	psect	text122
 18945  013FD0                     __ptext122:
 18946                           	callstack 0
 18947  013FD0                     _DMA1_DMASCNTI_ISR:
 18948                           	callstack 16
 18949                           
 18950                           ; BSR set to: 57
 18951                           ;incstack = 0
 18952  013FD0  006F FFE8  F013    	movff	pclath,??_DMA1_DMASCNTI_ISR
 18953  013FD6  006F FFEC  F014    	movff	pclatu,??_DMA1_DMASCNTI_ISR+1
 18954                           
 18955                           ;mcc_generated_files/dma1.c: 173:     PIR2bits.DMA1SCNTIF = 0;
 18956  013FDC  0139               	movlb	57	; () banked
 18957  013FDE  91A2               	bcf	162,0,b	;volatile
 18958                           
 18959                           ; BSR set to: 57
 18960                           ;mcc_generated_files/dma1.c: 175:     if (DMA1_SCNTI_InterruptHandler)
 18961  013FE0  0100               	movlb	0	; () banked
 18962  013FE2  51E1               	movf	_DMA1_SCNTI_InterruptHandler& (0+255),w,b
 18963  013FE4  11E2               	iorwf	(_DMA1_SCNTI_InterruptHandler+1)& (0+255),w,b
 18964  013FE6  11E3               	iorwf	(_DMA1_SCNTI_InterruptHandler+2)& (0+255),w,b
 18965  013FE8  B4D8               	btfsc	status,2,c
 18966  013FEA  D00C               	goto	i2u663_49
 18967                           
 18968                           ; BSR set to: 0
 18969                           ;mcc_generated_files/dma1.c: 176:             DMA1_SCNTI_InterruptHandler();
 18970  013FEC  D801               	call	i2u663_48
 18971  013FEE  D00A               	goto	i2u663_49
 18972  013FF0                     i2u663_48:
 18973  013FF0  0005               	push	
 18974  013FF2  6EFA               	movwf	pclath,c
 18975  013FF4  51E1               	movf	_DMA1_SCNTI_InterruptHandler& (0+255),w,b
 18976  013FF6  6EFD               	movwf	tosl,c
 18977  013FF8  51E2               	movf	(_DMA1_SCNTI_InterruptHandler+1)& (0+255),w,b
 18978  013FFA  6EFE               	movwf	tosh,c
 18979  013FFC  51E3               	movf	(_DMA1_SCNTI_InterruptHandler+2)& (0+255),w,b
 18980  013FFE  6EFF               	movwf	tosu,c
 18981  014000  50FA               	movf	pclath,w,c
 18982  014002  0012               	return		;indir
 18983  014004                     i2u663_49:
 18984  014004  0060  F053  FFFB   	movff	??_DMA1_DMASCNTI_ISR+1,pclatu
 18985  01400A  0060  F04F  FFFA   	movff	??_DMA1_DMASCNTI_ISR,pclath
 18986  014010  0011               	retfie		f
 18987  014012                     __end_of_DMA1_DMASCNTI_ISR:
 18988                           	callstack 0
 18989                           
 18990 ;; *************** function _DMA1_DefaultInterruptHandler *****************
 18991 ;; Defined at:
 18992 ;;		line 184 in file "mcc_generated_files/dma1.c"
 18993 ;; Parameters:    Size  Location     Type
 18994 ;;		None
 18995 ;; Auto vars:     Size  Location     Type
 18996 ;;		None
 18997 ;; Return value:  Size  Location     Type
 18998 ;;                  1    wreg      void 
 18999 ;; Registers used:
 19000 ;;		None
 19001 ;; Tracked objects:
 19002 ;;		On entry : 3F/0
 19003 ;;		On exit  : 3F/0
 19004 ;;		Unchanged: 3F/0
 19005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19010 ;;Total ram usage:        0 bytes
 19011 ;; Hardware stack levels used: 1
 19012 ;; This function calls:
 19013 ;;		Nothing
 19014 ;; This function is called by:
 19015 ;;		_DMA1_Initialize
 19016 ;;		_DMA1_DMASCNTI_ISR
 19017 ;; This function uses a non-reentrant model
 19018 ;;
 19019                           
 19020                           	psect	text123
 19021  01484C                     __ptext123:
 19022                           	callstack 0
 19023  01484C                     _DMA1_DefaultInterruptHandler:
 19024                           	callstack 16
 19025                           
 19026                           ; BSR set to: 0
 19027                           
 19028                           ;incstack = 0
 19029  01484C  0012               	return		;funcret
 19030  01484E                     __end_of_DMA1_DefaultInterruptHandler:
 19031                           	callstack 0
 19032                           
 19033 ;; *************** function _source_dma_done *****************
 19034 ;; Defined at:
 19035 ;;		line 304 in file "eadog.c"
 19036 ;; Parameters:    Size  Location     Type
 19037 ;;		None
 19038 ;; Auto vars:     Size  Location     Type
 19039 ;;		None
 19040 ;; Return value:  Size  Location     Type
 19041 ;;                  1    wreg      void 
 19042 ;; Registers used:
 19043 ;;		None
 19044 ;; Tracked objects:
 19045 ;;		On entry : 3F/0
 19046 ;;		On exit  : 3F/1
 19047 ;;		Unchanged: 0/0
 19048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19053 ;;Total ram usage:        0 bytes
 19054 ;; Hardware stack levels used: 1
 19055 ;; This function calls:
 19056 ;;		Nothing
 19057 ;; This function is called by:
 19058 ;;		_main
 19059 ;;		_DMA1_DMASCNTI_ISR
 19060 ;; This function uses a non-reentrant model
 19061 ;;
 19062                           
 19063                           	psect	text124
 19064  014832                     __ptext124:
 19065                           	callstack 0
 19066  014832                     _source_dma_done:
 19067                           	callstack 16
 19068                           
 19069                           ; BSR set to: 0
 19070                           ;eadog.c: 306:  spi_link.LCD_DATA = 0;
 19071                           
 19072                           ; BSR set to: 0
 19073                           ;incstack = 0
 19074  014832  0101               	movlb	1	; () banked
 19075  014834  9700               	bcf	_spi_link& (0+255),3,b	;volatile
 19076                           
 19077                           ; BSR set to: 1
 19078  014836  0012               	return		;funcret
 19079  014838                     __end_of_source_dma_done:
 19080                           	callstack 0
 19081                           
 19082                           ;
 19083                           ; Interrupt Vector Table @ 0x8
 19084                           ;
 19085                           
 19086                           	psect	ivt0x8
 19087  000008                     __pivt0x8:
 19088                           	callstack 0
 19089  000008                     ivt0x8_base:
 19090                           	callstack 0
 19091                           
 19092                           ; Vector 0 : SWINT
 19093  000008  5212               	dw	_Default_ISR shr (0+2)
 19094                           
 19095                           ; Vector 1 : HLVD
 19096  00000A  5212               	dw	_Default_ISR shr (0+2)
 19097                           
 19098                           ; Vector 2 : OSF
 19099  00000C  5212               	dw	_Default_ISR shr (0+2)
 19100                           
 19101                           ; Vector 3 : CSW
 19102  00000E  5212               	dw	_Default_ISR shr (0+2)
 19103                           
 19104                           ; Vector 4 : NVM
 19105  000010  5212               	dw	_Default_ISR shr (0+2)
 19106                           
 19107                           ; Vector 5 : SCAN
 19108  000012  5212               	dw	_Default_ISR shr (0+2)
 19109                           
 19110                           ; Vector 6 : CRC
 19111  000014  5212               	dw	_Default_ISR shr (0+2)
 19112                           
 19113                           ; Vector 7 : IOC
 19114  000016  5212               	dw	_Default_ISR shr (0+2)
 19115                           
 19116                           ; Vector 8 : INT0
 19117  000018  5212               	dw	_Default_ISR shr (0+2)
 19118                           
 19119                           ; Vector 9 : ZCD
 19120  00001A  5212               	dw	_Default_ISR shr (0+2)
 19121                           
 19122                           ; Vector 10 : AD
 19123  00001C  4FE3               	dw	_ADCC_ISR shr (0+2)
 19124                           
 19125                           ; Vector 11 : ADT
 19126  00001E  5212               	dw	_Default_ISR shr (0+2)
 19127                           
 19128                           ; Vector 12 : CMP1
 19129  000020  5212               	dw	_Default_ISR shr (0+2)
 19130                           
 19131                           ; Vector 13 : SMT1
 19132  000022  5212               	dw	_Default_ISR shr (0+2)
 19133                           
 19134                           ; Vector 14 : SMT1PRA
 19135  000024  5212               	dw	_Default_ISR shr (0+2)
 19136                           
 19137                           ; Vector 15 : SMT1PRW
 19138  000026  5212               	dw	_Default_ISR shr (0+2)
 19139                           
 19140                           ; Vector 16 : DMA1SCNT
 19141  000028  4FF4               	dw	_DMA1_DMASCNTI_ISR shr (0+2)
 19142                           
 19143                           ; Vector 17 : DMA1DCNT
 19144  00002A  5212               	dw	_Default_ISR shr (0+2)
 19145                           
 19146                           ; Vector 18 : DMA1OR
 19147  00002C  5212               	dw	_Default_ISR shr (0+2)
 19148                           
 19149                           ; Vector 19 : DMA1A
 19150  00002E  5212               	dw	_Default_ISR shr (0+2)
 19151                           
 19152                           ; Vector 20 : SPI1RX
 19153  000030  5212               	dw	_Default_ISR shr (0+2)
 19154                           
 19155                           ; Vector 21 : SPI1TX
 19156  000032  5212               	dw	_Default_ISR shr (0+2)
 19157                           
 19158                           ; Vector 22 : SPI1
 19159  000034  5212               	dw	_Default_ISR shr (0+2)
 19160                           
 19161                           ; Vector 23 : I2C1RX
 19162  000036  5212               	dw	_Default_ISR shr (0+2)
 19163                           
 19164                           ; Vector 24 : I2C1TX
 19165  000038  5212               	dw	_Default_ISR shr (0+2)
 19166                           
 19167                           ; Vector 25 : I2C1
 19168  00003A  5212               	dw	_Default_ISR shr (0+2)
 19169                           
 19170                           ; Vector 26 : I2C1E
 19171  00003C  5212               	dw	_Default_ISR shr (0+2)
 19172                           
 19173                           ; Vector 27 : U1RX
 19174  00003E  4F9D               	dw	_UART1_rx_vect_isr shr (0+2)
 19175                           
 19176                           ; Vector 28 : U1TX
 19177  000040  5033               	dw	_UART1_tx_vect_isr shr (0+2)
 19178                           
 19179                           ; Vector 29 : U1E
 19180  000042  5212               	dw	_Default_ISR shr (0+2)
 19181                           
 19182                           ; Vector 30 : U1
 19183  000044  5212               	dw	_Default_ISR shr (0+2)
 19184                           
 19185                           ; Vector 31 : TMR0
 19186  000046  5212               	dw	_Default_ISR shr (0+2)
 19187                           
 19188                           ; Vector 32 : TMR1
 19189  000048  5212               	dw	_Default_ISR shr (0+2)
 19190                           
 19191                           ; Vector 33 : TMR1G
 19192  00004A  5212               	dw	_Default_ISR shr (0+2)
 19193                           
 19194                           ; Vector 34 : TMR2
 19195  00004C  5212               	dw	_Default_ISR shr (0+2)
 19196                           
 19197                           ; Vector 35 : CCP1
 19198  00004E  5212               	dw	_Default_ISR shr (0+2)
 19199                           
 19200                           ; Vector 36 : Undefined
 19201  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 19202                           
 19203                           ; Vector 37 : NCO1
 19204  000052  5212               	dw	_Default_ISR shr (0+2)
 19205                           
 19206                           ; Vector 38 : CWG1
 19207  000054  5212               	dw	_Default_ISR shr (0+2)
 19208                           
 19209                           ; Vector 39 : CLC1
 19210  000056  5212               	dw	_Default_ISR shr (0+2)
 19211                           
 19212                           ; Vector 40 : INT1
 19213  000058  5212               	dw	_Default_ISR shr (0+2)
 19214                           
 19215                           ; Vector 41 : CMP2
 19216  00005A  5212               	dw	_Default_ISR shr (0+2)
 19217                           
 19218                           ; Vector 42 : DMA2SCNT
 19219  00005C  5212               	dw	_Default_ISR shr (0+2)
 19220                           
 19221                           ; Vector 43 : DMA2DCNT
 19222  00005E  5212               	dw	_Default_ISR shr (0+2)
 19223                           
 19224                           ; Vector 44 : DMA2OR
 19225  000060  5212               	dw	_Default_ISR shr (0+2)
 19226                           
 19227                           ; Vector 45 : DMA2A
 19228  000062  5212               	dw	_Default_ISR shr (0+2)
 19229                           
 19230                           ; Vector 46 : I2C2RX
 19231  000064  5212               	dw	_Default_ISR shr (0+2)
 19232                           
 19233                           ; Vector 47 : I2C2TX
 19234  000066  5212               	dw	_Default_ISR shr (0+2)
 19235                           
 19236                           ; Vector 48 : I2C2
 19237  000068  5212               	dw	_Default_ISR shr (0+2)
 19238                           
 19239                           ; Vector 49 : I2C2E
 19240  00006A  5212               	dw	_Default_ISR shr (0+2)
 19241                           
 19242                           ; Vector 50 : U2RX
 19243  00006C  5212               	dw	_Default_ISR shr (0+2)
 19244                           
 19245                           ; Vector 51 : U2TX
 19246  00006E  5212               	dw	_Default_ISR shr (0+2)
 19247                           
 19248                           ; Vector 52 : U2E
 19249  000070  5212               	dw	_Default_ISR shr (0+2)
 19250                           
 19251                           ; Vector 53 : U2
 19252  000072  5212               	dw	_Default_ISR shr (0+2)
 19253                           
 19254                           ; Vector 54 : TMR3
 19255  000074  5212               	dw	_Default_ISR shr (0+2)
 19256                           
 19257                           ; Vector 55 : TMR3G
 19258  000076  5212               	dw	_Default_ISR shr (0+2)
 19259                           
 19260                           ; Vector 56 : TMR4
 19261  000078  5212               	dw	_Default_ISR shr (0+2)
 19262                           
 19263                           ; Vector 57 : CCP2
 19264  00007A  5212               	dw	_Default_ISR shr (0+2)
 19265                           
 19266                           ; Vector 58 : Undefined
 19267  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 19268                           
 19269                           ; Vector 59 : CWG2
 19270  00007E  5212               	dw	_Default_ISR shr (0+2)
 19271                           
 19272                           ; Vector 60 : CLC2
 19273  000080  5212               	dw	_Default_ISR shr (0+2)
 19274                           
 19275                           ; Vector 61 : INT2
 19276  000082  5212               	dw	_Default_ISR shr (0+2)
 19277                           
 19278                           ; Vector 62 : Undefined
 19279  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 19280                           
 19281                           ; Vector 63 : Undefined
 19282  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 19283                           
 19284                           ; Vector 64 : Undefined
 19285  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 19286                           
 19287                           ; Vector 65 : Undefined
 19288  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 19289                           
 19290                           ; Vector 66 : Undefined
 19291  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 19292                           
 19293                           ; Vector 67 : Undefined
 19294  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 19295                           
 19296                           ; Vector 68 : Undefined
 19297  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 19298                           
 19299                           ; Vector 69 : Undefined
 19300  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 19301                           
 19302                           ; Vector 70 : TMR5
 19303  000094  4F64               	dw	_TMR5_ISR shr (0+2)
 19304                           
 19305                           ; Vector 71 : TMR5G
 19306  000096  5212               	dw	_Default_ISR shr (0+2)
 19307                           
 19308                           ; Vector 72 : TMR6
 19309  000098  50B8               	dw	_TMR6_ISR shr (0+2)
 19310                           
 19311                           ; Vector 73 : CCP3
 19312  00009A  5212               	dw	_Default_ISR shr (0+2)
 19313                           
 19314                           ; Vector 74 : CWG3
 19315  00009C  5212               	dw	_Default_ISR shr (0+2)
 19316                           
 19317                           ; Vector 75 : CLC3
 19318  00009E  5212               	dw	_Default_ISR shr (0+2)
 19319                           
 19320                           ; Vector 76 : Undefined
 19321  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 19322                           
 19323                           ; Vector 77 : Undefined
 19324  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 19325                           
 19326                           ; Vector 78 : Undefined
 19327  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 19328                           
 19329                           ; Vector 79 : Undefined
 19330  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 19331                           
 19332                           ; Vector 80 : CCP4
 19333  0000A8  5212               	dw	_Default_ISR shr (0+2)
 19334                           
 19335                           ; Vector 81 : CLC4
 19336  0000AA  5212               	dw	_Default_ISR shr (0+2)
 19337  0000AC                     ivt0x8_undefint:
 19338                           	callstack 0
 19339  0000AC  00FF               	reset	
 19340                           
 19341                           	psect	text125
 19342  000000                     __ptext125:
 19343                           	callstack 0
 19344                           
 19345                           	psect	rparam
 19346  0000                     
 19347                           	psect	idloc
 19348                           
 19349                           ;Config register IDLOC0 @ 0x200000
 19350                           ;	unspecified, using default values
 19351  200000                     	org	2097152
 19352  200000  0FFF               	dw	4095
 19353                           
 19354                           ;Config register IDLOC1 @ 0x200002
 19355                           ;	unspecified, using default values
 19356  200002                     	org	2097154
 19357  200002  0FFF               	dw	4095
 19358                           
 19359                           ;Config register IDLOC2 @ 0x200004
 19360                           ;	unspecified, using default values
 19361  200004                     	org	2097156
 19362  200004  0FFF               	dw	4095
 19363                           
 19364                           ;Config register IDLOC3 @ 0x200006
 19365                           ;	unspecified, using default values
 19366  200006                     	org	2097158
 19367  200006  0FFF               	dw	4095
 19368                           
 19369                           ;Config register IDLOC4 @ 0x200008
 19370                           ;	unspecified, using default values
 19371  200008                     	org	2097160
 19372  200008  0FFF               	dw	4095
 19373                           
 19374                           ;Config register IDLOC5 @ 0x20000A
 19375                           ;	unspecified, using default values
 19376  20000A                     	org	2097162
 19377  20000A  0FFF               	dw	4095
 19378                           
 19379                           ;Config register IDLOC6 @ 0x20000C
 19380                           ;	unspecified, using default values
 19381  20000C                     	org	2097164
 19382  20000C  0FFF               	dw	4095
 19383                           
 19384                           ;Config register IDLOC7 @ 0x20000E
 19385                           ;	unspecified, using default values
 19386  20000E                     	org	2097166
 19387  20000E  0FFF               	dw	4095
 19388                           
 19389                           	psect	config
 19390                           
 19391                           ;Config register CONFIG1L @ 0x300000
 19392                           ;	External Oscillator Selection
 19393                           ;	FEXTOSC = ECH, EC (external clock) above 8 MHz; PFM set to high power
 19394                           ;	Reset Oscillator Selection
 19395                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 19396  300000                     	org	3145728
 19397  300000  AF                 	db	175
 19398                           
 19399                           ;Config register CONFIG1H @ 0x300001
 19400                           ;	Clock out Enable bit
 19401                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 19402                           ;	PRLOCKED One-Way Set Enable bit
 19403                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
 19404                           ;	Clock Switch Enable bit
 19405                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 19406                           ;	Fail-Safe Clock Monitor Enable bit
 19407                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 19408  300001                     	org	3145729
 19409  300001  FF                 	db	255
 19410                           
 19411                           ;Config register CONFIG2L @ 0x300002
 19412                           ;	MCLR Enable bit
 19413                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 19414                           ;	Power-up timer selection bits
 19415                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 19416                           ;	Multi-vector enable bit
 19417                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 19418                           ;	IVTLOCK bit One-way set enable bit
 19419                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 19420                           ;	Low Power BOR Enable bit
 19421                           ;	LPBOREN = OFF, ULPBOR disabled
 19422                           ;	Brown-out Reset Enable bits
 19423                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 19424  300002                     	org	3145730
 19425  300002  FF                 	db	255
 19426                           
 19427                           ;Config register CONFIG2H @ 0x300003
 19428                           ;	Brown-out Reset Voltage Selection bits
 19429                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 19430                           ;	ZCD Disable bit
 19431                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 19432                           ;	PPSLOCK bit One-Way Set Enable bit
 19433                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 19434                           ;	Stack Full/Underflow Reset Enable bit
 19435                           ;	STVREN = ON, Stack full/underflow will cause Reset
 19436                           ;	Debugger Enable bit
 19437                           ;	DEBUG = OFF, Background debugger disabled
 19438                           ;	Extended Instruction Set Enable bit
 19439                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 19440  300003                     	org	3145731
 19441  300003  FF                 	db	255
 19442                           
 19443                           ;Config register CONFIG3L @ 0x300004
 19444                           ;	WDT Period selection bits
 19445                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 19446                           ;	WDT operating mode
 19447                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 19448  300004                     	org	3145732
 19449  300004  9F                 	db	159
 19450                           
 19451                           ;Config register CONFIG3H @ 0x300005
 19452                           ;	WDT Window Select bits
 19453                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 19454                           ;	WDT input clock selector
 19455                           ;	WDTCCS = SC, Software Control
 19456  300005                     	org	3145733
 19457  300005  FF                 	db	255
 19458                           
 19459                           ;Config register CONFIG4L @ 0x300006
 19460                           ;	Boot Block Size selection bits
 19461                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 19462                           ;	Boot Block enable bit
 19463                           ;	BBEN = OFF, Boot block disabled
 19464                           ;	Storage Area Flash enable bit
 19465                           ;	SAFEN = OFF, SAF disabled
 19466                           ;	Application Block write protection bit
 19467                           ;	WRTAPP = OFF, Application Block not write protected
 19468  300006                     	org	3145734
 19469  300006  FF                 	db	255
 19470                           
 19471                           ;Config register CONFIG4H @ 0x300007
 19472                           ;	Boot Block Write Protection bit
 19473                           ;	WRTB = OFF, Boot Block not write-protected
 19474                           ;	Configuration Register Write Protection bit
 19475                           ;	WRTC = OFF, Configuration registers not write-protected
 19476                           ;	Data EEPROM Write Protection bit
 19477                           ;	WRTD = OFF, Data EEPROM not write-protected
 19478                           ;	SAF Write protection bit
 19479                           ;	WRTSAF = OFF, SAF not Write Protected
 19480                           ;	Low Voltage Programming Enable bit
 19481                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
 19482  300007                     	org	3145735
 19483  300007  DF                 	db	223
 19484                           
 19485                           ;Config register CONFIG5L @ 0x300008
 19486                           ;	PFM and Data EEPROM Code Protection bit
 19487                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 19488  300008                     	org	3145736
 19489  300008  FF                 	db	255
 19490                           
 19491                           ;Config register CONFIG5H @ 0x300009
 19492                           ;	unspecified, using default values
 19493  300009                     	org	3145737
 19494  300009  FF                 	db	255
 19495                           tosu	equ	0x3FFF
 19496                           tosh	equ	0x3FFE
 19497                           tosl	equ	0x3FFD
 19498                           stkptr	equ	0x3FFC
 19499                           pclatu	equ	0x3FFB
 19500                           pclath	equ	0x3FFA
 19501                           pcl	equ	0x3FF9
 19502                           tblptru	equ	0x3FF8
 19503                           tblptrh	equ	0x3FF7
 19504                           tblptrl	equ	0x3FF6
 19505                           tablat	equ	0x3FF5
 19506                           prodh	equ	0x3FF4
 19507                           prodl	equ	0x3FF3
 19508                           indf0	equ	0x3FEF
 19509                           postinc0	equ	0x3FEE
 19510                           postdec0	equ	0x3FED
 19511                           preinc0	equ	0x3FEC
 19512                           plusw0	equ	0x3FEB
 19513                           fsr0h	equ	0x3FEA
 19514                           fsr0l	equ	0x3FE9
 19515                           wreg	equ	0x3FE8
 19516                           indf1	equ	0x3FE7
 19517                           postinc1	equ	0x3FE6
 19518                           postdec1	equ	0x3FE5
 19519                           preinc1	equ	0x3FE4
 19520                           plusw1	equ	0x3FE3
 19521                           fsr1h	equ	0x3FE2
 19522                           fsr1l	equ	0x3FE1
 19523                           bsr	equ	0x3FE0
 19524                           indf2	equ	0x3FDF
 19525                           postinc2	equ	0x3FDE
 19526                           postdec2	equ	0x3FDD
 19527                           preinc2	equ	0x3FDC
 19528                           plusw2	equ	0x3FDB
 19529                           fsr2h	equ	0x3FDA
 19530                           fsr2l	equ	0x3FD9
 19531                           status	equ	0x3FD8

Data Sizes:
    Strings     263
    Constant    33
    Data        1072
    BSS         668
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     50      72
    BANK0           160    125     160
    BANK1           256     25     231
    BANK2           256      0     198
    BANK3           256      0     255
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    cli_ctx.cmds.fh	PTR FTN(PTR void ,)void  size(3) Largest target is 0
		 -> fh_pl(), fh_pd(), fh_pu(), fh_po(), 
		 -> fh_ps(), fh_pr(), Absolute function(), 

    cli_ctx.cmds.cmd	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), STR_15(CODE[3]), STR_14(CODE[3]), STR_13(CODE[3]), 
		 -> STR_12(CODE[3]), STR_11(CODE[3]), STR_10(CODE[3]), 

    fh_ps@a_data	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    fh_po@a_data	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    fh_pu@a_data	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    fh_pd@a_data	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    fh_pl@a_data	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    S2417$1$0	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 132
		 -> cli_ctx.cmd(BANK2[128]), STR_32(CODE[4]), STR_27(CODE[3]), cli_ctx(BANK2[131]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 132
		 -> cli_ctx.cmd(BANK2[128]), STR_32(CODE[4]), STR_27(CODE[3]), cli_ctx(BANK2[131]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 79
		 -> vfpfcnvrt@ct(BANK0[3]), NULL(NULL[0]), STR_15(CODE[3]), STR_14(CODE[3]), 
		 -> STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[3]), STR_10(CODE[3]), 
		 -> STR_8(CODE[79]), STR_7(CODE[17]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 79
		 -> vfpfcnvrt@ct(BANK0[3]), NULL(NULL[0]), STR_15(CODE[3]), STR_14(CODE[3]), 
		 -> STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[3]), STR_10(CODE[3]), 
		 -> STR_8(CODE[79]), STR_7(CODE[17]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 132
		 -> cli_ctx.cmd(BANK2[128]), ?_printf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK1[80]), 
		 -> ?_sprintf(BANK1[2]), NULL(NULL[0]), STR_15(CODE[3]), STR_14(CODE[3]), 
		 -> STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[3]), STR_10(CODE[3]), 
		 -> cli_ctx(BANK2[131]), STR_9(CODE[18]), STR_6(CODE[20]), STR_2(CODE[9]), 
		 -> STR_1(CODE[12]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 132
		 -> cli_ctx.cmd(BANK2[128]), ?_printf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK1[80]), 
		 -> ?_sprintf(BANK1[2]), NULL(NULL[0]), STR_15(CODE[3]), STR_14(CODE[3]), 
		 -> STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[3]), STR_10(CODE[3]), 
		 -> cli_ctx(BANK2[131]), STR_9(CODE[18]), STR_6(CODE[20]), STR_2(CODE[9]), 
		 -> STR_1(CODE[12]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_22(CODE[4]), STR_21(CODE[4]), STR_18(CODE[4]), STR_17(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_22(CODE[4]), STR_21(CODE[4]), STR_18(CODE[4]), STR_17(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    puts@s	PTR const unsigned char  size(2) Largest target is 255
		 -> STR_16(CODE[3]), cli_read@i(BANK0[1]), cmdm(CODE[28]), cli_ctx(BANK2[131]), 
		 -> buff1(BANK3[255]), STR_5(CODE[18]), STR_4(CODE[24]), STR_3(CODE[25]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 79
		 -> STR_8(CODE[79]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 255
		 -> dbuf(BANK1[80]), STR_16(CODE[3]), cli_read@i(BANK0[1]), cmdm(CODE[28]), 
		 -> cli_ctx(BANK2[131]), buff1(BANK3[255]), STR_5(CODE[18]), STR_4(CODE[24]), 
		 -> STR_3(CODE[25]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), NULL(NULL[0]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 79
		 -> STR_8(CODE[79]), STR_7(CODE[17]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 1
		 -> printf@ap(BANK1[2]), sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 79
		 -> STR_8(CODE[79]), STR_7(CODE[17]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 79
		 -> STR_8(CODE[79]), STR_7(CODE[17]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), STR_2(CODE[9]), STR_1(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 1
		 -> printf@ap(BANK1[2]), sprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), STR_2(CODE[9]), STR_1(CODE[12]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK1[2]), stoa@nuls(BANK0[7]), ?_sprintf(BANK1[2]), STR_2(CODE[9]), 
		 -> STR_1(CODE[12]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_7(CODE[17]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 255
		 -> buff1(BANK3[255]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), 

    S3721$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S3721$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memset@dest	PTR void  size(2) Largest target is 132
		 -> ring_buf1(BANK2[67]), cli_ctx(BANK2[131]), 

    memset@s	PTR unsigned char  size(2) Largest target is 132
		 -> ring_buf1(BANK2[67]), cli_ctx(BANK2[131]), 

    memcpy@d1	PTR void  size(2) Largest target is 67
		 -> ring_buf1(BANK2[67]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf1(BANK2[67]), 

    memcpy@s1	PTR const void  size(2) Largest target is 20
		 -> STR_9(CODE[18]), STR_6(CODE[20]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_9(CODE[18]), STR_6(CODE[20]), 

    ringBufS_flush@_this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK2[67]), 

    sp__memcpy	PTR void  size(2) Largest target is 67
		 -> ring_buf1(BANK2[67]), 

    ringBufS_put_dma_cpy@ptr	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_9(CODE[18]), STR_6(CODE[20]), 

    ringBufS_put_dma_cpy@_this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK2[67]), 

    ringBufS_put_dma@_this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK2[67]), 

    ringBufS_init@_this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK2[67]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 1024
		 -> port_data(BIGRAM[1024]), 

    eaDogM_WriteString@strPtr	PTR unsigned char  size(2) Largest target is 20
		 -> STR_9(CODE[18]), STR_6(CODE[20]), 

    S2770spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK2[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK2[67]), 

    S2770spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 0

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 0

    cli_read@a_ctx.cmds	PTR struct _t_cmd size(2) Largest target is 42
		 -> g_cmds(BANK1[35]), 

    cli_read@a_ctx	PTR struct _t_cli_ctx size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    _cli_interpret_cmd@a_ctx.cmds.fh	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> fh_pl(), fh_pd(), fh_pu(), fh_po(), 
		 -> fh_ps(), fh_pr(), Absolute function(), 

    _cli_interpret_cmd@a_ctx.cmds.cmd	PTR const unsigned char  size(2) Largest target is 3
		 -> NULL(NULL[0]), STR_15(CODE[3]), STR_14(CODE[3]), STR_13(CODE[3]), 
		 -> STR_12(CODE[3]), STR_11(CODE[3]), STR_10(CODE[3]), 

    _cli_interpret_cmd@a_ctx.cmds	PTR struct _t_cmd size(2) Largest target is 42
		 -> g_cmds(BANK1[35]), 

    _cli_interpret_cmd@a_ctx	PTR struct _t_cli_ctx size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    linux_putc@data	PTR unsigned char  size(2) Largest target is 3
		 -> STR_16(CODE[3]), cli_read@i(BANK0[1]), 

    linux_getc@a_data	PTR unsigned char  size(1) Largest target is 1
		 -> cli_read@i(BANK0[1]), 

    cli_init@a_ctx.cmds.fh	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> fh_pl(), fh_pd(), fh_pu(), fh_po(), 
		 -> fh_ps(), fh_pr(), Absolute function(), 

    cli_init@a_ctx.cmds.cmd	PTR const unsigned char  size(2) Largest target is 3
		 -> NULL(NULL[0]), STR_15(CODE[3]), STR_14(CODE[3]), STR_13(CODE[3]), 
		 -> STR_12(CODE[3]), STR_11(CODE[3]), STR_10(CODE[3]), 

    cli_init@a_ctx.cmds	PTR struct _t_cmd size(2) Largest target is 42
		 -> g_cmds(BANK1[35]), 

    cli_init@a_cmds	PTR struct _t_cmd size(2) Largest target is 42
		 -> g_cmds(BANK1[35]), 

    sp__memset	PTR void  size(2) Largest target is 132
		 -> ring_buf1(BANK2[67]), cli_ctx(BANK2[131]), 

    cli_init@a_ctx	PTR struct _t_cli_ctx size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    S2417_t_cmd$fh	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> fh_pl(), fh_pd(), fh_pu(), fh_po(), 
		 -> fh_ps(), fh_pr(), Absolute function(), 

    g_cmds.fh	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> fh_pl(), fh_pd(), fh_pu(), fh_po(), 
		 -> fh_ps(), fh_pr(), Absolute function(), 

    S2417_t_cmd$cmd	PTR const unsigned char  size(2) Largest target is 3
		 -> NULL(NULL[0]), STR_15(CODE[3]), STR_14(CODE[3]), STR_13(CODE[3]), 
		 -> STR_12(CODE[3]), STR_11(CODE[3]), STR_10(CODE[3]), 

    g_cmds.cmd	PTR const unsigned char  size(2) Largest target is 3
		 -> NULL(NULL[0]), STR_15(CODE[3]), STR_14(CODE[3]), STR_13(CODE[3]), 
		 -> STR_12(CODE[3]), STR_11(CODE[3]), STR_10(CODE[3]), 

    fh_pr@a_data	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_2(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    S2424_t_cli_ctx$cmds	PTR struct _t_cmd size(2) Largest target is 42
		 -> g_cmds(BANK1[35]), 

    cli_ctx.cmds	PTR struct _t_cmd size(2) Largest target is 42
		 -> g_cmds(BANK1[35]), 

    DMA1_SetSCNTIInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> source_dma_done(), DMA1_DefaultInterruptHandler(), 

    DMA1_SCNTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> source_dma_done(), DMA1_DefaultInterruptHandler(), Absolute function(), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Timers_Isr(), TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Timers_Isr(), TMR5_DefaultInterruptHandler(), Absolute function(), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultErrorHandler(), Absolute function(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), Absolute function(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), Absolute function(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Led_Blink(), TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Led_Blink(), TMR6_DefaultInterruptHandler(), Absolute function(), 

    ADCC_SetADIInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Adc_Isr(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Adc_Isr(), Absolute function(), ADCC_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _scmd_init->_cli_init
    _cli_init->_puts
    _utoa->_pad
    _stoa->_fputc
    _efgtoa->_pad
    _tolower->_isupper
    _pad->_fputs
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    _atoi->_isspace
    _init_display->_ringBufS_init
    _send_lcd_data->_wdtdelay
    _send_lcd_cmd_long->_wdtdelay
    _send_lcd_cmd->_wdtdelay
    _ringBufS_init->_memset
    _eaDogM_WriteString->_ringBufS_put_dma_cpy
    _ringBufS_put_dma_cpy->_memcpy
    _eaDogM_WriteCommand->_send_lcd_cmd_dma
    _send_lcd_cmd_dma->_send_lcd_data_dma
    _send_lcd_data_dma->_ringBufS_flush
    _ringBufS_flush->_memset
    _cli_read->__cli_interpret_cmd
    _linux_putc->_puts
    _linux_getc->_UART1_Read
    __cli_interpret_cmd->_fh_pd
    __cli_interpret_cmd->_fh_pl
    __cli_interpret_cmd->_fh_po
    __cli_interpret_cmd->_fh_pr
    __cli_interpret_cmd->_fh_ps
    __cli_interpret_cmd->_fh_pu
    _strncmp->_strlen
    _fh_ps->_puts
    _fh_pr->_puts
    _fh_po->_puts
    _puts->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_UART1_Write
    _SYSTEM_Initialize->_TMR5_Initialize
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _DMA1_Initialize->_DMA1_SetSCNTIInterruptHandler
    _ADCC_Initialize->_ADCC_SetADIInterruptHandler

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    _ADCC_ISR->_Adc_Isr
    _Adc_Isr->_ADCC_GetConversionResult

Critical Paths under _TMR6_ISR in COMRAM

    _TMR6_CallBack->_Led_Blink

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    _TMR5_ISR->_Timers_Isr

Critical Paths under _DMA1_DMASCNTI_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _sprintf->_vfprintf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _utoa->_pad
    _efgtoa->___flge
    ___flsub->___flmul
    ___flge->___flmul
    _cli_read->__cli_interpret_cmd

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->_vfprintf
    _printf->_vfprintf

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNTI_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  210072
                                             23 BANK1      2     2      0
        _ADCC_SetADIInterruptHandler
                     _DAC1_GetOutput
                     _DAC1_SetOutput
      _DMA1_SetSCNTIInterruptHandler
                 _PWM5_LoadDutyValue
                 _PWM6_LoadDutyValue
                  _SYSTEM_Initialize
           _TMR5_SetInterruptHandler
           _TMR6_SetInterruptHandler
                            ___flmul
                           ___xxtofl
                           _cli_read
                        _display_led
                _eaDogM_WriteCommand
                 _eaDogM_WriteString
                       _init_display
                             _printf
                               _puts
                          _scmd_init
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    15      8   71446
                                              2 BANK1     21    13      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _scmd_init                                            0     0      0    8719
                           _cli_init
 ---------------------------------------------------------------------------------
 (2) _cli_init                                             4     0      4    8719
                                             46 COMRAM     4     0      4
                             _memset
                               _puts
 ---------------------------------------------------------------------------------
 (1) _printf                                              22     4     18   70862
                                              2 BANK1     20     2     18
                     _DAC1_GetOutput (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   70459
                                            119 BANK0      6     0      6
                                              0 BANK1      2     2      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           45    39      6   68830
                                             87 BANK0     32    26      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    9866
                                              4 BANK0     32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     536
                                             23 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     554
                                             23 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _stoa                                                22    18      4    4250
                                             34 COMRAM     5     1      4
                                              0 BANK0     17    17      0
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              62    55      7   42083
                                             25 BANK0     62    55      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              6     4      2    1318
                                             29 COMRAM     6     4      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     649
                                             23 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4    1248
                                             23 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    8006
                                             43 COMRAM     7     1      6
                                              0 BANK0      4     4      0
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     890
                                              0 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     482
                                             23 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     686
                                             23 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    5410
                                             13 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    4742
                                             23 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     196
                                             23 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    5194
                                             37 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    1220
                                             13 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     912
                                             23 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    3620
                                             23 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     818
                                             23 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     842
                                             23 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                10     8      2    2172
                                             30 COMRAM    10     8      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     321
                                             23 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     437
                                             23 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     698
                                             23 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    4958
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                      _send_lcd_data
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_data                                        1     1      0     696
                                             27 COMRAM     1     1      0
                  _SPI1_ExchangeByte
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     1      0     696
                                             27 COMRAM     1     1      0
                  _SPI1_ExchangeByte
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     1      0     696
                                             27 COMRAM     1     1      0
                  _SPI1_ExchangeByte
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4     652
                                             23 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _SPI1_ExchangeByte                                    1     1      0      22
                                             23 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    2218
                                             35 COMRAM     2     0      2
                             _memset
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteString                                   5     3      2    4977
                                             40 COMRAM     5     3      2
                     _ringBufS_flush
               _ringBufS_put_dma_cpy
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _ringBufS_put_dma_cpy                                 6     1      5     996
                                             34 COMRAM     6     1      5
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              11     5      6     478
                                             23 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     1      0    3211
                                             40 COMRAM     1     1      0
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_dma                                     1     1      0    3180
                                             39 COMRAM     1     1      0
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (3) _wait_lcd_done                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _send_lcd_data_dma                                    1     1      0    3149
                                             38 COMRAM     1     1      0
                     _ringBufS_flush
                   _ringBufS_put_dma
                          _start_lcd
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_put_dma                                     4     1      3     506
                                             23 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (2) _ringBufS_flush                                       3     0      3    2612
                                             35 COMRAM     3     0      3
                             _memset
 ---------------------------------------------------------------------------------
 (1) _display_led                                          3     3      0      22
                                             23 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _cli_read                                             8     6      2   31758
                                             10 BANK0      8     6      2
                 __cli_interpret_cmd
                         _linux_getc
                         _linux_putc
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                              12     6      6    2097
                                             23 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) _linux_putc                                           3     0      3    6750
                                             46 COMRAM     3     0      3
                               _puts
 ---------------------------------------------------------------------------------
 (2) _linux_getc                                           2     1      1     158
                                             24 COMRAM     2     1      1
                         _UART1_Read
                  _UART1_is_rx_ready
 ---------------------------------------------------------------------------------
 (3) _UART1_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART1_Read                                           1     1      0      37
                                             23 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) __cli_interpret_cmd                                  12    10      2   21939
                                             48 COMRAM     2     0      2
                                              0 BANK0     10    10      0
                   Absolute function *
                              _fh_pd *
                              _fh_pl *
                              _fh_po *
                              _fh_pr *
                              _fh_ps *
                              _fh_pu *
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             12     6      6    1404
                                             27 COMRAM    12     6      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     816
                                             23 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _fh_pu                                                2     0      2       0
                                             46 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _fh_ps                                                2     0      2    6284
                                             46 COMRAM     2     0      2
                               _puts
 ---------------------------------------------------------------------------------
 (3) _fh_pr                                                2     0      2    6326
                                             46 COMRAM     2     0      2
                               _puts
 ---------------------------------------------------------------------------------
 (3) _fh_po                                                2     0      2    6284
                                             46 COMRAM     2     0      2
                               _puts
 ---------------------------------------------------------------------------------
 (3) _puts                                                 5     3      2    6284
                                             43 COMRAM     3     1      2
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                9     5      4    3148
                                             34 COMRAM     9     5      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    2284
                                             25 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0     126
                                             24 COMRAM     1     1      0
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (9) _UART1_Write                                          1     1      0      84
                                             23 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _fh_pl                                                2     0      2      65
                                             46 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _fh_pd                                                2     0      2       0
                                             46 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     474
                                             23 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1209
                    _ADCC_Initialize
                    _DAC1_Initialize
                    _DMA1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM5_Initialize
                    _PWM6_Initialize
                    _SPI1_Initialize
           _SystemArbiter_Initialize
                    _TMR2_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     490
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      98
                                             23 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      98
                                             23 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         3     0      3      98
                                             23 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         3     0      3      98
                                             23 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                3     0      3      98
                                             23 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     174
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR6_SetInterruptHandler                             3     0      3     174
                                             23 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0     174
                                             26 COMRAM     2     2      0
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR5_SetInterruptHandler                             3     0      3     174
                                             23 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SystemArbiter_Initialize                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
                                             23 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0     174
      _DMA1_SetSCNTIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _DMA1_SetSCNTIInterruptHandler                        3     0      3     174
                                             23 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _DAC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     174
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3     174
                                             23 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2     120
                                             23 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM5_LoadDutyValue                                   4     2      2     120
                                             23 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _DAC1_SetOutput                                       1     1      0      22
                                             23 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DAC1_GetOutput                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _UART1_rx_vect_isr                                   3     3      0       0
                                             20 COMRAM     3     3      0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (11) _UART1_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _UART1_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _UART1_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _UART1_DefaultErrorHandler                           0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _UART1_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _ADCC_ISR                                            2     2      0       0
                                              5 COMRAM     2     2      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                            _Adc_Isr *
 ---------------------------------------------------------------------------------
 (15) _Adc_Isr                                             1     1      0       0
                                              4 COMRAM     1     1      0
           _ADCC_GetConversionResult
 ---------------------------------------------------------------------------------
 (16) _ADCC_GetConversionResult                            4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (15) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR6_ISR                                            2     2      0       0
                                              8 COMRAM     2     2      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (15) _TMR6_CallBack                                       0     0      0       0
                   Absolute function *
                          _Led_Blink *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR6_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _Led_Blink                                           1     1      0       0
                                              7 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _UART1_tx_vect_isr                                   2     2      0       0
                                             10 COMRAM     2     2      0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (15) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            2     2      0     319
                                             16 COMRAM     2     2      0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
                    _TMR5_WriteTimer
                         _Timers_Isr *
 ---------------------------------------------------------------------------------
 (15) _Timers_Isr                                          4     4      0      90
                                             12 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2     229
                                             12 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (15) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _DMA1_DMASCNTI_ISR                                   2     2      0       0
                                             18 COMRAM     2     2      0
                   Absolute function *
       _DMA1_DefaultInterruptHandler *
                    _source_dma_done *
 ---------------------------------------------------------------------------------
 (15) _source_dma_done                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _DMA1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_SetADIInterruptHandler
   _DAC1_GetOutput
   _DAC1_SetOutput
   _DMA1_SetSCNTIInterruptHandler
   _PWM5_LoadDutyValue
   _PWM6_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _DAC1_Initialize
     _DMA1_Initialize
       _DMA1_SetSCNTIInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM5_Initialize
     _PWM6_Initialize
     _SPI1_Initialize
     _SystemArbiter_Initialize
     _TMR2_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
   _TMR5_SetInterruptHandler
   _TMR6_SetInterruptHandler
   ___flmul
     ___xxtofl (ARG)
   ___xxtofl
   _cli_read
     __cli_interpret_cmd
       Absolute function(Fake) *
       _fh_pd *
       _fh_pl *
       _fh_po *
         _puts
           _fputc
             _putch
               _UART1_Write
           _fputs
             _fputc
       _fh_pr *
         _puts
       _fh_ps *
         _puts
       _fh_pu *
       _strlen *
       _strncmp *
         _strlen (ARG)
     _linux_getc
       _UART1_Read
       _UART1_is_rx_ready
     _linux_putc
       _puts
     _memset
   _display_led
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _send_lcd_data_dma
         _ringBufS_flush
           _memset
         _ringBufS_put_dma
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
   _eaDogM_WriteString
     _ringBufS_flush
     _ringBufS_put_dma_cpy
       _memcpy
     _start_lcd
     _strlen
     _wait_lcd_set
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_ExchangeByte
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_ExchangeByte
       _wdtdelay
     _send_lcd_data
       _SPI1_ExchangeByte
       _wdtdelay
     _wdtdelay
   _printf
     _DAC1_GetOutput (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
             _fputs
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
         _isdigit
         _isupper
         _stoa
           _fputc
           _strlen
         _strncmp
         _tolower
         _utoa
           ___lodiv
           ___lomod
           _pad
   _puts
   _scmd_init
     _cli_init
       _memset
       _puts
   _sprintf
     _vfprintf

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _Adc_Isr *
     _ADCC_GetConversionResult

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _Led_Blink *
     _TMR6_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _TMR5_ISR (ROOT)
   Absolute function(Fake) *
   _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer *
   _Timers_Isr *

 _DMA1_DMASCNTI_ISR (ROOT)
   Absolute function(Fake) *
   _DMA1_DefaultInterruptHandler *
   _source_dma_done *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     400     122       12.5%
EEDATA             400      0       0       0        0.0%
BITBIGSFRllllll    181      0       0     120        0.0%
BITBIGSFRllhhhh    110      0       0      89        0.0%
BITBANK31          100      0       0      66        0.0%
BANK31             100      0       0      67        0.0%
BITBANK30          100      0       0      64        0.0%
BANK30             100      0       0      65        0.0%
BITBANK29          100      0       0      62        0.0%
BANK29             100      0       0      63        0.0%
BITBANK28          100      0       0      60        0.0%
BANK28             100      0       0      61        0.0%
BITBANK27          100      0       0      58        0.0%
BANK27             100      0       0      59        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      FF      11       99.6%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C6       9       77.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100     19      E7       7       90.2%
BITBIGSFRllhhhh     E8      0       0      93        0.0%
BITBIGSFRllhhhh     CB      0       0      85        0.0%
BITBIGSFRllhhhh     A1      0       0      82        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     7D      A0       5      100.0%
BITBIGSFRllhhhh     5F      0       0      78        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     32      48       1       75.8%
BITBIGSFRllhhhl     49      0       0      95        0.0%
BITBIGSFRllhhhh     3F      0       0      80        0.0%
BITBIGSFRhhhhh      28      0       0      68        0.0%
BITBIGSFRllhhhh     23      0       0      75        0.0%
BITBIGSFRllllll     1F      0       0     108        0.0%
BITBIGSFRllllll     16      0       0     113        0.0%
BITBIGSFRllllll     15      0       0     104        0.0%
BITBIGSFRllllll     11      0       0     112        0.0%
BITBIGSFRllllll      F      0       0     110        0.0%
BITBIGSFRllllll      F      0       0     105        0.0%
BITBIGSFRllhhhh      E      0       0      91        0.0%
BITBIGSFRllhhhh      C      0       0      74        0.0%
BITBIGSFRlllllh      B      0       0     103        0.0%
BITBIGSFRllhhl       B      0       0      96        0.0%
BITBIGSFRllhhhh      A      0       0      73        0.0%
BITBIGSFRllhhhh      8      0       0      77        0.0%
BITBIGSFRllllll      7      0       0     118        0.0%
BITBIGSFRllllll      7      0       0     116        0.0%
BITBIGSFRhhlh        6      0       0      70        0.0%
BITBIGSFRllhhhh      5      0       0      92        0.0%
BITBIGSFRllhhhh      5      0       0      94        0.0%
BITBIGSFRllllhl      5      0       0     102        0.0%
BITBIGSFRlllhl       5      0       0     100        0.0%
BITBIGSFRllhll       5      0       0      98        0.0%
BITBIGSFRllllll      4      0       0     117        0.0%
BITBIGSFRllllll      4      0       0     119        0.0%
BITBIGSFRllhlh       4      0       0      97        0.0%
BITBIGSFRlllhh       4      0       0      99        0.0%
BITBIGSFRllllhh      4      0       0     101        0.0%
BITBIGSFRllllll      3      0       0     114        0.0%
BITBIGSFRllllll      3      0       0     109        0.0%
BITBIGSFRllllll      3      0       0     106        0.0%
BITBIGSFRllhhhh      2      0       0      90        0.0%
BITBIGSFRhhll        2      0       0      71        0.0%
BITBIGSFRhll         2      0       0      72        0.0%
BITBIGSFRllhhhh      1      0       0      76        0.0%
BITBIGSFRllhhhh      1      0       0      88        0.0%
BITBIGSFRllhhhh      1      0       0      86        0.0%
BITBIGSFRllhhhh      1      0       0      87        0.0%
BITBIGSFRllhhhh      1      0       0      84        0.0%
BITBIGSFRllhhhh      1      0       0      83        0.0%
BITBIGSFRhhhl        1      0       0      69        0.0%
BITBIGSFRllllll      1      0       0     115        0.0%
BITBIGSFRllhhhh      1      0       0      79        0.0%
BITBIGSFRllllll      1      0       0     111        0.0%
BITBIGSFRllhhhh      1      0       0      81        0.0%
BITBIGSFRllllll      1      0       0     107        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     394     121        0.0%
DATA                 0      0     794       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Mar 15 14:46:40 2022

                            _SPI1_ExchangeByte 466A                                   ___fldiv@aexp 0030  
                                 ___fldiv@bexp 002F               __end_of_TMR5_SetInterruptHandler 47AE  
                                 ___fldiv@sign 0028                                   ?_display_led 0001  
                                 ___awdiv@sign 001D                             ?_SPI1_ExchangeByte 0001  
                          ___wmul@multiplicand 001A                              ??_TMR5_WriteTimer 000F  
                              _DAC1_Initialize 47D8                                            l205 4664  
                                          l643 415C                                            l808 4678  
                                          _GIE 01FE97                                            _ana 0033  
                                          _pad 3712                                            _res 0040  
                                 ___awmod@sign 001D                            ??_SPI1_ExchangeByte 0018  
                              _TMR2_Initialize 45F6                                            tosl 003FFD  
                                          wreg 003FE8                                 _DAC1_SetOutput 4816  
                                 ___flmul@aexp 0061                                   ___flmul@bexp 0062  
                              send_lcd_cmd@cmd 001C                   ?_ADCC_SetADIInterruptHandler 0018  
                           _UART1_Transmit_ISR 4468                                   ___flmul@sign 0060  
                                 ___flmul@temp 006B                                   ___flmul@prod 0067  
                             ?_source_dma_done 0001                         __end_of_DAC1_GetOutput 482C  
                                 ___fltol@exp1 0021                                           l1301 33EE  
                                         l1240 33A6                                           l1251 33B2  
                                         l2060 2FB2                                           l1261 33BE  
                                         l1246 33AC                                           l2206 2036  
                                         l2070 3650                                           l1182 1E44  
                                         l1271 33CA                                           l2151 1A1E  
                                         l1256 33B8                                           l2152 19FC  
                                         l1281 33D6                                           l2217 20A4  
                                         l1266 33C4                                           l2218 20A0  
                                         l1291 33E2                                           l1276 33D0  
                                         l2236 160C                                           l2253 18A8  
                                         l2245 1822                                           l1286 33DC  
                                         l2246 181E                                           l2422 0672  
                                         l2167 1AF0                                           l1296 33E8  
                                         l2176 1B56                                           l1393 2822  
                                         l2177 1B52                                           l1379 2308  
                                         l2284 2DB2                                           l2277 2D34  
                                         l2357 3742                                           l1478 4242  
                                         l2394 030E                                           l2458 2982  
                                         l2477 2328                                           l2575 2CEC  
                                         l2479 2330                                           l2673 41B2  
                                         l2587 25CE                                           ?_pad 002C  
                                         l1887 2ECA                                           l7311 2E24  
                                         l7207 3400                                           l9003 3BE0  
                                         l7281 2D62                                           l7283 2D68  
                                         l7275 2D44                                           l7293 2DD8  
                                         l7285 2D74                                           l7295 2DE4  
                                         l7287 2D9A                                           l9187 4508  
                                         l7863 2AB6                                           l9711 1950  
                                         l9643 417C                                           l7883 2BAC  
                                         l7875 2B5E                                           l9723 1974  
                                         l9715 1954                                           l9645 417E  
                                         l9629 4148                                           l9661 35BC  
                                         l7877 2B90                                           l7869 2B22  
                                         l9655 3528                                           l9911 1EF4  
                                         l9817 1B14                                           l9833 1B34  
                                         l9809 1AE0                                           l9753 19B0  
                                         l9667 3DE8                                           l9931 1F34  
                                         l9907 1EF0                                           l9827 1B2A  
                                         l9691 190C                                           l9669 3DEC  
                                         l8949 4082                                           l9861 1BC2  
                                         l9853 1B9C                                           l9781 1A42  
                                         l9765 1A0A                                           l9927 1F30  
                                         l9791 1A68                                           l9767 1A0E  
                                         l9687 1908                                           STR_1 FFC1  
                                         STR_2 FFCD                                           l9953 1F96  
                                         l9945 1F7E                                           l9865 1BCA  
                                         STR_3 FF47                                           STR_4 FF60  
                                         l9883 3A3E                                           l8995 3BAE  
                                         l9971 200E                                           l9963 1FE6  
                                         l9939 1F68                                           l9867 1BCC  
                                         STR_5 FF8C                                           STR_6 FF78  
                                         l9789 1A64                                           STR_7 FFB0  
                                         STR_8 FEF8                                           l9879 3A28  
                                         l9983 204C                                           l9799 1A7A  
                                         STR_9 FF9E                                           l9977 2034  
                                         l9989 206A                                           _LATA 003FBA  
                                         _LATB 003FBB                                           _LATC 003FBC  
                                         _LATD 003FBD                                           _LATE 003FBE  
                                         _LATF 003FBF                                           _T2PR 003FAB  
                                         _T6PR 003F93                                           u6115 3F36  
                                         u6116 3F38                                           _PMD0 0039C0  
                                         _PMD1 0039C1                                           _PMD2 0039C2  
                                         _PMD3 0039C3                                           _PMD4 0039C4  
                                         _PMD5 0039C5                                           _PMD6 0039C6  
                                         _PMD7 0039C7                                           u6345 4370  
                                         u6355 433E                                           u6490 2DEE  
                                         u5890 4728                                           u9190 4748  
                                         u9710 3520                                           u9730 3568  
                                         _PLLR 01CEE0                                           u9740 3E16  
                                         u9900 1A26                                           u9850 19D2  
                                         u9747 3E08                                           u9860 19E2  
                                         u9870 19E4                                           _WPUA 003A41  
                                         _WPUB 003A51                                           _WPUC 003A61  
                                         _WPUD 003A71                                           _WPUE 003A81  
                                         _WPUF 003A91                               __end_of_ADCC_ISR 3FCE  
                          ?_UART1_Transmit_ISR 0001                                           _dbuf 0146  
                                         _cmdm FEDC                                           _atoi 2BB6  
                                         _main 1BE8                                           _ival 0138  
                                         _mode 00FB                                __end_of_Adc_Isr 42DE  
                                         _prec 00F7                                           _nout 00F3  
                                         pad@i 0060                                           pad@p 0030  
                                         fsr1h 003FE2                                           fsr2h 003FDA  
                                         indf1 003FE7                                           indf2 003FDF  
                                         fsr1l 003FE1                                           pad@w 0062  
                                         fsr2l 003FD9                                           _stoa 291A  
                                         _puts 426A                                           _vval 013C  
                                         _utoa 230C                      ringBufS_put_dma_cpy@_this 0023  
                                ___fpclassifyf 30A2                                           prodh 003FF4  
                                         prodl 003FF3                                           start 00AE  
                              _timer5ReloadVal 003C                                ___fldiv@new_exp 0029  
                              _PWM5_Initialize 46B6                      __end_of_SPI1_ExchangeByte 4684  
                ??_UART1_SetTxInterruptHandler 001B                                 _SPI1STATUSbits 003D17  
                            _UART1_rx_vect_isr 3E74                                   ___param_bank 000000  
                   __end_of_PWM5_LoadDutyValue 437E                                    ?_UART1_Read 0001  
                           ?_UART1_rx_vect_isr 0001                                          ??_pad 0032  
                     __end_of_ringBufS_put_dma 3D3C                           ??_UART1_Transmit_ISR 000B  
                __end_of_OSCILLATOR_Initialize 466A                                          l10013 210C  
                                        l10023 2142                                          l10201 389C  
                                        l10025 2144                                          l10017 2136  
                                        l10009 20E8                                          l10121 17E8  
                                        l10115 17CA                                          l10205 38A6  
                                        l10221 39C2                                          l10141 1866  
                                        l10045 15B8                                          l10301 3306  
                                        l10231 39E4                                          l10063 15F8  
                                        l10047 15BC                                          l11201 27DC  
                                        l10209 38B4                                          l10241 3A06  
                                        l10225 39CE                                          l10145 1884  
                                        l10073 162A                                          l10065 15FC  
                                        l10049 15CC                                          l10321 3360  
                                        l11123 2172                                          l10411 3124  
                                        l11133 2288                                          l11205 2806  
                                        l10245 3A14                                          l10237 39FC  
                                        l10229 39DC                                          l10261 3836  
                                        l10253 37E4                                          l10157 18C6  
                                        l10317 3350                                          l11135 228C  
                                        l11215 2890                                          l11223 28EE  
                                        l10191 387C                                          l10183 385E  
                                        l10335 3390                                          l10327 3368  
                                        l10407 311A                                          l10423 3A96  
                                        l11129 2192                                          l10177 384E  
                                        l10257 3818                                          l10273 2E9E  
                                        l10329 3374                                          l10417 3164  
                                        l10441 2534                                          l10345 2F2C  
                                        l10283 2F02                                          l10291 4428  
                                        l10451 25F0                                          l10603 02F6  
                                        l10531 0074                                          l10347 2F40  
                                        l11165 3910                                          l10189 3874  
                                        l10277 2EB4                                          l10269 2E6A  
                                        l10381 372A                                          l10621 0366  
                                        l10613 031E                                          l10357 2F9C  
                                        l10373 363A                                          l10365 35DE  
                                        l11501 0A36                                          l10455 2626  
                                        l10391 3768                                          l10703 070C  
                                        l10623 036A                                          l10607 0318  
                                        l10551 00FC                                          l10519 0048  
                                        l10367 35F2                                          l10385 3738  
                                        l10633 0388                                          l10553 0106  
                                        l11601 1014                                          l11521 0B40  
                                        l11505 0A40                                          l10475 4048  
                                        l10459 2654                                          l10395 3794  
                                        l10387 374E                                          l10803 097C  
                                        l10715 073A                                          l10723 075A  
                                        l10731 077E                                          l10643 03BC  
                                        l10539 008A                                          l11507 0A8E  
                                        l10581 01E4                                          l10549 00E4  
                                        l10557 012C                                          l11525 0B52  
                                        l11701 1CDC                                          l10495 2690  
                                        l10903 2C1C                                          l10751 0856  
                                        l10671 0584                                          l10639 03AC  
                                        l10591 02A4                                          l10567 0186  
                                        l10575 01A0                                          l10823 2944  
                                        l11615 111C                                          l11543 0C7E  
                                        l11519 0B1A                                          l11711 1D0A  
                                        l10497 269E                                          l10905 2C24  
                                        l10649 03E6                                          l10657 04DA  
                                        l10585 021C                                          l10841 29D0  
                                        l10833 2998                                          l11609 10D0  
                                        l11537 0C46                                          l11481 0A10  
                                        l11625 1146                                          l11641 3B54  
                                        l11705 1CF0                                          l10915 2C96  
                                        l10907 2C2A                                          l10691 068C  
                                        l10739 0814                                          l10683 0648  
                                        l10587 026A                                          l10851 2A32  
                                        l11619 1128                                          l11563 0DFA  
                                        l11555 0D78                                          l11539 0C6C  
                                        l11483 0A12                                          l11643 3B78  
                                        l11723 1D2E                                          l10909 2C5A  
                                        l10837 29B2                                          l11493 0A2E  
                                        l11485 0A26                                          l11741 1E40  
                                        l11733 1E28                                          l11725 1D34  
                                        l11717 1D1C                                          l11709 1D04  
                                        l10767 08A2                                          l10855 2A4C  
                                        l10847 2A18                                          l11591 0FA0  
                                        l11583 0F16                                          l11567 0E24  
                                        l11719 1D22                                          l10769 08AC  
                                        l10689 066A                                          l11577 0EBC  
                                        l11497 0A32                                          l11489 0A2A  
                                        l11745 1E50                                          l11761 1E92  
                                        l11737 1E36                                          l10779 0900  
                                        l10789 092C                                          l10869 2368  
                                        l11749 1E54                                          l10895 2BC8  
                                        l10879 2454                                          l11775 1EBC  
                                        l11759 1E6A                                          l11695 1CC2  
                                        l11689 1CA6                                          l10899 2BCC  
                                        l11699 1CD6                                  ___fltol@sign1 0020  
                                        _ADACT 003EFE                                          _ADCAP 003EF5  
                                        ?_atoi 001F                                __end_of___fladd 1BE8  
                                        ?_main 0001                                          _ADCLK 003EFF  
                                        _ADCNT 003EEB                                          _ADPCH 003EF1  
                              __end_of___fldiv 214C                                          _ADREF 003EFD  
                              __end_of___awdiv 38BE                                __end_of___flneg 443A  
                                        STR_10 FFF6                                          STR_11 FFF9  
                                        STR_12 FFF3                                          STR_21 FFDA  
                                        STR_13 FFFC                                          STR_30 FFE6  
                                        STR_22 FFE2                                          STR_14 FFED  
                                        STR_15 FFF0                                          STR_16 FF9B  
                                        STR_32 FFE6                                          STR_25 FFEA  
                                        STR_17 FFD6                                          STR_18 FFDE  
                                        STR_27 FFEA                                __end_of___awmod 3A1E  
                                        _ADRPT 003EEC                                __end_of___flmul 18DC  
                              __end_of___flsub 3F02                                __end_of___fltol 33A2  
                                        ?_stoa 0023                                          ?_puts 002C  
                                        u10110 1BA8                                          u10030 1B38  
                                        ?_utoa 0064                                          u10050 1B4C  
                                        u11100 2522                                          u10150 3A74  
                                        u11200 43D8                                          u10400 211A  
                                        u11040 315C                                          u11050 315E  
                                        u10170 43A6                                          u11035 313E  
                                        u11220 4044                                          u12020 2CCA  
                                        u11140 25B4                                          u11060 3ADC  
                                        u10180 43A8                                          u10157 3A66  
                                        u11125 254C                                          u11310 2730  
                                        u10350 209A                                          u11126 2552  
                                        u11127 2560                                          u11320 2762  
                                        u11160 260E                                          u11145 25AA  
                                        u11330 278C                                          u10530 1818  
                                        u11090 2502                                          u11067 3ACE  
                              __end_of___lodiv 2FD4                                          u11340 27B8  
                                        u11260 26C8                                ___awdiv@divisor 001A  
                                        u11325 275C                                          u11317 2722  
                                        u11165 2604                                          u11190 43D6  
                                        u10630 3880                                          u10390 20F6  
                                        u11510 0336                                          u11327 274E  
                                        u11095 24F8                                          u11280 26F8  
                                        u11337 277E                                          u12241 218C  
                                        u10570 1874                                          u10490 1618  
                                        u10810 32F4                                          u11450 02CC  
                                        u11370 0064                                          _U1P1H 003DED  
                                        u11347 27AA                                          u11267 26BA  
                                        u10740 3832                                          u10580 1892  
                                        u10820 3324                                          u11620 0574  
                                        u10900 2F44                                          u12500 0B94  
                                        _U1P2H 003DEF                                          u12270 22C8  
                                        u11550 0384                                          _U1P3H 003DF1  
                                        _U1P1L 003DEC                                          u11287 26EA  
                                        u11800 0916                                          u11480 0304  
                                        u12600 0F70                                          _U1P2L 003DEE  
                                        _T2CON 003FAC                                          u10825 331A  
                                        u10690 39E8                                          u10930 35F6  
                                        u12530 0CC0                                          _U1P3L 003DF0  
                                        u12268 2274                                          u10860 337A  
                                        u11820 0974                                          u11740 0838  
                                        u11831 2924                                          u11920 2A60  
                                        u10881 2F0C                                          u11940 231E  
                                        u10990 30E0                                          _T5CLK 003F9D  
                                        u11880 29C6                                __end_of___lomod 3672  
                                        u11890 29FA                                          u11970 2480  
                                        u12690 1CFC                                          u10995 30D6  
                                        u11971 247E                                          u11980 248E  
                                        _T2HLT 003FAD                                          u11990 2492  
                                        _T5CON 003F9A                                          u11897 29EC  
                                        _T6CON 003F94                                          _T6HLT 003F95  
                                        _T2TMR 003FAA                                          _U1UIR 003DF8  
                                        _T2RST 003FAF                                          _U1RXB 003DE8  
                                        _U1TXB 003DEA                         __end_of_DAC1_SetOutput 4820  
                                        _T6TMR 003F92                                          _T6RST 003F97  
                                        i2l477 430C                            ??_UART1_rx_vect_isr 0015  
                                        i2l667 4490                                          i2l748 4546  
                              ___awdiv@counter 001C                                          _OSCEN 0039DD  
                                 vfpfcnvrt@fmt 00B9                                   vfpfcnvrt@llu 00C1  
                                        _TMR5H 003F99                                          _TMR5L 003F98  
                                        _TRISA 003FC2                                          _TRISB 003FC3  
                                        _TRISC 003FC4                                          _TRISD 003FC5  
                                        _TRISE 003FC6                                          _TRISF 003FC7  
                                  _Default_ISR 4848                                _PWM6_Initialize 469E  
                     eaDogM_WriteString@strPtr 0029                      ?_TMR6_SetInterruptHandler 0018  
                            _UART1_tx_vect_isr 40CC                               __end_of_TMR5_ISR 3DDE  
                                 _DMA1CON0bits 003BFC                               __end_of_TMR6_ISR 431A  
                                 _DMA1CON1bits 003BFD                                          _dac_v 00FA  
                                        _buff1 0300                                          _fh_pd 47F8  
                                        _fh_pl 47EE                                          _fh_po 46FA  
                                        _fh_pr 45B8                                          _fh_ps 470E  
                                        _fh_pu 4802                                          _flags 003A  
                                 _DMA2CON0bits 003BDC                                   _DMA2CON1bits 003BDD  
                                        _fputc 3510                                          _fputs 3A1E  
                              __end_of_isdigit 43DE                                ?_DAC1_GetOutput 0001  
                           ?_UART1_tx_vect_isr 0001                                          atoi@n 0027  
                                        pad@fp 002C                                          atoi@s 001F  
                                        _width 00F5                                          _putch 480C  
                              __end_of_isspace 4050                                __end_of_isupper 43AE  
                                        pclath 003FFA                                          pclatu 003FFB  
                                        tablat 003FF5                                          plusw1 003FE3  
                                        plusw2 003FDB                                          stoa@i 0067  
                                        stoa@l 006F                                          stoa@p 006D  
                                        stoa@s 0025                                          stoa@w 0069  
                                        puts@s 002C                                          utoa@d 0066  
                                        utoa@i 0082                                          utoa@n 007A  
                                        utoa@p 0076                                          utoa@w 0078  
                                        status 003FD8            __end_of_UART1_SetRxInterruptHandler 4768  
                  _UART1_SetRxInterruptHandler 475A                                __end_of_sprintf 3C98  
                               ?___fpclassifyf 0018                                __end_of_tolower 41BC  
                              __end_of_strncmp 27C8                               ___lodiv@dividend 0018  
     __end_of_UART1_DefaultFramingErrorHandler 4842             ??_UART1_DefaultFramingErrorHandler 0015  
            ?_UART1_DefaultFramingErrorHandler 0001               _UART1_DefaultFramingErrorHandler 4840  
                          ??_UART1_tx_vect_isr 000B                      __end_of_UART1_rx_vect_isr 3EBC  
               ??_TMR6_DefaultInterruptHandler 0008                                _TMR5_Initialize 3E2A  
                        __end_of_ringBufS_init 45F6                                __initialization 322E  
                            send_lcd_data@data 001C                                   __end_of_cmdm FEF8  
                                 __end_of_atoi 2CF6                                   __end_of_main 1EC4  
                      __end_of_DAC1_Initialize 47E4                                   __end_of_stoa 2A6A  
                                 __end_of_puts 42A4                                   __end_of_utoa 24BC  
                  ??_UART1_DefaultErrorHandler 0015                        __end_of_TMR2_Initialize 4614  
                        __end_of_send_lcd_data 45B8                                   ?_UART1_Write 0001  
                                       ??_atoi 0021                                         ??_main 01E5  
                     _TMR5_SetInterruptHandler 47A0                                         ??_stoa 0027  
                                       ??_puts 002E                                         ??_utoa 006E  
                                __activetblptr 000003                                ?_DAC1_SetOutput 0001  
                    __end_of_UART1_tx_vect_isr 410A                               ___lodiv@quotient 0028  
                              _TMR6_Initialize 443A                               _UART1_Initialize 345A  
                                       ?_fh_pd 002F                                         _ADACCH 003EE9  
                                       _ADACCL 003EE8                                         ?_fh_pl 002F  
                                       ?_fh_po 002F                                         ?_fh_pr 002F  
                                       ?_fh_ps 002F                                         _ADACCU 003EEA  
                                       ?_fh_pu 002F                                         _ADACQH 003EF4  
                                       _ADACQL 003EF3                                         _ADCON0 003EF8  
                                       _ADCON1 003EF9                                         _ADCON2 003EFA  
                                       _ADCON3 003EFB                                         _ADERRH 003EE3  
                                       _ADERRL 003EE2                        send_lcd_data_dma@strPtr 0027  
                                    ??_Adc_Isr 0005                                         ?_fputc 001A  
                                       _ADLTHH 003EDF                                         _ADLTHL 003EDE  
                                       ?_fputs 0023                                         _ADRESH 003EF0  
                                       _ADRESL 003EEF                                         _ADPREH 003EF7  
                                       _ADPREL 003EF6                                         _DMA1PR 0039F3  
                                       _ADSTAT 003EFC                                         _ADUTHH 003EE1  
                             ___awdiv@dividend 0018                                         _ADUTHL 003EE0  
                                       _ANSELA 003A40                                         ?_putch 0001  
                                       _ANSELB 003A50                                         _ANSELC 003A60  
                                       _ANSELD 003A70                                         _ANSELE 003A80  
                                       _ANSELF 003A90                                         _RB1I2C 003A5A  
                                       _RB2I2C 003A5B                                         _RD0I2C 003A7A  
                                       _U1CON0 003DF2                                         _U1CON1 003DF3  
                                       _U1CON2 003DF4                                         _RD1I2C 003A7B  
                                       _RC3I2C 003A6A                                         _RC4I2C 003A6B  
                                       _U1BRGH 003DF6                                         _U1FIFO 003DF7  
                                       _U1BRGL 003DF5                                         _T5GATE 003F9C  
                                       _T5GCON 003F9B                             __cli_interpret_cmd 214C  
                                       _RC3PPS 003A13                                         _RD2PPS 003A1A  
                                       _RC5PPS 003A15                                         _ODCONA 003A42  
                                       _ODCONB 003A52                                         _RC6PPS 003A16  
                                       _ODCONC 003A62                                         _ODCOND 003A72  
                                       _ODCONE 003A82                                         _ODCONF 003A92  
                                       _RF2PPS 003A2A                        __end_of_PWM5_Initialize 46CE  
                                       i1l6521 4594                                         i1l7087 370C  
                                       i2l7103 42D0                                         _INLVLA 003A44  
                                       _INLVLB 003A54                                         _INLVLC 003A64  
                                       _INLVLD 003A74                                         _INLVLE 003A84  
                                       _INLVLF 003A94                                         i2l7067 448C  
                                       i2l7263 3D76                                         i2l7259 3D44  
                                ?_init_display 0001                                         _OSCFRQ 0039DF  
                                vfpfcnvrt@done 00CB                                         _PRLOCK 0039EF  
                        _UART1_SetErrorHandler 4784                               __end_of___xxtofl 2E36  
                   ??_ADCC_GetConversionResult 0003                       __end_of_send_lcd_cmd_dma 464E  
                    ringBufS_flush@clearBuffer 0026                            ?__cli_interpret_cmd 0031  
              ??_DMA1_SetSCNTIInterruptHandler 001B                               __end_of_cli_init 3F8A  
                             __end_of_cli_read 291A                        DAC1_SetOutput@inputData 0018  
                                 _CCPTMRS1bits 003F5F                                   vfprintf@cfmt 01CE  
                                       ___flge 2E36                                         ___fleq 37B0  
                                    ??___fladd 0020                                         ___wmul 4496  
                                    ??___fldiv 0020                                      ??___awdiv 001C  
                                    ??___flneg 001C                                      ??___awmod 001C  
                                       _g_cmds 01AB                                      ??___flmul 002E  
                                    ??___flsub 0032                                      ??___fltol 001C  
                                    ??___lodiv 0028                                 _ringBufS_flush 3BF2  
                                    ??___lomod 0028                                         _efgtoa 0000  
                         send_lcd_cmd_long@cmd 001C                                         _floorf 24BC  
                                       _memcpy 3B9C                                         _memset 2A6A  
                      __end_of_PWM6_Initialize 46B6                                         clear_0 329A  
                                       clear_1 32AC                                         clear_2 32B8  
                                       clear_3 32C4                                         clear_4 32D0  
                             ___awdiv@quotient 001E                                ___awmod@divisor 001A  
                                   _Timers_Isr 3D3C                                         isa$std 000001  
                              ___awmod@counter 001C                                         _printf 44C0  
                                       pad@buf 002E                             _eaDogM_WriteString 38BE  
                                       _strcpy 3A86                                      ?_ADCC_ISR 0001  
                                       _strlen 3DDE                                   __pdataBIGRAM 03FF  
                              _ADCC_Initialize 393C                                         fputc@c 001A  
                               _PMD_Initialize 4554                           ??__cli_interpret_cmd 0060  
                                       fputs@c 0029                                         fputs@i 002A  
                                       fputs@s 0023                                      ??_isdigit 001A  
                              ___fpclassifyf@e 0020                                ___fpclassifyf@u 0022  
                              ___fpclassifyf@x 0018                                   __mediumconst FED6  
                                    ??_isspace 001A                                         tblptrh 003FF7  
                                    ??_isupper 001A                                         tblptrl 003FF6  
                                       tblptru 003FF8                            ?_eaDogM_WriteString 0029  
                             __end_of_wdtdelay 426A                                         stoa@cp 006B  
                                       stoa@fp 0023                               __end_of_vfprintf 3B9C  
                                       utoa@fp 0064                                  wdtdelay@delay 0018  
DMA1_SetSCNTIInterruptHandler@InterruptHandler 0018       TMR5_SetInterruptHandler@InterruptHandler 0018  
  UART1_SetTxInterruptHandler@InterruptHandler 0018    UART1_SetRxInterruptHandler@InterruptHandler 0018  
     TMR6_SetInterruptHandler@InterruptHandler 0018    ADCC_SetADIInterruptHandler@InterruptHandler 0018  
         __end_of_UART1_SetOverrunErrorHandler 4776                   _UART1_SetOverrunErrorHandler 4768  
                    _UART1_DefaultErrorHandler 482C                                      ??_sprintf 0033  
                                    ??_tolower 0020                                      ??_strncmp 0022  
                               ??_init_display 0026                                     ___flge@ff1 006D  
                              ??___fpclassifyf 001C                                     ___flge@ff2 0071  
                      __end_of_TMR5_Initialize 3E72                                   ___xxtofl@arg 0022  
                                 ___xxtofl@exp 0021                              _SYSTEM_Initialize 408E  
                                 ___xxtofl@val 0018                                     ___fleq@ff1 0018  
                                   ___fleq@ff2 001C                                     __accesstop 0060  
                      __end_of__initialization 32E2                                     ___flneg@f1 0018  
                           ?_SYSTEM_Initialize 0001                                  ___rparam_used 000001  
                                   ___fltol@f1 0018                                _TMR5_WriteTimer 4530  
                            __end_of_Led_Blink 4632                           ??_eaDogM_WriteString 002B  
                            ??_DMA1_Initialize 001B                         __end_of_ringBufS_flush 3C46  
                               __pcstackCOMRAM 0001                                   __pidataBANK0 483C  
                                 __pidataBANK1 43DE                            ??_SYSTEM_Initialize 001D  
                             ?_DAC1_Initialize 0001                                  __end_of_fh_pd 4802  
                                __end_of_fh_pl 47F8                                  __end_of_fh_po 470E  
                                __end_of_fh_pr 45D8                                  __end_of_fh_ps 4722  
                                __end_of_fh_pu 480C                                      ?_TMR5_ISR 0001  
                                    ?_TMR6_ISR 0001                                 ivt0x8_undefint 00AC  
                                __end_of_fputc 35C4                                  __end_of_fputs 3A86  
                            ??_SPI1_Initialize 0018                                  __end_of_putch 4816  
                             ?_TMR2_Initialize 0001                        __end_of_TMR6_Initialize 4468  
                       __end_of_PMD_Initialize 4576                          SPI1_ExchangeByte@data 0018  
                                   ??_ADCC_ISR 0006                          __end_of_TMR6_CallBack 4530  
                           _spi1_configuration FED7                          TMR6_ISR@CountCallBack 003E  
                  _DMA1_SCNTI_InterruptHandler 00E1                      _UART1_FramingErrorHandler 00E7  
                                      ??_fh_pd 0031                                        ??_fh_pl 0031  
                                      ??_fh_po 0031                                        ??_fh_pr 0031  
                                      ??_fh_ps 0031                                        ??_fh_pu 0031  
                                      ??_fputc 001E                      __end_of_SYSTEM_Initialize 40CC  
                                      ??_fputs 0027                                linux_putc@a_len 0031  
                                      ??_putch 0019                                     __pbssBANK0 00DD  
                                   __pbssBANK1 0100                                     __pbssBANK2 0200  
                                   __pbssBANK3 0300                  ?_UART1_SetOverrunErrorHandler 0018  
                       ?_UART1_SetErrorHandler 0018                               ?_PWM5_Initialize 0001  
                           ringBufS_init@_this 0024                       _SystemArbiter_Initialize 47AE  
                                      IVTBASEH 003FD6                                        IVTBASEL 003FD5  
                                      IVTBASEU 003FD7                               linux_getc@a_data 0019  
                               cli_init@a_cmds 0031                                ?_ringBufS_flush 0024  
                        __end_of_wait_lcd_done 4730                                        ?___flge 006D  
                                      ?___fleq 0018                                   ??_UART1_Read 0018  
                                      ?___wmul 0018               __end_of_TMR6_SetInterruptHandler 47A0  
                      __end_of_ADCC_Initialize 39AE                     __end_of_PWM6_LoadDutyValue 434C  
                                ?_send_lcd_cmd 0001                                     ??_TMR5_ISR 0011  
                                   ??_TMR6_ISR 0009                                        ?_efgtoa 0079  
        __end_of_DMA1_SetSCNTIInterruptHandler 47CA                  _DMA1_SetSCNTIInterruptHandler 47BC  
                                      _ADFLTRH 003EE7                                        ?_floorf 0060  
                                      _ADFLTRL 003EE6                                        ?_memcpy 0018  
                                      ?_memset 0018                                        _DMA1DSA 003BF0  
                                      _DMA2DSA 003BD0                                        _DMA1DSZ 003BEE  
                                      _DMA2DSZ 003BCE                                        _ADPREVH 003EEE  
                                      _ADPREVL 003EED                                        _DMA1SSA 003BF9  
                                      _DMA2SSA 003BD9                                        _DMA1SSZ 003BF7  
                             ?_PWM6_Initialize 0001                                        _DMA2SSZ 003BD7  
                                  ?_Timers_Isr 0001                                        _ADSTPTH 003EE5  
                                      _ADSTPTL 003EE4                                        ?_printf 01D0  
                              ?_PMD_Initialize 0001                              ?_ringBufS_put_dma 0018  
                            _UART1_Receive_ISR 3672                                        ?_strcpy 0018  
                                      ?_strlen 0018                                        _U1ERRIE 003DFA  
                                      _U1ERRIR 003DF9                               ??_DAC1_GetOutput 0018  
                                 ?_Default_ISR 0001                             ??_ringBufS_put_dma 001B  
                           ?_UART1_Receive_ISR 0001                                        _U1RXPPS 003AE5  
                                    ?___xxtofl 0018                             _PWM5_LoadDutyValue 434C  
                                      _OSCCON1 0039D9                                        _OSCCON3 0039DB  
                                      _IVTLOCK 003FD4                                        _SPI1CLK 003D1C  
                                    ?_cli_init 002F                                      ?_cli_read 006A  
                                      _SPI1RXB 003D10                                        _SPI1TXB 003D11  
                                      _OSCTUNE 0039DE                                        _PWM5DCH 003F6D  
                                      _PWM5DCL 003F6C                                        _PWM6DCH 003F69  
                                      _PWM6DCL 003F68                                        _PWM5CON 003F6E  
                                      _PWM6CON 003F6A                                        _SLRCONA 003A43  
                                      _SLRCONB 003A53                                        _SLRCONC 003A63  
                                      _SLRCOND 003A73                                        _SLRCONE 003A83  
                                      _SLRCONF 003A93                                        _Adc_Isr 42A4  
                                   _build_date 01A9                            ??_UART1_Receive_ISR 0015  
                                   _build_time 01A7                               ___lomod@dividend 0018  
                      __end_of_TMR5_WriteTimer 4554                            ?_PWM5_LoadDutyValue 0018  
                           __end_of_UART1_Read 408E                               ?_TMR5_Initialize 0001  
                        ringBufS_put_dma@_this 0018                      INTERRUPT_Initialize@state 0018  
                 __end_of_ringBufS_put_dma_cpy 3CEA                                        __Hparam 0000  
                                  _SrcVarName0 0196                                        __Lparam 0000  
                     __end_of_UART1_Initialize 3510                     ??_TMR5_SetInterruptHandler 001B  
                     __cli_interpret_cmd@a_ctx 0031                                 ??_send_lcd_cmd 001C  
                                      ___fladd 18DC                                        ___fldiv 1EC4  
                                      ___awdiv 383A                                        ___flneg 440C  
                                      ___awmod 39AE                                        ___flmul 158A  
                                      ___flsub 3EBC                                        ___fltol 32E8  
                                    ?_wdtdelay 0018                                        ___lodiv 2F06  
                                      ___lomod 35C4                               ??_DAC1_SetOutput 0018  
                    __end_of_UART1_Receive_ISR 3712                                      ?_vfprintf 00D7  
                         ??_PWM5_LoadDutyValue 001A                           __end_of_init_display 322E  
                                      __pcinit 322E                            _eaDogM_WriteCommand 47E4  
                             ?_TMR6_Initialize 0001                                        __ramtop 2000  
                                      _cli_ctx 0200                                        __ptext0 1BE8  
                                      __ptext1 3C46                                        __ptext2 46CE  
                                      __ptext3 3F48                                        __ptext4 44C0  
                                      __ptext5 3B42                                        __ptext6 09BC  
                                      __ptext7 230C                                        __ptext8 35C4  
                                      __ptext9 2F06                          _OSCILLATOR_Initialize 464E  
                                      _isdigit 43AE                                     ??___xxtofl 001C  
                                      _mode_sw 00F9                               ___awmod@dividend 0018  
                     ??_PIN_MANAGER_Initialize 0018                                        _isspace 4012  
                                  Timers_Isr@i 000F                                      _T5CONbits 003F9A  
                                      _isupper 437E                                        efgtoa@c 007F  
                                      efgtoa@d 0097                                        efgtoa@e 00AF  
                                      efgtoa@f 007B                                        efgtoa@g 00A9  
                                      efgtoa@h 00A1                                        efgtoa@i 00AD  
                                      efgtoa@l 00A5                                        efgtoa@m 0091  
                                      efgtoa@n 00B1                                        efgtoa@p 009B  
                                      efgtoa@t 008B                                        efgtoa@u 00B3  
                                      efgtoa@w 009E                                     ??_cli_init 0033  
                                   ??_cli_read 006C                                  ?_wait_lcd_set 0001  
                                      atoi@neg 0025                                     _linux_getc 44E8  
                                      _sprintf 3C46                                        _tolower 4182  
                                   _linux_putc 4730                              __end_of_scmd_init 46E4  
                                      _strncmp 2666                           end_of_initialization 32E2  
                                      floorf@e 006E                                        floorf@m 006A  
                                      floorf@u 0070                                        floorf@x 0060  
                         ?_eaDogM_WriteCommand 0001                                        memcpy@d 001F  
                                      memcpy@n 001C                                        memcpy@s 0021  
                                      fputc@fp 001C                                        memset@c 001A  
                                      memset@k 0020                                        memset@n 001C  
                                      memset@s 0022            __end_of_UART1_SetTxInterruptHandler 475A  
                  _UART1_SetTxInterruptHandler 474C                                        fputs@fp 0025  
                               display_led@led 001A                 ??_UART1_SetOverrunErrorHandler 001B  
                            ?_send_lcd_cmd_dma 0001                              __end_of_vfpfcnvrt 118A  
                                   efgtoa@mode 00A0                             ??_send_lcd_cmd_dma 0028  
                                   efgtoa@sign 0099                                      _SPI1TCNTL 003D12  
                                      postdec1 003FE5                                        postdec2 003FDD  
                                      postinc0 003FEE                                        postinc1 003FE6  
                                      postinc2 003FDE                                     ??_wdtdelay 001C  
                             ?_ADCC_Initialize 0001                              __end_of_start_lcd 483C  
                                   ??_vfprintf 0033                                 wdtdelay@dcount 00DD  
                            UART1_Write@txData 0018                            _UART1_RxDataHandler 4576  
                                      strcpy@d 0020                                        strlen@a 001A  
                                      strcpy@s 001E                                        strlen@s 0018  
                                    _PORTAbits 003FCA                                      _PORTBbits 003FCB  
                     _TMR6_SetInterruptHandler 4792                 ?_DMA1_SetSCNTIInterruptHandler 0018  
                        _TMR5_InterruptHandler 00E4                                    ___fladd@grs 0027  
          __end_of_ADCC_SetADIInterruptHandler 47D8                    _ADCC_SetADIInterruptHandler 47CA  
                                ___xxtofl@sign 0020                                 ??_wait_lcd_set 0018  
                                    _TRISCbits 003FC4                                    ___fldiv@grs 002B  
                                  ___fldiv@rem 0024                                _DMA1_Initialize 3AE6  
                         ?_UART1_RxDataHandler 0001                               ?_TMR5_WriteTimer 000D  
                        ??_eaDogM_WriteCommand 0029                        TMR5_WriteTimer@timerVal 000D  
                                  ___flmul@grs 0063                 ??_DMA1_DefaultInterruptHandler 0013  
                ??_ADCC_SetADIInterruptHandler 001B                                _SPI1_Initialize 4684  
                            ??_source_dma_done 0013                   __end_of_INTERRUPT_Initialize 3F48  
                                    _Led_Blink 4614                                  ??_display_led 0018  
               ??_ADCC_DefaultInterruptHandler 0001                                 __end_of___flge 2F06  
                               __end_of___fleq 383A                                  __pidataBIGRAM 118A  
                                  vfpfcnvrt@ap 00BB                                    vfpfcnvrt@cp 00C9  
                                  vfpfcnvrt@ct 00D0                                    vfpfcnvrt@fp 00B7  
                               __end_of___wmul 44C0                                 __end_of_efgtoa 09BC  
                               __end_of_floorf 2666                                 __end_of_memcpy 3BF2  
                       ?_OSCILLATOR_Initialize 0001                                     floorf@F526 0130  
                               __end_of_memset 2BB6                      ?_ADCC_GetConversionResult 0001  
                               __end_of_printf 44E8                                 __end_of_strcpy 3AE6  
                               __end_of_strlen 3E2A                            start_initialization 322E  
                              ___lodiv@divisor 0020                     ??_SystemArbiter_Initialize 0018  
                              ___lodiv@counter 0030                           _ringBufS_put_dma_cpy 3C98  
         __end_of_TMR5_DefaultInterruptHandler 484C                   _TMR5_DefaultInterruptHandler 484A  
                                  __end_of_pad 37B0                        ??_UART1_SetErrorHandler 001B  
                                  ?_linux_getc 0019                                    ?_linux_putc 002F  
                         __end_of_send_lcd_cmd 4230                          ??_UART1_RxDataHandler 0015  
                                  putch@txData 0019                                     ivt0x8_base 0008  
                                _uart1RxBuffer 0120                          __end_of___fpclassifyf 316E  
                             ??_ringBufS_flush 0027                                  _uart1TxBuffer 0128  
                                  vfprintf@fmt 00D9                                       ??___flge 0075  
                                     ??___fleq 0020                               ??_PMD_Initialize 0018  
                                _ringBufS_init 45D8                                       ??___wmul 001C  
                                   ?_Led_Blink 0001                                       ??_efgtoa 0080  
                                  __pdataBANK0 00FE                                    __pdataBANK1 01A0  
                                     ??_floorf 0064                                       ??_memcpy 001E  
                                     ??_memset 001E                                   ??_Timers_Isr 000D  
                                   memset@dest 0018                        ringBufS_put_dma_cpy@len 0027  
                      ringBufS_put_dma_cpy@ptr 0025                                       ??_printf 0033  
                                _send_lcd_data 4598                                       ??_strcpy 001C  
                                     ??_strlen 001A                                      ___fladd@a 001C  
                                    ___fladd@b 0018                                      ___fldiv@a 001C  
                                    ___fldiv@b 0018                            __end_of_display_led 345A  
                  PWM5_LoadDutyValue@dutyValue 0018                        __end_of_DMA1_Initialize 3B42  
                                    ___flmul@a 002A                                      ___flmul@b 0026  
                                  __pbssCOMRAM 0033                                      ___flsub@a 0071  
                                    ___flsub@b 006D                          ?_ringBufS_put_dma_cpy 0023  
                           _UART1_ErrorHandler 0140                                  __pcstackBANK0 0060  
                                __pcstackBANK1 01CE                             _PWM6_LoadDutyValue 431A  
                          ringBufS_flush@_this 0024                          eaDogM_WriteString@len 002D  
                      __end_of_SPI1_Initialize 469E                       _UART1_RxInterruptHandler 0037  
                ?_TMR5_DefaultInterruptHandler 0001                                       ?_Adc_Isr 0001  
                          ?_PWM6_LoadDutyValue 0018                                   _init_display 316E  
                               linux_putc@data 002F                   ?_UART1_SetRxInterruptHandler 0018  
                           __end_of_Timers_Isr 3D8E                          _TMR6_InterruptHandler 00EA  
                                  _efgtoa$3853 0087                                    _efgtoa$3845 0085  
                                  _efgtoa$3854 0089                         _PIN_MANAGER_Initialize 2FD4  
                                cli_init@a_ctx 002F                                 ?_ringBufS_init 0024  
                            ?_UART1_Initialize 0001                           __end_of_wait_lcd_set 4826  
         __end_of_UART1_SetFramingErrorHandler 4784                   _UART1_SetFramingErrorHandler 4776  
                                __pmediumconst FED6                                  cli_read@a_ctx 006A  
                                     ?___fladd 0018                            UART1_Read@readValue 0018  
                                     ?___fldiv 0018                                       ?___awdiv 0018  
                                    __ptext100 4826                                      __ptext101 3E74  
                                    __ptext110 46E4                                      __ptext102 3672  
                                     ?___flneg 0018                                      __ptext111 42E0  
                                    __ptext103 483E                                      __ptext120 3D3C  
                                    __ptext112 450C                                      __ptext104 4840  
                                    __ptext121 4530                                      __ptext113 4614  
                                    __ptext105 482C                                      __ptext122 3FD0  
                                    __ptext114 4844                                      __ptext106 4576  
                                    __ptext123 484C                                      __ptext115 4848  
                                    __ptext107 3F8C                                      __ptext124 4832  
                                    __ptext116 40CC                                      __ptext108 4842  
                                    __ptext125 0000                                      __ptext117 4468  
                                    __ptext109 42A4                                      __ptext118 3D90  
                                    __ptext119 484A                                       ?___awmod 0018  
                                     ?___flmul 0026                                       ?___flsub 006D  
                                     ?___fltol 0018                                       ?___lodiv 0018  
                                     ?___lomod 0018                             ??_UART1_Initialize 001B  
                             _uart1RxLastError 0042                                  ??_UART1_Write 0018  
                                _cli_read$2759 006F                           ??_PWM6_LoadDutyValue 001A  
                                     _DAC1CON0 003E9E                                       _DAC1CON1 003E9C  
                               ?_send_lcd_data 0001                                      _disp_tick 00FD  
                                     _ADCC_ISR 3F8C                                ___lomod@divisor 0020  
                              ___lomod@counter 0028       __end_of_UART1_DefaultOverrunErrorHandler 4840  
           ??_UART1_DefaultOverrunErrorHandler 0015              ?_UART1_DefaultOverrunErrorHandler 0001  
             _UART1_DefaultOverrunErrorHandler 483E                                       ?_isdigit 0018  
                                     _DMA1CON0 003BFC                                       _DMA1CON1 003BFD  
                                     _DMA1AIRQ 003BFE                                       _DMA1DPTR 003BEC  
                                     _DMA1SIRQ 003BFF                                       _DMA1SPTR 003BF4  
                                     ?_isspace 0018                                       ?_isupper 0018  
                                     ?_sprintf 01D0                                       ?_tolower 001E  
                                     _T2CLKCON 003FAE                              _DMA1_DMASCNTI_ISR 3FD0  
                                     ?_strncmp 001C                                    _U1ERRIRbits 003DF9  
                            ringBufS_put_dma@c 001A                           _INTERRUPT_Initialize 3F02  
                                     _T6CLKCON 003F96                           __cli_interpret_cmd@i 0069  
                           ?_DMA1_DMASCNTI_ISR 0001                                 ___wmul@product 001C  
                                     _LATAbits 003FBA          UART1_SetErrorHandler@interruptHandler 0018  
                                     _LATCbits 003FBC                                       _LATDbits 003FBD  
                                     _LATEbits 003FBE                                      _scmd_init 46CE  
                                     _LATFbits 003FBF                                       _IPR1bits 003981  
                                     _IPR2bits 003982                                       _IPR3bits 003983  
                                     _PIE1bits 003991                                       _PIE2bits 003992  
                                     _PIE3bits 003993                                      _tickCount 010C  
                                     _IPR8bits 003988                                       _IPR9bits 003989  
                                     _PIE8bits 003998                                       _PIE9bits 003999  
                                 _SPI1CON0bits 003D14                                       _IVTBASEH 003FD6  
                                     _IVTBASEL 003FD5                                       _IVTBASEU 003FD7  
                                    cli_read@i 0071                  ??_UART1_SetRxInterruptHandler 001B  
                                     i1u630_28 36CC                                       i1u630_29 36E0  
                                     i1u632_28 36F6                                      _ring_buf1 0283  
                                     i1u628_28 369C                                       i1u628_29 36B2  
                                     _PIR1bits 0039A1                                       _PIR2bits 0039A2  
                                     i1u659_28 3E94                                       i1u659_29 3EA8  
                                     _SPI1BAUD 003D19                            ??_DMA1_DMASCNTI_ISR 0013  
                                     i2u613_40 461C                                       i2u613_46 461E  
                                    _puts$4036 002E                                       _PIR4bits 0039A4  
                                     _SPI1CON0 003D14                                       _SPI1CON1 003D15  
                                     _SPI1CON2 003D16                                       i2u624_48 451C  
                                     i2u642_40 3D8C                                       i2u661_48 3DBC  
                                     i2u661_49 3DD0                                       i2u655_40 4300  
                                     i2u654_48 3FAC                                       i2u654_49 3FC0  
                                     _PIR8bits 0039A8                                       i2u663_48 3FF0  
                                     i2u663_49 4004                         send_lcd_cmd_dma@strPtr 0028  
                                     _PIR9bits 0039A9                                       i2u657_48 40E8  
                                     i2u657_49 40FC                     ??_TMR6_SetInterruptHandler 001B  
                                  ??_Led_Blink 0008                     __end_of_UART1_Transmit_ISR 4496  
                                     _TMR5_ISR 3D90                                       _TMR6_ISR 42E0  
                ?_UART1_SetFramingErrorHandler 0018                                    _display_led 33A2  
                                    _port_data 03FF                                      _vfpfcnvrt 09BC  
                                 _SPI1INTFbits 003D1A                              ___wmul@multiplier 0018  
                                    _static_ps 00FE                                      _start_lcd 4838  
                       ??_ringBufS_put_dma_cpy 0028                                  _TMR6_CallBack 450C  
             __end_of_SystemArbiter_Initialize 47BC                               ?_DMA1_Initialize 0001  
                    ?_TMR5_SetInterruptHandler 0018                            __end_of_UART1_Write 4182  
                    __end_of_DMA1_DMASCNTI_ISR 4012                                   _isspace$3957 001E  
                                   vfpfcnvrt@c 00CF                                     vfpfcnvrt@f 00D3  
                             ?_SPI1_Initialize 0001                                    _INTCON0bits 003FD2  
                                    copy_data0 3242                                      copy_data1 3268  
                        ?_INTERRUPT_Initialize 0001                              ??_DAC1_Initialize 0018  
                       _uart1TxBufferRemaining 0046                                _source_dma_done 4832  
                            ??_TMR2_Initialize 0018                 ??_TMR5_DefaultInterruptHandler 000D  
                                   ?_scmd_init 0001                                   _uart1RxCount 0043  
                              ??_ringBufS_init 0026                                       __Hrparam 0000  
             __end_of_ADCC_GetConversionResult 46FA                                      memcpy@tmp 001E  
                                   vfprintf@ap 00DB                                       __Lrparam 0000  
                                   vfprintf@fp 00D7                                  _wait_lcd_done 4722  
                              ??_send_lcd_data 001C                        ??_OSCILLATOR_Initialize 0018  
                                 _send_lcd_cmd 41F6                                     ?_vfpfcnvrt 00B7  
                                     _adc_chan 0041                              ??_PWM5_Initialize 0018  
                                     _adc_tick 00FC                                 ?_TMR6_CallBack 0001  
                                   ?_start_lcd 0001                             ___fpclassifyf@F465 0134  
                                   sprintf@fmt 01D2                                       ___xxtofl 2CF6  
                  __end_of_eaDogM_WriteCommand 47EE                                       __pivt0x8 0008  
                                     _cli_init 3F48                                       _cli_read 27C8  
                                     __ptext10 291A                                       __ptext11 0000  
                                     __ptext20 18DC                                       __ptext12 4182  
                                     __ptext21 440C                                       __ptext13 437E  
                                     __ptext30 43AE                                       __ptext22 158A  
                                     __ptext14 3A86                                       __ptext31 4496  
                                     __ptext23 2E36                                       __ptext15 3712  
                                     __ptext40 3C98                                       __ptext32 316E  
                                     __ptext24 37B0                                       __ptext16 24BC  
                                     __ptext41 3B9C                                       __ptext33 4598  
                                     __ptext25 1EC4                                       __ptext17 30A2  
                                     __ptext50 33A2                                       __ptext42 47E4  
                                     __ptext34 41BC                                       __ptext26 39AE  
                                     __ptext18 32E8                                       __ptext51 27C8  
                                     __ptext43 4632                                       __ptext35 41F6  
                                     __ptext27 383A                                       __ptext19 3EBC  
                                     __ptext60 47EE                                       __ptext52 2A6A  
                                     __ptext44 4722                                       __ptext36 4230  
                                     __ptext28 2BB6                                       __ptext61 47F8  
                                     __ptext53 4730                                       __ptext45 410A  
                                     __ptext37 466A                                       __ptext29 4012  
                                     __ptext70 4146                                       __ptext62 46FA  
                                     __ptext54 44E8                                       __ptext46 4820  
                                     __ptext38 45D8                                       __ptext71 2CF6  
                                     __ptext63 470E                                       __ptext55 473E  
                                     __ptext47 4838                                       __ptext39 38BE  
                                     __ptext80 4792                                       __ptext72 408E  
                                     __ptext64 45B8                                       __ptext56 4050  
                                     __ptext48 3CEA                                       __ptext81 3E2A  
                                     __ptext73 345A                                       __ptext65 4802  
                                     __ptext57 214C                                       __ptext49 3BF2  
                                     __ptext90 464E                                       __ptext82 47A0  
                                     __ptext74 474C                                       __ptext66 426A  
                                     __ptext58 2666                                       __ptext91 3F02  
                                     __ptext83 45F6                                       __ptext75 475A  
                                     __ptext67 3A1E                                       __ptext59 3DDE  
                                     __ptext92 3AE6                                       __ptext84 47AE  
                                     __ptext76 4768                                       __ptext68 3510  
                                     __ptext93 47BC                                       __ptext85 4684  
                                     __ptext77 4776                                       __ptext69 480C  
                                     __ptext94 47D8                                       __ptext86 469E  
                                     __ptext78 4784                                       __ptext95 393C  
                                     __ptext87 46B6                                       __ptext79 443A  
                                     __ptext96 47CA                                       __ptext88 4554  
                                     __ptext97 431A                                       __ptext89 2FD4  
                                     __ptext98 434C                                       __ptext99 4816  
                                 ??_linux_getc 001A                                   ??_linux_putc 0032  
                __end_of_UART1_SetErrorHandler 4792                                     strcpy@dest 0018  
                             _ringBufS_put_dma 3CEA                         __cli_interpret_cmd@ret 0068  
                            ??_PWM6_Initialize 0018                                    _IVTLOCKbits 003FD4  
                                     efgtoa@fp 0079                                       efgtoa@ne 008F  
                                     efgtoa@pp 008D                                       efgtoa@ou 0093  
                    _UART1_OverrunErrorHandler 0143                      _ADCC_ADI_InterruptHandler 00ED  
                                    stoa@F1164 01A0   UART1_SetOverrunErrorHandler@interruptHandler 0018  
                               ?_wait_lcd_done 0001                                       isa$xinst 000000  
                                     _spi_link 0100                                       _roll_max 00FF  
                   ?_UART1_DefaultErrorHandler 0001                                    fh_pd@a_data 002F  
                                     _wdtdelay 4230                                       _vfprintf 3B42  
                                    printf@fmt 01D0                             __end_of_linux_getc 450C  
                            _UART1_is_rx_ready 473E                             __end_of_linux_putc 473E  
                                  _UART1_Write 4146                     __end_of__cli_interpret_cmd 230C  
         __end_of_DMA1_DefaultInterruptHandler 484E                   _DMA1_DefaultInterruptHandler 484C  
                            ??_TMR5_Initialize 001B                             ?_UART1_is_rx_ready 0001  
                                ??_Default_ISR 000B                                    fh_pl@a_data 002F  
               ??_UART1_SetFramingErrorHandler 001B                    __end_of_UART1_RxDataHandler 4598  
                               _vfpfcnvrt$3892 00CD                                    _uart1RxHead 0045  
                                  _uart1TxHead 0048                                    _uart1RxTail 0044  
                                  fh_po@a_data 002F                                    _uart1TxTail 0047  
                                     memcpy@d1 0018                                       memcpy@s1 001A  
                      __end_of_source_dma_done 4838                                       isdigit@c 0018  
                       ??_INTERRUPT_Initialize 0018                                    fh_pr@a_data 002F  
                                 _wait_lcd_set 4820                            ??_UART1_is_rx_ready 0018  
                                  fh_ps@a_data 002F           __end_of_TMR6_DefaultInterruptHandler 4846  
                 _TMR6_DefaultInterruptHandler 4844                                    fh_pu@a_data 002F  
                            _send_lcd_data_dma 410A           __end_of_ADCC_DefaultInterruptHandler 4844  
                 _ADCC_DefaultInterruptHandler 4842                                       intlevel1 0000  
                                     intlevel2 0000                                      sprintf@ap 01D8  
                            _send_lcd_cmd_long 41BC                             ?_send_lcd_data_dma 0001  
                                     isspace@c 0018                        ?_PIN_MANAGER_Initialize 0001  
                            ??_TMR6_Initialize 001B                                    ??_scmd_init 0033  
                           ?_send_lcd_cmd_long 0001                                      strcpy@src 001A  
                   __end_of_eaDogM_WriteString 393C                                       isupper@c 0018  
                                    strncmp@_l 001C                                      strncmp@_r 001E  
                    ?_SystemArbiter_Initialize 0001                            _uart1RxStatusBuffer 0118  
                          ??_send_lcd_data_dma 0027                                    efgtoa@nmode 009D  
                                   _SPI1SDIPPS 003ADF                                     _SPI1SCKPPS 003ADE  
                          ??_send_lcd_cmd_long 001C                                       printf@ap 01E2  
                    __end_of_UART1_is_rx_ready 474C                         eaDogM_WriteCommand@cmd 0029  
                                   _UART1_Read 4050   UART1_SetFramingErrorHandler@interruptHandler 0018  
                     _ADCC_GetConversionResult 46E4              __end_of_UART1_DefaultErrorHandler 4832  
                                  ??_vfpfcnvrt 00BD                                       stoa@nuls 0060  
                              ??_TMR6_CallBack 0009                                    ??_start_lcd 0018  
                                     sprintf@f 01DA                                       tolower@c 001E  
                                     sprintf@s 01D0                               _send_lcd_cmd_dma 4632  
                                   _PRLOCKbits 0039EF                  ?_DMA1_DefaultInterruptHandler 0001  
                                     strncmp@l 0024                                       strncmp@n 0020  
                                     strncmp@r 0026                    PWM6_LoadDutyValue@dutyValue 0018  
                    __end_of_send_lcd_data_dma 4146                       _UART1_TxInterruptHandler 00F0  
                    __end_of_send_lcd_cmd_long 41F6                                  ___fladd@signs 0024  
                          __end_of_Default_ISR 484A                 __end_of_PIN_MANAGER_Initialize 30A2  
                            ??_ADCC_Initialize 001B                                 _DAC1_GetOutput 4826  
                ?_TMR6_DefaultInterruptHandler 0001                                   ___fladd@aexp 0025  
                                 ___fladd@bexp 0026                  ?_ADCC_DefaultInterruptHandler 0001  
                 ?_UART1_SetTxInterruptHandler 0018                                ??_wait_lcd_done 0018  
                   __end_of_spi1_configuration FEDC  
