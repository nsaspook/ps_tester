

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Mar  9 08:36:22 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=3
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=3
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=3
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=3
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=3
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=4,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	text76,global,reloc=4,class=CODE,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1
    99                           	psect	text80,global,reloc=4,class=CODE,delta=1
   100                           	psect	text81,global,reloc=4,class=CODE,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1
   102                           	psect	text83,global,reloc=4,class=CODE,delta=1
   103                           	psect	text84,global,reloc=2,class=CODE,delta=1
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1
   105                           	psect	text86,global,reloc=2,class=CODE,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,delta=1
   108                           	psect	text89,global,reloc=4,class=CODE,delta=1
   109                           	psect	text90,global,reloc=2,class=CODE,delta=1
   110                           	psect	text91,global,reloc=2,class=CODE,delta=1
   111                           	psect	text92,global,reloc=2,class=CODE,delta=1
   112                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   113                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1
   115                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   116                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   117                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   118  0000                     
   119                           ; Version 2.40
   120                           ; Generated 17/11/2021 GMT
   121                           ; 
   122                           ; Copyright © 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   123                           ; All rights reserved.
   124                           ; 
   125                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   126                           ; 
   127                           ; Redistribution and use in source and binary forms, with or without modification, are
   128                           ; permitted provided that the following conditions are met:
   129                           ; 
   130                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   131                           ;        conditions and the following disclaimer.
   132                           ; 
   133                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   134                           ;        of conditions and the following disclaimer in the documentation and/or other
   135                           ;        materials provided with the distribution. Publication is not required when
   136                           ;        this file is used in an embedded application.
   137                           ; 
   138                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   139                           ;        software without specific prior written permission.
   140                           ; 
   141                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   142                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   143                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   144                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   145                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   146                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   147                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   148                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   149                           ; 
   150                           ; 
   151                           ; Code-generator required, PIC18F57K42 Definitions
   152                           ; 
   153                           ; SFR Addresses
   154  0000                     
   155                           	psect	idataBANK0
   156  005D44                     __pidataBANK0:
   157                           	callstack 0
   158                           
   159                           ;initializer for _mode
   160  005D44  01                 	db	1
   161                           
   162                           ;initializer for _build_time
   163  005D45  A1                 	db	low STR_2
   164                           
   165                           ;initializer for _build_date
   166  005D46  81                 	db	low STR_1
   167                           
   168                           	psect	idataBANK1
   169  005C2C                     __pidataBANK1:
   170                           	callstack 0
   171                           
   172                           ;initializer for stoa@F1164
   173  005C2C  28                 	db	40
   174  005C2D  6E                 	db	110
   175  005C2E  75                 	db	117
   176  005C2F  6C                 	db	108
   177  005C30  6C                 	db	108
   178  005C31  29                 	db	41
   179  005C32  00                 	db	0
   180                           
   181                           ;initializer for _g_cmds
   182  005C33  C7                 	db	low STR_6
   183  005C34  9A                 	db	low _fh_hw
   184  005C35  5C                 	db	high _fh_hw
   185  005C36  00                 	db	low (_fh_hw shr (0+16))
   186  005C37  C1                 	db	low STR_7
   187  005C38  6C                 	db	low _fh_hi
   188  005C39  5C                 	db	high _fh_hi
   189  005C3A  00                 	db	low (_fh_hi shr (0+16))
   190  005C3B  C4                 	db	low STR_8
   191  005C3C  5A                 	db	low _fh_ho
   192  005C3D  5C                 	db	high _fh_ho
   193  005C3E  00                 	db	low (_fh_ho shr (0+16))
   194  005C3F  00                 	db	0
   195  005C40  00                 	db	0
   196  005C41  00                 	db	0
   197  005C42  00                 	db	0
   198                           
   199                           	psect	smallconst
   200  002000                     __psmallconst:
   201                           	callstack 0
   202  002000  00                 	db	0
   203  002001  02                 	db	2
   204  002002  40                 	db	64
   205  002003  00                 	db	0
   206  002004  08                 	db	8
   207  002005  00                 	db	0
   208  002006                     __end_of_spi1_configuration:
   209                           	callstack 0
   210  002006                     _cmdm:
   211                           	callstack 0
   212  002006  0D                 	db	13
   213  002007  0A                 	db	10
   214  002008  20                 	db	32
   215  002009  43                 	db	67
   216  00200A  6F                 	db	111
   217  00200B  6D                 	db	109
   218  00200C  6D                 	db	109
   219  00200D  61                 	db	97
   220  00200E  6E                 	db	110
   221  00200F  64                 	db	100
   222  002010  20                 	db	32
   223  002011  70                 	db	112
   224  002012  72                 	db	114
   225  002013  6F                 	db	111
   226  002014  63                 	db	99
   227  002015  65                 	db	101
   228  002016  73                 	db	115
   229  002017  73                 	db	115
   230  002018  6F                 	db	111
   231  002019  72                 	db	114
   232  00201A  20                 	db	32
   233  00201B  56                 	db	86
   234  00201C  30                 	db	48
   235  00201D  2E                 	db	46
   236  00201E  31                 	db	49
   237  00201F  0D                 	db	13
   238  002020  0A                 	db	10
   239  002021  00                 	db	0
   240  002022                     __end_of_cmdm:
   241                           	callstack 0
   242  0000                     _T5CON	set	16282
   243  0000                     _TMR5L	set	16280
   244  0000                     _TMR5H	set	16281
   245  0000                     _T5GCON	set	16283
   246  0000                     _IVTBASEL	set	16341
   247  0000                     _IVTBASEH	set	16342
   248  0000                     _IVTBASEU	set	16343
   249  0000                     _T6CON	set	16276
   250  0000                     _T6RST	set	16279
   251  0000                     _ADERRL	set	16098
   252  0000                     _ADERRH	set	16099
   253  0000                     _ADPREVL	set	16109
   254  0000                     _ADPREVH	set	16110
   255  0000                     _ADFLTRL	set	16102
   256  0000                     _ADFLTRH	set	16103
   257  0000                     _ADACCL	set	16104
   258  0000                     _ADACCH	set	16105
   259  0000                     _ADCNT	set	16107
   260  0000                     _ADRESL	set	16111
   261  0000                     _ADRESH	set	16112
   262  0000                     _ADCON0	set	16120
   263  0000                     _ADCON1	set	16121
   264  0000                     _ADPREH	set	16119
   265  0000                     _ADPREL	set	16118
   266  0000                     _ADCAP	set	16117
   267  0000                     _ADACQH	set	16116
   268  0000                     _ADPCH	set	16113
   269  0000                     _ADRPT	set	16108
   270  0000                     _ADACCU	set	16106
   271  0000                     _ADSTPTH	set	16101
   272  0000                     _ADSTPTL	set	16100
   273  0000                     _ADUTHH	set	16097
   274  0000                     _ADUTHL	set	16096
   275  0000                     _ADLTHH	set	16095
   276  0000                     _OSCTUNE	set	14814
   277  0000                     _OSCFRQ	set	14815
   278  0000                     _OSCEN	set	14813
   279  0000                     _TRISD	set	16325
   280  0000                     _TRISC	set	16324
   281  0000                     _TRISB	set	16323
   282  0000                     _LATC	set	16316
   283  0000                     _LATB	set	16315
   284  0000                     _PLLR	set	118496
   285  0000                     _U1ERRIRbits	set	15865
   286  0000                     _LATFbits	set	16319
   287  0000                     _LATAbits	set	16314
   288  0000                     _LATDbits	set	16317
   289  0000                     _LATEbits	set	16318
   290  0000                     _TRISCbits	set	16324
   291  0000                     _T5CONbits	set	16282
   292  0000                     _IVTLOCKbits	set	16340
   293  0000                     _GIE	set	130711
   294  0000                     _IPR1bits	set	14721
   295  0000                     _IPR3bits	set	14723
   296  0000                     _PIE1bits	set	14737
   297  0000                     _PIR1bits	set	14753
   298  0000                     _PMD0	set	14784
   299  0000                     _OSCCON1	set	14809
   300  0000                     _RC3PPS	set	14867
   301  0000                     _ANSELA	set	14912
   302  0000                     _ANSELB	set	14928
   303  0000                     _ANSELC	set	14944
   304  0000                     _ANSELD	set	14960
   305  0000                     _LATA	set	16314
   306  0000                     _LATD	set	16317
   307  0000                     _LATE	set	16318
   308  0000                     _TRISA	set	16322
   309  0000                     _TRISE	set	16326
   310  0000                     _LATF	set	16319
   311  0000                     _PORTAbits	set	16330
   312  0000                     _INTCON0bits	set	16338
   313  0000                     _TRISF	set	16327
   314  0000                     _INLVLD	set	14964
   315  0000                     _SLRCOND	set	14963
   316  0000                     _ODCOND	set	14962
   317  0000                     _RD0I2C	set	14970
   318  0000                     _WPUD	set	14961
   319  0000                     _ANSELE	set	14976
   320  0000                     _INLVLC	set	14948
   321  0000                     _SLRCONC	set	14947
   322  0000                     _ODCONC	set	14946
   323  0000                     _RC3I2C	set	14954
   324  0000                     _WPUC	set	14945
   325  0000                     _INLVLB	set	14932
   326  0000                     _SLRCONB	set	14931
   327  0000                     _ODCONB	set	14930
   328  0000                     _RB1I2C	set	14938
   329  0000                     _WPUB	set	14929
   330  0000                     _INLVLE	set	14980
   331  0000                     _SLRCONE	set	14979
   332  0000                     _ODCONE	set	14978
   333  0000                     _WPUE	set	14977
   334  0000                     _ANSELF	set	14992
   335  0000                     _SPI1SCKPPS	set	15070
   336  0000                     _INLVLF	set	14996
   337  0000                     _SLRCONF	set	14995
   338  0000                     _ODCONF	set	14994
   339  0000                     _WPUF	set	14993
   340  0000                     _INLVLA	set	14916
   341  0000                     _SLRCONA	set	14915
   342  0000                     _ODCONA	set	14914
   343  0000                     _WPUA	set	14913
   344  0000                     _RB2I2C	set	14939
   345  0000                     _RC4I2C	set	14955
   346  0000                     _RD1I2C	set	14971
   347  0000                     _SPI1SDIPPS	set	15071
   348  0000                     _U1RXPPS	set	15077
   349  0000                     _RC5PPS	set	14869
   350  0000                     _RC6PPS	set	14870
   351  0000                     _SPI1RXB	set	15632
   352  0000                     _SPI1TXB	set	15633
   353  0000                     _SPI1TCNTL	set	15634
   354  0000                     _SPI1CON0	set	15636
   355  0000                     _U1RXB	set	15848
   356  0000                     _U1TXB	set	15850
   357  0000                     _U1P1L	set	15852
   358  0000                     _DAC1CON1	set	16028
   359  0000                     _DAC1CON0	set	16030
   360  0000                     _ADLTHL	set	16094
   361  0000                     _OSCCON3	set	14811
   362  0000                     _PMD7	set	14791
   363  0000                     _PMD6	set	14790
   364  0000                     _PMD5	set	14789
   365  0000                     _PMD4	set	14788
   366  0000                     _PMD3	set	14787
   367  0000                     _PMD2	set	14786
   368  0000                     _PMD1	set	14785
   369  0000                     _ADACQL	set	16115
   370  0000                     _T6TMR	set	16274
   371  0000                     _T6PR	set	16275
   372  0000                     _T6HLT	set	16277
   373  0000                     _T6CLKCON	set	16278
   374  0000                     _ADCLK	set	16127
   375  0000                     _ADACT	set	16126
   376  0000                     _ADREF	set	16125
   377  0000                     _ADSTAT	set	16124
   378  0000                     _ADCON3	set	16123
   379  0000                     _ADCON2	set	16122
   380  0000                     _PIR2bits	set	14754
   381  0000                     _PIR8bits	set	14760
   382  0000                     _PIR9bits	set	14761
   383  0000                     _PIE3bits	set	14739
   384  0000                     _PIE9bits	set	14745
   385  0000                     _IVTLOCK	set	16340
   386  0000                     _IPR8bits	set	14728
   387  0000                     _IPR9bits	set	14729
   388  0000                     _PIE8bits	set	14744
   389  0000                     _U1ERRIE	set	15866
   390  0000                     _U1ERRIR	set	15865
   391  0000                     _U1UIR	set	15864
   392  0000                     _U1FIFO	set	15863
   393  0000                     _U1BRGH	set	15862
   394  0000                     _U1BRGL	set	15861
   395  0000                     _U1CON2	set	15860
   396  0000                     _U1CON1	set	15859
   397  0000                     _U1CON0	set	15858
   398  0000                     _U1P3H	set	15857
   399  0000                     _U1P3L	set	15856
   400  0000                     _U1P2H	set	15855
   401  0000                     _U1P2L	set	15854
   402  0000                     _U1P1H	set	15853
   403  0000                     _T5CLK	set	16285
   404  0000                     _T5GATE	set	16284
   405  0000                     _SPI1BAUD	set	15641
   406  0000                     _SPI1CLK	set	15644
   407  0000                     _SPI1CON2	set	15638
   408  0000                     _SPI1CON1	set	15637
   409  0000                     _PORTBbits	set	16331
   410  002022                     STR_5:
   411                           
   412                           ; BSR set to: 0
   413  002022  20                 	db	32
   414  002023  50                 	db	80	;'P'
   415  002024  53                 	db	83	;'S'
   416  002025  20                 	db	32
   417  002026  54                 	db	84	;'T'
   418  002027  65                 	db	101	;'e'
   419  002028  73                 	db	115	;'s'
   420  002029  74                 	db	116	;'t'
   421  00202A  20                 	db	32
   422  00202B  25                 	db	37
   423  00202C  31                 	db	49	;'1'
   424  00202D  75                 	db	117	;'u'
   425  00202E  3A                 	db	58	;':'
   426  00202F  20                 	db	32
   427  002030  44                 	db	68	;'D'
   428  002031  41                 	db	65	;'A'
   429  002032  43                 	db	67	;'C'
   430  002033  20                 	db	32
   431  002034  4F                 	db	79	;'O'
   432  002035  55                 	db	85	;'U'
   433  002036  54                 	db	84	;'T'
   434  002037  3D                 	db	61	;'='
   435  002038  25                 	db	37
   436  002039  32                 	db	50	;'2'
   437  00203A  75                 	db	117	;'u'
   438  00203B  2C                 	db	44
   439  00203C  20                 	db	32
   440  00203D  53                 	db	83	;'S'
   441  00203E  75                 	db	117	;'u'
   442  00203F  70                 	db	112	;'p'
   443  002040  70                 	db	112	;'p'
   444  002041  6C                 	db	108	;'l'
   445  002042  79                 	db	121	;'y'
   446  002043  20                 	db	32
   447  002044  52                 	db	82	;'R'
   448  002045  65                 	db	101	;'e'
   449  002046  61                 	db	97	;'a'
   450  002047  64                 	db	100	;'d'
   451  002048  42                 	db	66	;'B'
   452  002049  61                 	db	97	;'a'
   453  00204A  63                 	db	99	;'c'
   454  00204B  6B                 	db	107	;'k'
   455  00204C  20                 	db	32
   456  00204D  25                 	db	37
   457  00204E  34                 	db	52	;'4'
   458  00204F  75                 	db	117	;'u'
   459  002050  20                 	db	32
   460  002051  56                 	db	86	;'V'
   461  002052  3D                 	db	61	;'='
   462  002053  25                 	db	37
   463  002054  2B                 	db	43
   464  002055  35                 	db	53	;'5'
   465  002056  2E                 	db	46
   466  002057  31                 	db	49	;'1'
   467  002058  66                 	db	102	;'f'
   468  002059  56                 	db	86	;'V'
   469  00205A  20                 	db	32
   470  00205B  25                 	db	37
   471  00205C  34                 	db	52	;'4'
   472  00205D  75                 	db	117	;'u'
   473  00205E  20                 	db	32
   474  00205F  49                 	db	73	;'I'
   475  002060  3D                 	db	61	;'='
   476  002061  25                 	db	37
   477  002062  2B                 	db	43
   478  002063  33                 	db	51	;'3'
   479  002064  2E                 	db	46
   480  002065  31                 	db	49	;'1'
   481  002066  66                 	db	102	;'f'
   482  002067  6D                 	db	109	;'m'
   483  002068  41                 	db	65	;'A'
   484  002069  0D                 	db	13
   485  00206A  0A                 	db	10
   486  00206B  00                 	db	0
   487  00206C                     STR_9:
   488                           
   489                           ; BSR set to: 0
   490  00206C  0D                 	db	13
   491  00206D  0A                 	db	10
   492  00206E  20                 	db	32
   493  00206F  50                 	db	80	;'P'
   494  002070  73                 	db	115	;'s'
   495  002071  20                 	db	32
   496  002072  54                 	db	84	;'T'
   497  002073  65                 	db	101	;'e'
   498  002074  73                 	db	115	;'s'
   499  002075  74                 	db	116	;'t'
   500  002076  65                 	db	101	;'e'
   501  002077  72                 	db	114	;'r'
   502  002078  20                 	db	32
   503  002079  25                 	db	37
   504  00207A  73                 	db	115	;'s'
   505  00207B  20                 	db	32
   506  00207C  25                 	db	37
   507  00207D  73                 	db	115	;'s'
   508  00207E  0D                 	db	13
   509  00207F  0A                 	db	10
   510  002080  00                 	db	0
   511  002081                     STR_1:
   512                           
   513                           ; BSR set to: 0
   514  002081  4D                 	db	77	;'M'
   515  002082  61                 	db	97	;'a'
   516  002083  72                 	db	114	;'r'
   517  002084  20                 	db	32
   518  002085  20                 	db	32
   519  002086  39                 	db	57	;'9'
   520  002087  20                 	db	32
   521  002088  32                 	db	50	;'2'
   522  002089  30                 	db	48	;'0'
   523  00208A  32                 	db	50	;'2'
   524  00208B  32                 	db	50	;'2'
   525  00208C  00                 	db	0
   526  00208D                     STR_3:
   527                           
   528                           ; BSR set to: 0
   529  00208D  20                 	db	32
   530  00208E  68                 	db	104	;'h'
   531  00208F  69                 	db	105	;'i'
   532  002090  20                 	db	32
   533  002091  20                 	db	32
   534  002092  20                 	db	32
   535  002093  20                 	db	32
   536  002094  20                 	db	32
   537  002095  20                 	db	32
   538  002096  00                 	db	0
   539  002097                     STR_4:
   540                           
   541                           ; BSR set to: 0
   542  002097  20                 	db	32
   543  002098  68                 	db	104	;'h'
   544  002099  6F                 	db	111	;'o'
   545  00209A  20                 	db	32
   546  00209B  20                 	db	32
   547  00209C  20                 	db	32
   548  00209D  20                 	db	32
   549  00209E  20                 	db	32
   550  00209F  20                 	db	32
   551  0020A0  00                 	db	0
   552  0020A1                     STR_2:
   553                           
   554                           ; BSR set to: 0
   555  0020A1  30                 	db	48	;'0'
   556  0020A2  38                 	db	56	;'8'
   557  0020A3  3A                 	db	58	;':'
   558  0020A4  33                 	db	51	;'3'
   559  0020A5  36                 	db	54	;'6'
   560  0020A6  3A                 	db	58	;':'
   561  0020A7  31                 	db	49	;'1'
   562  0020A8  34                 	db	52	;'4'
   563  0020A9  00                 	db	0
   564  0020AA                     STR_11:
   565                           
   566                           ; BSR set to: 0
   567  0020AA  49                 	db	73	;'I'
   568  0020AB  4E                 	db	78	;'N'
   569  0020AC  46                 	db	70	;'F'
   570  0020AD  00                 	db	0
   571  0020AE                     STR_15:
   572                           
   573                           ; BSR set to: 0
   574  0020AE  4E                 	db	78	;'N'
   575  0020AF  41                 	db	65	;'A'
   576  0020B0  4E                 	db	78	;'N'
   577  0020B1  00                 	db	0
   578  0020B2                     STR_12:
   579                           
   580                           ; BSR set to: 0
   581  0020B2  69                 	db	105	;'i'
   582  0020B3  6E                 	db	110	;'n'
   583  0020B4  66                 	db	102	;'f'
   584  0020B5  00                 	db	0
   585  0020B6                     STR_16:
   586                           
   587                           ; BSR set to: 0
   588  0020B6  6E                 	db	110	;'n'
   589  0020B7  61                 	db	97	;'a'
   590  0020B8  6E                 	db	110	;'n'
   591  0020B9  00                 	db	0
   592  0020BA                     STR_24:
   593                           
   594                           ; BSR set to: 0
   595  0020BA  6C                 	db	108	;'l'
   596  0020BB  6C                 	db	108	;'l'
   597  0020BC  73                 	db	115	;'s'
   598  0020BD  00                 	db	0
   599  0020BE                     STR_19:
   600                           
   601                           ; BSR set to: 0
   602  0020BE  6C                 	db	108	;'l'
   603  0020BF  66                 	db	102	;'f'
   604  0020C0  00                 	db	0
   605  0020C1                     STR_7:
   606                           
   607                           ; BSR set to: 0
   608  0020C1  68                 	db	104	;'h'
   609  0020C2  69                 	db	105	;'i'
   610  0020C3  00                 	db	0
   611  0020C4                     STR_8:
   612                           
   613                           ; BSR set to: 0
   614  0020C4  68                 	db	104	;'h'
   615  0020C5  6F                 	db	111	;'o'
   616  0020C6  00                 	db	0
   617  0020C7                     STR_6:
   618                           
   619                           ; BSR set to: 0
   620  0020C7  68                 	db	104	;'h'
   621  0020C8  77                 	db	119	;'w'
   622  0020C9  00                 	db	0
   623  0020CA  00                 	db	0	; dummy byte at the end
   624  0000                     
   625                           ; #config settings
   626                           
   627                           	psect	cinit
   628  005084                     __pcinit:
   629                           	callstack 0
   630  005084                     start_initialization:
   631                           	callstack 0
   632  005084                     __initialization:
   633                           	callstack 0
   634                           
   635                           ; Initialize objects allocated to BANK1 (23 bytes)
   636                           ; load TBLPTR registers with __pidataBANK1
   637  005084  0E2C               	movlw	low __pidataBANK1
   638  005086  6EF6               	movwf	tblptrl,c
   639  005088  0E5C               	movlw	high __pidataBANK1
   640  00508A  6EF7               	movwf	tblptrh,c
   641  00508C  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   642  00508E  6EF8               	movwf	tblptru,c
   643  005090  EE00  F1E8         	lfsr	0,__pdataBANK1
   644  005094  EE10 F017          	lfsr	1,23
   645  005098                     copy_data0:
   646  005098  0009               	tblrd		*+
   647  00509A  006F FFD7 FFEE     	movff	tablat,postinc0
   648  0050A0  50E5               	movf	postdec1,w,c
   649  0050A2  50E1               	movf	fsr1l,w,c
   650  0050A4  E1F9               	bnz	copy_data0
   651                           
   652                           ; Initialize objects allocated to BANK0 (3 bytes)
   653                           ; load TBLPTR registers with __pidataBANK0
   654  0050A6  0E44               	movlw	low __pidataBANK0
   655  0050A8  6EF6               	movwf	tblptrl,c
   656  0050AA  0E5D               	movlw	high __pidataBANK0
   657  0050AC  6EF7               	movwf	tblptrh,c
   658  0050AE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   659  0050B0  6EF8               	movwf	tblptru,c
   660  0050B2  0009               	tblrd		*+	;fetch initializer
   661  0050B4  006F FFD4  F0FD    	movff	tablat,__pdataBANK0
   662  0050BA  0009               	tblrd		*+	;fetch initializer
   663  0050BC  006F FFD4  F0FE    	movff	tablat,__pdataBANK0+1
   664  0050C2  0009               	tblrd		*+	;fetch initializer
   665  0050C4  006F FFD4  F0FF    	movff	tablat,__pdataBANK0+2
   666                           
   667                           ; Clear objects allocated to BANK3 (255 bytes)
   668  0050CA  EE00  F300         	lfsr	0,__pbssBANK3
   669  0050CE  EE10 F0FF          	lfsr	1,255
   670  0050D2                     clear_0:
   671  0050D2  6AEE               	clrf	postinc0,c
   672  0050D4  50E5               	movf	postdec1,w,c
   673  0050D6  50E1               	movf	fsr1l,w,c
   674  0050D8  E1FC               	bnz	clear_0
   675  0050DA  50E2               	movf	fsr1h,w,c
   676  0050DC  E1FA               	bnz	clear_0
   677                           
   678                           ; Clear objects allocated to BANK2 (195 bytes)
   679  0050DE  EE00  F200         	lfsr	0,__pbssBANK2
   680  0050E2  0EC3               	movlw	195
   681  0050E4                     clear_1:
   682  0050E4  6AEE               	clrf	postinc0,c
   683  0050E6  06E8               	decf	wreg,f,c
   684  0050E8  E1FD               	bnz	clear_1
   685                           
   686                           ; Clear objects allocated to BANK1 (232 bytes)
   687  0050EA  EE00  F100         	lfsr	0,__pbssBANK1
   688  0050EE  0EE8               	movlw	232
   689  0050F0                     clear_2:
   690  0050F0  6AEE               	clrf	postinc0,c
   691  0050F2  06E8               	decf	wreg,f,c
   692  0050F4  E1FD               	bnz	clear_2
   693                           
   694                           ; Clear objects allocated to BANK0 (36 bytes)
   695  0050F6  EE00  F0D9         	lfsr	0,__pbssBANK0
   696  0050FA  0E24               	movlw	36
   697  0050FC                     clear_3:
   698  0050FC  6AEE               	clrf	postinc0,c
   699  0050FE  06E8               	decf	wreg,f,c
   700  005100  E1FD               	bnz	clear_3
   701                           
   702                           ; Clear objects allocated to COMRAM (19 bytes)
   703  005102  EE00  F039         	lfsr	0,__pbssCOMRAM
   704  005106  0E13               	movlw	19
   705  005108                     clear_4:
   706  005108  6AEE               	clrf	postinc0,c
   707  00510A  06E8               	decf	wreg,f,c
   708  00510C  E1FD               	bnz	clear_4
   709                           
   710                           ;
   711                           ; Setup IVTBASE
   712                           ;
   713  00510E  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   714  005110  6ED5               	movwf	213,c
   715  005112  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   716  005114  6ED6               	movwf	214,c
   717  005116  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   718  005118  6ED7               	movwf	215,c
   719  00511A                     end_of_initialization:
   720                           	callstack 0
   721  00511A                     __end_of__initialization:
   722                           	callstack 0
   723  00511A  0100               	movlb	0
   724  00511C  EFFB  F01C         	goto	_main	;jump to C main() function
   725                           
   726                           	psect	bssCOMRAM
   727  000039                     __pbssCOMRAM:
   728                           	callstack 0
   729  000039                     _ana:
   730                           	callstack 0
   731  000039                     	ds	4
   732  00003D                     _flags:
   733                           	callstack 0
   734  00003D                     	ds	2
   735  00003F                     _timer5ReloadVal:
   736                           	callstack 0
   737  00003F                     	ds	2
   738  000041                     TMR6_ISR@CountCallBack:
   739                           	callstack 0
   740  000041                     	ds	2
   741  000043                     _res:
   742                           	callstack 0
   743  000043                     	ds	1
   744  000044                     _adc_chan:
   745                           	callstack 0
   746  000044                     	ds	1
   747  000045                     _uart1RxLastError:
   748                           	callstack 0
   749  000045                     	ds	1
   750  000046                     _uart1RxCount:
   751                           	callstack 0
   752  000046                     	ds	1
   753  000047                     _uart1RxTail:
   754                           	callstack 0
   755  000047                     	ds	1
   756  000048                     _uart1RxHead:
   757                           	callstack 0
   758  000048                     	ds	1
   759  000049                     _uart1TxBufferRemaining:
   760                           	callstack 0
   761  000049                     	ds	1
   762  00004A                     _uart1TxTail:
   763                           	callstack 0
   764  00004A                     	ds	1
   765  00004B                     _uart1TxHead:
   766                           	callstack 0
   767  00004B                     	ds	1
   768                           
   769                           	psect	bssBANK0
   770  0000D9                     __pbssBANK0:
   771                           	callstack 0
   772  0000D9                     _vval:
   773                           	callstack 0
   774  0000D9                     	ds	4
   775  0000DD                     _TMR5_InterruptHandler:
   776                           	callstack 0
   777  0000DD                     	ds	3
   778  0000E0                     _UART1_ErrorHandler:
   779                           	callstack 0
   780  0000E0                     	ds	3
   781  0000E3                     _UART1_OverrunErrorHandler:
   782                           	callstack 0
   783  0000E3                     	ds	3
   784  0000E6                     _UART1_FramingErrorHandler:
   785                           	callstack 0
   786  0000E6                     	ds	3
   787  0000E9                     _TMR6_InterruptHandler:
   788                           	callstack 0
   789  0000E9                     	ds	3
   790  0000EC                     _ADCC_ADI_InterruptHandler:
   791                           	callstack 0
   792  0000EC                     	ds	3
   793  0000EF                     _UART1_TxInterruptHandler:
   794                           	callstack 0
   795  0000EF                     	ds	3
   796  0000F2                     _UART1_RxInterruptHandler:
   797                           	callstack 0
   798  0000F2                     	ds	3
   799  0000F5                     _nout:
   800                           	callstack 0
   801  0000F5                     	ds	2
   802  0000F7                     _width:
   803                           	callstack 0
   804  0000F7                     	ds	2
   805  0000F9                     _prec:
   806                           	callstack 0
   807  0000F9                     	ds	2
   808  0000FB                     _adc_tick:
   809                           	callstack 0
   810  0000FB                     	ds	1
   811  0000FC                     _disp_tick:
   812                           	callstack 0
   813  0000FC                     	ds	1
   814                           
   815                           	psect	dataBANK0
   816  0000FD                     __pdataBANK0:
   817                           	callstack 0
   818  0000FD                     _mode:
   819                           	callstack 0
   820  0000FD                     	ds	1
   821  0000FE                     _build_time:
   822                           	callstack 0
   823  0000FE                     	ds	1
   824  0000FF                     _build_date:
   825                           	callstack 0
   826  0000FF                     	ds	1
   827                           
   828                           	psect	bssBANK1
   829  000100                     __pbssBANK1:
   830                           	callstack 0
   831  000100                     _uart1RxStatusBuffer:
   832                           	callstack 0
   833  000100                     	ds	64
   834  000140                     _uart1TxBuffer:
   835                           	callstack 0
   836  000140                     	ds	64
   837  000180                     _tickCount:
   838                           	callstack 0
   839  000180                     	ds	12
   840  00018C                     floorf@F526:
   841                           	callstack 0
   842  00018C                     	ds	4
   843  000190                     ___fpclassifyf@F465:
   844                           	callstack 0
   845  000190                     	ds	4
   846  000194                     _ival:
   847                           	callstack 0
   848  000194                     	ds	4
   849  000198                     _dbuf:
   850                           	callstack 0
   851  000198                     	ds	80
   852                           
   853                           	psect	dataBANK1
   854  0001E8                     __pdataBANK1:
   855                           	callstack 0
   856  0001E8                     stoa@F1164:
   857                           	callstack 0
   858  0001E8                     	ds	7
   859  0001EF                     _g_cmds:
   860                           	callstack 0
   861  0001EF                     	ds	16
   862                           
   863                           	psect	bssBANK2
   864  000200                     __pbssBANK2:
   865                           	callstack 0
   866  000200                     _uart1RxBuffer:
   867                           	callstack 0
   868  000200                     	ds	64
   869  000240                     _cli_ctx:
   870                           	callstack 0
   871  000240                     	ds	131
   872                           
   873                           	psect	bssBANK3
   874  000300                     __pbssBANK3:
   875                           	callstack 0
   876  000300                     _buff1:
   877                           	callstack 0
   878  000300                     	ds	255
   879                           
   880                           	psect	cstackBANK2
   881  0002C3                     __pcstackBANK2:
   882                           	callstack 0
   883  0002C3                     ?_printf:
   884                           	callstack 0
   885  0002C3                     ?_sprintf:
   886                           	callstack 0
   887  0002C3                     printf@fmt:
   888                           	callstack 0
   889  0002C3                     sprintf@s:
   890                           	callstack 0
   891                           
   892                           ; 2 bytes @ 0x0
   893  0002C3                     	ds	2
   894  0002C5                     sprintf@fmt:
   895                           	callstack 0
   896                           
   897                           ; 1 bytes @ 0x2
   898  0002C5                     	ds	5
   899  0002CA                     sprintf@ap:
   900                           	callstack 0
   901                           
   902                           ; 2 bytes @ 0x7
   903  0002CA                     	ds	2
   904  0002CC                     sprintf@f:
   905                           	callstack 0
   906                           
   907                           ; 11 bytes @ 0x9
   908  0002CC                     	ds	11
   909  0002D7                     cli_init@a_ctx:
   910                           	callstack 0
   911                           
   912                           ; 2 bytes @ 0x14
   913  0002D7                     	ds	2
   914  0002D9                     cli_init@a_cmds:
   915                           	callstack 0
   916                           
   917                           ; 2 bytes @ 0x16
   918  0002D9                     	ds	2
   919                           
   920                           	psect	cstackBANK0
   921  000060                     __pcstackBANK0:
   922                           	callstack 0
   923  000060                     ??__cli_interpret_cmd:
   924  000060                     ?_utoa:
   925                           	callstack 0
   926  000060                     ___flmul@sign:
   927                           	callstack 0
   928  000060                     utoa@fp:
   929                           	callstack 0
   930  000060                     floorf@m:
   931                           	callstack 0
   932                           
   933                           ; 4 bytes @ 0x0
   934  000060                     	ds	1
   935  000061                     ___flmul@aexp:
   936                           	callstack 0
   937                           
   938                           ; 1 bytes @ 0x1
   939  000061                     	ds	1
   940  000062                     ___flmul@bexp:
   941                           	callstack 0
   942  000062                     utoa@d:
   943                           	callstack 0
   944                           
   945                           ; 8 bytes @ 0x2
   946  000062                     	ds	1
   947  000063                     ___flmul@grs:
   948                           	callstack 0
   949                           
   950                           ; 4 bytes @ 0x3
   951  000063                     	ds	1
   952  000064                     floorf@e:
   953                           	callstack 0
   954                           
   955                           ; 2 bytes @ 0x4
   956  000064                     	ds	2
   957  000066                     floorf@u:
   958                           	callstack 0
   959                           
   960                           ; 4 bytes @ 0x6
   961  000066                     	ds	1
   962  000067                     ___flmul@prod:
   963                           	callstack 0
   964                           
   965                           ; 4 bytes @ 0x7
   966  000067                     	ds	3
   967  00006A                     ??_utoa:
   968  00006A                     _cli_read$2150:
   969                           	callstack 0
   970                           
   971                           ; 2 bytes @ 0xA
   972  00006A                     	ds	1
   973  00006B                     ___flmul@temp:
   974                           	callstack 0
   975                           
   976                           ; 2 bytes @ 0xB
   977  00006B                     	ds	1
   978  00006C                     cli_read@i:
   979                           	callstack 0
   980                           
   981                           ; 1 bytes @ 0xC
   982  00006C                     	ds	1
   983  00006D                     ??___flge:
   984                           
   985                           ; 1 bytes @ 0xD
   986  00006D                     	ds	4
   987  000071                     ?_efgtoa:
   988                           	callstack 0
   989  000071                     efgtoa@fp:
   990                           	callstack 0
   991                           
   992                           ; 2 bytes @ 0x11
   993  000071                     	ds	1
   994  000072                     utoa@p:
   995                           	callstack 0
   996                           
   997                           ; 2 bytes @ 0x12
   998  000072                     	ds	1
   999  000073                     efgtoa@f:
  1000                           	callstack 0
  1001                           
  1002                           ; 4 bytes @ 0x13
  1003  000073                     	ds	1
  1004  000074                     utoa@w:
  1005                           	callstack 0
  1006                           
  1007                           ; 2 bytes @ 0x14
  1008  000074                     	ds	2
  1009  000076                     utoa@n:
  1010                           	callstack 0
  1011                           
  1012                           ; 8 bytes @ 0x16
  1013  000076                     	ds	1
  1014  000077                     efgtoa@c:
  1015                           	callstack 0
  1016                           
  1017                           ; 1 bytes @ 0x17
  1018  000077                     	ds	1
  1019  000078                     ??_efgtoa:
  1020                           
  1021                           ; 1 bytes @ 0x18
  1022  000078                     	ds	5
  1023  00007D                     _efgtoa$2722:
  1024                           	callstack 0
  1025                           
  1026                           ; 2 bytes @ 0x1D
  1027  00007D                     	ds	1
  1028  00007E                     utoa@i:
  1029                           	callstack 0
  1030                           
  1031                           ; 2 bytes @ 0x1E
  1032  00007E                     	ds	1
  1033  00007F                     _efgtoa$2730:
  1034                           	callstack 0
  1035                           
  1036                           ; 2 bytes @ 0x1F
  1037  00007F                     	ds	2
  1038  000081                     _efgtoa$2731:
  1039                           	callstack 0
  1040                           
  1041                           ; 2 bytes @ 0x21
  1042  000081                     	ds	2
  1043  000083                     efgtoa@t:
  1044                           	callstack 0
  1045                           
  1046                           ; 2 bytes @ 0x23
  1047  000083                     	ds	2
  1048  000085                     efgtoa@pp:
  1049                           	callstack 0
  1050                           
  1051                           ; 2 bytes @ 0x25
  1052  000085                     	ds	2
  1053  000087                     efgtoa@ne:
  1054                           	callstack 0
  1055                           
  1056                           ; 2 bytes @ 0x27
  1057  000087                     	ds	2
  1058  000089                     efgtoa@m:
  1059                           	callstack 0
  1060                           
  1061                           ; 2 bytes @ 0x29
  1062  000089                     	ds	2
  1063  00008B                     efgtoa@ou:
  1064                           	callstack 0
  1065                           
  1066                           ; 4 bytes @ 0x2B
  1067  00008B                     	ds	4
  1068  00008F                     efgtoa@d:
  1069                           	callstack 0
  1070                           
  1071                           ; 2 bytes @ 0x2F
  1072  00008F                     	ds	2
  1073  000091                     efgtoa@sign:
  1074                           	callstack 0
  1075                           
  1076                           ; 2 bytes @ 0x31
  1077  000091                     	ds	2
  1078  000093                     efgtoa@p:
  1079                           	callstack 0
  1080                           
  1081                           ; 2 bytes @ 0x33
  1082  000093                     	ds	2
  1083  000095                     efgtoa@nmode:
  1084                           	callstack 0
  1085                           
  1086                           ; 1 bytes @ 0x35
  1087  000095                     	ds	1
  1088  000096                     efgtoa@w:
  1089                           	callstack 0
  1090                           
  1091                           ; 2 bytes @ 0x36
  1092  000096                     	ds	2
  1093  000098                     efgtoa@mode:
  1094                           	callstack 0
  1095                           
  1096                           ; 1 bytes @ 0x38
  1097  000098                     	ds	1
  1098  000099                     efgtoa@h:
  1099                           	callstack 0
  1100                           
  1101                           ; 4 bytes @ 0x39
  1102  000099                     	ds	4
  1103  00009D                     efgtoa@l:
  1104                           	callstack 0
  1105                           
  1106                           ; 4 bytes @ 0x3D
  1107  00009D                     	ds	4
  1108  0000A1                     efgtoa@g:
  1109                           	callstack 0
  1110                           
  1111                           ; 4 bytes @ 0x41
  1112  0000A1                     	ds	4
  1113  0000A5                     efgtoa@i:
  1114                           	callstack 0
  1115                           
  1116                           ; 2 bytes @ 0x45
  1117  0000A5                     	ds	2
  1118  0000A7                     efgtoa@e:
  1119                           	callstack 0
  1120                           
  1121                           ; 2 bytes @ 0x47
  1122  0000A7                     	ds	2
  1123  0000A9                     efgtoa@n:
  1124                           	callstack 0
  1125                           
  1126                           ; 2 bytes @ 0x49
  1127  0000A9                     	ds	2
  1128  0000AB                     efgtoa@u:
  1129                           	callstack 0
  1130                           
  1131                           ; 4 bytes @ 0x4B
  1132  0000AB                     	ds	4
  1133  0000AF                     ?_vfpfcnvrt:
  1134                           	callstack 0
  1135  0000AF                     vfpfcnvrt@fp:
  1136                           	callstack 0
  1137                           
  1138                           ; 2 bytes @ 0x4F
  1139  0000AF                     	ds	2
  1140  0000B1                     vfpfcnvrt@fmt:
  1141                           	callstack 0
  1142                           
  1143                           ; 1 bytes @ 0x51
  1144  0000B1                     	ds	1
  1145  0000B2                     vfpfcnvrt@ap:
  1146                           	callstack 0
  1147                           
  1148                           ; 2 bytes @ 0x52
  1149  0000B2                     	ds	2
  1150  0000B4                     ??_vfpfcnvrt:
  1151                           
  1152                           ; 1 bytes @ 0x54
  1153  0000B4                     	ds	4
  1154  0000B8                     vfpfcnvrt@llu:
  1155                           	callstack 0
  1156                           
  1157                           ; 8 bytes @ 0x58
  1158  0000B8                     	ds	8
  1159  0000C0                     vfpfcnvrt@cp:
  1160                           	callstack 0
  1161                           
  1162                           ; 2 bytes @ 0x60
  1163  0000C0                     	ds	2
  1164  0000C2                     vfpfcnvrt@done:
  1165                           	callstack 0
  1166                           
  1167                           ; 2 bytes @ 0x62
  1168  0000C2                     	ds	2
  1169  0000C4                     _vfpfcnvrt$2769:
  1170                           	callstack 0
  1171                           
  1172                           ; 2 bytes @ 0x64
  1173  0000C4                     	ds	2
  1174  0000C6                     vfpfcnvrt@c:
  1175                           	callstack 0
  1176                           
  1177                           ; 1 bytes @ 0x66
  1178  0000C6                     	ds	1
  1179  0000C7                     vfpfcnvrt@f:
  1180                           	callstack 0
  1181                           
  1182                           ; 4 bytes @ 0x67
  1183  0000C7                     	ds	4
  1184  0000CB                     vfpfcnvrt@ct:
  1185                           	callstack 0
  1186                           
  1187                           ; 3 bytes @ 0x6B
  1188  0000CB                     	ds	3
  1189  0000CE                     ?_vfprintf:
  1190                           	callstack 0
  1191  0000CE                     vfprintf@fp:
  1192                           	callstack 0
  1193                           
  1194                           ; 2 bytes @ 0x6E
  1195  0000CE                     	ds	2
  1196  0000D0                     vfprintf@fmt:
  1197                           	callstack 0
  1198                           
  1199                           ; 1 bytes @ 0x70
  1200  0000D0                     	ds	1
  1201  0000D1                     vfprintf@ap:
  1202                           	callstack 0
  1203                           
  1204                           ; 2 bytes @ 0x71
  1205  0000D1                     	ds	2
  1206  0000D3                     printf@ap:
  1207                           	callstack 0
  1208                           
  1209                           ; 2 bytes @ 0x73
  1210  0000D3                     	ds	2
  1211  0000D5                     ??_main:
  1212                           
  1213                           ; 1 bytes @ 0x75
  1214  0000D5                     	ds	2
  1215  0000D7                     main@mode_sw:
  1216                           	callstack 0
  1217                           
  1218                           ; 1 bytes @ 0x77
  1219  0000D7                     	ds	1
  1220  0000D8                     main@dac_v:
  1221                           	callstack 0
  1222                           
  1223                           ; 1 bytes @ 0x78
  1224  0000D8                     	ds	1
  1225                           
  1226                           	psect	cstackCOMRAM
  1227  000001                     __pcstackCOMRAM:
  1228                           	callstack 0
  1229  000001                     ?_ADCC_GetConversionResult:
  1230                           	callstack 0
  1231                           
  1232                           ; 2 bytes @ 0x0
  1233  000001                     	ds	2
  1234  000003                     ??_ADCC_GetConversionResult:
  1235                           
  1236                           ; 1 bytes @ 0x2
  1237  000003                     	ds	2
  1238  000005                     ??_Adc_Isr:
  1239                           
  1240                           ; 1 bytes @ 0x4
  1241  000005                     	ds	1
  1242  000006                     ??_ADCC_ISR:
  1243                           
  1244                           ; 1 bytes @ 0x5
  1245  000006                     	ds	2
  1246  000008                     ??_Led_Blink:
  1247                           
  1248                           ; 1 bytes @ 0x7
  1249  000008                     	ds	1
  1250  000009                     ??_TMR6_ISR:
  1251                           
  1252                           ; 1 bytes @ 0x8
  1253  000009                     	ds	2
  1254  00000B                     ??_UART1_tx_vect_isr:
  1255                           
  1256                           ; 1 bytes @ 0xA
  1257  00000B                     	ds	2
  1258  00000D                     ??_UART1_rx_vect_isr:
  1259                           
  1260                           ; 1 bytes @ 0xC
  1261  00000D                     	ds	2
  1262  00000F                     TMR5_WriteTimer@timerVal:
  1263                           	callstack 0
  1264                           
  1265                           ; 2 bytes @ 0xE
  1266  00000F                     	ds	2
  1267  000011                     Timers_Isr@i:
  1268                           	callstack 0
  1269                           
  1270                           ; 2 bytes @ 0x10
  1271  000011                     	ds	2
  1272  000013                     ??_TMR5_ISR:
  1273                           
  1274                           ; 1 bytes @ 0x12
  1275  000013                     	ds	2
  1276  000015                     ??_display_led:
  1277  000015                     ?_strlen:
  1278                           	callstack 0
  1279  000015                     ?___fpclassifyf:
  1280                           	callstack 0
  1281  000015                     ?_isupper:
  1282                           	callstack 0
  1283  000015                     ?_isdigit:
  1284                           	callstack 0
  1285  000015                     ?_isspace:
  1286                           	callstack 0
  1287  000015                     ?___wmul:
  1288                           	callstack 0
  1289  000015                     ?___awdiv:
  1290                           	callstack 0
  1291  000015                     ?___awmod:
  1292                           	callstack 0
  1293  000015                     ?___fladd:
  1294                           	callstack 0
  1295  000015                     ?___fldiv:
  1296                           	callstack 0
  1297  000015                     ?___flneg:
  1298                           	callstack 0
  1299  000015                     ?___fltol:
  1300                           	callstack 0
  1301  000015                     ?___xxtofl:
  1302                           	callstack 0
  1303  000015                     ?___lodiv:
  1304                           	callstack 0
  1305  000015                     ?___lomod:
  1306                           	callstack 0
  1307  000015                     DAC1_SetOutput@inputData:
  1308                           	callstack 0
  1309  000015                     INTERRUPT_Initialize@state:
  1310                           	callstack 0
  1311  000015                     UART1_Read@readValue:
  1312                           	callstack 0
  1313  000015                     UART1_Write@txData:
  1314                           	callstack 0
  1315  000015                     ___wmul@multiplier:
  1316                           	callstack 0
  1317  000015                     ___awdiv@dividend:
  1318                           	callstack 0
  1319  000015                     ___awmod@dividend:
  1320                           	callstack 0
  1321  000015                     memset@dest:
  1322                           	callstack 0
  1323  000015                     isdigit@c:
  1324                           	callstack 0
  1325  000015                     isspace@c:
  1326                           	callstack 0
  1327  000015                     isupper@c:
  1328                           	callstack 0
  1329  000015                     strcpy@dest:
  1330                           	callstack 0
  1331  000015                     strlen@s:
  1332                           	callstack 0
  1333  000015                     ADCC_SetADIInterruptHandler@InterruptHandler:
  1334                           	callstack 0
  1335  000015                     TMR6_SetInterruptHandler@InterruptHandler:
  1336                           	callstack 0
  1337  000015                     UART1_SetFramingErrorHandler@interruptHandler:
  1338                           	callstack 0
  1339  000015                     UART1_SetOverrunErrorHandler@interruptHandler:
  1340                           	callstack 0
  1341  000015                     UART1_SetErrorHandler@interruptHandler:
  1342                           	callstack 0
  1343  000015                     UART1_SetRxInterruptHandler@InterruptHandler:
  1344                           	callstack 0
  1345  000015                     UART1_SetTxInterruptHandler@InterruptHandler:
  1346                           	callstack 0
  1347  000015                     TMR5_SetInterruptHandler@InterruptHandler:
  1348                           	callstack 0
  1349  000015                     ___fleq@ff1:
  1350                           	callstack 0
  1351  000015                     ___flneg@f1:
  1352                           	callstack 0
  1353  000015                     ___fltol@f1:
  1354                           	callstack 0
  1355  000015                     ___fladd@b:
  1356                           	callstack 0
  1357  000015                     ___fldiv@b:
  1358                           	callstack 0
  1359  000015                     ___xxtofl@val:
  1360                           	callstack 0
  1361  000015                     ___fpclassifyf@x:
  1362                           	callstack 0
  1363  000015                     ___lodiv@dividend:
  1364                           	callstack 0
  1365  000015                     ___lomod@dividend:
  1366                           	callstack 0
  1367                           
  1368                           ; 8 bytes @ 0x14
  1369  000015                     	ds	1
  1370  000016                     putch@txData:
  1371                           	callstack 0
  1372  000016                     linux_getc@a_data:
  1373                           	callstack 0
  1374                           
  1375                           ; 1 bytes @ 0x15
  1376  000016                     	ds	1
  1377  000017                     ??_isupper:
  1378  000017                     ??_isdigit:
  1379  000017                     ??_isspace:
  1380  000017                     ??_linux_getc:
  1381  000017                     ?_fputc:
  1382                           	callstack 0
  1383  000017                     display_led@led:
  1384                           	callstack 0
  1385  000017                     ___wmul@multiplicand:
  1386                           	callstack 0
  1387  000017                     ___awdiv@divisor:
  1388                           	callstack 0
  1389  000017                     ___awmod@divisor:
  1390                           	callstack 0
  1391  000017                     memset@c:
  1392                           	callstack 0
  1393  000017                     fputc@c:
  1394                           	callstack 0
  1395  000017                     strcpy@src:
  1396                           	callstack 0
  1397  000017                     strlen@a:
  1398                           	callstack 0
  1399                           
  1400                           ; 2 bytes @ 0x16
  1401  000017                     	ds	1
  1402  000018                     ??_TMR5_Initialize:
  1403  000018                     
  1404                           ; 1 bytes @ 0x17
  1405  000018                     	ds	1
  1406  000019                     ??___fpclassifyf:
  1407  000019                     ??_strcpy:
  1408  000019                     ??___fltol:
  1409  000019                     ??___xxtofl:
  1410  000019                     ?_strncmp:
  1411                           	callstack 0
  1412  000019                     ___awdiv@counter:
  1413                           	callstack 0
  1414  000019                     ___awmod@counter:
  1415                           	callstack 0
  1416  000019                     ___wmul@product:
  1417                           	callstack 0
  1418  000019                     memset@n:
  1419                           	callstack 0
  1420  000019                     fputc@fp:
  1421                           	callstack 0
  1422  000019                     strncmp@_l:
  1423                           	callstack 0
  1424  000019                     ___fleq@ff2:
  1425                           	callstack 0
  1426  000019                     ___fladd@a:
  1427                           	callstack 0
  1428  000019                     ___fldiv@a:
  1429                           	callstack 0
  1430                           
  1431                           ; 4 bytes @ 0x18
  1432  000019                     	ds	1
  1433  00001A                     ___awdiv@sign:
  1434                           	callstack 0
  1435  00001A                     ___awmod@sign:
  1436                           	callstack 0
  1437                           
  1438                           ; 1 bytes @ 0x19
  1439  00001A                     	ds	1
  1440  00001B                     ??_memset:
  1441  00001B                     ??_fputc:
  1442  00001B                     ?_tolower:
  1443                           	callstack 0
  1444  00001B                     _isspace$2834:
  1445                           	callstack 0
  1446  00001B                     ___awdiv@quotient:
  1447                           	callstack 0
  1448  00001B                     strcpy@s:
  1449                           	callstack 0
  1450  00001B                     strncmp@_r:
  1451                           	callstack 0
  1452  00001B                     tolower@c:
  1453                           	callstack 0
  1454                           
  1455                           ; 2 bytes @ 0x1A
  1456  00001B                     	ds	1
  1457  00001C                     ?_atoi:
  1458                           	callstack 0
  1459  00001C                     atoi@s:
  1460                           	callstack 0
  1461                           
  1462                           ; 1 bytes @ 0x1B
  1463  00001C                     	ds	1
  1464  00001D                     ??___fladd:
  1465  00001D                     ??___fldiv:
  1466  00001D                     ??_tolower:
  1467  00001D                     ??___fleq:
  1468  00001D                     ___fltol@sign1:
  1469                           	callstack 0
  1470  00001D                     ___xxtofl@sign:
  1471                           	callstack 0
  1472  00001D                     memset@k:
  1473                           	callstack 0
  1474  00001D                     ___fpclassifyf@e:
  1475                           	callstack 0
  1476  00001D                     strcpy@d:
  1477                           	callstack 0
  1478  00001D                     strncmp@n:
  1479                           	callstack 0
  1480  00001D                     ___lodiv@divisor:
  1481                           	callstack 0
  1482  00001D                     ___lomod@divisor:
  1483                           	callstack 0
  1484                           
  1485                           ; 8 bytes @ 0x1C
  1486  00001D                     	ds	1
  1487  00001E                     ??_atoi:
  1488  00001E                     ___fltol@exp1:
  1489                           	callstack 0
  1490  00001E                     ___xxtofl@exp:
  1491                           	callstack 0
  1492                           
  1493                           ; 1 bytes @ 0x1D
  1494  00001E                     	ds	1
  1495  00001F                     ??_strncmp:
  1496  00001F                     memset@s:
  1497                           	callstack 0
  1498  00001F                     ___xxtofl@arg:
  1499                           	callstack 0
  1500  00001F                     ___fpclassifyf@u:
  1501                           	callstack 0
  1502                           
  1503                           ; 4 bytes @ 0x1E
  1504  00001F                     	ds	1
  1505  000020                     ?_fputs:
  1506                           	callstack 0
  1507  000020                     ?_stoa:
  1508                           	callstack 0
  1509  000020                     stoa@fp:
  1510                           	callstack 0
  1511  000020                     fputs@s:
  1512                           	callstack 0
  1513                           
  1514                           ; 2 bytes @ 0x1F
  1515  000020                     	ds	1
  1516  000021                     ___fladd@signs:
  1517                           	callstack 0
  1518  000021                     strncmp@l:
  1519                           	callstack 0
  1520  000021                     ___fldiv@rem:
  1521                           	callstack 0
  1522                           
  1523                           ; 4 bytes @ 0x20
  1524  000021                     	ds	1
  1525  000022                     ___fladd@aexp:
  1526                           	callstack 0
  1527  000022                     stoa@s:
  1528                           	callstack 0
  1529  000022                     atoi@neg:
  1530                           	callstack 0
  1531  000022                     fputs@fp:
  1532                           	callstack 0
  1533                           
  1534                           ; 2 bytes @ 0x21
  1535  000022                     	ds	1
  1536  000023                     ?___flmul:
  1537                           	callstack 0
  1538  000023                     ___fladd@bexp:
  1539                           	callstack 0
  1540  000023                     strncmp@r:
  1541                           	callstack 0
  1542  000023                     ___flmul@b:
  1543                           	callstack 0
  1544                           
  1545                           ; 4 bytes @ 0x22
  1546  000023                     	ds	1
  1547  000024                     ??_fputs:
  1548  000024                     ??_stoa:
  1549  000024                     ___fladd@grs:
  1550                           	callstack 0
  1551  000024                     atoi@n:
  1552                           	callstack 0
  1553                           
  1554                           ; 2 bytes @ 0x23
  1555  000024                     	ds	1
  1556  000025                     ___lomod@counter:
  1557                           	callstack 0
  1558  000025                     ___fldiv@sign:
  1559                           	callstack 0
  1560  000025                     stoa@nuls:
  1561                           	callstack 0
  1562  000025                     ___lodiv@quotient:
  1563                           	callstack 0
  1564                           
  1565                           ; 8 bytes @ 0x24
  1566  000025                     	ds	1
  1567  000026                     fputs@c:
  1568                           	callstack 0
  1569  000026                     ___fldiv@new_exp:
  1570                           	callstack 0
  1571                           
  1572                           ; 2 bytes @ 0x25
  1573  000026                     	ds	1
  1574  000027                     fputs@i:
  1575                           	callstack 0
  1576  000027                     ___flmul@a:
  1577                           	callstack 0
  1578                           
  1579                           ; 4 bytes @ 0x26
  1580  000027                     	ds	1
  1581  000028                     ___fldiv@grs:
  1582                           	callstack 0
  1583                           
  1584                           ; 4 bytes @ 0x27
  1585  000028                     	ds	1
  1586  000029                     ?_pad:
  1587                           	callstack 0
  1588  000029                     pad@fp:
  1589                           	callstack 0
  1590  000029                     puts@s:
  1591                           	callstack 0
  1592                           
  1593                           ; 2 bytes @ 0x28
  1594  000029                     	ds	2
  1595  00002B                     ??___flmul:
  1596  00002B                     _puts$2913:
  1597                           	callstack 0
  1598  00002B                     pad@buf:
  1599                           	callstack 0
  1600                           
  1601                           ; 2 bytes @ 0x2A
  1602  00002B                     	ds	1
  1603  00002C                     ___fldiv@bexp:
  1604                           	callstack 0
  1605  00002C                     fh_hw@a_data:
  1606                           	callstack 0
  1607  00002C                     fh_ho@a_data:
  1608                           	callstack 0
  1609  00002C                     linux_putc@data:
  1610                           	callstack 0
  1611  00002C                     stoa@i:
  1612                           	callstack 0
  1613                           
  1614                           ; 2 bytes @ 0x2B
  1615  00002C                     	ds	1
  1616  00002D                     ___lodiv@counter:
  1617                           	callstack 0
  1618  00002D                     ___fldiv@aexp:
  1619                           	callstack 0
  1620  00002D                     pad@p:
  1621                           	callstack 0
  1622                           
  1623                           ; 2 bytes @ 0x2C
  1624  00002D                     	ds	1
  1625  00002E                     ?_floorf:
  1626                           	callstack 0
  1627  00002E                     linux_putc@a_len:
  1628                           	callstack 0
  1629  00002E                     __cli_interpret_cmd@a_ctx:
  1630                           	callstack 0
  1631  00002E                     stoa@w:
  1632                           	callstack 0
  1633  00002E                     floorf@x:
  1634                           	callstack 0
  1635                           
  1636                           ; 4 bytes @ 0x2D
  1637  00002E                     	ds	1
  1638  00002F                     ??_pad:
  1639  00002F                     ?___flsub:
  1640                           	callstack 0
  1641  00002F                     ___flge@ff1:
  1642                           	callstack 0
  1643  00002F                     ___flsub@b:
  1644                           	callstack 0
  1645                           
  1646                           ; 4 bytes @ 0x2E
  1647  00002F                     	ds	1
  1648  000030                     __cli_interpret_cmd@ret:
  1649                           	callstack 0
  1650  000030                     pad@i:
  1651                           	callstack 0
  1652  000030                     stoa@cp:
  1653                           	callstack 0
  1654                           
  1655                           ; 2 bytes @ 0x2F
  1656  000030                     	ds	1
  1657  000031                     __cli_interpret_cmd@i:
  1658                           	callstack 0
  1659                           
  1660                           ; 1 bytes @ 0x30
  1661  000031                     	ds	1
  1662  000032                     ??_floorf:
  1663  000032                     cli_read@a_ctx:
  1664                           	callstack 0
  1665  000032                     pad@w:
  1666                           	callstack 0
  1667  000032                     stoa@p:
  1668                           	callstack 0
  1669                           
  1670                           ; 2 bytes @ 0x31
  1671  000032                     	ds	1
  1672  000033                     ___flge@ff2:
  1673                           	callstack 0
  1674  000033                     ___flsub@a:
  1675                           	callstack 0
  1676                           
  1677                           ; 4 bytes @ 0x32
  1678  000033                     	ds	1
  1679  000034                     ??_cli_read:
  1680  000034                     stoa@l:
  1681                           	callstack 0
  1682                           
  1683                           ; 2 bytes @ 0x33
  1684  000034                     	ds	3
  1685  000037                     
  1686                           ; 1 bytes @ 0x36
  1687  000037                     	ds	1
  1688  000038                     vfprintf@cfmt:
  1689                           	callstack 0
  1690                           
  1691                           ; 1 bytes @ 0x37
  1692  000038                     	ds	1
  1693  000039                     
  1694                           ; 1 bytes @ 0x38
  1695 ;;
  1696 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1697 ;;
  1698 ;; *************** function _main *****************
  1699 ;; Defined at:
  1700 ;;		line 109 in file "main.c"
  1701 ;; Parameters:    Size  Location     Type
  1702 ;;		None
  1703 ;; Auto vars:     Size  Location     Type
  1704 ;;  dac_v           1  120[BANK0 ] unsigned char 
  1705 ;;  mode_sw         1  119[BANK0 ] unsigned char 
  1706 ;; Return value:  Size  Location     Type
  1707 ;;                  1    wreg      void 
  1708 ;; Registers used:
  1709 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  1710 ;; Tracked objects:
  1711 ;;		On entry : 0/0
  1712 ;;		On exit  : 3F/0
  1713 ;;		Unchanged: 0/0
  1714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1716 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1717 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1718 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1719 ;;Total ram usage:        4 bytes
  1720 ;; Hardware stack levels required when called: 15
  1721 ;; This function calls:
  1722 ;;		_ADCC_SetADIInterruptHandler
  1723 ;;		_DAC1_GetOutput
  1724 ;;		_DAC1_SetOutput
  1725 ;;		_SYSTEM_Initialize
  1726 ;;		_TMR5_SetInterruptHandler
  1727 ;;		_TMR6_SetInterruptHandler
  1728 ;;		___flmul
  1729 ;;		___xxtofl
  1730 ;;		_cli_read
  1731 ;;		_display_led
  1732 ;;		_printf
  1733 ;;		_scmd_init
  1734 ;; This function is called by:
  1735 ;;		Startup code after reset
  1736 ;; This function uses a non-reentrant model
  1737 ;;
  1738                           
  1739                           	psect	text0
  1740  0039F6                     __ptext0:
  1741                           	callstack 0
  1742  0039F6                     _main:
  1743                           	callstack 16
  1744                           
  1745                           ;main.c: 110:     uint8_t dac_v = 0, mode_sw = 0;
  1746                           
  1747                           ;incstack = 0
  1748  0039F6  0E00               	movlw	0
  1749  0039F8  0100               	movlb	0	; () banked
  1750  0039FA  6FD8               	movwf	main@dac_v& (0+255),b
  1751  0039FC  0E00               	movlw	0
  1752  0039FE  6FD7               	movwf	main@mode_sw& (0+255),b
  1753                           
  1754                           ; BSR set to: 0
  1755                           ;main.c: 112:     SYSTEM_Initialize();
  1756  003A00  EC62  F02D         	call	_SYSTEM_Initialize	;wreg free
  1757                           
  1758                           ; BSR set to: 61
  1759  003A04  92BD               	bcf	189,1,c	;volatile
  1760                           
  1761                           ; BSR set to: 61
  1762  003A06  94BE               	bcf	190,2,c	;volatile
  1763                           
  1764                           ; BSR set to: 61
  1765                           ;main.c: 116:     TMR6_SetInterruptHandler(Led_Blink);
  1766  003A08  0EC0               	movlw	low _Led_Blink
  1767  003A0A  6E15               	movwf	TMR6_SetInterruptHandler@InterruptHandler^0,c
  1768  003A0C  0E5B               	movlw	high _Led_Blink
  1769  003A0E  6E16               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)^0,c
  1770  003A10  0E00               	movlw	low (_Led_Blink shr (0+16))
  1771  003A12  6E17               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)^0,c
  1772  003A14  EC77  F02E         	call	_TMR6_SetInterruptHandler	;wreg free
  1773                           
  1774                           ;main.c: 117:     TMR5_SetInterruptHandler(Timers_Isr);
  1775  003A18  0E44               	movlw	low _Timers_Isr
  1776  003A1A  6E15               	movwf	TMR5_SetInterruptHandler@InterruptHandler^0,c
  1777  003A1C  0E55               	movlw	high _Timers_Isr
  1778  003A1E  6E16               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)^0,c
  1779  003A20  0E00               	movlw	low (_Timers_Isr shr (0+16))
  1780  003A22  6E17               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)^0,c
  1781  003A24  EC7E  F02E         	call	_TMR5_SetInterruptHandler	;wreg free
  1782                           
  1783                           ;main.c: 118:     ADCC_SetADIInterruptHandler(Adc_Isr);
  1784  003A28  0E3E               	movlw	low _Adc_Isr
  1785  003A2A  6E15               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler^0,c
  1786  003A2C  0E59               	movlw	high _Adc_Isr
  1787  003A2E  6E16               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)^0,c
  1788  003A30  0E00               	movlw	low (_Adc_Isr shr (0+16))
  1789  003A32  6E17               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+2)^0,c
  1790  003A34  EC85  F02E         	call	_ADCC_SetADIInterruptHandler	;wreg free
  1791                           
  1792                           ;main.c: 119:     ADPCH = adc_chan;
  1793  003A38  0060  F113  FEF1   	movff	_adc_chan,16113	;volatile
  1794                           
  1795                           ;main.c: 124:     scmd_init();
  1796  003A3E  EC0A  F02E         	call	_scmd_init	;wreg free
  1797                           
  1798                           ;main.c: 127:     (INTCON0bits.GIEH = 1);
  1799  003A42  8ED2               	bsf	210,7,c	;volatile
  1800                           
  1801                           ;main.c: 132:     DAC1_SetOutput(dac_v);
  1802  003A44  0E00               	movlw	0
  1803  003A46  EC97  F02E         	call	_DAC1_SetOutput
  1804  003A4A                     l10592:
  1805                           
  1806                           ;main.c: 135:         if (adc_tick) {
  1807  003A4A  0100               	movlb	0	; () banked
  1808  003A4C  51FB               	movf	_adc_tick& (0+255),w,b	;volatile
  1809  003A4E  B4D8               	btfsc	status,2,c
  1810  003A50  D7FC               	goto	l10592
  1811                           
  1812                           ; BSR set to: 0
  1813                           ;main.c: 136:             if (ana[0] < 900) {
  1814  003A52  0E84               	movlw	132
  1815  003A54  5C39               	subwf	_ana^0,w,c	;volatile
  1816  003A56  0E03               	movlw	3
  1817  003A58  583A               	subwfb	(_ana+1)^0,w,c	;volatile
  1818  003A5A  B0D8               	btfsc	status,0,c
  1819  003A5C  D004               	goto	l10598
  1820                           
  1821                           ; BSR set to: 0
  1822                           ;main.c: 137:                 display_led(oo00_off);
  1823  003A5E  0E00               	movlw	0
  1824  003A60  EC89  F026         	call	_display_led
  1825                           
  1826                           ;main.c: 138:             } else {
  1827  003A64  D00D               	goto	l10604
  1828  003A66                     l10598:
  1829                           
  1830                           ; BSR set to: 0
  1831                           ;main.c: 139:                 if (ana[0] > 1800) {
  1832  003A66  0E09               	movlw	9
  1833  003A68  5C39               	subwf	_ana^0,w,c	;volatile
  1834  003A6A  0E07               	movlw	7
  1835  003A6C  583A               	subwfb	(_ana+1)^0,w,c	;volatile
  1836  003A6E  A0D8               	btfss	status,0,c
  1837  003A70  D004               	goto	l10602
  1838                           
  1839                           ; BSR set to: 0
  1840                           ;main.c: 140:                     display_led(oo00_g);
  1841  003A72  0E01               	movlw	1
  1842  003A74  EC89  F026         	call	_display_led
  1843                           
  1844                           ;main.c: 141:                 } else {
  1845  003A78  D003               	goto	l10604
  1846  003A7A                     l10602:
  1847                           
  1848                           ; BSR set to: 0
  1849                           ;main.c: 142:                     display_led(oo00_r);
  1850  003A7A  0E02               	movlw	2
  1851  003A7C  EC89  F026         	call	_display_led
  1852  003A80                     l10604:
  1853                           
  1854                           ;main.c: 146:             if (ana[1] < 50) {
  1855  003A80  503C               	movf	(_ana+3)^0,w,c	;volatile
  1856  003A82  E108               	bnz	l10608
  1857  003A84  0E32               	movlw	50
  1858  003A86  5C3B               	subwf	(_ana+2)^0,w,c	;volatile
  1859  003A88  B0D8               	btfsc	status,0,c
  1860  003A8A  D004               	goto	l10608
  1861                           
  1862                           ;main.c: 147:                 display_led(oo10_off);
  1863  003A8C  0E03               	movlw	3
  1864  003A8E  EC89  F026         	call	_display_led
  1865                           
  1866                           ;main.c: 148:             } else {
  1867  003A92  D00D               	goto	l10614
  1868  003A94                     l10608:
  1869                           
  1870                           ;main.c: 149:                 if (ana[1] > 150) {
  1871  003A94  503C               	movf	(_ana+3)^0,w,c	;volatile
  1872  003A96  E104               	bnz	u12400
  1873  003A98  0E97               	movlw	151
  1874  003A9A  5C3B               	subwf	(_ana+2)^0,w,c	;volatile
  1875  003A9C  A0D8               	btfss	status,0,c
  1876  003A9E  D004               	goto	l10612
  1877  003AA0                     u12400:
  1878                           
  1879                           ;main.c: 150:                     display_led(oo10_g);
  1880  003AA0  0E04               	movlw	4
  1881  003AA2  EC89  F026         	call	_display_led
  1882                           
  1883                           ;main.c: 151:                 } else {
  1884  003AA6  D003               	goto	l10614
  1885  003AA8                     l10612:
  1886                           
  1887                           ;main.c: 152:                     display_led(oo10_r);
  1888  003AA8  0E05               	movlw	5
  1889  003AAA  EC89  F026         	call	_display_led
  1890  003AAE                     l10614:
  1891                           
  1892                           ;main.c: 155:             adc_tick = 0;
  1893  003AAE  0E00               	movlw	0
  1894  003AB0  0100               	movlb	0	; () banked
  1895  003AB2  6FFB               	movwf	_adc_tick& (0+255),b	;volatile
  1896                           
  1897                           ; BSR set to: 0
  1898                           ;main.c: 157:             if (!PORTAbits.RA6) {
  1899  003AB4  BCCA               	btfsc	202,6,c	;volatile
  1900  003AB6  D004               	goto	l10620
  1901                           
  1902                           ; BSR set to: 0
  1903                           ;main.c: 158:                 display_led(oo30_r);
  1904  003AB8  0E0B               	movlw	11
  1905  003ABA  EC89  F026         	call	_display_led
  1906                           
  1907                           ;main.c: 159:             } else {
  1908  003ABE  D003               	goto	l10622
  1909  003AC0                     l10620:
  1910                           
  1911                           ; BSR set to: 0
  1912                           ;main.c: 160:                 display_led(oo30_off);
  1913  003AC0  0E09               	movlw	9
  1914  003AC2  EC89  F026         	call	_display_led
  1915  003AC6                     l10622:
  1916                           
  1917                           ;main.c: 164:             if (!PORTAbits.RA4) {
  1918  003AC6  B8CA               	btfsc	202,4,c	;volatile
  1919  003AC8  D004               	goto	l10626
  1920                           
  1921                           ;main.c: 165:                 display_led(oo20_g);
  1922  003ACA  0E07               	movlw	7
  1923  003ACC  EC89  F026         	call	_display_led
  1924                           
  1925                           ;main.c: 166:             } else {
  1926  003AD0  D003               	goto	l10628
  1927  003AD2                     l10626:
  1928                           
  1929                           ;main.c: 167:                 display_led(oo20_off);
  1930  003AD2  0E06               	movlw	6
  1931  003AD4  EC89  F026         	call	_display_led
  1932  003AD8                     l10628:
  1933                           
  1934                           ;main.c: 170:             if (disp_tick) {
  1935  003AD8  0100               	movlb	0	; () banked
  1936  003ADA  51FC               	movf	_disp_tick& (0+255),w,b	;volatile
  1937  003ADC  B4D8               	btfsc	status,2,c
  1938  003ADE  D7B5               	goto	l10592
  1939                           
  1940                           ; BSR set to: 0
  1941                           ;main.c: 171:                 vval = (double) ana[0] * 0.405194;
  1942  003AE0  C039  F015         	movff	_ana,___xxtofl@val	;volatile
  1943  003AE4  C03A  F016         	movff	_ana+1,___xxtofl@val+1	;volatile
  1944  003AE8  6A17               	clrf	(___xxtofl@val+2)^0,c
  1945  003AEA  6A18               	clrf	(___xxtofl@val+3)^0,c
  1946  003AEC  0E00               	movlw	0
  1947  003AEE  EC5B  F023         	call	___xxtofl
  1948  003AF2  C015  F023         	movff	?___xxtofl,___flmul@b
  1949  003AF6  C016  F024         	movff	?___xxtofl+1,___flmul@b+1
  1950  003AFA  C017  F025         	movff	?___xxtofl+2,___flmul@b+2
  1951  003AFE  C018  F026         	movff	?___xxtofl+3,___flmul@b+3
  1952  003B02  0E97               	movlw	151
  1953  003B04  6E27               	movwf	___flmul@a^0,c
  1954  003B06  0E75               	movlw	117
  1955  003B08  6E28               	movwf	(___flmul@a+1)^0,c
  1956  003B0A  0ECF               	movlw	207
  1957  003B0C  6E29               	movwf	(___flmul@a+2)^0,c
  1958  003B0E  0E3E               	movlw	62
  1959  003B10  6E2A               	movwf	(___flmul@a+3)^0,c
  1960  003B12  EC88  F018         	call	___flmul	;wreg free
  1961  003B16  C023  F0D9         	movff	?___flmul,_vval
  1962  003B1A  C024  F0DA         	movff	?___flmul+1,_vval+1
  1963  003B1E  C025  F0DB         	movff	?___flmul+2,_vval+2
  1964  003B22  C026  F0DC         	movff	?___flmul+3,_vval+3
  1965                           
  1966                           ;main.c: 172:                 ival = (double) ana[1] * 0.004;
  1967  003B26  C03B  F015         	movff	_ana+2,___xxtofl@val	;volatile
  1968  003B2A  C03C  F016         	movff	_ana+3,___xxtofl@val+1	;volatile
  1969  003B2E  6A17               	clrf	(___xxtofl@val+2)^0,c
  1970  003B30  6A18               	clrf	(___xxtofl@val+3)^0,c
  1971  003B32  0E00               	movlw	0
  1972  003B34  EC5B  F023         	call	___xxtofl
  1973  003B38  C015  F023         	movff	?___xxtofl,___flmul@b
  1974  003B3C  C016  F024         	movff	?___xxtofl+1,___flmul@b+1
  1975  003B40  C017  F025         	movff	?___xxtofl+2,___flmul@b+2
  1976  003B44  C018  F026         	movff	?___xxtofl+3,___flmul@b+3
  1977  003B48  0E6F               	movlw	111
  1978  003B4A  6E27               	movwf	___flmul@a^0,c
  1979  003B4C  0E12               	movlw	18
  1980  003B4E  6E28               	movwf	(___flmul@a+1)^0,c
  1981  003B50  0E83               	movlw	131
  1982  003B52  6E29               	movwf	(___flmul@a+2)^0,c
  1983  003B54  0E3B               	movlw	59
  1984  003B56  6E2A               	movwf	(___flmul@a+3)^0,c
  1985  003B58  EC88  F018         	call	___flmul	;wreg free
  1986  003B5C  C023  F194         	movff	?___flmul,_ival
  1987  003B60  C024  F195         	movff	?___flmul+1,_ival+1
  1988  003B64  C025  F196         	movff	?___flmul+2,_ival+2
  1989  003B68  C026  F197         	movff	?___flmul+3,_ival+3
  1990                           
  1991                           ; BSR set to: 0
  1992                           ;main.c: 173:                 printf(" PS Test %1u: DAC OUT=%2u, Supply ReadBack %4u V=%
      +                          +5.1fV %4u I=%+3.1fmA\r\n", mode, (uint16_t) DAC1_GetOutput(), ana[0], vval, ana[1], iva
      +                          l);
  1993  003B6C  0E22               	movlw	low STR_5
  1994  003B6E  0102               	movlb	2	; () banked
  1995  003B70  6FC3               	movwf	printf@fmt& (0+255),b
  1996  003B72  C0FD  F2C4         	movff	_mode,?_printf+1
  1997  003B76  6BC5               	clrf	(?_printf+2)& (0+255),b
  1998  003B78  EC9C  F02E         	call	_DAC1_GetOutput	;wreg free
  1999  003B7C  0100               	movlb	0	; () banked
  2000  003B7E  6FD5               	movwf	??_main& (0+255),b
  2001  003B80  51D5               	movf	??_main& (0+255),w,b
  2002  003B82  0102               	movlb	2	; () banked
  2003  003B84  6FC6               	movwf	(?_printf+3)& (0+255),b
  2004  003B86  6BC7               	clrf	(?_printf+4)& (0+255),b
  2005  003B88  C039  F2C8         	movff	_ana,?_printf+5	;volatile
  2006  003B8C  C03A  F2C9         	movff	_ana+1,?_printf+6	;volatile
  2007  003B90  C0D9  F2CA         	movff	_vval,?_printf+7
  2008  003B94  C0DA  F2CB         	movff	_vval+1,?_printf+8
  2009  003B98  C0DB  F2CC         	movff	_vval+2,?_printf+9
  2010  003B9C  C0DC  F2CD         	movff	_vval+3,?_printf+10
  2011  003BA0  C03B  F2CE         	movff	_ana+2,?_printf+11	;volatile
  2012  003BA4  C03C  F2CF         	movff	_ana+3,?_printf+12	;volatile
  2013  003BA8  C194  F2D0         	movff	_ival,?_printf+13
  2014  003BAC  C195  F2D1         	movff	_ival+1,?_printf+14
  2015  003BB0  C196  F2D2         	movff	_ival+2,?_printf+15
  2016  003BB4  C197  F2D3         	movff	_ival+3,?_printf+16
  2017  003BB8  ECAD  F02D         	call	_printf	;wreg free
  2018                           
  2019                           ;main.c: 175:                 switch (mode) {
  2020  003BBC  D01D               	goto	l10662
  2021  003BBE                     l10634:
  2022                           
  2023                           ; BSR set to: 0
  2024                           ;main.c: 177:                         if (dac_v > 19) {
  2025  003BBE  0E13               	movlw	19
  2026  003BC0  65D8               	cpfsgt	main@dac_v& (0+255),b
  2027  003BC2  D002               	goto	l10638
  2028                           
  2029                           ; BSR set to: 0
  2030                           ;main.c: 178:                             dac_v = 0;
  2031  003BC4  0E00               	movlw	0
  2032  003BC6  6FD8               	movwf	main@dac_v& (0+255),b
  2033  003BC8                     l10638:
  2034                           
  2035                           ; BSR set to: 0
  2036                           ;main.c: 180:                         DAC1_SetOutput(++dac_v);
  2037  003BC8  2BD8               	incf	main@dac_v& (0+255),f,b
  2038  003BCA  51D8               	movf	main@dac_v& (0+255),w,b
  2039  003BCC  EC97  F02E         	call	_DAC1_SetOutput
  2040  003BD0  D007               	goto	l10648
  2041  003BD2                     l10642:
  2042  003BD2  9ABA               	bcf	186,5,c	;volatile
  2043  003BD4  D023               	goto	l10664
  2044  003BD6                     l10644:
  2045                           
  2046                           ; BSR set to: 0
  2047                           ;main.c: 185:                         dac_v = 20;
  2048  003BD6  0E14               	movlw	20
  2049  003BD8  6FD8               	movwf	main@dac_v& (0+255),b
  2050                           
  2051                           ; BSR set to: 0
  2052                           ;main.c: 186:                         DAC1_SetOutput(dac_v);
  2053  003BDA  0E14               	movlw	20
  2054  003BDC  EC97  F02E         	call	_DAC1_SetOutput
  2055  003BE0                     l10648:
  2056  003BE0  82BD               	bsf	189,1,c	;volatile
  2057  003BE2  D7F7               	goto	l10642
  2058  003BE4                     l10652:
  2059                           
  2060                           ; BSR set to: 0
  2061                           ;main.c: 192:                         mode = off_mode;
  2062  003BE4  0E00               	movlw	0
  2063  003BE6  6FFD               	movwf	_mode& (0+255),b
  2064                           
  2065                           ;main.c: 193:                         dac_v = 0;
  2066  003BE8  0E00               	movlw	0
  2067  003BEA  6FD8               	movwf	main@dac_v& (0+255),b
  2068                           
  2069                           ; BSR set to: 0
  2070                           ;main.c: 194:                         DAC1_SetOutput(dac_v);
  2071  003BEC  0E00               	movlw	0
  2072  003BEE  EC97  F02E         	call	_DAC1_SetOutput
  2073  003BF2  92BD               	bcf	189,1,c	;volatile
  2074  003BF4  8ABA               	bsf	186,5,c	;volatile
  2075  003BF6  D012               	goto	l10664
  2076  003BF8                     l10662:
  2077                           
  2078                           ; BSR set to: 0
  2079  003BF8  51FD               	movf	_mode& (0+255),w,b
  2080  003BFA  6FD5               	movwf	??_main& (0+255),b
  2081  003BFC  6BD6               	clrf	(??_main+1)& (0+255),b
  2082                           
  2083                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2084                           ; Switch size 1, requested type "simple"
  2085                           ; Number of cases is 1, Range of values is 0 to 0
  2086                           ; switch strategies available:
  2087                           ; Name         Instructions Cycles
  2088                           ; simple_byte            4     3 (average)
  2089                           ;	Chosen strategy is simple_byte
  2090  003BFE  51D6               	movf	(??_main+1)& (0+255),w,b
  2091  003C00  0A00               	xorlw	0	; case 0
  2092  003C02  A4D8               	btfss	status,2,c
  2093  003C04  D7EF               	goto	l10652
  2094                           
  2095                           ; BSR set to: 0
  2096                           ; Switch size 1, requested type "simple"
  2097                           ; Number of cases is 3, Range of values is 0 to 2
  2098                           ; switch strategies available:
  2099                           ; Name         Instructions Cycles
  2100                           ; simple_byte           10     6 (average)
  2101                           ;	Chosen strategy is simple_byte
  2102  003C06  51D5               	movf	??_main& (0+255),w,b
  2103  003C08  0A00               	xorlw	0	; case 0
  2104  003C0A  B4D8               	btfsc	status,2,c
  2105  003C0C  D7EB               	goto	l10652
  2106  003C0E  0A01               	xorlw	1	; case 1
  2107  003C10  B4D8               	btfsc	status,2,c
  2108  003C12  D7D5               	goto	l10634
  2109  003C14  0A03               	xorlw	3	; case 2
  2110  003C16  B4D8               	btfsc	status,2,c
  2111  003C18  D7DE               	goto	l10644
  2112  003C1A  D7E4               	goto	l10652
  2113  003C1C                     l10664:
  2114                           
  2115                           ;main.c: 204:                 cli_read(&cli_ctx);
  2116  003C1C  0E40               	movlw	low _cli_ctx
  2117  003C1E  6E32               	movwf	cli_read@a_ctx^0,c
  2118  003C20  0E02               	movlw	high _cli_ctx
  2119  003C22  6E33               	movwf	(cli_read@a_ctx+1)^0,c
  2120  003C24  EC66  F021         	call	_cli_read	;wreg free
  2121                           
  2122                           ;main.c: 205:                 disp_tick = 0;
  2123  003C28  0E00               	movlw	0
  2124  003C2A  0100               	movlb	0	; () banked
  2125  003C2C  6FFC               	movwf	_disp_tick& (0+255),b	;volatile
  2126                           
  2127                           ; BSR set to: 0
  2128                           ;main.c: 206:                 if (!PORTBbits.RB0) {
  2129  003C2E  B0CB               	btfsc	203,0,c	;volatile
  2130  003C30  D009               	goto	l10678
  2131                           
  2132                           ; BSR set to: 0
  2133                           ;main.c: 207:                     if (++mode_sw > 4) {
  2134  003C32  2BD7               	incf	main@mode_sw& (0+255),f,b
  2135  003C34  0E04               	movlw	4
  2136  003C36  65D7               	cpfsgt	main@mode_sw& (0+255),b
  2137  003C38  D708               	goto	l10592
  2138                           
  2139                           ; BSR set to: 0
  2140                           ;main.c: 208:                         mode++;
  2141  003C3A  2BFD               	incf	_mode& (0+255),f,b
  2142                           
  2143                           ; BSR set to: 0
  2144                           ;main.c: 209:                         mode_sw = 0;
  2145  003C3C  0E00               	movlw	0
  2146  003C3E  6FD7               	movwf	main@mode_sw& (0+255),b
  2147                           
  2148                           ; BSR set to: 0
  2149  003C40  84BE               	bsf	190,2,c	;volatile
  2150  003C42  D703               	goto	l10592
  2151  003C44                     l10678:
  2152                           
  2153                           ; BSR set to: 0
  2154                           ;main.c: 213:                     mode_sw = 0;
  2155  003C44  0E00               	movlw	0
  2156  003C46  6FD7               	movwf	main@mode_sw& (0+255),b
  2157                           
  2158                           ; BSR set to: 0
  2159  003C48  94BE               	bcf	190,2,c	;volatile
  2160  003C4A  D6FF               	goto	l10592
  2161  003C4C                     __end_of_main:
  2162                           	callstack 0
  2163                           
  2164 ;; *************** function _scmd_init *****************
  2165 ;; Defined at:
  2166 ;;		line 32 in file "scdm.c"
  2167 ;; Parameters:    Size  Location     Type
  2168 ;;		None
  2169 ;; Auto vars:     Size  Location     Type
  2170 ;;		None
  2171 ;; Return value:  Size  Location     Type
  2172 ;;                  1    wreg      void 
  2173 ;; Registers used:
  2174 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2175 ;; Tracked objects:
  2176 ;;		On entry : 3B/3D
  2177 ;;		On exit  : 0/0
  2178 ;;		Unchanged: 0/0
  2179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2184 ;;Total ram usage:        0 bytes
  2185 ;; Hardware stack levels used: 1
  2186 ;; Hardware stack levels required when called: 14
  2187 ;; This function calls:
  2188 ;;		_cli_init
  2189 ;; This function is called by:
  2190 ;;		_main
  2191 ;; This function uses a non-reentrant model
  2192 ;;
  2193                           
  2194                           	psect	text1
  2195  005C14                     __ptext1:
  2196                           	callstack 0
  2197  005C14                     _scmd_init:
  2198                           	callstack 16
  2199                           
  2200                           ;scdm.c: 34:  cli_init(&cli_ctx, g_cmds);
  2201                           
  2202                           ; BSR set to: 0
  2203                           ;incstack = 0
  2204  005C14  0E40               	movlw	low _cli_ctx
  2205  005C16  0102               	movlb	2	; () banked
  2206  005C18  6FD7               	movwf	cli_init@a_ctx& (0+255),b
  2207  005C1A  0E02               	movlw	high _cli_ctx
  2208  005C1C  6FD8               	movwf	(cli_init@a_ctx+1)& (0+255),b
  2209  005C1E  0EEF               	movlw	low _g_cmds
  2210  005C20  6FD9               	movwf	cli_init@a_cmds& (0+255),b
  2211  005C22  0E01               	movlw	high _g_cmds
  2212  005C24  6FDA               	movwf	(cli_init@a_cmds+1)& (0+255),b
  2213  005C26  EC20  F029         	call	_cli_init	;wreg free
  2214  005C2A  0012               	return		;funcret
  2215  005C2C                     __end_of_scmd_init:
  2216                           	callstack 0
  2217                           
  2218 ;; *************** function _cli_init *****************
  2219 ;; Defined at:
  2220 ;;		line 20 in file "scdm.c"
  2221 ;; Parameters:    Size  Location     Type
  2222 ;;  a_ctx           2   20[BANK2 ] PTR struct _t_cli_ctx
  2223 ;;		 -> cli_ctx(131), 
  2224 ;;  a_cmds          2   22[BANK2 ] PTR struct _t_cmd
  2225 ;;		 -> g_cmds(16), 
  2226 ;; Auto vars:     Size  Location     Type
  2227 ;;		None
  2228 ;; Return value:  Size  Location     Type
  2229 ;;                  1    wreg      void 
  2230 ;; Registers used:
  2231 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2232 ;; Tracked objects:
  2233 ;;		On entry : 3F/2
  2234 ;;		On exit  : 0/0
  2235 ;;		Unchanged: 0/0
  2236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2237 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2240 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2241 ;;Total ram usage:        4 bytes
  2242 ;; Hardware stack levels used: 1
  2243 ;; Hardware stack levels required when called: 13
  2244 ;; This function calls:
  2245 ;;		_memset
  2246 ;;		_puts
  2247 ;;		_sprintf
  2248 ;; This function is called by:
  2249 ;;		_scmd_init
  2250 ;; This function uses a non-reentrant model
  2251 ;;
  2252                           
  2253                           	psect	text2
  2254  005240                     __ptext2:
  2255                           	callstack 0
  2256  005240                     _cli_init:
  2257                           	callstack 16
  2258                           
  2259                           ; BSR set to: 2
  2260                           ;scdm.c: 20: static void cli_init(t_cli_ctx *a_ctx, t_cmd *a_cmds);scdm.c: 21: {;scdm.c:
      +                           22:  memset(a_ctx, 0x00, sizeof(t_cli_ctx));
  2261                           
  2262                           ;incstack = 0
  2263  005240  C2D7  F015         	movff	cli_init@a_ctx,memset@dest
  2264  005244  C2D8  F016         	movff	cli_init@a_ctx+1,memset@dest+1
  2265  005248  0E00               	movlw	0
  2266  00524A  6E18               	movwf	(memset@c+1)^0,c
  2267  00524C  0E00               	movlw	0
  2268  00524E  6E17               	movwf	memset@c^0,c
  2269  005250  0E00               	movlw	0
  2270  005252  6E1A               	movwf	(memset@n+1)^0,c
  2271  005254  0E83               	movlw	131
  2272  005256  6E19               	movwf	memset@n^0,c
  2273  005258  EC11  F022         	call	_memset	;wreg free
  2274                           
  2275                           ;scdm.c: 23:  a_ctx->cmds = a_cmds;
  2276  00525C  0060  FB5F  FFD9   	movff	cli_init@a_ctx,fsr2l
  2277  005262  0060  FB63  FFDA   	movff	cli_init@a_ctx+1,fsr2h
  2278  005268  0060  FB67  FFDE   	movff	cli_init@a_cmds,postinc2
  2279  00526E  0060  FB6B  FFDD   	movff	cli_init@a_cmds+1,postdec2
  2280  005274  0E02               	movlw	2
  2281  005276  0102               	movlb	2	; () banked
  2282  005278  25D7               	addwf	cli_init@a_ctx& (0+255),w,b
  2283  00527A  6FC3               	movwf	sprintf@s& (0+255),b
  2284  00527C  0E00               	movlw	0
  2285  00527E  21D8               	addwfc	(cli_init@a_ctx+1)& (0+255),w,b
  2286  005280  6FC4               	movwf	(sprintf@s+1)& (0+255),b
  2287  005282  0E6C               	movlw	low STR_9
  2288  005284  6FC5               	movwf	sprintf@fmt& (0+255),b
  2289  005286  0E81               	movlw	low STR_1
  2290  005288  6FC6               	movwf	(?_sprintf+3)& (0+255),b
  2291  00528A  51C6               	movf	(?_sprintf+3)& (0+255),w,b
  2292  00528C  A4D8               	btfss	status,2,c
  2293  00528E  0E20               	movlw	high __smallconst
  2294  005290  6FC7               	movwf	(?_sprintf+4)& (0+255),b
  2295  005292  0EA1               	movlw	low STR_2
  2296  005294  6FC8               	movwf	(?_sprintf+5)& (0+255),b
  2297  005296  51C8               	movf	(?_sprintf+5)& (0+255),w,b
  2298  005298  A4D8               	btfss	status,2,c
  2299  00529A  0E20               	movlw	high __smallconst
  2300  00529C  6FC9               	movwf	(?_sprintf+6)& (0+255),b
  2301  00529E  ECCB  F02A         	call	_sprintf	;wreg free
  2302                           
  2303                           ; BSR set to: 2
  2304                           ;scdm.c: 28:  puts(a_ctx->cmd);
  2305  0052A2  0E02               	movlw	2
  2306  0052A4  25D7               	addwf	cli_init@a_ctx& (0+255),w,b
  2307  0052A6  6E29               	movwf	puts@s^0,c
  2308  0052A8  0E00               	movlw	0
  2309  0052AA  21D8               	addwfc	(cli_init@a_ctx+1)& (0+255),w,b
  2310  0052AC  6E2A               	movwf	(puts@s+1)^0,c
  2311  0052AE  EC82  F02C         	call	_puts	;wreg free
  2312                           
  2313                           ;scdm.c: 29:  puts(cmdm);
  2314  0052B2  0E06               	movlw	low _cmdm
  2315  0052B4  6E29               	movwf	puts@s^0,c
  2316  0052B6  5029               	movf	puts@s^0,w,c
  2317  0052B8  A4D8               	btfss	status,2,c
  2318  0052BA  0E20               	movlw	high __smallconst
  2319  0052BC  6E2A               	movwf	(puts@s+1)^0,c
  2320  0052BE  EC82  F02C         	call	_puts	;wreg free
  2321  0052C2  0012               	return		;funcret
  2322  0052C4                     __end_of_cli_init:
  2323                           	callstack 0
  2324                           
  2325 ;; *************** function _sprintf *****************
  2326 ;; Defined at:
  2327 ;;		line 9 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/nf_sprintf.c"
  2328 ;; Parameters:    Size  Location     Type
  2329 ;;  s               2    0[BANK2 ] PTR unsigned char 
  2330 ;;		 -> cli_ctx(131), 
  2331 ;;  fmt             1    2[BANK2 ] PTR const unsigned char 
  2332 ;;		 -> STR_9(21), 
  2333 ;; Auto vars:     Size  Location     Type
  2334 ;;  f              11    9[BANK2 ] struct _IO_FILE
  2335 ;;  ap              2    7[BANK2 ] PTR void [1]
  2336 ;;		 -> ?_printf(2), ?_sprintf(2), 
  2337 ;;  ret             2    0        int 
  2338 ;; Return value:  Size  Location     Type
  2339 ;;                  2    0[BANK2 ] int 
  2340 ;; Registers used:
  2341 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2342 ;; Tracked objects:
  2343 ;;		On entry : 3F/2
  2344 ;;		On exit  : 3F/2
  2345 ;;		Unchanged: 0/0
  2346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2347 ;;      Params:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2348 ;;      Locals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2350 ;;      Totals:         0       0       0      20       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2351 ;;Total ram usage:       20 bytes
  2352 ;; Hardware stack levels used: 1
  2353 ;; Hardware stack levels required when called: 12
  2354 ;; This function calls:
  2355 ;;		_vfprintf
  2356 ;; This function is called by:
  2357 ;;		_cli_init
  2358 ;; This function uses a non-reentrant model
  2359 ;;
  2360                           
  2361                           	psect	text3
  2362  005596                     __ptext3:
  2363                           	callstack 0
  2364  005596                     _sprintf:
  2365                           	callstack 16
  2366                           
  2367                           ; BSR set to: 2
  2368                           
  2369                           ;incstack = 0
  2370  005596  0EC6               	movlw	low (?_sprintf+3)
  2371  005598  6FCA               	movwf	sprintf@ap& (0+255),b
  2372  00559A  0E02               	movlw	high (?_sprintf+3)
  2373  00559C  6FCB               	movwf	(sprintf@ap+1)& (0+255),b
  2374  00559E  C2C3  F2CC         	movff	sprintf@s,sprintf@f
  2375  0055A2  C2C4  F2CD         	movff	sprintf@s+1,sprintf@f+1
  2376                           
  2377                           ; BSR set to: 2
  2378  0055A6  0E00               	movlw	0
  2379  0055A8  6FD0               	movwf	(sprintf@f+4)& (0+255),b
  2380  0055AA  0E00               	movlw	0
  2381  0055AC  6FCF               	movwf	(sprintf@f+3)& (0+255),b
  2382                           
  2383                           ; BSR set to: 2
  2384  0055AE  0E00               	movlw	0
  2385  0055B0  6FD6               	movwf	(sprintf@f+10)& (0+255),b
  2386  0055B2  0E00               	movlw	0
  2387  0055B4  6FD5               	movwf	(sprintf@f+9)& (0+255),b
  2388                           
  2389                           ; BSR set to: 2
  2390  0055B6  0ECC               	movlw	low sprintf@f
  2391  0055B8  0100               	movlb	0	; () banked
  2392  0055BA  6FCE               	movwf	vfprintf@fp& (0+255),b
  2393  0055BC  0E02               	movlw	high sprintf@f
  2394  0055BE  6FCF               	movwf	(vfprintf@fp+1)& (0+255),b
  2395  0055C0  C2C5  F0D0         	movff	sprintf@fmt,vfprintf@fmt
  2396  0055C4  0ECA               	movlw	low sprintf@ap
  2397  0055C6  6FD1               	movwf	vfprintf@ap& (0+255),b
  2398  0055C8  0E02               	movlw	high sprintf@ap
  2399  0055CA  6FD2               	movwf	(vfprintf@ap+1)& (0+255),b
  2400  0055CC  EC79  F02A         	call	_vfprintf	;wreg free
  2401                           
  2402                           ; BSR set to: 0
  2403  0055D0  0102               	movlb	2	; () banked
  2404  0055D2  51CF               	movf	(sprintf@f+3)& (0+255),w,b
  2405  0055D4  25C3               	addwf	sprintf@s& (0+255),w,b
  2406  0055D6  6ED9               	movwf	fsr2l,c
  2407  0055D8  51D0               	movf	(sprintf@f+4)& (0+255),w,b
  2408  0055DA  21C4               	addwfc	(sprintf@s+1)& (0+255),w,b
  2409  0055DC  6EDA               	movwf	fsr2h,c
  2410  0055DE  0E00               	movlw	0
  2411  0055E0  6EDF               	movwf	indf2,c
  2412                           
  2413                           ; BSR set to: 2
  2414  0055E2  0012               	return		;funcret
  2415  0055E4                     __end_of_sprintf:
  2416                           	callstack 0
  2417                           
  2418 ;; *************** function _printf *****************
  2419 ;; Defined at:
  2420 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/printf.c"
  2421 ;; Parameters:    Size  Location     Type
  2422 ;;  fmt             1    0[BANK2 ] PTR const unsigned char 
  2423 ;;		 -> STR_5(74), 
  2424 ;; Auto vars:     Size  Location     Type
  2425 ;;  ap              2  115[BANK0 ] PTR void [1]
  2426 ;;		 -> ?_printf(2), ?_sprintf(2), 
  2427 ;;  ret             2    0        int 
  2428 ;; Return value:  Size  Location     Type
  2429 ;;                  2    0[BANK2 ] int 
  2430 ;; Registers used:
  2431 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2432 ;; Tracked objects:
  2433 ;;		On entry : 3F/2
  2434 ;;		On exit  : 3F/0
  2435 ;;		Unchanged: 0/0
  2436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2437 ;;      Params:         0       0       0      17       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2438 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2440 ;;      Totals:         0       2       0      17       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2441 ;;Total ram usage:       19 bytes
  2442 ;; Hardware stack levels used: 1
  2443 ;; Hardware stack levels required when called: 12
  2444 ;; This function calls:
  2445 ;;		_vfprintf
  2446 ;; This function is called by:
  2447 ;;		_main
  2448 ;; This function uses a non-reentrant model
  2449 ;;
  2450                           
  2451                           	psect	text4
  2452  005B5A                     __ptext4:
  2453                           	callstack 0
  2454  005B5A                     _printf:
  2455                           	callstack 18
  2456                           
  2457                           ; BSR set to: 2
  2458                           
  2459                           ; BSR set to: 2
  2460                           ;incstack = 0
  2461  005B5A  0EC4               	movlw	low (?_printf+1)
  2462  005B5C  0100               	movlb	0	; () banked
  2463  005B5E  6FD3               	movwf	printf@ap& (0+255),b
  2464  005B60  0E02               	movlw	high (?_printf+1)
  2465  005B62  6FD4               	movwf	(printf@ap+1)& (0+255),b
  2466                           
  2467                           ; BSR set to: 0
  2468  005B64  0E00               	movlw	0
  2469  005B66  6FCE               	movwf	vfprintf@fp& (0+255),b
  2470  005B68  0E00               	movlw	0
  2471  005B6A  6FCF               	movwf	(vfprintf@fp+1)& (0+255),b
  2472  005B6C  C2C3  F0D0         	movff	printf@fmt,vfprintf@fmt
  2473  005B70  0ED3               	movlw	low printf@ap
  2474  005B72  6FD1               	movwf	vfprintf@ap& (0+255),b
  2475  005B74  6BD2               	clrf	(vfprintf@ap+1)& (0+255),b
  2476  005B76  EC79  F02A         	call	_vfprintf	;wreg free
  2477                           
  2478                           ; BSR set to: 0
  2479  005B7A  0012               	return		;funcret
  2480  005B7C                     __end_of_printf:
  2481                           	callstack 0
  2482                           
  2483 ;; *************** function _vfprintf *****************
  2484 ;; Defined at:
  2485 ;;		line 1390 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  2486 ;; Parameters:    Size  Location     Type
  2487 ;;  fp              2  110[BANK0 ] PTR struct _IO_FILE
  2488 ;;		 -> sprintf@f(11), NULL(0), 
  2489 ;;  fmt             1  112[BANK0 ] PTR const unsigned char 
  2490 ;;		 -> STR_9(21), STR_5(74), 
  2491 ;;  ap              2  113[BANK0 ] PTR PTR void 
  2492 ;;		 -> printf@ap(2), sprintf@ap(2), 
  2493 ;; Auto vars:     Size  Location     Type
  2494 ;;  cfmt            1   55[COMRAM] PTR unsigned char 
  2495 ;;		 -> STR_9(21), STR_5(74), 
  2496 ;; Return value:  Size  Location     Type
  2497 ;;                  2  110[BANK0 ] int 
  2498 ;; Registers used:
  2499 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2500 ;; Tracked objects:
  2501 ;;		On entry : 3F/0
  2502 ;;		On exit  : 3F/0
  2503 ;;		Unchanged: 0/0
  2504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2505 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2506 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2508 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2509 ;;Total ram usage:        6 bytes
  2510 ;; Hardware stack levels used: 1
  2511 ;; Hardware stack levels required when called: 11
  2512 ;; This function calls:
  2513 ;;		_vfpfcnvrt
  2514 ;; This function is called by:
  2515 ;;		_sprintf
  2516 ;;		_printf
  2517 ;; This function uses a non-reentrant model
  2518 ;;
  2519                           
  2520                           	psect	text5
  2521  0054F2                     __ptext5:
  2522                           	callstack 0
  2523  0054F2                     _vfprintf:
  2524                           	callstack 16
  2525                           
  2526                           ; BSR set to: 0
  2527                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1390: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1
      +                          391: {;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1393:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1395:     cfmt = (char *)fmt;
  2528                           
  2529                           ; BSR set to: 0
  2530                           ;incstack = 0
  2531  0054F2  C0D0  F038         	movff	vfprintf@fmt,vfprintf@cfmt
  2532                           
  2533                           ; BSR set to: 0
  2534                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1396:     nout = 0;
  2535  0054F6  0E00               	movlw	0
  2536  0054F8  6FF6               	movwf	(_nout+1)& (0+255),b
  2537  0054FA  0E00               	movlw	0
  2538  0054FC  6FF5               	movwf	_nout& (0+255),b
  2539                           
  2540                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1397:     while (*cfmt) {
  2541  0054FE  D011               	goto	l10174
  2542  005500                     l10172:
  2543                           
  2544                           ; BSR set to: 0
  2545                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1398:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  2546  005500  C0CE  F0AF         	movff	vfprintf@fp,vfpfcnvrt@fp
  2547  005504  C0CF  F0B0         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2548  005508  0E38               	movlw	low vfprintf@cfmt
  2549  00550A  6FB1               	movwf	vfpfcnvrt@fmt& (0+255),b
  2550  00550C  C0D1  F0B2         	movff	vfprintf@ap,vfpfcnvrt@ap
  2551  005510  C0D2  F0B3         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2552  005514  EC4C  F015         	call	_vfpfcnvrt	;wreg free
  2553  005518  0100               	movlb	0	; () banked
  2554  00551A  51AF               	movf	?_vfpfcnvrt& (0+255),w,b
  2555  00551C  27F5               	addwf	_nout& (0+255),f,b
  2556  00551E  51B0               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2557  005520  23F6               	addwfc	(_nout+1)& (0+255),f,b
  2558  005522                     l10174:
  2559                           
  2560                           ; BSR set to: 0
  2561                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1397:     while (*cfmt) {
  2562  005522  0060  F0E3  FFF6   	movff	vfprintf@cfmt,tblptrl
  2563  005528                     	if	1	;There is more than 1 active tblptr byte
  2564  005528  0E20               	movlw	high __smallconst
  2565  00552A  6EF7               	movwf	tblptrh,c
  2566  00552C                     	endif
  2567  00552C                     	if	0	;tblptru may be non-zero
  2568  00552C                     	endif
  2569  00552C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2570  00552C  0E00               	movlw	low (__smallconst shr (0+16))
  2571  00552E  6EF8               	movwf	tblptru,c
  2572  005530                     	endif
  2573  005530  0008               	tblrd		*
  2574  005532  50F5               	movf	tablat,w,c
  2575  005534  0900               	iorlw	0
  2576  005536  A4D8               	btfss	status,2,c
  2577  005538  D7E3               	goto	l10172
  2578                           
  2579                           ; BSR set to: 0
  2580                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1400:     return nout;
  2581  00553A  C0F5  F0CE         	movff	_nout,?_vfprintf
  2582  00553E  C0F6  F0CF         	movff	_nout+1,?_vfprintf+1
  2583                           
  2584                           ; BSR set to: 0
  2585  005542  0012               	return		;funcret
  2586  005544                     __end_of_vfprintf:
  2587                           	callstack 0
  2588                           
  2589 ;; *************** function _vfpfcnvrt *****************
  2590 ;; Defined at:
  2591 ;;		line 692 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  2592 ;; Parameters:    Size  Location     Type
  2593 ;;  fp              2   79[BANK0 ] PTR struct _IO_FILE
  2594 ;;		 -> sprintf@f(11), NULL(0), 
  2595 ;;  fmt             1   81[BANK0 ] PTR PTR unsigned char 
  2596 ;;		 -> vfprintf@cfmt(1), 
  2597 ;;  ap              2   82[BANK0 ] PTR PTR void 
  2598 ;;		 -> printf@ap(2), sprintf@ap(2), 
  2599 ;; Auto vars:     Size  Location     Type
  2600 ;;  llu             8   88[BANK0 ] unsigned long long 
  2601 ;;  ll              8    0        long long 
  2602 ;;  f               4  103[BANK0 ] long long 
  2603 ;;  ct              3  107[BANK0 ] unsigned char [3]
  2604 ;;  vp              3    0        PTR void 
  2605 ;;  done            2   98[BANK0 ] int 
  2606 ;;  cp              2   96[BANK0 ] PTR unsigned char 
  2607 ;;		 -> ?_printf(2), ?_sprintf(2), STR_2(9), STR_1(12), 
  2608 ;;  i               2    0        int 
  2609 ;;  c               1  102[BANK0 ] unsigned char 
  2610 ;; Return value:  Size  Location     Type
  2611 ;;                  2   79[BANK0 ] int 
  2612 ;; Registers used:
  2613 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2614 ;; Tracked objects:
  2615 ;;		On entry : 3F/0
  2616 ;;		On exit  : 0/0
  2617 ;;		Unchanged: 0/0
  2618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2619 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2620 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2621 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2622 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2623 ;;Total ram usage:       31 bytes
  2624 ;; Hardware stack levels used: 1
  2625 ;; Hardware stack levels required when called: 10
  2626 ;; This function calls:
  2627 ;;		_atoi
  2628 ;;		_efgtoa
  2629 ;;		_fputc
  2630 ;;		_isdigit
  2631 ;;		_isupper
  2632 ;;		_stoa
  2633 ;;		_strncmp
  2634 ;;		_tolower
  2635 ;;		_utoa
  2636 ;; This function is called by:
  2637 ;;		_vfprintf
  2638 ;; This function uses a non-reentrant model
  2639 ;;
  2640                           
  2641                           	psect	text6
  2642  002A98                     __ptext6:
  2643                           	callstack 0
  2644  002A98                     _vfpfcnvrt:
  2645                           	callstack 16
  2646                           
  2647                           ; BSR set to: 0
  2648                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 692: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c
      +                          : 693: {;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 694:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 695:     int done, i;;
      +                          /opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 696:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 697:     unsigned long long llu;
  2649                           
  2650                           ; BSR set to: 0
  2651                           ;incstack = 0
  2652  002A98  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2653  002A9A  6ED9               	movwf	fsr2l,c
  2654  002A9C  6ADA               	clrf	fsr2h,c
  2655  002A9E  006F FF7F FFF6     	movff	indf2,tblptrl
  2656  002AA4                     	if	1	;There is more than 1 active tblptr byte
  2657  002AA4  0E20               	movlw	high __smallconst
  2658  002AA6  6EF7               	movwf	tblptrh,c
  2659  002AA8                     	endif
  2660  002AA8                     	if	0	;tblptru may be non-zero
  2661  002AA8                     	endif
  2662  002AA8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2663  002AA8  0E00               	movlw	low (__smallconst shr (0+16))
  2664  002AAA  6EF8               	movwf	tblptru,c
  2665  002AAC                     	endif
  2666  002AAC  0008               	tblrd		*
  2667  002AAE  50F5               	movf	tablat,w,c
  2668  002AB0  0A25               	xorlw	37
  2669  002AB2  A4D8               	btfss	status,2,c
  2670  002AB4  D313               	goto	l10146
  2671                           
  2672                           ; BSR set to: 0
  2673                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 703:         ++*fmt;
  2674  002AB6  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2675  002AB8  6ED9               	movwf	fsr2l,c
  2676  002ABA  6ADA               	clrf	fsr2h,c
  2677  002ABC  2ADF               	incf	indf2,f,c
  2678                           
  2679                           ; BSR set to: 0
  2680                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 705:         flags = width = 
      +                          0;
  2681  002ABE  0E00               	movlw	0
  2682  002AC0  6FF8               	movwf	(_width+1)& (0+255),b
  2683  002AC2  0E00               	movlw	0
  2684  002AC4  6FF7               	movwf	_width& (0+255),b
  2685  002AC6  C0F7  F03D         	movff	_width,_flags
  2686  002ACA  C0F8  F03E         	movff	_width+1,_flags+1
  2687                           
  2688                           ; BSR set to: 0
  2689                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 706:         prec = -1;
  2690  002ACE  69F9               	setf	_prec& (0+255),b
  2691  002AD0  69FA               	setf	(_prec+1)& (0+255),b
  2692                           
  2693                           ; BSR set to: 0
  2694                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 710:         done = 0;
  2695  002AD2  0E00               	movlw	0
  2696  002AD4  6FC3               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2697  002AD6  0E00               	movlw	0
  2698  002AD8  D011               	goto	L1
  2699  002ADA                     l10000:
  2700                           
  2701                           ; BSR set to: 0
  2702                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 714:                     flag
      +                          s |= (1 << 0);
  2703  002ADA  803D               	bsf	_flags^0,0,c
  2704  002ADC                     l10002:
  2705                           
  2706                           ; BSR set to: 0
  2707                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 715:                     ++*f
      +                          mt;
  2708  002ADC  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2709  002ADE  6ED9               	movwf	fsr2l,c
  2710  002AE0  6ADA               	clrf	fsr2h,c
  2711  002AE2  2ADF               	incf	indf2,f,c
  2712                           
  2713                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 716:                     brea
      +                          k;
  2714  002AE4  D030               	goto	l10026
  2715  002AE6                     l10004:
  2716                           
  2717                           ; BSR set to: 0
  2718                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 718:                     flag
      +                          s |= (1 << 1);
  2719  002AE6  823D               	bsf	_flags^0,1,c
  2720  002AE8  D7F9               	goto	l10002
  2721  002AEA                     l10008:
  2722                           
  2723                           ; BSR set to: 0
  2724                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 722:                     flag
      +                          s |= (1 << 2);
  2725  002AEA  843D               	bsf	_flags^0,2,c
  2726  002AEC  D7F7               	goto	l10002
  2727  002AEE                     l10012:
  2728                           
  2729                           ; BSR set to: 0
  2730                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 726:                     flag
      +                          s |= (1 << 3);
  2731  002AEE  863D               	bsf	_flags^0,3,c
  2732  002AF0  D7F5               	goto	l10002
  2733  002AF2                     l10016:
  2734                           
  2735                           ; BSR set to: 0
  2736                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 730:                     flag
      +                          s |= (1 << 4);
  2737  002AF2  883D               	bsf	_flags^0,4,c
  2738  002AF4  D7F3               	goto	l10002
  2739  002AF6                     l10020:
  2740                           
  2741                           ; BSR set to: 0
  2742                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 734:                     done
      +                           = 1;
  2743  002AF6  0E00               	movlw	0
  2744  002AF8  6FC3               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2745  002AFA  0E01               	movlw	1
  2746  002AFC                     L1:
  2747  002AFC  6FC2               	movwf	vfpfcnvrt@done& (0+255),b
  2748                           
  2749                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 735:                     brea
      +                          k;
  2750  002AFE  D023               	goto	l10026
  2751  002B00                     l10024:
  2752                           
  2753                           ; BSR set to: 0
  2754  002B00  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2755  002B02  6ED9               	movwf	fsr2l,c
  2756  002B04  6ADA               	clrf	fsr2h,c
  2757  002B06  006F FF7F FFF6     	movff	indf2,tblptrl
  2758  002B0C                     	if	1	;There is more than 1 active tblptr byte
  2759  002B0C  0E20               	movlw	high __smallconst
  2760  002B0E  6EF7               	movwf	tblptrh,c
  2761  002B10                     	endif
  2762  002B10                     	if	0	;tblptru may be non-zero
  2763  002B10                     	endif
  2764  002B10                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2765  002B10  0E00               	movlw	low (__smallconst shr (0+16))
  2766  002B12  6EF8               	movwf	tblptru,c
  2767  002B14                     	endif
  2768  002B14  0008               	tblrd		*
  2769  002B16  50F5               	movf	tablat,w,c
  2770  002B18  6FB4               	movwf	??_vfpfcnvrt& (0+255),b
  2771  002B1A  6BB5               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2772                           
  2773                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2774                           ; Switch size 1, requested type "simple"
  2775                           ; Number of cases is 1, Range of values is 0 to 0
  2776                           ; switch strategies available:
  2777                           ; Name         Instructions Cycles
  2778                           ; simple_byte            4     3 (average)
  2779                           ;	Chosen strategy is simple_byte
  2780  002B1C  51B5               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2781  002B1E  0A00               	xorlw	0	; case 0
  2782  002B20  A4D8               	btfss	status,2,c
  2783  002B22  D7E9               	goto	l10020
  2784                           
  2785                           ; BSR set to: 0
  2786                           ; Switch size 1, requested type "simple"
  2787                           ; Number of cases is 5, Range of values is 32 to 48
  2788                           ; switch strategies available:
  2789                           ; Name         Instructions Cycles
  2790                           ; simple_byte           16     9 (average)
  2791                           ;	Chosen strategy is simple_byte
  2792  002B24  51B4               	movf	??_vfpfcnvrt& (0+255),w,b
  2793  002B26  0A20               	xorlw	32	; case 32
  2794  002B28  B4D8               	btfsc	status,2,c
  2795  002B2A  D7E1               	goto	l10012
  2796  002B2C  0A03               	xorlw	3	; case 35
  2797  002B2E  B4D8               	btfsc	status,2,c
  2798  002B30  D7E0               	goto	l10016
  2799  002B32  0A08               	xorlw	8	; case 43
  2800  002B34  B4D8               	btfsc	status,2,c
  2801  002B36  D7D9               	goto	l10008
  2802  002B38  0A06               	xorlw	6	; case 45
  2803  002B3A  B4D8               	btfsc	status,2,c
  2804  002B3C  D7CE               	goto	l10000
  2805  002B3E  0A1D               	xorlw	29	; case 48
  2806  002B40  B4D8               	btfsc	status,2,c
  2807  002B42  D7D1               	goto	l10004
  2808  002B44  D7D8               	goto	l10020
  2809  002B46                     l10026:
  2810                           
  2811                           ; BSR set to: 0
  2812                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 711:         while (!done) {
  2813  002B46  51C2               	movf	vfpfcnvrt@done& (0+255),w,b
  2814  002B48  11C3               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  2815  002B4A  B4D8               	btfsc	status,2,c
  2816  002B4C  D7D9               	goto	l10024
  2817                           
  2818                           ; BSR set to: 0
  2819                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 738:         if (flags & (1 <
      +                          < 0)) {
  2820  002B4E  B03D               	btfsc	_flags^0,0,c
  2821                           
  2822                           ; BSR set to: 0
  2823                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 739:             flags &= ~(1
      +                           << 1);
  2824  002B50  923D               	bcf	_flags^0,1,c
  2825                           
  2826                           ; BSR set to: 0
  2827                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 745:         if ((*fmt)[0] ==
      +                           '*') {
  2828  002B52  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2829  002B54  6ED9               	movwf	fsr2l,c
  2830  002B56  6ADA               	clrf	fsr2h,c
  2831  002B58  006F FF7F FFF6     	movff	indf2,tblptrl
  2832  002B5E                     	if	1	;There is more than 1 active tblptr byte
  2833  002B5E  0E20               	movlw	high __smallconst
  2834  002B60  6EF7               	movwf	tblptrh,c
  2835  002B62                     	endif
  2836  002B62                     	if	0	;tblptru may be non-zero
  2837  002B62                     	endif
  2838  002B62                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2839  002B62  0E00               	movlw	low (__smallconst shr (0+16))
  2840  002B64  6EF8               	movwf	tblptru,c
  2841  002B66                     	endif
  2842  002B66  0008               	tblrd		*
  2843  002B68  50F5               	movf	tablat,w,c
  2844  002B6A  0A2A               	xorlw	42
  2845  002B6C  A4D8               	btfss	status,2,c
  2846  002B6E  D028               	goto	l10038
  2847                           
  2848                           ; BSR set to: 0
  2849                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 746:             ++*fmt;
  2850  002B70  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2851  002B72  6ED9               	movwf	fsr2l,c
  2852  002B74  6ADA               	clrf	fsr2h,c
  2853  002B76  2ADF               	incf	indf2,f,c
  2854                           
  2855                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 747:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  2856  002B78  0060  F2CB  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  2857  002B7E  0060  F2CF  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  2858  002B84  006F FF7C  F0B4    	movff	indf2,??_vfpfcnvrt
  2859  002B8A  0E02               	movlw	2
  2860  002B8C  26DE               	addwf	postinc2,f,c
  2861  002B8E  006F FF7C  F0B5    	movff	indf2,??_vfpfcnvrt+1
  2862  002B94  0E00               	movlw	0
  2863  002B96  22DD               	addwfc	postdec2,f,c
  2864  002B98  0060  F2D3  FFD9   	movff	??_vfpfcnvrt,fsr2l
  2865  002B9E  0060  F2D7  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  2866  002BA4  006F FF78  F0F7    	movff	postinc2,_width
  2867  002BAA  006F FF74  F0F8    	movff	postdec2,_width+1
  2868                           
  2869                           ; BSR set to: 0
  2870                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 748:             if (width < 
      +                          0) {
  2871  002BB0  AFF8               	btfss	(_width+1)& (0+255),7,b
  2872  002BB2  D033               	goto	u11880
  2873                           
  2874                           ; BSR set to: 0
  2875                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 749:                 flags |=
      +                           (1 << 0);
  2876  002BB4  803D               	bsf	_flags^0,0,c
  2877                           
  2878                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 750:                 width = 
      +                          -width;
  2879  002BB6  6DF7               	negf	_width& (0+255),b
  2880  002BB8  1FF8               	comf	(_width+1)& (0+255),f,b
  2881  002BBA  B0D8               	btfsc	status,0,c
  2882  002BBC  2BF8               	incf	(_width+1)& (0+255),f,b
  2883  002BBE  D02D               	goto	u11880
  2884  002BC0                     l10038:
  2885                           
  2886                           ; BSR set to: 0
  2887                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 753:             width = atoi
      +                          (*fmt);
  2888  002BC0  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2889  002BC2  6ED9               	movwf	fsr2l,c
  2890  002BC4  6ADA               	clrf	fsr2h,c
  2891  002BC6  50DF               	movf	indf2,w,c
  2892  002BC8  6E1C               	movwf	atoi@s^0,c
  2893  002BCA  ECFB  F023         	call	_atoi	;wreg free
  2894  002BCE  C01C  F0F7         	movff	?_atoi,_width
  2895  002BD2  C01D  F0F8         	movff	?_atoi+1,_width+1
  2896                           
  2897                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 754:             while ((0 &&
      +                           isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  2898  002BD6  D004               	goto	l10044
  2899  002BD8                     l10040:
  2900                           
  2901                           ; BSR set to: 0
  2902                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 755:                 ++*fmt;
  2903  002BD8  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2904  002BDA  6ED9               	movwf	fsr2l,c
  2905  002BDC  6ADA               	clrf	fsr2h,c
  2906  002BDE  2ADF               	incf	indf2,f,c
  2907  002BE0                     l10044:
  2908  002BE0  0ED0               	movlw	208
  2909  002BE2  0100               	movlb	0	; () banked
  2910  002BE4  6FB4               	movwf	??_vfpfcnvrt& (0+255),b
  2911  002BE6  0EFF               	movlw	255
  2912  002BE8  6FB5               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2913  002BEA  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2914  002BEC  6ED9               	movwf	fsr2l,c
  2915  002BEE  6ADA               	clrf	fsr2h,c
  2916  002BF0  006F FF7F FFF6     	movff	indf2,tblptrl
  2917  002BF6                     	if	1	;There is more than 1 active tblptr byte
  2918  002BF6  0E20               	movlw	high __smallconst
  2919  002BF8  6EF7               	movwf	tblptrh,c
  2920  002BFA                     	endif
  2921  002BFA                     	if	0	;tblptru may be non-zero
  2922  002BFA                     	endif
  2923  002BFA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2924  002BFA  0E00               	movlw	low (__smallconst shr (0+16))
  2925  002BFC  6EF8               	movwf	tblptru,c
  2926  002BFE                     	endif
  2927  002BFE  0008               	tblrd		*
  2928  002C00  50F5               	movf	tablat,w,c
  2929  002C02  6FB6               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2930  002C04  6BB7               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2931  002C06  51B4               	movf	??_vfpfcnvrt& (0+255),w,b
  2932  002C08  27B6               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2933  002C0A  51B5               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2934  002C0C  23B7               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2935  002C0E  51B7               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2936  002C10  E104               	bnz	u11880
  2937  002C12  0E0A               	movlw	10
  2938  002C14  5DB6               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2939  002C16  A0D8               	btfss	status,0,c
  2940  002C18  D7DF               	goto	l10040
  2941  002C1A                     u11880:
  2942                           
  2943                           ; BSR set to: 0
  2944                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 762:         if ((*fmt)[0] ==
      +                           '.') {
  2945  002C1A  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2946  002C1C  6ED9               	movwf	fsr2l,c
  2947  002C1E  6ADA               	clrf	fsr2h,c
  2948  002C20  006F FF7F FFF6     	movff	indf2,tblptrl
  2949  002C26                     	if	1	;There is more than 1 active tblptr byte
  2950  002C26  0E20               	movlw	high __smallconst
  2951  002C28  6EF7               	movwf	tblptrh,c
  2952  002C2A                     	endif
  2953  002C2A                     	if	0	;tblptru may be non-zero
  2954  002C2A                     	endif
  2955  002C2A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2956  002C2A  0E00               	movlw	low (__smallconst shr (0+16))
  2957  002C2C  6EF8               	movwf	tblptru,c
  2958  002C2E                     	endif
  2959  002C2E  0008               	tblrd		*
  2960  002C30  50F5               	movf	tablat,w,c
  2961  002C32  0A2E               	xorlw	46
  2962  002C34  A4D8               	btfss	status,2,c
  2963  002C36  D065               	goto	u11910
  2964                           
  2965                           ; BSR set to: 0
  2966                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 763:             prec = 0;
  2967  002C38  0E00               	movlw	0
  2968  002C3A  6FFA               	movwf	(_prec+1)& (0+255),b
  2969  002C3C  0E00               	movlw	0
  2970  002C3E  6FF9               	movwf	_prec& (0+255),b
  2971                           
  2972                           ; BSR set to: 0
  2973                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 764:             ++*fmt;
  2974  002C40  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2975  002C42  6ED9               	movwf	fsr2l,c
  2976  002C44  6ADA               	clrf	fsr2h,c
  2977  002C46  2ADF               	incf	indf2,f,c
  2978                           
  2979                           ; BSR set to: 0
  2980                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 765:             if ((*fmt)[0
      +                          ] == '*') {
  2981  002C48  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2982  002C4A  6ED9               	movwf	fsr2l,c
  2983  002C4C  6ADA               	clrf	fsr2h,c
  2984  002C4E  006F FF7F FFF6     	movff	indf2,tblptrl
  2985  002C54                     	if	1	;There is more than 1 active tblptr byte
  2986  002C54  0E20               	movlw	high __smallconst
  2987  002C56  6EF7               	movwf	tblptrh,c
  2988  002C58                     	endif
  2989  002C58                     	if	0	;tblptru may be non-zero
  2990  002C58                     	endif
  2991  002C58                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2992  002C58  0E00               	movlw	low (__smallconst shr (0+16))
  2993  002C5A  6EF8               	movwf	tblptru,c
  2994  002C5C                     	endif
  2995  002C5C  0008               	tblrd		*
  2996  002C5E  50F5               	movf	tablat,w,c
  2997  002C60  0A2A               	xorlw	42
  2998  002C62  A4D8               	btfss	status,2,c
  2999  002C64  D021               	goto	l10056
  3000                           
  3001                           ; BSR set to: 0
  3002                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 766:                 ++*fmt;
  3003  002C66  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3004  002C68  6ED9               	movwf	fsr2l,c
  3005  002C6A  6ADA               	clrf	fsr2h,c
  3006  002C6C  2ADF               	incf	indf2,f,c
  3007                           
  3008                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 767:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  3009  002C6E  0060  F2CB  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3010  002C74  0060  F2CF  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3011  002C7A  006F FF7C  F0B4    	movff	indf2,??_vfpfcnvrt
  3012  002C80  0E02               	movlw	2
  3013  002C82  26DE               	addwf	postinc2,f,c
  3014  002C84  006F FF7C  F0B5    	movff	indf2,??_vfpfcnvrt+1
  3015  002C8A  0E00               	movlw	0
  3016  002C8C  22DD               	addwfc	postdec2,f,c
  3017  002C8E  0060  F2D3  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3018  002C94  0060  F2D7  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3019  002C9A  006F FF78  F0F9    	movff	postinc2,_prec
  3020  002CA0  006F FF74  F0FA    	movff	postdec2,_prec+1
  3021                           
  3022                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 768:             } else {
  3023  002CA6  D02D               	goto	u11910
  3024  002CA8                     l10056:
  3025                           
  3026                           ; BSR set to: 0
  3027                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 769:                 prec = a
      +                          toi(*fmt);
  3028  002CA8  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3029  002CAA  6ED9               	movwf	fsr2l,c
  3030  002CAC  6ADA               	clrf	fsr2h,c
  3031  002CAE  50DF               	movf	indf2,w,c
  3032  002CB0  6E1C               	movwf	atoi@s^0,c
  3033  002CB2  ECFB  F023         	call	_atoi	;wreg free
  3034  002CB6  C01C  F0F9         	movff	?_atoi,_prec
  3035  002CBA  C01D  F0FA         	movff	?_atoi+1,_prec+1
  3036                           
  3037                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 770:                 while ((
      +                          0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  3038  002CBE  D004               	goto	l10062
  3039  002CC0                     l10058:
  3040                           
  3041                           ; BSR set to: 0
  3042                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 771:                     ++*f
      +                          mt;
  3043  002CC0  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3044  002CC2  6ED9               	movwf	fsr2l,c
  3045  002CC4  6ADA               	clrf	fsr2h,c
  3046  002CC6  2ADF               	incf	indf2,f,c
  3047  002CC8                     l10062:
  3048  002CC8  0ED0               	movlw	208
  3049  002CCA  0100               	movlb	0	; () banked
  3050  002CCC  6FB4               	movwf	??_vfpfcnvrt& (0+255),b
  3051  002CCE  0EFF               	movlw	255
  3052  002CD0  6FB5               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3053  002CD2  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3054  002CD4  6ED9               	movwf	fsr2l,c
  3055  002CD6  6ADA               	clrf	fsr2h,c
  3056  002CD8  006F FF7F FFF6     	movff	indf2,tblptrl
  3057  002CDE                     	if	1	;There is more than 1 active tblptr byte
  3058  002CDE  0E20               	movlw	high __smallconst
  3059  002CE0  6EF7               	movwf	tblptrh,c
  3060  002CE2                     	endif
  3061  002CE2                     	if	0	;tblptru may be non-zero
  3062  002CE2                     	endif
  3063  002CE2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3064  002CE2  0E00               	movlw	low (__smallconst shr (0+16))
  3065  002CE4  6EF8               	movwf	tblptru,c
  3066  002CE6                     	endif
  3067  002CE6  0008               	tblrd		*
  3068  002CE8  50F5               	movf	tablat,w,c
  3069  002CEA  6FB6               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3070  002CEC  6BB7               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3071  002CEE  51B4               	movf	??_vfpfcnvrt& (0+255),w,b
  3072  002CF0  27B6               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3073  002CF2  51B5               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3074  002CF4  23B7               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3075  002CF6  51B7               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3076  002CF8  E104               	bnz	u11910
  3077  002CFA  0E0A               	movlw	10
  3078  002CFC  5DB6               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3079  002CFE  A0D8               	btfss	status,0,c
  3080  002D00  D7DF               	goto	l10058
  3081  002D02                     u11910:
  3082                           
  3083                           ; BSR set to: 0
  3084                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 779:         ct[0] = (char)to
      +                          lower((int)(*fmt)[0]);
  3085  002D02  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3086  002D04  6ED9               	movwf	fsr2l,c
  3087  002D06  6ADA               	clrf	fsr2h,c
  3088  002D08  006F FF7F FFF6     	movff	indf2,tblptrl
  3089  002D0E                     	if	1	;There is more than 1 active tblptr byte
  3090  002D0E  0E20               	movlw	high __smallconst
  3091  002D10  6EF7               	movwf	tblptrh,c
  3092  002D12                     	endif
  3093  002D12                     	if	0	;tblptru may be non-zero
  3094  002D12                     	endif
  3095  002D12                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3096  002D12  0E00               	movlw	low (__smallconst shr (0+16))
  3097  002D14  6EF8               	movwf	tblptru,c
  3098  002D16                     	endif
  3099  002D16  0008               	tblrd		*
  3100  002D18  50F5               	movf	tablat,w,c
  3101  002D1A  6E1B               	movwf	tolower@c^0,c
  3102  002D1C  6A1C               	clrf	(tolower@c+1)^0,c
  3103  002D1E  EC65  F02C         	call	_tolower	;wreg free
  3104  002D22  501B               	movf	?_tolower^0,w,c
  3105  002D24  6FCB               	movwf	vfpfcnvrt@ct& (0+255),b
  3106                           
  3107                           ; BSR set to: 0
  3108                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 780:         if (ct[0]) {
  3109  002D26  51CB               	movf	vfpfcnvrt@ct& (0+255),w,b
  3110  002D28  B4D8               	btfsc	status,2,c
  3111  002D2A  D02F               	goto	l10074
  3112                           
  3113                           ; BSR set to: 0
  3114                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 781:             ct[1] = (cha
      +                          r)tolower((int)(*fmt)[1]);
  3115  002D2C  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3116  002D2E  6ED9               	movwf	fsr2l,c
  3117  002D30  6ADA               	clrf	fsr2h,c
  3118  002D32  50DF               	movf	indf2,w,c
  3119  002D34  6FB4               	movwf	??_vfpfcnvrt& (0+255),b
  3120  002D36  0E01               	movlw	1
  3121  002D38  27B4               	addwf	??_vfpfcnvrt& (0+255),f,b
  3122  002D3A  0060  F2D3  FFF6   	movff	??_vfpfcnvrt,tblptrl
  3123  002D40                     	if	1	;There is more than 1 active tblptr byte
  3124  002D40  0E20               	movlw	high __smallconst
  3125  002D42  6EF7               	movwf	tblptrh,c
  3126  002D44                     	endif
  3127  002D44                     	if	0	;tblptru may be non-zero
  3128  002D44                     	endif
  3129  002D44                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3130  002D44  0E00               	movlw	low (__smallconst shr (0+16))
  3131  002D46  6EF8               	movwf	tblptru,c
  3132  002D48                     	endif
  3133  002D48  0008               	tblrd		*
  3134  002D4A  50F5               	movf	tablat,w,c
  3135  002D4C  6E1B               	movwf	tolower@c^0,c
  3136  002D4E  6A1C               	clrf	(tolower@c+1)^0,c
  3137  002D50  EC65  F02C         	call	_tolower	;wreg free
  3138  002D54  501B               	movf	?_tolower^0,w,c
  3139  002D56  6FCC               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  3140                           
  3141                           ; BSR set to: 0
  3142                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 782:             if (ct[1]) {
  3143  002D58  51CC               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  3144  002D5A  B4D8               	btfsc	status,2,c
  3145  002D5C  D016               	goto	l10074
  3146                           
  3147                           ; BSR set to: 0
  3148                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 783:                 ct[2] = 
      +                          (char)tolower((int)(*fmt)[2]);
  3149  002D5E  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3150  002D60  6ED9               	movwf	fsr2l,c
  3151  002D62  6ADA               	clrf	fsr2h,c
  3152  002D64  50DF               	movf	indf2,w,c
  3153  002D66  6FB4               	movwf	??_vfpfcnvrt& (0+255),b
  3154  002D68  0E02               	movlw	2
  3155  002D6A  27B4               	addwf	??_vfpfcnvrt& (0+255),f,b
  3156  002D6C  0060  F2D3  FFF6   	movff	??_vfpfcnvrt,tblptrl
  3157  002D72                     	if	1	;There is more than 1 active tblptr byte
  3158  002D72  0E20               	movlw	high __smallconst
  3159  002D74  6EF7               	movwf	tblptrh,c
  3160  002D76                     	endif
  3161  002D76                     	if	0	;tblptru may be non-zero
  3162  002D76                     	endif
  3163  002D76                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3164  002D76  0E00               	movlw	low (__smallconst shr (0+16))
  3165  002D78  6EF8               	movwf	tblptru,c
  3166  002D7A                     	endif
  3167  002D7A  0008               	tblrd		*
  3168  002D7C  50F5               	movf	tablat,w,c
  3169  002D7E  6E1B               	movwf	tolower@c^0,c
  3170  002D80  6A1C               	clrf	(tolower@c+1)^0,c
  3171  002D82  EC65  F02C         	call	_tolower	;wreg free
  3172  002D86  501B               	movf	?_tolower^0,w,c
  3173  002D88  6FCD               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  3174  002D8A                     l10074:
  3175                           
  3176                           ; BSR set to: 0
  3177                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 942:         if (ct[0] == 'f'
      +                          ) {
  3178  002D8A  0E66               	movlw	102
  3179  002D8C  19CB               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  3180  002D8E  A4D8               	btfss	status,2,c
  3181  002D90  D049               	goto	l10086
  3182                           
  3183                           ; BSR set to: 0
  3184                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 944:             c = (*fmt)[0
      +                          ];
  3185  002D92  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3186  002D94  6ED9               	movwf	fsr2l,c
  3187  002D96  6ADA               	clrf	fsr2h,c
  3188  002D98  006F FF7F FFF6     	movff	indf2,tblptrl
  3189  002D9E                     	if	1	;There is more than 1 active tblptr byte
  3190  002D9E  0E20               	movlw	high __smallconst
  3191  002DA0  6EF7               	movwf	tblptrh,c
  3192  002DA2                     	endif
  3193  002DA2                     	if	0	;tblptru may be non-zero
  3194  002DA2                     	endif
  3195  002DA2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3196  002DA2  0E00               	movlw	low (__smallconst shr (0+16))
  3197  002DA4  6EF8               	movwf	tblptru,c
  3198  002DA6                     	endif
  3199  002DA6  0008               	tblrd		*
  3200  002DA8  006F FFD4  F0C6    	movff	tablat,vfpfcnvrt@c
  3201                           
  3202                           ; BSR set to: 0
  3203                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 945:             ++*fmt;
  3204  002DAE  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3205  002DB0  6ED9               	movwf	fsr2l,c
  3206  002DB2  6ADA               	clrf	fsr2h,c
  3207  002DB4  2ADF               	incf	indf2,f,c
  3208                           
  3209                           ; BSR set to: 0
  3210                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 946:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  3211  002DB6  0060  F2CB  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3212  002DBC  0060  F2CF  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3213  002DC2  006F FF7C  F0B4    	movff	indf2,??_vfpfcnvrt
  3214  002DC8  0E04               	movlw	4
  3215  002DCA  26DE               	addwf	postinc2,f,c
  3216  002DCC  006F FF7C  F0B5    	movff	indf2,??_vfpfcnvrt+1
  3217  002DD2  0E00               	movlw	0
  3218  002DD4  22DD               	addwfc	postdec2,f,c
  3219  002DD6  0060  F2D3  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3220  002DDC  0060  F2D7  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3221  002DE2  006F FF78  F0C7    	movff	postinc2,vfpfcnvrt@f
  3222  002DE8  006F FF78  F0C8    	movff	postinc2,vfpfcnvrt@f+1
  3223  002DEE  006F FF78  F0C9    	movff	postinc2,vfpfcnvrt@f+2
  3224  002DF4  006F FF78  F0CA    	movff	postinc2,vfpfcnvrt@f+3
  3225  002DFA                     l10082:
  3226                           
  3227                           ; BSR set to: 0
  3228                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 948:             return efgto
      +                          a(fp, f, c);
  3229  002DFA  C0AF  F071         	movff	vfpfcnvrt@fp,efgtoa@fp
  3230  002DFE  C0B0  F072         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3231  002E02  C0C7  F073         	movff	vfpfcnvrt@f,efgtoa@f
  3232  002E06  C0C8  F074         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3233  002E0A  C0C9  F075         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3234  002E0E  C0CA  F076         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3235  002E12  C0C6  F077         	movff	vfpfcnvrt@c,efgtoa@c
  3236  002E16  EC66  F010         	call	_efgtoa	;wreg free
  3237  002E1A  C071  F0AF         	movff	?_efgtoa,?_vfpfcnvrt
  3238  002E1E  C072  F0B0         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3239  002E22  0012               	return	
  3240  002E24                     l10086:
  3241                           
  3242                           ; BSR set to: 0
  3243                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 950:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3244  002E24  0ECB               	movlw	low vfpfcnvrt@ct
  3245  002E26  6E19               	movwf	strncmp@_l^0,c
  3246  002E28  6A1A               	clrf	(strncmp@_l+1)^0,c
  3247  002E2A  0EBE               	movlw	low STR_19
  3248  002E2C  6E1B               	movwf	strncmp@_r^0,c
  3249  002E2E  501B               	movf	strncmp@_r^0,w,c
  3250  002E30  A4D8               	btfss	status,2,c
  3251  002E32  0E20               	movlw	high __smallconst
  3252  002E34  6E1C               	movwf	(strncmp@_r+1)^0,c
  3253  002E36  0E00               	movlw	0
  3254  002E38  6E1E               	movwf	(strncmp@n+1)^0,c
  3255  002E3A  0E02               	movlw	2
  3256  002E3C  6E1D               	movwf	strncmp@n^0,c
  3257  002E3E  ECB5  F020         	call	_strncmp	;wreg free
  3258  002E42  5019               	movf	?_strncmp^0,w,c
  3259  002E44  101A               	iorwf	(?_strncmp+1)^0,w,c
  3260  002E46  A4D8               	btfss	status,2,c
  3261  002E48  D055               	goto	l10104
  3262                           
  3263                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 952:             c = (*fmt)[1
      +                          ];
  3264  002E4A  0100               	movlb	0	; () banked
  3265  002E4C  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3266  002E4E  6ED9               	movwf	fsr2l,c
  3267  002E50  6ADA               	clrf	fsr2h,c
  3268  002E52  50DF               	movf	indf2,w,c
  3269  002E54  6FB4               	movwf	??_vfpfcnvrt& (0+255),b
  3270  002E56  0E01               	movlw	1
  3271  002E58  27B4               	addwf	??_vfpfcnvrt& (0+255),f,b
  3272  002E5A  0060  F2D3  FFF6   	movff	??_vfpfcnvrt,tblptrl
  3273  002E60                     	if	1	;There is more than 1 active tblptr byte
  3274  002E60  0E20               	movlw	high __smallconst
  3275  002E62  6EF7               	movwf	tblptrh,c
  3276  002E64                     	endif
  3277  002E64                     	if	0	;tblptru may be non-zero
  3278  002E64                     	endif
  3279  002E64                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3280  002E64  0E00               	movlw	low (__smallconst shr (0+16))
  3281  002E66  6EF8               	movwf	tblptru,c
  3282  002E68                     	endif
  3283  002E68  0008               	tblrd		*
  3284  002E6A  006F FFD4  F0C6    	movff	tablat,vfpfcnvrt@c
  3285                           
  3286                           ; BSR set to: 0
  3287                           
  3288                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 953:             if ((0 && is
      +                          upper((int)(*fmt)[0]), ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3289  002E70  0EBF               	movlw	191
  3290  002E72  6FB4               	movwf	??_vfpfcnvrt& (0+255),b
  3291  002E74  0EFF               	movlw	255
  3292  002E76  6FB5               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3293  002E78  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3294  002E7A  6ED9               	movwf	fsr2l,c
  3295  002E7C  6ADA               	clrf	fsr2h,c
  3296  002E7E  006F FF7F FFF6     	movff	indf2,tblptrl
  3297  002E84                     	if	1	;There is more than 1 active tblptr byte
  3298  002E84  0E20               	movlw	high __smallconst
  3299  002E86  6EF7               	movwf	tblptrh,c
  3300  002E88                     	endif
  3301  002E88                     	if	0	;tblptru may be non-zero
  3302  002E88                     	endif
  3303  002E88                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3304  002E88  0E00               	movlw	low (__smallconst shr (0+16))
  3305  002E8A  6EF8               	movwf	tblptru,c
  3306  002E8C                     	endif
  3307  002E8C  0008               	tblrd		*
  3308  002E8E  50F5               	movf	tablat,w,c
  3309  002E90  6FB6               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3310  002E92  6BB7               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3311  002E94  51B4               	movf	??_vfpfcnvrt& (0+255),w,b
  3312  002E96  27B6               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3313  002E98  51B5               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3314  002E9A  23B7               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3315  002E9C  51B7               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3316  002E9E  E102               	bnz	l10096
  3317  002EA0  0E1A               	movlw	26
  3318  002EA2  5DB6               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3319  002EA4                     l10096:
  3320                           
  3321                           ; BSR set to: 0
  3322                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 956:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3323  002EA4  0060  F2CB  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3324  002EAA  0060  F2CF  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3325  002EB0  006F FF7C  F0B4    	movff	indf2,??_vfpfcnvrt
  3326  002EB6  0E04               	movlw	4
  3327  002EB8  26DE               	addwf	postinc2,f,c
  3328  002EBA  006F FF7C  F0B5    	movff	indf2,??_vfpfcnvrt+1
  3329  002EC0  0E00               	movlw	0
  3330  002EC2  22DD               	addwfc	postdec2,f,c
  3331  002EC4  0060  F2D3  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3332  002ECA  0060  F2D7  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3333  002ED0  006F FF78  F0C7    	movff	postinc2,vfpfcnvrt@f
  3334  002ED6  006F FF78  F0C8    	movff	postinc2,vfpfcnvrt@f+1
  3335  002EDC  006F FF78  F0C9    	movff	postinc2,vfpfcnvrt@f+2
  3336  002EE2  006F FF78  F0CA    	movff	postinc2,vfpfcnvrt@f+3
  3337                           
  3338                           ; BSR set to: 0
  3339                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 958:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  3340  002EE8  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3341  002EEA  6ED9               	movwf	fsr2l,c
  3342  002EEC  6ADA               	clrf	fsr2h,c
  3343  002EEE  0E02               	movlw	2
  3344  002EF0  26DF               	addwf	indf2,f,c
  3345  002EF2  D783               	goto	l10082
  3346  002EF4                     l10104:
  3347                           
  3348                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1171:         if (*fmt[0] == 
      +                          's' || !strncmp(*fmt, "lls", ((sizeof("lls")/sizeof("lls"[0]))-1))) {
  3349  002EF4  0100               	movlb	0	; () banked
  3350  002EF6  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3351  002EF8  6ED9               	movwf	fsr2l,c
  3352  002EFA  6ADA               	clrf	fsr2h,c
  3353  002EFC  006F FF7F FFF6     	movff	indf2,tblptrl
  3354  002F02                     	if	1	;There is more than 1 active tblptr byte
  3355  002F02  0E20               	movlw	high __smallconst
  3356  002F04  6EF7               	movwf	tblptrh,c
  3357  002F06                     	endif
  3358  002F06                     	if	0	;tblptru may be non-zero
  3359  002F06                     	endif
  3360  002F06                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3361  002F06  0E00               	movlw	low (__smallconst shr (0+16))
  3362  002F08  6EF8               	movwf	tblptru,c
  3363  002F0A                     	endif
  3364  002F0A  0008               	tblrd		*
  3365  002F0C  50F5               	movf	tablat,w,c
  3366  002F0E  0A73               	xorlw	115
  3367  002F10  B4D8               	btfsc	status,2,c
  3368  002F12  D01B               	goto	u11980
  3369                           
  3370                           ; BSR set to: 0
  3371  002F14  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3372  002F16  6ED9               	movwf	fsr2l,c
  3373  002F18  6ADA               	clrf	fsr2h,c
  3374  002F1A  50DF               	movf	indf2,w,c
  3375  002F1C  6FB4               	movwf	??_vfpfcnvrt& (0+255),b
  3376  002F1E  C0B4  F019         	movff	??_vfpfcnvrt,strncmp@_l
  3377  002F22  5019               	movf	strncmp@_l^0,w,c
  3378  002F24  A4D8               	btfss	status,2,c
  3379  002F26  0E20               	movlw	high __smallconst
  3380  002F28  6E1A               	movwf	(strncmp@_l+1)^0,c
  3381  002F2A  0EBA               	movlw	low STR_24
  3382  002F2C  6E1B               	movwf	strncmp@_r^0,c
  3383  002F2E  501B               	movf	strncmp@_r^0,w,c
  3384  002F30  A4D8               	btfss	status,2,c
  3385  002F32  0E20               	movlw	high __smallconst
  3386  002F34  6E1C               	movwf	(strncmp@_r+1)^0,c
  3387  002F36  0E00               	movlw	0
  3388  002F38  6E1E               	movwf	(strncmp@n+1)^0,c
  3389  002F3A  0E03               	movlw	3
  3390  002F3C  6E1D               	movwf	strncmp@n^0,c
  3391  002F3E  ECB5  F020         	call	_strncmp	;wreg free
  3392  002F42  5019               	movf	?_strncmp^0,w,c
  3393  002F44  101A               	iorwf	(?_strncmp+1)^0,w,c
  3394  002F46  A4D8               	btfss	status,2,c
  3395  002F48  D048               	goto	l10122
  3396  002F4A                     u11980:
  3397                           
  3398                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1173:    *fmt += *fmt[0] == '
      +                          s' ? 1 : ((sizeof("lls")/sizeof("lls"[0]))-1);
  3399  002F4A  0100               	movlb	0	; () banked
  3400  002F4C  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3401  002F4E  6ED9               	movwf	fsr2l,c
  3402  002F50  6ADA               	clrf	fsr2h,c
  3403  002F52  006F FF7F FFF6     	movff	indf2,tblptrl
  3404  002F58                     	if	1	;There is more than 1 active tblptr byte
  3405  002F58  0E20               	movlw	high __smallconst
  3406  002F5A  6EF7               	movwf	tblptrh,c
  3407  002F5C                     	endif
  3408  002F5C                     	if	0	;tblptru may be non-zero
  3409  002F5C                     	endif
  3410  002F5C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3411  002F5C  0E00               	movlw	low (__smallconst shr (0+16))
  3412  002F5E  6EF8               	movwf	tblptru,c
  3413  002F60                     	endif
  3414  002F60  0008               	tblrd		*
  3415  002F62  50F5               	movf	tablat,w,c
  3416  002F64  0A73               	xorlw	115
  3417  002F66  B4D8               	btfsc	status,2,c
  3418  002F68  D004               	goto	l10112
  3419                           
  3420                           ; BSR set to: 0
  3421  002F6A  0E00               	movlw	0
  3422  002F6C  6FC5               	movwf	(_vfpfcnvrt$2769+1)& (0+255),b
  3423  002F6E  0E03               	movlw	3
  3424  002F70  D003               	goto	L2
  3425  002F72                     l10112:
  3426                           
  3427                           ; BSR set to: 0
  3428  002F72  0E00               	movlw	0
  3429  002F74  6FC5               	movwf	(_vfpfcnvrt$2769+1)& (0+255),b
  3430  002F76  0E01               	movlw	1
  3431  002F78                     L2:
  3432  002F78  6FC4               	movwf	_vfpfcnvrt$2769& (0+255),b
  3433                           
  3434                           ; BSR set to: 0
  3435  002F7A  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3436  002F7C  6ED9               	movwf	fsr2l,c
  3437  002F7E  6ADA               	clrf	fsr2h,c
  3438  002F80  51C4               	movf	_vfpfcnvrt$2769& (0+255),w,b
  3439  002F82  26DF               	addwf	indf2,f,c
  3440                           
  3441                           ; BSR set to: 0
  3442                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1174:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  3443  002F84  0060  F2CB  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3444  002F8A  0060  F2CF  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3445  002F90  006F FF7C  F0B4    	movff	indf2,??_vfpfcnvrt
  3446  002F96  0E02               	movlw	2
  3447  002F98  26DE               	addwf	postinc2,f,c
  3448  002F9A  006F FF7C  F0B5    	movff	indf2,??_vfpfcnvrt+1
  3449  002FA0  0E00               	movlw	0
  3450  002FA2  22DD               	addwfc	postdec2,f,c
  3451  002FA4  0060  F2D3  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3452  002FAA  0060  F2D7  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3453  002FB0  006F FF78  F0C0    	movff	postinc2,vfpfcnvrt@cp
  3454  002FB6  006F FF74  F0C1    	movff	postdec2,vfpfcnvrt@cp+1
  3455                           
  3456                           ; BSR set to: 0
  3457                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1176:             return stoa
      +                          (fp, cp);
  3458  002FBC  C0AF  F020         	movff	vfpfcnvrt@fp,stoa@fp
  3459  002FC0  C0B0  F021         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  3460  002FC4  C0C0  F022         	movff	vfpfcnvrt@cp,stoa@s
  3461  002FC8  C0C1  F023         	movff	vfpfcnvrt@cp+1,stoa@s+1
  3462  002FCC  ECB7  F022         	call	_stoa	;wreg free
  3463  002FD0  C020  F0AF         	movff	?_stoa,?_vfpfcnvrt
  3464  002FD4  C021  F0B0         	movff	?_stoa+1,?_vfpfcnvrt+1
  3465  002FD8  0012               	return	
  3466  002FDA                     l10122:
  3467                           
  3468                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1204:         if (*fmt[0] == 
      +                          'u') {
  3469  002FDA  0100               	movlb	0	; () banked
  3470  002FDC  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3471  002FDE  6ED9               	movwf	fsr2l,c
  3472  002FE0  6ADA               	clrf	fsr2h,c
  3473  002FE2  006F FF7F FFF6     	movff	indf2,tblptrl
  3474  002FE8                     	if	1	;There is more than 1 active tblptr byte
  3475  002FE8  0E20               	movlw	high __smallconst
  3476  002FEA  6EF7               	movwf	tblptrh,c
  3477  002FEC                     	endif
  3478  002FEC                     	if	0	;tblptru may be non-zero
  3479  002FEC                     	endif
  3480  002FEC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3481  002FEC  0E00               	movlw	low (__smallconst shr (0+16))
  3482  002FEE  6EF8               	movwf	tblptru,c
  3483  002FF0                     	endif
  3484  002FF0  0008               	tblrd		*
  3485  002FF2  50F5               	movf	tablat,w,c
  3486  002FF4  0A75               	xorlw	117
  3487  002FF6  A4D8               	btfss	status,2,c
  3488  002FF8  D045               	goto	l10130
  3489                           
  3490                           ; BSR set to: 0
  3491                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1206:             ++*fmt;
  3492  002FFA  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3493  002FFC  6ED9               	movwf	fsr2l,c
  3494  002FFE  6ADA               	clrf	fsr2h,c
  3495  003000  2ADF               	incf	indf2,f,c
  3496                           
  3497                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1207:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  3498  003002  0060  F2CB  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3499  003008  0060  F2CF  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3500  00300E  006F FF7C  F0B4    	movff	indf2,??_vfpfcnvrt
  3501  003014  0E02               	movlw	2
  3502  003016  26DE               	addwf	postinc2,f,c
  3503  003018  006F FF7C  F0B5    	movff	indf2,??_vfpfcnvrt+1
  3504  00301E  0E00               	movlw	0
  3505  003020  22DD               	addwfc	postdec2,f,c
  3506  003022  0060  F2D3  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3507  003028  0060  F2D7  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3508  00302E  006F FF78  F0B6    	movff	postinc2,??_vfpfcnvrt+2
  3509  003034  006F FF74  F0B7    	movff	postdec2,??_vfpfcnvrt+3
  3510  00303A  C0B6  F0B8         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3511  00303E  C0B7  F0B9         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3512  003042  6BBA               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3513  003044  6BBB               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3514  003046  6BBC               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3515  003048  6BBD               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3516  00304A  6BBE               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3517  00304C  6BBF               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3518                           
  3519                           ; BSR set to: 0
  3520                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1209:             return utoa
      +                          (fp, llu);
  3521  00304E  C0AF  F060         	movff	vfpfcnvrt@fp,utoa@fp
  3522  003052  C0B0  F061         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  3523  003056  C0B8  F062         	movff	vfpfcnvrt@llu,utoa@d
  3524  00305A  C0B9  F063         	movff	vfpfcnvrt@llu+1,utoa@d+1
  3525  00305E  C0BA  F064         	movff	vfpfcnvrt@llu+2,utoa@d+2
  3526  003062  C0BB  F065         	movff	vfpfcnvrt@llu+3,utoa@d+3
  3527  003066  C0BC  F066         	movff	vfpfcnvrt@llu+4,utoa@d+4
  3528  00306A  C0BD  F067         	movff	vfpfcnvrt@llu+5,utoa@d+5
  3529  00306E  C0BE  F068         	movff	vfpfcnvrt@llu+6,utoa@d+6
  3530  003072  C0BF  F069         	movff	vfpfcnvrt@llu+7,utoa@d+7
  3531  003076  EC08  F01F         	call	_utoa	;wreg free
  3532  00307A  C060  F0AF         	movff	?_utoa,?_vfpfcnvrt
  3533  00307E  C061  F0B0         	movff	?_utoa+1,?_vfpfcnvrt+1
  3534  003082  0012               	return	
  3535  003084                     l10130:
  3536                           
  3537                           ; BSR set to: 0
  3538                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1372:         if ((*fmt)[0] =
      +                          = '%') {
  3539  003084  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3540  003086  6ED9               	movwf	fsr2l,c
  3541  003088  6ADA               	clrf	fsr2h,c
  3542  00308A  006F FF7F FFF6     	movff	indf2,tblptrl
  3543  003090                     	if	1	;There is more than 1 active tblptr byte
  3544  003090  0E20               	movlw	high __smallconst
  3545  003092  6EF7               	movwf	tblptrh,c
  3546  003094                     	endif
  3547  003094                     	if	0	;tblptru may be non-zero
  3548  003094                     	endif
  3549  003094                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3550  003094  0E00               	movlw	low (__smallconst shr (0+16))
  3551  003096  6EF8               	movwf	tblptru,c
  3552  003098                     	endif
  3553  003098  0008               	tblrd		*
  3554  00309A  50F5               	movf	tablat,w,c
  3555  00309C  0A25               	xorlw	37
  3556  00309E  A4D8               	btfss	status,2,c
  3557  0030A0  D014               	goto	l10140
  3558                           
  3559                           ; BSR set to: 0
  3560                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1373:             ++*fmt;
  3561  0030A2  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3562  0030A4  6ED9               	movwf	fsr2l,c
  3563  0030A6  6ADA               	clrf	fsr2h,c
  3564  0030A8  2ADF               	incf	indf2,f,c
  3565                           
  3566                           ; BSR set to: 0
  3567                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1374:             fputc((int)
      +                          '%', fp);
  3568  0030AA  0E00               	movlw	0
  3569  0030AC  6E18               	movwf	(fputc@c+1)^0,c
  3570  0030AE  0E25               	movlw	37
  3571  0030B0  6E17               	movwf	fputc@c^0,c
  3572  0030B2  C0AF  F019         	movff	vfpfcnvrt@fp,fputc@fp
  3573  0030B6  C0B0  F01A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3574  0030BA  EC40  F027         	call	_fputc	;wreg free
  3575  0030BE                     l10136:
  3576                           
  3577                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1375:             return 1;
  3578  0030BE  0E00               	movlw	0
  3579  0030C0  0100               	movlb	0	; () banked
  3580  0030C2  6FB0               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3581  0030C4  0E01               	movlw	1
  3582  0030C6  6FAF               	movwf	?_vfpfcnvrt& (0+255),b
  3583  0030C8  0012               	return	
  3584  0030CA                     l10140:
  3585                           
  3586                           ; BSR set to: 0
  3587                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1379:         ++*fmt;
  3588  0030CA  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3589  0030CC  6ED9               	movwf	fsr2l,c
  3590  0030CE  6ADA               	clrf	fsr2h,c
  3591  0030D0  2ADF               	incf	indf2,f,c
  3592                           
  3593                           ; BSR set to: 0
  3594                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1380:         return 0;
  3595  0030D2  0E00               	movlw	0
  3596  0030D4  6FB0               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3597  0030D6  0E00               	movlw	0
  3598  0030D8  6FAF               	movwf	?_vfpfcnvrt& (0+255),b
  3599  0030DA  0012               	return	
  3600  0030DC                     l10146:
  3601                           
  3602                           ; BSR set to: 0
  3603                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1384:     fputc((int)(*fmt)[0
      +                          ], fp);
  3604  0030DC  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3605  0030DE  6ED9               	movwf	fsr2l,c
  3606  0030E0  6ADA               	clrf	fsr2h,c
  3607  0030E2  006F FF7F FFF6     	movff	indf2,tblptrl
  3608  0030E8                     	if	1	;There is more than 1 active tblptr byte
  3609  0030E8  0E20               	movlw	high __smallconst
  3610  0030EA  6EF7               	movwf	tblptrh,c
  3611  0030EC                     	endif
  3612  0030EC                     	if	0	;tblptru may be non-zero
  3613  0030EC                     	endif
  3614  0030EC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3615  0030EC  0E00               	movlw	low (__smallconst shr (0+16))
  3616  0030EE  6EF8               	movwf	tblptru,c
  3617  0030F0                     	endif
  3618  0030F0  0008               	tblrd		*
  3619  0030F2  50F5               	movf	tablat,w,c
  3620  0030F4  6E17               	movwf	fputc@c^0,c
  3621  0030F6  6A18               	clrf	(fputc@c+1)^0,c
  3622  0030F8  C0AF  F019         	movff	vfpfcnvrt@fp,fputc@fp
  3623  0030FC  C0B0  F01A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3624  003100  EC40  F027         	call	_fputc	;wreg free
  3625                           
  3626                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 1385:     ++*fmt;
  3627  003104  0100               	movlb	0	; () banked
  3628  003106  51B1               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3629  003108  6ED9               	movwf	fsr2l,c
  3630  00310A  6ADA               	clrf	fsr2h,c
  3631  00310C  2ADF               	incf	indf2,f,c
  3632  00310E  D7D7               	goto	l10136
  3633  003110                     __end_of_vfpfcnvrt:
  3634                           	callstack 0
  3635                           
  3636 ;; *************** function _utoa *****************
  3637 ;; Defined at:
  3638 ;;		line 615 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  3639 ;; Parameters:    Size  Location     Type
  3640 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  3641 ;;		 -> sprintf@f(11), NULL(0), 
  3642 ;;  d               8    2[BANK0 ] unsigned long long 
  3643 ;; Auto vars:     Size  Location     Type
  3644 ;;  n               8   22[BANK0 ] unsigned long long 
  3645 ;;  i               2   30[BANK0 ] int 
  3646 ;;  w               2   20[BANK0 ] int 
  3647 ;;  p               2   18[BANK0 ] int 
  3648 ;; Return value:  Size  Location     Type
  3649 ;;                  2    0[BANK0 ] int 
  3650 ;; Registers used:
  3651 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3652 ;; Tracked objects:
  3653 ;;		On entry : 3F/0
  3654 ;;		On exit  : 0/0
  3655 ;;		Unchanged: 0/0
  3656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3657 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3658 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3659 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3660 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3661 ;;Total ram usage:       32 bytes
  3662 ;; Hardware stack levels used: 1
  3663 ;; Hardware stack levels required when called: 9
  3664 ;; This function calls:
  3665 ;;		___lodiv
  3666 ;;		___lomod
  3667 ;;		_pad
  3668 ;; This function is called by:
  3669 ;;		_vfpfcnvrt
  3670 ;; This function uses a non-reentrant model
  3671 ;;
  3672                           
  3673                           	psect	text7
  3674  003E10                     __ptext7:
  3675                           	callstack 0
  3676  003E10                     _utoa:
  3677                           	callstack 16
  3678                           
  3679                           ; BSR set to: 0
  3680                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 615: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 616: {
      +                          ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 617:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 618:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 621:     if (!(prec < 0)) {
  3681                           
  3682                           ;incstack = 0
  3683  003E10  AFFA               	btfss	(_prec+1)& (0+255),7,b
  3684                           
  3685                           ; BSR set to: 0
  3686                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 622:         flags &= ~(1 << 
      +                          1);
  3687  003E12  923D               	bcf	_flags^0,1,c
  3688                           
  3689                           ; BSR set to: 0
  3690                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 624:     p = (0 < prec) ? pre
      +                          c : 1;
  3691  003E14  BFFA               	btfsc	(_prec+1)& (0+255),7,b
  3692  003E16  D005               	goto	u11730
  3693  003E18  51FA               	movf	(_prec+1)& (0+255),w,b
  3694  003E1A  E108               	bnz	l1988
  3695  003E1C  05F9               	decf	_prec& (0+255),w,b
  3696  003E1E  B0D8               	btfsc	status,0,c
  3697  003E20  D005               	goto	l1988
  3698  003E22                     u11730:
  3699                           
  3700                           ; BSR set to: 0
  3701  003E22  0E00               	movlw	0
  3702  003E24  6F73               	movwf	(utoa@p+1)& (0+255),b
  3703  003E26  0E01               	movlw	1
  3704  003E28  6F72               	movwf	utoa@p& (0+255),b
  3705  003E2A  D004               	goto	l1990
  3706  003E2C                     l1988:
  3707                           
  3708                           ; BSR set to: 0
  3709  003E2C  C0F9  F072         	movff	_prec,utoa@p
  3710  003E30  C0FA  F073         	movff	_prec+1,utoa@p+1
  3711  003E34                     l1990:
  3712                           
  3713                           ; BSR set to: 0
  3714                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 625:     w = width;
  3715  003E34  C0F7  F074         	movff	_width,utoa@w
  3716  003E38  C0F8  F075         	movff	_width+1,utoa@w+1
  3717                           
  3718                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 628:     n = d;
  3719  003E3C  C062  F076         	movff	utoa@d,utoa@n
  3720  003E40  C063  F077         	movff	utoa@d+1,utoa@n+1
  3721  003E44  C064  F078         	movff	utoa@d+2,utoa@n+2
  3722  003E48  C065  F079         	movff	utoa@d+3,utoa@n+3
  3723  003E4C  C066  F07A         	movff	utoa@d+4,utoa@n+4
  3724  003E50  C067  F07B         	movff	utoa@d+5,utoa@n+5
  3725  003E54  C068  F07C         	movff	utoa@d+6,utoa@n+6
  3726  003E58  C069  F07D         	movff	utoa@d+7,utoa@n+7
  3727                           
  3728                           ; BSR set to: 0
  3729                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 629:     i = sizeof(dbuf) - 1
      +                          ;
  3730  003E5C  0E00               	movlw	0
  3731  003E5E  6F7F               	movwf	(utoa@i+1)& (0+255),b
  3732  003E60  0E4F               	movlw	79
  3733  003E62  6F7E               	movwf	utoa@i& (0+255),b
  3734                           
  3735                           ; BSR set to: 0
  3736                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 630:     dbuf[i] = '\0';
  3737  003E64  0E00               	movlw	0
  3738  003E66  0101               	movlb	1	; () banked
  3739  003E68  6FE7               	movwf	(_dbuf+79)& (0+255),b
  3740                           
  3741                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 631:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  3742  003E6A  D076               	goto	l9942
  3743  003E6C                     l9932:
  3744                           
  3745                           ; BSR set to: 0
  3746                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 632:         --i;
  3747  003E6C  077E               	decf	utoa@i& (0+255),f,b
  3748  003E6E  A0D8               	btfss	status,0,c
  3749  003E70  077F               	decf	(utoa@i+1)& (0+255),f,b
  3750                           
  3751                           ; BSR set to: 0
  3752                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 633:         dbuf[i] = '0' + 
      +                          (n % 10);
  3753  003E72  0E98               	movlw	low _dbuf
  3754  003E74  257E               	addwf	utoa@i& (0+255),w,b
  3755  003E76  6ED9               	movwf	fsr2l,c
  3756  003E78  0E01               	movlw	high _dbuf
  3757  003E7A  217F               	addwfc	(utoa@i+1)& (0+255),w,b
  3758  003E7C  6EDA               	movwf	fsr2h,c
  3759  003E7E  C076  F015         	movff	utoa@n,___lomod@dividend
  3760  003E82  C077  F016         	movff	utoa@n+1,___lomod@dividend+1
  3761  003E86  C078  F017         	movff	utoa@n+2,___lomod@dividend+2
  3762  003E8A  C079  F018         	movff	utoa@n+3,___lomod@dividend+3
  3763  003E8E  C07A  F019         	movff	utoa@n+4,___lomod@dividend+4
  3764  003E92  C07B  F01A         	movff	utoa@n+5,___lomod@dividend+5
  3765  003E96  C07C  F01B         	movff	utoa@n+6,___lomod@dividend+6
  3766  003E9A  C07D  F01C         	movff	utoa@n+7,___lomod@dividend+7
  3767  003E9E  0E0A               	movlw	10
  3768  003EA0  6E1D               	movwf	___lomod@divisor^0,c
  3769  003EA2  0E00               	movlw	0
  3770  003EA4  6E1E               	movwf	(___lomod@divisor+1)^0,c
  3771  003EA6  0E00               	movlw	0
  3772  003EA8  6E1F               	movwf	(___lomod@divisor+2)^0,c
  3773  003EAA  0E00               	movlw	0
  3774  003EAC  6E20               	movwf	(___lomod@divisor+3)^0,c
  3775  003EAE  0E00               	movlw	0
  3776  003EB0  6E21               	movwf	(___lomod@divisor+4)^0,c
  3777  003EB2  0E00               	movlw	0
  3778  003EB4  6E22               	movwf	(___lomod@divisor+5)^0,c
  3779  003EB6  0E00               	movlw	0
  3780  003EB8  6E23               	movwf	(___lomod@divisor+6)^0,c
  3781  003EBA  0E00               	movlw	0
  3782  003EBC  6E24               	movwf	(___lomod@divisor+7)^0,c
  3783  003EBE  EC9A  F027         	call	___lomod	;wreg free
  3784  003EC2  C015  F06A         	movff	?___lomod,??_utoa
  3785  003EC6  C016  F06B         	movff	?___lomod+1,??_utoa+1
  3786  003ECA  C017  F06C         	movff	?___lomod+2,??_utoa+2
  3787  003ECE  C018  F06D         	movff	?___lomod+3,??_utoa+3
  3788  003ED2  C019  F06E         	movff	?___lomod+4,??_utoa+4
  3789  003ED6  C01A  F06F         	movff	?___lomod+5,??_utoa+5
  3790  003EDA  C01B  F070         	movff	?___lomod+6,??_utoa+6
  3791  003EDE  C01C  F071         	movff	?___lomod+7,??_utoa+7
  3792  003EE2  516A               	movf	??_utoa& (0+255),w,b
  3793  003EE4  0F30               	addlw	48
  3794  003EE6  6EDF               	movwf	indf2,c
  3795                           
  3796                           ; BSR set to: 0
  3797                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 634:         --p;
  3798  003EE8  0772               	decf	utoa@p& (0+255),f,b
  3799  003EEA  A0D8               	btfss	status,0,c
  3800  003EEC  0773               	decf	(utoa@p+1)& (0+255),f,b
  3801                           
  3802                           ; BSR set to: 0
  3803                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 635:         --w;
  3804  003EEE  0774               	decf	utoa@w& (0+255),f,b
  3805  003EF0  A0D8               	btfss	status,0,c
  3806  003EF2  0775               	decf	(utoa@w+1)& (0+255),f,b
  3807                           
  3808                           ; BSR set to: 0
  3809                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 636:         n = n / 10;
  3810  003EF4  C076  F015         	movff	utoa@n,___lodiv@dividend
  3811  003EF8  C077  F016         	movff	utoa@n+1,___lodiv@dividend+1
  3812  003EFC  C078  F017         	movff	utoa@n+2,___lodiv@dividend+2
  3813  003F00  C079  F018         	movff	utoa@n+3,___lodiv@dividend+3
  3814  003F04  C07A  F019         	movff	utoa@n+4,___lodiv@dividend+4
  3815  003F08  C07B  F01A         	movff	utoa@n+5,___lodiv@dividend+5
  3816  003F0C  C07C  F01B         	movff	utoa@n+6,___lodiv@dividend+6
  3817  003F10  C07D  F01C         	movff	utoa@n+7,___lodiv@dividend+7
  3818  003F14  0E0A               	movlw	10
  3819  003F16  6E1D               	movwf	___lodiv@divisor^0,c
  3820  003F18  0E00               	movlw	0
  3821  003F1A  6E1E               	movwf	(___lodiv@divisor+1)^0,c
  3822  003F1C  0E00               	movlw	0
  3823  003F1E  6E1F               	movwf	(___lodiv@divisor+2)^0,c
  3824  003F20  0E00               	movlw	0
  3825  003F22  6E20               	movwf	(___lodiv@divisor+3)^0,c
  3826  003F24  0E00               	movlw	0
  3827  003F26  6E21               	movwf	(___lodiv@divisor+4)^0,c
  3828  003F28  0E00               	movlw	0
  3829  003F2A  6E22               	movwf	(___lodiv@divisor+5)^0,c
  3830  003F2C  0E00               	movlw	0
  3831  003F2E  6E23               	movwf	(___lodiv@divisor+6)^0,c
  3832  003F30  0E00               	movlw	0
  3833  003F32  6E24               	movwf	(___lodiv@divisor+7)^0,c
  3834  003F34  ECFC  F024         	call	___lodiv	;wreg free
  3835  003F38  C015  F076         	movff	?___lodiv,utoa@n
  3836  003F3C  C016  F077         	movff	?___lodiv+1,utoa@n+1
  3837  003F40  C017  F078         	movff	?___lodiv+2,utoa@n+2
  3838  003F44  C018  F079         	movff	?___lodiv+3,utoa@n+3
  3839  003F48  C019  F07A         	movff	?___lodiv+4,utoa@n+4
  3840  003F4C  C01A  F07B         	movff	?___lodiv+5,utoa@n+5
  3841  003F50  C01B  F07C         	movff	?___lodiv+6,utoa@n+6
  3842  003F54  C01C  F07D         	movff	?___lodiv+7,utoa@n+7
  3843  003F58                     l9942:
  3844                           
  3845                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 631:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  3846  003F58  0100               	movlb	0	; () banked
  3847  003F5A  517E               	movf	utoa@i& (0+255),w,b
  3848  003F5C  117F               	iorwf	(utoa@i+1)& (0+255),w,b
  3849  003F5E  B4D8               	btfsc	status,2,c
  3850  003F60  D01A               	goto	u11780
  3851                           
  3852                           ; BSR set to: 0
  3853  003F62  5176               	movf	utoa@n& (0+255),w,b
  3854  003F64  1177               	iorwf	(utoa@n+1)& (0+255),w,b
  3855  003F66  1178               	iorwf	(utoa@n+2)& (0+255),w,b
  3856  003F68  1179               	iorwf	(utoa@n+3)& (0+255),w,b
  3857  003F6A  117A               	iorwf	(utoa@n+4)& (0+255),w,b
  3858  003F6C  117B               	iorwf	(utoa@n+5)& (0+255),w,b
  3859  003F6E  117C               	iorwf	(utoa@n+6)& (0+255),w,b
  3860  003F70  117D               	iorwf	(utoa@n+7)& (0+255),w,b
  3861  003F72  A4D8               	btfss	status,2,c
  3862  003F74  D77B               	goto	l9932
  3863                           
  3864                           ; BSR set to: 0
  3865  003F76  BF73               	btfsc	(utoa@p+1)& (0+255),7,b
  3866  003F78  D005               	goto	u11760
  3867  003F7A  5173               	movf	(utoa@p+1)& (0+255),w,b
  3868  003F7C  E102               	bnz	u11761
  3869  003F7E  0572               	decf	utoa@p& (0+255),w,b
  3870  003F80  B0D8               	btfsc	status,0,c
  3871  003F82                     u11761:
  3872  003F82  D774               	goto	l9932
  3873  003F84                     u11760:
  3874                           
  3875                           ; BSR set to: 0
  3876  003F84  BF75               	btfsc	(utoa@w+1)& (0+255),7,b
  3877  003F86  D007               	goto	u11780
  3878  003F88  5175               	movf	(utoa@w+1)& (0+255),w,b
  3879  003F8A  E103               	bnz	u11770
  3880  003F8C  0574               	decf	utoa@w& (0+255),w,b
  3881  003F8E  A0D8               	btfss	status,0,c
  3882  003F90  D002               	goto	u11780
  3883  003F92                     u11770:
  3884                           
  3885                           ; BSR set to: 0
  3886  003F92  B23D               	btfsc	_flags^0,1,c
  3887  003F94  D76B               	goto	l9932
  3888  003F96                     u11780:
  3889                           
  3890                           ; BSR set to: 0
  3891                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 640:     return pad(fp, &dbuf
      +                          [i], w);
  3892  003F96  C060  F029         	movff	utoa@fp,pad@fp
  3893  003F9A  C061  F02A         	movff	utoa@fp+1,pad@fp+1
  3894  003F9E  0E98               	movlw	low _dbuf
  3895  003FA0  257E               	addwf	utoa@i& (0+255),w,b
  3896  003FA2  6E2B               	movwf	pad@buf^0,c
  3897  003FA4  0E01               	movlw	high _dbuf
  3898  003FA6  217F               	addwfc	(utoa@i+1)& (0+255),w,b
  3899  003FA8  6E2C               	movwf	(pad@buf+1)^0,c
  3900  003FAA  C074  F02D         	movff	utoa@w,pad@p
  3901  003FAE  C075  F02E         	movff	utoa@w+1,pad@p+1
  3902  003FB2  EC90  F028         	call	_pad	;wreg free
  3903  003FB6  C029  F060         	movff	?_pad,?_utoa
  3904  003FBA  C02A  F061         	movff	?_pad+1,?_utoa+1
  3905  003FBE  0012               	return		;funcret
  3906  003FC0                     __end_of_utoa:
  3907                           	callstack 0
  3908                           
  3909 ;; *************** function ___lomod *****************
  3910 ;; Defined at:
  3911 ;;		line 9 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/lomod.c"
  3912 ;; Parameters:    Size  Location     Type
  3913 ;;  dividend        8   20[COMRAM] unsigned long long 
  3914 ;;  divisor         8   28[COMRAM] unsigned long long 
  3915 ;; Auto vars:     Size  Location     Type
  3916 ;;  counter         1   36[COMRAM] unsigned char 
  3917 ;; Return value:  Size  Location     Type
  3918 ;;                  8   20[COMRAM] unsigned long long 
  3919 ;; Registers used:
  3920 ;;		wreg, status,2, status,0
  3921 ;; Tracked objects:
  3922 ;;		On entry : 3F/0
  3923 ;;		On exit  : 3F/0
  3924 ;;		Unchanged: 3F/0
  3925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3926 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3927 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3929 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3930 ;;Total ram usage:       17 bytes
  3931 ;; Hardware stack levels used: 1
  3932 ;; Hardware stack levels required when called: 4
  3933 ;; This function calls:
  3934 ;;		Nothing
  3935 ;; This function is called by:
  3936 ;;		_utoa
  3937 ;; This function uses a non-reentrant model
  3938 ;;
  3939                           
  3940                           	psect	text8
  3941  004F34                     __ptext8:
  3942                           	callstack 0
  3943  004F34                     ___lomod:
  3944                           	callstack 20
  3945                           
  3946                           ; BSR set to: 0
  3947                           
  3948                           ;incstack = 0
  3949  004F34  501D               	movf	___lomod@divisor^0,w,c
  3950  004F36  101E               	iorwf	(___lomod@divisor+1)^0,w,c
  3951  004F38  101F               	iorwf	(___lomod@divisor+2)^0,w,c
  3952  004F3A  1020               	iorwf	(___lomod@divisor+3)^0,w,c
  3953  004F3C  1021               	iorwf	(___lomod@divisor+4)^0,w,c
  3954  004F3E  1022               	iorwf	(___lomod@divisor+5)^0,w,c
  3955  004F40  1023               	iorwf	(___lomod@divisor+6)^0,w,c
  3956  004F42  1024               	iorwf	(___lomod@divisor+7)^0,w,c
  3957  004F44  B4D8               	btfsc	status,2,c
  3958  004F46  D03C               	goto	l1587
  3959                           
  3960                           ; BSR set to: 0
  3961  004F48  0E01               	movlw	1
  3962  004F4A  6E25               	movwf	___lomod@counter^0,c
  3963  004F4C  D00A               	goto	l9440
  3964  004F4E                     l9438:
  3965                           
  3966                           ; BSR set to: 0
  3967  004F4E  90D8               	bcf	status,0,c
  3968  004F50  361D               	rlcf	___lomod@divisor^0,f,c
  3969  004F52  361E               	rlcf	(___lomod@divisor+1)^0,f,c
  3970  004F54  361F               	rlcf	(___lomod@divisor+2)^0,f,c
  3971  004F56  3620               	rlcf	(___lomod@divisor+3)^0,f,c
  3972  004F58  3621               	rlcf	(___lomod@divisor+4)^0,f,c
  3973  004F5A  3622               	rlcf	(___lomod@divisor+5)^0,f,c
  3974  004F5C  3623               	rlcf	(___lomod@divisor+6)^0,f,c
  3975  004F5E  3624               	rlcf	(___lomod@divisor+7)^0,f,c
  3976  004F60  2A25               	incf	___lomod@counter^0,f,c
  3977  004F62                     l9440:
  3978                           
  3979                           ; BSR set to: 0
  3980  004F62  AE24               	btfss	(___lomod@divisor+7)^0,7,c
  3981  004F64  D7F4               	goto	l9438
  3982  004F66                     u10740:
  3983                           
  3984                           ; BSR set to: 0
  3985  004F66  501D               	movf	___lomod@divisor^0,w,c
  3986  004F68  5C15               	subwf	___lomod@dividend^0,w,c
  3987  004F6A  501E               	movf	(___lomod@divisor+1)^0,w,c
  3988  004F6C  5816               	subwfb	(___lomod@dividend+1)^0,w,c
  3989  004F6E  501F               	movf	(___lomod@divisor+2)^0,w,c
  3990  004F70  5817               	subwfb	(___lomod@dividend+2)^0,w,c
  3991  004F72  5020               	movf	(___lomod@divisor+3)^0,w,c
  3992  004F74  5818               	subwfb	(___lomod@dividend+3)^0,w,c
  3993  004F76  5021               	movf	(___lomod@divisor+4)^0,w,c
  3994  004F78  5819               	subwfb	(___lomod@dividend+4)^0,w,c
  3995  004F7A  5022               	movf	(___lomod@divisor+5)^0,w,c
  3996  004F7C  581A               	subwfb	(___lomod@dividend+5)^0,w,c
  3997  004F7E  5023               	movf	(___lomod@divisor+6)^0,w,c
  3998  004F80  581B               	subwfb	(___lomod@dividend+6)^0,w,c
  3999  004F82  5024               	movf	(___lomod@divisor+7)^0,w,c
  4000  004F84  581C               	subwfb	(___lomod@dividend+7)^0,w,c
  4001  004F86  A0D8               	btfss	status,0,c
  4002  004F88  D010               	goto	l9446
  4003                           
  4004                           ; BSR set to: 0
  4005  004F8A  501D               	movf	___lomod@divisor^0,w,c
  4006  004F8C  5E15               	subwf	___lomod@dividend^0,f,c
  4007  004F8E  501E               	movf	(___lomod@divisor+1)^0,w,c
  4008  004F90  5A16               	subwfb	(___lomod@dividend+1)^0,f,c
  4009  004F92  501F               	movf	(___lomod@divisor+2)^0,w,c
  4010  004F94  5A17               	subwfb	(___lomod@dividend+2)^0,f,c
  4011  004F96  5020               	movf	(___lomod@divisor+3)^0,w,c
  4012  004F98  5A18               	subwfb	(___lomod@dividend+3)^0,f,c
  4013  004F9A  5021               	movf	(___lomod@divisor+4)^0,w,c
  4014  004F9C  5A19               	subwfb	(___lomod@dividend+4)^0,f,c
  4015  004F9E  5022               	movf	(___lomod@divisor+5)^0,w,c
  4016  004FA0  5A1A               	subwfb	(___lomod@dividend+5)^0,f,c
  4017  004FA2  5023               	movf	(___lomod@divisor+6)^0,w,c
  4018  004FA4  5A1B               	subwfb	(___lomod@dividend+6)^0,f,c
  4019  004FA6  5024               	movf	(___lomod@divisor+7)^0,w,c
  4020  004FA8  5A1C               	subwfb	(___lomod@dividend+7)^0,f,c
  4021  004FAA                     l9446:
  4022                           
  4023                           ; BSR set to: 0
  4024  004FAA  90D8               	bcf	status,0,c
  4025  004FAC  3224               	rrcf	(___lomod@divisor+7)^0,f,c
  4026  004FAE  3223               	rrcf	(___lomod@divisor+6)^0,f,c
  4027  004FB0  3222               	rrcf	(___lomod@divisor+5)^0,f,c
  4028  004FB2  3221               	rrcf	(___lomod@divisor+4)^0,f,c
  4029  004FB4  3220               	rrcf	(___lomod@divisor+3)^0,f,c
  4030  004FB6  321F               	rrcf	(___lomod@divisor+2)^0,f,c
  4031  004FB8  321E               	rrcf	(___lomod@divisor+1)^0,f,c
  4032  004FBA  321D               	rrcf	___lomod@divisor^0,f,c
  4033                           
  4034                           ; BSR set to: 0
  4035  004FBC  2E25               	decfsz	___lomod@counter^0,f,c
  4036  004FBE  D7D3               	goto	u10740
  4037  004FC0                     l1587:
  4038                           
  4039                           ; BSR set to: 0
  4040  004FC0  C015  F015         	movff	___lomod@dividend,?___lomod
  4041  004FC4  C016  F016         	movff	___lomod@dividend+1,?___lomod+1
  4042  004FC8  C017  F017         	movff	___lomod@dividend+2,?___lomod+2
  4043  004FCC  C018  F018         	movff	___lomod@dividend+3,?___lomod+3
  4044  004FD0  C019  F019         	movff	___lomod@dividend+4,?___lomod+4
  4045  004FD4  C01A  F01A         	movff	___lomod@dividend+5,?___lomod+5
  4046  004FD8  C01B  F01B         	movff	___lomod@dividend+6,?___lomod+6
  4047  004FDC  C01C  F01C         	movff	___lomod@dividend+7,?___lomod+7
  4048                           
  4049                           ; BSR set to: 0
  4050  004FE0  0012               	return		;funcret
  4051  004FE2                     __end_of___lomod:
  4052                           	callstack 0
  4053                           
  4054 ;; *************** function ___lodiv *****************
  4055 ;; Defined at:
  4056 ;;		line 9 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/lodiv.c"
  4057 ;; Parameters:    Size  Location     Type
  4058 ;;  dividend        8   20[COMRAM] unsigned long long 
  4059 ;;  divisor         8   28[COMRAM] unsigned long long 
  4060 ;; Auto vars:     Size  Location     Type
  4061 ;;  quotient        8   36[COMRAM] unsigned long long 
  4062 ;;  counter         1   44[COMRAM] unsigned char 
  4063 ;; Return value:  Size  Location     Type
  4064 ;;                  8   20[COMRAM] unsigned long long 
  4065 ;; Registers used:
  4066 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4067 ;; Tracked objects:
  4068 ;;		On entry : 3F/0
  4069 ;;		On exit  : 3F/0
  4070 ;;		Unchanged: 3F/0
  4071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4072 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4073 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4075 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4076 ;;Total ram usage:       25 bytes
  4077 ;; Hardware stack levels used: 1
  4078 ;; Hardware stack levels required when called: 4
  4079 ;; This function calls:
  4080 ;;		Nothing
  4081 ;; This function is called by:
  4082 ;;		_utoa
  4083 ;; This function uses a non-reentrant model
  4084 ;;
  4085                           
  4086                           	psect	text9
  4087  0049F8                     __ptext9:
  4088                           	callstack 0
  4089  0049F8                     ___lodiv:
  4090                           	callstack 20
  4091                           
  4092                           ; BSR set to: 0
  4093                           
  4094                           ; BSR set to: 0
  4095                           ;incstack = 0
  4096  0049F8  EE20  F025         	lfsr	2,___lodiv@quotient
  4097  0049FC  0E07               	movlw	7
  4098  0049FE                     u10691:
  4099  0049FE  6ADE               	clrf	postinc2,c
  4100  004A00  06E8               	decf	wreg,f,c
  4101  004A02  E2FD               	bc	u10691
  4102                           
  4103                           ; BSR set to: 0
  4104  004A04  501D               	movf	___lodiv@divisor^0,w,c
  4105  004A06  101E               	iorwf	(___lodiv@divisor+1)^0,w,c
  4106  004A08  101F               	iorwf	(___lodiv@divisor+2)^0,w,c
  4107  004A0A  1020               	iorwf	(___lodiv@divisor+3)^0,w,c
  4108  004A0C  1021               	iorwf	(___lodiv@divisor+4)^0,w,c
  4109  004A0E  1022               	iorwf	(___lodiv@divisor+5)^0,w,c
  4110  004A10  1023               	iorwf	(___lodiv@divisor+6)^0,w,c
  4111  004A12  1024               	iorwf	(___lodiv@divisor+7)^0,w,c
  4112  004A14  B4D8               	btfsc	status,2,c
  4113  004A16  D046               	goto	l1577
  4114                           
  4115                           ; BSR set to: 0
  4116  004A18  0E01               	movlw	1
  4117  004A1A  6E2D               	movwf	___lodiv@counter^0,c
  4118  004A1C  D00A               	goto	l9420
  4119  004A1E                     l9418:
  4120                           
  4121                           ; BSR set to: 0
  4122  004A1E  90D8               	bcf	status,0,c
  4123  004A20  361D               	rlcf	___lodiv@divisor^0,f,c
  4124  004A22  361E               	rlcf	(___lodiv@divisor+1)^0,f,c
  4125  004A24  361F               	rlcf	(___lodiv@divisor+2)^0,f,c
  4126  004A26  3620               	rlcf	(___lodiv@divisor+3)^0,f,c
  4127  004A28  3621               	rlcf	(___lodiv@divisor+4)^0,f,c
  4128  004A2A  3622               	rlcf	(___lodiv@divisor+5)^0,f,c
  4129  004A2C  3623               	rlcf	(___lodiv@divisor+6)^0,f,c
  4130  004A2E  3624               	rlcf	(___lodiv@divisor+7)^0,f,c
  4131  004A30  2A2D               	incf	___lodiv@counter^0,f,c
  4132  004A32                     l9420:
  4133                           
  4134                           ; BSR set to: 0
  4135  004A32  AE24               	btfss	(___lodiv@divisor+7)^0,7,c
  4136  004A34  D7F4               	goto	l9418
  4137  004A36                     u10710:
  4138                           
  4139                           ; BSR set to: 0
  4140  004A36  90D8               	bcf	status,0,c
  4141  004A38  3625               	rlcf	___lodiv@quotient^0,f,c
  4142  004A3A  3626               	rlcf	(___lodiv@quotient+1)^0,f,c
  4143  004A3C  3627               	rlcf	(___lodiv@quotient+2)^0,f,c
  4144  004A3E  3628               	rlcf	(___lodiv@quotient+3)^0,f,c
  4145  004A40  3629               	rlcf	(___lodiv@quotient+4)^0,f,c
  4146  004A42  362A               	rlcf	(___lodiv@quotient+5)^0,f,c
  4147  004A44  362B               	rlcf	(___lodiv@quotient+6)^0,f,c
  4148  004A46  362C               	rlcf	(___lodiv@quotient+7)^0,f,c
  4149                           
  4150                           ; BSR set to: 0
  4151  004A48  501D               	movf	___lodiv@divisor^0,w,c
  4152  004A4A  5C15               	subwf	___lodiv@dividend^0,w,c
  4153  004A4C  501E               	movf	(___lodiv@divisor+1)^0,w,c
  4154  004A4E  5816               	subwfb	(___lodiv@dividend+1)^0,w,c
  4155  004A50  501F               	movf	(___lodiv@divisor+2)^0,w,c
  4156  004A52  5817               	subwfb	(___lodiv@dividend+2)^0,w,c
  4157  004A54  5020               	movf	(___lodiv@divisor+3)^0,w,c
  4158  004A56  5818               	subwfb	(___lodiv@dividend+3)^0,w,c
  4159  004A58  5021               	movf	(___lodiv@divisor+4)^0,w,c
  4160  004A5A  5819               	subwfb	(___lodiv@dividend+4)^0,w,c
  4161  004A5C  5022               	movf	(___lodiv@divisor+5)^0,w,c
  4162  004A5E  581A               	subwfb	(___lodiv@dividend+5)^0,w,c
  4163  004A60  5023               	movf	(___lodiv@divisor+6)^0,w,c
  4164  004A62  581B               	subwfb	(___lodiv@dividend+6)^0,w,c
  4165  004A64  5024               	movf	(___lodiv@divisor+7)^0,w,c
  4166  004A66  581C               	subwfb	(___lodiv@dividend+7)^0,w,c
  4167  004A68  A0D8               	btfss	status,0,c
  4168  004A6A  D011               	goto	l9430
  4169                           
  4170                           ; BSR set to: 0
  4171  004A6C  501D               	movf	___lodiv@divisor^0,w,c
  4172  004A6E  5E15               	subwf	___lodiv@dividend^0,f,c
  4173  004A70  501E               	movf	(___lodiv@divisor+1)^0,w,c
  4174  004A72  5A16               	subwfb	(___lodiv@dividend+1)^0,f,c
  4175  004A74  501F               	movf	(___lodiv@divisor+2)^0,w,c
  4176  004A76  5A17               	subwfb	(___lodiv@dividend+2)^0,f,c
  4177  004A78  5020               	movf	(___lodiv@divisor+3)^0,w,c
  4178  004A7A  5A18               	subwfb	(___lodiv@dividend+3)^0,f,c
  4179  004A7C  5021               	movf	(___lodiv@divisor+4)^0,w,c
  4180  004A7E  5A19               	subwfb	(___lodiv@dividend+4)^0,f,c
  4181  004A80  5022               	movf	(___lodiv@divisor+5)^0,w,c
  4182  004A82  5A1A               	subwfb	(___lodiv@dividend+5)^0,f,c
  4183  004A84  5023               	movf	(___lodiv@divisor+6)^0,w,c
  4184  004A86  5A1B               	subwfb	(___lodiv@dividend+6)^0,f,c
  4185  004A88  5024               	movf	(___lodiv@divisor+7)^0,w,c
  4186  004A8A  5A1C               	subwfb	(___lodiv@dividend+7)^0,f,c
  4187                           
  4188                           ; BSR set to: 0
  4189  004A8C  8025               	bsf	___lodiv@quotient^0,0,c
  4190  004A8E                     l9430:
  4191                           
  4192                           ; BSR set to: 0
  4193  004A8E  90D8               	bcf	status,0,c
  4194  004A90  3224               	rrcf	(___lodiv@divisor+7)^0,f,c
  4195  004A92  3223               	rrcf	(___lodiv@divisor+6)^0,f,c
  4196  004A94  3222               	rrcf	(___lodiv@divisor+5)^0,f,c
  4197  004A96  3221               	rrcf	(___lodiv@divisor+4)^0,f,c
  4198  004A98  3220               	rrcf	(___lodiv@divisor+3)^0,f,c
  4199  004A9A  321F               	rrcf	(___lodiv@divisor+2)^0,f,c
  4200  004A9C  321E               	rrcf	(___lodiv@divisor+1)^0,f,c
  4201  004A9E  321D               	rrcf	___lodiv@divisor^0,f,c
  4202                           
  4203                           ; BSR set to: 0
  4204  004AA0  2E2D               	decfsz	___lodiv@counter^0,f,c
  4205  004AA2  D7C9               	goto	u10710
  4206  004AA4                     l1577:
  4207                           
  4208                           ; BSR set to: 0
  4209  004AA4  C025  F015         	movff	___lodiv@quotient,?___lodiv
  4210  004AA8  C026  F016         	movff	___lodiv@quotient+1,?___lodiv+1
  4211  004AAC  C027  F017         	movff	___lodiv@quotient+2,?___lodiv+2
  4212  004AB0  C028  F018         	movff	___lodiv@quotient+3,?___lodiv+3
  4213  004AB4  C029  F019         	movff	___lodiv@quotient+4,?___lodiv+4
  4214  004AB8  C02A  F01A         	movff	___lodiv@quotient+5,?___lodiv+5
  4215  004ABC  C02B  F01B         	movff	___lodiv@quotient+6,?___lodiv+6
  4216  004AC0  C02C  F01C         	movff	___lodiv@quotient+7,?___lodiv+7
  4217                           
  4218                           ; BSR set to: 0
  4219  004AC4  0012               	return		;funcret
  4220  004AC6                     __end_of___lodiv:
  4221                           	callstack 0
  4222                           
  4223 ;; *************** function _stoa *****************
  4224 ;; Defined at:
  4225 ;;		line 568 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  4226 ;; Parameters:    Size  Location     Type
  4227 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  4228 ;;		 -> sprintf@f(11), NULL(0), 
  4229 ;;  s               2   33[COMRAM] PTR unsigned char 
  4230 ;;		 -> ?_printf(2), ?_sprintf(2), STR_2(9), STR_1(12), 
  4231 ;; Auto vars:     Size  Location     Type
  4232 ;;  nuls            7   36[COMRAM] unsigned char [7]
  4233 ;;  l               2   51[COMRAM] int 
  4234 ;;  p               2   49[COMRAM] int 
  4235 ;;  cp              2   47[COMRAM] PTR unsigned char 
  4236 ;;		 -> ?_printf(2), stoa@nuls(7), ?_sprintf(2), STR_2(9), 
  4237 ;;		 -> STR_1(12), 
  4238 ;;  w               2   45[COMRAM] int 
  4239 ;;  i               2   43[COMRAM] int 
  4240 ;; Return value:  Size  Location     Type
  4241 ;;                  2   31[COMRAM] int 
  4242 ;; Registers used:
  4243 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4244 ;; Tracked objects:
  4245 ;;		On entry : 3F/0
  4246 ;;		On exit  : 0/0
  4247 ;;		Unchanged: 0/0
  4248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4249 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4250 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4251 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4252 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4253 ;;Total ram usage:       22 bytes
  4254 ;; Hardware stack levels used: 1
  4255 ;; Hardware stack levels required when called: 7
  4256 ;; This function calls:
  4257 ;;		_fputc
  4258 ;;		_strlen
  4259 ;; This function is called by:
  4260 ;;		_vfpfcnvrt
  4261 ;; This function uses a non-reentrant model
  4262 ;;
  4263                           
  4264                           	psect	text10
  4265  00456E                     __ptext10:
  4266                           	callstack 0
  4267  00456E                     _stoa:
  4268                           	callstack 18
  4269                           
  4270                           ; BSR set to: 0
  4271                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 568: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 569: {;/opt/microch
      +                          ip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 570:     char *cp, nuls[] = "(null)";
  4272                           
  4273                           ; BSR set to: 0
  4274                           ;incstack = 0
  4275  00456E  EE20  F1E8         	lfsr	2,stoa@F1164
  4276  004572  EE10  F025         	lfsr	1,stoa@nuls
  4277  004576  0E06               	movlw	6
  4278  004578                     u11621:
  4279  004578  006F FF6F FFE3     	movff	plusw2,plusw1
  4280  00457E  06E8               	decf	wreg,f,c
  4281  004580  E2FB               	bc	u11621
  4282                           
  4283                           ; BSR set to: 0
  4284                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 571:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 574:     cp = s;
  4285  004582  C022  F030         	movff	stoa@s,stoa@cp
  4286  004586  C023  F031         	movff	stoa@s+1,stoa@cp+1
  4287                           
  4288                           ; BSR set to: 0
  4289                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 575:     if (!cp) {
  4290  00458A  5030               	movf	stoa@cp^0,w,c
  4291  00458C  1031               	iorwf	(stoa@cp+1)^0,w,c
  4292  00458E  A4D8               	btfss	status,2,c
  4293  004590  D003               	goto	l9886
  4294                           
  4295                           ; BSR set to: 0
  4296                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 576:         cp = nuls;
  4297  004592  0E25               	movlw	low stoa@nuls
  4298  004594  6E30               	movwf	stoa@cp^0,c
  4299  004596  6A31               	clrf	(stoa@cp+1)^0,c
  4300  004598                     l9886:
  4301                           
  4302                           ; BSR set to: 0
  4303                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 580:     l = (int)strlen(cp);
  4304  004598  C030  F015         	movff	stoa@cp,strlen@s
  4305  00459C  C031  F016         	movff	stoa@cp+1,strlen@s+1
  4306  0045A0  EC19  F02B         	call	_strlen	;wreg free
  4307  0045A4  C015  F034         	movff	?_strlen,stoa@l
  4308  0045A8  C016  F035         	movff	?_strlen+1,stoa@l+1
  4309                           
  4310                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 581:     p = prec;
  4311  0045AC  C0F9  F032         	movff	_prec,stoa@p
  4312  0045B0  C0FA  F033         	movff	_prec+1,stoa@p+1
  4313                           
  4314                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 582:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  4315  0045B4  BE33               	btfsc	(stoa@p+1)^0,7,c
  4316  0045B6  D00E               	goto	l1969
  4317  0045B8  5034               	movf	stoa@l^0,w,c
  4318  0045BA  5C32               	subwf	stoa@p^0,w,c
  4319  0045BC  5033               	movf	(stoa@p+1)^0,w,c
  4320  0045BE  0A80               	xorlw	128
  4321  0045C0  6E24               	movwf	??_stoa^0,c
  4322  0045C2  5035               	movf	(stoa@l+1)^0,w,c
  4323  0045C4  0A80               	xorlw	128
  4324  0045C6  5824               	subwfb	??_stoa^0,w,c
  4325  0045C8  B0D8               	btfsc	status,0,c
  4326  0045CA  D004               	goto	l1969
  4327  0045CC  C032  F034         	movff	stoa@p,stoa@l
  4328  0045D0  C033  F035         	movff	stoa@p+1,stoa@l+1
  4329  0045D4                     l1969:
  4330                           
  4331                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 583:     p = l;
  4332  0045D4  C034  F032         	movff	stoa@l,stoa@p
  4333  0045D8  C035  F033         	movff	stoa@l+1,stoa@p+1
  4334                           
  4335                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 584:     w = width;
  4336  0045DC  C0F7  F02E         	movff	_width,stoa@w
  4337  0045E0  C0F8  F02F         	movff	_width+1,stoa@w+1
  4338                           
  4339                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 587:     if (!(flags & (1 << 
      +                          0))) {
  4340  0045E4  A03D               	btfss	_flags^0,0,c
  4341  0045E6  D00D               	goto	l9900
  4342  0045E8  D016               	goto	u11670
  4343  0045EA                     l9896:
  4344                           
  4345                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 589:             fputc(' ', f
      +                          p);
  4346  0045EA  0E00               	movlw	0
  4347  0045EC  6E18               	movwf	(fputc@c+1)^0,c
  4348  0045EE  0E20               	movlw	32
  4349  0045F0  6E17               	movwf	fputc@c^0,c
  4350  0045F2  C020  F019         	movff	stoa@fp,fputc@fp
  4351  0045F6  C021  F01A         	movff	stoa@fp+1,fputc@fp+1
  4352  0045FA  EC40  F027         	call	_fputc	;wreg free
  4353                           
  4354                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 590:             ++l;
  4355  0045FE  4A34               	infsnz	stoa@l^0,f,c
  4356  004600  2A35               	incf	(stoa@l+1)^0,f,c
  4357  004602                     l9900:
  4358                           
  4359                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 588:         while (l < w) {
  4360  004602  502E               	movf	stoa@w^0,w,c
  4361  004604  5C34               	subwf	stoa@l^0,w,c
  4362  004606  5035               	movf	(stoa@l+1)^0,w,c
  4363  004608  0A80               	xorlw	128
  4364  00460A  6E24               	movwf	??_stoa^0,c
  4365  00460C  502F               	movf	(stoa@w+1)^0,w,c
  4366  00460E  0A80               	xorlw	128
  4367  004610  5824               	subwfb	??_stoa^0,w,c
  4368  004612  A0D8               	btfss	status,0,c
  4369  004614  D7EA               	goto	l9896
  4370  004616                     u11670:
  4371                           
  4372                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 595:     i = 0;
  4373  004616  0E00               	movlw	0
  4374  004618  6E2D               	movwf	(stoa@i+1)^0,c
  4375  00461A  0E00               	movlw	0
  4376  00461C  6E2C               	movwf	stoa@i^0,c
  4377                           
  4378                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 596:     while (i < p) {
  4379  00461E  D023               	goto	l9910
  4380  004620                     l9904:
  4381                           
  4382                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 597:         fputc(*cp, fp);
  4383  004620  0060  F0C3  FFF6   	movff	stoa@cp,tblptrl
  4384  004626  0060  F0C7  FFF7   	movff	stoa@cp+1,tblptrh
  4385  00462C  0E00               	movlw	low (__smallconst shr (0+16))
  4386  00462E  6EF8               	movwf	tblptru,c
  4387  004630  0E1F               	movlw	(high __ramtop+-1)
  4388  004632  64F7               	cpfsgt	tblptrh,c
  4389  004634  D003               	bra	u11687
  4390  004636  0008               	tblrd		*
  4391  004638  50F5               	movf	tablat,w,c
  4392  00463A  D007               	bra	u11680
  4393  00463C                     u11687:
  4394  00463C  006F FFDB FFE1     	movff	tblptrl,fsr1l
  4395  004642  006F FFDF FFE2     	movff	tblptrh,fsr1h
  4396  004648  50E7               	movf	indf1,w,c
  4397  00464A                     u11680:
  4398  00464A  6E24               	movwf	??_stoa^0,c
  4399  00464C  5024               	movf	??_stoa^0,w,c
  4400  00464E  6E17               	movwf	fputc@c^0,c
  4401  004650  6A18               	clrf	(fputc@c+1)^0,c
  4402  004652  C020  F019         	movff	stoa@fp,fputc@fp
  4403  004656  C021  F01A         	movff	stoa@fp+1,fputc@fp+1
  4404  00465A  EC40  F027         	call	_fputc	;wreg free
  4405                           
  4406                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 598:         ++cp;
  4407  00465E  4A30               	infsnz	stoa@cp^0,f,c
  4408  004660  2A31               	incf	(stoa@cp+1)^0,f,c
  4409                           
  4410                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 599:         ++i;
  4411  004662  4A2C               	infsnz	stoa@i^0,f,c
  4412  004664  2A2D               	incf	(stoa@i+1)^0,f,c
  4413  004666                     l9910:
  4414                           
  4415                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 596:     while (i < p) {
  4416  004666  5032               	movf	stoa@p^0,w,c
  4417  004668  5C2C               	subwf	stoa@i^0,w,c
  4418  00466A  502D               	movf	(stoa@i+1)^0,w,c
  4419  00466C  0A80               	xorlw	128
  4420  00466E  6E24               	movwf	??_stoa^0,c
  4421  004670  5033               	movf	(stoa@p+1)^0,w,c
  4422  004672  0A80               	xorlw	128
  4423  004674  5824               	subwfb	??_stoa^0,w,c
  4424  004676  A0D8               	btfss	status,0,c
  4425  004678  D7D3               	goto	l9904
  4426                           
  4427                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 603:     if (flags & (1 << 0)
      +                          ) {
  4428  00467A  B03D               	btfsc	_flags^0,0,c
  4429  00467C  D00D               	goto	l9918
  4430  00467E  D016               	goto	u11710
  4431  004680                     l9914:
  4432                           
  4433                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 605:             fputc(' ', f
      +                          p);
  4434  004680  0E00               	movlw	0
  4435  004682  6E18               	movwf	(fputc@c+1)^0,c
  4436  004684  0E20               	movlw	32
  4437  004686  6E17               	movwf	fputc@c^0,c
  4438  004688  C020  F019         	movff	stoa@fp,fputc@fp
  4439  00468C  C021  F01A         	movff	stoa@fp+1,fputc@fp+1
  4440  004690  EC40  F027         	call	_fputc	;wreg free
  4441                           
  4442                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 606:             ++l;
  4443  004694  4A34               	infsnz	stoa@l^0,f,c
  4444  004696  2A35               	incf	(stoa@l+1)^0,f,c
  4445  004698                     l9918:
  4446                           
  4447                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 604:         while (l < w) {
  4448  004698  502E               	movf	stoa@w^0,w,c
  4449  00469A  5C34               	subwf	stoa@l^0,w,c
  4450  00469C  5035               	movf	(stoa@l+1)^0,w,c
  4451  00469E  0A80               	xorlw	128
  4452  0046A0  6E24               	movwf	??_stoa^0,c
  4453  0046A2  502F               	movf	(stoa@w+1)^0,w,c
  4454  0046A4  0A80               	xorlw	128
  4455  0046A6  5824               	subwfb	??_stoa^0,w,c
  4456  0046A8  A0D8               	btfss	status,0,c
  4457  0046AA  D7EA               	goto	l9914
  4458  0046AC                     u11710:
  4459                           
  4460                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 610:     return l;
  4461                           
  4462                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 608:     }
  4463  0046AC  C034  F020         	movff	stoa@l,?_stoa
  4464  0046B0  C035  F021         	movff	stoa@l+1,?_stoa+1
  4465  0046B4  0012               	return		;funcret
  4466  0046B6                     __end_of_stoa:
  4467                           	callstack 0
  4468                           
  4469 ;; *************** function _efgtoa *****************
  4470 ;; Defined at:
  4471 ;;		line 332 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  4472 ;; Parameters:    Size  Location     Type
  4473 ;;  fp              2   17[BANK0 ] PTR struct _IO_FILE
  4474 ;;		 -> sprintf@f(11), NULL(0), 
  4475 ;;  f               4   19[BANK0 ] PTR struct _IO_FILE
  4476 ;;  c               1   23[BANK0 ] unsigned char 
  4477 ;; Auto vars:     Size  Location     Type
  4478 ;;  u               4   75[BANK0 ] unsigned char 
  4479 ;;  g               4   65[BANK0 ] unsigned char 
  4480 ;;  l               4   61[BANK0 ] unsigned char 
  4481 ;;  h               4   57[BANK0 ] unsigned char 
  4482 ;;  ou              4   43[BANK0 ] unsigned char 
  4483 ;;  n               2   73[BANK0 ] int 
  4484 ;;  e               2   71[BANK0 ] int 
  4485 ;;  i               2   69[BANK0 ] int 
  4486 ;;  w               2   54[BANK0 ] int 
  4487 ;;  p               2   51[BANK0 ] int 
  4488 ;;  sign            2   49[BANK0 ] int 
  4489 ;;  d               2   47[BANK0 ] int 
  4490 ;;  m               2   41[BANK0 ] int 
  4491 ;;  ne              2   39[BANK0 ] int 
  4492 ;;  pp              2   37[BANK0 ] int 
  4493 ;;  t               2   35[BANK0 ] int 
  4494 ;;  mode            1   56[BANK0 ] unsigned char 
  4495 ;;  nmode           1   53[BANK0 ] unsigned char 
  4496 ;; Return value:  Size  Location     Type
  4497 ;;                  2   17[BANK0 ] int 
  4498 ;; Registers used:
  4499 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4500 ;; Tracked objects:
  4501 ;;		On entry : 3F/0
  4502 ;;		On exit  : 0/0
  4503 ;;		Unchanged: 0/0
  4504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4505 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4506 ;;      Locals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4507 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4508 ;;      Totals:         0      62       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4509 ;;Total ram usage:       62 bytes
  4510 ;; Hardware stack levels used: 1
  4511 ;; Hardware stack levels required when called: 9
  4512 ;; This function calls:
  4513 ;;		___awdiv
  4514 ;;		___awmod
  4515 ;;		___fladd
  4516 ;;		___fldiv
  4517 ;;		___fleq
  4518 ;;		___flge
  4519 ;;		___flmul
  4520 ;;		___flneg
  4521 ;;		___flsub
  4522 ;;		___fltol
  4523 ;;		___fpclassifyf
  4524 ;;		_floorf
  4525 ;;		_isupper
  4526 ;;		_pad
  4527 ;;		_strcpy
  4528 ;;		_tolower
  4529 ;; This function is called by:
  4530 ;;		_vfpfcnvrt
  4531 ;; This function uses a non-reentrant model
  4532 ;;
  4533                           
  4534                           	psect	text11
  4535  0020CC                     __ptext11:
  4536                           	callstack 0
  4537  0020CC                     _efgtoa:
  4538                           	callstack 16
  4539                           
  4540                           ; BSR set to: 0
  4541                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 332: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 333
      +                          : {;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 334:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 335:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 336:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 3
      +                          39:     sign = 0;
  4542                           
  4543                           ;incstack = 0
  4544  0020CC  0E00               	movlw	0
  4545  0020CE  6F92               	movwf	(efgtoa@sign+1)& (0+255),b
  4546  0020D0  0E00               	movlw	0
  4547  0020D2  6F91               	movwf	efgtoa@sign& (0+255),b
  4548                           
  4549                           ; BSR set to: 0
  4550                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 340:     g = f;
  4551  0020D4  C073  F0A1         	movff	efgtoa@f,efgtoa@g
  4552  0020D8  C074  F0A2         	movff	efgtoa@f+1,efgtoa@g+1
  4553  0020DC  C075  F0A3         	movff	efgtoa@f+2,efgtoa@g+2
  4554  0020E0  C076  F0A4         	movff	efgtoa@f+3,efgtoa@g+3
  4555                           
  4556                           ; BSR set to: 0
  4557                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 341:     if (g < 0.0) {
  4558  0020E4  AFA4               	btfss	(efgtoa@g+3)& (0+255),7,b
  4559  0020E6  D016               	goto	l9582
  4560                           
  4561                           ; BSR set to: 0
  4562                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 342:         sign = 1;
  4563  0020E8  0E00               	movlw	0
  4564  0020EA  6F92               	movwf	(efgtoa@sign+1)& (0+255),b
  4565  0020EC  0E01               	movlw	1
  4566  0020EE  6F91               	movwf	efgtoa@sign& (0+255),b
  4567                           
  4568                           ; BSR set to: 0
  4569                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 343:         g = -g;
  4570  0020F0  C0A1  F015         	movff	efgtoa@g,___flneg@f1
  4571  0020F4  C0A2  F016         	movff	efgtoa@g+1,___flneg@f1+1
  4572  0020F8  C0A3  F017         	movff	efgtoa@g+2,___flneg@f1+2
  4573  0020FC  C0A4  F018         	movff	efgtoa@g+3,___flneg@f1+3
  4574  002100  EC09  F02D         	call	___flneg	;wreg free
  4575  002104  C015  F0A1         	movff	?___flneg,efgtoa@g
  4576  002108  C016  F0A2         	movff	?___flneg+1,efgtoa@g+1
  4577  00210C  C017  F0A3         	movff	?___flneg+2,efgtoa@g+2
  4578  002110  C018  F0A4         	movff	?___flneg+3,efgtoa@g+3
  4579  002114                     l9582:
  4580                           
  4581                           ; BSR set to: 0
  4582                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 347:     n = 0;
  4583  002114  0E00               	movlw	0
  4584  002116  6FAA               	movwf	(efgtoa@n+1)& (0+255),b
  4585  002118  0E00               	movlw	0
  4586  00211A  6FA9               	movwf	efgtoa@n& (0+255),b
  4587                           
  4588                           ; BSR set to: 0
  4589                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 348:     w = width;
  4590  00211C  C0F7  F096         	movff	_width,efgtoa@w
  4591  002120  C0F8  F097         	movff	_width+1,efgtoa@w+1
  4592                           
  4593                           ; BSR set to: 0
  4594                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 349:     if (sign || (flags &
      +                           (1 << 2))) {
  4595  002124  5191               	movf	efgtoa@sign& (0+255),w,b
  4596  002126  1192               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4597  002128  A4D8               	btfss	status,2,c
  4598  00212A  D002               	goto	u11160
  4599                           
  4600                           ; BSR set to: 0
  4601  00212C  A43D               	btfss	_flags^0,2,c
  4602  00212E  D013               	goto	l9602
  4603  002130                     u11160:
  4604                           
  4605                           ; BSR set to: 0
  4606                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 350:         dbuf[n] = sign ?
      +                           '-' : '+';
  4607  002130  5191               	movf	efgtoa@sign& (0+255),w,b
  4608  002132  1192               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4609  002134  A4D8               	btfss	status,2,c
  4610  002136  D004               	goto	l9594
  4611                           
  4612                           ; BSR set to: 0
  4613  002138  0E00               	movlw	0
  4614  00213A  6F7E               	movwf	(_efgtoa$2722+1)& (0+255),b
  4615  00213C  0E2B               	movlw	43
  4616  00213E  D003               	goto	L3
  4617  002140                     l9594:
  4618                           
  4619                           ; BSR set to: 0
  4620  002140  0E00               	movlw	0
  4621  002142  6F7E               	movwf	(_efgtoa$2722+1)& (0+255),b
  4622  002144  0E2D               	movlw	45
  4623  002146                     L3:
  4624  002146  6F7D               	movwf	_efgtoa$2722& (0+255),b
  4625                           
  4626                           ; BSR set to: 0
  4627  002148  C07D  F198         	movff	_efgtoa$2722,_dbuf
  4628                           
  4629                           ; BSR set to: 0
  4630                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 351:         ++n;
  4631  00214C  4BA9               	infsnz	efgtoa@n& (0+255),f,b
  4632  00214E  2BAA               	incf	(efgtoa@n+1)& (0+255),f,b
  4633                           
  4634                           ; BSR set to: 0
  4635                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 352:         --w;
  4636  002150  0796               	decf	efgtoa@w& (0+255),f,b
  4637  002152  A0D8               	btfss	status,0,c
  4638  002154  0797               	decf	(efgtoa@w+1)& (0+255),f,b
  4639  002156                     l9602:
  4640                           
  4641                           ; BSR set to: 0
  4642                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 356:     if (( __fpclassifyf(
      +                          g) == 1 )) {
  4643  002156  C0A1  F015         	movff	efgtoa@g,___fpclassifyf@x
  4644  00215A  C0A2  F016         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4645  00215E  C0A3  F017         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4646  002162  C0A4  F018         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4647  002166  EC63  F025         	call	___fpclassifyf	;wreg free
  4648  00216A  0415               	decf	?___fpclassifyf^0,w,c
  4649  00216C  1016               	iorwf	(?___fpclassifyf+1)^0,w,c
  4650  00216E  A4D8               	btfss	status,2,c
  4651  002170  D047               	goto	l9620
  4652  002172  0EBF               	movlw	191
  4653  002174  0100               	movlb	0	; () banked
  4654  002176  6F78               	movwf	??_efgtoa& (0+255),b
  4655  002178  0EFF               	movlw	255
  4656  00217A  6F79               	movwf	(??_efgtoa+1)& (0+255),b
  4657  00217C  5177               	movf	efgtoa@c& (0+255),w,b
  4658  00217E  6F7A               	movwf	(??_efgtoa+2)& (0+255),b
  4659  002180  6B7B               	clrf	(??_efgtoa+3)& (0+255),b
  4660  002182  5178               	movf	??_efgtoa& (0+255),w,b
  4661  002184  277A               	addwf	(??_efgtoa+2)& (0+255),f,b
  4662  002186  5179               	movf	(??_efgtoa+1)& (0+255),w,b
  4663  002188  237B               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4664  00218A  517B               	movf	(??_efgtoa+3)& (0+255),w,b
  4665  00218C  E113               	bnz	l9612
  4666  00218E  0E1A               	movlw	26
  4667  002190  5D7A               	subwf	(??_efgtoa+2)& (0+255),w,b
  4668  002192  B0D8               	btfsc	status,0,c
  4669  002194  D00F               	goto	l9612
  4670                           
  4671                           ; BSR set to: 0
  4672                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 358:             strcpy(&dbuf
      +                          [n], "INF");
  4673  002196  0E98               	movlw	low _dbuf
  4674  002198  25A9               	addwf	efgtoa@n& (0+255),w,b
  4675  00219A  6E15               	movwf	strcpy@dest^0,c
  4676  00219C  0E01               	movlw	high _dbuf
  4677  00219E  21AA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4678  0021A0  6E16               	movwf	(strcpy@dest+1)^0,c
  4679  0021A2  0EAA               	movlw	low STR_11
  4680  0021A4  6E17               	movwf	strcpy@src^0,c
  4681  0021A6  5017               	movf	strcpy@src^0,w,c
  4682  0021A8  A4D8               	btfss	status,2,c
  4683  0021AA  0E20               	movlw	high __smallconst
  4684  0021AC  6E18               	movwf	(strcpy@src+1)^0,c
  4685  0021AE  EC49  F02A         	call	_strcpy	;wreg free
  4686                           
  4687                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 359:         } else {
  4688  0021B2  D00E               	goto	l9614
  4689  0021B4                     l9612:
  4690                           
  4691                           ; BSR set to: 0
  4692                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 360:             strcpy(&dbuf
      +                          [n], "inf");
  4693  0021B4  0E98               	movlw	low _dbuf
  4694  0021B6  25A9               	addwf	efgtoa@n& (0+255),w,b
  4695  0021B8  6E15               	movwf	strcpy@dest^0,c
  4696  0021BA  0E01               	movlw	high _dbuf
  4697  0021BC  21AA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4698  0021BE  6E16               	movwf	(strcpy@dest+1)^0,c
  4699  0021C0  0EB2               	movlw	low STR_12
  4700  0021C2  6E17               	movwf	strcpy@src^0,c
  4701  0021C4  5017               	movf	strcpy@src^0,w,c
  4702  0021C6  A4D8               	btfss	status,2,c
  4703  0021C8  0E20               	movlw	high __smallconst
  4704  0021CA  6E18               	movwf	(strcpy@src+1)^0,c
  4705  0021CC  EC49  F02A         	call	_strcpy	;wreg free
  4706  0021D0                     l9614:
  4707                           
  4708                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 362:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
  4709  0021D0  0100               	movlb	0	; () banked
  4710  0021D2  0EFD               	movlw	253
  4711  0021D4  2796               	addwf	efgtoa@w& (0+255),f,b
  4712  0021D6  0EFF               	movlw	255
  4713  0021D8  2397               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4714  0021DA                     l9616:
  4715                           
  4716                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 363:         return pad(fp, &
      +                          dbuf[0], w);
  4717  0021DA  C071  F029         	movff	efgtoa@fp,pad@fp
  4718  0021DE  C072  F02A         	movff	efgtoa@fp+1,pad@fp+1
  4719  0021E2  0E98               	movlw	low _dbuf
  4720  0021E4  6E2B               	movwf	pad@buf^0,c
  4721  0021E6  0E01               	movlw	high _dbuf
  4722  0021E8  6E2C               	movwf	(pad@buf+1)^0,c
  4723  0021EA  C096  F02D         	movff	efgtoa@w,pad@p
  4724  0021EE  C097  F02E         	movff	efgtoa@w+1,pad@p+1
  4725  0021F2  EC90  F028         	call	_pad	;wreg free
  4726  0021F6  C029  F071         	movff	?_pad,?_efgtoa
  4727  0021FA  C02A  F072         	movff	?_pad+1,?_efgtoa+1
  4728  0021FE  0012               	return	
  4729  002200                     l9620:
  4730                           
  4731                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 365:     if (( __fpclassifyf(
      +                          g) == 0 )) {
  4732  002200  C0A1  F015         	movff	efgtoa@g,___fpclassifyf@x
  4733  002204  C0A2  F016         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4734  002208  C0A3  F017         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4735  00220C  C0A4  F018         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4736  002210  EC63  F025         	call	___fpclassifyf	;wreg free
  4737  002214  5015               	movf	?___fpclassifyf^0,w,c
  4738  002216  1016               	iorwf	(?___fpclassifyf+1)^0,w,c
  4739  002218  A4D8               	btfss	status,2,c
  4740  00221A  D030               	goto	l9638
  4741  00221C  0EBF               	movlw	191
  4742  00221E  0100               	movlb	0	; () banked
  4743  002220  6F78               	movwf	??_efgtoa& (0+255),b
  4744  002222  0EFF               	movlw	255
  4745  002224  6F79               	movwf	(??_efgtoa+1)& (0+255),b
  4746  002226  5177               	movf	efgtoa@c& (0+255),w,b
  4747  002228  6F7A               	movwf	(??_efgtoa+2)& (0+255),b
  4748  00222A  6B7B               	clrf	(??_efgtoa+3)& (0+255),b
  4749  00222C  5178               	movf	??_efgtoa& (0+255),w,b
  4750  00222E  277A               	addwf	(??_efgtoa+2)& (0+255),f,b
  4751  002230  5179               	movf	(??_efgtoa+1)& (0+255),w,b
  4752  002232  237B               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4753  002234  517B               	movf	(??_efgtoa+3)& (0+255),w,b
  4754  002236  E113               	bnz	l9630
  4755  002238  0E1A               	movlw	26
  4756  00223A  5D7A               	subwf	(??_efgtoa+2)& (0+255),w,b
  4757  00223C  B0D8               	btfsc	status,0,c
  4758  00223E  D00F               	goto	l9630
  4759                           
  4760                           ; BSR set to: 0
  4761                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 367:             strcpy(&dbuf
      +                          [n], "NAN");
  4762  002240  0E98               	movlw	low _dbuf
  4763  002242  25A9               	addwf	efgtoa@n& (0+255),w,b
  4764  002244  6E15               	movwf	strcpy@dest^0,c
  4765  002246  0E01               	movlw	high _dbuf
  4766  002248  21AA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4767  00224A  6E16               	movwf	(strcpy@dest+1)^0,c
  4768  00224C  0EAE               	movlw	low STR_15
  4769  00224E  6E17               	movwf	strcpy@src^0,c
  4770  002250  5017               	movf	strcpy@src^0,w,c
  4771  002252  A4D8               	btfss	status,2,c
  4772  002254  0E20               	movlw	high __smallconst
  4773  002256  6E18               	movwf	(strcpy@src+1)^0,c
  4774  002258  EC49  F02A         	call	_strcpy	;wreg free
  4775                           
  4776                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 368:         } else {
  4777  00225C  D7B9               	goto	l9614
  4778  00225E                     l9630:
  4779                           
  4780                           ; BSR set to: 0
  4781                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 369:             strcpy(&dbuf
      +                          [n], "nan");
  4782  00225E  0E98               	movlw	low _dbuf
  4783  002260  25A9               	addwf	efgtoa@n& (0+255),w,b
  4784  002262  6E15               	movwf	strcpy@dest^0,c
  4785  002264  0E01               	movlw	high _dbuf
  4786  002266  21AA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4787  002268  6E16               	movwf	(strcpy@dest+1)^0,c
  4788  00226A  0EB6               	movlw	low STR_16
  4789  00226C  6E17               	movwf	strcpy@src^0,c
  4790  00226E  5017               	movf	strcpy@src^0,w,c
  4791  002270  A4D8               	btfss	status,2,c
  4792  002272  0E20               	movlw	high __smallconst
  4793  002274  6E18               	movwf	(strcpy@src+1)^0,c
  4794  002276  EC49  F02A         	call	_strcpy	;wreg free
  4795  00227A  D7AA               	goto	l9614
  4796  00227C                     l9638:
  4797                           
  4798                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 376:     u = 1.0;
  4799  00227C  0E00               	movlw	0
  4800  00227E  0100               	movlb	0	; () banked
  4801  002280  6FAB               	movwf	efgtoa@u& (0+255),b
  4802  002282  0E00               	movlw	0
  4803  002284  6FAC               	movwf	(efgtoa@u+1)& (0+255),b
  4804  002286  0E80               	movlw	128
  4805  002288  6FAD               	movwf	(efgtoa@u+2)& (0+255),b
  4806  00228A  0E3F               	movlw	63
  4807  00228C  6FAE               	movwf	(efgtoa@u+3)& (0+255),b
  4808                           
  4809                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 377:     e = 0;
  4810  00228E  0E00               	movlw	0
  4811  002290  6FA8               	movwf	(efgtoa@e+1)& (0+255),b
  4812  002292  0E00               	movlw	0
  4813  002294  6FA7               	movwf	efgtoa@e& (0+255),b
  4814                           
  4815                           ; BSR set to: 0
  4816                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 378:     if (!(g == 0.0)) {
  4817  002296  C0A1  F015         	movff	efgtoa@g,___fleq@ff1
  4818  00229A  C0A2  F016         	movff	efgtoa@g+1,___fleq@ff1+1
  4819  00229E  C0A3  F017         	movff	efgtoa@g+2,___fleq@ff1+2
  4820  0022A2  C0A4  F018         	movff	efgtoa@g+3,___fleq@ff1+3
  4821  0022A6  0E00               	movlw	0
  4822  0022A8  6E19               	movwf	___fleq@ff2^0,c
  4823  0022AA  0E00               	movlw	0
  4824  0022AC  6E1A               	movwf	(___fleq@ff2+1)^0,c
  4825  0022AE  0E00               	movlw	0
  4826  0022B0  6E1B               	movwf	(___fleq@ff2+2)^0,c
  4827  0022B2  0E00               	movlw	0
  4828  0022B4  6E1C               	movwf	(___fleq@ff2+3)^0,c
  4829  0022B6  ECDB  F028         	call	___fleq	;wreg free
  4830  0022BA  A0D8               	btfss	status,0,c
  4831  0022BC  D01D               	goto	l9648
  4832  0022BE  D074               	goto	u11240
  4833  0022C0                     l9644:
  4834                           
  4835                           ; BSR set to: 0
  4836                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 380:             u = u*10.0;
  4837  0022C0  C0AB  F023         	movff	efgtoa@u,___flmul@b
  4838  0022C4  C0AC  F024         	movff	efgtoa@u+1,___flmul@b+1
  4839  0022C8  C0AD  F025         	movff	efgtoa@u+2,___flmul@b+2
  4840  0022CC  C0AE  F026         	movff	efgtoa@u+3,___flmul@b+3
  4841  0022D0  0E00               	movlw	0
  4842  0022D2  6E27               	movwf	___flmul@a^0,c
  4843  0022D4  0E00               	movlw	0
  4844  0022D6  6E28               	movwf	(___flmul@a+1)^0,c
  4845  0022D8  0E20               	movlw	32
  4846  0022DA  6E29               	movwf	(___flmul@a+2)^0,c
  4847  0022DC  0E41               	movlw	65
  4848  0022DE  6E2A               	movwf	(___flmul@a+3)^0,c
  4849  0022E0  EC88  F018         	call	___flmul	;wreg free
  4850  0022E4  C023  F0AB         	movff	?___flmul,efgtoa@u
  4851  0022E8  C024  F0AC         	movff	?___flmul+1,efgtoa@u+1
  4852  0022EC  C025  F0AD         	movff	?___flmul+2,efgtoa@u+2
  4853  0022F0  C026  F0AE         	movff	?___flmul+3,efgtoa@u+3
  4854                           
  4855                           ; BSR set to: 0
  4856                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 381:             ++e;
  4857  0022F4  4BA7               	infsnz	efgtoa@e& (0+255),f,b
  4858  0022F6  2BA8               	incf	(efgtoa@e+1)& (0+255),f,b
  4859  0022F8                     l9648:
  4860                           
  4861                           ; BSR set to: 0
  4862                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 379:         while (!(g < (u*
      +                          10.0))) {
  4863  0022F8  C0A1  F02F         	movff	efgtoa@g,___flge@ff1
  4864  0022FC  C0A2  F030         	movff	efgtoa@g+1,___flge@ff1+1
  4865  002300  C0A3  F031         	movff	efgtoa@g+2,___flge@ff1+2
  4866  002304  C0A4  F032         	movff	efgtoa@g+3,___flge@ff1+3
  4867  002308  0E00               	movlw	0
  4868  00230A  6E27               	movwf	___flmul@a^0,c
  4869  00230C  0E00               	movlw	0
  4870  00230E  6E28               	movwf	(___flmul@a+1)^0,c
  4871  002310  0E20               	movlw	32
  4872  002312  6E29               	movwf	(___flmul@a+2)^0,c
  4873  002314  0E41               	movlw	65
  4874  002316  6E2A               	movwf	(___flmul@a+3)^0,c
  4875  002318  C0AB  F023         	movff	efgtoa@u,___flmul@b
  4876  00231C  C0AC  F024         	movff	efgtoa@u+1,___flmul@b+1
  4877  002320  C0AD  F025         	movff	efgtoa@u+2,___flmul@b+2
  4878  002324  C0AE  F026         	movff	efgtoa@u+3,___flmul@b+3
  4879  002328  EC88  F018         	call	___flmul	;wreg free
  4880  00232C  C023  F033         	movff	?___flmul,___flge@ff2
  4881  002330  C024  F034         	movff	?___flmul+1,___flge@ff2+1
  4882  002334  C025  F035         	movff	?___flmul+2,___flge@ff2+2
  4883  002338  C026  F036         	movff	?___flmul+3,___flge@ff2+3
  4884  00233C  EC94  F024         	call	___flge	;wreg free
  4885  002340  A0D8               	btfss	status,0,c
  4886  002342  D01E               	goto	l9654
  4887  002344  D7BD               	goto	l9644
  4888  002346                     l9650:
  4889                           
  4890                           ; BSR set to: 0
  4891                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 384:             u = u/10.0;
  4892  002346  C0AB  F015         	movff	efgtoa@u,___fldiv@b
  4893  00234A  C0AC  F016         	movff	efgtoa@u+1,___fldiv@b+1
  4894  00234E  C0AD  F017         	movff	efgtoa@u+2,___fldiv@b+2
  4895  002352  C0AE  F018         	movff	efgtoa@u+3,___fldiv@b+3
  4896  002356  0E00               	movlw	0
  4897  002358  6E19               	movwf	___fldiv@a^0,c
  4898  00235A  0E00               	movlw	0
  4899  00235C  6E1A               	movwf	(___fldiv@a+1)^0,c
  4900  00235E  0E20               	movlw	32
  4901  002360  6E1B               	movwf	(___fldiv@a+2)^0,c
  4902  002362  0E41               	movlw	65
  4903  002364  6E1C               	movwf	(___fldiv@a+3)^0,c
  4904  002366  ECB7  F01B         	call	___fldiv	;wreg free
  4905  00236A  C015  F0AB         	movff	?___fldiv,efgtoa@u
  4906  00236E  C016  F0AC         	movff	?___fldiv+1,efgtoa@u+1
  4907  002372  C017  F0AD         	movff	?___fldiv+2,efgtoa@u+2
  4908  002376  C018  F0AE         	movff	?___fldiv+3,efgtoa@u+3
  4909                           
  4910                           ; BSR set to: 0
  4911                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 385:             --e;
  4912  00237A  07A7               	decf	efgtoa@e& (0+255),f,b
  4913  00237C  A0D8               	btfss	status,0,c
  4914  00237E  07A8               	decf	(efgtoa@e+1)& (0+255),f,b
  4915  002380                     l9654:
  4916                           
  4917                           ; BSR set to: 0
  4918                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 383:         while (g < u) {
  4919  002380  C0A1  F02F         	movff	efgtoa@g,___flge@ff1
  4920  002384  C0A2  F030         	movff	efgtoa@g+1,___flge@ff1+1
  4921  002388  C0A3  F031         	movff	efgtoa@g+2,___flge@ff1+2
  4922  00238C  C0A4  F032         	movff	efgtoa@g+3,___flge@ff1+3
  4923  002390  C0AB  F033         	movff	efgtoa@u,___flge@ff2
  4924  002394  C0AC  F034         	movff	efgtoa@u+1,___flge@ff2+1
  4925  002398  C0AD  F035         	movff	efgtoa@u+2,___flge@ff2+2
  4926  00239C  C0AE  F036         	movff	efgtoa@u+3,___flge@ff2+3
  4927  0023A0  EC94  F024         	call	___flge	;wreg free
  4928  0023A4  A0D8               	btfss	status,0,c
  4929  0023A6  D7CF               	goto	l9650
  4930  0023A8                     u11240:
  4931                           
  4932                           ; BSR set to: 0
  4933                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 390:     mode = (char)tolower
      +                          ((int)c);
  4934  0023A8  C077  F01B         	movff	efgtoa@c,tolower@c
  4935  0023AC  6A1C               	clrf	(tolower@c+1)^0,c
  4936  0023AE  EC65  F02C         	call	_tolower	;wreg free
  4937  0023B2  501B               	movf	?_tolower^0,w,c
  4938  0023B4  6F98               	movwf	efgtoa@mode& (0+255),b
  4939                           
  4940                           ; BSR set to: 0
  4941                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 391:     nmode = mode;
  4942  0023B6  C098  F095         	movff	efgtoa@mode,efgtoa@nmode
  4943                           
  4944                           ; BSR set to: 0
  4945                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 392:     if (mode == 'g') {
  4946  0023BA  0E67               	movlw	103
  4947  0023BC  1998               	xorwf	efgtoa@mode& (0+255),w,b
  4948  0023BE  A4D8               	btfss	status,2,c
  4949  0023C0  D019               	goto	l9670
  4950                           
  4951                           ; BSR set to: 0
  4952                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 393:   if (prec == 0) {
  4953  0023C2  51F9               	movf	_prec& (0+255),w,b
  4954  0023C4  11FA               	iorwf	(_prec+1)& (0+255),w,b
  4955  0023C6  A4D8               	btfss	status,2,c
  4956  0023C8  D004               	goto	l9666
  4957                           
  4958                           ; BSR set to: 0
  4959                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 394:    prec = 1;
  4960  0023CA  0E00               	movlw	0
  4961  0023CC  6FFA               	movwf	(_prec+1)& (0+255),b
  4962  0023CE  0E01               	movlw	1
  4963  0023D0  6FF9               	movwf	_prec& (0+255),b
  4964  0023D2                     l9666:
  4965                           
  4966                           ; BSR set to: 0
  4967                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 396:         p = (0 < prec) ?
      +                           prec : 6;
  4968  0023D2  BFFA               	btfsc	(_prec+1)& (0+255),7,b
  4969  0023D4  D005               	goto	u11270
  4970  0023D6  51FA               	movf	(_prec+1)& (0+255),w,b
  4971  0023D8  E108               	bnz	l1905
  4972  0023DA  05F9               	decf	_prec& (0+255),w,b
  4973  0023DC  B0D8               	btfsc	status,0,c
  4974  0023DE  D005               	goto	l1905
  4975  0023E0                     u11270:
  4976                           
  4977                           ; BSR set to: 0
  4978  0023E0  0E00               	movlw	0
  4979  0023E2  6F94               	movwf	(efgtoa@p+1)& (0+255),b
  4980  0023E4  0E06               	movlw	6
  4981  0023E6  6F93               	movwf	efgtoa@p& (0+255),b
  4982  0023E8  D008               	goto	l9676
  4983  0023EA                     l1905:
  4984                           
  4985                           ; BSR set to: 0
  4986  0023EA  C0F9  F093         	movff	_prec,efgtoa@p
  4987  0023EE  C0FA  F094         	movff	_prec+1,efgtoa@p+1
  4988  0023F2  D003               	goto	l9676
  4989  0023F4                     l9670:
  4990                           
  4991                           ; BSR set to: 0
  4992                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 398:         p = (prec < 0) ?
      +                           6 : prec;
  4993  0023F4  AFFA               	btfss	(_prec+1)& (0+255),7,b
  4994  0023F6  D7F9               	goto	l1905
  4995  0023F8  D7F3               	goto	u11270
  4996  0023FA                     l9676:
  4997                           
  4998                           ; BSR set to: 0
  4999                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 402:     if (mode == 'g') {
  5000  0023FA  0E67               	movlw	103
  5001  0023FC  1998               	xorwf	efgtoa@mode& (0+255),w,b
  5002  0023FE  A4D8               	btfss	status,2,c
  5003  002400  D022               	goto	l9686
  5004                           
  5005                           ; BSR set to: 0
  5006                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 403:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
  5007  002402  AFA8               	btfss	(efgtoa@e+1)& (0+255),7,b
  5008  002404  D006               	goto	u11300
  5009  002406  0EFC               	movlw	252
  5010  002408  5DA7               	subwf	efgtoa@e& (0+255),w,b
  5011  00240A  0EFF               	movlw	255
  5012  00240C  59A8               	subwfb	(efgtoa@e+1)& (0+255),w,b
  5013  00240E  A0D8               	btfss	status,0,c
  5014  002410  D018               	goto	l9684
  5015  002412                     u11300:
  5016                           
  5017                           ; BSR set to: 0
  5018  002412  0EFF               	movlw	255
  5019  002414  6F78               	movwf	??_efgtoa& (0+255),b
  5020  002416  0EFF               	movlw	255
  5021  002418  6F79               	movwf	(??_efgtoa+1)& (0+255),b
  5022  00241A  C093  F07A         	movff	efgtoa@p,??_efgtoa+2
  5023  00241E  C094  F07B         	movff	efgtoa@p+1,??_efgtoa+3
  5024  002422  5178               	movf	??_efgtoa& (0+255),w,b
  5025  002424  277A               	addwf	(??_efgtoa+2)& (0+255),f,b
  5026  002426  5179               	movf	(??_efgtoa+1)& (0+255),w,b
  5027  002428  237B               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5028  00242A  51A7               	movf	efgtoa@e& (0+255),w,b
  5029  00242C  5D7A               	subwf	(??_efgtoa+2)& (0+255),w,b
  5030  00242E  517B               	movf	(??_efgtoa+3)& (0+255),w,b
  5031  002430  0A80               	xorlw	128
  5032  002432  6F7C               	movwf	(??_efgtoa+4)& (0+255),b
  5033  002434  51A8               	movf	(efgtoa@e+1)& (0+255),w,b
  5034  002436  0A80               	xorlw	128
  5035  002438  597C               	subwfb	(??_efgtoa+4)& (0+255),w,b
  5036  00243A  A0D8               	btfss	status,0,c
  5037  00243C  D002               	goto	l9684
  5038                           
  5039                           ; BSR set to: 0
  5040                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 404:             nmode = 'f';
  5041  00243E  0E66               	movlw	102
  5042  002440  D001               	goto	L4
  5043  002442                     l9684:
  5044                           
  5045                           ; BSR set to: 0
  5046                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 406:             nmode = 'e';
  5047  002442  0E65               	movlw	101
  5048  002444                     L4:
  5049  002444  6F95               	movwf	efgtoa@nmode& (0+255),b
  5050  002446                     l9686:
  5051                           
  5052                           ; BSR set to: 0
  5053                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 411:     m = p;
  5054  002446  C093  F089         	movff	efgtoa@p,efgtoa@m
  5055  00244A  C094  F08A         	movff	efgtoa@p+1,efgtoa@m+1
  5056                           
  5057                           ; BSR set to: 0
  5058                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 412:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
  5059  00244E  0E67               	movlw	103
  5060  002450  1998               	xorwf	efgtoa@mode& (0+255),w,b
  5061  002452  A4D8               	btfss	status,2,c
  5062  002454  D005               	goto	u11340
  5063                           
  5064                           ; BSR set to: 0
  5065  002456  0E66               	movlw	102
  5066  002458  1995               	xorwf	efgtoa@nmode& (0+255),w,b
  5067  00245A  B4D8               	btfsc	status,2,c
  5068                           
  5069                           ; BSR set to: 0
  5070  00245C  AFA8               	btfss	(efgtoa@e+1)& (0+255),7,b
  5071  00245E  D002               	goto	l9696
  5072  002460                     u11340:
  5073                           
  5074                           ; BSR set to: 0
  5075                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 413:         ++m;
  5076  002460  4B89               	infsnz	efgtoa@m& (0+255),f,b
  5077  002462  2B8A               	incf	(efgtoa@m+1)& (0+255),f,b
  5078  002464                     l9696:
  5079                           
  5080                           ; BSR set to: 0
  5081                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 417:     if (nmode == 'f') {
  5082  002464  0E66               	movlw	102
  5083  002466  1995               	xorwf	efgtoa@nmode& (0+255),w,b
  5084  002468  A4D8               	btfss	status,2,c
  5085  00246A  D016               	goto	l9706
  5086                           
  5087                           ; BSR set to: 0
  5088                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 418:         if (e < 0) {
  5089  00246C  AFA8               	btfss	(efgtoa@e+1)& (0+255),7,b
  5090  00246E  D00C               	goto	l9702
  5091                           
  5092                           ; BSR set to: 0
  5093                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 419:             u = 1.0;
  5094  002470  0E00               	movlw	0
  5095  002472  6FAB               	movwf	efgtoa@u& (0+255),b
  5096  002474  0E00               	movlw	0
  5097  002476  6FAC               	movwf	(efgtoa@u+1)& (0+255),b
  5098  002478  0E80               	movlw	128
  5099  00247A  6FAD               	movwf	(efgtoa@u+2)& (0+255),b
  5100  00247C  0E3F               	movlw	63
  5101  00247E  6FAE               	movwf	(efgtoa@u+3)& (0+255),b
  5102                           
  5103                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 420:             e = 0;
  5104  002480  0E00               	movlw	0
  5105  002482  6FA8               	movwf	(efgtoa@e+1)& (0+255),b
  5106  002484  0E00               	movlw	0
  5107  002486  6FA7               	movwf	efgtoa@e& (0+255),b
  5108  002488                     l9702:
  5109                           
  5110                           ; BSR set to: 0
  5111                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 422:         if (!(mode == 'g
      +                          ')) {
  5112  002488  0E67               	movlw	103
  5113  00248A  1998               	xorwf	efgtoa@mode& (0+255),w,b
  5114  00248C  B4D8               	btfsc	status,2,c
  5115  00248E  D004               	goto	l9706
  5116                           
  5117                           ; BSR set to: 0
  5118                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 423:             m += e;
  5119  002490  51A7               	movf	efgtoa@e& (0+255),w,b
  5120  002492  2789               	addwf	efgtoa@m& (0+255),f,b
  5121  002494  51A8               	movf	(efgtoa@e+1)& (0+255),w,b
  5122  002496  238A               	addwfc	(efgtoa@m+1)& (0+255),f,b
  5123  002498                     l9706:
  5124                           
  5125                           ; BSR set to: 0
  5126                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 428:     i = 0;
  5127  002498  0E00               	movlw	0
  5128  00249A  6FA6               	movwf	(efgtoa@i+1)& (0+255),b
  5129  00249C  0E00               	movlw	0
  5130  00249E  6FA5               	movwf	efgtoa@i& (0+255),b
  5131                           
  5132                           ; BSR set to: 0
  5133                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 429:     h = g;
  5134  0024A0  C0A1  F099         	movff	efgtoa@g,efgtoa@h
  5135  0024A4  C0A2  F09A         	movff	efgtoa@g+1,efgtoa@h+1
  5136  0024A8  C0A3  F09B         	movff	efgtoa@g+2,efgtoa@h+2
  5137  0024AC  C0A4  F09C         	movff	efgtoa@g+3,efgtoa@h+3
  5138                           
  5139                           ; BSR set to: 0
  5140                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 430:     ou = u;
  5141  0024B0  C0AB  F08B         	movff	efgtoa@u,efgtoa@ou
  5142  0024B4  C0AC  F08C         	movff	efgtoa@u+1,efgtoa@ou+1
  5143  0024B8  C0AD  F08D         	movff	efgtoa@u+2,efgtoa@ou+2
  5144  0024BC  C0AE  F08E         	movff	efgtoa@u+3,efgtoa@ou+3
  5145                           
  5146                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 431:     while (i < m) {
  5147  0024C0  D07A               	goto	l9720
  5148  0024C2                     l9712:
  5149                           
  5150                           ; BSR set to: 0
  5151                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 432:         l = floorf(h/u);
  5152  0024C2  C099  F015         	movff	efgtoa@h,___fldiv@b
  5153  0024C6  C09A  F016         	movff	efgtoa@h+1,___fldiv@b+1
  5154  0024CA  C09B  F017         	movff	efgtoa@h+2,___fldiv@b+2
  5155  0024CE  C09C  F018         	movff	efgtoa@h+3,___fldiv@b+3
  5156  0024D2  C0AB  F019         	movff	efgtoa@u,___fldiv@a
  5157  0024D6  C0AC  F01A         	movff	efgtoa@u+1,___fldiv@a+1
  5158  0024DA  C0AD  F01B         	movff	efgtoa@u+2,___fldiv@a+2
  5159  0024DE  C0AE  F01C         	movff	efgtoa@u+3,___fldiv@a+3
  5160  0024E2  ECB7  F01B         	call	___fldiv	;wreg free
  5161  0024E6  C015  F02E         	movff	?___fldiv,floorf@x
  5162  0024EA  C016  F02F         	movff	?___fldiv+1,floorf@x+1
  5163  0024EE  C017  F030         	movff	?___fldiv+2,floorf@x+2
  5164  0024F2  C018  F031         	movff	?___fldiv+3,floorf@x+3
  5165  0024F6  ECE0  F01F         	call	_floorf	;wreg free
  5166  0024FA  C02E  F09D         	movff	?_floorf,efgtoa@l
  5167  0024FE  C02F  F09E         	movff	?_floorf+1,efgtoa@l+1
  5168  002502  C030  F09F         	movff	?_floorf+2,efgtoa@l+2
  5169  002506  C031  F0A0         	movff	?_floorf+3,efgtoa@l+3
  5170                           
  5171                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 433:         d = (int)l;
  5172  00250A  C09D  F015         	movff	efgtoa@l,___fltol@f1
  5173  00250E  C09E  F016         	movff	efgtoa@l+1,___fltol@f1+1
  5174  002512  C09F  F017         	movff	efgtoa@l+2,___fltol@f1+2
  5175  002516  C0A0  F018         	movff	efgtoa@l+3,___fltol@f1+3
  5176  00251A  EC2C  F026         	call	___fltol	;wreg free
  5177  00251E  C015  F08F         	movff	?___fltol,efgtoa@d
  5178  002522  C016  F090         	movff	?___fltol+1,efgtoa@d+1
  5179                           
  5180                           ; BSR set to: 0
  5181                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 434:         h -= l*u;
  5182  002526  C099  F02F         	movff	efgtoa@h,___flsub@b
  5183  00252A  C09A  F030         	movff	efgtoa@h+1,___flsub@b+1
  5184  00252E  C09B  F031         	movff	efgtoa@h+2,___flsub@b+2
  5185  002532  C09C  F032         	movff	efgtoa@h+3,___flsub@b+3
  5186  002536  C0AB  F027         	movff	efgtoa@u,___flmul@a
  5187  00253A  C0AC  F028         	movff	efgtoa@u+1,___flmul@a+1
  5188  00253E  C0AD  F029         	movff	efgtoa@u+2,___flmul@a+2
  5189  002542  C0AE  F02A         	movff	efgtoa@u+3,___flmul@a+3
  5190  002546  C09D  F023         	movff	efgtoa@l,___flmul@b
  5191  00254A  C09E  F024         	movff	efgtoa@l+1,___flmul@b+1
  5192  00254E  C09F  F025         	movff	efgtoa@l+2,___flmul@b+2
  5193  002552  C0A0  F026         	movff	efgtoa@l+3,___flmul@b+3
  5194  002556  EC88  F018         	call	___flmul	;wreg free
  5195  00255A  C023  F033         	movff	?___flmul,___flsub@a
  5196  00255E  C024  F034         	movff	?___flmul+1,___flsub@a+1
  5197  002562  C025  F035         	movff	?___flmul+2,___flsub@a+2
  5198  002566  C026  F036         	movff	?___flmul+3,___flsub@a+3
  5199  00256A  EC63  F02B         	call	___flsub	;wreg free
  5200  00256E  C02F  F099         	movff	?___flsub,efgtoa@h
  5201  002572  C030  F09A         	movff	?___flsub+1,efgtoa@h+1
  5202  002576  C031  F09B         	movff	?___flsub+2,efgtoa@h+2
  5203  00257A  C032  F09C         	movff	?___flsub+3,efgtoa@h+3
  5204                           
  5205                           ; BSR set to: 0
  5206                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 435:         u = u/10.0;
  5207  00257E  C0AB  F015         	movff	efgtoa@u,___fldiv@b
  5208  002582  C0AC  F016         	movff	efgtoa@u+1,___fldiv@b+1
  5209  002586  C0AD  F017         	movff	efgtoa@u+2,___fldiv@b+2
  5210  00258A  C0AE  F018         	movff	efgtoa@u+3,___fldiv@b+3
  5211  00258E  0E00               	movlw	0
  5212  002590  6E19               	movwf	___fldiv@a^0,c
  5213  002592  0E00               	movlw	0
  5214  002594  6E1A               	movwf	(___fldiv@a+1)^0,c
  5215  002596  0E20               	movlw	32
  5216  002598  6E1B               	movwf	(___fldiv@a+2)^0,c
  5217  00259A  0E41               	movlw	65
  5218  00259C  6E1C               	movwf	(___fldiv@a+3)^0,c
  5219  00259E  ECB7  F01B         	call	___fldiv	;wreg free
  5220  0025A2  C015  F0AB         	movff	?___fldiv,efgtoa@u
  5221  0025A6  C016  F0AC         	movff	?___fldiv+1,efgtoa@u+1
  5222  0025AA  C017  F0AD         	movff	?___fldiv+2,efgtoa@u+2
  5223  0025AE  C018  F0AE         	movff	?___fldiv+3,efgtoa@u+3
  5224                           
  5225                           ; BSR set to: 0
  5226                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 436:         ++i;
  5227  0025B2  4BA5               	infsnz	efgtoa@i& (0+255),f,b
  5228  0025B4  2BA6               	incf	(efgtoa@i+1)& (0+255),f,b
  5229  0025B6                     l9720:
  5230                           
  5231                           ; BSR set to: 0
  5232                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 431:     while (i < m) {
  5233  0025B6  5189               	movf	efgtoa@m& (0+255),w,b
  5234  0025B8  5DA5               	subwf	efgtoa@i& (0+255),w,b
  5235  0025BA  51A6               	movf	(efgtoa@i+1)& (0+255),w,b
  5236  0025BC  0A80               	xorlw	128
  5237  0025BE  6F78               	movwf	??_efgtoa& (0+255),b
  5238  0025C0  518A               	movf	(efgtoa@m+1)& (0+255),w,b
  5239  0025C2  0A80               	xorlw	128
  5240  0025C4  5978               	subwfb	??_efgtoa& (0+255),w,b
  5241  0025C6  A0D8               	btfss	status,0,c
  5242  0025C8  D77C               	goto	l9712
  5243                           
  5244                           ; BSR set to: 0
  5245                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 440:     l = u*5.0;
  5246  0025CA  C0AB  F023         	movff	efgtoa@u,___flmul@b
  5247  0025CE  C0AC  F024         	movff	efgtoa@u+1,___flmul@b+1
  5248  0025D2  C0AD  F025         	movff	efgtoa@u+2,___flmul@b+2
  5249  0025D6  C0AE  F026         	movff	efgtoa@u+3,___flmul@b+3
  5250  0025DA  0E00               	movlw	0
  5251  0025DC  6E27               	movwf	___flmul@a^0,c
  5252  0025DE  0E00               	movlw	0
  5253  0025E0  6E28               	movwf	(___flmul@a+1)^0,c
  5254  0025E2  0EA0               	movlw	160
  5255  0025E4  6E29               	movwf	(___flmul@a+2)^0,c
  5256  0025E6  0E40               	movlw	64
  5257  0025E8  6E2A               	movwf	(___flmul@a+3)^0,c
  5258  0025EA  EC88  F018         	call	___flmul	;wreg free
  5259  0025EE  C023  F09D         	movff	?___flmul,efgtoa@l
  5260  0025F2  C024  F09E         	movff	?___flmul+1,efgtoa@l+1
  5261  0025F6  C025  F09F         	movff	?___flmul+2,efgtoa@l+2
  5262  0025FA  C026  F0A0         	movff	?___flmul+3,efgtoa@l+3
  5263                           
  5264                           ; BSR set to: 0
  5265                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 441:     if (h < l) {
  5266  0025FE  C099  F02F         	movff	efgtoa@h,___flge@ff1
  5267  002602  C09A  F030         	movff	efgtoa@h+1,___flge@ff1+1
  5268  002606  C09B  F031         	movff	efgtoa@h+2,___flge@ff1+2
  5269  00260A  C09C  F032         	movff	efgtoa@h+3,___flge@ff1+3
  5270  00260E  C09D  F033         	movff	efgtoa@l,___flge@ff2
  5271  002612  C09E  F034         	movff	efgtoa@l+1,___flge@ff2+1
  5272  002616  C09F  F035         	movff	efgtoa@l+2,___flge@ff2+2
  5273  00261A  C0A0  F036         	movff	efgtoa@l+3,___flge@ff2+3
  5274  00261E  EC94  F024         	call	___flge	;wreg free
  5275  002622  A0D8               	btfss	status,0,c
  5276  002624  D015               	goto	u11410
  5277                           
  5278                           ; BSR set to: 0
  5279                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 445:         if ((h == l) && 
      +                          !(d % 2)) {
  5280                           
  5281                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 443:     } else {
  5282                           
  5283                           ; BSR set to: 0
  5284                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 442:         l = 0.0;
  5285  002626  C099  F015         	movff	efgtoa@h,___fleq@ff1
  5286  00262A  C09A  F016         	movff	efgtoa@h+1,___fleq@ff1+1
  5287  00262E  C09B  F017         	movff	efgtoa@h+2,___fleq@ff1+2
  5288  002632  C09C  F018         	movff	efgtoa@h+3,___fleq@ff1+3
  5289  002636  C09D  F019         	movff	efgtoa@l,___fleq@ff2
  5290  00263A  C09E  F01A         	movff	efgtoa@l+1,___fleq@ff2+1
  5291  00263E  C09F  F01B         	movff	efgtoa@l+2,___fleq@ff2+2
  5292  002642  C0A0  F01C         	movff	efgtoa@l+3,___fleq@ff2+3
  5293  002646  ECDB  F028         	call	___fleq	;wreg free
  5294  00264A  B0D8               	btfsc	status,0,c
  5295                           
  5296                           ; BSR set to: 0
  5297  00264C  B18F               	btfsc	efgtoa@d& (0+255),0,b
  5298  00264E  D008               	goto	l9734
  5299  002650                     u11410:
  5300                           
  5301                           ; BSR set to: 0
  5302                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 446:             l = 0.0;
  5303  002650  0E00               	movlw	0
  5304  002652  6F9D               	movwf	efgtoa@l& (0+255),b
  5305  002654  0E00               	movlw	0
  5306  002656  6F9E               	movwf	(efgtoa@l+1)& (0+255),b
  5307  002658  0E00               	movlw	0
  5308  00265A  6F9F               	movwf	(efgtoa@l+2)& (0+255),b
  5309  00265C  0E00               	movlw	0
  5310  00265E  6FA0               	movwf	(efgtoa@l+3)& (0+255),b
  5311  002660                     l9734:
  5312                           
  5313                           ; BSR set to: 0
  5314                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 451:     h = g + l;
  5315  002660  C0A1  F015         	movff	efgtoa@g,___fladd@b
  5316  002664  C0A2  F016         	movff	efgtoa@g+1,___fladd@b+1
  5317  002668  C0A3  F017         	movff	efgtoa@g+2,___fladd@b+2
  5318  00266C  C0A4  F018         	movff	efgtoa@g+3,___fladd@b+3
  5319  002670  C09D  F019         	movff	efgtoa@l,___fladd@a
  5320  002674  C09E  F01A         	movff	efgtoa@l+1,___fladd@a+1
  5321  002678  C09F  F01B         	movff	efgtoa@l+2,___fladd@a+2
  5322  00267C  C0A0  F01C         	movff	efgtoa@l+3,___fladd@a+3
  5323  002680  EC31  F01A         	call	___fladd	;wreg free
  5324  002684  C015  F099         	movff	?___fladd,efgtoa@h
  5325  002688  C016  F09A         	movff	?___fladd+1,efgtoa@h+1
  5326  00268C  C017  F09B         	movff	?___fladd+2,efgtoa@h+2
  5327  002690  C018  F09C         	movff	?___fladd+3,efgtoa@h+3
  5328                           
  5329                           ; BSR set to: 0
  5330                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 453:  if (h >= (ou*10.0)) {
  5331  002694  C099  F02F         	movff	efgtoa@h,___flge@ff1
  5332  002698  C09A  F030         	movff	efgtoa@h+1,___flge@ff1+1
  5333  00269C  C09B  F031         	movff	efgtoa@h+2,___flge@ff1+2
  5334  0026A0  C09C  F032         	movff	efgtoa@h+3,___flge@ff1+3
  5335  0026A4  0E00               	movlw	0
  5336  0026A6  6E27               	movwf	___flmul@a^0,c
  5337  0026A8  0E00               	movlw	0
  5338  0026AA  6E28               	movwf	(___flmul@a+1)^0,c
  5339  0026AC  0E20               	movlw	32
  5340  0026AE  6E29               	movwf	(___flmul@a+2)^0,c
  5341  0026B0  0E41               	movlw	65
  5342  0026B2  6E2A               	movwf	(___flmul@a+3)^0,c
  5343  0026B4  C08B  F023         	movff	efgtoa@ou,___flmul@b
  5344  0026B8  C08C  F024         	movff	efgtoa@ou+1,___flmul@b+1
  5345  0026BC  C08D  F025         	movff	efgtoa@ou+2,___flmul@b+2
  5346  0026C0  C08E  F026         	movff	efgtoa@ou+3,___flmul@b+3
  5347  0026C4  EC88  F018         	call	___flmul	;wreg free
  5348  0026C8  C023  F033         	movff	?___flmul,___flge@ff2
  5349  0026CC  C024  F034         	movff	?___flmul+1,___flge@ff2+1
  5350  0026D0  C025  F035         	movff	?___flmul+2,___flge@ff2+2
  5351  0026D4  C026  F036         	movff	?___flmul+3,___flge@ff2+3
  5352  0026D8  EC94  F024         	call	___flge	;wreg free
  5353  0026DC  A0D8               	btfss	status,0,c
  5354  0026DE  D022               	goto	l9746
  5355                           
  5356                           ; BSR set to: 0
  5357                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 454:   e++;
  5358  0026E0  4BA7               	infsnz	efgtoa@e& (0+255),f,b
  5359  0026E2  2BA8               	incf	(efgtoa@e+1)& (0+255),f,b
  5360                           
  5361                           ; BSR set to: 0
  5362                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 455:   ou *= 10.0;
  5363  0026E4  C08B  F023         	movff	efgtoa@ou,___flmul@b
  5364  0026E8  C08C  F024         	movff	efgtoa@ou+1,___flmul@b+1
  5365  0026EC  C08D  F025         	movff	efgtoa@ou+2,___flmul@b+2
  5366  0026F0  C08E  F026         	movff	efgtoa@ou+3,___flmul@b+3
  5367  0026F4  0E00               	movlw	0
  5368  0026F6  6E27               	movwf	___flmul@a^0,c
  5369  0026F8  0E00               	movlw	0
  5370  0026FA  6E28               	movwf	(___flmul@a+1)^0,c
  5371  0026FC  0E20               	movlw	32
  5372  0026FE  6E29               	movwf	(___flmul@a+2)^0,c
  5373  002700  0E41               	movlw	65
  5374  002702  6E2A               	movwf	(___flmul@a+3)^0,c
  5375  002704  EC88  F018         	call	___flmul	;wreg free
  5376  002708  C023  F08B         	movff	?___flmul,efgtoa@ou
  5377  00270C  C024  F08C         	movff	?___flmul+1,efgtoa@ou+1
  5378  002710  C025  F08D         	movff	?___flmul+2,efgtoa@ou+2
  5379  002714  C026  F08E         	movff	?___flmul+3,efgtoa@ou+3
  5380                           
  5381                           ; BSR set to: 0
  5382                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 456:   if (nmode == 'f') {
  5383  002718  0E66               	movlw	102
  5384  00271A  1995               	xorwf	efgtoa@nmode& (0+255),w,b
  5385  00271C  A4D8               	btfss	status,2,c
  5386  00271E  D002               	goto	l9746
  5387                           
  5388                           ; BSR set to: 0
  5389                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 458:    m++;
  5390  002720  4B89               	infsnz	efgtoa@m& (0+255),f,b
  5391  002722  2B8A               	incf	(efgtoa@m+1)& (0+255),f,b
  5392  002724                     l9746:
  5393                           
  5394                           ; BSR set to: 0
  5395                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 463:     u = ou;
  5396  002724  C08B  F0AB         	movff	efgtoa@ou,efgtoa@u
  5397  002728  C08C  F0AC         	movff	efgtoa@ou+1,efgtoa@u+1
  5398  00272C  C08D  F0AD         	movff	efgtoa@ou+2,efgtoa@u+2
  5399  002730  C08E  F0AE         	movff	efgtoa@ou+3,efgtoa@u+3
  5400                           
  5401                           ; BSR set to: 0
  5402                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 464:     ne = (nmode == 'e') 
      +                          ? 0 : e;
  5403  002734  0E65               	movlw	101
  5404  002736  1995               	xorwf	efgtoa@nmode& (0+255),w,b
  5405  002738  B4D8               	btfsc	status,2,c
  5406  00273A  D005               	goto	l9752
  5407                           
  5408                           ; BSR set to: 0
  5409  00273C  C0A7  F087         	movff	efgtoa@e,efgtoa@ne
  5410  002740  C0A8  F088         	movff	efgtoa@e+1,efgtoa@ne+1
  5411  002744  D004               	goto	l1933
  5412  002746                     l9752:
  5413                           
  5414                           ; BSR set to: 0
  5415  002746  0E00               	movlw	0
  5416  002748  6F88               	movwf	(efgtoa@ne+1)& (0+255),b
  5417  00274A  0E00               	movlw	0
  5418  00274C  6F87               	movwf	efgtoa@ne& (0+255),b
  5419  00274E                     l1933:
  5420                           
  5421                           ; BSR set to: 0
  5422                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 465:     pp = 0;
  5423  00274E  0E00               	movlw	0
  5424  002750  6F86               	movwf	(efgtoa@pp+1)& (0+255),b
  5425  002752  0E00               	movlw	0
  5426  002754  6F85               	movwf	efgtoa@pp& (0+255),b
  5427                           
  5428                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 466:     t = 0;
  5429  002756  0E00               	movlw	0
  5430  002758  6F84               	movwf	(efgtoa@t+1)& (0+255),b
  5431  00275A  0E00               	movlw	0
  5432  00275C  6F83               	movwf	efgtoa@t& (0+255),b
  5433                           
  5434                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 467:     i = 0;
  5435  00275E  0E00               	movlw	0
  5436  002760  6FA6               	movwf	(efgtoa@i+1)& (0+255),b
  5437  002762  0E00               	movlw	0
  5438  002764  6FA5               	movwf	efgtoa@i& (0+255),b
  5439                           
  5440                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 468:     while ((i < m) && (n
      +                           < (80 - 5))) {
  5441  002766  D0C4               	goto	l9802
  5442  002768                     l9754:
  5443                           
  5444                           ; BSR set to: 0
  5445                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 469:         l = floorf(h/u);
  5446  002768  C099  F015         	movff	efgtoa@h,___fldiv@b
  5447  00276C  C09A  F016         	movff	efgtoa@h+1,___fldiv@b+1
  5448  002770  C09B  F017         	movff	efgtoa@h+2,___fldiv@b+2
  5449  002774  C09C  F018         	movff	efgtoa@h+3,___fldiv@b+3
  5450  002778  C0AB  F019         	movff	efgtoa@u,___fldiv@a
  5451  00277C  C0AC  F01A         	movff	efgtoa@u+1,___fldiv@a+1
  5452  002780  C0AD  F01B         	movff	efgtoa@u+2,___fldiv@a+2
  5453  002784  C0AE  F01C         	movff	efgtoa@u+3,___fldiv@a+3
  5454  002788  ECB7  F01B         	call	___fldiv	;wreg free
  5455  00278C  C015  F02E         	movff	?___fldiv,floorf@x
  5456  002790  C016  F02F         	movff	?___fldiv+1,floorf@x+1
  5457  002794  C017  F030         	movff	?___fldiv+2,floorf@x+2
  5458  002798  C018  F031         	movff	?___fldiv+3,floorf@x+3
  5459  00279C  ECE0  F01F         	call	_floorf	;wreg free
  5460  0027A0  C02E  F09D         	movff	?_floorf,efgtoa@l
  5461  0027A4  C02F  F09E         	movff	?_floorf+1,efgtoa@l+1
  5462  0027A8  C030  F09F         	movff	?_floorf+2,efgtoa@l+2
  5463  0027AC  C031  F0A0         	movff	?_floorf+3,efgtoa@l+3
  5464                           
  5465                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 470:         d = (int)l;
  5466  0027B0  C09D  F015         	movff	efgtoa@l,___fltol@f1
  5467  0027B4  C09E  F016         	movff	efgtoa@l+1,___fltol@f1+1
  5468  0027B8  C09F  F017         	movff	efgtoa@l+2,___fltol@f1+2
  5469  0027BC  C0A0  F018         	movff	efgtoa@l+3,___fltol@f1+3
  5470  0027C0  EC2C  F026         	call	___fltol	;wreg free
  5471  0027C4  C015  F08F         	movff	?___fltol,efgtoa@d
  5472  0027C8  C016  F090         	movff	?___fltol+1,efgtoa@d+1
  5473                           
  5474                           ; BSR set to: 0
  5475                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 471:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
  5476  0027CC  B83D               	btfsc	_flags^0,4,c
  5477  0027CE  D00C               	goto	l9766
  5478                           
  5479                           ; BSR set to: 0
  5480  0027D0  518F               	movf	efgtoa@d& (0+255),w,b
  5481  0027D2  1190               	iorwf	(efgtoa@d+1)& (0+255),w,b
  5482  0027D4  A4D8               	btfss	status,2,c
  5483  0027D6  D008               	goto	l9766
  5484                           
  5485                           ; BSR set to: 0
  5486  0027D8  0E67               	movlw	103
  5487  0027DA  1998               	xorwf	efgtoa@mode& (0+255),w,b
  5488  0027DC  B4D8               	btfsc	status,2,c
  5489                           
  5490                           ; BSR set to: 0
  5491  0027DE  AF88               	btfss	(efgtoa@ne+1)& (0+255),7,b
  5492  0027E0  D003               	goto	l9766
  5493                           
  5494                           ; BSR set to: 0
  5495                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 472:             ++t;
  5496  0027E2  4B83               	infsnz	efgtoa@t& (0+255),f,b
  5497  0027E4  2B84               	incf	(efgtoa@t+1)& (0+255),f,b
  5498                           
  5499                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 473:         } else {
  5500  0027E6  D039               	goto	l9794
  5501  0027E8                     l9766:
  5502                           
  5503                           ; BSR set to: 0
  5504                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 474:             if (!pp && (
      +                          ne < 0)) {
  5505  0027E8  5185               	movf	efgtoa@pp& (0+255),w,b
  5506  0027EA  1186               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5507  0027EC  B4D8               	btfsc	status,2,c
  5508                           
  5509                           ; BSR set to: 0
  5510  0027EE  AF88               	btfss	(efgtoa@ne+1)& (0+255),7,b
  5511  0027F0  D022               	goto	l9786
  5512                           
  5513                           ; BSR set to: 0
  5514                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 475:                 dbuf[n++
      +                          ] = '.';
  5515  0027F2  0E98               	movlw	low _dbuf
  5516  0027F4  25A9               	addwf	efgtoa@n& (0+255),w,b
  5517  0027F6  6ED9               	movwf	fsr2l,c
  5518  0027F8  0E01               	movlw	high _dbuf
  5519  0027FA  21AA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5520  0027FC  6EDA               	movwf	fsr2h,c
  5521  0027FE  0E2E               	movlw	46
  5522  002800  6EDF               	movwf	indf2,c
  5523                           
  5524                           ; BSR set to: 0
  5525  002802  4BA9               	infsnz	efgtoa@n& (0+255),f,b
  5526  002804  2BAA               	incf	(efgtoa@n+1)& (0+255),f,b
  5527                           
  5528                           ; BSR set to: 0
  5529                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 476:                 --w;
  5530  002806  0796               	decf	efgtoa@w& (0+255),f,b
  5531  002808  A0D8               	btfss	status,0,c
  5532  00280A  0797               	decf	(efgtoa@w+1)& (0+255),f,b
  5533                           
  5534                           ; BSR set to: 0
  5535                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 477:                 pp = 1;
  5536  00280C  0E00               	movlw	0
  5537  00280E  6F86               	movwf	(efgtoa@pp+1)& (0+255),b
  5538  002810  0E01               	movlw	1
  5539  002812  6F85               	movwf	efgtoa@pp& (0+255),b
  5540  002814  D010               	goto	l9786
  5541  002816                     l9778:
  5542                           
  5543                           ; BSR set to: 0
  5544                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 480:                 dbuf[n++
      +                          ] = '0';
  5545  002816  0E98               	movlw	low _dbuf
  5546  002818  25A9               	addwf	efgtoa@n& (0+255),w,b
  5547  00281A  6ED9               	movwf	fsr2l,c
  5548  00281C  0E01               	movlw	high _dbuf
  5549  00281E  21AA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5550  002820  6EDA               	movwf	fsr2h,c
  5551  002822  0E30               	movlw	48
  5552  002824  6EDF               	movwf	indf2,c
  5553                           
  5554                           ; BSR set to: 0
  5555  002826  4BA9               	infsnz	efgtoa@n& (0+255),f,b
  5556  002828  2BAA               	incf	(efgtoa@n+1)& (0+255),f,b
  5557                           
  5558                           ; BSR set to: 0
  5559                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 481:                 --w;
  5560  00282A  0796               	decf	efgtoa@w& (0+255),f,b
  5561  00282C  A0D8               	btfss	status,0,c
  5562  00282E  0797               	decf	(efgtoa@w+1)& (0+255),f,b
  5563                           
  5564                           ; BSR set to: 0
  5565                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 482:                 --t;
  5566  002830  0783               	decf	efgtoa@t& (0+255),f,b
  5567  002832  A0D8               	btfss	status,0,c
  5568  002834  0784               	decf	(efgtoa@t+1)& (0+255),f,b
  5569  002836                     l9786:
  5570                           
  5571                           ; BSR set to: 0
  5572                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 479:             while (t) {
  5573  002836  5183               	movf	efgtoa@t& (0+255),w,b
  5574  002838  1184               	iorwf	(efgtoa@t+1)& (0+255),w,b
  5575  00283A  A4D8               	btfss	status,2,c
  5576  00283C  D7EC               	goto	l9778
  5577                           
  5578                           ; BSR set to: 0
  5579                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 484:             dbuf[n++] = 
      +                          (char)((int)'0' + d);
  5580  00283E  0E98               	movlw	low _dbuf
  5581  002840  25A9               	addwf	efgtoa@n& (0+255),w,b
  5582  002842  6ED9               	movwf	fsr2l,c
  5583  002844  0E01               	movlw	high _dbuf
  5584  002846  21AA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5585  002848  6EDA               	movwf	fsr2h,c
  5586  00284A  518F               	movf	efgtoa@d& (0+255),w,b
  5587  00284C  0F30               	addlw	48
  5588  00284E  6EDF               	movwf	indf2,c
  5589                           
  5590                           ; BSR set to: 0
  5591  002850  4BA9               	infsnz	efgtoa@n& (0+255),f,b
  5592  002852  2BAA               	incf	(efgtoa@n+1)& (0+255),f,b
  5593                           
  5594                           ; BSR set to: 0
  5595                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 485:             --w;
  5596  002854  0796               	decf	efgtoa@w& (0+255),f,b
  5597  002856  A0D8               	btfss	status,0,c
  5598  002858  0797               	decf	(efgtoa@w+1)& (0+255),f,b
  5599  00285A                     l9794:
  5600                           
  5601                           ; BSR set to: 0
  5602                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 487:         h -= l*u;
  5603  00285A  C099  F02F         	movff	efgtoa@h,___flsub@b
  5604  00285E  C09A  F030         	movff	efgtoa@h+1,___flsub@b+1
  5605  002862  C09B  F031         	movff	efgtoa@h+2,___flsub@b+2
  5606  002866  C09C  F032         	movff	efgtoa@h+3,___flsub@b+3
  5607  00286A  C0AB  F027         	movff	efgtoa@u,___flmul@a
  5608  00286E  C0AC  F028         	movff	efgtoa@u+1,___flmul@a+1
  5609  002872  C0AD  F029         	movff	efgtoa@u+2,___flmul@a+2
  5610  002876  C0AE  F02A         	movff	efgtoa@u+3,___flmul@a+3
  5611  00287A  C09D  F023         	movff	efgtoa@l,___flmul@b
  5612  00287E  C09E  F024         	movff	efgtoa@l+1,___flmul@b+1
  5613  002882  C09F  F025         	movff	efgtoa@l+2,___flmul@b+2
  5614  002886  C0A0  F026         	movff	efgtoa@l+3,___flmul@b+3
  5615  00288A  EC88  F018         	call	___flmul	;wreg free
  5616  00288E  C023  F033         	movff	?___flmul,___flsub@a
  5617  002892  C024  F034         	movff	?___flmul+1,___flsub@a+1
  5618  002896  C025  F035         	movff	?___flmul+2,___flsub@a+2
  5619  00289A  C026  F036         	movff	?___flmul+3,___flsub@a+3
  5620  00289E  EC63  F02B         	call	___flsub	;wreg free
  5621  0028A2  C02F  F099         	movff	?___flsub,efgtoa@h
  5622  0028A6  C030  F09A         	movff	?___flsub+1,efgtoa@h+1
  5623  0028AA  C031  F09B         	movff	?___flsub+2,efgtoa@h+2
  5624  0028AE  C032  F09C         	movff	?___flsub+3,efgtoa@h+3
  5625                           
  5626                           ; BSR set to: 0
  5627                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 488:         u = u/10.0;
  5628  0028B2  C0AB  F015         	movff	efgtoa@u,___fldiv@b
  5629  0028B6  C0AC  F016         	movff	efgtoa@u+1,___fldiv@b+1
  5630  0028BA  C0AD  F017         	movff	efgtoa@u+2,___fldiv@b+2
  5631  0028BE  C0AE  F018         	movff	efgtoa@u+3,___fldiv@b+3
  5632  0028C2  0E00               	movlw	0
  5633  0028C4  6E19               	movwf	___fldiv@a^0,c
  5634  0028C6  0E00               	movlw	0
  5635  0028C8  6E1A               	movwf	(___fldiv@a+1)^0,c
  5636  0028CA  0E20               	movlw	32
  5637  0028CC  6E1B               	movwf	(___fldiv@a+2)^0,c
  5638  0028CE  0E41               	movlw	65
  5639  0028D0  6E1C               	movwf	(___fldiv@a+3)^0,c
  5640  0028D2  ECB7  F01B         	call	___fldiv	;wreg free
  5641  0028D6  C015  F0AB         	movff	?___fldiv,efgtoa@u
  5642  0028DA  C016  F0AC         	movff	?___fldiv+1,efgtoa@u+1
  5643  0028DE  C017  F0AD         	movff	?___fldiv+2,efgtoa@u+2
  5644  0028E2  C018  F0AE         	movff	?___fldiv+3,efgtoa@u+3
  5645                           
  5646                           ; BSR set to: 0
  5647                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 489:         --ne;
  5648  0028E6  0787               	decf	efgtoa@ne& (0+255),f,b
  5649  0028E8  A0D8               	btfss	status,0,c
  5650  0028EA  0788               	decf	(efgtoa@ne+1)& (0+255),f,b
  5651                           
  5652                           ; BSR set to: 0
  5653                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 490:         ++i;
  5654  0028EC  4BA5               	infsnz	efgtoa@i& (0+255),f,b
  5655  0028EE  2BA6               	incf	(efgtoa@i+1)& (0+255),f,b
  5656  0028F0                     l9802:
  5657                           
  5658                           ; BSR set to: 0
  5659                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 468:     while ((i < m) && (n
      +                           < (80 - 5))) {
  5660  0028F0  5189               	movf	efgtoa@m& (0+255),w,b
  5661  0028F2  5DA5               	subwf	efgtoa@i& (0+255),w,b
  5662  0028F4  51A6               	movf	(efgtoa@i+1)& (0+255),w,b
  5663  0028F6  0A80               	xorlw	128
  5664  0028F8  6F78               	movwf	??_efgtoa& (0+255),b
  5665  0028FA  518A               	movf	(efgtoa@m+1)& (0+255),w,b
  5666  0028FC  0A80               	xorlw	128
  5667  0028FE  5978               	subwfb	??_efgtoa& (0+255),w,b
  5668  002900  B0D8               	btfsc	status,0,c
  5669  002902  D008               	goto	u11530
  5670                           
  5671                           ; BSR set to: 0
  5672  002904  BFAA               	btfsc	(efgtoa@n+1)& (0+255),7,b
  5673  002906  D730               	goto	l9754
  5674  002908  51AA               	movf	(efgtoa@n+1)& (0+255),w,b
  5675  00290A  E104               	bnz	u11530
  5676  00290C  0E4B               	movlw	75
  5677  00290E  5DA9               	subwf	efgtoa@n& (0+255),w,b
  5678  002910  A0D8               	btfss	status,0,c
  5679  002912  D72A               	goto	l9754
  5680  002914                     u11530:
  5681                           
  5682                           ; BSR set to: 0
  5683                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 492:     if (!pp && (flags & 
      +                          (1 << 4))) {
  5684  002914  5185               	movf	efgtoa@pp& (0+255),w,b
  5685  002916  1186               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5686  002918  B4D8               	btfsc	status,2,c
  5687                           
  5688                           ; BSR set to: 0
  5689  00291A  A83D               	btfss	_flags^0,4,c
  5690  00291C  D00A               	goto	l9814
  5691                           
  5692                           ; BSR set to: 0
  5693                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 493:         dbuf[n++] = '.';
  5694  00291E  0E98               	movlw	low _dbuf
  5695  002920  25A9               	addwf	efgtoa@n& (0+255),w,b
  5696  002922  6ED9               	movwf	fsr2l,c
  5697  002924  0E01               	movlw	high _dbuf
  5698  002926  21AA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5699  002928  6EDA               	movwf	fsr2h,c
  5700  00292A  0E2E               	movlw	46
  5701  00292C  6EDF               	movwf	indf2,c
  5702                           
  5703                           ; BSR set to: 0
  5704  00292E  4BA9               	infsnz	efgtoa@n& (0+255),f,b
  5705  002930  2BAA               	incf	(efgtoa@n+1)& (0+255),f,b
  5706  002932                     l9814:
  5707                           
  5708                           ; BSR set to: 0
  5709                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 495:     dbuf[n] = '\0';
  5710  002932  0E98               	movlw	low _dbuf
  5711  002934  25A9               	addwf	efgtoa@n& (0+255),w,b
  5712  002936  6ED9               	movwf	fsr2l,c
  5713  002938  0E01               	movlw	high _dbuf
  5714  00293A  21AA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5715  00293C  6EDA               	movwf	fsr2h,c
  5716  00293E  0E00               	movlw	0
  5717  002940  6EDF               	movwf	indf2,c
  5718                           
  5719                           ; BSR set to: 0
  5720                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 498:     if (nmode == 'e') {
  5721  002942  0E65               	movlw	101
  5722  002944  1995               	xorwf	efgtoa@nmode& (0+255),w,b
  5723  002946  A4D8               	btfss	status,2,c
  5724  002948  D448               	goto	l9616
  5725                           
  5726                           ; BSR set to: 0
  5727                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 499:         i = sizeof(dbuf)
      +                           - 1;
  5728  00294A  0E00               	movlw	0
  5729  00294C  6FA6               	movwf	(efgtoa@i+1)& (0+255),b
  5730  00294E  0E4F               	movlw	79
  5731  002950  6FA5               	movwf	efgtoa@i& (0+255),b
  5732                           
  5733                           ; BSR set to: 0
  5734                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 500:         dbuf[i] = '\0';
  5735  002952  0E98               	movlw	low _dbuf
  5736  002954  25A5               	addwf	efgtoa@i& (0+255),w,b
  5737  002956  6ED9               	movwf	fsr2l,c
  5738  002958  0E01               	movlw	high _dbuf
  5739  00295A  21A6               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5740  00295C  6EDA               	movwf	fsr2h,c
  5741  00295E  0E00               	movlw	0
  5742  002960  6EDF               	movwf	indf2,c
  5743                           
  5744                           ; BSR set to: 0
  5745                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 501:         sign = 0;
  5746  002962  0E00               	movlw	0
  5747  002964  6F92               	movwf	(efgtoa@sign+1)& (0+255),b
  5748  002966  0E00               	movlw	0
  5749  002968  6F91               	movwf	efgtoa@sign& (0+255),b
  5750                           
  5751                           ; BSR set to: 0
  5752                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 502:         if (e < 0) {
  5753  00296A  AFA8               	btfss	(efgtoa@e+1)& (0+255),7,b
  5754  00296C  D008               	goto	l9830
  5755                           
  5756                           ; BSR set to: 0
  5757                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 503:             sign = 1;
  5758  00296E  0E00               	movlw	0
  5759  002970  6F92               	movwf	(efgtoa@sign+1)& (0+255),b
  5760  002972  0E01               	movlw	1
  5761  002974  6F91               	movwf	efgtoa@sign& (0+255),b
  5762                           
  5763                           ; BSR set to: 0
  5764                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 504:             e = -e;
  5765  002976  6DA7               	negf	efgtoa@e& (0+255),b
  5766  002978  1FA8               	comf	(efgtoa@e+1)& (0+255),f,b
  5767  00297A  B0D8               	btfsc	status,0,c
  5768  00297C  2BA8               	incf	(efgtoa@e+1)& (0+255),f,b
  5769  00297E                     l9830:
  5770                           
  5771                           ; BSR set to: 0
  5772                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 506:         p = 2;
  5773  00297E  0E00               	movlw	0
  5774  002980  6F94               	movwf	(efgtoa@p+1)& (0+255),b
  5775  002982  0E02               	movlw	2
  5776  002984  6F93               	movwf	efgtoa@p& (0+255),b
  5777                           
  5778                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 507:         while (e || (0 <
      +                           p)) {
  5779  002986  D02A               	goto	l9842
  5780  002988                     l9832:
  5781                           
  5782                           ; BSR set to: 0
  5783                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 508:             --i;
  5784  002988  07A5               	decf	efgtoa@i& (0+255),f,b
  5785  00298A  A0D8               	btfss	status,0,c
  5786  00298C  07A6               	decf	(efgtoa@i+1)& (0+255),f,b
  5787                           
  5788                           ; BSR set to: 0
  5789                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 509:             dbuf[i] = '0
      +                          ' + (e % 10);
  5790  00298E  0E98               	movlw	low _dbuf
  5791  002990  25A5               	addwf	efgtoa@i& (0+255),w,b
  5792  002992  6ED9               	movwf	fsr2l,c
  5793  002994  0E01               	movlw	high _dbuf
  5794  002996  21A6               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5795  002998  6EDA               	movwf	fsr2h,c
  5796  00299A  C0A7  F015         	movff	efgtoa@e,___awmod@dividend
  5797  00299E  C0A8  F016         	movff	efgtoa@e+1,___awmod@dividend+1
  5798  0029A2  0E00               	movlw	0
  5799  0029A4  6E18               	movwf	(___awmod@divisor+1)^0,c
  5800  0029A6  0E0A               	movlw	10
  5801  0029A8  6E17               	movwf	___awmod@divisor^0,c
  5802  0029AA  ECDD  F029         	call	___awmod	;wreg free
  5803  0029AE  5015               	movf	?___awmod^0,w,c
  5804  0029B0  0F30               	addlw	48
  5805  0029B2  6EDF               	movwf	indf2,c
  5806                           
  5807                           ; BSR set to: 0
  5808                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 510:             e = e / 10;
  5809  0029B4  C0A7  F015         	movff	efgtoa@e,___awdiv@dividend
  5810  0029B8  C0A8  F016         	movff	efgtoa@e+1,___awdiv@dividend+1
  5811  0029BC  0E00               	movlw	0
  5812  0029BE  6E18               	movwf	(___awdiv@divisor+1)^0,c
  5813  0029C0  0E0A               	movlw	10
  5814  0029C2  6E17               	movwf	___awdiv@divisor^0,c
  5815  0029C4  EC62  F029         	call	___awdiv	;wreg free
  5816  0029C8  C015  F0A7         	movff	?___awdiv,efgtoa@e
  5817  0029CC  C016  F0A8         	movff	?___awdiv+1,efgtoa@e+1
  5818                           
  5819                           ; BSR set to: 0
  5820                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 511:             --p;
  5821  0029D0  0793               	decf	efgtoa@p& (0+255),f,b
  5822  0029D2  A0D8               	btfss	status,0,c
  5823  0029D4  0794               	decf	(efgtoa@p+1)& (0+255),f,b
  5824                           
  5825                           ; BSR set to: 0
  5826                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 512:             --w;
  5827  0029D6  0796               	decf	efgtoa@w& (0+255),f,b
  5828  0029D8  A0D8               	btfss	status,0,c
  5829  0029DA  0797               	decf	(efgtoa@w+1)& (0+255),f,b
  5830  0029DC                     l9842:
  5831                           
  5832                           ; BSR set to: 0
  5833                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 507:         while (e || (0 <
      +                           p)) {
  5834  0029DC  51A7               	movf	efgtoa@e& (0+255),w,b
  5835  0029DE  11A8               	iorwf	(efgtoa@e+1)& (0+255),w,b
  5836  0029E0  A4D8               	btfss	status,2,c
  5837  0029E2  D7D2               	goto	l9832
  5838                           
  5839                           ; BSR set to: 0
  5840  0029E4  BF94               	btfsc	(efgtoa@p+1)& (0+255),7,b
  5841  0029E6  D005               	goto	u11590
  5842  0029E8  5194               	movf	(efgtoa@p+1)& (0+255),w,b
  5843  0029EA  E1CE               	bnz	l9832
  5844  0029EC  0593               	decf	efgtoa@p& (0+255),w,b
  5845  0029EE  B0D8               	btfsc	status,0,c
  5846  0029F0  D7CB               	goto	l9832
  5847  0029F2                     u11590:
  5848                           
  5849                           ; BSR set to: 0
  5850                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 514:         --i;
  5851  0029F2  07A5               	decf	efgtoa@i& (0+255),f,b
  5852  0029F4  A0D8               	btfss	status,0,c
  5853  0029F6  07A6               	decf	(efgtoa@i+1)& (0+255),f,b
  5854                           
  5855                           ; BSR set to: 0
  5856                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 515:         dbuf[i] = sign ?
      +                           '-' : '+';
  5857  0029F8  5191               	movf	efgtoa@sign& (0+255),w,b
  5858  0029FA  1192               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5859  0029FC  A4D8               	btfss	status,2,c
  5860  0029FE  D004               	goto	l9852
  5861                           
  5862                           ; BSR set to: 0
  5863  002A00  0E00               	movlw	0
  5864  002A02  6F80               	movwf	(_efgtoa$2730+1)& (0+255),b
  5865  002A04  0E2B               	movlw	43
  5866  002A06  D003               	goto	L5
  5867  002A08                     l9852:
  5868                           
  5869                           ; BSR set to: 0
  5870  002A08  0E00               	movlw	0
  5871  002A0A  6F80               	movwf	(_efgtoa$2730+1)& (0+255),b
  5872  002A0C  0E2D               	movlw	45
  5873  002A0E                     L5:
  5874  002A0E  6F7F               	movwf	_efgtoa$2730& (0+255),b
  5875                           
  5876                           ; BSR set to: 0
  5877  002A10  0E98               	movlw	low _dbuf
  5878  002A12  25A5               	addwf	efgtoa@i& (0+255),w,b
  5879  002A14  6ED9               	movwf	fsr2l,c
  5880  002A16  0E01               	movlw	high _dbuf
  5881  002A18  21A6               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5882  002A1A  6EDA               	movwf	fsr2h,c
  5883  002A1C  0060  F1FF  FFDF   	movff	_efgtoa$2730,indf2
  5884                           
  5885                           ; BSR set to: 0
  5886                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 516:         --w;
  5887  002A22  0796               	decf	efgtoa@w& (0+255),f,b
  5888  002A24  A0D8               	btfss	status,0,c
  5889  002A26  0797               	decf	(efgtoa@w+1)& (0+255),f,b
  5890                           
  5891                           ; BSR set to: 0
  5892                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 517:         --i;
  5893  002A28  07A5               	decf	efgtoa@i& (0+255),f,b
  5894  002A2A  A0D8               	btfss	status,0,c
  5895  002A2C  07A6               	decf	(efgtoa@i+1)& (0+255),f,b
  5896                           
  5897                           ; BSR set to: 0
  5898                           
  5899                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 518:         dbuf[i] = (0 && 
      +                          isupper((int)c), ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  5900  002A2E  0EBF               	movlw	191
  5901  002A30  6F78               	movwf	??_efgtoa& (0+255),b
  5902  002A32  0EFF               	movlw	255
  5903  002A34  6F79               	movwf	(??_efgtoa+1)& (0+255),b
  5904  002A36  5177               	movf	efgtoa@c& (0+255),w,b
  5905  002A38  6F7A               	movwf	(??_efgtoa+2)& (0+255),b
  5906  002A3A  6B7B               	clrf	(??_efgtoa+3)& (0+255),b
  5907  002A3C  5178               	movf	??_efgtoa& (0+255),w,b
  5908  002A3E  277A               	addwf	(??_efgtoa+2)& (0+255),f,b
  5909  002A40  5179               	movf	(??_efgtoa+1)& (0+255),w,b
  5910  002A42  237B               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5911  002A44  517B               	movf	(??_efgtoa+3)& (0+255),w,b
  5912  002A46  E104               	bnz	u11610
  5913  002A48  0E1A               	movlw	26
  5914  002A4A  5D7A               	subwf	(??_efgtoa+2)& (0+255),w,b
  5915  002A4C  A0D8               	btfss	status,0,c
  5916  002A4E  D004               	goto	l9866
  5917  002A50                     u11610:
  5918                           
  5919                           ; BSR set to: 0
  5920  002A50  0E00               	movlw	0
  5921  002A52  6F82               	movwf	(_efgtoa$2731+1)& (0+255),b
  5922  002A54  0E65               	movlw	101
  5923  002A56  D003               	goto	L6
  5924  002A58                     l9866:
  5925                           
  5926                           ; BSR set to: 0
  5927  002A58  0E00               	movlw	0
  5928  002A5A  6F82               	movwf	(_efgtoa$2731+1)& (0+255),b
  5929  002A5C  0E45               	movlw	69
  5930  002A5E                     L6:
  5931  002A5E  6F81               	movwf	_efgtoa$2731& (0+255),b
  5932                           
  5933                           ; BSR set to: 0
  5934  002A60  0E98               	movlw	low _dbuf
  5935  002A62  25A5               	addwf	efgtoa@i& (0+255),w,b
  5936  002A64  6ED9               	movwf	fsr2l,c
  5937  002A66  0E01               	movlw	high _dbuf
  5938  002A68  21A6               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5939  002A6A  6EDA               	movwf	fsr2h,c
  5940  002A6C  0060  F207  FFDF   	movff	_efgtoa$2731,indf2
  5941                           
  5942                           ; BSR set to: 0
  5943                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 519:         --w;
  5944  002A72  0796               	decf	efgtoa@w& (0+255),f,b
  5945  002A74  A0D8               	btfss	status,0,c
  5946  002A76  0797               	decf	(efgtoa@w+1)& (0+255),f,b
  5947                           
  5948                           ; BSR set to: 0
  5949                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 520:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
  5950  002A78  0E98               	movlw	low _dbuf
  5951  002A7A  25A9               	addwf	efgtoa@n& (0+255),w,b
  5952  002A7C  6E15               	movwf	strcpy@dest^0,c
  5953  002A7E  0E01               	movlw	high _dbuf
  5954  002A80  21AA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5955  002A82  6E16               	movwf	(strcpy@dest+1)^0,c
  5956  002A84  0E98               	movlw	low _dbuf
  5957  002A86  25A5               	addwf	efgtoa@i& (0+255),w,b
  5958  002A88  6E17               	movwf	strcpy@src^0,c
  5959  002A8A  0E01               	movlw	high _dbuf
  5960  002A8C  21A6               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5961  002A8E  6E18               	movwf	(strcpy@src+1)^0,c
  5962  002A90  EC49  F02A         	call	_strcpy	;wreg free
  5963  002A94  EFED  F010         	goto	l9616
  5964  002A98                     __end_of_efgtoa:
  5965                           	callstack 0
  5966                           
  5967 ;; *************** function _tolower *****************
  5968 ;; Defined at:
  5969 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/tolower.c"
  5970 ;; Parameters:    Size  Location     Type
  5971 ;;  c               2   26[COMRAM] int 
  5972 ;; Auto vars:     Size  Location     Type
  5973 ;;		None
  5974 ;; Return value:  Size  Location     Type
  5975 ;;                  2   26[COMRAM] int 
  5976 ;; Registers used:
  5977 ;;		wreg, status,2, status,0
  5978 ;; Tracked objects:
  5979 ;;		On entry : 3F/0
  5980 ;;		On exit  : 3F/0
  5981 ;;		Unchanged: 3F/0
  5982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5983 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5985 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5986 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5987 ;;Total ram usage:        6 bytes
  5988 ;; Hardware stack levels used: 1
  5989 ;; Hardware stack levels required when called: 5
  5990 ;; This function calls:
  5991 ;;		_isupper
  5992 ;; This function is called by:
  5993 ;;		_efgtoa
  5994 ;;		_vfpfcnvrt
  5995 ;; This function uses a non-reentrant model
  5996 ;;
  5997                           
  5998                           	psect	text12
  5999  0058CA                     __ptext12:
  6000                           	callstack 0
  6001  0058CA                     _tolower:
  6002                           	callstack 20
  6003                           
  6004                           ; BSR set to: 0
  6005                           
  6006                           ; BSR set to: 0
  6007                           
  6008                           ;incstack = 0
  6009  0058CA  0EBF               	movlw	191
  6010  0058CC  6E1D               	movwf	??_tolower^0,c
  6011  0058CE  0EFF               	movlw	255
  6012  0058D0  6E1E               	movwf	(??_tolower+1)^0,c
  6013  0058D2  C01B  F01F         	movff	tolower@c,??_tolower+2
  6014  0058D6  C01C  F020         	movff	tolower@c+1,??_tolower+3
  6015  0058DA  501D               	movf	??_tolower^0,w,c
  6016  0058DC  261F               	addwf	(??_tolower+2)^0,f,c
  6017  0058DE  501E               	movf	(??_tolower+1)^0,w,c
  6018  0058E0  2220               	addwfc	(??_tolower+3)^0,f,c
  6019  0058E2  5020               	movf	(??_tolower+3)^0,w,c
  6020  0058E4  E10A               	bnz	l2184
  6021  0058E6  0E1A               	movlw	26
  6022  0058E8  5C1F               	subwf	(??_tolower+2)^0,w,c
  6023  0058EA  B0D8               	btfsc	status,0,c
  6024  0058EC  D006               	goto	l2184
  6025                           
  6026                           ; BSR set to: 0
  6027  0058EE  0E20               	movlw	32
  6028  0058F0  101B               	iorwf	tolower@c^0,w,c
  6029  0058F2  6E1B               	movwf	?_tolower^0,c
  6030  0058F4  501C               	movf	(tolower@c+1)^0,w,c
  6031  0058F6  6E1C               	movwf	(?_tolower+1)^0,c
  6032  0058F8  0012               	return	
  6033  0058FA                     l2184:
  6034                           
  6035                           ; BSR set to: 0
  6036  0058FA  C01B  F01B         	movff	tolower@c,?_tolower
  6037  0058FE  C01C  F01C         	movff	tolower@c+1,?_tolower+1
  6038                           
  6039                           ; BSR set to: 0
  6040  005902  0012               	return		;funcret
  6041  005904                     __end_of_tolower:
  6042                           	callstack 0
  6043                           
  6044 ;; *************** function _isupper *****************
  6045 ;; Defined at:
  6046 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/isupper.c"
  6047 ;; Parameters:    Size  Location     Type
  6048 ;;  c               2   20[COMRAM] int 
  6049 ;; Auto vars:     Size  Location     Type
  6050 ;;		None
  6051 ;; Return value:  Size  Location     Type
  6052 ;;                  2   20[COMRAM] int 
  6053 ;; Registers used:
  6054 ;;		wreg, status,2, status,0
  6055 ;; Tracked objects:
  6056 ;;		On entry : 0/0
  6057 ;;		On exit  : 0/0
  6058 ;;		Unchanged: 0/0
  6059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6060 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6062 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6063 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6064 ;;Total ram usage:        6 bytes
  6065 ;; Hardware stack levels used: 1
  6066 ;; Hardware stack levels required when called: 4
  6067 ;; This function calls:
  6068 ;;		Nothing
  6069 ;; This function is called by:
  6070 ;;		_efgtoa
  6071 ;;		_vfpfcnvrt
  6072 ;;		_tolower
  6073 ;; This function uses a non-reentrant model
  6074 ;;
  6075                           
  6076                           	psect	text13
  6077  0059B2                     __ptext13:
  6078                           	callstack 0
  6079  0059B2                     _isupper:
  6080                           	callstack 20
  6081                           
  6082                           ; BSR set to: 0
  6083                           ;incstack = 0
  6084  0059B2  0EBF               	movlw	191
  6085  0059B4  6E17               	movwf	??_isupper^0,c
  6086  0059B6  0EFF               	movlw	255
  6087  0059B8  6E18               	movwf	(??_isupper+1)^0,c
  6088  0059BA  C015  F019         	movff	isupper@c,??_isupper+2
  6089  0059BE  C016  F01A         	movff	isupper@c+1,??_isupper+3
  6090  0059C2  5017               	movf	??_isupper^0,w,c
  6091  0059C4  2619               	addwf	(??_isupper+2)^0,f,c
  6092  0059C6  5018               	movf	(??_isupper+1)^0,w,c
  6093  0059C8  221A               	addwfc	(??_isupper+3)^0,f,c
  6094  0059CA  501A               	movf	(??_isupper+3)^0,w,c
  6095  0059CC  E106               	bnz	u9980
  6096  0059CE  0E1A               	movlw	26
  6097  0059D0  5C19               	subwf	(??_isupper+2)^0,w,c
  6098  0059D2  B0D8               	btfsc	status,0,c
  6099  0059D4  D002               	goto	u9980
  6100  0059D6  0E01               	movlw	1
  6101  0059D8  D001               	goto	u9990
  6102  0059DA                     u9980:
  6103  0059DA  0E00               	movlw	0
  6104  0059DC                     u9990:
  6105  0059DC  6E15               	movwf	?_isupper^0,c
  6106  0059DE  6A16               	clrf	(?_isupper+1)^0,c
  6107  0059E0  0012               	return		;funcret
  6108  0059E2                     __end_of_isupper:
  6109                           	callstack 0
  6110                           
  6111 ;; *************** function _strcpy *****************
  6112 ;; Defined at:
  6113 ;;		line 3 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/strcpy.c"
  6114 ;; Parameters:    Size  Location     Type
  6115 ;;  dest            2   20[COMRAM] PTR unsigned char 
  6116 ;;		 -> dbuf(80), 
  6117 ;;  src             2   22[COMRAM] PTR const unsigned char 
  6118 ;;		 -> STR_16(4), STR_15(4), STR_12(4), STR_11(4), 
  6119 ;;		 -> dbuf(80), 
  6120 ;; Auto vars:     Size  Location     Type
  6121 ;;  d               2   28[COMRAM] PTR unsigned char 
  6122 ;;		 -> dbuf(80), 
  6123 ;;  s               2   26[COMRAM] PTR const unsigned char 
  6124 ;;		 -> STR_16(4), STR_15(4), STR_12(4), STR_11(4), 
  6125 ;;		 -> dbuf(80), 
  6126 ;; Return value:  Size  Location     Type
  6127 ;;                  2   20[COMRAM] PTR unsigned char 
  6128 ;; Registers used:
  6129 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6130 ;; Tracked objects:
  6131 ;;		On entry : 3F/0
  6132 ;;		On exit  : 0/0
  6133 ;;		Unchanged: 0/0
  6134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6135 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6136 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6137 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6138 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6139 ;;Total ram usage:       10 bytes
  6140 ;; Hardware stack levels used: 1
  6141 ;; Hardware stack levels required when called: 4
  6142 ;; This function calls:
  6143 ;;		Nothing
  6144 ;; This function is called by:
  6145 ;;		_efgtoa
  6146 ;; This function uses a non-reentrant model
  6147 ;;
  6148                           
  6149                           	psect	text14
  6150  005492                     __ptext14:
  6151                           	callstack 0
  6152  005492                     _strcpy:
  6153                           	callstack 20
  6154                           
  6155                           ; BSR set to: 0
  6156                           
  6157                           ;incstack = 0
  6158  005492  C017  F01B         	movff	strcpy@src,strcpy@s
  6159  005496  C018  F01C         	movff	strcpy@src+1,strcpy@s+1
  6160  00549A  C015  F01D         	movff	strcpy@dest,strcpy@d
  6161  00549E  C016  F01E         	movff	strcpy@dest+1,strcpy@d+1
  6162  0054A2                     l9496:
  6163  0054A2  501B               	movf	strcpy@s^0,w,c
  6164  0054A4  6E19               	movwf	??_strcpy^0,c
  6165  0054A6  501C               	movf	(strcpy@s+1)^0,w,c
  6166  0054A8  6E1A               	movwf	(??_strcpy+1)^0,c
  6167  0054AA  4A1B               	infsnz	strcpy@s^0,f,c
  6168  0054AC  2A1C               	incf	(strcpy@s+1)^0,f,c
  6169  0054AE  0060  F067  FFF6   	movff	??_strcpy,tblptrl
  6170  0054B4  0060  F06B  FFF7   	movff	??_strcpy+1,tblptrh
  6171  0054BA  0E00               	movlw	low (__smallconst shr (0+16))
  6172  0054BC  6EF8               	movwf	tblptru,c
  6173  0054BE  0060  F077  FFD9   	movff	strcpy@d,fsr2l
  6174  0054C4  0060  F07B  FFDA   	movff	strcpy@d+1,fsr2h
  6175  0054CA  4A1D               	infsnz	strcpy@d^0,f,c
  6176  0054CC  2A1E               	incf	(strcpy@d+1)^0,f,c
  6177  0054CE  0E1F               	movlw	(high __ramtop+-1)
  6178  0054D0  64F7               	cpfsgt	tblptrh,c
  6179  0054D2  D003               	bra	u10877
  6180  0054D4  0008               	tblrd		*
  6181  0054D6  50F5               	movf	tablat,w,c
  6182  0054D8  D007               	bra	u10870
  6183  0054DA                     u10877:
  6184  0054DA  006F FFDB FFE1     	movff	tblptrl,fsr1l
  6185  0054E0  006F FFDF FFE2     	movff	tblptrh,fsr1h
  6186  0054E6  50E7               	movf	indf1,w,c
  6187  0054E8                     u10870:
  6188  0054E8  6EDF               	movwf	indf2,c
  6189  0054EA  50DF               	movf	indf2,w,c
  6190  0054EC  B4D8               	btfsc	status,2,c
  6191  0054EE  0012               	return	
  6192  0054F0  D7D8               	goto	l9496
  6193  0054F2                     __end_of_strcpy:
  6194                           	callstack 0
  6195                           
  6196 ;; *************** function _pad *****************
  6197 ;; Defined at:
  6198 ;;		line 72 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c"
  6199 ;; Parameters:    Size  Location     Type
  6200 ;;  fp              2   40[COMRAM] PTR struct _IO_FILE
  6201 ;;		 -> sprintf@f(11), NULL(0), 
  6202 ;;  buf             2   42[COMRAM] PTR unsigned char 
  6203 ;;		 -> dbuf(80), 
  6204 ;;  p               2   44[COMRAM] int 
  6205 ;; Auto vars:     Size  Location     Type
  6206 ;;  w               2   49[COMRAM] int 
  6207 ;;  i               2   47[COMRAM] int 
  6208 ;; Return value:  Size  Location     Type
  6209 ;;                  2   40[COMRAM] int 
  6210 ;; Registers used:
  6211 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6212 ;; Tracked objects:
  6213 ;;		On entry : 0/0
  6214 ;;		On exit  : 0/0
  6215 ;;		Unchanged: 0/0
  6216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6217 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6218 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6219 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6220 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6221 ;;Total ram usage:       11 bytes
  6222 ;; Hardware stack levels used: 1
  6223 ;; Hardware stack levels required when called: 8
  6224 ;; This function calls:
  6225 ;;		_fputc
  6226 ;;		_fputs
  6227 ;;		_strlen
  6228 ;; This function is called by:
  6229 ;;		_efgtoa
  6230 ;;		_utoa
  6231 ;; This function uses a non-reentrant model
  6232 ;;
  6233                           
  6234                           	psect	text15
  6235  005120                     __ptext15:
  6236                           	callstack 0
  6237  005120                     _pad:
  6238                           	callstack 16
  6239                           
  6240                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.36/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  6241                           
  6242                           ;incstack = 0
  6243  005120  A03D               	btfss	_flags^0,0,c
  6244  005122  D00A               	goto	l9454
  6245                           
  6246                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  6247  005124  C02B  F020         	movff	pad@buf,fputs@s
  6248  005128  C02C  F021         	movff	pad@buf+1,fputs@s+1
  6249  00512C  C029  F022         	movff	pad@fp,fputs@fp
  6250  005130  C02A  F023         	movff	pad@fp+1,fputs@fp+1
  6251  005134  EC15  F02A         	call	_fputs	;wreg free
  6252  005138                     l9454:
  6253                           
  6254                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  6255  005138  BE2E               	btfsc	(pad@p+1)^0,7,c
  6256  00513A  D005               	goto	l9458
  6257  00513C  C02D  F032         	movff	pad@p,pad@w
  6258  005140  C02E  F033         	movff	pad@p+1,pad@w+1
  6259  005144  D004               	goto	l1868
  6260  005146                     l9458:
  6261  005146  0E00               	movlw	0
  6262  005148  6E33               	movwf	(pad@w+1)^0,c
  6263  00514A  0E00               	movlw	0
  6264  00514C  6E32               	movwf	pad@w^0,c
  6265  00514E                     l1868:
  6266                           
  6267                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  6268  00514E  0E00               	movlw	0
  6269  005150  6E31               	movwf	(pad@i+1)^0,c
  6270  005152  0E00               	movlw	0
  6271  005154  6E30               	movwf	pad@i^0,c
  6272                           
  6273                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  6274  005156  D00C               	goto	l9464
  6275  005158                     l9460:
  6276                           
  6277                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  6278  005158  0E00               	movlw	0
  6279  00515A  6E18               	movwf	(fputc@c+1)^0,c
  6280  00515C  0E20               	movlw	32
  6281  00515E  6E17               	movwf	fputc@c^0,c
  6282  005160  C029  F019         	movff	pad@fp,fputc@fp
  6283  005164  C02A  F01A         	movff	pad@fp+1,fputc@fp+1
  6284  005168  EC40  F027         	call	_fputc	;wreg free
  6285                           
  6286                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 86:         ++i;
  6287  00516C  4A30               	infsnz	pad@i^0,f,c
  6288  00516E  2A31               	incf	(pad@i+1)^0,f,c
  6289  005170                     l9464:
  6290                           
  6291                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  6292  005170  5032               	movf	pad@w^0,w,c
  6293  005172  5C30               	subwf	pad@i^0,w,c
  6294  005174  5031               	movf	(pad@i+1)^0,w,c
  6295  005176  0A80               	xorlw	128
  6296  005178  6E2F               	movwf	??_pad^0,c
  6297  00517A  5033               	movf	(pad@w+1)^0,w,c
  6298  00517C  0A80               	xorlw	128
  6299  00517E  582F               	subwfb	??_pad^0,w,c
  6300  005180  A0D8               	btfss	status,0,c
  6301  005182  D7EA               	goto	l9460
  6302                           
  6303                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  6304  005184  B03D               	btfsc	_flags^0,0,c
  6305  005186  D00A               	goto	l9468
  6306                           
  6307                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  6308  005188  C02B  F020         	movff	pad@buf,fputs@s
  6309  00518C  C02C  F021         	movff	pad@buf+1,fputs@s+1
  6310  005190  C029  F022         	movff	pad@fp,fputs@fp
  6311  005194  C02A  F023         	movff	pad@fp+1,fputs@fp+1
  6312  005198  EC15  F02A         	call	_fputs	;wreg free
  6313  00519C                     l9468:
  6314                           
  6315                           ;/opt/microchip/xc8/v2.36/pic/sources/c99/common/doprnt.c: 94:     return (int)(strlen(b
      +                          uf) + (size_t)w);
  6316  00519C  C02B  F015         	movff	pad@buf,strlen@s
  6317  0051A0  C02C  F016         	movff	pad@buf+1,strlen@s+1
  6318  0051A4  EC19  F02B         	call	_strlen	;wreg free
  6319  0051A8  5032               	movf	pad@w^0,w,c
  6320  0051AA  2415               	addwf	?_strlen^0,w,c
  6321  0051AC  6E29               	movwf	?_pad^0,c
  6322  0051AE  5033               	movf	(pad@w+1)^0,w,c
  6323  0051B0  2016               	addwfc	(?_strlen+1)^0,w,c
  6324  0051B2  6E2A               	movwf	(?_pad+1)^0,c
  6325  0051B4  0012               	return		;funcret
  6326  0051B6                     __end_of_pad:
  6327                           	callstack 0
  6328                           
  6329 ;; *************** function _floorf *****************
  6330 ;; Defined at:
  6331 ;;		line 3 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/floorf.c"
  6332 ;; Parameters:    Size  Location     Type
  6333 ;;  x               4   45[COMRAM] float 
  6334 ;; Auto vars:     Size  Location     Type
  6335 ;;  u               4    6[BANK0 ] struct .
  6336 ;;  m               4    0[BANK0 ] unsigned long 
  6337 ;;  e               2    4[BANK0 ] int 
  6338 ;; Return value:  Size  Location     Type
  6339 ;;                  4   45[COMRAM] float 
  6340 ;; Registers used:
  6341 ;;		wreg, status,2, status,0
  6342 ;; Tracked objects:
  6343 ;;		On entry : 3F/0
  6344 ;;		On exit  : 3F/0
  6345 ;;		Unchanged: 0/0
  6346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6347 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6348 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6349 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6350 ;;      Totals:        10      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6351 ;;Total ram usage:       20 bytes
  6352 ;; Hardware stack levels used: 1
  6353 ;; Hardware stack levels required when called: 4
  6354 ;; This function calls:
  6355 ;;		Nothing
  6356 ;; This function is called by:
  6357 ;;		_efgtoa
  6358 ;; This function uses a non-reentrant model
  6359 ;;
  6360                           
  6361                           	psect	text16
  6362  003FC0                     __ptext16:
  6363                           	callstack 0
  6364  003FC0                     _floorf:
  6365                           	callstack 20
  6366                           
  6367                           ; BSR set to: 0
  6368                           
  6369                           ;incstack = 0
  6370  003FC0  C18C  F066         	movff	floorf@F526,floorf@u
  6371  003FC4  C18D  F067         	movff	floorf@F526+1,floorf@u+1
  6372  003FC8  C18E  F068         	movff	floorf@F526+2,floorf@u+2
  6373  003FCC  C18F  F069         	movff	floorf@F526+3,floorf@u+3
  6374  003FD0  C02E  F066         	movff	floorf@x,floorf@u
  6375  003FD4  C02F  F067         	movff	floorf@x+1,floorf@u+1
  6376  003FD8  C030  F068         	movff	floorf@x+2,floorf@u+2
  6377  003FDC  C031  F069         	movff	floorf@x+3,floorf@u+3
  6378                           
  6379                           ; BSR set to: 0
  6380  003FE0  0E81               	movlw	129
  6381  003FE2  6E32               	movwf	??_floorf^0,c
  6382  003FE4  0EFF               	movlw	255
  6383  003FE6  6E33               	movwf	(??_floorf+1)^0,c
  6384  003FE8  C066  F034         	movff	floorf@u,??_floorf+2
  6385  003FEC  C067  F035         	movff	floorf@u+1,??_floorf+3
  6386  003FF0  C068  F036         	movff	floorf@u+2,??_floorf+4
  6387  003FF4  C069  F037         	movff	floorf@u+3,??_floorf+5
  6388  003FF8  0E18               	movlw	24
  6389  003FFA  D005               	goto	u10900
  6390  003FFC                     u10905:
  6391  003FFC  90D8               	bcf	status,0,c
  6392  003FFE  3237               	rrcf	(??_floorf+5)^0,f,c
  6393  004000  3236               	rrcf	(??_floorf+4)^0,f,c
  6394  004002  3235               	rrcf	(??_floorf+3)^0,f,c
  6395  004004  3234               	rrcf	(??_floorf+2)^0,f,c
  6396  004006                     u10900:
  6397  004006  2EE8               	decfsz	wreg,f,c
  6398  004008  D7F9               	goto	u10905
  6399  00400A  5034               	movf	(??_floorf+2)^0,w,c
  6400  00400C  2432               	addwf	??_floorf^0,w,c
  6401  00400E  6F64               	movwf	floorf@e& (0+255),b
  6402  004010  0E00               	movlw	0
  6403  004012  2033               	addwfc	(??_floorf+1)^0,w,c
  6404  004014  6F65               	movwf	(floorf@e+1)& (0+255),b
  6405  004016  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  6406  004018  D00F               	goto	l9514
  6407  00401A  5165               	movf	(floorf@e+1)& (0+255),w,b
  6408  00401C  E104               	bnz	u10910
  6409  00401E  0E17               	movlw	23
  6410  004020  5D64               	subwf	floorf@e& (0+255),w,b
  6411  004022  A0D8               	btfss	status,0,c
  6412  004024  D009               	goto	l9514
  6413  004026                     u10910:
  6414                           
  6415                           ; BSR set to: 0
  6416  004026  C02E  F02E         	movff	floorf@x,?_floorf
  6417  00402A  C02F  F02F         	movff	floorf@x+1,?_floorf+1
  6418  00402E  C030  F030         	movff	floorf@x+2,?_floorf+2
  6419  004032  C031  F031         	movff	floorf@x+3,?_floorf+3
  6420  004036  0012               	return	
  6421  004038                     l9514:
  6422                           
  6423                           ; BSR set to: 0
  6424  004038  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  6425  00403A  D05C               	goto	l9524
  6426                           
  6427                           ; BSR set to: 0
  6428  00403C  C064  F032         	movff	floorf@e,??_floorf
  6429  004040  0EFF               	movlw	255
  6430  004042  6E33               	movwf	(??_floorf+1)^0,c
  6431  004044  0EFF               	movlw	255
  6432  004046  6E34               	movwf	(??_floorf+2)^0,c
  6433  004048  0E7F               	movlw	127
  6434  00404A  6E35               	movwf	(??_floorf+3)^0,c
  6435  00404C  0E00               	movlw	0
  6436  00404E  6E36               	movwf	(??_floorf+4)^0,c
  6437  004050                     u10935:
  6438  004050  6632               	tstfsz	??_floorf^0,c
  6439  004052  D001               	goto	u10936
  6440  004054  D007               	goto	u10937
  6441  004056                     u10936:
  6442  004056  3436               	rlcf	(??_floorf+4)^0,w,c
  6443  004058  3236               	rrcf	(??_floorf+4)^0,f,c
  6444  00405A  3235               	rrcf	(??_floorf+3)^0,f,c
  6445  00405C  3234               	rrcf	(??_floorf+2)^0,f,c
  6446  00405E  3233               	rrcf	(??_floorf+1)^0,f,c
  6447  004060  2E32               	decfsz	??_floorf^0,f,c
  6448  004062  D7F6               	goto	u10935
  6449  004064                     u10937:
  6450  004064  C033  F060         	movff	??_floorf+1,floorf@m
  6451  004068  C034  F061         	movff	??_floorf+2,floorf@m+1
  6452  00406C  C035  F062         	movff	??_floorf+3,floorf@m+2
  6453  004070  C036  F063         	movff	??_floorf+4,floorf@m+3
  6454  004074  0100               	movlb	0	; () banked
  6455  004076  5160               	movf	floorf@m& (0+255),w,b
  6456  004078  1566               	andwf	floorf@u& (0+255),w,b
  6457  00407A  6E32               	movwf	??_floorf^0,c
  6458  00407C  5161               	movf	(floorf@m+1)& (0+255),w,b
  6459  00407E  1567               	andwf	(floorf@u+1)& (0+255),w,b
  6460  004080  6E33               	movwf	(??_floorf+1)^0,c
  6461  004082  5162               	movf	(floorf@m+2)& (0+255),w,b
  6462  004084  1568               	andwf	(floorf@u+2)& (0+255),w,b
  6463  004086  6E34               	movwf	(??_floorf+2)^0,c
  6464  004088  5163               	movf	(floorf@m+3)& (0+255),w,b
  6465  00408A  1569               	andwf	(floorf@u+3)& (0+255),w,b
  6466  00408C  6E35               	movwf	(??_floorf+3)^0,c
  6467  00408E  5032               	movf	??_floorf^0,w,c
  6468  004090  1033               	iorwf	(??_floorf+1)^0,w,c
  6469  004092  1034               	iorwf	(??_floorf+2)^0,w,c
  6470  004094  1035               	iorwf	(??_floorf+3)^0,w,c
  6471  004096  B4D8               	btfsc	status,2,c
  6472  004098  D7C6               	goto	u10910
  6473                           
  6474                           ; BSR set to: 0
  6475  00409A  C066  F032         	movff	floorf@u,??_floorf
  6476  00409E  C067  F033         	movff	floorf@u+1,??_floorf+1
  6477  0040A2  C068  F034         	movff	floorf@u+2,??_floorf+2
  6478  0040A6  C069  F035         	movff	floorf@u+3,??_floorf+3
  6479  0040AA  0E20               	movlw	32
  6480  0040AC  D005               	goto	u10950
  6481  0040AE                     u10955:
  6482  0040AE  90D8               	bcf	status,0,c
  6483  0040B0  3235               	rrcf	(??_floorf+3)^0,f,c
  6484  0040B2  3234               	rrcf	(??_floorf+2)^0,f,c
  6485  0040B4  3233               	rrcf	(??_floorf+1)^0,f,c
  6486  0040B6  3232               	rrcf	??_floorf^0,f,c
  6487  0040B8                     u10950:
  6488  0040B8  2EE8               	decfsz	wreg,f,c
  6489  0040BA  D7F9               	goto	u10955
  6490  0040BC  5032               	movf	??_floorf^0,w,c
  6491  0040BE  B4D8               	btfsc	status,2,c
  6492  0040C0  D008               	goto	l2098
  6493                           
  6494                           ; BSR set to: 0
  6495  0040C2  5160               	movf	floorf@m& (0+255),w,b
  6496  0040C4  2766               	addwf	floorf@u& (0+255),f,b
  6497  0040C6  5161               	movf	(floorf@m+1)& (0+255),w,b
  6498  0040C8  2367               	addwfc	(floorf@u+1)& (0+255),f,b
  6499  0040CA  5162               	movf	(floorf@m+2)& (0+255),w,b
  6500  0040CC  2368               	addwfc	(floorf@u+2)& (0+255),f,b
  6501  0040CE  5163               	movf	(floorf@m+3)& (0+255),w,b
  6502  0040D0  2369               	addwfc	(floorf@u+3)& (0+255),f,b
  6503  0040D2                     l2098:
  6504                           
  6505                           ; BSR set to: 0
  6506  0040D2  1D60               	comf	floorf@m& (0+255),w,b
  6507  0040D4  6E32               	movwf	??_floorf^0,c
  6508  0040D6  1D61               	comf	(floorf@m+1)& (0+255),w,b
  6509  0040D8  6E33               	movwf	(??_floorf+1)^0,c
  6510  0040DA  1D62               	comf	(floorf@m+2)& (0+255),w,b
  6511  0040DC  6E34               	movwf	(??_floorf+2)^0,c
  6512  0040DE  1D63               	comf	(floorf@m+3)& (0+255),w,b
  6513  0040E0  6E35               	movwf	(??_floorf+3)^0,c
  6514  0040E2  5032               	movf	??_floorf^0,w,c
  6515  0040E4  1766               	andwf	floorf@u& (0+255),f,b
  6516  0040E6  5033               	movf	(??_floorf+1)^0,w,c
  6517  0040E8  1767               	andwf	(floorf@u+1)& (0+255),f,b
  6518  0040EA  5034               	movf	(??_floorf+2)^0,w,c
  6519  0040EC  1768               	andwf	(floorf@u+2)& (0+255),f,b
  6520  0040EE  5035               	movf	(??_floorf+3)^0,w,c
  6521  0040F0  1769               	andwf	(floorf@u+3)& (0+255),f,b
  6522  0040F2  D032               	goto	l9532
  6523  0040F4                     l9524:
  6524                           
  6525                           ; BSR set to: 0
  6526  0040F4  C066  F032         	movff	floorf@u,??_floorf
  6527  0040F8  C067  F033         	movff	floorf@u+1,??_floorf+1
  6528  0040FC  C068  F034         	movff	floorf@u+2,??_floorf+2
  6529  004100  C069  F035         	movff	floorf@u+3,??_floorf+3
  6530  004104  0E20               	movlw	32
  6531  004106  D005               	goto	u10970
  6532  004108                     u10975:
  6533  004108  90D8               	bcf	status,0,c
  6534  00410A  3235               	rrcf	(??_floorf+3)^0,f,c
  6535  00410C  3234               	rrcf	(??_floorf+2)^0,f,c
  6536  00410E  3233               	rrcf	(??_floorf+1)^0,f,c
  6537  004110  3232               	rrcf	??_floorf^0,f,c
  6538  004112                     u10970:
  6539  004112  2EE8               	decfsz	wreg,f,c
  6540  004114  D7F9               	goto	u10975
  6541  004116  6632               	tstfsz	??_floorf^0,c
  6542  004118  D008               	goto	l9528
  6543                           
  6544                           ; BSR set to: 0
  6545  00411A  0E00               	movlw	0
  6546  00411C  6F66               	movwf	floorf@u& (0+255),b
  6547  00411E  0E00               	movlw	0
  6548  004120  6F67               	movwf	(floorf@u+1)& (0+255),b
  6549  004122  0E00               	movlw	0
  6550  004124  6F68               	movwf	(floorf@u+2)& (0+255),b
  6551  004126  0E00               	movlw	0
  6552  004128  D016               	goto	L7
  6553  00412A                     l9528:
  6554                           
  6555                           ; BSR set to: 0
  6556  00412A  90D8               	bcf	status,0,c
  6557  00412C  3566               	rlcf	floorf@u& (0+255),w,b
  6558  00412E  6E32               	movwf	??_floorf^0,c
  6559  004130  3567               	rlcf	(floorf@u+1)& (0+255),w,b
  6560  004132  6E33               	movwf	(??_floorf+1)^0,c
  6561  004134  3568               	rlcf	(floorf@u+2)& (0+255),w,b
  6562  004136  6E34               	movwf	(??_floorf+2)^0,c
  6563  004138  3569               	rlcf	(floorf@u+3)& (0+255),w,b
  6564  00413A  6E35               	movwf	(??_floorf+3)^0,c
  6565  00413C  5032               	movf	??_floorf^0,w,c
  6566  00413E  1033               	iorwf	(??_floorf+1)^0,w,c
  6567  004140  1034               	iorwf	(??_floorf+2)^0,w,c
  6568  004142  1035               	iorwf	(??_floorf+3)^0,w,c
  6569  004144  B4D8               	btfsc	status,2,c
  6570  004146  D008               	goto	l9532
  6571                           
  6572                           ; BSR set to: 0
  6573  004148  0E00               	movlw	0
  6574  00414A  6F66               	movwf	floorf@u& (0+255),b
  6575  00414C  0E00               	movlw	0
  6576  00414E  6F67               	movwf	(floorf@u+1)& (0+255),b
  6577  004150  0E80               	movlw	128
  6578  004152  6F68               	movwf	(floorf@u+2)& (0+255),b
  6579  004154  0EBF               	movlw	191
  6580  004156                     L7:
  6581  004156  6F69               	movwf	(floorf@u+3)& (0+255),b
  6582  004158                     l9532:
  6583                           
  6584                           ; BSR set to: 0
  6585  004158  C066  F02E         	movff	floorf@u,?_floorf
  6586  00415C  C067  F02F         	movff	floorf@u+1,?_floorf+1
  6587  004160  C068  F030         	movff	floorf@u+2,?_floorf+2
  6588  004164  C069  F031         	movff	floorf@u+3,?_floorf+3
  6589                           
  6590                           ; BSR set to: 0
  6591  004168  0012               	return		;funcret
  6592  00416A                     __end_of_floorf:
  6593                           	callstack 0
  6594                           
  6595 ;; *************** function ___fpclassifyf *****************
  6596 ;; Defined at:
  6597 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/__fpclassifyf.c"
  6598 ;; Parameters:    Size  Location     Type
  6599 ;;  x               4   20[COMRAM] float 
  6600 ;; Auto vars:     Size  Location     Type
  6601 ;;  u               4   30[COMRAM] struct .
  6602 ;;  e               2   28[COMRAM] int 
  6603 ;; Return value:  Size  Location     Type
  6604 ;;                  2   20[COMRAM] int 
  6605 ;; Registers used:
  6606 ;;		wreg, status,2, status,0
  6607 ;; Tracked objects:
  6608 ;;		On entry : 0/0
  6609 ;;		On exit  : 0/0
  6610 ;;		Unchanged: 0/0
  6611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6612 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6613 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6614 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6615 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6616 ;;Total ram usage:       14 bytes
  6617 ;; Hardware stack levels used: 1
  6618 ;; Hardware stack levels required when called: 4
  6619 ;; This function calls:
  6620 ;;		Nothing
  6621 ;; This function is called by:
  6622 ;;		_efgtoa
  6623 ;; This function uses a non-reentrant model
  6624 ;;
  6625                           
  6626                           	psect	text17
  6627  004AC6                     __ptext17:
  6628                           	callstack 0
  6629  004AC6                     ___fpclassifyf:
  6630                           	callstack 20
  6631                           
  6632                           ; BSR set to: 0
  6633                           ;incstack = 0
  6634  004AC6  C190  F01F         	movff	___fpclassifyf@F465,___fpclassifyf@u
  6635  004ACA  C191  F020         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  6636  004ACE  C192  F021         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  6637  004AD2  C193  F022         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  6638  004AD6  C015  F01F         	movff	___fpclassifyf@x,___fpclassifyf@u
  6639  004ADA  C016  F020         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  6640  004ADE  C017  F021         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  6641  004AE2  C018  F022         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  6642  004AE6  C01F  F019         	movff	___fpclassifyf@u,??___fpclassifyf
  6643  004AEA  C020  F01A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6644  004AEE  C021  F01B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6645  004AF2  C022  F01C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6646  004AF6  0E18               	movlw	24
  6647  004AF8  D005               	goto	u10800
  6648  004AFA                     u10805:
  6649  004AFA  90D8               	bcf	status,0,c
  6650  004AFC  321C               	rrcf	(??___fpclassifyf+3)^0,f,c
  6651  004AFE  321B               	rrcf	(??___fpclassifyf+2)^0,f,c
  6652  004B00  321A               	rrcf	(??___fpclassifyf+1)^0,f,c
  6653  004B02  3219               	rrcf	??___fpclassifyf^0,f,c
  6654  004B04                     u10800:
  6655  004B04  2EE8               	decfsz	wreg,f,c
  6656  004B06  D7F9               	goto	u10805
  6657  004B08  5019               	movf	??___fpclassifyf^0,w,c
  6658  004B0A  6E1D               	movwf	___fpclassifyf@e^0,c
  6659  004B0C  6A1E               	clrf	(___fpclassifyf@e+1)^0,c
  6660  004B0E  501D               	movf	___fpclassifyf@e^0,w,c
  6661  004B10  101E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6662  004B12  A4D8               	btfss	status,2,c
  6663  004B14  D019               	goto	l9484
  6664  004B16  90D8               	bcf	status,0,c
  6665  004B18  341F               	rlcf	___fpclassifyf@u^0,w,c
  6666  004B1A  6E19               	movwf	??___fpclassifyf^0,c
  6667  004B1C  3420               	rlcf	(___fpclassifyf@u+1)^0,w,c
  6668  004B1E  6E1A               	movwf	(??___fpclassifyf+1)^0,c
  6669  004B20  3421               	rlcf	(___fpclassifyf@u+2)^0,w,c
  6670  004B22  6E1B               	movwf	(??___fpclassifyf+2)^0,c
  6671  004B24  3422               	rlcf	(___fpclassifyf@u+3)^0,w,c
  6672  004B26  6E1C               	movwf	(??___fpclassifyf+3)^0,c
  6673  004B28  5019               	movf	??___fpclassifyf^0,w,c
  6674  004B2A  101A               	iorwf	(??___fpclassifyf+1)^0,w,c
  6675  004B2C  101B               	iorwf	(??___fpclassifyf+2)^0,w,c
  6676  004B2E  101C               	iorwf	(??___fpclassifyf+3)^0,w,c
  6677  004B30  A4D8               	btfss	status,2,c
  6678  004B32  D005               	goto	l9480
  6679  004B34  0E00               	movlw	0
  6680  004B36  6E16               	movwf	(?___fpclassifyf+1)^0,c
  6681  004B38  0E02               	movlw	2
  6682  004B3A  6E15               	movwf	?___fpclassifyf^0,c
  6683  004B3C  0012               	return	
  6684  004B3E                     l9480:
  6685  004B3E  0E00               	movlw	0
  6686  004B40  6E16               	movwf	(?___fpclassifyf+1)^0,c
  6687  004B42  0E03               	movlw	3
  6688  004B44  6E15               	movwf	?___fpclassifyf^0,c
  6689  004B46  0012               	return	
  6690  004B48                     l9484:
  6691  004B48  281D               	incf	___fpclassifyf@e^0,w,c
  6692  004B4A  101E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6693  004B4C  A4D8               	btfss	status,2,c
  6694  004B4E  D01C               	goto	l9490
  6695  004B50  C01F  F019         	movff	___fpclassifyf@u,??___fpclassifyf
  6696  004B54  C020  F01A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6697  004B58  C021  F01B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6698  004B5C  C022  F01C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6699  004B60  0E09               	movlw	9
  6700  004B62                     u10845:
  6701  004B62  90D8               	bcf	status,0,c
  6702  004B64  3619               	rlcf	??___fpclassifyf^0,f,c
  6703  004B66  361A               	rlcf	(??___fpclassifyf+1)^0,f,c
  6704  004B68  361B               	rlcf	(??___fpclassifyf+2)^0,f,c
  6705  004B6A  361C               	rlcf	(??___fpclassifyf+3)^0,f,c
  6706  004B6C  2EE8               	decfsz	wreg,f,c
  6707  004B6E  D7F9               	goto	u10845
  6708  004B70  5019               	movf	??___fpclassifyf^0,w,c
  6709  004B72  101A               	iorwf	(??___fpclassifyf+1)^0,w,c
  6710  004B74  101B               	iorwf	(??___fpclassifyf+2)^0,w,c
  6711  004B76  101C               	iorwf	(??___fpclassifyf+3)^0,w,c
  6712  004B78  A4D8               	btfss	status,2,c
  6713  004B7A  D002               	goto	u10850
  6714  004B7C  0E01               	movlw	1
  6715  004B7E  D001               	goto	u10860
  6716  004B80                     u10850:
  6717  004B80  0E00               	movlw	0
  6718  004B82                     u10860:
  6719  004B82  6E15               	movwf	?___fpclassifyf^0,c
  6720  004B84  6A16               	clrf	(?___fpclassifyf+1)^0,c
  6721  004B86  0012               	return	
  6722  004B88                     l9490:
  6723  004B88  0E00               	movlw	0
  6724  004B8A  6E16               	movwf	(?___fpclassifyf+1)^0,c
  6725  004B8C  0E04               	movlw	4
  6726  004B8E  6E15               	movwf	?___fpclassifyf^0,c
  6727  004B90  0012               	return		;funcret
  6728  004B92                     __end_of___fpclassifyf:
  6729                           	callstack 0
  6730                           
  6731 ;; *************** function ___fltol *****************
  6732 ;; Defined at:
  6733 ;;		line 43 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/fltol.c"
  6734 ;; Parameters:    Size  Location     Type
  6735 ;;  f1              4   20[COMRAM] int 
  6736 ;; Auto vars:     Size  Location     Type
  6737 ;;  exp1            1   29[COMRAM] unsigned char 
  6738 ;;  sign1           1   28[COMRAM] unsigned char 
  6739 ;; Return value:  Size  Location     Type
  6740 ;;                  4   20[COMRAM] long 
  6741 ;; Registers used:
  6742 ;;		wreg, status,2, status,0
  6743 ;; Tracked objects:
  6744 ;;		On entry : 3F/0
  6745 ;;		On exit  : 3F/0
  6746 ;;		Unchanged: 3F/0
  6747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6748 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6749 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6750 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6751 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6752 ;;Total ram usage:       10 bytes
  6753 ;; Hardware stack levels used: 1
  6754 ;; Hardware stack levels required when called: 4
  6755 ;; This function calls:
  6756 ;;		Nothing
  6757 ;; This function is called by:
  6758 ;;		_efgtoa
  6759 ;; This function uses a non-reentrant model
  6760 ;;
  6761                           
  6762                           	psect	text18
  6763  004C58                     __ptext18:
  6764                           	callstack 0
  6765  004C58                     ___fltol:
  6766                           	callstack 20
  6767                           
  6768                           ; BSR set to: 0
  6769                           
  6770                           ;incstack = 0
  6771  004C58  3417               	rlcf	(___fltol@f1+2)^0,w,c
  6772  004C5A  3418               	rlcf	(___fltol@f1+3)^0,w,c
  6773  004C5C  6E1E               	movwf	___fltol@exp1^0,c
  6774  004C5E  501E               	movf	___fltol@exp1^0,w,c
  6775  004C60  A4D8               	btfss	status,2,c
  6776  004C62  D009               	goto	l9374
  6777  004C64                     u10620:
  6778                           
  6779                           ; BSR set to: 0
  6780  004C64  0E00               	movlw	0
  6781  004C66  6E15               	movwf	?___fltol^0,c
  6782  004C68  0E00               	movlw	0
  6783  004C6A  6E16               	movwf	(?___fltol+1)^0,c
  6784  004C6C  0E00               	movlw	0
  6785  004C6E  6E17               	movwf	(?___fltol+2)^0,c
  6786  004C70  0E00               	movlw	0
  6787  004C72  6E18               	movwf	(?___fltol+3)^0,c
  6788  004C74  0012               	return	
  6789  004C76                     l9374:
  6790                           
  6791                           ; BSR set to: 0
  6792  004C76  C015  F019         	movff	___fltol@f1,??___fltol
  6793  004C7A  C016  F01A         	movff	___fltol@f1+1,??___fltol+1
  6794  004C7E  C017  F01B         	movff	___fltol@f1+2,??___fltol+2
  6795  004C82  C018  F01C         	movff	___fltol@f1+3,??___fltol+3
  6796  004C86  0E20               	movlw	32
  6797  004C88  D005               	goto	u10630
  6798  004C8A                     u10635:
  6799  004C8A  90D8               	bcf	status,0,c
  6800  004C8C  321C               	rrcf	(??___fltol+3)^0,f,c
  6801  004C8E  321B               	rrcf	(??___fltol+2)^0,f,c
  6802  004C90  321A               	rrcf	(??___fltol+1)^0,f,c
  6803  004C92  3219               	rrcf	??___fltol^0,f,c
  6804  004C94                     u10630:
  6805  004C94  2EE8               	decfsz	wreg,f,c
  6806  004C96  D7F9               	goto	u10635
  6807  004C98  5019               	movf	??___fltol^0,w,c
  6808  004C9A  6E1D               	movwf	___fltol@sign1^0,c
  6809                           
  6810                           ; BSR set to: 0
  6811  004C9C  8E17               	bsf	(___fltol@f1+2)^0,7,c
  6812                           
  6813                           ; BSR set to: 0
  6814  004C9E  0EFF               	movlw	255
  6815  004CA0  1615               	andwf	___fltol@f1^0,f,c
  6816  004CA2  0EFF               	movlw	255
  6817  004CA4  1616               	andwf	(___fltol@f1+1)^0,f,c
  6818  004CA6  0EFF               	movlw	255
  6819  004CA8  1617               	andwf	(___fltol@f1+2)^0,f,c
  6820  004CAA  0E00               	movlw	0
  6821  004CAC  1618               	andwf	(___fltol@f1+3)^0,f,c
  6822                           
  6823                           ; BSR set to: 0
  6824  004CAE  0E96               	movlw	150
  6825  004CB0  5E1E               	subwf	___fltol@exp1^0,f,c
  6826                           
  6827                           ; BSR set to: 0
  6828  004CB2  AE1E               	btfss	___fltol@exp1^0,7,c
  6829  004CB4  D00D               	goto	l9394
  6830                           
  6831                           ; BSR set to: 0
  6832  004CB6  501E               	movf	___fltol@exp1^0,w,c
  6833  004CB8  0A80               	xorlw	128
  6834  004CBA  0F97               	addlw	151
  6835  004CBC  A0D8               	btfss	status,0,c
  6836  004CBE  D7D2               	goto	u10620
  6837  004CC0                     l9390:
  6838                           
  6839                           ; BSR set to: 0
  6840  004CC0  90D8               	bcf	status,0,c
  6841  004CC2  3218               	rrcf	(___fltol@f1+3)^0,f,c
  6842  004CC4  3217               	rrcf	(___fltol@f1+2)^0,f,c
  6843  004CC6  3216               	rrcf	(___fltol@f1+1)^0,f,c
  6844  004CC8  3215               	rrcf	___fltol@f1^0,f,c
  6845                           
  6846                           ; BSR set to: 0
  6847  004CCA  3E1E               	incfsz	___fltol@exp1^0,f,c
  6848  004CCC  D7F9               	goto	l9390
  6849  004CCE  D00D               	goto	u10670
  6850  004CD0                     l9394:
  6851                           
  6852                           ; BSR set to: 0
  6853  004CD0  0E1F               	movlw	31
  6854  004CD2  641E               	cpfsgt	___fltol@exp1^0,c
  6855  004CD4  D007               	goto	l9402
  6856  004CD6  D7C6               	goto	u10620
  6857  004CD8                     l9400:
  6858                           
  6859                           ; BSR set to: 0
  6860  004CD8  90D8               	bcf	status,0,c
  6861  004CDA  3615               	rlcf	___fltol@f1^0,f,c
  6862  004CDC  3616               	rlcf	(___fltol@f1+1)^0,f,c
  6863  004CDE  3617               	rlcf	(___fltol@f1+2)^0,f,c
  6864  004CE0  3618               	rlcf	(___fltol@f1+3)^0,f,c
  6865  004CE2  061E               	decf	___fltol@exp1^0,f,c
  6866  004CE4                     l9402:
  6867                           
  6868                           ; BSR set to: 0
  6869  004CE4  501E               	movf	___fltol@exp1^0,w,c
  6870  004CE6  A4D8               	btfss	status,2,c
  6871  004CE8  D7F7               	goto	l9400
  6872  004CEA                     u10670:
  6873                           
  6874                           ; BSR set to: 0
  6875  004CEA  501D               	movf	___fltol@sign1^0,w,c
  6876  004CEC  B4D8               	btfsc	status,2,c
  6877  004CEE  D008               	goto	l9408
  6878                           
  6879                           ; BSR set to: 0
  6880  004CF0  1E18               	comf	(___fltol@f1+3)^0,f,c
  6881  004CF2  1E17               	comf	(___fltol@f1+2)^0,f,c
  6882  004CF4  1E16               	comf	(___fltol@f1+1)^0,f,c
  6883  004CF6  6C15               	negf	___fltol@f1^0,c
  6884  004CF8  0E00               	movlw	0
  6885  004CFA  2216               	addwfc	(___fltol@f1+1)^0,f,c
  6886  004CFC  2217               	addwfc	(___fltol@f1+2)^0,f,c
  6887  004CFE  2218               	addwfc	(___fltol@f1+3)^0,f,c
  6888  004D00                     l9408:
  6889                           
  6890                           ; BSR set to: 0
  6891  004D00  C015  F015         	movff	___fltol@f1,?___fltol
  6892  004D04  C016  F016         	movff	___fltol@f1+1,?___fltol+1
  6893  004D08  C017  F017         	movff	___fltol@f1+2,?___fltol+2
  6894  004D0C  C018  F018         	movff	___fltol@f1+3,?___fltol+3
  6895                           
  6896                           ; BSR set to: 0
  6897  004D10  0012               	return		;funcret
  6898  004D12                     __end_of___fltol:
  6899                           	callstack 0
  6900                           
  6901 ;; *************** function ___flsub *****************
  6902 ;; Defined at:
  6903 ;;		line 245 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/sprcadd.c"
  6904 ;; Parameters:    Size  Location     Type
  6905 ;;  b               4   46[COMRAM] long 
  6906 ;;  a               4   50[COMRAM] long 
  6907 ;; Auto vars:     Size  Location     Type
  6908 ;;		None
  6909 ;; Return value:  Size  Location     Type
  6910 ;;                  4   46[COMRAM] long 
  6911 ;; Registers used:
  6912 ;;		wreg, status,2, status,0, cstack
  6913 ;; Tracked objects:
  6914 ;;		On entry : 3F/0
  6915 ;;		On exit  : 3F/0
  6916 ;;		Unchanged: 3F/0
  6917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6918 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6921 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6922 ;;Total ram usage:        8 bytes
  6923 ;; Hardware stack levels used: 1
  6924 ;; Hardware stack levels required when called: 5
  6925 ;; This function calls:
  6926 ;;		___fladd
  6927 ;; This function is called by:
  6928 ;;		_efgtoa
  6929 ;; This function uses a non-reentrant model
  6930 ;;
  6931                           
  6932                           	psect	text19
  6933  0056C6                     __ptext19:
  6934                           	callstack 0
  6935  0056C6                     ___flsub:
  6936                           	callstack 19
  6937                           
  6938                           ; BSR set to: 0
  6939                           
  6940                           ; BSR set to: 0
  6941                           ;incstack = 0
  6942  0056C6  0E00               	movlw	0
  6943  0056C8  1A33               	xorwf	___flsub@a^0,f,c
  6944  0056CA  0E00               	movlw	0
  6945  0056CC  1A34               	xorwf	(___flsub@a+1)^0,f,c
  6946  0056CE  0E00               	movlw	0
  6947  0056D0  1A35               	xorwf	(___flsub@a+2)^0,f,c
  6948  0056D2  0E80               	movlw	128
  6949  0056D4  1A36               	xorwf	(___flsub@a+3)^0,f,c
  6950                           
  6951                           ; BSR set to: 0
  6952  0056D6  C02F  F015         	movff	___flsub@b,___fladd@b
  6953  0056DA  C030  F016         	movff	___flsub@b+1,___fladd@b+1
  6954  0056DE  C031  F017         	movff	___flsub@b+2,___fladd@b+2
  6955  0056E2  C032  F018         	movff	___flsub@b+3,___fladd@b+3
  6956  0056E6  C033  F019         	movff	___flsub@a,___fladd@a
  6957  0056EA  C034  F01A         	movff	___flsub@a+1,___fladd@a+1
  6958  0056EE  C035  F01B         	movff	___flsub@a+2,___fladd@a+2
  6959  0056F2  C036  F01C         	movff	___flsub@a+3,___fladd@a+3
  6960  0056F6  EC31  F01A         	call	___fladd	;wreg free
  6961  0056FA  C015  F02F         	movff	?___fladd,?___flsub
  6962  0056FE  C016  F030         	movff	?___fladd+1,?___flsub+1
  6963  005702  C017  F031         	movff	?___fladd+2,?___flsub+2
  6964  005706  C018  F032         	movff	?___fladd+3,?___flsub+3
  6965                           
  6966                           ; BSR set to: 0
  6967  00570A  0012               	return		;funcret
  6968  00570C                     __end_of___flsub:
  6969                           	callstack 0
  6970                           
  6971 ;; *************** function ___fladd *****************
  6972 ;; Defined at:
  6973 ;;		line 10 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/sprcadd.c"
  6974 ;; Parameters:    Size  Location     Type
  6975 ;;  b               4   20[COMRAM] long 
  6976 ;;  a               4   24[COMRAM] long 
  6977 ;; Auto vars:     Size  Location     Type
  6978 ;;  grs             1   35[COMRAM] unsigned char 
  6979 ;;  bexp            1   34[COMRAM] unsigned char 
  6980 ;;  aexp            1   33[COMRAM] unsigned char 
  6981 ;;  signs           1   32[COMRAM] unsigned char 
  6982 ;; Return value:  Size  Location     Type
  6983 ;;                  4   20[COMRAM] unsigned char 
  6984 ;; Registers used:
  6985 ;;		wreg, status,2, status,0
  6986 ;; Tracked objects:
  6987 ;;		On entry : 3F/0
  6988 ;;		On exit  : 3F/0
  6989 ;;		Unchanged: 3F/0
  6990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6991 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6992 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6993 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6994 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6995 ;;Total ram usage:       16 bytes
  6996 ;; Hardware stack levels used: 1
  6997 ;; Hardware stack levels required when called: 4
  6998 ;; This function calls:
  6999 ;;		Nothing
  7000 ;; This function is called by:
  7001 ;;		___flsub
  7002 ;;		_efgtoa
  7003 ;; This function uses a non-reentrant model
  7004 ;;
  7005                           
  7006                           	psect	text20
  7007  003462                     __ptext20:
  7008                           	callstack 0
  7009  003462                     ___fladd:
  7010                           	callstack 19
  7011                           
  7012                           ; BSR set to: 0
  7013                           
  7014                           ; BSR set to: 0
  7015                           ;incstack = 0
  7016  003462  5018               	movf	(___fladd@b+3)^0,w,c
  7017  003464  0B80               	andlw	128
  7018  003466  6E21               	movwf	___fladd@signs^0,c
  7019  003468  5018               	movf	(___fladd@b+3)^0,w,c
  7020  00346A  2418               	addwf	(___fladd@b+3)^0,w,c
  7021  00346C  6E23               	movwf	___fladd@bexp^0,c
  7022                           
  7023                           ; BSR set to: 0
  7024  00346E  BE17               	btfsc	(___fladd@b+2)^0,7,c
  7025                           
  7026                           ; BSR set to: 0
  7027  003470  8023               	bsf	___fladd@bexp^0,0,c
  7028                           
  7029                           ; BSR set to: 0
  7030  003472  5023               	movf	___fladd@bexp^0,w,c
  7031  003474  B4D8               	btfsc	status,2,c
  7032  003476  D00D               	goto	l8764
  7033                           
  7034                           ; BSR set to: 0
  7035  003478  2823               	incf	___fladd@bexp^0,w,c
  7036  00347A  A4D8               	btfss	status,2,c
  7037  00347C  D008               	goto	l8760
  7038                           
  7039                           ; BSR set to: 0
  7040  00347E  0E00               	movlw	0
  7041  003480  6E15               	movwf	___fladd@b^0,c
  7042  003482  0E00               	movlw	0
  7043  003484  6E16               	movwf	(___fladd@b+1)^0,c
  7044  003486  0E00               	movlw	0
  7045  003488  6E17               	movwf	(___fladd@b+2)^0,c
  7046  00348A  0E00               	movlw	0
  7047  00348C  6E18               	movwf	(___fladd@b+3)^0,c
  7048  00348E                     l8760:
  7049                           
  7050                           ; BSR set to: 0
  7051  00348E  8E17               	bsf	(___fladd@b+2)^0,7,c
  7052  003490  D006               	goto	L8
  7053  003492                     l8764:
  7054                           
  7055                           ; BSR set to: 0
  7056  003492  0E00               	movlw	0
  7057  003494  6E15               	movwf	___fladd@b^0,c
  7058  003496  0E00               	movlw	0
  7059  003498  6E16               	movwf	(___fladd@b+1)^0,c
  7060  00349A  0E00               	movlw	0
  7061  00349C  6E17               	movwf	(___fladd@b+2)^0,c
  7062  00349E                     L8:
  7063  00349E  0E00               	movlw	0
  7064  0034A0  6E18               	movwf	(___fladd@b+3)^0,c
  7065                           
  7066                           ; BSR set to: 0
  7067  0034A2  501C               	movf	(___fladd@a+3)^0,w,c
  7068  0034A4  0B80               	andlw	128
  7069  0034A6  6E22               	movwf	___fladd@aexp^0,c
  7070                           
  7071                           ; BSR set to: 0
  7072  0034A8  5021               	movf	___fladd@signs^0,w,c
  7073  0034AA  1822               	xorwf	___fladd@aexp^0,w,c
  7074  0034AC  A4D8               	btfss	status,2,c
  7075                           
  7076                           ; BSR set to: 0
  7077  0034AE  8C21               	bsf	___fladd@signs^0,6,c
  7078                           
  7079                           ; BSR set to: 0
  7080  0034B0  501C               	movf	(___fladd@a+3)^0,w,c
  7081  0034B2  241C               	addwf	(___fladd@a+3)^0,w,c
  7082  0034B4  6E22               	movwf	___fladd@aexp^0,c
  7083                           
  7084                           ; BSR set to: 0
  7085  0034B6  BE1B               	btfsc	(___fladd@a+2)^0,7,c
  7086                           
  7087                           ; BSR set to: 0
  7088  0034B8  8022               	bsf	___fladd@aexp^0,0,c
  7089                           
  7090                           ; BSR set to: 0
  7091  0034BA  5022               	movf	___fladd@aexp^0,w,c
  7092  0034BC  B4D8               	btfsc	status,2,c
  7093  0034BE  D00D               	goto	l8788
  7094                           
  7095                           ; BSR set to: 0
  7096  0034C0  2822               	incf	___fladd@aexp^0,w,c
  7097  0034C2  A4D8               	btfss	status,2,c
  7098  0034C4  D008               	goto	l8784
  7099                           
  7100                           ; BSR set to: 0
  7101  0034C6  0E00               	movlw	0
  7102  0034C8  6E19               	movwf	___fladd@a^0,c
  7103  0034CA  0E00               	movlw	0
  7104  0034CC  6E1A               	movwf	(___fladd@a+1)^0,c
  7105  0034CE  0E00               	movlw	0
  7106  0034D0  6E1B               	movwf	(___fladd@a+2)^0,c
  7107  0034D2  0E00               	movlw	0
  7108  0034D4  6E1C               	movwf	(___fladd@a+3)^0,c
  7109  0034D6                     l8784:
  7110                           
  7111                           ; BSR set to: 0
  7112  0034D6  8E1B               	bsf	(___fladd@a+2)^0,7,c
  7113  0034D8  D006               	goto	L9
  7114  0034DA                     l8788:
  7115                           
  7116                           ; BSR set to: 0
  7117  0034DA  0E00               	movlw	0
  7118  0034DC  6E19               	movwf	___fladd@a^0,c
  7119  0034DE  0E00               	movlw	0
  7120  0034E0  6E1A               	movwf	(___fladd@a+1)^0,c
  7121  0034E2  0E00               	movlw	0
  7122  0034E4  6E1B               	movwf	(___fladd@a+2)^0,c
  7123  0034E6                     L9:
  7124  0034E6  0E00               	movlw	0
  7125  0034E8  6E1C               	movwf	(___fladd@a+3)^0,c
  7126                           
  7127                           ; BSR set to: 0
  7128  0034EA  5023               	movf	___fladd@bexp^0,w,c
  7129  0034EC  5C22               	subwf	___fladd@aexp^0,w,c
  7130  0034EE  B0D8               	btfsc	status,0,c
  7131  0034F0  D022               	goto	l8826
  7132                           
  7133                           ; BSR set to: 0
  7134  0034F2  AC21               	btfss	___fladd@signs^0,6,c
  7135  0034F4  D002               	goto	l8796
  7136                           
  7137                           ; BSR set to: 0
  7138  0034F6  0E80               	movlw	128
  7139  0034F8  1A21               	xorwf	___fladd@signs^0,f,c
  7140  0034FA                     l8796:
  7141                           
  7142                           ; BSR set to: 0
  7143  0034FA  C023  F024         	movff	___fladd@bexp,___fladd@grs
  7144                           
  7145                           ; BSR set to: 0
  7146  0034FE  C022  F023         	movff	___fladd@aexp,___fladd@bexp
  7147                           
  7148                           ; BSR set to: 0
  7149  003502  C024  F022         	movff	___fladd@grs,___fladd@aexp
  7150                           
  7151                           ; BSR set to: 0
  7152  003506  C015  F024         	movff	___fladd@b,___fladd@grs
  7153                           
  7154                           ; BSR set to: 0
  7155  00350A  C019  F015         	movff	___fladd@a,___fladd@b
  7156                           
  7157                           ; BSR set to: 0
  7158  00350E  C024  F019         	movff	___fladd@grs,___fladd@a
  7159                           
  7160                           ; BSR set to: 0
  7161  003512  C016  F024         	movff	___fladd@b+1,___fladd@grs
  7162                           
  7163                           ; BSR set to: 0
  7164  003516  C01A  F016         	movff	___fladd@a+1,___fladd@b+1
  7165                           
  7166                           ; BSR set to: 0
  7167  00351A  C024  F01A         	movff	___fladd@grs,___fladd@a+1
  7168                           
  7169                           ; BSR set to: 0
  7170  00351E  C017  F024         	movff	___fladd@b+2,___fladd@grs
  7171                           
  7172                           ; BSR set to: 0
  7173  003522  C01B  F017         	movff	___fladd@a+2,___fladd@b+2
  7174                           
  7175                           ; BSR set to: 0
  7176  003526  C024  F01B         	movff	___fladd@grs,___fladd@a+2
  7177                           
  7178                           ; BSR set to: 0
  7179  00352A  C018  F024         	movff	___fladd@b+3,___fladd@grs
  7180                           
  7181                           ; BSR set to: 0
  7182  00352E  C01C  F018         	movff	___fladd@a+3,___fladd@b+3
  7183                           
  7184                           ; BSR set to: 0
  7185  003532  C024  F01C         	movff	___fladd@grs,___fladd@a+3
  7186  003536                     l8826:
  7187                           
  7188                           ; BSR set to: 0
  7189  003536  0E00               	movlw	0
  7190  003538  6E24               	movwf	___fladd@grs^0,c
  7191                           
  7192                           ; BSR set to: 0
  7193  00353A  5023               	movf	___fladd@bexp^0,w,c
  7194  00353C  C022  F01D         	movff	___fladd@aexp,??___fladd
  7195  003540  6A1E               	clrf	(??___fladd+1)^0,c
  7196  003542  5E1D               	subwf	??___fladd^0,f,c
  7197  003544  0E00               	movlw	0
  7198  003546  5A1E               	subwfb	(??___fladd+1)^0,f,c
  7199  003548  BE1E               	btfsc	(??___fladd+1)^0,7,c
  7200  00354A  D02C               	goto	l1668
  7201  00354C  501E               	movf	(??___fladd+1)^0,w,c
  7202  00354E  E104               	bnz	u9660
  7203  003550  0E1A               	movlw	26
  7204  003552  5C1D               	subwf	??___fladd^0,w,c
  7205  003554  A0D8               	btfss	status,0,c
  7206  003556  D026               	goto	l1668
  7207  003558                     u9660:
  7208                           
  7209                           ; BSR set to: 0
  7210  003558  5015               	movf	___fladd@b^0,w,c
  7211  00355A  1016               	iorwf	(___fladd@b+1)^0,w,c
  7212  00355C  1017               	iorwf	(___fladd@b+2)^0,w,c
  7213  00355E  1018               	iorwf	(___fladd@b+3)^0,w,c
  7214  003560  B4D8               	btfsc	status,2,c
  7215  003562  D002               	goto	u9670
  7216  003564  0E01               	movlw	1
  7217  003566  D001               	goto	u9680
  7218  003568                     u9670:
  7219  003568  0E00               	movlw	0
  7220  00356A                     u9680:
  7221  00356A  6E24               	movwf	___fladd@grs^0,c
  7222                           
  7223                           ; BSR set to: 0
  7224  00356C  0E00               	movlw	0
  7225  00356E  6E15               	movwf	___fladd@b^0,c
  7226  003570  0E00               	movlw	0
  7227  003572  6E16               	movwf	(___fladd@b+1)^0,c
  7228  003574  0E00               	movlw	0
  7229  003576  6E17               	movwf	(___fladd@b+2)^0,c
  7230  003578  0E00               	movlw	0
  7231  00357A  6E18               	movwf	(___fladd@b+3)^0,c
  7232                           
  7233                           ; BSR set to: 0
  7234  00357C  C022  F023         	movff	___fladd@aexp,___fladd@bexp
  7235  003580  D015               	goto	u9710
  7236  003582                     l1669:
  7237                           
  7238                           ; BSR set to: 0
  7239  003582  A024               	btfss	___fladd@grs^0,0,c
  7240  003584  D005               	goto	l8838
  7241                           
  7242                           ; BSR set to: 0
  7243  003586  90D8               	bcf	status,0,c
  7244  003588  3024               	rrcf	___fladd@grs^0,w,c
  7245  00358A  0901               	iorlw	1
  7246  00358C  6E24               	movwf	___fladd@grs^0,c
  7247  00358E  D002               	goto	l8840
  7248  003590                     l8838:
  7249                           
  7250                           ; BSR set to: 0
  7251  003590  90D8               	bcf	status,0,c
  7252  003592  3224               	rrcf	___fladd@grs^0,f,c
  7253  003594                     l8840:
  7254                           
  7255                           ; BSR set to: 0
  7256  003594  B015               	btfsc	___fladd@b^0,0,c
  7257                           
  7258                           ; BSR set to: 0
  7259  003596  8E24               	bsf	___fladd@grs^0,7,c
  7260                           
  7261                           ; BSR set to: 0
  7262  003598  3418               	rlcf	(___fladd@b+3)^0,w,c
  7263  00359A  3218               	rrcf	(___fladd@b+3)^0,f,c
  7264  00359C  3217               	rrcf	(___fladd@b+2)^0,f,c
  7265  00359E  3216               	rrcf	(___fladd@b+1)^0,f,c
  7266  0035A0  3215               	rrcf	___fladd@b^0,f,c
  7267                           
  7268                           ; BSR set to: 0
  7269  0035A2  2A23               	incf	___fladd@bexp^0,f,c
  7270  0035A4                     l1668:
  7271                           
  7272                           ; BSR set to: 0
  7273  0035A4  5022               	movf	___fladd@aexp^0,w,c
  7274  0035A6  5C23               	subwf	___fladd@bexp^0,w,c
  7275  0035A8  A0D8               	btfss	status,0,c
  7276  0035AA  D7EB               	goto	l1669
  7277  0035AC                     u9710:
  7278                           
  7279                           ; BSR set to: 0
  7280  0035AC  BC21               	btfsc	___fladd@signs^0,6,c
  7281  0035AE  D028               	goto	l8872
  7282                           
  7283                           ; BSR set to: 0
  7284  0035B0  5023               	movf	___fladd@bexp^0,w,c
  7285  0035B2  A4D8               	btfss	status,2,c
  7286  0035B4  D009               	goto	l8854
  7287                           
  7288                           ; BSR set to: 0
  7289  0035B6  0E00               	movlw	0
  7290  0035B8  6E15               	movwf	?___fladd^0,c
  7291  0035BA  0E00               	movlw	0
  7292  0035BC  6E16               	movwf	(?___fladd+1)^0,c
  7293  0035BE  0E00               	movlw	0
  7294  0035C0  6E17               	movwf	(?___fladd+2)^0,c
  7295  0035C2  0E00               	movlw	0
  7296  0035C4  6E18               	movwf	(?___fladd+3)^0,c
  7297  0035C6  0012               	return	
  7298  0035C8                     l8854:
  7299                           
  7300                           ; BSR set to: 0
  7301  0035C8  5019               	movf	___fladd@a^0,w,c
  7302  0035CA  2615               	addwf	___fladd@b^0,f,c
  7303  0035CC  501A               	movf	(___fladd@a+1)^0,w,c
  7304  0035CE  2216               	addwfc	(___fladd@b+1)^0,f,c
  7305  0035D0  501B               	movf	(___fladd@a+2)^0,w,c
  7306  0035D2  2217               	addwfc	(___fladd@b+2)^0,f,c
  7307  0035D4  501C               	movf	(___fladd@a+3)^0,w,c
  7308  0035D6  2218               	addwfc	(___fladd@b+3)^0,f,c
  7309                           
  7310                           ; BSR set to: 0
  7311  0035D8  A018               	btfss	(___fladd@b+3)^0,0,c
  7312  0035DA  D071               	goto	u9840
  7313                           
  7314                           ; BSR set to: 0
  7315  0035DC  A024               	btfss	___fladd@grs^0,0,c
  7316  0035DE  D005               	goto	l8862
  7317                           
  7318                           ; BSR set to: 0
  7319  0035E0  90D8               	bcf	status,0,c
  7320  0035E2  3024               	rrcf	___fladd@grs^0,w,c
  7321  0035E4  0901               	iorlw	1
  7322  0035E6  6E24               	movwf	___fladd@grs^0,c
  7323  0035E8  D002               	goto	l8864
  7324  0035EA                     l8862:
  7325                           
  7326                           ; BSR set to: 0
  7327  0035EA  90D8               	bcf	status,0,c
  7328  0035EC  3224               	rrcf	___fladd@grs^0,f,c
  7329  0035EE                     l8864:
  7330                           
  7331                           ; BSR set to: 0
  7332  0035EE  B015               	btfsc	___fladd@b^0,0,c
  7333                           
  7334                           ; BSR set to: 0
  7335  0035F0  8E24               	bsf	___fladd@grs^0,7,c
  7336                           
  7337                           ; BSR set to: 0
  7338  0035F2  3418               	rlcf	(___fladd@b+3)^0,w,c
  7339  0035F4  3218               	rrcf	(___fladd@b+3)^0,f,c
  7340  0035F6  3217               	rrcf	(___fladd@b+2)^0,f,c
  7341  0035F8  3216               	rrcf	(___fladd@b+1)^0,f,c
  7342  0035FA  3215               	rrcf	___fladd@b^0,f,c
  7343                           
  7344                           ; BSR set to: 0
  7345  0035FC  2A23               	incf	___fladd@bexp^0,f,c
  7346  0035FE  D05F               	goto	u9840
  7347  003600                     l8872:
  7348                           
  7349                           ; BSR set to: 0
  7350  003600  5019               	movf	___fladd@a^0,w,c
  7351  003602  5C15               	subwf	___fladd@b^0,w,c
  7352  003604  501A               	movf	(___fladd@a+1)^0,w,c
  7353  003606  5816               	subwfb	(___fladd@b+1)^0,w,c
  7354  003608  501B               	movf	(___fladd@a+2)^0,w,c
  7355  00360A  5817               	subwfb	(___fladd@b+2)^0,w,c
  7356  00360C  5018               	movf	(___fladd@b+3)^0,w,c
  7357  00360E  0A80               	xorlw	128
  7358  003610  6E1D               	movwf	??___fladd^0,c
  7359  003612  501C               	movf	(___fladd@a+3)^0,w,c
  7360  003614  0A80               	xorlw	128
  7361  003616  581D               	subwfb	??___fladd^0,w,c
  7362  003618  B0D8               	btfsc	status,0,c
  7363  00361A  D025               	goto	l8882
  7364                           
  7365                           ; BSR set to: 0
  7366  00361C  5015               	movf	___fladd@b^0,w,c
  7367  00361E  5C19               	subwf	___fladd@a^0,w,c
  7368  003620  6E1D               	movwf	??___fladd^0,c
  7369  003622  5016               	movf	(___fladd@b+1)^0,w,c
  7370  003624  581A               	subwfb	(___fladd@a+1)^0,w,c
  7371  003626  6E1E               	movwf	(??___fladd+1)^0,c
  7372  003628  5017               	movf	(___fladd@b+2)^0,w,c
  7373  00362A  581B               	subwfb	(___fladd@a+2)^0,w,c
  7374  00362C  6E1F               	movwf	(??___fladd+2)^0,c
  7375  00362E  5018               	movf	(___fladd@b+3)^0,w,c
  7376  003630  581C               	subwfb	(___fladd@a+3)^0,w,c
  7377  003632  6E20               	movwf	(??___fladd+3)^0,c
  7378  003634  0EFF               	movlw	255
  7379  003636  241D               	addwf	??___fladd^0,w,c
  7380  003638  6E15               	movwf	___fladd@b^0,c
  7381  00363A  0EFF               	movlw	255
  7382  00363C  201E               	addwfc	(??___fladd+1)^0,w,c
  7383  00363E  6E16               	movwf	(___fladd@b+1)^0,c
  7384  003640  0EFF               	movlw	255
  7385  003642  201F               	addwfc	(??___fladd+2)^0,w,c
  7386  003644  6E17               	movwf	(___fladd@b+2)^0,c
  7387  003646  0EFF               	movlw	255
  7388  003648  2020               	addwfc	(??___fladd+3)^0,w,c
  7389  00364A  6E18               	movwf	(___fladd@b+3)^0,c
  7390  00364C  0E80               	movlw	128
  7391  00364E  1A21               	xorwf	___fladd@signs^0,f,c
  7392                           
  7393                           ; BSR set to: 0
  7394  003650  6C24               	negf	___fladd@grs^0,c
  7395                           
  7396                           ; BSR set to: 0
  7397  003652  5024               	movf	___fladd@grs^0,w,c
  7398  003654  A4D8               	btfss	status,2,c
  7399  003656  D00F               	goto	l1684
  7400                           
  7401                           ; BSR set to: 0
  7402  003658  0E01               	movlw	1
  7403  00365A  2615               	addwf	___fladd@b^0,f,c
  7404  00365C  0E00               	movlw	0
  7405  00365E  2216               	addwfc	(___fladd@b+1)^0,f,c
  7406  003660  2217               	addwfc	(___fladd@b+2)^0,f,c
  7407  003662  2218               	addwfc	(___fladd@b+3)^0,f,c
  7408  003664  D008               	goto	l1684
  7409  003666                     l8882:
  7410                           
  7411                           ; BSR set to: 0
  7412  003666  5019               	movf	___fladd@a^0,w,c
  7413  003668  5E15               	subwf	___fladd@b^0,f,c
  7414  00366A  501A               	movf	(___fladd@a+1)^0,w,c
  7415  00366C  5A16               	subwfb	(___fladd@b+1)^0,f,c
  7416  00366E  501B               	movf	(___fladd@a+2)^0,w,c
  7417  003670  5A17               	subwfb	(___fladd@b+2)^0,f,c
  7418  003672  501C               	movf	(___fladd@a+3)^0,w,c
  7419  003674  5A18               	subwfb	(___fladd@b+3)^0,f,c
  7420  003676                     l1684:
  7421                           
  7422                           ; BSR set to: 0
  7423  003676  5015               	movf	___fladd@b^0,w,c
  7424  003678  1016               	iorwf	(___fladd@b+1)^0,w,c
  7425  00367A  1017               	iorwf	(___fladd@b+2)^0,w,c
  7426  00367C  1018               	iorwf	(___fladd@b+3)^0,w,c
  7427  00367E  A4D8               	btfss	status,2,c
  7428  003680  D01C               	goto	l8906
  7429                           
  7430                           ; BSR set to: 0
  7431  003682  5024               	movf	___fladd@grs^0,w,c
  7432  003684  A4D8               	btfss	status,2,c
  7433  003686  D019               	goto	l8906
  7434                           
  7435                           ; BSR set to: 0
  7436  003688  0E00               	movlw	0
  7437  00368A  6E15               	movwf	?___fladd^0,c
  7438  00368C  0E00               	movlw	0
  7439  00368E  6E16               	movwf	(?___fladd+1)^0,c
  7440  003690  0E00               	movlw	0
  7441  003692  6E17               	movwf	(?___fladd+2)^0,c
  7442  003694  0E00               	movlw	0
  7443  003696  6E18               	movwf	(?___fladd+3)^0,c
  7444  003698  0012               	return	
  7445  00369A                     l8890:
  7446                           
  7447                           ; BSR set to: 0
  7448  00369A  90D8               	bcf	status,0,c
  7449  00369C  3615               	rlcf	___fladd@b^0,f,c
  7450  00369E  3616               	rlcf	(___fladd@b+1)^0,f,c
  7451  0036A0  3617               	rlcf	(___fladd@b+2)^0,f,c
  7452  0036A2  3618               	rlcf	(___fladd@b+3)^0,f,c
  7453                           
  7454                           ; BSR set to: 0
  7455  0036A4  BE24               	btfsc	___fladd@grs^0,7,c
  7456                           
  7457                           ; BSR set to: 0
  7458  0036A6  8015               	bsf	___fladd@b^0,0,c
  7459                           
  7460                           ; BSR set to: 0
  7461  0036A8  A024               	btfss	___fladd@grs^0,0,c
  7462  0036AA  D002               	goto	l8900
  7463                           
  7464                           ; BSR set to: 0
  7465  0036AC  80D8               	bsf	status,0,c
  7466  0036AE  D001               	goto	L10
  7467  0036B0                     l8900:
  7468                           
  7469                           ; BSR set to: 0
  7470  0036B0  90D8               	bcf	status,0,c
  7471  0036B2                     L10:
  7472  0036B2  3624               	rlcf	___fladd@grs^0,f,c
  7473                           
  7474                           ; BSR set to: 0
  7475  0036B4  5023               	movf	___fladd@bexp^0,w,c
  7476  0036B6  A4D8               	btfss	status,2,c
  7477                           
  7478                           ; BSR set to: 0
  7479  0036B8  0623               	decf	___fladd@bexp^0,f,c
  7480  0036BA                     l8906:
  7481                           
  7482                           ; BSR set to: 0
  7483  0036BA  AE17               	btfss	(___fladd@b+2)^0,7,c
  7484  0036BC  D7EE               	goto	l8890
  7485  0036BE                     u9840:
  7486                           
  7487                           ; BSR set to: 0
  7488  0036BE  0E00               	movlw	0
  7489  0036C0  6E22               	movwf	___fladd@aexp^0,c
  7490                           
  7491                           ; BSR set to: 0
  7492  0036C2  AE24               	btfss	___fladd@grs^0,7,c
  7493  0036C4  D00B               	goto	l1693
  7494                           
  7495                           ; BSR set to: 0
  7496  0036C6  C024  F01D         	movff	___fladd@grs,??___fladd
  7497  0036CA  0E7F               	movlw	127
  7498  0036CC  161D               	andwf	??___fladd^0,f,c
  7499  0036CE  B4D8               	btfsc	status,2,c
  7500  0036D0  D003               	goto	l1694
  7501  0036D2                     u9860:
  7502                           
  7503                           ; BSR set to: 0
  7504  0036D2  0E01               	movlw	1
  7505  0036D4  6E22               	movwf	___fladd@aexp^0,c
  7506  0036D6  D002               	goto	l1693
  7507  0036D8                     l1694:
  7508                           
  7509                           ; BSR set to: 0
  7510  0036D8  B015               	btfsc	___fladd@b^0,0,c
  7511  0036DA  D7FB               	goto	u9860
  7512  0036DC                     l1693:
  7513                           
  7514                           ; BSR set to: 0
  7515  0036DC  5022               	movf	___fladd@aexp^0,w,c
  7516  0036DE  B4D8               	btfsc	status,2,c
  7517  0036E0  D020               	goto	l8926
  7518                           
  7519                           ; BSR set to: 0
  7520  0036E2  0E01               	movlw	1
  7521  0036E4  2615               	addwf	___fladd@b^0,f,c
  7522  0036E6  0E00               	movlw	0
  7523  0036E8  2216               	addwfc	(___fladd@b+1)^0,f,c
  7524  0036EA  2217               	addwfc	(___fladd@b+2)^0,f,c
  7525  0036EC  2218               	addwfc	(___fladd@b+3)^0,f,c
  7526                           
  7527                           ; BSR set to: 0
  7528  0036EE  A018               	btfss	(___fladd@b+3)^0,0,c
  7529  0036F0  D018               	goto	l8926
  7530                           
  7531                           ; BSR set to: 0
  7532  0036F2  C015  F01D         	movff	___fladd@b,??___fladd
  7533  0036F6  C016  F01E         	movff	___fladd@b+1,??___fladd+1
  7534  0036FA  C017  F01F         	movff	___fladd@b+2,??___fladd+2
  7535  0036FE  C018  F020         	movff	___fladd@b+3,??___fladd+3
  7536  003702  3420               	rlcf	(??___fladd+3)^0,w,c
  7537  003704  3220               	rrcf	(??___fladd+3)^0,f,c
  7538  003706  321F               	rrcf	(??___fladd+2)^0,f,c
  7539  003708  321E               	rrcf	(??___fladd+1)^0,f,c
  7540  00370A  321D               	rrcf	??___fladd^0,f,c
  7541  00370C  C01D  F015         	movff	??___fladd,___fladd@b
  7542  003710  C01E  F016         	movff	??___fladd+1,___fladd@b+1
  7543  003714  C01F  F017         	movff	??___fladd+2,___fladd@b+2
  7544  003718  C020  F018         	movff	??___fladd+3,___fladd@b+3
  7545  00371C  2823               	incf	___fladd@bexp^0,w,c
  7546  00371E  A4D8               	btfss	status,2,c
  7547                           
  7548                           ; BSR set to: 0
  7549  003720  2A23               	incf	___fladd@bexp^0,f,c
  7550  003722                     l8926:
  7551                           
  7552                           ; BSR set to: 0
  7553  003722  2823               	incf	___fladd@bexp^0,w,c
  7554  003724  B4D8               	btfsc	status,2,c
  7555  003726  D003               	goto	u9920
  7556                           
  7557                           ; BSR set to: 0
  7558  003728  5023               	movf	___fladd@bexp^0,w,c
  7559  00372A  A4D8               	btfss	status,2,c
  7560  00372C  D00D               	goto	l8934
  7561  00372E                     u9920:
  7562                           
  7563                           ; BSR set to: 0
  7564  00372E  0E00               	movlw	0
  7565  003730  6E15               	movwf	___fladd@b^0,c
  7566  003732  0E00               	movlw	0
  7567  003734  6E16               	movwf	(___fladd@b+1)^0,c
  7568  003736  0E00               	movlw	0
  7569  003738  6E17               	movwf	(___fladd@b+2)^0,c
  7570  00373A  0E00               	movlw	0
  7571  00373C  6E18               	movwf	(___fladd@b+3)^0,c
  7572  00373E  5023               	movf	___fladd@bexp^0,w,c
  7573  003740  A4D8               	btfss	status,2,c
  7574  003742  D002               	goto	l8934
  7575                           
  7576                           ; BSR set to: 0
  7577  003744  0E00               	movlw	0
  7578  003746  6E21               	movwf	___fladd@signs^0,c
  7579  003748                     l8934:
  7580                           
  7581                           ; BSR set to: 0
  7582  003748  A023               	btfss	___fladd@bexp^0,0,c
  7583  00374A  D002               	goto	l8938
  7584                           
  7585                           ; BSR set to: 0
  7586  00374C  8E17               	bsf	(___fladd@b+2)^0,7,c
  7587  00374E  D001               	goto	l8940
  7588  003750                     l8938:
  7589                           
  7590                           ; BSR set to: 0
  7591  003750  9E17               	bcf	(___fladd@b+2)^0,7,c
  7592  003752                     l8940:
  7593                           
  7594                           ; BSR set to: 0
  7595  003752  90D8               	bcf	status,0,c
  7596  003754  3023               	rrcf	___fladd@bexp^0,w,c
  7597  003756  6E18               	movwf	(___fladd@b+3)^0,c
  7598                           
  7599                           ; BSR set to: 0
  7600  003758  BE21               	btfsc	___fladd@signs^0,7,c
  7601                           
  7602                           ; BSR set to: 0
  7603  00375A  8E18               	bsf	(___fladd@b+3)^0,7,c
  7604                           
  7605                           ; BSR set to: 0
  7606  00375C  C015  F015         	movff	___fladd@b,?___fladd
  7607  003760  C016  F016         	movff	___fladd@b+1,?___fladd+1
  7608  003764  C017  F017         	movff	___fladd@b+2,?___fladd+2
  7609  003768  C018  F018         	movff	___fladd@b+3,?___fladd+3
  7610                           
  7611                           ; BSR set to: 0
  7612  00376C  0012               	return		;funcret
  7613  00376E                     __end_of___fladd:
  7614                           	callstack 0
  7615                           
  7616 ;; *************** function ___flneg *****************
  7617 ;; Defined at:
  7618 ;;		line 15 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/flneg.c"
  7619 ;; Parameters:    Size  Location     Type
  7620 ;;  f1              4   20[COMRAM] unsigned char 
  7621 ;; Auto vars:     Size  Location     Type
  7622 ;;		None
  7623 ;; Return value:  Size  Location     Type
  7624 ;;                  4   20[COMRAM] unsigned char 
  7625 ;; Registers used:
  7626 ;;		wreg, status,2, status,0
  7627 ;; Tracked objects:
  7628 ;;		On entry : 3F/0
  7629 ;;		On exit  : 3F/0
  7630 ;;		Unchanged: 3F/0
  7631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7632 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7635 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7636 ;;Total ram usage:        4 bytes
  7637 ;; Hardware stack levels used: 1
  7638 ;; Hardware stack levels required when called: 4
  7639 ;; This function calls:
  7640 ;;		Nothing
  7641 ;; This function is called by:
  7642 ;;		_efgtoa
  7643 ;; This function uses a non-reentrant model
  7644 ;;
  7645                           
  7646                           	psect	text21
  7647  005A12                     __ptext21:
  7648                           	callstack 0
  7649  005A12                     ___flneg:
  7650                           	callstack 20
  7651                           
  7652                           ; BSR set to: 0
  7653                           
  7654                           ; BSR set to: 0
  7655                           ;incstack = 0
  7656  005A12  5015               	movf	___flneg@f1^0,w,c
  7657  005A14  1016               	iorwf	(___flneg@f1+1)^0,w,c
  7658  005A16  1017               	iorwf	(___flneg@f1+2)^0,w,c
  7659  005A18  1018               	iorwf	(___flneg@f1+3)^0,w,c
  7660  005A1A  B4D8               	btfsc	status,2,c
  7661  005A1C  D008               	goto	l9364
  7662                           
  7663                           ; BSR set to: 0
  7664  005A1E  0E00               	movlw	0
  7665  005A20  1A15               	xorwf	___flneg@f1^0,f,c
  7666  005A22  0E00               	movlw	0
  7667  005A24  1A16               	xorwf	(___flneg@f1+1)^0,f,c
  7668  005A26  0E00               	movlw	0
  7669  005A28  1A17               	xorwf	(___flneg@f1+2)^0,f,c
  7670  005A2A  0E80               	movlw	128
  7671  005A2C  1A18               	xorwf	(___flneg@f1+3)^0,f,c
  7672  005A2E                     l9364:
  7673                           
  7674                           ; BSR set to: 0
  7675  005A2E  C015  F015         	movff	___flneg@f1,?___flneg
  7676  005A32  C016  F016         	movff	___flneg@f1+1,?___flneg+1
  7677  005A36  C017  F017         	movff	___flneg@f1+2,?___flneg+2
  7678  005A3A  C018  F018         	movff	___flneg@f1+3,?___flneg+3
  7679                           
  7680                           ; BSR set to: 0
  7681  005A3E  0012               	return		;funcret
  7682  005A40                     __end_of___flneg:
  7683                           	callstack 0
  7684                           
  7685 ;; *************** function ___flmul *****************
  7686 ;; Defined at:
  7687 ;;		line 8 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/sprcmul.c"
  7688 ;; Parameters:    Size  Location     Type
  7689 ;;  b               4   34[COMRAM] unsigned char 
  7690 ;;  a               4   38[COMRAM] unsigned char 
  7691 ;; Auto vars:     Size  Location     Type
  7692 ;;  prod            4    7[BANK0 ] struct .
  7693 ;;  grs             4    3[BANK0 ] unsigned long 
  7694 ;;  temp            2   11[BANK0 ] struct .
  7695 ;;  bexp            1    2[BANK0 ] unsigned char 
  7696 ;;  aexp            1    1[BANK0 ] unsigned char 
  7697 ;;  sign            1    0[BANK0 ] unsigned char 
  7698 ;; Return value:  Size  Location     Type
  7699 ;;                  4   34[COMRAM] unsigned char 
  7700 ;; Registers used:
  7701 ;;		wreg, status,2, status,0, prodl, prodh
  7702 ;; Tracked objects:
  7703 ;;		On entry : 0/0
  7704 ;;		On exit  : 3F/0
  7705 ;;		Unchanged: 0/0
  7706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7707 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7708 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7709 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7710 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7711 ;;Total ram usage:       25 bytes
  7712 ;; Hardware stack levels used: 1
  7713 ;; Hardware stack levels required when called: 4
  7714 ;; This function calls:
  7715 ;;		Nothing
  7716 ;; This function is called by:
  7717 ;;		_main
  7718 ;;		_efgtoa
  7719 ;; This function uses a non-reentrant model
  7720 ;;
  7721                           
  7722                           	psect	text22
  7723  003110                     __ptext22:
  7724                           	callstack 0
  7725  003110                     ___flmul:
  7726                           	callstack 20
  7727                           
  7728                           ; BSR set to: 0
  7729                           ;incstack = 0
  7730  003110  5026               	movf	(___flmul@b+3)^0,w,c
  7731  003112  0B80               	andlw	128
  7732  003114  0100               	movlb	0	; () banked
  7733  003116  6F60               	movwf	___flmul@sign& (0+255),b
  7734  003118  5026               	movf	(___flmul@b+3)^0,w,c
  7735  00311A  2426               	addwf	(___flmul@b+3)^0,w,c
  7736  00311C  6F62               	movwf	___flmul@bexp& (0+255),b
  7737                           
  7738                           ; BSR set to: 0
  7739  00311E  BE25               	btfsc	(___flmul@b+2)^0,7,c
  7740                           
  7741                           ; BSR set to: 0
  7742  003120  8162               	bsf	___flmul@bexp& (0+255),0,b
  7743                           
  7744                           ; BSR set to: 0
  7745  003122  5162               	movf	___flmul@bexp& (0+255),w,b
  7746  003124  B4D8               	btfsc	status,2,c
  7747  003126  D00D               	goto	l9120
  7748                           
  7749                           ; BSR set to: 0
  7750  003128  2962               	incf	___flmul@bexp& (0+255),w,b
  7751  00312A  A4D8               	btfss	status,2,c
  7752  00312C  D008               	goto	l9118
  7753                           
  7754                           ; BSR set to: 0
  7755  00312E  0E00               	movlw	0
  7756  003130  6E23               	movwf	___flmul@b^0,c
  7757  003132  0E00               	movlw	0
  7758  003134  6E24               	movwf	(___flmul@b+1)^0,c
  7759  003136  0E00               	movlw	0
  7760  003138  6E25               	movwf	(___flmul@b+2)^0,c
  7761  00313A  0E00               	movlw	0
  7762  00313C  6E26               	movwf	(___flmul@b+3)^0,c
  7763  00313E                     l9118:
  7764                           
  7765                           ; BSR set to: 0
  7766  00313E  8E25               	bsf	(___flmul@b+2)^0,7,c
  7767  003140  D008               	goto	l9122
  7768  003142                     l9120:
  7769                           
  7770                           ; BSR set to: 0
  7771  003142  0E00               	movlw	0
  7772  003144  6E23               	movwf	___flmul@b^0,c
  7773  003146  0E00               	movlw	0
  7774  003148  6E24               	movwf	(___flmul@b+1)^0,c
  7775  00314A  0E00               	movlw	0
  7776  00314C  6E25               	movwf	(___flmul@b+2)^0,c
  7777  00314E  0E00               	movlw	0
  7778  003150  6E26               	movwf	(___flmul@b+3)^0,c
  7779  003152                     l9122:
  7780                           
  7781                           ; BSR set to: 0
  7782  003152  502A               	movf	(___flmul@a+3)^0,w,c
  7783  003154  0B80               	andlw	128
  7784  003156  1B60               	xorwf	___flmul@sign& (0+255),f,b
  7785                           
  7786                           ; BSR set to: 0
  7787  003158  502A               	movf	(___flmul@a+3)^0,w,c
  7788  00315A  242A               	addwf	(___flmul@a+3)^0,w,c
  7789  00315C  6F61               	movwf	___flmul@aexp& (0+255),b
  7790                           
  7791                           ; BSR set to: 0
  7792  00315E  BE29               	btfsc	(___flmul@a+2)^0,7,c
  7793                           
  7794                           ; BSR set to: 0
  7795  003160  8161               	bsf	___flmul@aexp& (0+255),0,b
  7796                           
  7797                           ; BSR set to: 0
  7798  003162  5161               	movf	___flmul@aexp& (0+255),w,b
  7799  003164  B4D8               	btfsc	status,2,c
  7800  003166  D00D               	goto	l9138
  7801                           
  7802                           ; BSR set to: 0
  7803  003168  2961               	incf	___flmul@aexp& (0+255),w,b
  7804  00316A  A4D8               	btfss	status,2,c
  7805  00316C  D008               	goto	l9136
  7806                           
  7807                           ; BSR set to: 0
  7808  00316E  0E00               	movlw	0
  7809  003170  6E27               	movwf	___flmul@a^0,c
  7810  003172  0E00               	movlw	0
  7811  003174  6E28               	movwf	(___flmul@a+1)^0,c
  7812  003176  0E00               	movlw	0
  7813  003178  6E29               	movwf	(___flmul@a+2)^0,c
  7814  00317A  0E00               	movlw	0
  7815  00317C  6E2A               	movwf	(___flmul@a+3)^0,c
  7816  00317E                     l9136:
  7817                           
  7818                           ; BSR set to: 0
  7819  00317E  8E29               	bsf	(___flmul@a+2)^0,7,c
  7820  003180  D008               	goto	l1753
  7821  003182                     l9138:
  7822                           
  7823                           ; BSR set to: 0
  7824  003182  0E00               	movlw	0
  7825  003184  6E27               	movwf	___flmul@a^0,c
  7826  003186  0E00               	movlw	0
  7827  003188  6E28               	movwf	(___flmul@a+1)^0,c
  7828  00318A  0E00               	movlw	0
  7829  00318C  6E29               	movwf	(___flmul@a+2)^0,c
  7830  00318E  0E00               	movlw	0
  7831  003190  6E2A               	movwf	(___flmul@a+3)^0,c
  7832  003192                     l1753:
  7833                           
  7834                           ; BSR set to: 0
  7835  003192  5161               	movf	___flmul@aexp& (0+255),w,b
  7836  003194  B4D8               	btfsc	status,2,c
  7837  003196  D003               	goto	u10300
  7838                           
  7839                           ; BSR set to: 0
  7840  003198  5162               	movf	___flmul@bexp& (0+255),w,b
  7841  00319A  A4D8               	btfss	status,2,c
  7842  00319C  D009               	goto	l9146
  7843  00319E                     u10300:
  7844                           
  7845                           ; BSR set to: 0
  7846  00319E  0E00               	movlw	0
  7847  0031A0  6E23               	movwf	?___flmul^0,c
  7848  0031A2  0E00               	movlw	0
  7849  0031A4  6E24               	movwf	(?___flmul+1)^0,c
  7850  0031A6  0E00               	movlw	0
  7851  0031A8  6E25               	movwf	(?___flmul+2)^0,c
  7852  0031AA  0E00               	movlw	0
  7853  0031AC  6E26               	movwf	(?___flmul+3)^0,c
  7854  0031AE  0012               	return	
  7855  0031B0                     l9146:
  7856                           
  7857                           ; BSR set to: 0
  7858  0031B0  5029               	movf	(___flmul@a+2)^0,w,c
  7859  0031B2  0223               	mulwf	___flmul@b^0,c
  7860  0031B4  006F FFCC  F06B    	movff	prodl,___flmul@temp
  7861  0031BA  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  7862                           
  7863                           ; BSR set to: 0
  7864  0031C0  516B               	movf	___flmul@temp& (0+255),w,b
  7865  0031C2  6F63               	movwf	___flmul@grs& (0+255),b
  7866  0031C4  6B64               	clrf	(___flmul@grs+1)& (0+255),b
  7867  0031C6  6B65               	clrf	(___flmul@grs+2)& (0+255),b
  7868  0031C8  6B66               	clrf	(___flmul@grs+3)& (0+255),b
  7869                           
  7870                           ; BSR set to: 0
  7871  0031CA  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7872  0031CC  6F67               	movwf	___flmul@prod& (0+255),b
  7873  0031CE  6B68               	clrf	(___flmul@prod+1)& (0+255),b
  7874  0031D0  6B69               	clrf	(___flmul@prod+2)& (0+255),b
  7875  0031D2  6B6A               	clrf	(___flmul@prod+3)& (0+255),b
  7876  0031D4  5028               	movf	(___flmul@a+1)^0,w,c
  7877  0031D6  0224               	mulwf	(___flmul@b+1)^0,c
  7878  0031D8  006F FFCC  F06B    	movff	prodl,___flmul@temp
  7879  0031DE  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  7880                           
  7881                           ; BSR set to: 0
  7882  0031E4  516B               	movf	___flmul@temp& (0+255),w,b
  7883  0031E6  2763               	addwf	___flmul@grs& (0+255),f,b
  7884  0031E8  0E00               	movlw	0
  7885  0031EA  2364               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7886  0031EC  2365               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7887  0031EE  2366               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7888                           
  7889                           ; BSR set to: 0
  7890  0031F0  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7891  0031F2  2767               	addwf	___flmul@prod& (0+255),f,b
  7892  0031F4  0E00               	movlw	0
  7893  0031F6  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7894  0031F8  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7895  0031FA  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7896  0031FC  5027               	movf	___flmul@a^0,w,c
  7897  0031FE  0225               	mulwf	(___flmul@b+2)^0,c
  7898  003200  006F FFCC  F06B    	movff	prodl,___flmul@temp
  7899  003206  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  7900                           
  7901                           ; BSR set to: 0
  7902  00320C  516B               	movf	___flmul@temp& (0+255),w,b
  7903  00320E  2763               	addwf	___flmul@grs& (0+255),f,b
  7904  003210  0E00               	movlw	0
  7905  003212  2364               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7906  003214  2365               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7907  003216  2366               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7908                           
  7909                           ; BSR set to: 0
  7910  003218  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7911  00321A  2767               	addwf	___flmul@prod& (0+255),f,b
  7912  00321C  0E00               	movlw	0
  7913  00321E  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7914  003220  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7915  003222  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7916                           
  7917                           ; BSR set to: 0
  7918  003224  C065  F066         	movff	___flmul@grs+2,___flmul@grs+3
  7919  003228  C064  F065         	movff	___flmul@grs+1,___flmul@grs+2
  7920  00322C  C063  F064         	movff	___flmul@grs,___flmul@grs+1
  7921  003230  6B63               	clrf	___flmul@grs& (0+255),b
  7922                           
  7923                           ; BSR set to: 0
  7924  003232  5027               	movf	___flmul@a^0,w,c
  7925  003234  0224               	mulwf	(___flmul@b+1)^0,c
  7926  003236  006F FFCC  F06B    	movff	prodl,___flmul@temp
  7927  00323C  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  7928                           
  7929                           ; BSR set to: 0
  7930  003242  516B               	movf	___flmul@temp& (0+255),w,b
  7931  003244  2763               	addwf	___flmul@grs& (0+255),f,b
  7932  003246  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7933  003248  2364               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7934  00324A  0E00               	movlw	0
  7935  00324C  2365               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7936  00324E  0E00               	movlw	0
  7937  003250  2366               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7938                           
  7939                           ; BSR set to: 0
  7940  003252  5028               	movf	(___flmul@a+1)^0,w,c
  7941  003254  0223               	mulwf	___flmul@b^0,c
  7942  003256  006F FFCC  F06B    	movff	prodl,___flmul@temp
  7943  00325C  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  7944                           
  7945                           ; BSR set to: 0
  7946  003262  516B               	movf	___flmul@temp& (0+255),w,b
  7947  003264  2763               	addwf	___flmul@grs& (0+255),f,b
  7948  003266  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7949  003268  2364               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7950  00326A  0E00               	movlw	0
  7951  00326C  2365               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7952  00326E  0E00               	movlw	0
  7953  003270  2366               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7954                           
  7955                           ; BSR set to: 0
  7956  003272  C065  F066         	movff	___flmul@grs+2,___flmul@grs+3
  7957  003276  C064  F065         	movff	___flmul@grs+1,___flmul@grs+2
  7958  00327A  C063  F064         	movff	___flmul@grs,___flmul@grs+1
  7959  00327E  6B63               	clrf	___flmul@grs& (0+255),b
  7960  003280  5027               	movf	___flmul@a^0,w,c
  7961  003282  0223               	mulwf	___flmul@b^0,c
  7962  003284  006F FFCC  F06B    	movff	prodl,___flmul@temp
  7963  00328A  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  7964                           
  7965                           ; BSR set to: 0
  7966  003290  516B               	movf	___flmul@temp& (0+255),w,b
  7967  003292  2763               	addwf	___flmul@grs& (0+255),f,b
  7968  003294  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7969  003296  2364               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7970  003298  0E00               	movlw	0
  7971  00329A  2365               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7972  00329C  0E00               	movlw	0
  7973  00329E  2366               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7974                           
  7975                           ; BSR set to: 0
  7976  0032A0  5029               	movf	(___flmul@a+2)^0,w,c
  7977  0032A2  0224               	mulwf	(___flmul@b+1)^0,c
  7978  0032A4  006F FFCC  F06B    	movff	prodl,___flmul@temp
  7979  0032AA  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  7980  0032B0  516B               	movf	___flmul@temp& (0+255),w,b
  7981  0032B2  2767               	addwf	___flmul@prod& (0+255),f,b
  7982  0032B4  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7983  0032B6  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7984  0032B8  0E00               	movlw	0
  7985  0032BA  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7986  0032BC  0E00               	movlw	0
  7987  0032BE  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7988                           
  7989                           ; BSR set to: 0
  7990  0032C0  5028               	movf	(___flmul@a+1)^0,w,c
  7991  0032C2  0225               	mulwf	(___flmul@b+2)^0,c
  7992  0032C4  006F FFCC  F06B    	movff	prodl,___flmul@temp
  7993  0032CA  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  7994                           
  7995                           ; BSR set to: 0
  7996  0032D0  516B               	movf	___flmul@temp& (0+255),w,b
  7997  0032D2  2767               	addwf	___flmul@prod& (0+255),f,b
  7998  0032D4  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7999  0032D6  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8000  0032D8  0E00               	movlw	0
  8001  0032DA  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8002  0032DC  0E00               	movlw	0
  8003  0032DE  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8004  0032E0  5029               	movf	(___flmul@a+2)^0,w,c
  8005  0032E2  0225               	mulwf	(___flmul@b+2)^0,c
  8006  0032E4  006F FFCC  F06B    	movff	prodl,___flmul@temp
  8007  0032EA  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  8008                           
  8009                           ; BSR set to: 0
  8010  0032F0  516B               	movf	___flmul@temp& (0+255),w,b
  8011  0032F2  6E2B               	movwf	??___flmul^0,c
  8012  0032F4  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  8013  0032F6  6E2C               	movwf	(??___flmul+1)^0,c
  8014  0032F8  6A2D               	clrf	(??___flmul+2)^0,c
  8015  0032FA  6A2E               	clrf	(??___flmul+3)^0,c
  8016  0032FC  C02D  F02E         	movff	??___flmul+2,??___flmul+3
  8017  003300  C02C  F02D         	movff	??___flmul+1,??___flmul+2
  8018  003304  C02B  F02C         	movff	??___flmul,??___flmul+1
  8019  003308  6A2B               	clrf	??___flmul^0,c
  8020  00330A  502B               	movf	??___flmul^0,w,c
  8021  00330C  2767               	addwf	___flmul@prod& (0+255),f,b
  8022  00330E  502C               	movf	(??___flmul+1)^0,w,c
  8023  003310  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8024  003312  502D               	movf	(??___flmul+2)^0,w,c
  8025  003314  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8026  003316  502E               	movf	(??___flmul+3)^0,w,c
  8027  003318  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8028                           
  8029                           ; BSR set to: 0
  8030  00331A  5166               	movf	(___flmul@grs+3)& (0+255),w,b
  8031  00331C  2767               	addwf	___flmul@prod& (0+255),f,b
  8032  00331E  0E00               	movlw	0
  8033  003320  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8034  003322  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8035  003324  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8036                           
  8037                           ; BSR set to: 0
  8038  003326  C065  F066         	movff	___flmul@grs+2,___flmul@grs+3
  8039  00332A  C064  F065         	movff	___flmul@grs+1,___flmul@grs+2
  8040  00332E  C063  F064         	movff	___flmul@grs,___flmul@grs+1
  8041  003332  6B63               	clrf	___flmul@grs& (0+255),b
  8042                           
  8043                           ; BSR set to: 0
  8044  003334  5161               	movf	___flmul@aexp& (0+255),w,b
  8045  003336  C062  F02B         	movff	___flmul@bexp,??___flmul
  8046  00333A  6A2C               	clrf	(??___flmul+1)^0,c
  8047  00333C  262B               	addwf	??___flmul^0,f,c
  8048  00333E  0E00               	movlw	0
  8049  003340  222C               	addwfc	(??___flmul+1)^0,f,c
  8050  003342  0E82               	movlw	130
  8051  003344  242B               	addwf	??___flmul^0,w,c
  8052  003346  6F6B               	movwf	___flmul@temp& (0+255),b
  8053  003348  0EFF               	movlw	255
  8054  00334A  202C               	addwfc	(??___flmul+1)^0,w,c
  8055  00334C  6F6C               	movwf	(___flmul@temp+1)& (0+255),b
  8056  00334E  D00F               	goto	l9194
  8057  003350                     l9188:
  8058                           
  8059                           ; BSR set to: 0
  8060  003350  90D8               	bcf	status,0,c
  8061  003352  3767               	rlcf	___flmul@prod& (0+255),f,b
  8062  003354  3768               	rlcf	(___flmul@prod+1)& (0+255),f,b
  8063  003356  3769               	rlcf	(___flmul@prod+2)& (0+255),f,b
  8064  003358  376A               	rlcf	(___flmul@prod+3)& (0+255),f,b
  8065                           
  8066                           ; BSR set to: 0
  8067  00335A  BF66               	btfsc	(___flmul@grs+3)& (0+255),7,b
  8068                           
  8069                           ; BSR set to: 0
  8070  00335C  8167               	bsf	___flmul@prod& (0+255),0,b
  8071                           
  8072                           ; BSR set to: 0
  8073  00335E  90D8               	bcf	status,0,c
  8074  003360  3763               	rlcf	___flmul@grs& (0+255),f,b
  8075  003362  3764               	rlcf	(___flmul@grs+1)& (0+255),f,b
  8076  003364  3765               	rlcf	(___flmul@grs+2)& (0+255),f,b
  8077  003366  3766               	rlcf	(___flmul@grs+3)& (0+255),f,b
  8078  003368  076B               	decf	___flmul@temp& (0+255),f,b
  8079  00336A  A0D8               	btfss	status,0,c
  8080  00336C  076C               	decf	(___flmul@temp+1)& (0+255),f,b
  8081  00336E                     l9194:
  8082                           
  8083                           ; BSR set to: 0
  8084  00336E  AF69               	btfss	(___flmul@prod+2)& (0+255),7,b
  8085  003370  D7EF               	goto	l9188
  8086                           
  8087                           ; BSR set to: 0
  8088  003372  0E00               	movlw	0
  8089  003374  6F61               	movwf	___flmul@aexp& (0+255),b
  8090                           
  8091                           ; BSR set to: 0
  8092  003376  AF66               	btfss	(___flmul@grs+3)& (0+255),7,b
  8093  003378  D017               	goto	l1762
  8094                           
  8095                           ; BSR set to: 0
  8096  00337A  0EFF               	movlw	255
  8097  00337C  1563               	andwf	___flmul@grs& (0+255),w,b
  8098  00337E  6E2B               	movwf	??___flmul^0,c
  8099  003380  0EFF               	movlw	255
  8100  003382  1564               	andwf	(___flmul@grs+1)& (0+255),w,b
  8101  003384  6E2C               	movwf	(??___flmul+1)^0,c
  8102  003386  0EFF               	movlw	255
  8103  003388  1565               	andwf	(___flmul@grs+2)& (0+255),w,b
  8104  00338A  6E2D               	movwf	(??___flmul+2)^0,c
  8105  00338C  0E7F               	movlw	127
  8106  00338E  1566               	andwf	(___flmul@grs+3)& (0+255),w,b
  8107  003390  6E2E               	movwf	(??___flmul+3)^0,c
  8108  003392  502B               	movf	??___flmul^0,w,c
  8109  003394  102C               	iorwf	(??___flmul+1)^0,w,c
  8110  003396  102D               	iorwf	(??___flmul+2)^0,w,c
  8111  003398  102E               	iorwf	(??___flmul+3)^0,w,c
  8112  00339A  B4D8               	btfsc	status,2,c
  8113  00339C  D003               	goto	l1763
  8114  00339E                     u10340:
  8115                           
  8116                           ; BSR set to: 0
  8117  00339E  0E01               	movlw	1
  8118  0033A0  6F61               	movwf	___flmul@aexp& (0+255),b
  8119  0033A2  D002               	goto	l1762
  8120  0033A4                     l1763:
  8121                           
  8122                           ; BSR set to: 0
  8123  0033A4  B167               	btfsc	___flmul@prod& (0+255),0,b
  8124  0033A6  D7FB               	goto	u10340
  8125  0033A8                     l1762:
  8126                           
  8127                           ; BSR set to: 0
  8128  0033A8  5161               	movf	___flmul@aexp& (0+255),w,b
  8129  0033AA  B4D8               	btfsc	status,2,c
  8130  0033AC  D01F               	goto	l9214
  8131                           
  8132                           ; BSR set to: 0
  8133  0033AE  0E01               	movlw	1
  8134  0033B0  2767               	addwf	___flmul@prod& (0+255),f,b
  8135  0033B2  0E00               	movlw	0
  8136  0033B4  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8137  0033B6  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8138  0033B8  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8139                           
  8140                           ; BSR set to: 0
  8141  0033BA  A16A               	btfss	(___flmul@prod+3)& (0+255),0,b
  8142  0033BC  D017               	goto	l9214
  8143                           
  8144                           ; BSR set to: 0
  8145  0033BE  C067  F02B         	movff	___flmul@prod,??___flmul
  8146  0033C2  C068  F02C         	movff	___flmul@prod+1,??___flmul+1
  8147  0033C6  C069  F02D         	movff	___flmul@prod+2,??___flmul+2
  8148  0033CA  C06A  F02E         	movff	___flmul@prod+3,??___flmul+3
  8149  0033CE  342E               	rlcf	(??___flmul+3)^0,w,c
  8150  0033D0  322E               	rrcf	(??___flmul+3)^0,f,c
  8151  0033D2  322D               	rrcf	(??___flmul+2)^0,f,c
  8152  0033D4  322C               	rrcf	(??___flmul+1)^0,f,c
  8153  0033D6  322B               	rrcf	??___flmul^0,f,c
  8154  0033D8  C02B  F067         	movff	??___flmul,___flmul@prod
  8155  0033DC  C02C  F068         	movff	??___flmul+1,___flmul@prod+1
  8156  0033E0  C02D  F069         	movff	??___flmul+2,___flmul@prod+2
  8157  0033E4  C02E  F06A         	movff	??___flmul+3,___flmul@prod+3
  8158                           
  8159                           ; BSR set to: 0
  8160  0033E8  4B6B               	infsnz	___flmul@temp& (0+255),f,b
  8161  0033EA  2B6C               	incf	(___flmul@temp+1)& (0+255),f,b
  8162  0033EC                     l9214:
  8163                           
  8164                           ; BSR set to: 0
  8165  0033EC  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8166  0033EE  D00D               	goto	l9218
  8167  0033F0  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  8168  0033F2  E103               	bnz	u10380
  8169  0033F4  296B               	incf	___flmul@temp& (0+255),w,b
  8170  0033F6  A0D8               	btfss	status,0,c
  8171  0033F8  D008               	goto	l9218
  8172  0033FA                     u10380:
  8173                           
  8174                           ; BSR set to: 0
  8175  0033FA  0E00               	movlw	0
  8176  0033FC  6F67               	movwf	___flmul@prod& (0+255),b
  8177  0033FE  0E00               	movlw	0
  8178  003400  6F68               	movwf	(___flmul@prod+1)& (0+255),b
  8179  003402  0E80               	movlw	128
  8180  003404  6F69               	movwf	(___flmul@prod+2)& (0+255),b
  8181  003406  0E7F               	movlw	127
  8182  003408  D020               	goto	L11
  8183  00340A                     l9218:
  8184                           
  8185                           ; BSR set to: 0
  8186  00340A  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8187  00340C  D005               	goto	u10390
  8188  00340E  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  8189  003410  E10E               	bnz	l1770
  8190  003412  056B               	decf	___flmul@temp& (0+255),w,b
  8191  003414  B0D8               	btfsc	status,0,c
  8192  003416  D00B               	goto	l1770
  8193  003418                     u10390:
  8194                           
  8195                           ; BSR set to: 0
  8196  003418  0E00               	movlw	0
  8197  00341A  6F67               	movwf	___flmul@prod& (0+255),b
  8198  00341C  0E00               	movlw	0
  8199  00341E  6F68               	movwf	(___flmul@prod+1)& (0+255),b
  8200  003420  0E00               	movlw	0
  8201  003422  6F69               	movwf	(___flmul@prod+2)& (0+255),b
  8202  003424  0E00               	movlw	0
  8203  003426  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  8204  003428  0E00               	movlw	0
  8205  00342A  6F60               	movwf	___flmul@sign& (0+255),b
  8206  00342C  D00F               	goto	l9230
  8207  00342E                     l1770:
  8208                           
  8209                           ; BSR set to: 0
  8210  00342E  C06B  F062         	movff	___flmul@temp,___flmul@bexp
  8211                           
  8212                           ; BSR set to: 0
  8213  003432  0EFF               	movlw	255
  8214  003434  1767               	andwf	___flmul@prod& (0+255),f,b
  8215  003436  0EFF               	movlw	255
  8216  003438  1768               	andwf	(___flmul@prod+1)& (0+255),f,b
  8217  00343A  0E7F               	movlw	127
  8218  00343C  1769               	andwf	(___flmul@prod+2)& (0+255),f,b
  8219  00343E  0E00               	movlw	0
  8220  003440  176A               	andwf	(___flmul@prod+3)& (0+255),f,b
  8221                           
  8222                           ; BSR set to: 0
  8223  003442  B162               	btfsc	___flmul@bexp& (0+255),0,b
  8224                           
  8225                           ; BSR set to: 0
  8226  003444  8F69               	bsf	(___flmul@prod+2)& (0+255),7,b
  8227                           
  8228                           ; BSR set to: 0
  8229  003446  90D8               	bcf	status,0,c
  8230  003448  3162               	rrcf	___flmul@bexp& (0+255),w,b
  8231  00344A                     L11:
  8232  00344A  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  8233  00344C                     l9230:
  8234                           
  8235                           ; BSR set to: 0
  8236  00344C  5160               	movf	___flmul@sign& (0+255),w,b
  8237  00344E  136A               	iorwf	(___flmul@prod+3)& (0+255),f,b
  8238                           
  8239                           ; BSR set to: 0
  8240  003450  C067  F023         	movff	___flmul@prod,?___flmul
  8241  003454  C068  F024         	movff	___flmul@prod+1,?___flmul+1
  8242  003458  C069  F025         	movff	___flmul@prod+2,?___flmul+2
  8243  00345C  C06A  F026         	movff	___flmul@prod+3,?___flmul+3
  8244                           
  8245                           ; BSR set to: 0
  8246  003460  0012               	return		;funcret
  8247  003462                     __end_of___flmul:
  8248                           	callstack 0
  8249                           
  8250 ;; *************** function ___flge *****************
  8251 ;; Defined at:
  8252 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/flge.c"
  8253 ;; Parameters:    Size  Location     Type
  8254 ;;  ff1             4   46[COMRAM] unsigned char 
  8255 ;;  ff2             4   50[COMRAM] unsigned char 
  8256 ;; Auto vars:     Size  Location     Type
  8257 ;;		None
  8258 ;; Return value:  Size  Location     Type
  8259 ;;		None               void
  8260 ;; Registers used:
  8261 ;;		wreg, status,2, status,0
  8262 ;; Tracked objects:
  8263 ;;		On entry : 3F/0
  8264 ;;		On exit  : 3F/0
  8265 ;;		Unchanged: 0/0
  8266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8267 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8269 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8270 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8271 ;;Total ram usage:       12 bytes
  8272 ;; Hardware stack levels used: 1
  8273 ;; Hardware stack levels required when called: 4
  8274 ;; This function calls:
  8275 ;;		Nothing
  8276 ;; This function is called by:
  8277 ;;		_efgtoa
  8278 ;; This function uses a non-reentrant model
  8279 ;;
  8280                           
  8281                           	psect	text23
  8282  004928                     __ptext23:
  8283                           	callstack 0
  8284  004928                     ___flge:
  8285                           	callstack 20
  8286                           
  8287                           ; BSR set to: 0
  8288                           
  8289                           ; BSR set to: 0
  8290                           ;incstack = 0
  8291  004928  0E00               	movlw	0
  8292  00492A  142F               	andwf	___flge@ff1^0,w,c
  8293  00492C  6F6D               	movwf	??___flge& (0+255),b
  8294  00492E  0E00               	movlw	0
  8295  004930  1430               	andwf	(___flge@ff1+1)^0,w,c
  8296  004932  6F6E               	movwf	(??___flge+1)& (0+255),b
  8297  004934  0E80               	movlw	128
  8298  004936  1431               	andwf	(___flge@ff1+2)^0,w,c
  8299  004938  6F6F               	movwf	(??___flge+2)& (0+255),b
  8300  00493A  0E7F               	movlw	127
  8301  00493C  1432               	andwf	(___flge@ff1+3)^0,w,c
  8302  00493E  6F70               	movwf	(??___flge+3)& (0+255),b
  8303  004940  516D               	movf	??___flge& (0+255),w,b
  8304  004942  116E               	iorwf	(??___flge+1)& (0+255),w,b
  8305  004944  116F               	iorwf	(??___flge+2)& (0+255),w,b
  8306  004946  1170               	iorwf	(??___flge+3)& (0+255),w,b
  8307  004948  A4D8               	btfss	status,2,c
  8308  00494A  D008               	goto	l9342
  8309                           
  8310                           ; BSR set to: 0
  8311  00494C  0E00               	movlw	0
  8312  00494E  6E2F               	movwf	___flge@ff1^0,c
  8313  004950  0E00               	movlw	0
  8314  004952  6E30               	movwf	(___flge@ff1+1)^0,c
  8315  004954  0E00               	movlw	0
  8316  004956  6E31               	movwf	(___flge@ff1+2)^0,c
  8317  004958  0E00               	movlw	0
  8318  00495A  6E32               	movwf	(___flge@ff1+3)^0,c
  8319  00495C                     l9342:
  8320                           
  8321                           ; BSR set to: 0
  8322  00495C  0E00               	movlw	0
  8323  00495E  1433               	andwf	___flge@ff2^0,w,c
  8324  004960  6F6D               	movwf	??___flge& (0+255),b
  8325  004962  0E00               	movlw	0
  8326  004964  1434               	andwf	(___flge@ff2+1)^0,w,c
  8327  004966  6F6E               	movwf	(??___flge+1)& (0+255),b
  8328  004968  0E80               	movlw	128
  8329  00496A  1435               	andwf	(___flge@ff2+2)^0,w,c
  8330  00496C  6F6F               	movwf	(??___flge+2)& (0+255),b
  8331  00496E  0E7F               	movlw	127
  8332  004970  1436               	andwf	(___flge@ff2+3)^0,w,c
  8333  004972  6F70               	movwf	(??___flge+3)& (0+255),b
  8334  004974  516D               	movf	??___flge& (0+255),w,b
  8335  004976  116E               	iorwf	(??___flge+1)& (0+255),w,b
  8336  004978  116F               	iorwf	(??___flge+2)& (0+255),w,b
  8337  00497A  1170               	iorwf	(??___flge+3)& (0+255),w,b
  8338  00497C  A4D8               	btfss	status,2,c
  8339  00497E  D008               	goto	l9346
  8340                           
  8341                           ; BSR set to: 0
  8342  004980  0E00               	movlw	0
  8343  004982  6E33               	movwf	___flge@ff2^0,c
  8344  004984  0E00               	movlw	0
  8345  004986  6E34               	movwf	(___flge@ff2+1)^0,c
  8346  004988  0E00               	movlw	0
  8347  00498A  6E35               	movwf	(___flge@ff2+2)^0,c
  8348  00498C  0E00               	movlw	0
  8349  00498E  6E36               	movwf	(___flge@ff2+3)^0,c
  8350  004990                     l9346:
  8351                           
  8352                           ; BSR set to: 0
  8353  004990  AE32               	btfss	(___flge@ff1+3)^0,7,c
  8354  004992  D009               	goto	l9350
  8355                           
  8356                           ; BSR set to: 0
  8357  004994  6C2F               	negf	___flge@ff1^0,c
  8358  004996  1E30               	comf	(___flge@ff1+1)^0,f,c
  8359  004998  B0D8               	btfsc	status,0,c
  8360  00499A  2A30               	incf	(___flge@ff1+1)^0,f,c
  8361  00499C  1E31               	comf	(___flge@ff1+2)^0,f,c
  8362  00499E  B0D8               	btfsc	status,0,c
  8363  0049A0  2A31               	incf	(___flge@ff1+2)^0,f,c
  8364  0049A2  0E80               	movlw	128
  8365  0049A4  5632               	subfwb	(___flge@ff1+3)^0,f,c
  8366  0049A6                     l9350:
  8367                           
  8368                           ; BSR set to: 0
  8369  0049A6  AE36               	btfss	(___flge@ff2+3)^0,7,c
  8370  0049A8  D009               	goto	l1404
  8371                           
  8372                           ; BSR set to: 0
  8373  0049AA  6C33               	negf	___flge@ff2^0,c
  8374  0049AC  1E34               	comf	(___flge@ff2+1)^0,f,c
  8375  0049AE  B0D8               	btfsc	status,0,c
  8376  0049B0  2A34               	incf	(___flge@ff2+1)^0,f,c
  8377  0049B2  1E35               	comf	(___flge@ff2+2)^0,f,c
  8378  0049B4  B0D8               	btfsc	status,0,c
  8379  0049B6  2A35               	incf	(___flge@ff2+2)^0,f,c
  8380  0049B8  0E80               	movlw	128
  8381  0049BA  5636               	subfwb	(___flge@ff2+3)^0,f,c
  8382  0049BC                     l1404:
  8383                           
  8384                           ; BSR set to: 0
  8385  0049BC  0E00               	movlw	0
  8386  0049BE  1A2F               	xorwf	___flge@ff1^0,f,c
  8387  0049C0  0E00               	movlw	0
  8388  0049C2  1A30               	xorwf	(___flge@ff1+1)^0,f,c
  8389  0049C4  0E00               	movlw	0
  8390  0049C6  1A31               	xorwf	(___flge@ff1+2)^0,f,c
  8391  0049C8  0E80               	movlw	128
  8392  0049CA  1A32               	xorwf	(___flge@ff1+3)^0,f,c
  8393  0049CC  0E00               	movlw	0
  8394  0049CE  1A33               	xorwf	___flge@ff2^0,f,c
  8395  0049D0  0E00               	movlw	0
  8396  0049D2  1A34               	xorwf	(___flge@ff2+1)^0,f,c
  8397  0049D4  0E00               	movlw	0
  8398  0049D6  1A35               	xorwf	(___flge@ff2+2)^0,f,c
  8399  0049D8  0E80               	movlw	128
  8400  0049DA  1A36               	xorwf	(___flge@ff2+3)^0,f,c
  8401  0049DC  5033               	movf	___flge@ff2^0,w,c
  8402  0049DE  5C2F               	subwf	___flge@ff1^0,w,c
  8403  0049E0  5034               	movf	(___flge@ff2+1)^0,w,c
  8404  0049E2  5830               	subwfb	(___flge@ff1+1)^0,w,c
  8405  0049E4  5035               	movf	(___flge@ff2+2)^0,w,c
  8406  0049E6  5831               	subwfb	(___flge@ff1+2)^0,w,c
  8407  0049E8  5036               	movf	(___flge@ff2+3)^0,w,c
  8408  0049EA  5832               	subwfb	(___flge@ff1+3)^0,w,c
  8409  0049EC  B0D8               	btfsc	status,0,c
  8410  0049EE  D002               	goto	l9356
  8411                           
  8412                           ; BSR set to: 0
  8413  0049F0  90D8               	bcf	status,0,c
  8414  0049F2  0012               	return	
  8415  0049F4                     l9356:
  8416                           
  8417                           ; BSR set to: 0
  8418  0049F4  80D8               	bsf	status,0,c
  8419                           
  8420                           ; BSR set to: 0
  8421  0049F6  0012               	return		;funcret
  8422  0049F8                     __end_of___flge:
  8423                           	callstack 0
  8424                           
  8425 ;; *************** function ___fleq *****************
  8426 ;; Defined at:
  8427 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/fleq.c"
  8428 ;; Parameters:    Size  Location     Type
  8429 ;;  ff1             4   20[COMRAM] unsigned char 
  8430 ;;  ff2             4   24[COMRAM] unsigned char 
  8431 ;; Auto vars:     Size  Location     Type
  8432 ;;		None
  8433 ;; Return value:  Size  Location     Type
  8434 ;;		None               void
  8435 ;; Registers used:
  8436 ;;		wreg, status,2, status,0
  8437 ;; Tracked objects:
  8438 ;;		On entry : 3F/0
  8439 ;;		On exit  : 3F/0
  8440 ;;		Unchanged: 3F/0
  8441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8442 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8444 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8445 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8446 ;;Total ram usage:       12 bytes
  8447 ;; Hardware stack levels used: 1
  8448 ;; Hardware stack levels required when called: 4
  8449 ;; This function calls:
  8450 ;;		Nothing
  8451 ;; This function is called by:
  8452 ;;		_efgtoa
  8453 ;; This function uses a non-reentrant model
  8454 ;;
  8455                           
  8456                           	psect	text24
  8457  0051B6                     __ptext24:
  8458                           	callstack 0
  8459  0051B6                     ___fleq:
  8460                           	callstack 20
  8461                           
  8462                           ; BSR set to: 0
  8463                           
  8464                           ; BSR set to: 0
  8465                           ;incstack = 0
  8466  0051B6  0E00               	movlw	0
  8467  0051B8  1415               	andwf	___fleq@ff1^0,w,c
  8468  0051BA  6E1D               	movwf	??___fleq^0,c
  8469  0051BC  0E00               	movlw	0
  8470  0051BE  1416               	andwf	(___fleq@ff1+1)^0,w,c
  8471  0051C0  6E1E               	movwf	(??___fleq+1)^0,c
  8472  0051C2  0E80               	movlw	128
  8473  0051C4  1417               	andwf	(___fleq@ff1+2)^0,w,c
  8474  0051C6  6E1F               	movwf	(??___fleq+2)^0,c
  8475  0051C8  0E7F               	movlw	127
  8476  0051CA  1418               	andwf	(___fleq@ff1+3)^0,w,c
  8477  0051CC  6E20               	movwf	(??___fleq+3)^0,c
  8478  0051CE  501D               	movf	??___fleq^0,w,c
  8479  0051D0  101E               	iorwf	(??___fleq+1)^0,w,c
  8480  0051D2  101F               	iorwf	(??___fleq+2)^0,w,c
  8481  0051D4  1020               	iorwf	(??___fleq+3)^0,w,c
  8482  0051D6  A4D8               	btfss	status,2,c
  8483  0051D8  D008               	goto	l9326
  8484                           
  8485                           ; BSR set to: 0
  8486  0051DA  0E00               	movlw	0
  8487  0051DC  6E15               	movwf	___fleq@ff1^0,c
  8488  0051DE  0E00               	movlw	0
  8489  0051E0  6E16               	movwf	(___fleq@ff1+1)^0,c
  8490  0051E2  0E00               	movlw	0
  8491  0051E4  6E17               	movwf	(___fleq@ff1+2)^0,c
  8492  0051E6  0E00               	movlw	0
  8493  0051E8  6E18               	movwf	(___fleq@ff1+3)^0,c
  8494  0051EA                     l9326:
  8495                           
  8496                           ; BSR set to: 0
  8497  0051EA  0E00               	movlw	0
  8498  0051EC  1419               	andwf	___fleq@ff2^0,w,c
  8499  0051EE  6E1D               	movwf	??___fleq^0,c
  8500  0051F0  0E00               	movlw	0
  8501  0051F2  141A               	andwf	(___fleq@ff2+1)^0,w,c
  8502  0051F4  6E1E               	movwf	(??___fleq+1)^0,c
  8503  0051F6  0E80               	movlw	128
  8504  0051F8  141B               	andwf	(___fleq@ff2+2)^0,w,c
  8505  0051FA  6E1F               	movwf	(??___fleq+2)^0,c
  8506  0051FC  0E7F               	movlw	127
  8507  0051FE  141C               	andwf	(___fleq@ff2+3)^0,w,c
  8508  005200  6E20               	movwf	(??___fleq+3)^0,c
  8509  005202  501D               	movf	??___fleq^0,w,c
  8510  005204  101E               	iorwf	(??___fleq+1)^0,w,c
  8511  005206  101F               	iorwf	(??___fleq+2)^0,w,c
  8512  005208  1020               	iorwf	(??___fleq+3)^0,w,c
  8513  00520A  A4D8               	btfss	status,2,c
  8514  00520C  D008               	goto	l9330
  8515                           
  8516                           ; BSR set to: 0
  8517  00520E  0E00               	movlw	0
  8518  005210  6E19               	movwf	___fleq@ff2^0,c
  8519  005212  0E00               	movlw	0
  8520  005214  6E1A               	movwf	(___fleq@ff2+1)^0,c
  8521  005216  0E00               	movlw	0
  8522  005218  6E1B               	movwf	(___fleq@ff2+2)^0,c
  8523  00521A  0E00               	movlw	0
  8524  00521C  6E1C               	movwf	(___fleq@ff2+3)^0,c
  8525  00521E                     l9330:
  8526                           
  8527                           ; BSR set to: 0
  8528  00521E  5019               	movf	___fleq@ff2^0,w,c
  8529  005220  1815               	xorwf	___fleq@ff1^0,w,c
  8530  005222  E10A               	bnz	u10550
  8531  005224  501A               	movf	(___fleq@ff2+1)^0,w,c
  8532  005226  1816               	xorwf	(___fleq@ff1+1)^0,w,c
  8533  005228  E107               	bnz	u10550
  8534  00522A  501B               	movf	(___fleq@ff2+2)^0,w,c
  8535  00522C  1817               	xorwf	(___fleq@ff1+2)^0,w,c
  8536  00522E  E104               	bnz	u10550
  8537  005230  501C               	movf	(___fleq@ff2+3)^0,w,c
  8538  005232  1818               	xorwf	(___fleq@ff1+3)^0,w,c
  8539  005234  B4D8               	btfsc	status,2,c
  8540  005236  D002               	goto	l9334
  8541  005238                     u10550:
  8542                           
  8543                           ; BSR set to: 0
  8544  005238  90D8               	bcf	status,0,c
  8545  00523A  0012               	return	
  8546  00523C                     l9334:
  8547                           
  8548                           ; BSR set to: 0
  8549  00523C  80D8               	bsf	status,0,c
  8550                           
  8551                           ; BSR set to: 0
  8552  00523E  0012               	return		;funcret
  8553  005240                     __end_of___fleq:
  8554                           	callstack 0
  8555                           
  8556 ;; *************** function ___fldiv *****************
  8557 ;; Defined at:
  8558 ;;		line 11 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/sprcdiv.c"
  8559 ;; Parameters:    Size  Location     Type
  8560 ;;  b               4   20[COMRAM] unsigned char 
  8561 ;;  a               4   24[COMRAM] unsigned char 
  8562 ;; Auto vars:     Size  Location     Type
  8563 ;;  grs             4   39[COMRAM] unsigned long 
  8564 ;;  rem             4   32[COMRAM] unsigned long 
  8565 ;;  new_exp         2   37[COMRAM] short 
  8566 ;;  aexp            1   44[COMRAM] unsigned char 
  8567 ;;  bexp            1   43[COMRAM] unsigned char 
  8568 ;;  sign            1   36[COMRAM] unsigned char 
  8569 ;; Return value:  Size  Location     Type
  8570 ;;                  4   20[COMRAM] unsigned char 
  8571 ;; Registers used:
  8572 ;;		wreg, status,2, status,0
  8573 ;; Tracked objects:
  8574 ;;		On entry : 3F/0
  8575 ;;		On exit  : 3F/0
  8576 ;;		Unchanged: 3F/0
  8577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8578 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8579 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8580 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8581 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8582 ;;Total ram usage:       25 bytes
  8583 ;; Hardware stack levels used: 1
  8584 ;; Hardware stack levels required when called: 4
  8585 ;; This function calls:
  8586 ;;		Nothing
  8587 ;; This function is called by:
  8588 ;;		_efgtoa
  8589 ;; This function uses a non-reentrant model
  8590 ;;
  8591                           
  8592                           	psect	text25
  8593  00376E                     __ptext25:
  8594                           	callstack 0
  8595  00376E                     ___fldiv:
  8596                           	callstack 20
  8597                           
  8598                           ; BSR set to: 0
  8599                           
  8600                           ; BSR set to: 0
  8601                           ;incstack = 0
  8602  00376E  5018               	movf	(___fldiv@b+3)^0,w,c
  8603  003770  0B80               	andlw	128
  8604  003772  6E25               	movwf	___fldiv@sign^0,c
  8605  003774  5018               	movf	(___fldiv@b+3)^0,w,c
  8606  003776  2418               	addwf	(___fldiv@b+3)^0,w,c
  8607  003778  6E2C               	movwf	___fldiv@bexp^0,c
  8608                           
  8609                           ; BSR set to: 0
  8610  00377A  BE17               	btfsc	(___fldiv@b+2)^0,7,c
  8611                           
  8612                           ; BSR set to: 0
  8613  00377C  802C               	bsf	___fldiv@bexp^0,0,c
  8614                           
  8615                           ; BSR set to: 0
  8616  00377E  502C               	movf	___fldiv@bexp^0,w,c
  8617  003780  B4D8               	btfsc	status,2,c
  8618  003782  D00D               	goto	l8984
  8619                           
  8620                           ; BSR set to: 0
  8621  003784  282C               	incf	___fldiv@bexp^0,w,c
  8622  003786  A4D8               	btfss	status,2,c
  8623  003788  D008               	goto	l8980
  8624                           
  8625                           ; BSR set to: 0
  8626  00378A  0E00               	movlw	0
  8627  00378C  6E15               	movwf	___fldiv@b^0,c
  8628  00378E  0E00               	movlw	0
  8629  003790  6E16               	movwf	(___fldiv@b+1)^0,c
  8630  003792  0E00               	movlw	0
  8631  003794  6E17               	movwf	(___fldiv@b+2)^0,c
  8632  003796  0E00               	movlw	0
  8633  003798  6E18               	movwf	(___fldiv@b+3)^0,c
  8634  00379A                     l8980:
  8635                           
  8636                           ; BSR set to: 0
  8637  00379A  8E17               	bsf	(___fldiv@b+2)^0,7,c
  8638  00379C  D006               	goto	L12
  8639  00379E                     l8984:
  8640                           
  8641                           ; BSR set to: 0
  8642  00379E  0E00               	movlw	0
  8643  0037A0  6E15               	movwf	___fldiv@b^0,c
  8644  0037A2  0E00               	movlw	0
  8645  0037A4  6E16               	movwf	(___fldiv@b+1)^0,c
  8646  0037A6  0E00               	movlw	0
  8647  0037A8  6E17               	movwf	(___fldiv@b+2)^0,c
  8648  0037AA                     L12:
  8649  0037AA  0E00               	movlw	0
  8650  0037AC  6E18               	movwf	(___fldiv@b+3)^0,c
  8651                           
  8652                           ; BSR set to: 0
  8653  0037AE  501C               	movf	(___fldiv@a+3)^0,w,c
  8654  0037B0  0B80               	andlw	128
  8655  0037B2  1A25               	xorwf	___fldiv@sign^0,f,c
  8656                           
  8657                           ; BSR set to: 0
  8658  0037B4  501C               	movf	(___fldiv@a+3)^0,w,c
  8659  0037B6  241C               	addwf	(___fldiv@a+3)^0,w,c
  8660  0037B8  6E2D               	movwf	___fldiv@aexp^0,c
  8661                           
  8662                           ; BSR set to: 0
  8663  0037BA  BE1B               	btfsc	(___fldiv@a+2)^0,7,c
  8664                           
  8665                           ; BSR set to: 0
  8666  0037BC  802D               	bsf	___fldiv@aexp^0,0,c
  8667                           
  8668                           ; BSR set to: 0
  8669  0037BE  502D               	movf	___fldiv@aexp^0,w,c
  8670  0037C0  B4D8               	btfsc	status,2,c
  8671  0037C2  D00D               	goto	l9004
  8672                           
  8673                           ; BSR set to: 0
  8674  0037C4  282D               	incf	___fldiv@aexp^0,w,c
  8675  0037C6  A4D8               	btfss	status,2,c
  8676  0037C8  D008               	goto	l9000
  8677                           
  8678                           ; BSR set to: 0
  8679  0037CA  0E00               	movlw	0
  8680  0037CC  6E19               	movwf	___fldiv@a^0,c
  8681  0037CE  0E00               	movlw	0
  8682  0037D0  6E1A               	movwf	(___fldiv@a+1)^0,c
  8683  0037D2  0E00               	movlw	0
  8684  0037D4  6E1B               	movwf	(___fldiv@a+2)^0,c
  8685  0037D6  0E00               	movlw	0
  8686  0037D8  6E1C               	movwf	(___fldiv@a+3)^0,c
  8687  0037DA                     l9000:
  8688                           
  8689                           ; BSR set to: 0
  8690  0037DA  8E1B               	bsf	(___fldiv@a+2)^0,7,c
  8691  0037DC  D006               	goto	L13
  8692  0037DE                     l9004:
  8693                           
  8694                           ; BSR set to: 0
  8695  0037DE  0E00               	movlw	0
  8696  0037E0  6E19               	movwf	___fldiv@a^0,c
  8697  0037E2  0E00               	movlw	0
  8698  0037E4  6E1A               	movwf	(___fldiv@a+1)^0,c
  8699  0037E6  0E00               	movlw	0
  8700  0037E8  6E1B               	movwf	(___fldiv@a+2)^0,c
  8701  0037EA                     L13:
  8702  0037EA  0E00               	movlw	0
  8703  0037EC  6E1C               	movwf	(___fldiv@a+3)^0,c
  8704                           
  8705                           ; BSR set to: 0
  8706  0037EE  5019               	movf	___fldiv@a^0,w,c
  8707  0037F0  101A               	iorwf	(___fldiv@a+1)^0,w,c
  8708  0037F2  101B               	iorwf	(___fldiv@a+2)^0,w,c
  8709  0037F4  101C               	iorwf	(___fldiv@a+3)^0,w,c
  8710  0037F6  A4D8               	btfss	status,2,c
  8711  0037F8  D017               	goto	l9018
  8712                           
  8713                           ; BSR set to: 0
  8714  0037FA  0E00               	movlw	0
  8715  0037FC  6E15               	movwf	___fldiv@b^0,c
  8716  0037FE  0E00               	movlw	0
  8717  003800  6E16               	movwf	(___fldiv@b+1)^0,c
  8718  003802  0E00               	movlw	0
  8719  003804  6E17               	movwf	(___fldiv@b+2)^0,c
  8720  003806  0E00               	movlw	0
  8721  003808  6E18               	movwf	(___fldiv@b+3)^0,c
  8722                           
  8723                           ; BSR set to: 0
  8724  00380A  0E80               	movlw	128
  8725  00380C  1217               	iorwf	(___fldiv@b+2)^0,f,c
  8726  00380E  0E7F               	movlw	127
  8727  003810  1218               	iorwf	(___fldiv@b+3)^0,f,c
  8728  003812                     l9012:
  8729                           
  8730                           ; BSR set to: 0
  8731  003812  5025               	movf	___fldiv@sign^0,w,c
  8732  003814  1218               	iorwf	(___fldiv@b+3)^0,f,c
  8733                           
  8734                           ; BSR set to: 0
  8735  003816  C015  F015         	movff	___fldiv@b,?___fldiv
  8736  00381A  C016  F016         	movff	___fldiv@b+1,?___fldiv+1
  8737  00381E  C017  F017         	movff	___fldiv@b+2,?___fldiv+2
  8738  003822  C018  F018         	movff	___fldiv@b+3,?___fldiv+3
  8739  003826  0012               	return	
  8740  003828                     l9018:
  8741                           
  8742                           ; BSR set to: 0
  8743  003828  502C               	movf	___fldiv@bexp^0,w,c
  8744  00382A  A4D8               	btfss	status,2,c
  8745  00382C  D009               	goto	l9026
  8746                           
  8747                           ; BSR set to: 0
  8748                           
  8749                           ; BSR set to: 0
  8750  00382E  0E00               	movlw	0
  8751  003830  6E15               	movwf	?___fldiv^0,c
  8752  003832  0E00               	movlw	0
  8753  003834  6E16               	movwf	(?___fldiv+1)^0,c
  8754  003836  0E00               	movlw	0
  8755  003838  6E17               	movwf	(?___fldiv+2)^0,c
  8756  00383A  0E00               	movlw	0
  8757  00383C  6E18               	movwf	(?___fldiv+3)^0,c
  8758  00383E  0012               	return	
  8759  003840                     l9026:
  8760                           
  8761                           ; BSR set to: 0
  8762  003840  502D               	movf	___fldiv@aexp^0,w,c
  8763  003842  C02C  F01D         	movff	___fldiv@bexp,??___fldiv
  8764  003846  6A1E               	clrf	(??___fldiv+1)^0,c
  8765  003848  5E1D               	subwf	??___fldiv^0,f,c
  8766  00384A  0E00               	movlw	0
  8767  00384C  5A1E               	subwfb	(??___fldiv+1)^0,f,c
  8768  00384E  0E7F               	movlw	127
  8769  003850  241D               	addwf	??___fldiv^0,w,c
  8770  003852  6E26               	movwf	___fldiv@new_exp^0,c
  8771  003854  0E00               	movlw	0
  8772  003856  201E               	addwfc	(??___fldiv+1)^0,w,c
  8773  003858  6E27               	movwf	(___fldiv@new_exp+1)^0,c
  8774                           
  8775                           ; BSR set to: 0
  8776  00385A  C015  F021         	movff	___fldiv@b,___fldiv@rem
  8777  00385E  C016  F022         	movff	___fldiv@b+1,___fldiv@rem+1
  8778  003862  C017  F023         	movff	___fldiv@b+2,___fldiv@rem+2
  8779  003866  C018  F024         	movff	___fldiv@b+3,___fldiv@rem+3
  8780                           
  8781                           ; BSR set to: 0
  8782  00386A  0E00               	movlw	0
  8783  00386C  6E15               	movwf	___fldiv@b^0,c
  8784  00386E  0E00               	movlw	0
  8785  003870  6E16               	movwf	(___fldiv@b+1)^0,c
  8786  003872  0E00               	movlw	0
  8787  003874  6E17               	movwf	(___fldiv@b+2)^0,c
  8788  003876  0E00               	movlw	0
  8789  003878  6E18               	movwf	(___fldiv@b+3)^0,c
  8790                           
  8791                           ; BSR set to: 0
  8792  00387A  0E00               	movlw	0
  8793  00387C  6E28               	movwf	___fldiv@grs^0,c
  8794  00387E  0E00               	movlw	0
  8795  003880  6E29               	movwf	(___fldiv@grs+1)^0,c
  8796  003882  0E00               	movlw	0
  8797  003884  6E2A               	movwf	(___fldiv@grs+2)^0,c
  8798  003886  0E00               	movlw	0
  8799  003888  6E2B               	movwf	(___fldiv@grs+3)^0,c
  8800                           
  8801                           ; BSR set to: 0
  8802  00388A  0E00               	movlw	0
  8803  00388C  6E2D               	movwf	___fldiv@aexp^0,c
  8804  00388E  D028               	goto	l1723
  8805  003890                     l9036:
  8806                           
  8807                           ; BSR set to: 0
  8808  003890  502D               	movf	___fldiv@aexp^0,w,c
  8809  003892  B4D8               	btfsc	status,2,c
  8810  003894  D011               	goto	l9044
  8811                           
  8812                           ; BSR set to: 0
  8813  003896  90D8               	bcf	status,0,c
  8814  003898  3621               	rlcf	___fldiv@rem^0,f,c
  8815  00389A  3622               	rlcf	(___fldiv@rem+1)^0,f,c
  8816  00389C  3623               	rlcf	(___fldiv@rem+2)^0,f,c
  8817  00389E  3624               	rlcf	(___fldiv@rem+3)^0,f,c
  8818  0038A0  90D8               	bcf	status,0,c
  8819  0038A2  3615               	rlcf	___fldiv@b^0,f,c
  8820  0038A4  3616               	rlcf	(___fldiv@b+1)^0,f,c
  8821  0038A6  3617               	rlcf	(___fldiv@b+2)^0,f,c
  8822  0038A8  3618               	rlcf	(___fldiv@b+3)^0,f,c
  8823                           
  8824                           ; BSR set to: 0
  8825  0038AA  BE2B               	btfsc	(___fldiv@grs+3)^0,7,c
  8826                           
  8827                           ; BSR set to: 0
  8828  0038AC  8015               	bsf	___fldiv@b^0,0,c
  8829                           
  8830                           ; BSR set to: 0
  8831  0038AE  90D8               	bcf	status,0,c
  8832  0038B0  3628               	rlcf	___fldiv@grs^0,f,c
  8833  0038B2  3629               	rlcf	(___fldiv@grs+1)^0,f,c
  8834  0038B4  362A               	rlcf	(___fldiv@grs+2)^0,f,c
  8835  0038B6  362B               	rlcf	(___fldiv@grs+3)^0,f,c
  8836  0038B8                     l9044:
  8837                           
  8838                           ; BSR set to: 0
  8839  0038B8  5019               	movf	___fldiv@a^0,w,c
  8840  0038BA  5C21               	subwf	___fldiv@rem^0,w,c
  8841  0038BC  501A               	movf	(___fldiv@a+1)^0,w,c
  8842  0038BE  5822               	subwfb	(___fldiv@rem+1)^0,w,c
  8843  0038C0  501B               	movf	(___fldiv@a+2)^0,w,c
  8844  0038C2  5823               	subwfb	(___fldiv@rem+2)^0,w,c
  8845  0038C4  501C               	movf	(___fldiv@a+3)^0,w,c
  8846  0038C6  5824               	subwfb	(___fldiv@rem+3)^0,w,c
  8847  0038C8  A0D8               	btfss	status,0,c
  8848  0038CA  D009               	goto	l9050
  8849                           
  8850                           ; BSR set to: 0
  8851  0038CC  8C2B               	bsf	(___fldiv@grs+3)^0,6,c
  8852                           
  8853                           ; BSR set to: 0
  8854  0038CE  5019               	movf	___fldiv@a^0,w,c
  8855  0038D0  5E21               	subwf	___fldiv@rem^0,f,c
  8856  0038D2  501A               	movf	(___fldiv@a+1)^0,w,c
  8857  0038D4  5A22               	subwfb	(___fldiv@rem+1)^0,f,c
  8858  0038D6  501B               	movf	(___fldiv@a+2)^0,w,c
  8859  0038D8  5A23               	subwfb	(___fldiv@rem+2)^0,f,c
  8860  0038DA  501C               	movf	(___fldiv@a+3)^0,w,c
  8861  0038DC  5A24               	subwfb	(___fldiv@rem+3)^0,f,c
  8862  0038DE                     l9050:
  8863                           
  8864                           ; BSR set to: 0
  8865  0038DE  2A2D               	incf	___fldiv@aexp^0,f,c
  8866  0038E0                     l1723:
  8867                           
  8868                           ; BSR set to: 0
  8869  0038E0  0E19               	movlw	25
  8870  0038E2  642D               	cpfsgt	___fldiv@aexp^0,c
  8871  0038E4  D7D5               	goto	l9036
  8872                           
  8873                           ; BSR set to: 0
  8874  0038E6  5021               	movf	___fldiv@rem^0,w,c
  8875  0038E8  1022               	iorwf	(___fldiv@rem+1)^0,w,c
  8876  0038EA  1023               	iorwf	(___fldiv@rem+2)^0,w,c
  8877  0038EC  1024               	iorwf	(___fldiv@rem+3)^0,w,c
  8878  0038EE  B4D8               	btfsc	status,2,c
  8879  0038F0  D011               	goto	l9062
  8880                           
  8881                           ; BSR set to: 0
  8882  0038F2  8028               	bsf	___fldiv@grs^0,0,c
  8883  0038F4  D00F               	goto	l9062
  8884  0038F6                     l9056:
  8885                           
  8886                           ; BSR set to: 0
  8887  0038F6  90D8               	bcf	status,0,c
  8888  0038F8  3615               	rlcf	___fldiv@b^0,f,c
  8889  0038FA  3616               	rlcf	(___fldiv@b+1)^0,f,c
  8890  0038FC  3617               	rlcf	(___fldiv@b+2)^0,f,c
  8891  0038FE  3618               	rlcf	(___fldiv@b+3)^0,f,c
  8892                           
  8893                           ; BSR set to: 0
  8894  003900  BE2B               	btfsc	(___fldiv@grs+3)^0,7,c
  8895                           
  8896                           ; BSR set to: 0
  8897  003902  8015               	bsf	___fldiv@b^0,0,c
  8898                           
  8899                           ; BSR set to: 0
  8900  003904  90D8               	bcf	status,0,c
  8901  003906  3628               	rlcf	___fldiv@grs^0,f,c
  8902  003908  3629               	rlcf	(___fldiv@grs+1)^0,f,c
  8903  00390A  362A               	rlcf	(___fldiv@grs+2)^0,f,c
  8904  00390C  362B               	rlcf	(___fldiv@grs+3)^0,f,c
  8905  00390E  0626               	decf	___fldiv@new_exp^0,f,c
  8906  003910  A0D8               	btfss	status,0,c
  8907  003912  0627               	decf	(___fldiv@new_exp+1)^0,f,c
  8908  003914                     l9062:
  8909                           
  8910                           ; BSR set to: 0
  8911  003914  AE17               	btfss	(___fldiv@b+2)^0,7,c
  8912  003916  D7EF               	goto	l9056
  8913                           
  8914                           ; BSR set to: 0
  8915  003918  0E00               	movlw	0
  8916  00391A  6E2D               	movwf	___fldiv@aexp^0,c
  8917                           
  8918                           ; BSR set to: 0
  8919  00391C  AE2B               	btfss	(___fldiv@grs+3)^0,7,c
  8920  00391E  D017               	goto	l1734
  8921                           
  8922                           ; BSR set to: 0
  8923  003920  0EFF               	movlw	255
  8924  003922  1428               	andwf	___fldiv@grs^0,w,c
  8925  003924  6E1D               	movwf	??___fldiv^0,c
  8926  003926  0EFF               	movlw	255
  8927  003928  1429               	andwf	(___fldiv@grs+1)^0,w,c
  8928  00392A  6E1E               	movwf	(??___fldiv+1)^0,c
  8929  00392C  0EFF               	movlw	255
  8930  00392E  142A               	andwf	(___fldiv@grs+2)^0,w,c
  8931  003930  6E1F               	movwf	(??___fldiv+2)^0,c
  8932  003932  0E7F               	movlw	127
  8933  003934  142B               	andwf	(___fldiv@grs+3)^0,w,c
  8934  003936  6E20               	movwf	(??___fldiv+3)^0,c
  8935  003938  501D               	movf	??___fldiv^0,w,c
  8936  00393A  101E               	iorwf	(??___fldiv+1)^0,w,c
  8937  00393C  101F               	iorwf	(??___fldiv+2)^0,w,c
  8938  00393E  1020               	iorwf	(??___fldiv+3)^0,w,c
  8939  003940  B4D8               	btfsc	status,2,c
  8940  003942  D003               	goto	l1735
  8941  003944                     u10160:
  8942                           
  8943                           ; BSR set to: 0
  8944  003944  0E01               	movlw	1
  8945  003946  6E2D               	movwf	___fldiv@aexp^0,c
  8946  003948  D002               	goto	l1734
  8947  00394A                     l1735:
  8948                           
  8949                           ; BSR set to: 0
  8950  00394A  B015               	btfsc	___fldiv@b^0,0,c
  8951  00394C  D7FB               	goto	u10160
  8952  00394E                     l1734:
  8953                           
  8954                           ; BSR set to: 0
  8955  00394E  502D               	movf	___fldiv@aexp^0,w,c
  8956  003950  B4D8               	btfsc	status,2,c
  8957  003952  D01F               	goto	l9082
  8958                           
  8959                           ; BSR set to: 0
  8960  003954  0E01               	movlw	1
  8961  003956  2615               	addwf	___fldiv@b^0,f,c
  8962  003958  0E00               	movlw	0
  8963  00395A  2216               	addwfc	(___fldiv@b+1)^0,f,c
  8964  00395C  2217               	addwfc	(___fldiv@b+2)^0,f,c
  8965  00395E  2218               	addwfc	(___fldiv@b+3)^0,f,c
  8966                           
  8967                           ; BSR set to: 0
  8968  003960  A018               	btfss	(___fldiv@b+3)^0,0,c
  8969  003962  D017               	goto	l9082
  8970                           
  8971                           ; BSR set to: 0
  8972  003964  C015  F01D         	movff	___fldiv@b,??___fldiv
  8973  003968  C016  F01E         	movff	___fldiv@b+1,??___fldiv+1
  8974  00396C  C017  F01F         	movff	___fldiv@b+2,??___fldiv+2
  8975  003970  C018  F020         	movff	___fldiv@b+3,??___fldiv+3
  8976  003974  3420               	rlcf	(??___fldiv+3)^0,w,c
  8977  003976  3220               	rrcf	(??___fldiv+3)^0,f,c
  8978  003978  321F               	rrcf	(??___fldiv+2)^0,f,c
  8979  00397A  321E               	rrcf	(??___fldiv+1)^0,f,c
  8980  00397C  321D               	rrcf	??___fldiv^0,f,c
  8981  00397E  C01D  F015         	movff	??___fldiv,___fldiv@b
  8982  003982  C01E  F016         	movff	??___fldiv+1,___fldiv@b+1
  8983  003986  C01F  F017         	movff	??___fldiv+2,___fldiv@b+2
  8984  00398A  C020  F018         	movff	??___fldiv+3,___fldiv@b+3
  8985                           
  8986                           ; BSR set to: 0
  8987  00398E  4A26               	infsnz	___fldiv@new_exp^0,f,c
  8988  003990  2A27               	incf	(___fldiv@new_exp+1)^0,f,c
  8989  003992                     l9082:
  8990                           
  8991                           ; BSR set to: 0
  8992  003992  BE27               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8993  003994  D010               	goto	l9086
  8994  003996  5027               	movf	(___fldiv@new_exp+1)^0,w,c
  8995  003998  E103               	bnz	u10200
  8996  00399A  2826               	incf	___fldiv@new_exp^0,w,c
  8997  00399C  A0D8               	btfss	status,0,c
  8998  00399E  D00B               	goto	l9086
  8999  0039A0                     u10200:
  9000                           
  9001                           ; BSR set to: 0
  9002  0039A0  0E00               	movlw	0
  9003  0039A2  6E27               	movwf	(___fldiv@new_exp+1)^0,c
  9004  0039A4  6826               	setf	___fldiv@new_exp^0,c
  9005  0039A6  0E00               	movlw	0
  9006  0039A8  6E15               	movwf	___fldiv@b^0,c
  9007  0039AA  0E00               	movlw	0
  9008  0039AC  6E16               	movwf	(___fldiv@b+1)^0,c
  9009  0039AE  0E00               	movlw	0
  9010  0039B0  6E17               	movwf	(___fldiv@b+2)^0,c
  9011  0039B2  0E00               	movlw	0
  9012  0039B4  6E18               	movwf	(___fldiv@b+3)^0,c
  9013  0039B6                     l9086:
  9014                           
  9015                           ; BSR set to: 0
  9016  0039B6  BE27               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9017  0039B8  D005               	goto	u10210
  9018  0039BA  5027               	movf	(___fldiv@new_exp+1)^0,w,c
  9019  0039BC  E111               	bnz	l9090
  9020  0039BE  0426               	decf	___fldiv@new_exp^0,w,c
  9021  0039C0  B0D8               	btfsc	status,0,c
  9022  0039C2  D00E               	goto	l9090
  9023  0039C4                     u10210:
  9024                           
  9025                           ; BSR set to: 0
  9026  0039C4  0E00               	movlw	0
  9027  0039C6  6E27               	movwf	(___fldiv@new_exp+1)^0,c
  9028  0039C8  0E00               	movlw	0
  9029  0039CA  6E26               	movwf	___fldiv@new_exp^0,c
  9030  0039CC  0E00               	movlw	0
  9031  0039CE  6E15               	movwf	___fldiv@b^0,c
  9032  0039D0  0E00               	movlw	0
  9033  0039D2  6E16               	movwf	(___fldiv@b+1)^0,c
  9034  0039D4  0E00               	movlw	0
  9035  0039D6  6E17               	movwf	(___fldiv@b+2)^0,c
  9036  0039D8  0E00               	movlw	0
  9037  0039DA  6E18               	movwf	(___fldiv@b+3)^0,c
  9038  0039DC  0E00               	movlw	0
  9039  0039DE  6E25               	movwf	___fldiv@sign^0,c
  9040  0039E0                     l9090:
  9041                           
  9042                           ; BSR set to: 0
  9043  0039E0  C026  F02C         	movff	___fldiv@new_exp,___fldiv@bexp
  9044                           
  9045                           ; BSR set to: 0
  9046  0039E4  A02C               	btfss	___fldiv@bexp^0,0,c
  9047  0039E6  D002               	goto	l9096
  9048                           
  9049                           ; BSR set to: 0
  9050  0039E8  8E17               	bsf	(___fldiv@b+2)^0,7,c
  9051  0039EA  D001               	goto	l9098
  9052  0039EC                     l9096:
  9053                           
  9054                           ; BSR set to: 0
  9055  0039EC  9E17               	bcf	(___fldiv@b+2)^0,7,c
  9056  0039EE                     l9098:
  9057                           
  9058                           ; BSR set to: 0
  9059  0039EE  90D8               	bcf	status,0,c
  9060  0039F0  302C               	rrcf	___fldiv@bexp^0,w,c
  9061  0039F2  6E18               	movwf	(___fldiv@b+3)^0,c
  9062  0039F4  D70E               	goto	l9012
  9063  0039F6                     __end_of___fldiv:
  9064                           	callstack 0
  9065                           
  9066 ;; *************** function ___awmod *****************
  9067 ;; Defined at:
  9068 ;;		line 7 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/awmod.c"
  9069 ;; Parameters:    Size  Location     Type
  9070 ;;  dividend        2   20[COMRAM] int 
  9071 ;;  divisor         2   22[COMRAM] int 
  9072 ;; Auto vars:     Size  Location     Type
  9073 ;;  sign            1   25[COMRAM] unsigned char 
  9074 ;;  counter         1   24[COMRAM] unsigned char 
  9075 ;; Return value:  Size  Location     Type
  9076 ;;                  2   20[COMRAM] int 
  9077 ;; Registers used:
  9078 ;;		wreg, status,2, status,0
  9079 ;; Tracked objects:
  9080 ;;		On entry : 3F/0
  9081 ;;		On exit  : 3F/0
  9082 ;;		Unchanged: 3F/0
  9083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9084 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9085 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9087 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9088 ;;Total ram usage:        6 bytes
  9089 ;; Hardware stack levels used: 1
  9090 ;; Hardware stack levels required when called: 4
  9091 ;; This function calls:
  9092 ;;		Nothing
  9093 ;; This function is called by:
  9094 ;;		_efgtoa
  9095 ;; This function uses a non-reentrant model
  9096 ;;
  9097                           
  9098                           	psect	text26
  9099  0053BA                     __ptext26:
  9100                           	callstack 0
  9101  0053BA                     ___awmod:
  9102                           	callstack 20
  9103                           
  9104                           ; BSR set to: 0
  9105                           
  9106                           ; BSR set to: 0
  9107                           ;incstack = 0
  9108  0053BA  0E00               	movlw	0
  9109  0053BC  6E1A               	movwf	___awmod@sign^0,c
  9110                           
  9111                           ; BSR set to: 0
  9112  0053BE  AE16               	btfss	(___awmod@dividend+1)^0,7,c
  9113  0053C0  D006               	goto	l9294
  9114                           
  9115                           ; BSR set to: 0
  9116  0053C2  6C15               	negf	___awmod@dividend^0,c
  9117  0053C4  1E16               	comf	(___awmod@dividend+1)^0,f,c
  9118  0053C6  B0D8               	btfsc	status,0,c
  9119  0053C8  2A16               	incf	(___awmod@dividend+1)^0,f,c
  9120                           
  9121                           ; BSR set to: 0
  9122  0053CA  0E01               	movlw	1
  9123  0053CC  6E1A               	movwf	___awmod@sign^0,c
  9124  0053CE                     l9294:
  9125                           
  9126                           ; BSR set to: 0
  9127  0053CE  AE18               	btfss	(___awmod@divisor+1)^0,7,c
  9128  0053D0  D004               	goto	l9298
  9129                           
  9130                           ; BSR set to: 0
  9131  0053D2  6C17               	negf	___awmod@divisor^0,c
  9132  0053D4  1E18               	comf	(___awmod@divisor+1)^0,f,c
  9133  0053D6  B0D8               	btfsc	status,0,c
  9134  0053D8  2A18               	incf	(___awmod@divisor+1)^0,f,c
  9135  0053DA                     l9298:
  9136                           
  9137                           ; BSR set to: 0
  9138  0053DA  5017               	movf	___awmod@divisor^0,w,c
  9139  0053DC  1018               	iorwf	(___awmod@divisor+1)^0,w,c
  9140  0053DE  B4D8               	btfsc	status,2,c
  9141  0053E0  D018               	goto	l9314
  9142                           
  9143                           ; BSR set to: 0
  9144  0053E2  0E01               	movlw	1
  9145  0053E4  6E19               	movwf	___awmod@counter^0,c
  9146  0053E6  D004               	goto	l9304
  9147  0053E8                     l9302:
  9148                           
  9149                           ; BSR set to: 0
  9150  0053E8  90D8               	bcf	status,0,c
  9151  0053EA  3617               	rlcf	___awmod@divisor^0,f,c
  9152  0053EC  3618               	rlcf	(___awmod@divisor+1)^0,f,c
  9153  0053EE  2A19               	incf	___awmod@counter^0,f,c
  9154  0053F0                     l9304:
  9155                           
  9156                           ; BSR set to: 0
  9157  0053F0  AE18               	btfss	(___awmod@divisor+1)^0,7,c
  9158  0053F2  D7FA               	goto	l9302
  9159  0053F4                     u10500:
  9160                           
  9161                           ; BSR set to: 0
  9162  0053F4  5017               	movf	___awmod@divisor^0,w,c
  9163  0053F6  5C15               	subwf	___awmod@dividend^0,w,c
  9164  0053F8  5018               	movf	(___awmod@divisor+1)^0,w,c
  9165  0053FA  5816               	subwfb	(___awmod@dividend+1)^0,w,c
  9166  0053FC  A0D8               	btfss	status,0,c
  9167  0053FE  D004               	goto	l9310
  9168                           
  9169                           ; BSR set to: 0
  9170  005400  5017               	movf	___awmod@divisor^0,w,c
  9171  005402  5E15               	subwf	___awmod@dividend^0,f,c
  9172  005404  5018               	movf	(___awmod@divisor+1)^0,w,c
  9173  005406  5A16               	subwfb	(___awmod@dividend+1)^0,f,c
  9174  005408                     l9310:
  9175                           
  9176                           ; BSR set to: 0
  9177  005408  90D8               	bcf	status,0,c
  9178  00540A  3218               	rrcf	(___awmod@divisor+1)^0,f,c
  9179  00540C  3217               	rrcf	___awmod@divisor^0,f,c
  9180                           
  9181                           ; BSR set to: 0
  9182  00540E  2E19               	decfsz	___awmod@counter^0,f,c
  9183  005410  D7F1               	goto	u10500
  9184  005412                     l9314:
  9185                           
  9186                           ; BSR set to: 0
  9187  005412  501A               	movf	___awmod@sign^0,w,c
  9188  005414  B4D8               	btfsc	status,2,c
  9189  005416  D004               	goto	l9318
  9190                           
  9191                           ; BSR set to: 0
  9192  005418  6C15               	negf	___awmod@dividend^0,c
  9193  00541A  1E16               	comf	(___awmod@dividend+1)^0,f,c
  9194  00541C  B0D8               	btfsc	status,0,c
  9195  00541E  2A16               	incf	(___awmod@dividend+1)^0,f,c
  9196  005420                     l9318:
  9197                           
  9198                           ; BSR set to: 0
  9199  005420  C015  F015         	movff	___awmod@dividend,?___awmod
  9200  005424  C016  F016         	movff	___awmod@dividend+1,?___awmod+1
  9201                           
  9202                           ; BSR set to: 0
  9203  005428  0012               	return		;funcret
  9204  00542A                     __end_of___awmod:
  9205                           	callstack 0
  9206                           
  9207 ;; *************** function ___awdiv *****************
  9208 ;; Defined at:
  9209 ;;		line 7 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/awdiv.c"
  9210 ;; Parameters:    Size  Location     Type
  9211 ;;  dividend        2   20[COMRAM] int 
  9212 ;;  divisor         2   22[COMRAM] int 
  9213 ;; Auto vars:     Size  Location     Type
  9214 ;;  quotient        2   26[COMRAM] int 
  9215 ;;  sign            1   25[COMRAM] unsigned char 
  9216 ;;  counter         1   24[COMRAM] unsigned char 
  9217 ;; Return value:  Size  Location     Type
  9218 ;;                  2   20[COMRAM] int 
  9219 ;; Registers used:
  9220 ;;		wreg, status,2, status,0
  9221 ;; Tracked objects:
  9222 ;;		On entry : 3F/0
  9223 ;;		On exit  : 3F/0
  9224 ;;		Unchanged: 3F/0
  9225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9226 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9227 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9229 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9230 ;;Total ram usage:        8 bytes
  9231 ;; Hardware stack levels used: 1
  9232 ;; Hardware stack levels required when called: 4
  9233 ;; This function calls:
  9234 ;;		Nothing
  9235 ;; This function is called by:
  9236 ;;		_efgtoa
  9237 ;; This function uses a non-reentrant model
  9238 ;;
  9239                           
  9240                           	psect	text27
  9241  0052C4                     __ptext27:
  9242                           	callstack 0
  9243  0052C4                     ___awdiv:
  9244                           	callstack 20
  9245                           
  9246                           ; BSR set to: 0
  9247                           
  9248                           ; BSR set to: 0
  9249                           ;incstack = 0
  9250  0052C4  0E00               	movlw	0
  9251  0052C6  6E1A               	movwf	___awdiv@sign^0,c
  9252                           
  9253                           ; BSR set to: 0
  9254  0052C8  AE18               	btfss	(___awdiv@divisor+1)^0,7,c
  9255  0052CA  D006               	goto	l9250
  9256                           
  9257                           ; BSR set to: 0
  9258  0052CC  6C17               	negf	___awdiv@divisor^0,c
  9259  0052CE  1E18               	comf	(___awdiv@divisor+1)^0,f,c
  9260  0052D0  B0D8               	btfsc	status,0,c
  9261  0052D2  2A18               	incf	(___awdiv@divisor+1)^0,f,c
  9262                           
  9263                           ; BSR set to: 0
  9264  0052D4  0E01               	movlw	1
  9265  0052D6  6E1A               	movwf	___awdiv@sign^0,c
  9266  0052D8                     l9250:
  9267                           
  9268                           ; BSR set to: 0
  9269  0052D8  AE16               	btfss	(___awdiv@dividend+1)^0,7,c
  9270  0052DA  D006               	goto	l9256
  9271                           
  9272                           ; BSR set to: 0
  9273  0052DC  6C15               	negf	___awdiv@dividend^0,c
  9274  0052DE  1E16               	comf	(___awdiv@dividend+1)^0,f,c
  9275  0052E0  B0D8               	btfsc	status,0,c
  9276  0052E2  2A16               	incf	(___awdiv@dividend+1)^0,f,c
  9277                           
  9278                           ; BSR set to: 0
  9279  0052E4  0E01               	movlw	1
  9280  0052E6  1A1A               	xorwf	___awdiv@sign^0,f,c
  9281  0052E8                     l9256:
  9282                           
  9283                           ; BSR set to: 0
  9284  0052E8  0E00               	movlw	0
  9285  0052EA  6E1C               	movwf	(___awdiv@quotient+1)^0,c
  9286  0052EC  0E00               	movlw	0
  9287  0052EE  6E1B               	movwf	___awdiv@quotient^0,c
  9288                           
  9289                           ; BSR set to: 0
  9290  0052F0  5017               	movf	___awdiv@divisor^0,w,c
  9291  0052F2  1018               	iorwf	(___awdiv@divisor+1)^0,w,c
  9292  0052F4  B4D8               	btfsc	status,2,c
  9293  0052F6  D01C               	goto	l9278
  9294                           
  9295                           ; BSR set to: 0
  9296  0052F8  0E01               	movlw	1
  9297  0052FA  6E19               	movwf	___awdiv@counter^0,c
  9298  0052FC  D004               	goto	l9264
  9299  0052FE                     l9262:
  9300                           
  9301                           ; BSR set to: 0
  9302  0052FE  90D8               	bcf	status,0,c
  9303  005300  3617               	rlcf	___awdiv@divisor^0,f,c
  9304  005302  3618               	rlcf	(___awdiv@divisor+1)^0,f,c
  9305  005304  2A19               	incf	___awdiv@counter^0,f,c
  9306  005306                     l9264:
  9307                           
  9308                           ; BSR set to: 0
  9309  005306  AE18               	btfss	(___awdiv@divisor+1)^0,7,c
  9310  005308  D7FA               	goto	l9262
  9311  00530A                     u10440:
  9312                           
  9313                           ; BSR set to: 0
  9314  00530A  90D8               	bcf	status,0,c
  9315  00530C  361B               	rlcf	___awdiv@quotient^0,f,c
  9316  00530E  361C               	rlcf	(___awdiv@quotient+1)^0,f,c
  9317                           
  9318                           ; BSR set to: 0
  9319  005310  5017               	movf	___awdiv@divisor^0,w,c
  9320  005312  5C15               	subwf	___awdiv@dividend^0,w,c
  9321  005314  5018               	movf	(___awdiv@divisor+1)^0,w,c
  9322  005316  5816               	subwfb	(___awdiv@dividend+1)^0,w,c
  9323  005318  A0D8               	btfss	status,0,c
  9324  00531A  D005               	goto	l9274
  9325                           
  9326                           ; BSR set to: 0
  9327  00531C  5017               	movf	___awdiv@divisor^0,w,c
  9328  00531E  5E15               	subwf	___awdiv@dividend^0,f,c
  9329  005320  5018               	movf	(___awdiv@divisor+1)^0,w,c
  9330  005322  5A16               	subwfb	(___awdiv@dividend+1)^0,f,c
  9331                           
  9332                           ; BSR set to: 0
  9333  005324  801B               	bsf	___awdiv@quotient^0,0,c
  9334  005326                     l9274:
  9335                           
  9336                           ; BSR set to: 0
  9337  005326  90D8               	bcf	status,0,c
  9338  005328  3218               	rrcf	(___awdiv@divisor+1)^0,f,c
  9339  00532A  3217               	rrcf	___awdiv@divisor^0,f,c
  9340                           
  9341                           ; BSR set to: 0
  9342  00532C  2E19               	decfsz	___awdiv@counter^0,f,c
  9343  00532E  D7ED               	goto	u10440
  9344  005330                     l9278:
  9345                           
  9346                           ; BSR set to: 0
  9347  005330  501A               	movf	___awdiv@sign^0,w,c
  9348  005332  B4D8               	btfsc	status,2,c
  9349  005334  D004               	goto	l9282
  9350                           
  9351                           ; BSR set to: 0
  9352  005336  6C1B               	negf	___awdiv@quotient^0,c
  9353  005338  1E1C               	comf	(___awdiv@quotient+1)^0,f,c
  9354  00533A  B0D8               	btfsc	status,0,c
  9355  00533C  2A1C               	incf	(___awdiv@quotient+1)^0,f,c
  9356  00533E                     l9282:
  9357                           
  9358                           ; BSR set to: 0
  9359  00533E  C01B  F015         	movff	___awdiv@quotient,?___awdiv
  9360  005342  C01C  F016         	movff	___awdiv@quotient+1,?___awdiv+1
  9361                           
  9362                           ; BSR set to: 0
  9363  005346  0012               	return		;funcret
  9364  005348                     __end_of___awdiv:
  9365                           	callstack 0
  9366                           
  9367 ;; *************** function _atoi *****************
  9368 ;; Defined at:
  9369 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/atoi.c"
  9370 ;; Parameters:    Size  Location     Type
  9371 ;;  s               1   27[COMRAM] PTR const unsigned char 
  9372 ;;		 -> STR_9(21), STR_5(74), 
  9373 ;; Auto vars:     Size  Location     Type
  9374 ;;  n               2   35[COMRAM] int 
  9375 ;;  neg             2   33[COMRAM] int 
  9376 ;; Return value:  Size  Location     Type
  9377 ;;                  2   27[COMRAM] int 
  9378 ;; Registers used:
  9379 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9380 ;; Tracked objects:
  9381 ;;		On entry : 3F/0
  9382 ;;		On exit  : 0/0
  9383 ;;		Unchanged: 0/0
  9384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9385 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9386 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9387 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9388 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9389 ;;Total ram usage:       10 bytes
  9390 ;; Hardware stack levels used: 1
  9391 ;; Hardware stack levels required when called: 5
  9392 ;; This function calls:
  9393 ;;		___wmul
  9394 ;;		_isdigit
  9395 ;;		_isspace
  9396 ;; This function is called by:
  9397 ;;		_vfpfcnvrt
  9398 ;; This function uses a non-reentrant model
  9399 ;;
  9400                           
  9401                           	psect	text28
  9402  0047F6                     __ptext28:
  9403                           	callstack 0
  9404  0047F6                     _atoi:
  9405                           	callstack 20
  9406                           
  9407                           ; BSR set to: 0
  9408                           
  9409                           ; BSR set to: 0
  9410                           ;incstack = 0
  9411  0047F6  0E00               	movlw	0
  9412  0047F8  6E25               	movwf	(atoi@n+1)^0,c
  9413  0047FA  0E00               	movlw	0
  9414  0047FC  6E24               	movwf	atoi@n^0,c
  9415  0047FE  0E00               	movlw	0
  9416  004800  6E23               	movwf	(atoi@neg+1)^0,c
  9417  004802  0E00               	movlw	0
  9418  004804  6E22               	movwf	atoi@neg^0,c
  9419  004806  D001               	goto	l9962
  9420  004808                     l9958:
  9421                           
  9422                           ; BSR set to: 0
  9423  004808  2A1C               	incf	atoi@s^0,f,c
  9424  00480A                     l9962:
  9425                           
  9426                           ; BSR set to: 0
  9427  00480A  0060  F073  FFF6   	movff	atoi@s,tblptrl
  9428  004810                     	if	1	;There is more than 1 active tblptr byte
  9429  004810  0E20               	movlw	high __smallconst
  9430  004812  6EF7               	movwf	tblptrh,c
  9431  004814                     	endif
  9432  004814                     	if	0	;tblptru may be non-zero
  9433  004814                     	endif
  9434  004814                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9435  004814  0E00               	movlw	low (__smallconst shr (0+16))
  9436  004816  6EF8               	movwf	tblptru,c
  9437  004818                     	endif
  9438  004818  0008               	tblrd		*
  9439  00481A  50F5               	movf	tablat,w,c
  9440  00481C  0A20               	xorlw	32
  9441  00481E  B4D8               	btfsc	status,2,c
  9442  004820  D7F3               	goto	l9958
  9443                           
  9444                           ; BSR set to: 0
  9445  004822  0EF7               	movlw	247
  9446  004824  6E1E               	movwf	??_atoi^0,c
  9447  004826  0EFF               	movlw	255
  9448  004828  6E1F               	movwf	(??_atoi+1)^0,c
  9449  00482A  0060  F073  FFF6   	movff	atoi@s,tblptrl
  9450  004830                     	if	1	;There is more than 1 active tblptr byte
  9451  004830  0E20               	movlw	high __smallconst
  9452  004832  6EF7               	movwf	tblptrh,c
  9453  004834                     	endif
  9454  004834                     	if	0	;tblptru may be non-zero
  9455  004834                     	endif
  9456  004834                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9457  004834  0E00               	movlw	low (__smallconst shr (0+16))
  9458  004836  6EF8               	movwf	tblptru,c
  9459  004838                     	endif
  9460  004838  0008               	tblrd		*
  9461  00483A  50F5               	movf	tablat,w,c
  9462  00483C  6E20               	movwf	(??_atoi+2)^0,c
  9463  00483E  6A21               	clrf	(??_atoi+3)^0,c
  9464  004840  501E               	movf	??_atoi^0,w,c
  9465  004842  2620               	addwf	(??_atoi+2)^0,f,c
  9466  004844  501F               	movf	(??_atoi+1)^0,w,c
  9467  004846  2221               	addwfc	(??_atoi+3)^0,f,c
  9468  004848  5021               	movf	(??_atoi+3)^0,w,c
  9469  00484A  E10B               	bnz	l9970
  9470  00484C  0E05               	movlw	5
  9471  00484E  5C20               	subwf	(??_atoi+2)^0,w,c
  9472  004850  B0D8               	btfsc	status,0,c
  9473  004852  D007               	goto	l9970
  9474  004854  D7D9               	goto	l9958
  9475  004856                     l9966:
  9476                           
  9477                           ; BSR set to: 0
  9478  004856  0E00               	movlw	0
  9479  004858  6E23               	movwf	(atoi@neg+1)^0,c
  9480  00485A  0E01               	movlw	1
  9481  00485C  6E22               	movwf	atoi@neg^0,c
  9482  00485E                     l9968:
  9483  00485E  2A1C               	incf	atoi@s^0,f,c
  9484  004860  D034               	goto	l9978
  9485  004862                     l9970:
  9486                           
  9487                           ; BSR set to: 0
  9488  004862  0060  F073  FFF6   	movff	atoi@s,tblptrl
  9489  004868                     	if	1	;There is more than 1 active tblptr byte
  9490  004868  0E20               	movlw	high __smallconst
  9491  00486A  6EF7               	movwf	tblptrh,c
  9492  00486C                     	endif
  9493  00486C                     	if	0	;tblptru may be non-zero
  9494  00486C                     	endif
  9495  00486C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9496  00486C  0E00               	movlw	low (__smallconst shr (0+16))
  9497  00486E  6EF8               	movwf	tblptru,c
  9498  004870                     	endif
  9499  004870  0008               	tblrd		*
  9500  004872  50F5               	movf	tablat,w,c
  9501  004874  6E1E               	movwf	??_atoi^0,c
  9502  004876  6A1F               	clrf	(??_atoi+1)^0,c
  9503                           
  9504                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9505                           ; Switch size 1, requested type "simple"
  9506                           ; Number of cases is 1, Range of values is 0 to 0
  9507                           ; switch strategies available:
  9508                           ; Name         Instructions Cycles
  9509                           ; simple_byte            4     3 (average)
  9510                           ;	Chosen strategy is simple_byte
  9511  004878  501F               	movf	(??_atoi+1)^0,w,c
  9512  00487A  0A00               	xorlw	0	; case 0
  9513  00487C  A4D8               	btfss	status,2,c
  9514  00487E  D025               	goto	l9978
  9515                           
  9516                           ; BSR set to: 0
  9517                           ; Switch size 1, requested type "simple"
  9518                           ; Number of cases is 2, Range of values is 43 to 45
  9519                           ; switch strategies available:
  9520                           ; Name         Instructions Cycles
  9521                           ; simple_byte            7     4 (average)
  9522                           ;	Chosen strategy is simple_byte
  9523  004880  501E               	movf	??_atoi^0,w,c
  9524  004882  0A2B               	xorlw	43	; case 43
  9525  004884  B4D8               	btfsc	status,2,c
  9526  004886  D7EB               	goto	l9968
  9527  004888  0A06               	xorlw	6	; case 45
  9528  00488A  B4D8               	btfsc	status,2,c
  9529  00488C  D7E4               	goto	l9966
  9530  00488E  D01D               	goto	l9978
  9531  004890                     l9972:
  9532  004890  C024  F015         	movff	atoi@n,___wmul@multiplier
  9533  004894  C025  F016         	movff	atoi@n+1,___wmul@multiplier+1
  9534  004898  0E00               	movlw	0
  9535  00489A  6E18               	movwf	(___wmul@multiplicand+1)^0,c
  9536  00489C  0E0A               	movlw	10
  9537  00489E  6E17               	movwf	___wmul@multiplicand^0,c
  9538  0048A0  EC4D  F02D         	call	___wmul	;wreg free
  9539  0048A4  0060  F073  FFF6   	movff	atoi@s,tblptrl
  9540  0048AA                     	if	1	;There is more than 1 active tblptr byte
  9541  0048AA  0E20               	movlw	high __smallconst
  9542  0048AC  6EF7               	movwf	tblptrh,c
  9543  0048AE                     	endif
  9544  0048AE                     	if	0	;tblptru may be non-zero
  9545  0048AE                     	endif
  9546  0048AE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9547  0048AE  0E00               	movlw	low (__smallconst shr (0+16))
  9548  0048B0  6EF8               	movwf	tblptru,c
  9549  0048B2                     	endif
  9550  0048B2  0008               	tblrd		*
  9551  0048B4  50F5               	movf	tablat,w,c
  9552  0048B6  5E15               	subwf	?___wmul^0,f,c
  9553  0048B8  0E00               	movlw	0
  9554  0048BA  5A16               	subwfb	(?___wmul+1)^0,f,c
  9555  0048BC  0E30               	movlw	48
  9556  0048BE  2415               	addwf	?___wmul^0,w,c
  9557  0048C0  6E24               	movwf	atoi@n^0,c
  9558  0048C2  0E00               	movlw	0
  9559  0048C4  2016               	addwfc	(?___wmul+1)^0,w,c
  9560  0048C6  6E25               	movwf	(atoi@n+1)^0,c
  9561  0048C8  D7CA               	goto	l9968
  9562  0048CA                     l9978:
  9563  0048CA  0ED0               	movlw	208
  9564  0048CC  6E1E               	movwf	??_atoi^0,c
  9565  0048CE  0EFF               	movlw	255
  9566  0048D0  6E1F               	movwf	(??_atoi+1)^0,c
  9567  0048D2  0060  F073  FFF6   	movff	atoi@s,tblptrl
  9568  0048D8                     	if	1	;There is more than 1 active tblptr byte
  9569  0048D8  0E20               	movlw	high __smallconst
  9570  0048DA  6EF7               	movwf	tblptrh,c
  9571  0048DC                     	endif
  9572  0048DC                     	if	0	;tblptru may be non-zero
  9573  0048DC                     	endif
  9574  0048DC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9575  0048DC  0E00               	movlw	low (__smallconst shr (0+16))
  9576  0048DE  6EF8               	movwf	tblptru,c
  9577  0048E0                     	endif
  9578  0048E0  0008               	tblrd		*
  9579  0048E2  50F5               	movf	tablat,w,c
  9580  0048E4  6E20               	movwf	(??_atoi+2)^0,c
  9581  0048E6  6A21               	clrf	(??_atoi+3)^0,c
  9582  0048E8  501E               	movf	??_atoi^0,w,c
  9583  0048EA  2620               	addwf	(??_atoi+2)^0,f,c
  9584  0048EC  501F               	movf	(??_atoi+1)^0,w,c
  9585  0048EE  2221               	addwfc	(??_atoi+3)^0,f,c
  9586  0048F0  5021               	movf	(??_atoi+3)^0,w,c
  9587  0048F2  E104               	bnz	u11810
  9588  0048F4  0E0A               	movlw	10
  9589  0048F6  5C20               	subwf	(??_atoi+2)^0,w,c
  9590  0048F8  A0D8               	btfss	status,0,c
  9591  0048FA  D7CA               	goto	l9972
  9592  0048FC                     u11810:
  9593  0048FC  5022               	movf	atoi@neg^0,w,c
  9594  0048FE  1023               	iorwf	(atoi@neg+1)^0,w,c
  9595  004900  A4D8               	btfss	status,2,c
  9596  004902  D00D               	goto	l2086
  9597  004904  C024  F01E         	movff	atoi@n,??_atoi
  9598  004908  C025  F01F         	movff	atoi@n+1,??_atoi+1
  9599  00490C  1E1E               	comf	??_atoi^0,f,c
  9600  00490E  1E1F               	comf	(??_atoi+1)^0,f,c
  9601  004910  4A1E               	infsnz	??_atoi^0,f,c
  9602  004912  2A1F               	incf	(??_atoi+1)^0,f,c
  9603  004914  C01E  F01C         	movff	??_atoi,?_atoi
  9604  004918  C01F  F01D         	movff	??_atoi+1,?_atoi+1
  9605  00491C  0012               	return	
  9606  00491E                     l2086:
  9607  00491E  C024  F01C         	movff	atoi@n,?_atoi
  9608  004922  C025  F01D         	movff	atoi@n+1,?_atoi+1
  9609  004926  0012               	return		;funcret
  9610  004928                     __end_of_atoi:
  9611                           	callstack 0
  9612                           
  9613 ;; *************** function _isspace *****************
  9614 ;; Defined at:
  9615 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/isspace.c"
  9616 ;; Parameters:    Size  Location     Type
  9617 ;;  c               2   20[COMRAM] int 
  9618 ;; Auto vars:     Size  Location     Type
  9619 ;;		None
  9620 ;; Return value:  Size  Location     Type
  9621 ;;                  2   20[COMRAM] int 
  9622 ;; Registers used:
  9623 ;;		wreg, status,2, status,0
  9624 ;; Tracked objects:
  9625 ;;		On entry : 0/0
  9626 ;;		On exit  : 0/0
  9627 ;;		Unchanged: 0/0
  9628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9629 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9630 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9631 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9632 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9633 ;;Total ram usage:        7 bytes
  9634 ;; Hardware stack levels used: 1
  9635 ;; Hardware stack levels required when called: 4
  9636 ;; This function calls:
  9637 ;;		Nothing
  9638 ;; This function is called by:
  9639 ;;		_atoi
  9640 ;; This function uses a non-reentrant model
  9641 ;;
  9642                           
  9643                           	psect	text29
  9644  005792                     __ptext29:
  9645                           	callstack 0
  9646  005792                     _isspace:
  9647                           	callstack 20
  9648                           
  9649                           ;incstack = 0
  9650  005792  0E01               	movlw	1
  9651  005794  6E1B               	movwf	_isspace$2834^0,c
  9652  005796  0E20               	movlw	32
  9653  005798  1815               	xorwf	isspace@c^0,w,c
  9654  00579A  1016               	iorwf	(isspace@c+1)^0,w,c
  9655  00579C  B4D8               	btfsc	status,2,c
  9656  00579E  D014               	goto	l9548
  9657  0057A0  0EF7               	movlw	247
  9658  0057A2  6E17               	movwf	??_isspace^0,c
  9659  0057A4  0EFF               	movlw	255
  9660  0057A6  6E18               	movwf	(??_isspace+1)^0,c
  9661  0057A8  C015  F019         	movff	isspace@c,??_isspace+2
  9662  0057AC  C016  F01A         	movff	isspace@c+1,??_isspace+3
  9663  0057B0  5017               	movf	??_isspace^0,w,c
  9664  0057B2  2619               	addwf	(??_isspace+2)^0,f,c
  9665  0057B4  5018               	movf	(??_isspace+1)^0,w,c
  9666  0057B6  221A               	addwfc	(??_isspace+3)^0,f,c
  9667  0057B8  501A               	movf	(??_isspace+3)^0,w,c
  9668  0057BA  E104               	bnz	u11030
  9669  0057BC  0E05               	movlw	5
  9670  0057BE  5C19               	subwf	(??_isspace+2)^0,w,c
  9671  0057C0  A0D8               	btfss	status,0,c
  9672  0057C2  D002               	goto	l9548
  9673  0057C4                     u11030:
  9674  0057C4  0E00               	movlw	0
  9675  0057C6  6E1B               	movwf	_isspace$2834^0,c
  9676  0057C8                     l9548:
  9677  0057C8  C01B  F015         	movff	_isspace$2834,?_isspace
  9678  0057CC  6A16               	clrf	(?_isspace+1)^0,c
  9679  0057CE  0012               	return		;funcret
  9680  0057D0                     __end_of_isspace:
  9681                           	callstack 0
  9682                           
  9683 ;; *************** function _isdigit *****************
  9684 ;; Defined at:
  9685 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/isdigit.c"
  9686 ;; Parameters:    Size  Location     Type
  9687 ;;  c               2   20[COMRAM] int 
  9688 ;; Auto vars:     Size  Location     Type
  9689 ;;		None
  9690 ;; Return value:  Size  Location     Type
  9691 ;;                  2   20[COMRAM] int 
  9692 ;; Registers used:
  9693 ;;		wreg, status,2, status,0
  9694 ;; Tracked objects:
  9695 ;;		On entry : 0/0
  9696 ;;		On exit  : 0/0
  9697 ;;		Unchanged: 0/0
  9698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9699 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9701 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9702 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9703 ;;Total ram usage:        6 bytes
  9704 ;; Hardware stack levels used: 1
  9705 ;; Hardware stack levels required when called: 4
  9706 ;; This function calls:
  9707 ;;		Nothing
  9708 ;; This function is called by:
  9709 ;;		_vfpfcnvrt
  9710 ;;		_atoi
  9711 ;; This function uses a non-reentrant model
  9712 ;;
  9713                           
  9714                           	psect	text30
  9715  0059E2                     __ptext30:
  9716                           	callstack 0
  9717  0059E2                     _isdigit:
  9718                           	callstack 21
  9719                           
  9720                           ;incstack = 0
  9721  0059E2  0ED0               	movlw	208
  9722  0059E4  6E17               	movwf	??_isdigit^0,c
  9723  0059E6  0EFF               	movlw	255
  9724  0059E8  6E18               	movwf	(??_isdigit+1)^0,c
  9725  0059EA  C015  F019         	movff	isdigit@c,??_isdigit+2
  9726  0059EE  C016  F01A         	movff	isdigit@c+1,??_isdigit+3
  9727  0059F2  5017               	movf	??_isdigit^0,w,c
  9728  0059F4  2619               	addwf	(??_isdigit+2)^0,f,c
  9729  0059F6  5018               	movf	(??_isdigit+1)^0,w,c
  9730  0059F8  221A               	addwfc	(??_isdigit+3)^0,f,c
  9731  0059FA  501A               	movf	(??_isdigit+3)^0,w,c
  9732  0059FC  E106               	bnz	u11000
  9733  0059FE  0E0A               	movlw	10
  9734  005A00  5C19               	subwf	(??_isdigit+2)^0,w,c
  9735  005A02  B0D8               	btfsc	status,0,c
  9736  005A04  D002               	goto	u11000
  9737  005A06  0E01               	movlw	1
  9738  005A08  D001               	goto	u11010
  9739  005A0A                     u11000:
  9740  005A0A  0E00               	movlw	0
  9741  005A0C                     u11010:
  9742  005A0C  6E15               	movwf	?_isdigit^0,c
  9743  005A0E  6A16               	clrf	(?_isdigit+1)^0,c
  9744  005A10  0012               	return		;funcret
  9745  005A12                     __end_of_isdigit:
  9746                           	callstack 0
  9747                           
  9748 ;; *************** function ___wmul *****************
  9749 ;; Defined at:
  9750 ;;		line 15 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/Umul16.c"
  9751 ;; Parameters:    Size  Location     Type
  9752 ;;  multiplier      2   20[COMRAM] unsigned int 
  9753 ;;  multiplicand    2   22[COMRAM] unsigned int 
  9754 ;; Auto vars:     Size  Location     Type
  9755 ;;  product         2   24[COMRAM] unsigned int 
  9756 ;; Return value:  Size  Location     Type
  9757 ;;                  2   20[COMRAM] unsigned int 
  9758 ;; Registers used:
  9759 ;;		wreg, status,2, status,0, prodl, prodh
  9760 ;; Tracked objects:
  9761 ;;		On entry : 0/0
  9762 ;;		On exit  : 0/0
  9763 ;;		Unchanged: 0/0
  9764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9765 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9766 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9768 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9769 ;;Total ram usage:        6 bytes
  9770 ;; Hardware stack levels used: 1
  9771 ;; Hardware stack levels required when called: 4
  9772 ;; This function calls:
  9773 ;;		Nothing
  9774 ;; This function is called by:
  9775 ;;		_atoi
  9776 ;; This function uses a non-reentrant model
  9777 ;;
  9778                           
  9779                           	psect	text31
  9780  005A9A                     __ptext31:
  9781                           	callstack 0
  9782  005A9A                     ___wmul:
  9783                           	callstack 20
  9784                           
  9785                           ;incstack = 0
  9786  005A9A  5015               	movf	___wmul@multiplier^0,w,c
  9787  005A9C  0217               	mulwf	___wmul@multiplicand^0,c
  9788  005A9E  006F FFCC  F019    	movff	prodl,___wmul@product
  9789  005AA4  006F FFD0  F01A    	movff	prodh,___wmul@product+1
  9790  005AAA  5015               	movf	___wmul@multiplier^0,w,c
  9791  005AAC  0218               	mulwf	(___wmul@multiplicand+1)^0,c
  9792  005AAE  50F3               	movf	243,w,c
  9793  005AB0  261A               	addwf	(___wmul@product+1)^0,f,c
  9794  005AB2  5016               	movf	(___wmul@multiplier+1)^0,w,c
  9795  005AB4  0217               	mulwf	___wmul@multiplicand^0,c
  9796  005AB6  50F3               	movf	243,w,c
  9797  005AB8  261A               	addwf	(___wmul@product+1)^0,f,c
  9798  005ABA  C019  F015         	movff	___wmul@product,?___wmul
  9799  005ABE  C01A  F016         	movff	___wmul@product+1,?___wmul+1
  9800  005AC2  0012               	return		;funcret
  9801  005AC4                     __end_of___wmul:
  9802                           	callstack 0
  9803                           
  9804 ;; *************** function _display_led *****************
  9805 ;; Defined at:
  9806 ;;		line 3 in file "disp_led.c"
  9807 ;; Parameters:    Size  Location     Type
  9808 ;;  led             1    wreg     enum E17121
  9809 ;; Auto vars:     Size  Location     Type
  9810 ;;  led             1   22[COMRAM] enum E17121
  9811 ;; Return value:  Size  Location     Type
  9812 ;;                  1    wreg      void 
  9813 ;; Registers used:
  9814 ;;		wreg, status,2, status,0
  9815 ;; Tracked objects:
  9816 ;;		On entry : 0/0
  9817 ;;		On exit  : 0/0
  9818 ;;		Unchanged: 0/0
  9819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9821 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9822 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9823 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9824 ;;Total ram usage:        3 bytes
  9825 ;; Hardware stack levels used: 1
  9826 ;; Hardware stack levels required when called: 4
  9827 ;; This function calls:
  9828 ;;		Nothing
  9829 ;; This function is called by:
  9830 ;;		_main
  9831 ;; This function uses a non-reentrant model
  9832 ;;
  9833                           
  9834                           	psect	text32
  9835  004D12                     __ptext32:
  9836                           	callstack 0
  9837  004D12                     _display_led:
  9838                           	callstack 26
  9839                           
  9840                           ;incstack = 0
  9841                           ;display_led@led stored from wreg
  9842  004D12  6E17               	movwf	display_led@led^0,c
  9843                           
  9844                           ;disp_led.c: 3: void display_led(DISPLAY_TYPES led);disp_led.c: 4: {;disp_led.c: 5:  swi
      +                          tch (led) {
  9845  004D14  D02D               	goto	l10476
  9846  004D16                     l983:
  9847  004D16  98BD               	bcf	189,4,c	;volatile
  9848                           
  9849                           ;disp_led.c: 8:   do { LATDbits.LATD5 = 0; } while(0);
  9850  004D18  9ABD               	bcf	189,5,c	;volatile
  9851  004D1A  0012               	return	
  9852  004D1C                     l989:
  9853  004D1C  98BD               	bcf	189,4,c	;volatile
  9854                           
  9855                           ;disp_led.c: 12:   do { LATDbits.LATD5 = 1; } while(0);
  9856  004D1E  8ABD               	bsf	189,5,c	;volatile
  9857  004D20  0012               	return	
  9858  004D22                     l994:
  9859  004D22  88BD               	bsf	189,4,c	;volatile
  9860                           
  9861                           ;disp_led.c: 16:   do { LATDbits.LATD5 = 0; } while(0);
  9862  004D24  9ABD               	bcf	189,5,c	;volatile
  9863  004D26  0012               	return	
  9864  004D28                     l999:
  9865  004D28  9CBD               	bcf	189,6,c	;volatile
  9866                           
  9867                           ;disp_led.c: 20:   do { LATDbits.LATD7 = 0; } while(0);
  9868  004D2A  9EBD               	bcf	189,7,c	;volatile
  9869  004D2C  0012               	return	
  9870  004D2E                     l1004:
  9871  004D2E  9CBD               	bcf	189,6,c	;volatile
  9872                           
  9873                           ;disp_led.c: 24:   do { LATDbits.LATD7 = 1; } while(0);
  9874  004D30  8EBD               	bsf	189,7,c	;volatile
  9875  004D32  0012               	return	
  9876  004D34                     l1009:
  9877  004D34  8CBD               	bsf	189,6,c	;volatile
  9878                           
  9879                           ;disp_led.c: 28:   do { LATDbits.LATD7 = 0; } while(0);
  9880  004D36  9EBD               	bcf	189,7,c	;volatile
  9881  004D38  0012               	return	
  9882  004D3A                     l1014:
  9883  004D3A  98BF               	bcf	191,4,c	;volatile
  9884                           
  9885                           ;disp_led.c: 32:   do { LATFbits.LATF5 = 0; } while(0);
  9886  004D3C  9ABF               	bcf	191,5,c	;volatile
  9887  004D3E  0012               	return	
  9888  004D40                     l1019:
  9889  004D40  98BF               	bcf	191,4,c	;volatile
  9890                           
  9891                           ;disp_led.c: 36:   do { LATFbits.LATF5 = 1; } while(0);
  9892  004D42  8ABF               	bsf	191,5,c	;volatile
  9893  004D44  0012               	return	
  9894  004D46                     l1024:
  9895  004D46  88BF               	bsf	191,4,c	;volatile
  9896                           
  9897                           ;disp_led.c: 40:   do { LATFbits.LATF5 = 0; } while(0);
  9898  004D48  9ABF               	bcf	191,5,c	;volatile
  9899  004D4A  0012               	return	
  9900  004D4C                     l1029:
  9901  004D4C  9CBF               	bcf	191,6,c	;volatile
  9902                           
  9903                           ;disp_led.c: 44:   do { LATFbits.LATF7 = 0; } while(0);
  9904  004D4E  9EBF               	bcf	191,7,c	;volatile
  9905  004D50  0012               	return	
  9906  004D52                     l1034:
  9907  004D52  9CBF               	bcf	191,6,c	;volatile
  9908                           
  9909                           ;disp_led.c: 48:   do { LATFbits.LATF7 = 1; } while(0);
  9910  004D54  8EBF               	bsf	191,7,c	;volatile
  9911  004D56  0012               	return	
  9912  004D58                     l1039:
  9913  004D58  8CBF               	bsf	191,6,c	;volatile
  9914                           
  9915                           ;disp_led.c: 52:   do { LATFbits.LATF7 = 0; } while(0);
  9916  004D5A  9EBF               	bcf	191,7,c	;volatile
  9917  004D5C  0012               	return	
  9918  004D5E                     l1044:
  9919  004D5E  98BD               	bcf	189,4,c	;volatile
  9920                           
  9921                           ;disp_led.c: 56:   do { LATDbits.LATD5 = 0; } while(0);
  9922  004D60  9ABD               	bcf	189,5,c	;volatile
  9923                           
  9924                           ;disp_led.c: 57:   do { LATDbits.LATD6 = 0; } while(0);
  9925  004D62  9CBD               	bcf	189,6,c	;volatile
  9926                           
  9927                           ;disp_led.c: 58:   do { LATDbits.LATD7 = 0; } while(0);
  9928  004D64  9EBD               	bcf	189,7,c	;volatile
  9929                           
  9930                           ;disp_led.c: 59:   do { LATFbits.LATF4 = 0; } while(0);
  9931  004D66  98BF               	bcf	191,4,c	;volatile
  9932                           
  9933                           ;disp_led.c: 60:   do { LATFbits.LATF5 = 0; } while(0);
  9934  004D68  9ABF               	bcf	191,5,c	;volatile
  9935                           
  9936                           ;disp_led.c: 61:   do { LATFbits.LATF6 = 0; } while(0);
  9937  004D6A  9CBF               	bcf	191,6,c	;volatile
  9938                           
  9939                           ;disp_led.c: 62:   do { LATFbits.LATF7 = 0; } while(0);
  9940  004D6C  9EBF               	bcf	191,7,c	;volatile
  9941  004D6E  0012               	return	
  9942  004D70                     l10476:
  9943  004D70  5017               	movf	display_led@led^0,w,c
  9944  004D72  6E15               	movwf	??_display_led^0,c
  9945  004D74  6A16               	clrf	(??_display_led+1)^0,c
  9946                           
  9947                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9948                           ; Switch size 1, requested type "simple"
  9949                           ; Number of cases is 1, Range of values is 0 to 0
  9950                           ; switch strategies available:
  9951                           ; Name         Instructions Cycles
  9952                           ; simple_byte            4     3 (average)
  9953                           ;	Chosen strategy is simple_byte
  9954  004D76  5016               	movf	(??_display_led+1)^0,w,c
  9955  004D78  0A00               	xorlw	0	; case 0
  9956  004D7A  A4D8               	btfss	status,2,c
  9957  004D7C  D7F0               	goto	l1044
  9958                           
  9959                           ; Switch size 1, requested type "simple"
  9960                           ; Number of cases is 12, Range of values is 0 to 11
  9961                           ; switch strategies available:
  9962                           ; Name         Instructions Cycles
  9963                           ; simple_byte           37    19 (average)
  9964                           ;	Chosen strategy is simple_byte
  9965  004D7E  5015               	movf	??_display_led^0,w,c
  9966  004D80  0A00               	xorlw	0	; case 0
  9967  004D82  B4D8               	btfsc	status,2,c
  9968  004D84  D7C8               	goto	l983
  9969  004D86  0A01               	xorlw	1	; case 1
  9970  004D88  B4D8               	btfsc	status,2,c
  9971  004D8A  D7CB               	goto	l994
  9972  004D8C  0A03               	xorlw	3	; case 2
  9973  004D8E  B4D8               	btfsc	status,2,c
  9974  004D90  D7C5               	goto	l989
  9975  004D92  0A01               	xorlw	1	; case 3
  9976  004D94  B4D8               	btfsc	status,2,c
  9977  004D96  D7C8               	goto	l999
  9978  004D98  0A07               	xorlw	7	; case 4
  9979  004D9A  B4D8               	btfsc	status,2,c
  9980  004D9C  D7CB               	goto	l1009
  9981  004D9E  0A01               	xorlw	1	; case 5
  9982  004DA0  B4D8               	btfsc	status,2,c
  9983  004DA2  D7C5               	goto	l1004
  9984  004DA4  0A03               	xorlw	3	; case 6
  9985  004DA6  B4D8               	btfsc	status,2,c
  9986  004DA8  D7C8               	goto	l1014
  9987  004DAA  0A01               	xorlw	1	; case 7
  9988  004DAC  B4D8               	btfsc	status,2,c
  9989  004DAE  D7CB               	goto	l1024
  9990  004DB0  0A0F               	xorlw	15	; case 8
  9991  004DB2  B4D8               	btfsc	status,2,c
  9992  004DB4  D7C5               	goto	l1019
  9993  004DB6  0A01               	xorlw	1	; case 9
  9994  004DB8  B4D8               	btfsc	status,2,c
  9995  004DBA  D7C8               	goto	l1029
  9996  004DBC  0A03               	xorlw	3	; case 10
  9997  004DBE  B4D8               	btfsc	status,2,c
  9998  004DC0  D7CB               	goto	l1039
  9999  004DC2  0A01               	xorlw	1	; case 11
 10000  004DC4  B4D8               	btfsc	status,2,c
 10001  004DC6  D7C5               	goto	l1034
 10002  004DC8  D7CA               	goto	l1044
 10003  004DCA                     __end_of_display_led:
 10004                           	callstack 0
 10005                           
 10006 ;; *************** function _cli_read *****************
 10007 ;; Defined at:
 10008 ;;		line 82 in file "scdm.c"
 10009 ;; Parameters:    Size  Location     Type
 10010 ;;  a_ctx           2   49[COMRAM] PTR struct _t_cli_ctx
 10011 ;;		 -> cli_ctx(131), 
 10012 ;; Auto vars:     Size  Location     Type
 10013 ;;  i               1   12[BANK0 ] unsigned char 
 10014 ;; Return value:  Size  Location     Type
 10015 ;;                  1    wreg      void 
 10016 ;; Registers used:
 10017 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 10018 ;; Tracked objects:
 10019 ;;		On entry : 0/0
 10020 ;;		On exit  : 0/0
 10021 ;;		Unchanged: 0/0
 10022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10023 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10024 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10025 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10026 ;;      Totals:         5       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10027 ;;Total ram usage:        8 bytes
 10028 ;; Hardware stack levels used: 1
 10029 ;; Hardware stack levels required when called: 11
 10030 ;; This function calls:
 10031 ;;		__cli_interpret_cmd
 10032 ;;		_linux_getc
 10033 ;;		_linux_putc
 10034 ;;		_memset
 10035 ;; This function is called by:
 10036 ;;		_main
 10037 ;; This function uses a non-reentrant model
 10038 ;;
 10039                           
 10040                           	psect	text33
 10041  0042CC                     __ptext33:
 10042                           	callstack 0
 10043  0042CC                     _cli_read:
 10044                           	callstack 19
 10045                           
 10046                           ;scdm.c: 82: void cli_read(t_cli_ctx *a_ctx);scdm.c: 83: {;scdm.c: 84:  uint8_t i = 0x00
      +                          ;
 10047                           
 10048                           ;incstack = 0
 10049  0042CC  0E00               	movlw	0
 10050  0042CE  0100               	movlb	0	; () banked
 10051  0042D0  6F6C               	movwf	cli_read@i& (0+255),b
 10052                           
 10053                           ; BSR set to: 0
 10054                           ;scdm.c: 87:  if (!linux_getc(&i)) {
 10055  0042D2  0E6C               	movlw	low cli_read@i
 10056  0042D4  6E16               	movwf	linux_getc@a_data^0,c
 10057  0042D6  EC77  F02D         	call	_linux_getc	;wreg free
 10058  0042DA  0900               	iorlw	0
 10059  0042DC  B4D8               	btfsc	status,2,c
 10060  0042DE  0012               	return	
 10061  0042E0  D08A               	goto	l10516
 10062  0042E2                     l10494:
 10063                           
 10064                           ; BSR set to: 0
 10065                           ;scdm.c: 99:   a_ctx->cmd[(((a_ctx->cpos) < (128 - 1)) ? (a_ctx->cpos + 1) : (a_ctx->cpo
      +                          s))] = '\0';
 10066  0042E2  EE20 F082          	lfsr	2,130
 10067  0042E6  5032               	movf	cli_read@a_ctx^0,w,c
 10068  0042E8  26D9               	addwf	fsr2l,f,c
 10069  0042EA  5033               	movf	(cli_read@a_ctx+1)^0,w,c
 10070  0042EC  22DA               	addwfc	fsr2h,f,c
 10071  0042EE  0E7E               	movlw	126
 10072  0042F0  64DF               	cpfsgt	indf2,c
 10073  0042F2  D00C               	goto	l10498
 10074                           
 10075                           ; BSR set to: 0
 10076  0042F4  EE20 F082          	lfsr	2,130
 10077  0042F8  5032               	movf	cli_read@a_ctx^0,w,c
 10078  0042FA  26D9               	addwf	fsr2l,f,c
 10079  0042FC  5033               	movf	(cli_read@a_ctx+1)^0,w,c
 10080  0042FE  22DA               	addwfc	fsr2h,f,c
 10081  004300  50DF               	movf	indf2,w,c
 10082  004302  6E34               	movwf	??_cli_read^0,c
 10083  004304  5034               	movf	??_cli_read^0,w,c
 10084  004306  6F6A               	movwf	_cli_read$2150& (0+255),b
 10085  004308  6B6B               	clrf	(_cli_read$2150+1)& (0+255),b
 10086  00430A  D00E               	goto	l1134
 10087  00430C                     l10498:
 10088                           
 10089                           ; BSR set to: 0
 10090  00430C  EE20 F082          	lfsr	2,130
 10091  004310  5032               	movf	cli_read@a_ctx^0,w,c
 10092  004312  26D9               	addwf	fsr2l,f,c
 10093  004314  5033               	movf	(cli_read@a_ctx+1)^0,w,c
 10094  004316  22DA               	addwfc	fsr2h,f,c
 10095  004318  50DF               	movf	indf2,w,c
 10096  00431A  6E34               	movwf	??_cli_read^0,c
 10097  00431C  0E01               	movlw	1
 10098  00431E  2434               	addwf	??_cli_read^0,w,c
 10099  004320  6F6A               	movwf	_cli_read$2150& (0+255),b
 10100  004322  6B6B               	clrf	(_cli_read$2150+1)& (0+255),b
 10101  004324  0E00               	movlw	0
 10102  004326  236B               	addwfc	(_cli_read$2150+1)& (0+255),f,b
 10103  004328                     l1134:
 10104                           
 10105                           ; BSR set to: 0
 10106  004328  516A               	movf	_cli_read$2150& (0+255),w,b
 10107  00432A  2432               	addwf	cli_read@a_ctx^0,w,c
 10108  00432C  6E34               	movwf	??_cli_read^0,c
 10109  00432E  516B               	movf	(_cli_read$2150+1)& (0+255),w,b
 10110  004330  2033               	addwfc	(cli_read@a_ctx+1)^0,w,c
 10111  004332  6E35               	movwf	(??_cli_read+1)^0,c
 10112  004334  0E02               	movlw	2
 10113  004336  2434               	addwf	??_cli_read^0,w,c
 10114  004338  6ED9               	movwf	fsr2l,c
 10115  00433A  0E00               	movlw	0
 10116  00433C  2035               	addwfc	(??_cli_read+1)^0,w,c
 10117  00433E  6EDA               	movwf	fsr2h,c
 10118  004340  0E00               	movlw	0
 10119  004342  6EDF               	movwf	indf2,c
 10120                           
 10121                           ; BSR set to: 0
 10122                           ;scdm.c: 100:   linux_putc((unsigned char *) "\r\n", 2);
 10123  004344  0E69               	movlw	low (STR_5+71)
 10124  004346  6E2C               	movwf	linux_putc@data^0,c
 10125  004348  502C               	movf	linux_putc@data^0,w,c
 10126  00434A  A4D8               	btfss	status,2,c
 10127  00434C  0E20               	movlw	high __smallconst
 10128  00434E  6E2D               	movwf	(linux_putc@data+1)^0,c
 10129  004350  0E02               	movlw	2
 10130  004352  6E2E               	movwf	linux_putc@a_len^0,c
 10131  004354  EC3F  F02E         	call	_linux_putc	;wreg free
 10132                           
 10133                           ;scdm.c: 101:   res = _cli_interpret_cmd(a_ctx);
 10134  004358  C032  F02E         	movff	cli_read@a_ctx,__cli_interpret_cmd@a_ctx
 10135  00435C  C033  F02F         	movff	cli_read@a_ctx+1,__cli_interpret_cmd@a_ctx+1
 10136  004360  EC26  F01E         	call	__cli_interpret_cmd	;wreg free
 10137  004364  6E43               	movwf	_res^0,c
 10138                           
 10139                           ;scdm.c: 102:   a_ctx->cpos = 0;
 10140  004366  EE20 F082          	lfsr	2,130
 10141  00436A  5032               	movf	cli_read@a_ctx^0,w,c
 10142  00436C  26D9               	addwf	fsr2l,f,c
 10143  00436E  5033               	movf	(cli_read@a_ctx+1)^0,w,c
 10144  004370  22DA               	addwfc	fsr2h,f,c
 10145  004372  0E00               	movlw	0
 10146  004374  6EDF               	movwf	indf2,c
 10147                           
 10148                           ;scdm.c: 103:   memset(a_ctx->cmd, 0x00, 128);
 10149  004376  0E02               	movlw	2
 10150  004378  2432               	addwf	cli_read@a_ctx^0,w,c
 10151  00437A  6E15               	movwf	memset@dest^0,c
 10152  00437C  0E00               	movlw	0
 10153  00437E  2033               	addwfc	(cli_read@a_ctx+1)^0,w,c
 10154  004380  6E16               	movwf	(memset@dest+1)^0,c
 10155  004382  0E00               	movlw	0
 10156  004384  6E18               	movwf	(memset@c+1)^0,c
 10157  004386  0E00               	movlw	0
 10158  004388  6E17               	movwf	memset@c^0,c
 10159  00438A  0E00               	movlw	0
 10160  00438C  6E1A               	movwf	(memset@n+1)^0,c
 10161  00438E  0E80               	movlw	128
 10162  004390  6E19               	movwf	memset@n^0,c
 10163  004392  EC11  F022         	call	_memset	;wreg free
 10164                           
 10165                           ;scdm.c: 104:   break;
 10166  004396  0012               	return	
 10167  004398                     l10508:
 10168                           
 10169                           ; BSR set to: 0
 10170                           ;scdm.c: 107:   if (a_ctx->cpos < (128 - 1)) {
 10171  004398  EE20 F082          	lfsr	2,130
 10172  00439C  5032               	movf	cli_read@a_ctx^0,w,c
 10173  00439E  26D9               	addwf	fsr2l,f,c
 10174  0043A0  5033               	movf	(cli_read@a_ctx+1)^0,w,c
 10175  0043A2  22DA               	addwfc	fsr2h,f,c
 10176  0043A4  0E7F               	movlw	127
 10177  0043A6  60DF               	cpfslt	indf2,c
 10178  0043A8  0012               	return	
 10179                           
 10180                           ; BSR set to: 0
 10181                           ;scdm.c: 108:    a_ctx->cmd[a_ctx->cpos++] = i;
 10182  0043AA  EE20 F082          	lfsr	2,130
 10183  0043AE  5032               	movf	cli_read@a_ctx^0,w,c
 10184  0043B0  26D9               	addwf	fsr2l,f,c
 10185  0043B2  5033               	movf	(cli_read@a_ctx+1)^0,w,c
 10186  0043B4  22DA               	addwfc	fsr2h,f,c
 10187  0043B6  50DF               	movf	indf2,w,c
 10188  0043B8  6E34               	movwf	??_cli_read^0,c
 10189  0043BA  5034               	movf	??_cli_read^0,w,c
 10190  0043BC  2432               	addwf	cli_read@a_ctx^0,w,c
 10191  0043BE  6E35               	movwf	(??_cli_read+1)^0,c
 10192  0043C0  0E00               	movlw	0
 10193  0043C2  2033               	addwfc	(cli_read@a_ctx+1)^0,w,c
 10194  0043C4  6E36               	movwf	(??_cli_read+2)^0,c
 10195  0043C6  0E02               	movlw	2
 10196  0043C8  2435               	addwf	(??_cli_read+1)^0,w,c
 10197  0043CA  6ED9               	movwf	fsr2l,c
 10198  0043CC  0E00               	movlw	0
 10199  0043CE  2036               	addwfc	(??_cli_read+2)^0,w,c
 10200  0043D0  6EDA               	movwf	fsr2h,c
 10201  0043D2  0060  F1B3  FFDF   	movff	cli_read@i,indf2
 10202  0043D8  EE20 F082          	lfsr	2,130
 10203  0043DC  5032               	movf	cli_read@a_ctx^0,w,c
 10204  0043DE  26D9               	addwf	fsr2l,f,c
 10205  0043E0  5033               	movf	(cli_read@a_ctx+1)^0,w,c
 10206  0043E2  22DA               	addwfc	fsr2h,f,c
 10207  0043E4  2ADF               	incf	indf2,f,c
 10208                           
 10209                           ; BSR set to: 0
 10210                           ;scdm.c: 109:    linux_putc(&i, 1);
 10211  0043E6  0E6C               	movlw	low cli_read@i
 10212  0043E8  6E2C               	movwf	linux_putc@data^0,c
 10213  0043EA  6A2D               	clrf	(linux_putc@data+1)^0,c
 10214  0043EC  0E01               	movlw	1
 10215  0043EE  6E2E               	movwf	linux_putc@a_len^0,c
 10216  0043F0  EC3F  F02E         	call	_linux_putc	;wreg free
 10217  0043F4  0012               	return	
 10218  0043F6                     l10516:
 10219  0043F6  0100               	movlb	0	; () banked
 10220  0043F8  516C               	movf	cli_read@i& (0+255),w,b
 10221  0043FA  6E34               	movwf	??_cli_read^0,c
 10222  0043FC  6A35               	clrf	(??_cli_read+1)^0,c
 10223                           
 10224                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10225                           ; Switch size 1, requested type "simple"
 10226                           ; Number of cases is 1, Range of values is 0 to 0
 10227                           ; switch strategies available:
 10228                           ; Name         Instructions Cycles
 10229                           ; simple_byte            4     3 (average)
 10230                           ;	Chosen strategy is simple_byte
 10231  0043FE  5035               	movf	(??_cli_read+1)^0,w,c
 10232  004400  0A00               	xorlw	0	; case 0
 10233  004402  A4D8               	btfss	status,2,c
 10234  004404  D7C9               	goto	l10508
 10235                           
 10236                           ; BSR set to: 0
 10237                           ; Switch size 1, requested type "simple"
 10238                           ; Number of cases is 4, Range of values is 13 to 127
 10239                           ; switch strategies available:
 10240                           ; Name         Instructions Cycles
 10241                           ; simple_byte           13     7 (average)
 10242                           ;	Chosen strategy is simple_byte
 10243  004406  5034               	movf	??_cli_read^0,w,c
 10244  004408  0A0D               	xorlw	13	; case 13
 10245  00440A  B4D8               	btfsc	status,2,c
 10246  00440C  D76A               	goto	l10494
 10247  00440E  0A16               	xorlw	22	; case 27
 10248  004410  B4D8               	btfsc	status,2,c
 10249  004412  0012               	return	
 10250  004414  0A65               	xorlw	101	; case 126
 10251  004416  B4D8               	btfsc	status,2,c
 10252  004418  0012               	return	
 10253  00441A  0A01               	xorlw	1	; case 127
 10254  00441C  B4D8               	btfsc	status,2,c
 10255  00441E  0012               	return		;funcret
 10256  004420  D7BB               	goto	l10508
 10257  004422                     __end_of_cli_read:
 10258                           	callstack 0
 10259                           
 10260 ;; *************** function _memset *****************
 10261 ;; Defined at:
 10262 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/memset.c"
 10263 ;; Parameters:    Size  Location     Type
 10264 ;;  dest            2   20[COMRAM] PTR void 
 10265 ;;		 -> cli_ctx(131), 
 10266 ;;  c               2   22[COMRAM] int 
 10267 ;;  n               2   24[COMRAM] unsigned int 
 10268 ;; Auto vars:     Size  Location     Type
 10269 ;;  s               2   30[COMRAM] PTR unsigned char 
 10270 ;;		 -> cli_ctx(131), 
 10271 ;;  k               2   28[COMRAM] unsigned int 
 10272 ;; Return value:  Size  Location     Type
 10273 ;;                  2   20[COMRAM] PTR void 
 10274 ;; Registers used:
 10275 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10276 ;; Tracked objects:
 10277 ;;		On entry : 0/2
 10278 ;;		On exit  : 0/0
 10279 ;;		Unchanged: 0/0
 10280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10281 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10282 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10283 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10284 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10285 ;;Total ram usage:       12 bytes
 10286 ;; Hardware stack levels used: 1
 10287 ;; Hardware stack levels required when called: 4
 10288 ;; This function calls:
 10289 ;;		Nothing
 10290 ;; This function is called by:
 10291 ;;		_cli_init
 10292 ;;		_cli_read
 10293 ;; This function uses a non-reentrant model
 10294 ;;
 10295                           
 10296                           	psect	text34
 10297  004422                     __ptext34:
 10298                           	callstack 0
 10299  004422                     _memset:
 10300                           	callstack 24
 10301                           
 10302                           ;incstack = 0
 10303  004422  C015  F01F         	movff	memset@dest,memset@s
 10304  004426  C016  F020         	movff	memset@dest+1,memset@s+1
 10305  00442A  5019               	movf	memset@n^0,w,c
 10306  00442C  101A               	iorwf	(memset@n+1)^0,w,c
 10307  00442E  B4D8               	btfsc	status,2,c
 10308  004430  0012               	return	
 10309  004432  0060  F07F  FFD9   	movff	memset@s,fsr2l
 10310  004438  0060  F083  FFDA   	movff	memset@s+1,fsr2h
 10311  00443E  0060  F05F  FFDF   	movff	memset@c,indf2
 10312  004444  5019               	movf	memset@n^0,w,c
 10313  004446  241F               	addwf	memset@s^0,w,c
 10314  004448  6E1B               	movwf	??_memset^0,c
 10315  00444A  501A               	movf	(memset@n+1)^0,w,c
 10316  00444C  2020               	addwfc	(memset@s+1)^0,w,c
 10317  00444E  6E1C               	movwf	(??_memset+1)^0,c
 10318  004450  0EFF               	movlw	255
 10319  004452  241B               	addwf	??_memset^0,w,c
 10320  004454  6ED9               	movwf	fsr2l,c
 10321  004456  0EFF               	movlw	255
 10322  004458  201C               	addwfc	(??_memset+1)^0,w,c
 10323  00445A  6EDA               	movwf	fsr2h,c
 10324  00445C  0060  F05F  FFDF   	movff	memset@c,indf2
 10325  004462  501A               	movf	(memset@n+1)^0,w,c
 10326  004464  E104               	bnz	l10234
 10327  004466  0E03               	movlw	3
 10328  004468  5C19               	subwf	memset@n^0,w,c
 10329  00446A  A0D8               	btfss	status,0,c
 10330  00446C  0012               	return	
 10331  00446E                     l10234:
 10332  00446E  EE20 F001          	lfsr	2,1
 10333  004472  501F               	movf	memset@s^0,w,c
 10334  004474  26D9               	addwf	fsr2l,f,c
 10335  004476  5020               	movf	(memset@s+1)^0,w,c
 10336  004478  22DA               	addwfc	fsr2h,f,c
 10337  00447A  0060  F05F  FFDF   	movff	memset@c,indf2
 10338  004480  EE20 F002          	lfsr	2,2
 10339  004484  501F               	movf	memset@s^0,w,c
 10340  004486  26D9               	addwf	fsr2l,f,c
 10341  004488  5020               	movf	(memset@s+1)^0,w,c
 10342  00448A  22DA               	addwfc	fsr2h,f,c
 10343  00448C  0060  F05F  FFDF   	movff	memset@c,indf2
 10344  004492  5019               	movf	memset@n^0,w,c
 10345  004494  241F               	addwf	memset@s^0,w,c
 10346  004496  6E1B               	movwf	??_memset^0,c
 10347  004498  501A               	movf	(memset@n+1)^0,w,c
 10348  00449A  2020               	addwfc	(memset@s+1)^0,w,c
 10349  00449C  6E1C               	movwf	(??_memset+1)^0,c
 10350  00449E  0EFE               	movlw	254
 10351  0044A0  241B               	addwf	??_memset^0,w,c
 10352  0044A2  6ED9               	movwf	fsr2l,c
 10353  0044A4  0EFF               	movlw	255
 10354  0044A6  201C               	addwfc	(??_memset+1)^0,w,c
 10355  0044A8  6EDA               	movwf	fsr2h,c
 10356  0044AA  0060  F05F  FFDF   	movff	memset@c,indf2
 10357  0044B0  5019               	movf	memset@n^0,w,c
 10358  0044B2  241F               	addwf	memset@s^0,w,c
 10359  0044B4  6E1B               	movwf	??_memset^0,c
 10360  0044B6  501A               	movf	(memset@n+1)^0,w,c
 10361  0044B8  2020               	addwfc	(memset@s+1)^0,w,c
 10362  0044BA  6E1C               	movwf	(??_memset+1)^0,c
 10363  0044BC  0EFD               	movlw	253
 10364  0044BE  241B               	addwf	??_memset^0,w,c
 10365  0044C0  6ED9               	movwf	fsr2l,c
 10366  0044C2  0EFF               	movlw	255
 10367  0044C4  201C               	addwfc	(??_memset+1)^0,w,c
 10368  0044C6  6EDA               	movwf	fsr2h,c
 10369  0044C8  0060  F05F  FFDF   	movff	memset@c,indf2
 10370  0044CE  501A               	movf	(memset@n+1)^0,w,c
 10371  0044D0  E104               	bnz	l10240
 10372  0044D2  0E07               	movlw	7
 10373  0044D4  5C19               	subwf	memset@n^0,w,c
 10374  0044D6  A0D8               	btfss	status,0,c
 10375  0044D8  0012               	return	
 10376  0044DA                     l10240:
 10377  0044DA  EE20 F003          	lfsr	2,3
 10378  0044DE  501F               	movf	memset@s^0,w,c
 10379  0044E0  26D9               	addwf	fsr2l,f,c
 10380  0044E2  5020               	movf	(memset@s+1)^0,w,c
 10381  0044E4  22DA               	addwfc	fsr2h,f,c
 10382  0044E6  0060  F05F  FFDF   	movff	memset@c,indf2
 10383  0044EC  5019               	movf	memset@n^0,w,c
 10384  0044EE  241F               	addwf	memset@s^0,w,c
 10385  0044F0  6E1B               	movwf	??_memset^0,c
 10386  0044F2  501A               	movf	(memset@n+1)^0,w,c
 10387  0044F4  2020               	addwfc	(memset@s+1)^0,w,c
 10388  0044F6  6E1C               	movwf	(??_memset+1)^0,c
 10389  0044F8  0EFC               	movlw	252
 10390  0044FA  241B               	addwf	??_memset^0,w,c
 10391  0044FC  6ED9               	movwf	fsr2l,c
 10392  0044FE  0EFF               	movlw	255
 10393  004500  201C               	addwfc	(??_memset+1)^0,w,c
 10394  004502  6EDA               	movwf	fsr2h,c
 10395  004504  0060  F05F  FFDF   	movff	memset@c,indf2
 10396  00450A  501A               	movf	(memset@n+1)^0,w,c
 10397  00450C  E104               	bnz	l10246
 10398  00450E  0E09               	movlw	9
 10399  004510  5C19               	subwf	memset@n^0,w,c
 10400  004512  A0D8               	btfss	status,0,c
 10401  004514  0012               	return	
 10402  004516                     l10246:
 10403  004516  C01F  F01B         	movff	memset@s,??_memset
 10404  00451A  C020  F01C         	movff	memset@s+1,??_memset+1
 10405  00451E  1E1B               	comf	??_memset^0,f,c
 10406  004520  1E1C               	comf	(??_memset+1)^0,f,c
 10407  004522  4A1B               	infsnz	??_memset^0,f,c
 10408  004524  2A1C               	incf	(??_memset+1)^0,f,c
 10409  004526  0E03               	movlw	3
 10410  004528  141B               	andwf	??_memset^0,w,c
 10411  00452A  6E1D               	movwf	memset@k^0,c
 10412  00452C  6A1E               	clrf	(memset@k+1)^0,c
 10413  00452E  501D               	movf	memset@k^0,w,c
 10414  004530  261F               	addwf	memset@s^0,f,c
 10415  004532  501E               	movf	(memset@k+1)^0,w,c
 10416  004534  2220               	addwfc	(memset@s+1)^0,f,c
 10417  004536  501D               	movf	memset@k^0,w,c
 10418  004538  5E19               	subwf	memset@n^0,f,c
 10419  00453A  501E               	movf	(memset@k+1)^0,w,c
 10420  00453C  5A1A               	subwfb	(memset@n+1)^0,f,c
 10421  00453E  0EFC               	movlw	252
 10422  004540  1619               	andwf	memset@n^0,f,c
 10423  004542  0EFF               	movlw	255
 10424  004544  161A               	andwf	(memset@n+1)^0,f,c
 10425  004546  D00E               	goto	l10254
 10426  004548                     l10248:
 10427  004548  0060  F07F  FFD9   	movff	memset@s,fsr2l
 10428  00454E  0060  F083  FFDA   	movff	memset@s+1,fsr2h
 10429  004554  0060  F05F  FFDF   	movff	memset@c,indf2
 10430  00455A  0619               	decf	memset@n^0,f,c
 10431  00455C  A0D8               	btfss	status,0,c
 10432  00455E  061A               	decf	(memset@n+1)^0,f,c
 10433  004560  4A1F               	infsnz	memset@s^0,f,c
 10434  004562  2A20               	incf	(memset@s+1)^0,f,c
 10435  004564                     l10254:
 10436  004564  5019               	movf	memset@n^0,w,c
 10437  004566  101A               	iorwf	(memset@n+1)^0,w,c
 10438  004568  B4D8               	btfsc	status,2,c
 10439  00456A  0012               	return	
 10440  00456C  D7ED               	goto	l10248
 10441  00456E                     __end_of_memset:
 10442                           	callstack 0
 10443                           
 10444 ;; *************** function _linux_putc *****************
 10445 ;; Defined at:
 10446 ;;		line 47 in file "scdm.c"
 10447 ;; Parameters:    Size  Location     Type
 10448 ;;  data            2   43[COMRAM] PTR unsigned char 
 10449 ;;		 -> STR_10(3), cli_read@i(1), 
 10450 ;;  a_len           1   45[COMRAM] unsigned char 
 10451 ;; Auto vars:     Size  Location     Type
 10452 ;;		None
 10453 ;; Return value:  Size  Location     Type
 10454 ;;                  1    wreg      unsigned char 
 10455 ;; Registers used:
 10456 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10457 ;; Tracked objects:
 10458 ;;		On entry : 0/0
 10459 ;;		On exit  : 0/0
 10460 ;;		Unchanged: 0/0
 10461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10462 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10465 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10466 ;;Total ram usage:        3 bytes
 10467 ;; Hardware stack levels used: 1
 10468 ;; Hardware stack levels required when called: 9
 10469 ;; This function calls:
 10470 ;;		_puts
 10471 ;; This function is called by:
 10472 ;;		_cli_read
 10473 ;; This function uses a non-reentrant model
 10474 ;;
 10475                           
 10476                           	psect	text35
 10477  005C7E                     __ptext35:
 10478                           	callstack 0
 10479  005C7E                     _linux_putc:
 10480                           	callstack 20
 10481                           
 10482                           ;scdm.c: 47: uint8_t linux_putc(uint8_t *data, uint8_t a_len);scdm.c: 48: {;scdm.c: 49: 
      +                           puts((const char *) data);
 10483                           
 10484                           ;incstack = 0
 10485  005C7E  C02C  F029         	movff	linux_putc@data,puts@s
 10486  005C82  C02D  F02A         	movff	linux_putc@data+1,puts@s+1
 10487  005C86  EC82  F02C         	call	_puts	;wreg free
 10488  005C8A  0012               	return		;funcret
 10489  005C8C                     __end_of_linux_putc:
 10490                           	callstack 0
 10491                           
 10492 ;; *************** function _linux_getc *****************
 10493 ;; Defined at:
 10494 ;;		line 37 in file "scdm.c"
 10495 ;; Parameters:    Size  Location     Type
 10496 ;;  a_data          1   21[COMRAM] PTR unsigned char 
 10497 ;;		 -> cli_read@i(1), 
 10498 ;; Auto vars:     Size  Location     Type
 10499 ;;		None
 10500 ;; Return value:  Size  Location     Type
 10501 ;;                  1    wreg      unsigned char 
 10502 ;; Registers used:
 10503 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10504 ;; Tracked objects:
 10505 ;;		On entry : 3F/0
 10506 ;;		On exit  : 6/0
 10507 ;;		Unchanged: 0/0
 10508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10509 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10511 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10512 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10513 ;;Total ram usage:        2 bytes
 10514 ;; Hardware stack levels used: 1
 10515 ;; Hardware stack levels required when called: 5
 10516 ;; This function calls:
 10517 ;;		_UART1_Read
 10518 ;;		_UART1_is_rx_ready
 10519 ;; This function is called by:
 10520 ;;		_cli_read
 10521 ;; This function uses a non-reentrant model
 10522 ;;
 10523                           
 10524                           	psect	text36
 10525  005AEE                     __ptext36:
 10526                           	callstack 0
 10527  005AEE                     _linux_getc:
 10528                           	callstack 24
 10529                           
 10530                           ; BSR set to: 0
 10531                           ;scdm.c: 37: uint8_t linux_getc(uint8_t *a_data);scdm.c: 38: {;scdm.c: 39:  if (UART1_is
      +                          _rx_ready()) {
 10532                           
 10533                           ;incstack = 0
 10534  005AEE  EC46  F02E         	call	_UART1_is_rx_ready	;wreg free
 10535  005AF2  0900               	iorlw	0
 10536  005AF4  B4D8               	btfsc	status,2,c
 10537  005AF6  D00B               	goto	l10418
 10538                           
 10539                           ; BSR set to: 0
 10540                           ;scdm.c: 40:   a_data[0] = UART1_Read();
 10541  005AF8  ECE8  F02B         	call	_UART1_Read	;wreg free
 10542  005AFC  6E17               	movwf	??_linux_getc^0,c
 10543  005AFE  5016               	movf	linux_getc@a_data^0,w,c
 10544  005B00  6ED9               	movwf	fsr2l,c
 10545  005B02  6ADA               	clrf	fsr2h,c
 10546  005B04  0060  F05F  FFDF   	movff	??_linux_getc,indf2
 10547                           
 10548                           ; BSR set to: 57
 10549                           ;scdm.c: 41:   return 1;
 10550  005B0A  0E01               	movlw	1
 10551  005B0C  0012               	return	
 10552  005B0E                     l10418:
 10553                           
 10554                           ; BSR set to: 0
 10555                           ;scdm.c: 43:   return 0;
 10556  005B0E  0E00               	movlw	0
 10557  005B10  0012               	return		;funcret
 10558  005B12                     __end_of_linux_getc:
 10559                           	callstack 0
 10560                           
 10561 ;; *************** function _UART1_is_rx_ready *****************
 10562 ;; Defined at:
 10563 ;;		line 161 in file "mcc_generated_files/uart1.c"
 10564 ;; Parameters:    Size  Location     Type
 10565 ;;		None
 10566 ;; Auto vars:     Size  Location     Type
 10567 ;;		None
 10568 ;; Return value:  Size  Location     Type
 10569 ;;                  1    wreg      _Bool 
 10570 ;; Registers used:
 10571 ;;		wreg, status,2
 10572 ;; Tracked objects:
 10573 ;;		On entry : 3F/0
 10574 ;;		On exit  : 3F/0
 10575 ;;		Unchanged: 3F/0
 10576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10581 ;;Total ram usage:        0 bytes
 10582 ;; Hardware stack levels used: 1
 10583 ;; Hardware stack levels required when called: 4
 10584 ;; This function calls:
 10585 ;;		Nothing
 10586 ;; This function is called by:
 10587 ;;		_linux_getc
 10588 ;; This function uses a non-reentrant model
 10589 ;;
 10590                           
 10591                           	psect	text37
 10592  005C8C                     __ptext37:
 10593                           	callstack 0
 10594  005C8C                     _UART1_is_rx_ready:
 10595                           	callstack 24
 10596                           
 10597                           ; BSR set to: 0
 10598                           ;mcc_generated_files/uart1.c: 163:     return (uart1RxCount ? 1 : 0);
 10599                           
 10600                           ;incstack = 0
 10601  005C8C  5046               	movf	_uart1RxCount^0,w,c	;volatile
 10602  005C8E  B4D8               	btfsc	status,2,c
 10603  005C90  D002               	goto	u12050
 10604  005C92  0E01               	movlw	1
 10605  005C94  0012               	return	
 10606  005C96                     u12050:
 10607  005C96  0E00               	movlw	0
 10608                           
 10609                           ; BSR set to: 0
 10610  005C98  0012               	return		;funcret
 10611  005C9A                     __end_of_UART1_is_rx_ready:
 10612                           	callstack 0
 10613                           
 10614 ;; *************** function _UART1_Read *****************
 10615 ;; Defined at:
 10616 ;;		line 180 in file "mcc_generated_files/uart1.c"
 10617 ;; Parameters:    Size  Location     Type
 10618 ;;		None
 10619 ;; Auto vars:     Size  Location     Type
 10620 ;;  readValue       1   20[COMRAM] unsigned char 
 10621 ;; Return value:  Size  Location     Type
 10622 ;;                  1    wreg      unsigned char 
 10623 ;; Registers used:
 10624 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10625 ;; Tracked objects:
 10626 ;;		On entry : 3F/0
 10627 ;;		On exit  : 3F/39
 10628 ;;		Unchanged: 0/0
 10629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10631 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10633 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10634 ;;Total ram usage:        1 bytes
 10635 ;; Hardware stack levels used: 1
 10636 ;; Hardware stack levels required when called: 4
 10637 ;; This function calls:
 10638 ;;		Nothing
 10639 ;; This function is called by:
 10640 ;;		_linux_getc
 10641 ;; This function uses a non-reentrant model
 10642 ;;
 10643                           
 10644                           	psect	text38
 10645  0057D0                     __ptext38:
 10646                           	callstack 0
 10647  0057D0                     _UART1_Read:
 10648                           	callstack 24
 10649                           
 10650                           ; BSR set to: 0
 10651                           ;mcc_generated_files/uart1.c: 184:     while(0 == uart1RxCount)
 10652                           
 10653                           ; BSR set to: 0
 10654                           ;mcc_generated_files/uart1.c: 184:     while(0 == uart1RxCount)
 10655                           
 10656                           ; BSR set to: 0
 10657                           ;incstack = 0
 10658  0057D0  5046               	movf	_uart1RxCount^0,w,c	;volatile
 10659  0057D2  B4D8               	btfsc	status,2,c
 10660  0057D4  D7FD               	goto	__ptext38
 10661                           
 10662                           ; BSR set to: 0
 10663                           ;mcc_generated_files/uart1.c: 188:     uart1RxLastError = uart1RxStatusBuffer[uart1RxTai
      +                          l];
 10664  0057D6  0E00               	movlw	low _uart1RxStatusBuffer
 10665  0057D8  2447               	addwf	_uart1RxTail^0,w,c	;volatile
 10666  0057DA  6ED9               	movwf	fsr2l,c
 10667  0057DC  6ADA               	clrf	fsr2h,c
 10668  0057DE  0E01               	movlw	high _uart1RxStatusBuffer
 10669  0057E0  22DA               	addwfc	fsr2h,f,c
 10670  0057E2  50DF               	movf	indf2,w,c
 10671  0057E4  6E45               	movwf	_uart1RxLastError^0,c	;volatile
 10672                           
 10673                           ;mcc_generated_files/uart1.c: 190:     readValue = uart1RxBuffer[uart1RxTail++];
 10674  0057E6  0E00               	movlw	low _uart1RxBuffer
 10675  0057E8  2447               	addwf	_uart1RxTail^0,w,c	;volatile
 10676  0057EA  6ED9               	movwf	fsr2l,c
 10677  0057EC  6ADA               	clrf	fsr2h,c
 10678  0057EE  0E02               	movlw	high _uart1RxBuffer
 10679  0057F0  22DA               	addwfc	fsr2h,f,c
 10680  0057F2  50DF               	movf	indf2,w,c
 10681  0057F4  6E15               	movwf	UART1_Read@readValue^0,c
 10682                           
 10683                           ; BSR set to: 0
 10684  0057F6  2A47               	incf	_uart1RxTail^0,f,c	;volatile
 10685                           
 10686                           ; BSR set to: 0
 10687                           ;mcc_generated_files/uart1.c: 191:     if(sizeof(uart1RxBuffer) <= uart1RxTail)
 10688  0057F8  0E3F               	movlw	63
 10689  0057FA  6447               	cpfsgt	_uart1RxTail^0,c
 10690  0057FC  D002               	goto	l10206
 10691                           
 10692                           ; BSR set to: 0
 10693                           ;mcc_generated_files/uart1.c: 192:     {;mcc_generated_files/uart1.c: 193:         uart1
      +                          RxTail = 0;
 10694  0057FE  0E00               	movlw	0
 10695  005800  6E47               	movwf	_uart1RxTail^0,c	;volatile
 10696  005802                     l10206:
 10697                           
 10698                           ; BSR set to: 0
 10699                           ;mcc_generated_files/uart1.c: 195:     PIE3bits.U1RXIE = 0;
 10700  005802  0139               	movlb	57	; () banked
 10701  005804  9793               	bcf	147,3,b	;volatile
 10702                           
 10703                           ; BSR set to: 57
 10704                           ;mcc_generated_files/uart1.c: 196:     uart1RxCount--;
 10705  005806  0646               	decf	_uart1RxCount^0,f,c	;volatile
 10706                           
 10707                           ; BSR set to: 57
 10708                           ;mcc_generated_files/uart1.c: 197:     PIE3bits.U1RXIE = 1;
 10709  005808  8793               	bsf	147,3,b	;volatile
 10710                           
 10711                           ; BSR set to: 57
 10712                           ;mcc_generated_files/uart1.c: 199:     return readValue;
 10713  00580A  5015               	movf	UART1_Read@readValue^0,w,c
 10714                           
 10715                           ; BSR set to: 57
 10716  00580C  0012               	return		;funcret
 10717  00580E                     __end_of_UART1_Read:
 10718                           	callstack 0
 10719                           
 10720 ;; *************** function __cli_interpret_cmd *****************
 10721 ;; Defined at:
 10722 ;;		line 53 in file "scdm.c"
 10723 ;; Parameters:    Size  Location     Type
 10724 ;;  a_ctx           2   45[COMRAM] PTR struct _t_cli_ctx
 10725 ;;		 -> cli_ctx(131), 
 10726 ;; Auto vars:     Size  Location     Type
 10727 ;;  i               1   48[COMRAM] unsigned char 
 10728 ;;  ret             1   47[COMRAM] unsigned char 
 10729 ;; Return value:  Size  Location     Type
 10730 ;;                  1    wreg      unsigned char 
 10731 ;; Registers used:
 10732 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 10733 ;; Tracked objects:
 10734 ;;		On entry : 0/0
 10735 ;;		On exit  : 0/0
 10736 ;;		Unchanged: 0/0
 10737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10738 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10739 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10740 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10741 ;;      Totals:         4      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10742 ;;Total ram usage:       14 bytes
 10743 ;; Hardware stack levels used: 1
 10744 ;; Hardware stack levels required when called: 10
 10745 ;; This function calls:
 10746 ;;		Absolute function
 10747 ;;		_fh_hi
 10748 ;;		_fh_ho
 10749 ;;		_fh_hw
 10750 ;;		_strlen
 10751 ;;		_strncmp
 10752 ;; This function is called by:
 10753 ;;		_cli_read
 10754 ;; This function uses a non-reentrant model
 10755 ;;
 10756                           
 10757                           	psect	text39
 10758  003C4C                     __ptext39:
 10759                           	callstack 0
 10760  003C4C                     __cli_interpret_cmd:
 10761                           	callstack 19
 10762                           
 10763                           ;scdm.c: 53: static uint8_t _cli_interpret_cmd(t_cli_ctx *a_ctx);scdm.c: 54: {;scdm.c: 5
      +                          5:  uint8_t i = 0;
 10764                           
 10765                           ; BSR set to: 57
 10766                           ;incstack = 0
 10767  003C4C  0E00               	movlw	0
 10768  003C4E  6E31               	movwf	__cli_interpret_cmd@i^0,c
 10769                           
 10770                           ;scdm.c: 56:  uint8_t ret = E_CMD_OK;
 10771  003C50  0E00               	movlw	0
 10772  003C52  6E30               	movwf	__cli_interpret_cmd@ret^0,c
 10773                           
 10774                           ;scdm.c: 58:  if (!strlen(a_ctx->cmd)) {
 10775  003C54  0E02               	movlw	2
 10776  003C56  242E               	addwf	__cli_interpret_cmd@a_ctx^0,w,c
 10777  003C58  6E15               	movwf	strlen@s^0,c
 10778  003C5A  0E00               	movlw	0
 10779  003C5C  202F               	addwfc	(__cli_interpret_cmd@a_ctx+1)^0,w,c
 10780  003C5E  6E16               	movwf	(strlen@s+1)^0,c
 10781  003C60  EC19  F02B         	call	_strlen	;wreg free
 10782  003C64  5015               	movf	?_strlen^0,w,c
 10783  003C66  1016               	iorwf	(?_strlen+1)^0,w,c
 10784  003C68  A4D8               	btfss	status,2,c
 10785  003C6A  D002               	goto	l10434
 10786                           
 10787                           ;scdm.c: 59:   return E_CMD_EMPTY;
 10788  003C6C  0E03               	movlw	3
 10789  003C6E  0012               	return	
 10790  003C70                     l10434:
 10791                           
 10792                           ;scdm.c: 62:  if (strlen(a_ctx->cmd) < 2) {
 10793  003C70  0E02               	movlw	2
 10794  003C72  242E               	addwf	__cli_interpret_cmd@a_ctx^0,w,c
 10795  003C74  6E15               	movwf	strlen@s^0,c
 10796  003C76  0E00               	movlw	0
 10797  003C78  202F               	addwfc	(__cli_interpret_cmd@a_ctx+1)^0,w,c
 10798  003C7A  6E16               	movwf	(strlen@s+1)^0,c
 10799  003C7C  EC19  F02B         	call	_strlen	;wreg free
 10800  003C80  5016               	movf	(?_strlen+1)^0,w,c
 10801  003C82  E103               	bnz	u12181
 10802  003C84  0E02               	movlw	2
 10803  003C86  5C15               	subwf	?_strlen^0,w,c
 10804  003C88  B0D8               	btfsc	status,0,c
 10805  003C8A                     u12181:
 10806  003C8A  D082               	goto	l10446
 10807                           
 10808                           ;scdm.c: 63:   return E_CMD_TOO_SHORT;
 10809  003C8C  0E02               	movlw	2
 10810  003C8E  0012               	return	
 10811  003C90                     l10440:
 10812                           
 10813                           ; BSR set to: 0
 10814                           ;scdm.c: 67:   if (!strncmp(a_ctx->cmds[i].cmd, a_ctx->cmd, strlen(a_ctx->cmds[i].cmd)))
      +                           {
 10815  003C90  5031               	movf	__cli_interpret_cmd@i^0,w,c
 10816  003C92  0D04               	mullw	4
 10817  003C94  006F FFCC  F060    	movff	prodl,??__cli_interpret_cmd
 10818  003C9A  006F FFD0  F061    	movff	prodh,??__cli_interpret_cmd+1
 10819  003CA0  0060  F0BB  FFD9   	movff	__cli_interpret_cmd@a_ctx,fsr2l
 10820  003CA6  0060  F0BF  FFDA   	movff	__cli_interpret_cmd@a_ctx+1,fsr2h
 10821  003CAC  006F FF78  F062    	movff	postinc2,??__cli_interpret_cmd+2
 10822  003CB2  006F FF74  F063    	movff	postdec2,??__cli_interpret_cmd+3
 10823  003CB8  5160               	movf	??__cli_interpret_cmd& (0+255),w,b
 10824  003CBA  2562               	addwf	(??__cli_interpret_cmd+2)& (0+255),w,b
 10825  003CBC  6ED9               	movwf	fsr2l,c
 10826  003CBE  5161               	movf	(??__cli_interpret_cmd+1)& (0+255),w,b
 10827  003CC0  2163               	addwfc	(??__cli_interpret_cmd+3)& (0+255),w,b
 10828  003CC2  6EDA               	movwf	fsr2h,c
 10829  003CC4  50DF               	movf	indf2,w,c
 10830  003CC6  6F64               	movwf	(??__cli_interpret_cmd+4)& (0+255),b
 10831  003CC8  C064  F019         	movff	??__cli_interpret_cmd+4,strncmp@_l
 10832  003CCC  5019               	movf	strncmp@_l^0,w,c
 10833  003CCE  A4D8               	btfss	status,2,c
 10834  003CD0  0E20               	movlw	high __smallconst
 10835  003CD2  6E1A               	movwf	(strncmp@_l+1)^0,c
 10836  003CD4  0E02               	movlw	2
 10837  003CD6  242E               	addwf	__cli_interpret_cmd@a_ctx^0,w,c
 10838  003CD8  6E1B               	movwf	strncmp@_r^0,c
 10839  003CDA  0E00               	movlw	0
 10840  003CDC  202F               	addwfc	(__cli_interpret_cmd@a_ctx+1)^0,w,c
 10841  003CDE  6E1C               	movwf	(strncmp@_r+1)^0,c
 10842  003CE0  5031               	movf	__cli_interpret_cmd@i^0,w,c
 10843  003CE2  0D04               	mullw	4
 10844  003CE4  006F FFCC  F065    	movff	prodl,??__cli_interpret_cmd+5
 10845  003CEA  006F FFD0  F066    	movff	prodh,??__cli_interpret_cmd+6
 10846  003CF0  0060  F0BB  FFD9   	movff	__cli_interpret_cmd@a_ctx,fsr2l
 10847  003CF6  0060  F0BF  FFDA   	movff	__cli_interpret_cmd@a_ctx+1,fsr2h
 10848  003CFC  006F FF78  F067    	movff	postinc2,??__cli_interpret_cmd+7
 10849  003D02  006F FF74  F068    	movff	postdec2,??__cli_interpret_cmd+8
 10850  003D08  5165               	movf	(??__cli_interpret_cmd+5)& (0+255),w,b
 10851  003D0A  2567               	addwf	(??__cli_interpret_cmd+7)& (0+255),w,b
 10852  003D0C  6ED9               	movwf	fsr2l,c
 10853  003D0E  5166               	movf	(??__cli_interpret_cmd+6)& (0+255),w,b
 10854  003D10  2168               	addwfc	(??__cli_interpret_cmd+8)& (0+255),w,b
 10855  003D12  6EDA               	movwf	fsr2h,c
 10856  003D14  50DF               	movf	indf2,w,c
 10857  003D16  6F69               	movwf	(??__cli_interpret_cmd+9)& (0+255),b
 10858  003D18  C069  F015         	movff	??__cli_interpret_cmd+9,strlen@s
 10859  003D1C  5015               	movf	strlen@s^0,w,c
 10860  003D1E  A4D8               	btfss	status,2,c
 10861  003D20  0E20               	movlw	high __smallconst
 10862  003D22  6E16               	movwf	(strlen@s+1)^0,c
 10863  003D24  EC19  F02B         	call	_strlen	;wreg free
 10864  003D28  C015  F01D         	movff	?_strlen,strncmp@n
 10865  003D2C  C016  F01E         	movff	?_strlen+1,strncmp@n+1
 10866  003D30  ECB5  F020         	call	_strncmp	;wreg free
 10867  003D34  5019               	movf	?_strncmp^0,w,c
 10868  003D36  101A               	iorwf	(?_strncmp+1)^0,w,c
 10869  003D38  A4D8               	btfss	status,2,c
 10870  003D3A  D029               	goto	l10444
 10871                           
 10872                           ;scdm.c: 69:    a_ctx->cmds[i].fh((void *) a_ctx);
 10873  003D3C  C02E  F02C         	movff	__cli_interpret_cmd@a_ctx,fh_ho@a_data
 10874  003D40  C02F  F02D         	movff	__cli_interpret_cmd@a_ctx+1,fh_ho@a_data+1
 10875  003D44  5031               	movf	__cli_interpret_cmd@i^0,w,c
 10876  003D46  0D04               	mullw	4
 10877  003D48  0060  F0BB  FFD9   	movff	__cli_interpret_cmd@a_ctx,fsr2l
 10878  003D4E  0060  F0BF  FFDA   	movff	__cli_interpret_cmd@a_ctx+1,fsr2h
 10879  003D54  006F FF78  F060    	movff	postinc2,??__cli_interpret_cmd
 10880  003D5A  006F FF74  F061    	movff	postdec2,??__cli_interpret_cmd+1
 10881  003D60  50F3               	movf	243,w,c
 10882  003D62  0100               	movlb	0	; () banked
 10883  003D64  2760               	addwf	??__cli_interpret_cmd& (0+255),f,b
 10884  003D66  50F4               	movf	244,w,c
 10885  003D68  2361               	addwfc	(??__cli_interpret_cmd+1)& (0+255),f,b
 10886  003D6A  0E01               	movlw	1
 10887  003D6C  2560               	addwf	??__cli_interpret_cmd& (0+255),w,b
 10888  003D6E  6ED9               	movwf	fsr2l,c
 10889  003D70  0E00               	movlw	0
 10890  003D72  2161               	addwfc	(??__cli_interpret_cmd+1)& (0+255),w,b
 10891  003D74  6EDA               	movwf	fsr2h,c
 10892  003D76  D801               	call	u12208
 10893  003D78  D029               	goto	u12210
 10894  003D7A                     u12208:
 10895  003D7A  0005               	push	
 10896  003D7C  6EFA               	movwf	pclath,c
 10897  003D7E  50DE               	movf	postinc2,w,c
 10898  003D80  6EFD               	movwf	tosl,c
 10899  003D82  50DE               	movf	postinc2,w,c
 10900  003D84  6EFE               	movwf	tosh,c
 10901  003D86  50DE               	movf	postinc2,w,c
 10902  003D88  6EFF               	movwf	tosu,c
 10903  003D8A  50FA               	movf	pclath,w,c
 10904  003D8C  0012               	return		;indir
 10905  003D8E                     l10444:
 10906                           
 10907                           ;scdm.c: 72:   i++;
 10908  003D8E  2A31               	incf	__cli_interpret_cmd@i^0,f,c
 10909  003D90                     l10446:
 10910                           
 10911                           ;scdm.c: 66:  while (a_ctx->cmds[i].fh) {
 10912  003D90  5031               	movf	__cli_interpret_cmd@i^0,w,c
 10913  003D92  0D04               	mullw	4
 10914  003D94  0060  F0BB  FFD9   	movff	__cli_interpret_cmd@a_ctx,fsr2l
 10915  003D9A  0060  F0BF  FFDA   	movff	__cli_interpret_cmd@a_ctx+1,fsr2h
 10916  003DA0  006F FF78  F060    	movff	postinc2,??__cli_interpret_cmd
 10917  003DA6  006F FF74  F061    	movff	postdec2,??__cli_interpret_cmd+1
 10918  003DAC  50F3               	movf	243,w,c
 10919  003DAE  0100               	movlb	0	; () banked
 10920  003DB0  2760               	addwf	??__cli_interpret_cmd& (0+255),f,b
 10921  003DB2  50F4               	movf	244,w,c
 10922  003DB4  2361               	addwfc	(??__cli_interpret_cmd+1)& (0+255),f,b
 10923  003DB6  0E01               	movlw	1
 10924  003DB8  2560               	addwf	??__cli_interpret_cmd& (0+255),w,b
 10925  003DBA  6ED9               	movwf	fsr2l,c
 10926  003DBC  0E00               	movlw	0
 10927  003DBE  2161               	addwfc	(??__cli_interpret_cmd+1)& (0+255),w,b
 10928  003DC0  6EDA               	movwf	fsr2h,c
 10929  003DC2  50DE               	movf	postinc2,w,c
 10930  003DC4  10DE               	iorwf	postinc2,w,c
 10931  003DC6  10DE               	iorwf	postinc2,w,c
 10932  003DC8  A4D8               	btfss	status,2,c
 10933  003DCA  D762               	goto	l10440
 10934  003DCC                     u12210:
 10935                           
 10936                           ;scdm.c: 75:  if (!a_ctx->cmds[i].fh) {
 10937  003DCC  5031               	movf	__cli_interpret_cmd@i^0,w,c
 10938  003DCE  0D04               	mullw	4
 10939  003DD0  0060  F0BB  FFD9   	movff	__cli_interpret_cmd@a_ctx,fsr2l
 10940  003DD6  0060  F0BF  FFDA   	movff	__cli_interpret_cmd@a_ctx+1,fsr2h
 10941  003DDC  006F FF78  F060    	movff	postinc2,??__cli_interpret_cmd
 10942  003DE2  006F FF74  F061    	movff	postdec2,??__cli_interpret_cmd+1
 10943  003DE8  50F3               	movf	243,w,c
 10944  003DEA  0100               	movlb	0	; () banked
 10945  003DEC  2760               	addwf	??__cli_interpret_cmd& (0+255),f,b
 10946  003DEE  50F4               	movf	244,w,c
 10947  003DF0  2361               	addwfc	(??__cli_interpret_cmd+1)& (0+255),f,b
 10948  003DF2  0E01               	movlw	1
 10949  003DF4  2560               	addwf	??__cli_interpret_cmd& (0+255),w,b
 10950  003DF6  6ED9               	movwf	fsr2l,c
 10951  003DF8  0E00               	movlw	0
 10952  003DFA  2161               	addwfc	(??__cli_interpret_cmd+1)& (0+255),w,b
 10953  003DFC  6EDA               	movwf	fsr2h,c
 10954  003DFE  50DE               	movf	postinc2,w,c
 10955  003E00  10DE               	iorwf	postinc2,w,c
 10956  003E02  10DE               	iorwf	postinc2,w,c
 10957  003E04  A4D8               	btfss	status,2,c
 10958  003E06  D002               	goto	l1120
 10959                           
 10960                           ; BSR set to: 0
 10961                           ;scdm.c: 76:   ret = E_CMD_NOT_FOUND;
 10962  003E08  0E01               	movlw	1
 10963  003E0A  6E30               	movwf	__cli_interpret_cmd@ret^0,c
 10964  003E0C                     l1120:
 10965                           
 10966                           ; BSR set to: 0
 10967                           ;scdm.c: 79:  return ret;
 10968  003E0C  5030               	movf	__cli_interpret_cmd@ret^0,w,c
 10969  003E0E  0012               	return		;funcret
 10970  003E10                     __end_of__cli_interpret_cmd:
 10971                           	callstack 0
 10972                           
 10973 ;; *************** function _strncmp *****************
 10974 ;; Defined at:
 10975 ;;		line 3 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/strncmp.c"
 10976 ;; Parameters:    Size  Location     Type
 10977 ;;  _l              2   24[COMRAM] PTR const unsigned char 
 10978 ;;		 -> vfpfcnvrt@ct(3), STR_9(21), NULL(0), STR_8(3), 
 10979 ;;		 -> STR_7(3), STR_6(3), STR_5(74), 
 10980 ;;  _r              2   26[COMRAM] PTR const unsigned char 
 10981 ;;		 -> cli_ctx.cmd(128), STR_26(4), STR_21(3), cli_ctx(131), 
 10982 ;;  n               2   28[COMRAM] unsigned int 
 10983 ;; Auto vars:     Size  Location     Type
 10984 ;;  r               2   34[COMRAM] PTR const unsigned char 
 10985 ;;		 -> cli_ctx.cmd(128), STR_26(4), STR_21(3), cli_ctx(131), 
 10986 ;;  l               2   32[COMRAM] PTR const unsigned char 
 10987 ;;		 -> vfpfcnvrt@ct(3), STR_9(21), NULL(0), STR_8(3), 
 10988 ;;		 -> STR_7(3), STR_6(3), STR_5(74), 
 10989 ;; Return value:  Size  Location     Type
 10990 ;;                  2   24[COMRAM] int 
 10991 ;; Registers used:
 10992 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 10993 ;; Tracked objects:
 10994 ;;		On entry : 0/0
 10995 ;;		On exit  : 0/0
 10996 ;;		Unchanged: 0/0
 10997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10998 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10999 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11000 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11001 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11002 ;;Total ram usage:       12 bytes
 11003 ;; Hardware stack levels used: 1
 11004 ;; Hardware stack levels required when called: 4
 11005 ;; This function calls:
 11006 ;;		Nothing
 11007 ;; This function is called by:
 11008 ;;		__cli_interpret_cmd
 11009 ;;		_vfpfcnvrt
 11010 ;; This function uses a non-reentrant model
 11011 ;;
 11012                           
 11013                           	psect	text40
 11014  00416A                     __ptext40:
 11015                           	callstack 0
 11016  00416A                     _strncmp:
 11017                           	callstack 21
 11018                           
 11019                           ;incstack = 0
 11020  00416A  C019  F021         	movff	strncmp@_l,strncmp@l
 11021  00416E  C01A  F022         	movff	strncmp@_l+1,strncmp@l+1
 11022  004172  C01B  F023         	movff	strncmp@_r,strncmp@r
 11023  004176  C01C  F024         	movff	strncmp@_r+1,strncmp@r+1
 11024  00417A  061D               	decf	strncmp@n^0,f,c
 11025  00417C  A0D8               	btfss	status,0,c
 11026  00417E  061E               	decf	(strncmp@n+1)^0,f,c
 11027  004180  281D               	incf	strncmp@n^0,w,c
 11028  004182  E10F               	bnz	l9560
 11029  004184  281E               	incf	(strncmp@n+1)^0,w,c
 11030  004186  A4D8               	btfss	status,2,c
 11031  004188  D00C               	goto	l9560
 11032  00418A  0E00               	movlw	0
 11033  00418C  6E1A               	movwf	(?_strncmp+1)^0,c
 11034  00418E  0E00               	movlw	0
 11035  004190  6E19               	movwf	?_strncmp^0,c
 11036  004192  0012               	return	
 11037  004194                     l9558:
 11038  004194  4A21               	infsnz	strncmp@l^0,f,c
 11039  004196  2A22               	incf	(strncmp@l+1)^0,f,c
 11040  004198  4A23               	infsnz	strncmp@r^0,f,c
 11041  00419A  2A24               	incf	(strncmp@r+1)^0,f,c
 11042  00419C  061D               	decf	strncmp@n^0,f,c
 11043  00419E  A0D8               	btfss	status,0,c
 11044  0041A0  061E               	decf	(strncmp@n+1)^0,f,c
 11045  0041A2                     l9560:
 11046  0041A2  0060  F087  FFF6   	movff	strncmp@l,tblptrl
 11047  0041A8  0060  F08B  FFF7   	movff	strncmp@l+1,tblptrh
 11048  0041AE  0E00               	movlw	low (__smallconst shr (0+16))
 11049  0041B0  6EF8               	movwf	tblptru,c
 11050  0041B2  0E1F               	movlw	(high __ramtop+-1)
 11051  0041B4  64F7               	cpfsgt	tblptrh,c
 11052  0041B6  D003               	bra	u11057
 11053  0041B8  0008               	tblrd		*
 11054  0041BA  50F5               	movf	tablat,w,c
 11055  0041BC  D007               	bra	u11050
 11056  0041BE                     u11057:
 11057  0041BE  006F FFDB FFE1     	movff	tblptrl,fsr1l
 11058  0041C4  006F FFDF FFE2     	movff	tblptrh,fsr1h
 11059  0041CA  50E7               	movf	indf1,w,c
 11060  0041CC                     u11050:
 11061  0041CC  0900               	iorlw	0
 11062  0041CE  B4D8               	btfsc	status,2,c
 11063  0041D0  D04A               	goto	u11110
 11064  0041D2  0060  F08F  FFF6   	movff	strncmp@r,tblptrl
 11065  0041D8  0060  F093  FFF7   	movff	strncmp@r+1,tblptrh
 11066  0041DE  0E00               	movlw	low (__smallconst shr (0+16))
 11067  0041E0  6EF8               	movwf	tblptru,c
 11068  0041E2  0E1F               	movlw	(high __ramtop+-1)
 11069  0041E4  64F7               	cpfsgt	tblptrh,c
 11070  0041E6  D003               	bra	u11077
 11071  0041E8  0008               	tblrd		*
 11072  0041EA  50F5               	movf	tablat,w,c
 11073  0041EC  D007               	bra	u11070
 11074  0041EE                     u11077:
 11075  0041EE  006F FFDB FFE1     	movff	tblptrl,fsr1l
 11076  0041F4  006F FFDF FFE2     	movff	tblptrh,fsr1h
 11077  0041FA  50E7               	movf	indf1,w,c
 11078  0041FC                     u11070:
 11079  0041FC  0900               	iorlw	0
 11080  0041FE  B4D8               	btfsc	status,2,c
 11081  004200  D032               	goto	u11110
 11082  004202  501D               	movf	strncmp@n^0,w,c
 11083  004204  101E               	iorwf	(strncmp@n+1)^0,w,c
 11084  004206  B4D8               	btfsc	status,2,c
 11085  004208  D02E               	goto	u11110
 11086  00420A  0060  F08F  FFF6   	movff	strncmp@r,tblptrl
 11087  004210  0060  F093  FFF7   	movff	strncmp@r+1,tblptrh
 11088  004216  0E00               	movlw	low (__smallconst shr (0+16))
 11089  004218  6EF8               	movwf	tblptru,c
 11090  00421A  0E1F               	movlw	(high __ramtop+-1)
 11091  00421C  64F7               	cpfsgt	tblptrh,c
 11092  00421E  D003               	bra	u11107
 11093  004220  0008               	tblrd		*
 11094  004222  50F5               	movf	tablat,w,c
 11095  004224  D007               	bra	u11100
 11096  004226                     u11107:
 11097  004226  006F FFDB FFE1     	movff	tblptrl,fsr1l
 11098  00422C  006F FFDF FFE2     	movff	tblptrh,fsr1h
 11099  004232  50E7               	movf	indf1,w,c
 11100  004234                     u11100:
 11101  004234  6E1F               	movwf	??_strncmp^0,c
 11102  004236  0060  F087  FFF6   	movff	strncmp@l,tblptrl
 11103  00423C  0060  F08B  FFF7   	movff	strncmp@l+1,tblptrh
 11104  004242  0E00               	movlw	low (__smallconst shr (0+16))
 11105  004244  6EF8               	movwf	tblptru,c
 11106  004246  0E1F               	movlw	(high __ramtop+-1)
 11107  004248  64F7               	cpfsgt	tblptrh,c
 11108  00424A  D003               	bra	u11117
 11109  00424C  0008               	tblrd		*
 11110  00424E  50F5               	movf	tablat,w,c
 11111  004250  D007               	bra	u11115
 11112  004252                     u11117:
 11113  004252  006F FFDB FFE1     	movff	tblptrl,fsr1l
 11114  004258  006F FFDF FFE2     	movff	tblptrh,fsr1h
 11115  00425E  50E7               	movf	indf1,w,c
 11116  004260                     u11115:
 11117  004260  181F               	xorwf	??_strncmp^0,w,c
 11118  004262  B4D8               	btfsc	status,2,c
 11119  004264  D797               	goto	l9558
 11120  004266                     u11110:
 11121  004266  0060  F087  FFF6   	movff	strncmp@l,tblptrl
 11122  00426C  0060  F08B  FFF7   	movff	strncmp@l+1,tblptrh
 11123  004272  0E00               	movlw	low (__smallconst shr (0+16))
 11124  004274  6EF8               	movwf	tblptru,c
 11125  004276  0E1F               	movlw	(high __ramtop+-1)
 11126  004278  64F7               	cpfsgt	tblptrh,c
 11127  00427A  D003               	bra	u11127
 11128  00427C  0008               	tblrd		*
 11129  00427E  50F5               	movf	tablat,w,c
 11130  004280  D007               	bra	u11120
 11131  004282                     u11127:
 11132  004282  006F FFDB FFE1     	movff	tblptrl,fsr1l
 11133  004288  006F FFDF FFE2     	movff	tblptrh,fsr1h
 11134  00428E  50E7               	movf	indf1,w,c
 11135  004290                     u11120:
 11136  004290  6E1F               	movwf	??_strncmp^0,c
 11137  004292  0060  F08F  FFF6   	movff	strncmp@r,tblptrl
 11138  004298  0060  F093  FFF7   	movff	strncmp@r+1,tblptrh
 11139  00429E  0E00               	movlw	low (__smallconst shr (0+16))
 11140  0042A0  6EF8               	movwf	tblptru,c
 11141  0042A2  0E1F               	movlw	(high __ramtop+-1)
 11142  0042A4  64F7               	cpfsgt	tblptrh,c
 11143  0042A6  D003               	bra	u11137
 11144  0042A8  0008               	tblrd		*
 11145  0042AA  50F5               	movf	tablat,w,c
 11146  0042AC  D007               	bra	u11130
 11147  0042AE                     u11137:
 11148  0042AE  006F FFDB FFE1     	movff	tblptrl,fsr1l
 11149  0042B4  006F FFDF FFE2     	movff	tblptrh,fsr1h
 11150  0042BA  50E7               	movf	indf1,w,c
 11151  0042BC                     u11130:
 11152  0042BC  6E20               	movwf	(??_strncmp+1)^0,c
 11153  0042BE  5020               	movf	(??_strncmp+1)^0,w,c
 11154  0042C0  5C1F               	subwf	??_strncmp^0,w,c
 11155  0042C2  6E19               	movwf	?_strncmp^0,c
 11156  0042C4  6A1A               	clrf	(?_strncmp+1)^0,c
 11157  0042C6  A0D8               	btfss	status,0,c
 11158  0042C8  061A               	decf	(?_strncmp+1)^0,f,c
 11159  0042CA  0012               	return		;funcret
 11160  0042CC                     __end_of_strncmp:
 11161                           	callstack 0
 11162                           
 11163 ;; *************** function _strlen *****************
 11164 ;; Defined at:
 11165 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/strlen.c"
 11166 ;; Parameters:    Size  Location     Type
 11167 ;;  s               2   20[COMRAM] PTR const unsigned char 
 11168 ;;		 -> cli_ctx.cmd(128), ?_printf(2), stoa@nuls(7), dbuf(80), 
 11169 ;;		 -> ?_sprintf(2), NULL(0), STR_8(3), STR_7(3), 
 11170 ;;		 -> STR_6(3), cli_ctx(131), STR_2(9), STR_1(12), 
 11171 ;; Auto vars:     Size  Location     Type
 11172 ;;  a               2   22[COMRAM] PTR const unsigned char 
 11173 ;;		 -> cli_ctx.cmd(128), ?_printf(2), stoa@nuls(7), dbuf(80), 
 11174 ;;		 -> ?_sprintf(2), NULL(0), STR_8(3), STR_7(3), 
 11175 ;;		 -> STR_6(3), cli_ctx(131), STR_2(9), STR_1(12), 
 11176 ;; Return value:  Size  Location     Type
 11177 ;;                  2   20[COMRAM] unsigned int 
 11178 ;; Registers used:
 11179 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 11180 ;; Tracked objects:
 11181 ;;		On entry : 0/0
 11182 ;;		On exit  : 0/0
 11183 ;;		Unchanged: 0/0
 11184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11185 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11186 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11188 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11189 ;;Total ram usage:        4 bytes
 11190 ;; Hardware stack levels used: 1
 11191 ;; Hardware stack levels required when called: 4
 11192 ;; This function calls:
 11193 ;;		Nothing
 11194 ;; This function is called by:
 11195 ;;		__cli_interpret_cmd
 11196 ;;		_pad
 11197 ;;		_stoa
 11198 ;; This function uses a non-reentrant model
 11199 ;;
 11200                           
 11201                           	psect	text41
 11202  005632                     __ptext41:
 11203                           	callstack 0
 11204  005632                     _strlen:
 11205                           	callstack 19
 11206                           
 11207                           ;incstack = 0
 11208  005632  C015  F017         	movff	strlen@s,strlen@a
 11209  005636  C016  F018         	movff	strlen@s+1,strlen@a+1
 11210  00563A  D002               	goto	l8742
 11211  00563C                     l8740:
 11212  00563C  4A15               	infsnz	strlen@s^0,f,c
 11213  00563E  2A16               	incf	(strlen@s+1)^0,f,c
 11214  005640                     l8742:
 11215  005640  0060  F057  FFF6   	movff	strlen@s,tblptrl
 11216  005646  0060  F05B  FFF7   	movff	strlen@s+1,tblptrh
 11217  00564C  0E00               	movlw	low (__smallconst shr (0+16))
 11218  00564E  6EF8               	movwf	tblptru,c
 11219  005650  0E1F               	movlw	(high __ramtop+-1)
 11220  005652  64F7               	cpfsgt	tblptrh,c
 11221  005654  D003               	bra	u9557
 11222  005656  0008               	tblrd		*
 11223  005658  50F5               	movf	tablat,w,c
 11224  00565A  D007               	bra	u9550
 11225  00565C                     u9557:
 11226  00565C  006F FFDB FFE1     	movff	tblptrl,fsr1l
 11227  005662  006F FFDF FFE2     	movff	tblptrh,fsr1h
 11228  005668  50E7               	movf	indf1,w,c
 11229  00566A                     u9550:
 11230  00566A  0900               	iorlw	0
 11231  00566C  A4D8               	btfss	status,2,c
 11232  00566E  D7E6               	goto	l8740
 11233  005670  5017               	movf	strlen@a^0,w,c
 11234  005672  5C15               	subwf	strlen@s^0,w,c
 11235  005674  6E15               	movwf	?_strlen^0,c
 11236  005676  5018               	movf	(strlen@a+1)^0,w,c
 11237  005678  5816               	subwfb	(strlen@s+1)^0,w,c
 11238  00567A  6E16               	movwf	(?_strlen+1)^0,c
 11239  00567C  0012               	return		;funcret
 11240  00567E                     __end_of_strlen:
 11241                           	callstack 0
 11242                           
 11243 ;; *************** function _fh_ho *****************
 11244 ;; Defined at:
 11245 ;;		line 102 in file "main.c"
 11246 ;; Parameters:    Size  Location     Type
 11247 ;;  a_data          2   43[COMRAM] PTR void 
 11248 ;;		 -> cli_ctx(131), 
 11249 ;; Auto vars:     Size  Location     Type
 11250 ;;		None
 11251 ;; Return value:  Size  Location     Type
 11252 ;;                  1    wreg      void 
 11253 ;; Registers used:
 11254 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11255 ;; Tracked objects:
 11256 ;;		On entry : 3F/0
 11257 ;;		On exit  : 0/0
 11258 ;;		Unchanged: 0/0
 11259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11260 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11263 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11264 ;;Total ram usage:        2 bytes
 11265 ;; Hardware stack levels used: 1
 11266 ;; Hardware stack levels required when called: 9
 11267 ;; This function calls:
 11268 ;;		_puts
 11269 ;; This function is called by:
 11270 ;;		__cli_interpret_cmd
 11271 ;; This function uses a non-reentrant model
 11272 ;;
 11273                           
 11274                           	psect	text42
 11275  005C5A                     __ptext42:
 11276                           	callstack 0
 11277  005C5A                     _fh_ho:
 11278                           	callstack 19
 11279                           
 11280                           ; BSR set to: 0
 11281                           ;main.c: 103:     puts(" ho      ");
 11282                           
 11283                           ;incstack = 0
 11284  005C5A  0E97               	movlw	low STR_4
 11285  005C5C  6E29               	movwf	puts@s^0,c
 11286  005C5E  5029               	movf	puts@s^0,w,c
 11287  005C60  A4D8               	btfss	status,2,c
 11288  005C62  0E20               	movlw	high __smallconst
 11289  005C64  6E2A               	movwf	(puts@s+1)^0,c
 11290  005C66  EC82  F02C         	call	_puts	;wreg free
 11291  005C6A  0012               	return		;funcret
 11292  005C6C                     __end_of_fh_ho:
 11293                           	callstack 0
 11294                           
 11295 ;; *************** function _fh_hi *****************
 11296 ;; Defined at:
 11297 ;;		line 98 in file "main.c"
 11298 ;; Parameters:    Size  Location     Type
 11299 ;;  a_data          2   43[COMRAM] PTR void 
 11300 ;;		 -> cli_ctx(131), 
 11301 ;; Auto vars:     Size  Location     Type
 11302 ;;		None
 11303 ;; Return value:  Size  Location     Type
 11304 ;;                  1    wreg      void 
 11305 ;; Registers used:
 11306 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11307 ;; Tracked objects:
 11308 ;;		On entry : 3F/0
 11309 ;;		On exit  : 0/0
 11310 ;;		Unchanged: 0/0
 11311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11312 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11315 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11316 ;;Total ram usage:        2 bytes
 11317 ;; Hardware stack levels used: 1
 11318 ;; Hardware stack levels required when called: 9
 11319 ;; This function calls:
 11320 ;;		_puts
 11321 ;; This function is called by:
 11322 ;;		__cli_interpret_cmd
 11323 ;; This function uses a non-reentrant model
 11324 ;;
 11325                           
 11326                           	psect	text43
 11327  005C6C                     __ptext43:
 11328                           	callstack 0
 11329  005C6C                     _fh_hi:
 11330                           	callstack 19
 11331                           
 11332                           ; BSR set to: 0
 11333                           ;main.c: 99:     puts(" hi      ");
 11334                           
 11335                           ;incstack = 0
 11336  005C6C  0E8D               	movlw	low STR_3
 11337  005C6E  6E29               	movwf	puts@s^0,c
 11338  005C70  5029               	movf	puts@s^0,w,c
 11339  005C72  A4D8               	btfss	status,2,c
 11340  005C74  0E20               	movlw	high __smallconst
 11341  005C76  6E2A               	movwf	(puts@s+1)^0,c
 11342  005C78  EC82  F02C         	call	_puts	;wreg free
 11343  005C7C  0012               	return		;funcret
 11344  005C7E                     __end_of_fh_hi:
 11345                           	callstack 0
 11346                           
 11347 ;; *************** function _fh_hw *****************
 11348 ;; Defined at:
 11349 ;;		line 94 in file "main.c"
 11350 ;; Parameters:    Size  Location     Type
 11351 ;;  a_data          2   43[COMRAM] PTR void 
 11352 ;;		 -> cli_ctx(131), 
 11353 ;; Auto vars:     Size  Location     Type
 11354 ;;		None
 11355 ;; Return value:  Size  Location     Type
 11356 ;;                  1    wreg      void 
 11357 ;; Registers used:
 11358 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11359 ;; Tracked objects:
 11360 ;;		On entry : 3F/0
 11361 ;;		On exit  : 0/0
 11362 ;;		Unchanged: 0/0
 11363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11364 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11367 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11368 ;;Total ram usage:        2 bytes
 11369 ;; Hardware stack levels used: 1
 11370 ;; Hardware stack levels required when called: 9
 11371 ;; This function calls:
 11372 ;;		_puts
 11373 ;; This function is called by:
 11374 ;;		__cli_interpret_cmd
 11375 ;; This function uses a non-reentrant model
 11376 ;;
 11377                           
 11378                           	psect	text44
 11379  005C9A                     __ptext44:
 11380                           	callstack 0
 11381  005C9A                     _fh_hw:
 11382                           	callstack 19
 11383                           
 11384                           ; BSR set to: 0
 11385                           ;main.c: 95:     puts((const char *) a_data);
 11386                           
 11387                           ;incstack = 0
 11388  005C9A  C02C  F029         	movff	fh_hw@a_data,puts@s
 11389  005C9E  C02D  F02A         	movff	fh_hw@a_data+1,puts@s+1
 11390  005CA2  EC82  F02C         	call	_puts	;wreg free
 11391  005CA6  0012               	return		;funcret
 11392  005CA8                     __end_of_fh_hw:
 11393                           	callstack 0
 11394                           
 11395 ;; *************** function _puts *****************
 11396 ;; Defined at:
 11397 ;;		line 3 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/puts.c"
 11398 ;; Parameters:    Size  Location     Type
 11399 ;;  s               2   40[COMRAM] PTR const unsigned char 
 11400 ;;		 -> cli_ctx.cmd(128), STR_10(3), cli_read@i(1), cmdm(28), 
 11401 ;;		 -> cli_ctx(131), STR_4(10), STR_3(10), 
 11402 ;; Auto vars:     Size  Location     Type
 11403 ;;  r               2    0        int 
 11404 ;; Return value:  Size  Location     Type
 11405 ;;                  2   40[COMRAM] int 
 11406 ;; Registers used:
 11407 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11408 ;; Tracked objects:
 11409 ;;		On entry : 0/2
 11410 ;;		On exit  : 0/0
 11411 ;;		Unchanged: 0/0
 11412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11413 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11414 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11416 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11417 ;;Total ram usage:        3 bytes
 11418 ;; Hardware stack levels used: 1
 11419 ;; Hardware stack levels required when called: 8
 11420 ;; This function calls:
 11421 ;;		_fputc
 11422 ;;		_fputs
 11423 ;; This function is called by:
 11424 ;;		_fh_hw
 11425 ;;		_fh_hi
 11426 ;;		_fh_ho
 11427 ;;		_cli_init
 11428 ;;		_linux_putc
 11429 ;; This function uses a non-reentrant model
 11430 ;;
 11431                           
 11432                           	psect	text45
 11433  005904                     __ptext45:
 11434                           	callstack 0
 11435  005904                     _puts:
 11436                           	callstack 20
 11437                           
 11438                           ;incstack = 0
 11439  005904  0E01               	movlw	1
 11440  005906  6E2B               	movwf	_puts$2913^0,c
 11441  005908  C029  F020         	movff	puts@s,fputs@s
 11442  00590C  C02A  F021         	movff	puts@s+1,fputs@s+1
 11443  005910  0E00               	movlw	0
 11444  005912  6E22               	movwf	fputs@fp^0,c
 11445  005914  0E00               	movlw	0
 11446  005916  6E23               	movwf	(fputs@fp+1)^0,c
 11447  005918  EC15  F02A         	call	_fputs	;wreg free
 11448  00591C  BE21               	btfsc	(?_fputs+1)^0,7,c
 11449  00591E  0012               	return	
 11450  005920  0E00               	movlw	0
 11451  005922  6E18               	movwf	(fputc@c+1)^0,c
 11452  005924  0E0A               	movlw	10
 11453  005926  6E17               	movwf	fputc@c^0,c
 11454  005928  0E00               	movlw	0
 11455  00592A  6E19               	movwf	fputc@fp^0,c
 11456  00592C  0E00               	movlw	0
 11457  00592E  6E1A               	movwf	(fputc@fp+1)^0,c
 11458  005930  EC40  F027         	call	_fputc	;wreg free
 11459  005934  BE18               	btfsc	(?_fputc+1)^0,7,c
 11460  005936  0012               	return	
 11461  005938  0E00               	movlw	0
 11462  00593A  6E2B               	movwf	_puts$2913^0,c
 11463  00593C  0012               	return		;funcret
 11464  00593E                     __end_of_puts:
 11465                           	callstack 0
 11466                           
 11467 ;; *************** function _fputs *****************
 11468 ;; Defined at:
 11469 ;;		line 8 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/nf_fputs.c"
 11470 ;; Parameters:    Size  Location     Type
 11471 ;;  s               2   31[COMRAM] PTR const unsigned char 
 11472 ;;		 -> cli_ctx.cmd(128), dbuf(80), STR_10(3), cli_read@i(1), 
 11473 ;;		 -> cmdm(28), cli_ctx(131), STR_4(10), STR_3(10), 
 11474 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
 11475 ;;		 -> sprintf@f(11), NULL(0), 
 11476 ;; Auto vars:     Size  Location     Type
 11477 ;;  i               2   38[COMRAM] int 
 11478 ;;  c               1   37[COMRAM] unsigned char 
 11479 ;; Return value:  Size  Location     Type
 11480 ;;                  2   31[COMRAM] int 
 11481 ;; Registers used:
 11482 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11483 ;; Tracked objects:
 11484 ;;		On entry : 0/0
 11485 ;;		On exit  : 0/0
 11486 ;;		Unchanged: 0/0
 11487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11488 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11489 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11490 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11491 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11492 ;;Total ram usage:        9 bytes
 11493 ;; Hardware stack levels used: 1
 11494 ;; Hardware stack levels required when called: 7
 11495 ;; This function calls:
 11496 ;;		_fputc
 11497 ;; This function is called by:
 11498 ;;		_pad
 11499 ;;		_puts
 11500 ;; This function uses a non-reentrant model
 11501 ;;
 11502                           
 11503                           	psect	text46
 11504  00542A                     __ptext46:
 11505                           	callstack 0
 11506  00542A                     _fputs:
 11507                           	callstack 16
 11508                           
 11509                           ;incstack = 0
 11510  00542A  0E00               	movlw	0
 11511  00542C  6E28               	movwf	(fputs@i+1)^0,c
 11512  00542E  0E00               	movlw	0
 11513  005430  6E27               	movwf	fputs@i^0,c
 11514  005432  D00B               	goto	l8956
 11515  005434                     l8952:
 11516  005434  C026  F017         	movff	fputs@c,fputc@c
 11517  005438  6A18               	clrf	(fputc@c+1)^0,c
 11518  00543A  C022  F019         	movff	fputs@fp,fputc@fp
 11519  00543E  C023  F01A         	movff	fputs@fp+1,fputc@fp+1
 11520  005442  EC40  F027         	call	_fputc	;wreg free
 11521  005446  4A27               	infsnz	fputs@i^0,f,c
 11522  005448  2A28               	incf	(fputs@i+1)^0,f,c
 11523  00544A                     l8956:
 11524  00544A  5027               	movf	fputs@i^0,w,c
 11525  00544C  2420               	addwf	fputs@s^0,w,c
 11526  00544E  6E24               	movwf	??_fputs^0,c
 11527  005450  5028               	movf	(fputs@i+1)^0,w,c
 11528  005452  2021               	addwfc	(fputs@s+1)^0,w,c
 11529  005454  6E25               	movwf	(??_fputs+1)^0,c
 11530  005456  0060  F093  FFF6   	movff	??_fputs,tblptrl
 11531  00545C  0060  F097  FFF7   	movff	??_fputs+1,tblptrh
 11532  005462  0E00               	movlw	low (__smallconst shr (0+16))
 11533  005464  6EF8               	movwf	tblptru,c
 11534  005466  0E1F               	movlw	(high __ramtop+-1)
 11535  005468  64F7               	cpfsgt	tblptrh,c
 11536  00546A  D003               	bra	u9967
 11537  00546C  0008               	tblrd		*
 11538  00546E  50F5               	movf	tablat,w,c
 11539  005470  D007               	bra	u9960
 11540  005472                     u9967:
 11541  005472  006F FFDB FFE1     	movff	tblptrl,fsr1l
 11542  005478  006F FFDF FFE2     	movff	tblptrh,fsr1h
 11543  00547E  50E7               	movf	indf1,w,c
 11544  005480                     u9960:
 11545  005480  6E26               	movwf	fputs@c^0,c
 11546  005482  5026               	movf	fputs@c^0,w,c
 11547  005484  A4D8               	btfss	status,2,c
 11548  005486  D7D6               	goto	l8952
 11549  005488  C027  F020         	movff	fputs@i,?_fputs
 11550  00548C  C028  F021         	movff	fputs@i+1,?_fputs+1
 11551  005490  0012               	return		;funcret
 11552  005492                     __end_of_fputs:
 11553                           	callstack 0
 11554                           
 11555 ;; *************** function _fputc *****************
 11556 ;; Defined at:
 11557 ;;		line 8 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/nf_fputc.c"
 11558 ;; Parameters:    Size  Location     Type
 11559 ;;  c               2   22[COMRAM] int 
 11560 ;;  fp              2   24[COMRAM] PTR struct _IO_FILE
 11561 ;;		 -> sprintf@f(11), NULL(0), 
 11562 ;; Auto vars:     Size  Location     Type
 11563 ;;		None
 11564 ;; Return value:  Size  Location     Type
 11565 ;;                  2   22[COMRAM] int 
 11566 ;; Registers used:
 11567 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11568 ;; Tracked objects:
 11569 ;;		On entry : 0/0
 11570 ;;		On exit  : 0/0
 11571 ;;		Unchanged: 0/0
 11572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11573 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11575 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11576 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11577 ;;Total ram usage:        9 bytes
 11578 ;; Hardware stack levels used: 1
 11579 ;; Hardware stack levels required when called: 6
 11580 ;; This function calls:
 11581 ;;		_putch
 11582 ;; This function is called by:
 11583 ;;		_pad
 11584 ;;		_stoa
 11585 ;;		_vfpfcnvrt
 11586 ;;		_fputs
 11587 ;;		_puts
 11588 ;; This function uses a non-reentrant model
 11589 ;;
 11590                           
 11591                           	psect	text47
 11592  004E80                     __ptext47:
 11593                           	callstack 0
 11594  004E80                     _fputc:
 11595                           	callstack 16
 11596                           
 11597                           ;incstack = 0
 11598  004E80  5019               	movf	fputc@fp^0,w,c
 11599  004E82  101A               	iorwf	(fputc@fp+1)^0,w,c
 11600  004E84  B4D8               	btfsc	status,2,c
 11601  004E86  D004               	goto	u9520
 11602  004E88  5019               	movf	fputc@fp^0,w,c
 11603  004E8A  101A               	iorwf	(fputc@fp+1)^0,w,c
 11604  004E8C  A4D8               	btfss	status,2,c
 11605  004E8E  D004               	goto	l8728
 11606  004E90                     u9520:
 11607  004E90  5017               	movf	fputc@c^0,w,c
 11608  004E92  EC92  F02E         	call	_putch
 11609  004E96  D04A               	goto	l8734
 11610  004E98                     l8728:
 11611  004E98  EE20 F009          	lfsr	2,9
 11612  004E9C  5019               	movf	fputc@fp^0,w,c
 11613  004E9E  26D9               	addwf	fsr2l,f,c
 11614  004EA0  501A               	movf	(fputc@fp+1)^0,w,c
 11615  004EA2  22DA               	addwfc	fsr2h,f,c
 11616  004EA4  50DE               	movf	postinc2,w,c
 11617  004EA6  10DE               	iorwf	postinc2,w,c
 11618  004EA8  B4D8               	btfsc	status,2,c
 11619  004EAA  D016               	goto	u9540
 11620  004EAC  EE20 F009          	lfsr	2,9
 11621  004EB0  5019               	movf	fputc@fp^0,w,c
 11622  004EB2  26D9               	addwf	fsr2l,f,c
 11623  004EB4  501A               	movf	(fputc@fp+1)^0,w,c
 11624  004EB6  22DA               	addwfc	fsr2h,f,c
 11625  004EB8  EE10 F003          	lfsr	1,3
 11626  004EBC  5019               	movf	fputc@fp^0,w,c
 11627  004EBE  26E1               	addwf	fsr1l,f,c
 11628  004EC0  501A               	movf	(fputc@fp+1)^0,w,c
 11629  004EC2  22E2               	addwfc	fsr1h,f,c
 11630  004EC4  50DE               	movf	postinc2,w,c
 11631  004EC6  5CE6               	subwf	postinc1,w,c
 11632  004EC8  50E6               	movf	postinc1,w,c
 11633  004ECA  0A80               	xorlw	128
 11634  004ECC  6E1F               	movwf	(??_fputc+4)^0,c
 11635  004ECE  50DE               	movf	postinc2,w,c
 11636  004ED0  0A80               	xorlw	128
 11637  004ED2  581F               	subwfb	(??_fputc+4)^0,w,c
 11638  004ED4  B0D8               	btfsc	status,0,c
 11639  004ED6  D02A               	goto	l8734
 11640  004ED8                     u9540:
 11641  004ED8  EE20 F003          	lfsr	2,3
 11642  004EDC  5019               	movf	fputc@fp^0,w,c
 11643  004EDE  26D9               	addwf	fsr2l,f,c
 11644  004EE0  501A               	movf	(fputc@fp+1)^0,w,c
 11645  004EE2  22DA               	addwfc	fsr2h,f,c
 11646  004EE4  006F FF78  F01B    	movff	postinc2,??_fputc
 11647  004EEA  006F FF74  F01C    	movff	postdec2,??_fputc+1
 11648  004EF0  0060  F067  FFD9   	movff	fputc@fp,fsr2l
 11649  004EF6  0060  F06B  FFDA   	movff	fputc@fp+1,fsr2h
 11650  004EFC  006F FF78  F01D    	movff	postinc2,??_fputc+2
 11651  004F02  006F FF74  F01E    	movff	postdec2,??_fputc+3
 11652  004F08  501B               	movf	??_fputc^0,w,c
 11653  004F0A  241D               	addwf	(??_fputc+2)^0,w,c
 11654  004F0C  6ED9               	movwf	fsr2l,c
 11655  004F0E  501C               	movf	(??_fputc+1)^0,w,c
 11656  004F10  201E               	addwfc	(??_fputc+3)^0,w,c
 11657  004F12  6EDA               	movwf	fsr2h,c
 11658  004F14  0060  F05F  FFDF   	movff	fputc@c,indf2
 11659  004F1A  EE20 F003          	lfsr	2,3
 11660  004F1E  5019               	movf	fputc@fp^0,w,c
 11661  004F20  26D9               	addwf	fsr2l,f,c
 11662  004F22  501A               	movf	(fputc@fp+1)^0,w,c
 11663  004F24  22DA               	addwfc	fsr2h,f,c
 11664  004F26  2ADE               	incf	postinc2,f,c
 11665  004F28  0E00               	movlw	0
 11666  004F2A  22DD               	addwfc	postdec2,f,c
 11667  004F2C                     l8734:
 11668  004F2C  C017  F017         	movff	fputc@c,?_fputc
 11669  004F30  6A18               	clrf	(?_fputc+1)^0,c
 11670  004F32  0012               	return		;funcret
 11671  004F34                     __end_of_fputc:
 11672                           	callstack 0
 11673                           
 11674 ;; *************** function _putch *****************
 11675 ;; Defined at:
 11676 ;;		line 230 in file "mcc_generated_files/uart1.c"
 11677 ;; Parameters:    Size  Location     Type
 11678 ;;  txData          1    wreg     unsigned char 
 11679 ;; Auto vars:     Size  Location     Type
 11680 ;;  txData          1   21[COMRAM] unsigned char 
 11681 ;; Return value:  Size  Location     Type
 11682 ;;                  1    wreg      void 
 11683 ;; Registers used:
 11684 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11685 ;; Tracked objects:
 11686 ;;		On entry : 0/0
 11687 ;;		On exit  : 3F/39
 11688 ;;		Unchanged: 0/0
 11689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11691 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11693 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11694 ;;Total ram usage:        1 bytes
 11695 ;; Hardware stack levels used: 1
 11696 ;; Hardware stack levels required when called: 5
 11697 ;; This function calls:
 11698 ;;		_UART1_Write
 11699 ;; This function is called by:
 11700 ;;		_fputc
 11701 ;; This function uses a non-reentrant model
 11702 ;;
 11703                           
 11704                           	psect	text48
 11705  005D24                     __ptext48:
 11706                           	callstack 0
 11707  005D24                     _putch:
 11708                           	callstack 16
 11709                           
 11710                           ;incstack = 0
 11711                           ;putch@txData stored from wreg
 11712  005D24  6E16               	movwf	putch@txData^0,c
 11713                           
 11714                           ;mcc_generated_files/uart1.c: 230: void putch(char txData);mcc_generated_files/uart1.c: 
      +                          231: {;mcc_generated_files/uart1.c: 232:     UART1_Write(txData);
 11715  005D26  5016               	movf	putch@txData^0,w,c
 11716  005D28  EC47  F02C         	call	_UART1_Write
 11717                           
 11718                           ; BSR set to: 57
 11719  005D2C  0012               	return		;funcret
 11720  005D2E                     __end_of_putch:
 11721                           	callstack 0
 11722                           
 11723 ;; *************** function _UART1_Write *****************
 11724 ;; Defined at:
 11725 ;;		line 202 in file "mcc_generated_files/uart1.c"
 11726 ;; Parameters:    Size  Location     Type
 11727 ;;  txData          1    wreg     unsigned char 
 11728 ;; Auto vars:     Size  Location     Type
 11729 ;;  txData          1   20[COMRAM] unsigned char 
 11730 ;; Return value:  Size  Location     Type
 11731 ;;                  1    wreg      void 
 11732 ;; Registers used:
 11733 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11734 ;; Tracked objects:
 11735 ;;		On entry : 0/0
 11736 ;;		On exit  : 3F/39
 11737 ;;		Unchanged: 0/0
 11738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11740 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11742 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11743 ;;Total ram usage:        1 bytes
 11744 ;; Hardware stack levels used: 1
 11745 ;; Hardware stack levels required when called: 4
 11746 ;; This function calls:
 11747 ;;		Nothing
 11748 ;; This function is called by:
 11749 ;;		_putch
 11750 ;; This function uses a non-reentrant model
 11751 ;;
 11752                           
 11753                           	psect	text49
 11754  00588E                     __ptext49:
 11755                           	callstack 0
 11756  00588E                     _UART1_Write:
 11757                           	callstack 16
 11758                           
 11759                           ; BSR set to: 57
 11760                           ;incstack = 0
 11761                           ;UART1_Write@txData stored from wreg
 11762  00588E  6E15               	movwf	UART1_Write@txData^0,c
 11763  005890                     
 11764                           ;mcc_generated_files/uart1.c: 204:     while(0 == uart1TxBufferRemaining)
 11765                           
 11766                           ;mcc_generated_files/uart1.c: 202: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 203: {;mcc_generated_files/uart1.c: 204:     while(0 == uart1TxBufferRemaining)
 11767  005890  5049               	movf	_uart1TxBufferRemaining^0,w,c	;volatile
 11768  005892  B4D8               	btfsc	status,2,c
 11769  005894  D7FD               	goto	l8702
 11770                           
 11771                           ;mcc_generated_files/uart1.c: 208:     if(0 == PIE3bits.U1TXIE)
 11772  005896  0139               	movlb	57	; () banked
 11773  005898  B993               	btfsc	147,4,b	;volatile
 11774  00589A  D004               	goto	l616
 11775                           
 11776                           ; BSR set to: 57
 11777                           ;mcc_generated_files/uart1.c: 209:     {;mcc_generated_files/uart1.c: 210:         U1TXB
      +                           = txData;
 11778  00589C  0060  F057  FDEA   	movff	UART1_Write@txData,15850	;volatile
 11779                           
 11780                           ;mcc_generated_files/uart1.c: 211:     }
 11781  0058A2  D011               	goto	l8718
 11782  0058A4                     l616:
 11783                           
 11784                           ; BSR set to: 57
 11785                           ;mcc_generated_files/uart1.c: 213:     {;mcc_generated_files/uart1.c: 214:         PIE3b
      +                          its.U1TXIE = 0;
 11786  0058A4  9993               	bcf	147,4,b	;volatile
 11787                           
 11788                           ; BSR set to: 57
 11789                           ;mcc_generated_files/uart1.c: 215:         uart1TxBuffer[uart1TxHead++] = txData;
 11790  0058A6  0E40               	movlw	low _uart1TxBuffer
 11791  0058A8  244B               	addwf	_uart1TxHead^0,w,c	;volatile
 11792  0058AA  6ED9               	movwf	fsr2l,c
 11793  0058AC  6ADA               	clrf	fsr2h,c
 11794  0058AE  0E01               	movlw	high _uart1TxBuffer
 11795  0058B0  22DA               	addwfc	fsr2h,f,c
 11796  0058B2  0060  F057  FFDF   	movff	UART1_Write@txData,indf2
 11797                           
 11798                           ; BSR set to: 57
 11799  0058B8  2A4B               	incf	_uart1TxHead^0,f,c	;volatile
 11800                           
 11801                           ; BSR set to: 57
 11802                           ;mcc_generated_files/uart1.c: 216:         if(sizeof(uart1TxBuffer) <= uart1TxHead)
 11803  0058BA  0E3F               	movlw	63
 11804  0058BC  644B               	cpfsgt	_uart1TxHead^0,c
 11805  0058BE  D002               	goto	l8716
 11806                           
 11807                           ; BSR set to: 57
 11808                           ;mcc_generated_files/uart1.c: 217:         {;mcc_generated_files/uart1.c: 218:          
      +                             uart1TxHead = 0;
 11809  0058C0  0E00               	movlw	0
 11810  0058C2  6E4B               	movwf	_uart1TxHead^0,c	;volatile
 11811  0058C4                     l8716:
 11812                           
 11813                           ; BSR set to: 57
 11814                           ;mcc_generated_files/uart1.c: 220:         uart1TxBufferRemaining--;
 11815  0058C4  0649               	decf	_uart1TxBufferRemaining^0,f,c	;volatile
 11816  0058C6                     l8718:
 11817                           
 11818                           ; BSR set to: 57
 11819                           ;mcc_generated_files/uart1.c: 222:     PIE3bits.U1TXIE = 1;
 11820  0058C6  8993               	bsf	147,4,b	;volatile
 11821                           
 11822                           ; BSR set to: 57
 11823  0058C8  0012               	return		;funcret
 11824  0058CA                     __end_of_UART1_Write:
 11825                           	callstack 0
 11826                           
 11827 ;; *************** function ___xxtofl *****************
 11828 ;; Defined at:
 11829 ;;		line 10 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/xxtofl.c"
 11830 ;; Parameters:    Size  Location     Type
 11831 ;;  sign            1    wreg     unsigned char 
 11832 ;;  val             4   20[COMRAM] long 
 11833 ;; Auto vars:     Size  Location     Type
 11834 ;;  sign            1   28[COMRAM] unsigned char 
 11835 ;;  arg             4   30[COMRAM] unsigned long 
 11836 ;;  exp             1   29[COMRAM] unsigned char 
 11837 ;; Return value:  Size  Location     Type
 11838 ;;                  4   20[COMRAM] unsigned char 
 11839 ;; Registers used:
 11840 ;;		wreg, status,2, status,0
 11841 ;; Tracked objects:
 11842 ;;		On entry : 3F/0
 11843 ;;		On exit  : 0/0
 11844 ;;		Unchanged: 0/0
 11845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11846 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11847 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11848 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11849 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11850 ;;Total ram usage:       14 bytes
 11851 ;; Hardware stack levels used: 1
 11852 ;; Hardware stack levels required when called: 4
 11853 ;; This function calls:
 11854 ;;		Nothing
 11855 ;; This function is called by:
 11856 ;;		_main
 11857 ;; This function uses a non-reentrant model
 11858 ;;
 11859                           
 11860                           	psect	text50
 11861  0046B6                     __ptext50:
 11862                           	callstack 0
 11863  0046B6                     ___xxtofl:
 11864                           	callstack 26
 11865                           
 11866                           ; BSR set to: 57
 11867                           ;incstack = 0
 11868                           ;___xxtofl@sign stored from wreg
 11869  0046B6  6E1D               	movwf	___xxtofl@sign^0,c
 11870  0046B8  501D               	movf	___xxtofl@sign^0,w,c
 11871  0046BA  A4D8               	btfss	status,2,c
 11872  0046BC  AE18               	btfss	(___xxtofl@val+3)^0,7,c
 11873  0046BE  D01A               	goto	l1794
 11874  0046C0  C015  F019         	movff	___xxtofl@val,??___xxtofl
 11875  0046C4  C016  F01A         	movff	___xxtofl@val+1,??___xxtofl+1
 11876  0046C8  C017  F01B         	movff	___xxtofl@val+2,??___xxtofl+2
 11877  0046CC  C018  F01C         	movff	___xxtofl@val+3,??___xxtofl+3
 11878  0046D0  1E19               	comf	??___xxtofl^0,f,c
 11879  0046D2  1E1A               	comf	(??___xxtofl+1)^0,f,c
 11880  0046D4  1E1B               	comf	(??___xxtofl+2)^0,f,c
 11881  0046D6  1E1C               	comf	(??___xxtofl+3)^0,f,c
 11882  0046D8  2A19               	incf	??___xxtofl^0,f,c
 11883  0046DA  0E00               	movlw	0
 11884  0046DC  221A               	addwfc	(??___xxtofl+1)^0,f,c
 11885  0046DE  221B               	addwfc	(??___xxtofl+2)^0,f,c
 11886  0046E0  221C               	addwfc	(??___xxtofl+3)^0,f,c
 11887  0046E2  C019  F01F         	movff	??___xxtofl,___xxtofl@arg
 11888  0046E6  C01A  F020         	movff	??___xxtofl+1,___xxtofl@arg+1
 11889  0046EA  C01B  F021         	movff	??___xxtofl+2,___xxtofl@arg+2
 11890  0046EE  C01C  F022         	movff	??___xxtofl+3,___xxtofl@arg+3
 11891  0046F2  D008               	goto	l10530
 11892  0046F4                     l1794:
 11893  0046F4  C015  F01F         	movff	___xxtofl@val,___xxtofl@arg
 11894  0046F8  C016  F020         	movff	___xxtofl@val+1,___xxtofl@arg+1
 11895  0046FC  C017  F021         	movff	___xxtofl@val+2,___xxtofl@arg+2
 11896  004700  C018  F022         	movff	___xxtofl@val+3,___xxtofl@arg+3
 11897  004704                     l10530:
 11898  004704  5015               	movf	___xxtofl@val^0,w,c
 11899  004706  1016               	iorwf	(___xxtofl@val+1)^0,w,c
 11900  004708  1017               	iorwf	(___xxtofl@val+2)^0,w,c
 11901  00470A  1018               	iorwf	(___xxtofl@val+3)^0,w,c
 11902  00470C  A4D8               	btfss	status,2,c
 11903  00470E  D009               	goto	l10536
 11904  004710  0E00               	movlw	0
 11905  004712  6E15               	movwf	?___xxtofl^0,c
 11906  004714  0E00               	movlw	0
 11907  004716  6E16               	movwf	(?___xxtofl+1)^0,c
 11908  004718  0E00               	movlw	0
 11909  00471A  6E17               	movwf	(?___xxtofl+2)^0,c
 11910  00471C  0E00               	movlw	0
 11911  00471E  6E18               	movwf	(?___xxtofl+3)^0,c
 11912  004720  0012               	return	
 11913  004722                     l10536:
 11914  004722  0E96               	movlw	150
 11915  004724  6E1E               	movwf	___xxtofl@exp^0,c
 11916  004726  D006               	goto	l10540
 11917  004728                     l10538:
 11918  004728  2A1E               	incf	___xxtofl@exp^0,f,c
 11919  00472A  90D8               	bcf	status,0,c
 11920  00472C  3222               	rrcf	(___xxtofl@arg+3)^0,f,c
 11921  00472E  3221               	rrcf	(___xxtofl@arg+2)^0,f,c
 11922  004730  3220               	rrcf	(___xxtofl@arg+1)^0,f,c
 11923  004732  321F               	rrcf	___xxtofl@arg^0,f,c
 11924  004734                     l10540:
 11925  004734  0E00               	movlw	0
 11926  004736  141F               	andwf	___xxtofl@arg^0,w,c
 11927  004738  6E19               	movwf	??___xxtofl^0,c
 11928  00473A  0E00               	movlw	0
 11929  00473C  1420               	andwf	(___xxtofl@arg+1)^0,w,c
 11930  00473E  6E1A               	movwf	(??___xxtofl+1)^0,c
 11931  004740  0E00               	movlw	0
 11932  004742  1421               	andwf	(___xxtofl@arg+2)^0,w,c
 11933  004744  6E1B               	movwf	(??___xxtofl+2)^0,c
 11934  004746  0EFE               	movlw	254
 11935  004748  1422               	andwf	(___xxtofl@arg+3)^0,w,c
 11936  00474A  6E1C               	movwf	(??___xxtofl+3)^0,c
 11937  00474C  5019               	movf	??___xxtofl^0,w,c
 11938  00474E  101A               	iorwf	(??___xxtofl+1)^0,w,c
 11939  004750  101B               	iorwf	(??___xxtofl+2)^0,w,c
 11940  004752  101C               	iorwf	(??___xxtofl+3)^0,w,c
 11941  004754  B4D8               	btfsc	status,2,c
 11942  004756  D00D               	goto	l1801
 11943  004758  D7E7               	goto	l10538
 11944  00475A                     l10542:
 11945  00475A  2A1E               	incf	___xxtofl@exp^0,f,c
 11946  00475C  0E01               	movlw	1
 11947  00475E  261F               	addwf	___xxtofl@arg^0,f,c
 11948  004760  0E00               	movlw	0
 11949  004762  2220               	addwfc	(___xxtofl@arg+1)^0,f,c
 11950  004764  2221               	addwfc	(___xxtofl@arg+2)^0,f,c
 11951  004766  2222               	addwfc	(___xxtofl@arg+3)^0,f,c
 11952  004768  90D8               	bcf	status,0,c
 11953  00476A  3222               	rrcf	(___xxtofl@arg+3)^0,f,c
 11954  00476C  3221               	rrcf	(___xxtofl@arg+2)^0,f,c
 11955  00476E  3220               	rrcf	(___xxtofl@arg+1)^0,f,c
 11956  004770  321F               	rrcf	___xxtofl@arg^0,f,c
 11957  004772                     l1801:
 11958  004772  0E00               	movlw	0
 11959  004774  141F               	andwf	___xxtofl@arg^0,w,c
 11960  004776  6E19               	movwf	??___xxtofl^0,c
 11961  004778  0E00               	movlw	0
 11962  00477A  1420               	andwf	(___xxtofl@arg+1)^0,w,c
 11963  00477C  6E1A               	movwf	(??___xxtofl+1)^0,c
 11964  00477E  0E00               	movlw	0
 11965  004780  1421               	andwf	(___xxtofl@arg+2)^0,w,c
 11966  004782  6E1B               	movwf	(??___xxtofl+2)^0,c
 11967  004784  0EFF               	movlw	255
 11968  004786  1422               	andwf	(___xxtofl@arg+3)^0,w,c
 11969  004788  6E1C               	movwf	(??___xxtofl+3)^0,c
 11970  00478A  5019               	movf	??___xxtofl^0,w,c
 11971  00478C  101A               	iorwf	(??___xxtofl+1)^0,w,c
 11972  00478E  101B               	iorwf	(??___xxtofl+2)^0,w,c
 11973  004790  101C               	iorwf	(??___xxtofl+3)^0,w,c
 11974  004792  B4D8               	btfsc	status,2,c
 11975  004794  D007               	goto	l10550
 11976  004796  D7E1               	goto	l10542
 11977  004798                     l10548:
 11978  004798  061E               	decf	___xxtofl@exp^0,f,c
 11979  00479A  90D8               	bcf	status,0,c
 11980  00479C  361F               	rlcf	___xxtofl@arg^0,f,c
 11981  00479E  3620               	rlcf	(___xxtofl@arg+1)^0,f,c
 11982  0047A0  3621               	rlcf	(___xxtofl@arg+2)^0,f,c
 11983  0047A2  3622               	rlcf	(___xxtofl@arg+3)^0,f,c
 11984  0047A4                     l10550:
 11985  0047A4  BE21               	btfsc	(___xxtofl@arg+2)^0,7,c
 11986  0047A6  D003               	goto	u12320
 11987  0047A8  0E02               	movlw	2
 11988  0047AA  601E               	cpfslt	___xxtofl@exp^0,c
 11989  0047AC  D7F5               	goto	l10548
 11990  0047AE                     u12320:
 11991  0047AE  A01E               	btfss	___xxtofl@exp^0,0,c
 11992  0047B0  9E21               	bcf	(___xxtofl@arg+2)^0,7,c
 11993  0047B2  90D8               	bcf	status,0,c
 11994  0047B4  321E               	rrcf	___xxtofl@exp^0,f,c
 11995  0047B6  C01E  F019         	movff	___xxtofl@exp,??___xxtofl
 11996  0047BA  6A1A               	clrf	(??___xxtofl+1)^0,c
 11997  0047BC  6A1B               	clrf	(??___xxtofl+2)^0,c
 11998  0047BE  6A1C               	clrf	(??___xxtofl+3)^0,c
 11999  0047C0  C019  F01C         	movff	??___xxtofl,??___xxtofl+3
 12000  0047C4  6A1B               	clrf	(??___xxtofl+2)^0,c
 12001  0047C6  6A1A               	clrf	(??___xxtofl+1)^0,c
 12002  0047C8  6A19               	clrf	??___xxtofl^0,c
 12003  0047CA  5019               	movf	??___xxtofl^0,w,c
 12004  0047CC  121F               	iorwf	___xxtofl@arg^0,f,c
 12005  0047CE  501A               	movf	(??___xxtofl+1)^0,w,c
 12006  0047D0  1220               	iorwf	(___xxtofl@arg+1)^0,f,c
 12007  0047D2  501B               	movf	(??___xxtofl+2)^0,w,c
 12008  0047D4  1221               	iorwf	(___xxtofl@arg+2)^0,f,c
 12009  0047D6  501C               	movf	(??___xxtofl+3)^0,w,c
 12010  0047D8  1222               	iorwf	(___xxtofl@arg+3)^0,f,c
 12011  0047DA  501D               	movf	___xxtofl@sign^0,w,c
 12012  0047DC  A4D8               	btfss	status,2,c
 12013  0047DE  AE18               	btfss	(___xxtofl@val+3)^0,7,c
 12014  0047E0  D001               	goto	l10566
 12015  0047E2  8E22               	bsf	(___xxtofl@arg+3)^0,7,c
 12016  0047E4                     l10566:
 12017  0047E4  C01F  F015         	movff	___xxtofl@arg,?___xxtofl
 12018  0047E8  C020  F016         	movff	___xxtofl@arg+1,?___xxtofl+1
 12019  0047EC  C021  F017         	movff	___xxtofl@arg+2,?___xxtofl+2
 12020  0047F0  C022  F018         	movff	___xxtofl@arg+3,?___xxtofl+3
 12021  0047F4  0012               	return		;funcret
 12022  0047F6                     __end_of___xxtofl:
 12023                           	callstack 0
 12024                           
 12025 ;; *************** function _SYSTEM_Initialize *****************
 12026 ;; Defined at:
 12027 ;;		line 50 in file "mcc_generated_files/mcc.c"
 12028 ;; Parameters:    Size  Location     Type
 12029 ;;		None
 12030 ;; Auto vars:     Size  Location     Type
 12031 ;;		None
 12032 ;; Return value:  Size  Location     Type
 12033 ;;                  1    wreg      void 
 12034 ;; Registers used:
 12035 ;;		wreg, status,2, status,0, cstack
 12036 ;; Tracked objects:
 12037 ;;		On entry : 3F/0
 12038 ;;		On exit  : 3F/3D
 12039 ;;		Unchanged: 0/0
 12040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12045 ;;Total ram usage:        0 bytes
 12046 ;; Hardware stack levels used: 1
 12047 ;; Hardware stack levels required when called: 6
 12048 ;; This function calls:
 12049 ;;		_ADCC_Initialize
 12050 ;;		_DAC1_Initialize
 12051 ;;		_INTERRUPT_Initialize
 12052 ;;		_OSCILLATOR_Initialize
 12053 ;;		_PIN_MANAGER_Initialize
 12054 ;;		_PMD_Initialize
 12055 ;;		_SPI1_Initialize
 12056 ;;		_TMR5_Initialize
 12057 ;;		_TMR6_Initialize
 12058 ;;		_UART1_Initialize
 12059 ;; This function is called by:
 12060 ;;		_main
 12061 ;; This function uses a non-reentrant model
 12062 ;;
 12063                           
 12064                           	psect	text51
 12065  005AC4                     __ptext51:
 12066                           	callstack 0
 12067  005AC4                     _SYSTEM_Initialize:
 12068                           	callstack 24
 12069                           
 12070                           ; BSR set to: 0
 12071                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 12072                           
 12073                           ;incstack = 0
 12074  005AC4  EC86  F02B         	call	_INTERRUPT_Initialize	;wreg free
 12075                           
 12076                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 12077  005AC8  ECBE  F02D         	call	_PMD_Initialize	;wreg free
 12078                           
 12079                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 12080  005ACC  ECC9  F025         	call	_PIN_MANAGER_Initialize	;wreg free
 12081                           
 12082                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 12083  005AD0  ECEF  F02D         	call	_OSCILLATOR_Initialize	;wreg free
 12084                           
 12085                           ; BSR set to: 57
 12086                           ;mcc_generated_files/mcc.c: 56:     TMR6_Initialize();
 12087  005AD4  EC37  F02D         	call	_TMR6_Initialize	;wreg free
 12088                           
 12089                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 12090  005AD8  ECA4  F029         	call	_ADCC_Initialize	;wreg free
 12091                           
 12092                           ;mcc_generated_files/mcc.c: 58:     DAC1_Initialize();
 12093  005ADC  EC8C  F02E         	call	_DAC1_Initialize	;wreg free
 12094                           
 12095                           ; BSR set to: 62
 12096                           ;mcc_generated_files/mcc.c: 59:     TMR5_Initialize();
 12097  005AE0  EC3F  F02B         	call	_TMR5_Initialize	;wreg free
 12098                           
 12099                           ;mcc_generated_files/mcc.c: 60:     UART1_Initialize();
 12100  005AE4  ECE5  F026         	call	_UART1_Initialize	;wreg free
 12101                           
 12102                           ;mcc_generated_files/mcc.c: 61:     SPI1_Initialize();
 12103  005AE8  ECFD  F02D         	call	_SPI1_Initialize	;wreg free
 12104                           
 12105                           ; BSR set to: 61
 12106  005AEC  0012               	return		;funcret
 12107  005AEE                     __end_of_SYSTEM_Initialize:
 12108                           	callstack 0
 12109                           
 12110 ;; *************** function _UART1_Initialize *****************
 12111 ;; Defined at:
 12112 ;;		line 87 in file "mcc_generated_files/uart1.c"
 12113 ;; Parameters:    Size  Location     Type
 12114 ;;		None
 12115 ;; Auto vars:     Size  Location     Type
 12116 ;;		None
 12117 ;; Return value:  Size  Location     Type
 12118 ;;                  1    wreg      void 
 12119 ;; Registers used:
 12120 ;;		wreg, status,2, status,0, cstack
 12121 ;; Tracked objects:
 12122 ;;		On entry : 3B/3D
 12123 ;;		On exit  : 3F/39
 12124 ;;		Unchanged: 0/0
 12125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12130 ;;Total ram usage:        0 bytes
 12131 ;; Hardware stack levels used: 1
 12132 ;; Hardware stack levels required when called: 5
 12133 ;; This function calls:
 12134 ;;		_UART1_SetErrorHandler
 12135 ;;		_UART1_SetFramingErrorHandler
 12136 ;;		_UART1_SetOverrunErrorHandler
 12137 ;;		_UART1_SetRxInterruptHandler
 12138 ;;		_UART1_SetTxInterruptHandler
 12139 ;; This function is called by:
 12140 ;;		_SYSTEM_Initialize
 12141 ;; This function uses a non-reentrant model
 12142 ;;
 12143                           
 12144                           	psect	text52
 12145  004DCA                     __ptext52:
 12146                           	callstack 0
 12147  004DCA                     _UART1_Initialize:
 12148                           	callstack 24
 12149                           
 12150                           ;mcc_generated_files/uart1.c: 90:     PIE3bits.U1RXIE = 0;
 12151                           
 12152                           ; BSR set to: 61
 12153                           ;incstack = 0
 12154  004DCA  0139               	movlb	57	; () banked
 12155  004DCC  9793               	bcf	147,3,b	;volatile
 12156                           
 12157                           ; BSR set to: 57
 12158                           ;mcc_generated_files/uart1.c: 91:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 12159  004DCE  0EE2               	movlw	low _UART1_Receive_ISR
 12160  004DD0  6E15               	movwf	UART1_SetRxInterruptHandler@InterruptHandler^0,c
 12161  004DD2  0E4F               	movlw	high _UART1_Receive_ISR
 12162  004DD4  6E16               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)^0,c
 12163  004DD6  0E00               	movlw	low (_UART1_Receive_ISR shr (0+16))
 12164  004DD8  6E17               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+2)^0,c
 12165  004DDA  EC5B  F02E         	call	_UART1_SetRxInterruptHandler	;wreg free
 12166                           
 12167                           ; BSR set to: 57
 12168                           ;mcc_generated_files/uart1.c: 92:     PIE3bits.U1TXIE = 0;
 12169  004DDE  9993               	bcf	147,4,b	;volatile
 12170                           
 12171                           ;mcc_generated_files/uart1.c: 93:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 12172  004DE0  0E40               	movlw	low _UART1_Transmit_ISR
 12173  004DE2  6E15               	movwf	UART1_SetTxInterruptHandler@InterruptHandler^0,c
 12174  004DE4  0E5A               	movlw	high _UART1_Transmit_ISR
 12175  004DE6  6E16               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)^0,c
 12176  004DE8  0E00               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 12177  004DEA  6E17               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+2)^0,c
 12178  004DEC  EC54  F02E         	call	_UART1_SetTxInterruptHandler	;wreg free
 12179                           
 12180                           ; BSR set to: 57
 12181                           ;mcc_generated_files/uart1.c: 98:     U1P1L = 0x00;
 12182  004DF0  0E00               	movlw	0
 12183  004DF2  013D               	movlb	61	; () banked
 12184  004DF4  6FEC               	movwf	236,b	;volatile
 12185                           
 12186                           ; BSR set to: 61
 12187                           ;mcc_generated_files/uart1.c: 101:     U1P1H = 0x00;
 12188  004DF6  0E00               	movlw	0
 12189  004DF8  6FED               	movwf	237,b	;volatile
 12190                           
 12191                           ; BSR set to: 61
 12192                           ;mcc_generated_files/uart1.c: 104:     U1P2L = 0x00;
 12193  004DFA  0E00               	movlw	0
 12194  004DFC  6FEE               	movwf	238,b	;volatile
 12195                           
 12196                           ; BSR set to: 61
 12197                           ;mcc_generated_files/uart1.c: 107:     U1P2H = 0x00;
 12198  004DFE  0E00               	movlw	0
 12199  004E00  6FEF               	movwf	239,b	;volatile
 12200                           
 12201                           ; BSR set to: 61
 12202                           ;mcc_generated_files/uart1.c: 110:     U1P3L = 0x00;
 12203  004E02  0E00               	movlw	0
 12204  004E04  6FF0               	movwf	240,b	;volatile
 12205                           
 12206                           ; BSR set to: 61
 12207                           ;mcc_generated_files/uart1.c: 113:     U1P3H = 0x00;
 12208  004E06  0E00               	movlw	0
 12209  004E08  6FF1               	movwf	241,b	;volatile
 12210                           
 12211                           ; BSR set to: 61
 12212                           ;mcc_generated_files/uart1.c: 116:     U1CON0 = 0xB0;
 12213  004E0A  0EB0               	movlw	176
 12214  004E0C  6FF2               	movwf	242,b	;volatile
 12215                           
 12216                           ; BSR set to: 61
 12217                           ;mcc_generated_files/uart1.c: 119:     U1CON1 = 0x80;
 12218  004E0E  0E80               	movlw	128
 12219  004E10  6FF3               	movwf	243,b	;volatile
 12220                           
 12221                           ; BSR set to: 61
 12222                           ;mcc_generated_files/uart1.c: 122:     U1CON2 = 0x00;
 12223  004E12  0E00               	movlw	0
 12224  004E14  6FF4               	movwf	244,b	;volatile
 12225                           
 12226                           ; BSR set to: 61
 12227                           ;mcc_generated_files/uart1.c: 125:     U1BRGL = 0x8A;
 12228  004E16  0E8A               	movlw	138
 12229  004E18  6FF5               	movwf	245,b	;volatile
 12230                           
 12231                           ; BSR set to: 61
 12232                           ;mcc_generated_files/uart1.c: 128:     U1BRGH = 0x00;
 12233  004E1A  0E00               	movlw	0
 12234  004E1C  6FF6               	movwf	246,b	;volatile
 12235                           
 12236                           ; BSR set to: 61
 12237                           ;mcc_generated_files/uart1.c: 131:     U1FIFO = 0x00;
 12238  004E1E  0E00               	movlw	0
 12239  004E20  6FF7               	movwf	247,b	;volatile
 12240                           
 12241                           ; BSR set to: 61
 12242                           ;mcc_generated_files/uart1.c: 134:     U1UIR = 0x00;
 12243  004E22  0E00               	movlw	0
 12244  004E24  6FF8               	movwf	248,b	;volatile
 12245                           
 12246                           ; BSR set to: 61
 12247                           ;mcc_generated_files/uart1.c: 137:     U1ERRIR = 0x00;
 12248  004E26  0E00               	movlw	0
 12249  004E28  6FF9               	movwf	249,b	;volatile
 12250                           
 12251                           ; BSR set to: 61
 12252                           ;mcc_generated_files/uart1.c: 140:     U1ERRIE = 0x00;
 12253  004E2A  0E00               	movlw	0
 12254  004E2C  6FFA               	movwf	250,b	;volatile
 12255                           
 12256                           ; BSR set to: 61
 12257                           ;mcc_generated_files/uart1.c: 143:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
 12258  004E2E  0E50               	movlw	low _UART1_DefaultFramingErrorHandler
 12259  004E30  6E15               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
 12260  004E32  0E5D               	movlw	high _UART1_DefaultFramingErrorHandler
 12261  004E34  6E16               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
 12262  004E36  0E00               	movlw	low (_UART1_DefaultFramingErrorHandler shr (0+16))
 12263  004E38  6E17               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+2)^0,c
 12264  004E3A  EC69  F02E         	call	_UART1_SetFramingErrorHandler	;wreg free
 12265                           
 12266                           ; BSR set to: 61
 12267                           ;mcc_generated_files/uart1.c: 144:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
 12268  004E3E  0E4E               	movlw	low _UART1_DefaultOverrunErrorHandler
 12269  004E40  6E15               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
 12270  004E42  0E5D               	movlw	high _UART1_DefaultOverrunErrorHandler
 12271  004E44  6E16               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
 12272  004E46  0E00               	movlw	low (_UART1_DefaultOverrunErrorHandler shr (0+16))
 12273  004E48  6E17               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+2)^0,c
 12274  004E4A  EC62  F02E         	call	_UART1_SetOverrunErrorHandler	;wreg free
 12275                           
 12276                           ; BSR set to: 61
 12277                           ;mcc_generated_files/uart1.c: 145:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
 12278  004E4E  0E3E               	movlw	low _UART1_DefaultErrorHandler
 12279  004E50  6E15               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
 12280  004E52  0E5D               	movlw	high _UART1_DefaultErrorHandler
 12281  004E54  6E16               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
 12282  004E56  0E00               	movlw	low (_UART1_DefaultErrorHandler shr (0+16))
 12283  004E58  6E17               	movwf	(UART1_SetErrorHandler@interruptHandler+2)^0,c
 12284  004E5A  EC70  F02E         	call	_UART1_SetErrorHandler	;wreg free
 12285                           
 12286                           ;mcc_generated_files/uart1.c: 147:     uart1RxLastError.status = 0;
 12287  004E5E  0E00               	movlw	0
 12288  004E60  6E45               	movwf	_uart1RxLastError^0,c	;volatile
 12289                           
 12290                           ;mcc_generated_files/uart1.c: 150:     uart1TxHead = 0;
 12291  004E62  0E00               	movlw	0
 12292  004E64  6E4B               	movwf	_uart1TxHead^0,c	;volatile
 12293                           
 12294                           ;mcc_generated_files/uart1.c: 151:     uart1TxTail = 0;
 12295  004E66  0E00               	movlw	0
 12296  004E68  6E4A               	movwf	_uart1TxTail^0,c	;volatile
 12297                           
 12298                           ;mcc_generated_files/uart1.c: 152:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 12299  004E6A  0E40               	movlw	64
 12300  004E6C  6E49               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 12301                           
 12302                           ;mcc_generated_files/uart1.c: 153:     uart1RxHead = 0;
 12303  004E6E  0E00               	movlw	0
 12304  004E70  6E48               	movwf	_uart1RxHead^0,c	;volatile
 12305                           
 12306                           ;mcc_generated_files/uart1.c: 154:     uart1RxTail = 0;
 12307  004E72  0E00               	movlw	0
 12308  004E74  6E47               	movwf	_uart1RxTail^0,c	;volatile
 12309                           
 12310                           ;mcc_generated_files/uart1.c: 155:     uart1RxCount = 0;
 12311  004E76  0E00               	movlw	0
 12312  004E78  6E46               	movwf	_uart1RxCount^0,c	;volatile
 12313                           
 12314                           ; BSR set to: 61
 12315                           ;mcc_generated_files/uart1.c: 158:     PIE3bits.U1RXIE = 1;
 12316  004E7A  0139               	movlb	57	; () banked
 12317  004E7C  8793               	bsf	147,3,b	;volatile
 12318                           
 12319                           ; BSR set to: 57
 12320  004E7E  0012               	return		;funcret
 12321  004E80                     __end_of_UART1_Initialize:
 12322                           	callstack 0
 12323                           
 12324 ;; *************** function _UART1_SetTxInterruptHandler *****************
 12325 ;; Defined at:
 12326 ;;		line 333 in file "mcc_generated_files/uart1.c"
 12327 ;; Parameters:    Size  Location     Type
 12328 ;;  InterruptHan    3   20[COMRAM] PTR FTN()void 
 12329 ;;		 -> UART1_Transmit_ISR(1), 
 12330 ;; Auto vars:     Size  Location     Type
 12331 ;;		None
 12332 ;; Return value:  Size  Location     Type
 12333 ;;                  1    wreg      void 
 12334 ;; Registers used:
 12335 ;;		wreg, status,2, status,0
 12336 ;; Tracked objects:
 12337 ;;		On entry : 3F/39
 12338 ;;		On exit  : 3F/39
 12339 ;;		Unchanged: 3E/0
 12340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12341 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12344 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12345 ;;Total ram usage:        3 bytes
 12346 ;; Hardware stack levels used: 1
 12347 ;; Hardware stack levels required when called: 4
 12348 ;; This function calls:
 12349 ;;		Nothing
 12350 ;; This function is called by:
 12351 ;;		_UART1_Initialize
 12352 ;; This function uses a non-reentrant model
 12353 ;;
 12354                           
 12355                           	psect	text53
 12356  005CA8                     __ptext53:
 12357                           	callstack 0
 12358  005CA8                     _UART1_SetTxInterruptHandler:
 12359                           	callstack 24
 12360                           
 12361                           ; BSR set to: 57
 12362                           ;mcc_generated_files/uart1.c: 334:     UART1_TxInterruptHandler = InterruptHandler;
 12363                           
 12364                           ; BSR set to: 57
 12365                           ;incstack = 0
 12366  005CA8  C015  F0EF         	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
 12367  005CAC  C016  F0F0         	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
 12368  005CB0  C017  F0F1         	movff	UART1_SetTxInterruptHandler@InterruptHandler+2,_UART1_TxInterruptHandler+2
 12369                           
 12370                           ; BSR set to: 57
 12371  005CB4  0012               	return		;funcret
 12372  005CB6                     __end_of_UART1_SetTxInterruptHandler:
 12373                           	callstack 0
 12374                           
 12375 ;; *************** function _UART1_SetRxInterruptHandler *****************
 12376 ;; Defined at:
 12377 ;;		line 329 in file "mcc_generated_files/uart1.c"
 12378 ;; Parameters:    Size  Location     Type
 12379 ;;  InterruptHan    3   20[COMRAM] PTR FTN()void 
 12380 ;;		 -> UART1_Receive_ISR(1), 
 12381 ;; Auto vars:     Size  Location     Type
 12382 ;;		None
 12383 ;; Return value:  Size  Location     Type
 12384 ;;                  1    wreg      void 
 12385 ;; Registers used:
 12386 ;;		wreg, status,2, status,0
 12387 ;; Tracked objects:
 12388 ;;		On entry : 3F/39
 12389 ;;		On exit  : 3F/39
 12390 ;;		Unchanged: 3E/0
 12391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12392 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12395 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12396 ;;Total ram usage:        3 bytes
 12397 ;; Hardware stack levels used: 1
 12398 ;; Hardware stack levels required when called: 4
 12399 ;; This function calls:
 12400 ;;		Nothing
 12401 ;; This function is called by:
 12402 ;;		_UART1_Initialize
 12403 ;; This function uses a non-reentrant model
 12404 ;;
 12405                           
 12406                           	psect	text54
 12407  005CB6                     __ptext54:
 12408                           	callstack 0
 12409  005CB6                     _UART1_SetRxInterruptHandler:
 12410                           	callstack 24
 12411                           
 12412                           ; BSR set to: 57
 12413                           ;mcc_generated_files/uart1.c: 330:     UART1_RxInterruptHandler = InterruptHandler;
 12414                           
 12415                           ; BSR set to: 57
 12416                           ;incstack = 0
 12417  005CB6  C015  F0F2         	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
 12418  005CBA  C016  F0F3         	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
 12419  005CBE  C017  F0F4         	movff	UART1_SetRxInterruptHandler@InterruptHandler+2,_UART1_RxInterruptHandler+2
 12420                           
 12421                           ; BSR set to: 57
 12422  005CC2  0012               	return		;funcret
 12423  005CC4                     __end_of_UART1_SetRxInterruptHandler:
 12424                           	callstack 0
 12425                           
 12426 ;; *************** function _UART1_SetOverrunErrorHandler *****************
 12427 ;; Defined at:
 12428 ;;		line 319 in file "mcc_generated_files/uart1.c"
 12429 ;; Parameters:    Size  Location     Type
 12430 ;;  interruptHan    3   20[COMRAM] PTR FTN()void 
 12431 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
 12432 ;; Auto vars:     Size  Location     Type
 12433 ;;		None
 12434 ;; Return value:  Size  Location     Type
 12435 ;;                  1    wreg      void 
 12436 ;; Registers used:
 12437 ;;		wreg, status,2, status,0
 12438 ;; Tracked objects:
 12439 ;;		On entry : 3F/3D
 12440 ;;		On exit  : 3F/3D
 12441 ;;		Unchanged: 3E/0
 12442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12443 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12446 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12447 ;;Total ram usage:        3 bytes
 12448 ;; Hardware stack levels used: 1
 12449 ;; Hardware stack levels required when called: 4
 12450 ;; This function calls:
 12451 ;;		Nothing
 12452 ;; This function is called by:
 12453 ;;		_UART1_Initialize
 12454 ;; This function uses a non-reentrant model
 12455 ;;
 12456                           
 12457                           	psect	text55
 12458  005CC4                     __ptext55:
 12459                           	callstack 0
 12460  005CC4                     _UART1_SetOverrunErrorHandler:
 12461                           	callstack 24
 12462                           
 12463                           ; BSR set to: 61
 12464                           ;mcc_generated_files/uart1.c: 320:     UART1_OverrunErrorHandler = interruptHandler;
 12465                           
 12466                           ; BSR set to: 57
 12467                           ;incstack = 0
 12468  005CC4  C015  F0E3         	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
 12469  005CC8  C016  F0E4         	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
 12470  005CCC  C017  F0E5         	movff	UART1_SetOverrunErrorHandler@interruptHandler+2,_UART1_OverrunErrorHandler+2
 12471                           
 12472                           ; BSR set to: 61
 12473  005CD0  0012               	return		;funcret
 12474  005CD2                     __end_of_UART1_SetOverrunErrorHandler:
 12475                           	callstack 0
 12476                           
 12477 ;; *************** function _UART1_SetFramingErrorHandler *****************
 12478 ;; Defined at:
 12479 ;;		line 315 in file "mcc_generated_files/uart1.c"
 12480 ;; Parameters:    Size  Location     Type
 12481 ;;  interruptHan    3   20[COMRAM] PTR FTN()void 
 12482 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
 12483 ;; Auto vars:     Size  Location     Type
 12484 ;;		None
 12485 ;; Return value:  Size  Location     Type
 12486 ;;                  1    wreg      void 
 12487 ;; Registers used:
 12488 ;;		wreg, status,2, status,0
 12489 ;; Tracked objects:
 12490 ;;		On entry : 3F/3D
 12491 ;;		On exit  : 3F/3D
 12492 ;;		Unchanged: 3E/0
 12493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12494 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12497 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12498 ;;Total ram usage:        3 bytes
 12499 ;; Hardware stack levels used: 1
 12500 ;; Hardware stack levels required when called: 4
 12501 ;; This function calls:
 12502 ;;		Nothing
 12503 ;; This function is called by:
 12504 ;;		_UART1_Initialize
 12505 ;; This function uses a non-reentrant model
 12506 ;;
 12507                           
 12508                           	psect	text56
 12509  005CD2                     __ptext56:
 12510                           	callstack 0
 12511  005CD2                     _UART1_SetFramingErrorHandler:
 12512                           	callstack 24
 12513                           
 12514                           ; BSR set to: 61
 12515                           ;mcc_generated_files/uart1.c: 316:     UART1_FramingErrorHandler = interruptHandler;
 12516                           
 12517                           ; BSR set to: 61
 12518                           ;incstack = 0
 12519  005CD2  C015  F0E6         	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
 12520  005CD6  C016  F0E7         	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
 12521  005CDA  C017  F0E8         	movff	UART1_SetFramingErrorHandler@interruptHandler+2,_UART1_FramingErrorHandler+2
 12522                           
 12523                           ; BSR set to: 61
 12524  005CDE  0012               	return		;funcret
 12525  005CE0                     __end_of_UART1_SetFramingErrorHandler:
 12526                           	callstack 0
 12527                           
 12528 ;; *************** function _UART1_SetErrorHandler *****************
 12529 ;; Defined at:
 12530 ;;		line 323 in file "mcc_generated_files/uart1.c"
 12531 ;; Parameters:    Size  Location     Type
 12532 ;;  interruptHan    3   20[COMRAM] PTR FTN()void 
 12533 ;;		 -> UART1_DefaultErrorHandler(1), 
 12534 ;; Auto vars:     Size  Location     Type
 12535 ;;		None
 12536 ;; Return value:  Size  Location     Type
 12537 ;;                  1    wreg      void 
 12538 ;; Registers used:
 12539 ;;		wreg, status,2, status,0
 12540 ;; Tracked objects:
 12541 ;;		On entry : 3F/3D
 12542 ;;		On exit  : 3F/3D
 12543 ;;		Unchanged: 3E/0
 12544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12545 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12548 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12549 ;;Total ram usage:        3 bytes
 12550 ;; Hardware stack levels used: 1
 12551 ;; Hardware stack levels required when called: 4
 12552 ;; This function calls:
 12553 ;;		Nothing
 12554 ;; This function is called by:
 12555 ;;		_UART1_Initialize
 12556 ;; This function uses a non-reentrant model
 12557 ;;
 12558                           
 12559                           	psect	text57
 12560  005CE0                     __ptext57:
 12561                           	callstack 0
 12562  005CE0                     _UART1_SetErrorHandler:
 12563                           	callstack 24
 12564                           
 12565                           ; BSR set to: 61
 12566                           ;mcc_generated_files/uart1.c: 324:     UART1_ErrorHandler = interruptHandler;
 12567                           
 12568                           ; BSR set to: 61
 12569                           ;incstack = 0
 12570  005CE0  C015  F0E0         	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
 12571  005CE4  C016  F0E1         	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
 12572  005CE8  C017  F0E2         	movff	UART1_SetErrorHandler@interruptHandler+2,_UART1_ErrorHandler+2
 12573                           
 12574                           ; BSR set to: 61
 12575  005CEC  0012               	return		;funcret
 12576  005CEE                     __end_of_UART1_SetErrorHandler:
 12577                           	callstack 0
 12578                           
 12579 ;; *************** function _TMR6_Initialize *****************
 12580 ;; Defined at:
 12581 ;;		line 65 in file "mcc_generated_files/tmr6.c"
 12582 ;; Parameters:    Size  Location     Type
 12583 ;;		None
 12584 ;; Auto vars:     Size  Location     Type
 12585 ;;		None
 12586 ;; Return value:  Size  Location     Type
 12587 ;;                  1    wreg      void 
 12588 ;; Registers used:
 12589 ;;		wreg, status,2, status,0, cstack
 12590 ;; Tracked objects:
 12591 ;;		On entry : 3F/39
 12592 ;;		On exit  : 3B/39
 12593 ;;		Unchanged: 0/0
 12594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12599 ;;Total ram usage:        0 bytes
 12600 ;; Hardware stack levels used: 1
 12601 ;; Hardware stack levels required when called: 5
 12602 ;; This function calls:
 12603 ;;		_TMR6_SetInterruptHandler
 12604 ;; This function is called by:
 12605 ;;		_SYSTEM_Initialize
 12606 ;; This function uses a non-reentrant model
 12607 ;;
 12608                           
 12609                           	psect	text58
 12610  005A6E                     __ptext58:
 12611                           	callstack 0
 12612  005A6E                     _TMR6_Initialize:
 12613                           	callstack 24
 12614                           
 12615                           ; BSR set to: 57
 12616                           ;mcc_generated_files/tmr6.c: 70:     T6CLKCON = 0x01;
 12617                           
 12618                           ; BSR set to: 61
 12619                           ;incstack = 0
 12620  005A6E  0E01               	movlw	1
 12621  005A70  6E96               	movwf	150,c	;volatile
 12622                           
 12623                           ;mcc_generated_files/tmr6.c: 73:     T6HLT = 0x20;
 12624  005A72  0E20               	movlw	32
 12625  005A74  6E95               	movwf	149,c	;volatile
 12626                           
 12627                           ;mcc_generated_files/tmr6.c: 76:     T6RST = 0x00;
 12628  005A76  0E00               	movlw	0
 12629  005A78  6E97               	movwf	151,c	;volatile
 12630                           
 12631                           ;mcc_generated_files/tmr6.c: 79:     T6PR = 0x4D;
 12632  005A7A  0E4D               	movlw	77
 12633  005A7C  6E93               	movwf	147,c	;volatile
 12634                           
 12635                           ;mcc_generated_files/tmr6.c: 82:     T6TMR = 0x00;
 12636  005A7E  0E00               	movlw	0
 12637  005A80  6E92               	movwf	146,c	;volatile
 12638                           
 12639                           ; BSR set to: 57
 12640                           ;mcc_generated_files/tmr6.c: 85:     PIR9bits.TMR6IF = 0;
 12641  005A82  91A9               	bcf	169,0,b	;volatile
 12642                           
 12643                           ; BSR set to: 57
 12644                           ;mcc_generated_files/tmr6.c: 88:     PIE9bits.TMR6IE = 1;
 12645  005A84  8199               	bsf	153,0,b	;volatile
 12646                           
 12647                           ; BSR set to: 57
 12648                           ;mcc_generated_files/tmr6.c: 91:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 12649  005A86  0E4A               	movlw	low _TMR6_DefaultInterruptHandler
 12650  005A88  6E15               	movwf	TMR6_SetInterruptHandler@InterruptHandler^0,c
 12651  005A8A  0E5D               	movlw	high _TMR6_DefaultInterruptHandler
 12652  005A8C  6E16               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)^0,c
 12653  005A8E  0E00               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 12654  005A90  6E17               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)^0,c
 12655  005A92  EC77  F02E         	call	_TMR6_SetInterruptHandler	;wreg free
 12656                           
 12657                           ;mcc_generated_files/tmr6.c: 94:     T6CON = 0xFF;
 12658  005A96  6894               	setf	148,c	;volatile
 12659  005A98  0012               	return		;funcret
 12660  005A9A                     __end_of_TMR6_Initialize:
 12661                           	callstack 0
 12662                           
 12663 ;; *************** function _TMR6_SetInterruptHandler *****************
 12664 ;; Defined at:
 12665 ;;		line 194 in file "mcc_generated_files/tmr6.c"
 12666 ;; Parameters:    Size  Location     Type
 12667 ;;  InterruptHan    3   20[COMRAM] PTR FTN()void 
 12668 ;;		 -> Led_Blink(1), TMR6_DefaultInterruptHandler(1), 
 12669 ;; Auto vars:     Size  Location     Type
 12670 ;;		None
 12671 ;; Return value:  Size  Location     Type
 12672 ;;                  1    wreg      void 
 12673 ;; Registers used:
 12674 ;;		wreg, status,2, status,0
 12675 ;; Tracked objects:
 12676 ;;		On entry : 3B/3D
 12677 ;;		On exit  : 3B/39
 12678 ;;		Unchanged: 3A/0
 12679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12680 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12683 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12684 ;;Total ram usage:        3 bytes
 12685 ;; Hardware stack levels used: 1
 12686 ;; Hardware stack levels required when called: 4
 12687 ;; This function calls:
 12688 ;;		Nothing
 12689 ;; This function is called by:
 12690 ;;		_TMR6_Initialize
 12691 ;;		_main
 12692 ;; This function uses a non-reentrant model
 12693 ;;
 12694                           
 12695                           	psect	text59
 12696  005CEE                     __ptext59:
 12697                           	callstack 0
 12698  005CEE                     _TMR6_SetInterruptHandler:
 12699                           	callstack 26
 12700                           
 12701                           ;mcc_generated_files/tmr6.c: 195:     TMR6_InterruptHandler = InterruptHandler;
 12702                           
 12703                           ;incstack = 0
 12704  005CEE  C015  F0E9         	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
 12705  005CF2  C016  F0EA         	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
 12706  005CF6  C017  F0EB         	movff	TMR6_SetInterruptHandler@InterruptHandler+2,_TMR6_InterruptHandler+2
 12707  005CFA  0012               	return		;funcret
 12708  005CFC                     __end_of_TMR6_SetInterruptHandler:
 12709                           	callstack 0
 12710                           
 12711 ;; *************** function _TMR5_Initialize *****************
 12712 ;; Defined at:
 12713 ;;		line 65 in file "mcc_generated_files/tmr5.c"
 12714 ;; Parameters:    Size  Location     Type
 12715 ;;		None
 12716 ;; Auto vars:     Size  Location     Type
 12717 ;;		None
 12718 ;; Return value:  Size  Location     Type
 12719 ;;                  1    wreg      void 
 12720 ;; Registers used:
 12721 ;;		wreg, status,2, status,0, cstack
 12722 ;; Tracked objects:
 12723 ;;		On entry : 3F/3E
 12724 ;;		On exit  : 3B/39
 12725 ;;		Unchanged: 0/0
 12726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12729 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12730 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12731 ;;Total ram usage:        2 bytes
 12732 ;; Hardware stack levels used: 1
 12733 ;; Hardware stack levels required when called: 5
 12734 ;; This function calls:
 12735 ;;		_TMR5_SetInterruptHandler
 12736 ;; This function is called by:
 12737 ;;		_SYSTEM_Initialize
 12738 ;; This function uses a non-reentrant model
 12739 ;;
 12740                           
 12741                           	psect	text60
 12742  00567E                     __ptext60:
 12743                           	callstack 0
 12744  00567E                     _TMR5_Initialize:
 12745                           	callstack 24
 12746                           
 12747                           ; BSR set to: 62
 12748                           ;mcc_generated_files/tmr5.c: 70:     T5GCON = 0x00;
 12749                           
 12750                           ;incstack = 0
 12751  00567E  0E00               	movlw	0
 12752  005680  6E9B               	movwf	155,c	;volatile
 12753                           
 12754                           ;mcc_generated_files/tmr5.c: 73:     T5GATE = 0x00;
 12755  005682  0E00               	movlw	0
 12756  005684  6E9C               	movwf	156,c	;volatile
 12757                           
 12758                           ;mcc_generated_files/tmr5.c: 76:     T5CLK = 0x02;
 12759  005686  0E02               	movlw	2
 12760  005688  6E9D               	movwf	157,c	;volatile
 12761                           
 12762                           ;mcc_generated_files/tmr5.c: 79:     TMR5H = 0x83;
 12763  00568A  0E83               	movlw	131
 12764  00568C  6E99               	movwf	153,c	;volatile
 12765                           
 12766                           ;mcc_generated_files/tmr5.c: 82:     TMR5L = 0x00;
 12767  00568E  0E00               	movlw	0
 12768  005690  6E98               	movwf	152,c	;volatile
 12769                           
 12770                           ; BSR set to: 62
 12771                           ;mcc_generated_files/tmr5.c: 85:     PIR8bits.TMR5IF = 0;
 12772  005692  0139               	movlb	57	; () banked
 12773  005694  9DA8               	bcf	168,6,b	;volatile
 12774                           
 12775                           ; BSR set to: 57
 12776                           ;mcc_generated_files/tmr5.c: 88:     timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 12777  005696  5098               	movf	152,w,c	;volatile
 12778  005698  006F FE64  F018    	movff	16281,??_TMR5_Initialize	;volatile
 12779  00569E  6A19               	clrf	(??_TMR5_Initialize+1)^0,c
 12780  0056A0  C018  F019         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 12781  0056A4  6A18               	clrf	??_TMR5_Initialize^0,c
 12782  0056A6  1018               	iorwf	??_TMR5_Initialize^0,w,c
 12783  0056A8  6E3F               	movwf	_timer5ReloadVal^0,c	;volatile
 12784  0056AA  5019               	movf	(??_TMR5_Initialize+1)^0,w,c
 12785  0056AC  6E40               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 12786                           
 12787                           ; BSR set to: 57
 12788                           ;mcc_generated_files/tmr5.c: 91:     PIE8bits.TMR5IE = 1;
 12789  0056AE  8D98               	bsf	152,6,b	;volatile
 12790                           
 12791                           ; BSR set to: 57
 12792                           ;mcc_generated_files/tmr5.c: 94:     TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandl
      +                          er);
 12793  0056B0  0E52               	movlw	low _TMR5_DefaultInterruptHandler
 12794  0056B2  6E15               	movwf	TMR5_SetInterruptHandler@InterruptHandler^0,c
 12795  0056B4  0E5D               	movlw	high _TMR5_DefaultInterruptHandler
 12796  0056B6  6E16               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)^0,c
 12797  0056B8  0E00               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 12798  0056BA  6E17               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)^0,c
 12799  0056BC  EC7E  F02E         	call	_TMR5_SetInterruptHandler	;wreg free
 12800                           
 12801                           ;mcc_generated_files/tmr5.c: 97:     T5CON = 0x01;
 12802  0056C0  0E01               	movlw	1
 12803  0056C2  6E9A               	movwf	154,c	;volatile
 12804  0056C4  0012               	return		;funcret
 12805  0056C6                     __end_of_TMR5_Initialize:
 12806                           	callstack 0
 12807                           
 12808 ;; *************** function _TMR5_SetInterruptHandler *****************
 12809 ;; Defined at:
 12810 ;;		line 179 in file "mcc_generated_files/tmr5.c"
 12811 ;; Parameters:    Size  Location     Type
 12812 ;;  InterruptHan    3   20[COMRAM] PTR FTN()void 
 12813 ;;		 -> Timers_Isr(1), TMR5_DefaultInterruptHandler(1), 
 12814 ;; Auto vars:     Size  Location     Type
 12815 ;;		None
 12816 ;; Return value:  Size  Location     Type
 12817 ;;                  1    wreg      void 
 12818 ;; Registers used:
 12819 ;;		wreg, status,2, status,0
 12820 ;; Tracked objects:
 12821 ;;		On entry : 3B/3D
 12822 ;;		On exit  : 3B/39
 12823 ;;		Unchanged: 3A/0
 12824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12825 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12828 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12829 ;;Total ram usage:        3 bytes
 12830 ;; Hardware stack levels used: 1
 12831 ;; Hardware stack levels required when called: 4
 12832 ;; This function calls:
 12833 ;;		Nothing
 12834 ;; This function is called by:
 12835 ;;		_TMR5_Initialize
 12836 ;;		_main
 12837 ;; This function uses a non-reentrant model
 12838 ;;
 12839                           
 12840                           	psect	text61
 12841  005CFC                     __ptext61:
 12842                           	callstack 0
 12843  005CFC                     _TMR5_SetInterruptHandler:
 12844                           	callstack 26
 12845                           
 12846                           ;mcc_generated_files/tmr5.c: 180:     TMR5_InterruptHandler = InterruptHandler;
 12847                           
 12848                           ;incstack = 0
 12849  005CFC  C015  F0DD         	movff	TMR5_SetInterruptHandler@InterruptHandler,_TMR5_InterruptHandler
 12850  005D00  C016  F0DE         	movff	TMR5_SetInterruptHandler@InterruptHandler+1,_TMR5_InterruptHandler+1
 12851  005D04  C017  F0DF         	movff	TMR5_SetInterruptHandler@InterruptHandler+2,_TMR5_InterruptHandler+2
 12852  005D08  0012               	return		;funcret
 12853  005D0A                     __end_of_TMR5_SetInterruptHandler:
 12854                           	callstack 0
 12855                           
 12856 ;; *************** function _SPI1_Initialize *****************
 12857 ;; Defined at:
 12858 ;;		line 64 in file "mcc_generated_files/spi1.c"
 12859 ;; Parameters:    Size  Location     Type
 12860 ;;		None
 12861 ;; Auto vars:     Size  Location     Type
 12862 ;;		None
 12863 ;; Return value:  Size  Location     Type
 12864 ;;                  1    wreg      void 
 12865 ;; Registers used:
 12866 ;;		wreg, status,2
 12867 ;; Tracked objects:
 12868 ;;		On entry : 3F/39
 12869 ;;		On exit  : 3F/3D
 12870 ;;		Unchanged: 0/0
 12871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12876 ;;Total ram usage:        0 bytes
 12877 ;; Hardware stack levels used: 1
 12878 ;; Hardware stack levels required when called: 4
 12879 ;; This function calls:
 12880 ;;		Nothing
 12881 ;; This function is called by:
 12882 ;;		_SYSTEM_Initialize
 12883 ;; This function uses a non-reentrant model
 12884 ;;
 12885                           
 12886                           	psect	text62
 12887  005BFA                     __ptext62:
 12888                           	callstack 0
 12889  005BFA                     _SPI1_Initialize:
 12890                           	callstack 25
 12891                           
 12892                           ; BSR set to: 57
 12893                           ;mcc_generated_files/spi1.c: 67:     SPI1CON0 = 0x02;
 12894                           
 12895                           ;incstack = 0
 12896  005BFA  0E02               	movlw	2
 12897  005BFC  013D               	movlb	61	; () banked
 12898  005BFE  6F14               	movwf	20,b	;volatile
 12899                           
 12900                           ;mcc_generated_files/spi1.c: 69:     SPI1CON1 = 0x40;
 12901  005C00  0E40               	movlw	64
 12902  005C02  6F15               	movwf	21,b	;volatile
 12903                           
 12904                           ;mcc_generated_files/spi1.c: 71:     SPI1CON2 = 0x00;
 12905  005C04  0E00               	movlw	0
 12906  005C06  6F16               	movwf	22,b	;volatile
 12907                           
 12908                           ;mcc_generated_files/spi1.c: 73:     SPI1CLK = 0x00;
 12909  005C08  0E00               	movlw	0
 12910  005C0A  6F1C               	movwf	28,b	;volatile
 12911                           
 12912                           ;mcc_generated_files/spi1.c: 75:     SPI1BAUD = 0x08;
 12913  005C0C  0E08               	movlw	8
 12914  005C0E  6F19               	movwf	25,b	;volatile
 12915                           
 12916                           ; BSR set to: 61
 12917                           ;mcc_generated_files/spi1.c: 76:     TRISCbits.TRISC3 = 0;
 12918  005C10  96C4               	bcf	196,3,c	;volatile
 12919                           
 12920                           ; BSR set to: 61
 12921  005C12  0012               	return		;funcret
 12922  005C14                     __end_of_SPI1_Initialize:
 12923                           	callstack 0
 12924                           
 12925 ;; *************** function _PMD_Initialize *****************
 12926 ;; Defined at:
 12927 ;;		line 82 in file "mcc_generated_files/mcc.c"
 12928 ;; Parameters:    Size  Location     Type
 12929 ;;		None
 12930 ;; Auto vars:     Size  Location     Type
 12931 ;;		None
 12932 ;; Return value:  Size  Location     Type
 12933 ;;                  1    wreg      void 
 12934 ;; Registers used:
 12935 ;;		wreg, status,2
 12936 ;; Tracked objects:
 12937 ;;		On entry : 3F/39
 12938 ;;		On exit  : 3F/39
 12939 ;;		Unchanged: 0/0
 12940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12945 ;;Total ram usage:        0 bytes
 12946 ;; Hardware stack levels used: 1
 12947 ;; Hardware stack levels required when called: 4
 12948 ;; This function calls:
 12949 ;;		Nothing
 12950 ;; This function is called by:
 12951 ;;		_SYSTEM_Initialize
 12952 ;; This function uses a non-reentrant model
 12953 ;;
 12954                           
 12955                           	psect	text63
 12956  005B7C                     __ptext63:
 12957                           	callstack 0
 12958  005B7C                     _PMD_Initialize:
 12959                           	callstack 25
 12960                           
 12961                           ; BSR set to: 57
 12962                           ;mcc_generated_files/mcc.c: 85:     PMD0 = 0x00;
 12963                           
 12964                           ; BSR set to: 61
 12965                           ;incstack = 0
 12966  005B7C  0E00               	movlw	0
 12967  005B7E  6FC0               	movwf	192,b	;volatile
 12968                           
 12969                           ;mcc_generated_files/mcc.c: 87:     PMD1 = 0x00;
 12970  005B80  0E00               	movlw	0
 12971  005B82  6FC1               	movwf	193,b	;volatile
 12972                           
 12973                           ;mcc_generated_files/mcc.c: 89:     PMD2 = 0x00;
 12974  005B84  0E00               	movlw	0
 12975  005B86  6FC2               	movwf	194,b	;volatile
 12976                           
 12977                           ;mcc_generated_files/mcc.c: 91:     PMD3 = 0x00;
 12978  005B88  0E00               	movlw	0
 12979  005B8A  6FC3               	movwf	195,b	;volatile
 12980                           
 12981                           ;mcc_generated_files/mcc.c: 93:     PMD4 = 0x00;
 12982  005B8C  0E00               	movlw	0
 12983  005B8E  6FC4               	movwf	196,b	;volatile
 12984                           
 12985                           ;mcc_generated_files/mcc.c: 95:     PMD5 = 0x00;
 12986  005B90  0E00               	movlw	0
 12987  005B92  6FC5               	movwf	197,b	;volatile
 12988                           
 12989                           ;mcc_generated_files/mcc.c: 97:     PMD6 = 0x00;
 12990  005B94  0E00               	movlw	0
 12991  005B96  6FC6               	movwf	198,b	;volatile
 12992                           
 12993                           ;mcc_generated_files/mcc.c: 99:     PMD7 = 0x00;
 12994  005B98  0E00               	movlw	0
 12995  005B9A  6FC7               	movwf	199,b	;volatile
 12996                           
 12997                           ; BSR set to: 57
 12998  005B9C  0012               	return		;funcret
 12999  005B9E                     __end_of_PMD_Initialize:
 13000                           	callstack 0
 13001                           
 13002 ;; *************** function _PIN_MANAGER_Initialize *****************
 13003 ;; Defined at:
 13004 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 13005 ;; Parameters:    Size  Location     Type
 13006 ;;		None
 13007 ;; Auto vars:     Size  Location     Type
 13008 ;;		None
 13009 ;; Return value:  Size  Location     Type
 13010 ;;                  1    wreg      void 
 13011 ;; Registers used:
 13012 ;;		wreg, status,2
 13013 ;; Tracked objects:
 13014 ;;		On entry : 3F/39
 13015 ;;		On exit  : 3F/3A
 13016 ;;		Unchanged: 0/0
 13017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13022 ;;Total ram usage:        0 bytes
 13023 ;; Hardware stack levels used: 1
 13024 ;; Hardware stack levels required when called: 4
 13025 ;; This function calls:
 13026 ;;		Nothing
 13027 ;; This function is called by:
 13028 ;;		_SYSTEM_Initialize
 13029 ;; This function uses a non-reentrant model
 13030 ;;
 13031                           
 13032                           	psect	text64
 13033  004B92                     __ptext64:
 13034                           	callstack 0
 13035  004B92                     _PIN_MANAGER_Initialize:
 13036                           	callstack 25
 13037                           
 13038                           ; BSR set to: 57
 13039                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 13040                           
 13041                           ; BSR set to: 57
 13042                           ;incstack = 0
 13043  004B92  0E00               	movlw	0
 13044  004B94  6EBE               	movwf	190,c	;volatile
 13045                           
 13046                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x11;
 13047  004B96  0E11               	movlw	17
 13048  004B98  6EBD               	movwf	189,c	;volatile
 13049                           
 13050                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x20;
 13051  004B9A  0E20               	movlw	32
 13052  004B9C  6EBA               	movwf	186,c	;volatile
 13053                           
 13054                           ;mcc_generated_files/pin_manager.c: 63:     LATF = 0x00;
 13055  004B9E  0E00               	movlw	0
 13056  004BA0  6EBF               	movwf	191,c	;volatile
 13057                           
 13058                           ;mcc_generated_files/pin_manager.c: 64:     LATB = 0x00;
 13059  004BA2  0E00               	movlw	0
 13060  004BA4  6EBB               	movwf	187,c	;volatile
 13061                           
 13062                           ;mcc_generated_files/pin_manager.c: 65:     LATC = 0x00;
 13063  004BA6  0E00               	movlw	0
 13064  004BA8  6EBC               	movwf	188,c	;volatile
 13065                           
 13066                           ;mcc_generated_files/pin_manager.c: 70:     TRISE = 0x02;
 13067  004BAA  0E02               	movlw	2
 13068  004BAC  6EC6               	movwf	198,c	;volatile
 13069                           
 13070                           ;mcc_generated_files/pin_manager.c: 71:     TRISF = 0x0F;
 13071  004BAE  0E0F               	movlw	15
 13072  004BB0  6EC7               	movwf	199,c	;volatile
 13073                           
 13074                           ;mcc_generated_files/pin_manager.c: 72:     TRISA = 0xDF;
 13075  004BB2  0EDF               	movlw	223
 13076  004BB4  6EC2               	movwf	194,c	;volatile
 13077                           
 13078                           ; BSR set to: 57
 13079                           ;mcc_generated_files/pin_manager.c: 73:     TRISB = 0xFF;
 13080  004BB6  68C3               	setf	195,c	;volatile
 13081                           
 13082                           ;mcc_generated_files/pin_manager.c: 74:     TRISC = 0x90;
 13083  004BB8  0E90               	movlw	144
 13084  004BBA  6EC4               	movwf	196,c	;volatile
 13085                           
 13086                           ;mcc_generated_files/pin_manager.c: 75:     TRISD = 0x0C;
 13087  004BBC  0E0C               	movlw	12
 13088  004BBE  6EC5               	movwf	197,c	;volatile
 13089                           
 13090                           ;mcc_generated_files/pin_manager.c: 80:     ANSELD = 0x0C;
 13091  004BC0  0E0C               	movlw	12
 13092  004BC2  013A               	movlb	58	; () banked
 13093  004BC4  6F70               	movwf	112,b	;volatile
 13094                           
 13095                           ;mcc_generated_files/pin_manager.c: 81:     ANSELC = 0x60;
 13096  004BC6  0E60               	movlw	96
 13097  004BC8  6F60               	movwf	96,b	;volatile
 13098                           
 13099                           ;mcc_generated_files/pin_manager.c: 82:     ANSELB = 0xFE;
 13100  004BCA  0EFE               	movlw	254
 13101  004BCC  6F50               	movwf	80,b	;volatile
 13102                           
 13103                           ;mcc_generated_files/pin_manager.c: 83:     ANSELE = 0x02;
 13104  004BCE  0E02               	movlw	2
 13105  004BD0  6F80               	movwf	128,b	;volatile
 13106                           
 13107                           ;mcc_generated_files/pin_manager.c: 84:     ANSELF = 0x0F;
 13108  004BD2  0E0F               	movlw	15
 13109  004BD4  6F90               	movwf	144,b	;volatile
 13110                           
 13111                           ;mcc_generated_files/pin_manager.c: 85:     ANSELA = 0x8F;
 13112  004BD6  0E8F               	movlw	143
 13113  004BD8  6F40               	movwf	64,b	;volatile
 13114                           
 13115                           ;mcc_generated_files/pin_manager.c: 90:     WPUD = 0x00;
 13116  004BDA  0E00               	movlw	0
 13117  004BDC  6F71               	movwf	113,b	;volatile
 13118                           
 13119                           ;mcc_generated_files/pin_manager.c: 91:     WPUF = 0x00;
 13120  004BDE  0E00               	movlw	0
 13121  004BE0  6F91               	movwf	145,b	;volatile
 13122                           
 13123                           ;mcc_generated_files/pin_manager.c: 92:     WPUE = 0x00;
 13124  004BE2  0E00               	movlw	0
 13125  004BE4  6F81               	movwf	129,b	;volatile
 13126                           
 13127                           ;mcc_generated_files/pin_manager.c: 93:     WPUB = 0x01;
 13128  004BE6  0E01               	movlw	1
 13129  004BE8  6F51               	movwf	81,b	;volatile
 13130                           
 13131                           ;mcc_generated_files/pin_manager.c: 94:     WPUA = 0x50;
 13132  004BEA  0E50               	movlw	80
 13133  004BEC  6F41               	movwf	65,b	;volatile
 13134                           
 13135                           ;mcc_generated_files/pin_manager.c: 95:     WPUC = 0x00;
 13136  004BEE  0E00               	movlw	0
 13137  004BF0  6F61               	movwf	97,b	;volatile
 13138                           
 13139                           ;mcc_generated_files/pin_manager.c: 100:     RB1I2C = 0x00;
 13140  004BF2  0E00               	movlw	0
 13141  004BF4  6F5A               	movwf	90,b	;volatile
 13142                           
 13143                           ;mcc_generated_files/pin_manager.c: 101:     RB2I2C = 0x00;
 13144  004BF6  0E00               	movlw	0
 13145  004BF8  6F5B               	movwf	91,b	;volatile
 13146                           
 13147                           ;mcc_generated_files/pin_manager.c: 102:     RC3I2C = 0x00;
 13148  004BFA  0E00               	movlw	0
 13149  004BFC  6F6A               	movwf	106,b	;volatile
 13150                           
 13151                           ;mcc_generated_files/pin_manager.c: 103:     RC4I2C = 0x00;
 13152  004BFE  0E00               	movlw	0
 13153  004C00  6F6B               	movwf	107,b	;volatile
 13154                           
 13155                           ;mcc_generated_files/pin_manager.c: 104:     RD0I2C = 0x00;
 13156  004C02  0E00               	movlw	0
 13157  004C04  6F7A               	movwf	122,b	;volatile
 13158                           
 13159                           ;mcc_generated_files/pin_manager.c: 105:     RD1I2C = 0x00;
 13160  004C06  0E00               	movlw	0
 13161  004C08  6F7B               	movwf	123,b	;volatile
 13162                           
 13163                           ;mcc_generated_files/pin_manager.c: 110:     ODCONE = 0x00;
 13164  004C0A  0E00               	movlw	0
 13165  004C0C  6F82               	movwf	130,b	;volatile
 13166                           
 13167                           ;mcc_generated_files/pin_manager.c: 111:     ODCONF = 0x00;
 13168  004C0E  0E00               	movlw	0
 13169  004C10  6F92               	movwf	146,b	;volatile
 13170                           
 13171                           ;mcc_generated_files/pin_manager.c: 112:     ODCONA = 0x00;
 13172  004C12  0E00               	movlw	0
 13173  004C14  6F42               	movwf	66,b	;volatile
 13174                           
 13175                           ;mcc_generated_files/pin_manager.c: 113:     ODCONB = 0x00;
 13176  004C16  0E00               	movlw	0
 13177  004C18  6F52               	movwf	82,b	;volatile
 13178                           
 13179                           ;mcc_generated_files/pin_manager.c: 114:     ODCONC = 0x00;
 13180  004C1A  0E00               	movlw	0
 13181  004C1C  6F62               	movwf	98,b	;volatile
 13182                           
 13183                           ;mcc_generated_files/pin_manager.c: 115:     ODCOND = 0x00;
 13184  004C1E  0E00               	movlw	0
 13185  004C20  6F72               	movwf	114,b	;volatile
 13186                           
 13187                           ; BSR set to: 58
 13188                           ;mcc_generated_files/pin_manager.c: 120:     SLRCONA = 0xFF;
 13189  004C22  6943               	setf	67,b	;volatile
 13190                           
 13191                           ; BSR set to: 58
 13192                           ;mcc_generated_files/pin_manager.c: 121:     SLRCONB = 0xFF;
 13193  004C24  6953               	setf	83,b	;volatile
 13194                           
 13195                           ; BSR set to: 58
 13196                           ;mcc_generated_files/pin_manager.c: 122:     SLRCONC = 0xFF;
 13197  004C26  6963               	setf	99,b	;volatile
 13198                           
 13199                           ; BSR set to: 58
 13200                           ;mcc_generated_files/pin_manager.c: 123:     SLRCOND = 0xFF;
 13201  004C28  6973               	setf	115,b	;volatile
 13202                           
 13203                           ;mcc_generated_files/pin_manager.c: 124:     SLRCONE = 0x07;
 13204  004C2A  0E07               	movlw	7
 13205  004C2C  6F83               	movwf	131,b	;volatile
 13206                           
 13207                           ; BSR set to: 58
 13208                           ;mcc_generated_files/pin_manager.c: 125:     SLRCONF = 0xFF;
 13209  004C2E  6993               	setf	147,b	;volatile
 13210                           
 13211                           ; BSR set to: 58
 13212                           ;mcc_generated_files/pin_manager.c: 130:     INLVLA = 0xFF;
 13213  004C30  6944               	setf	68,b	;volatile
 13214                           
 13215                           ; BSR set to: 58
 13216                           ;mcc_generated_files/pin_manager.c: 131:     INLVLB = 0xFF;
 13217  004C32  6954               	setf	84,b	;volatile
 13218                           
 13219                           ; BSR set to: 58
 13220                           ;mcc_generated_files/pin_manager.c: 132:     INLVLC = 0xFF;
 13221  004C34  6964               	setf	100,b	;volatile
 13222                           
 13223                           ; BSR set to: 58
 13224                           ;mcc_generated_files/pin_manager.c: 133:     INLVLD = 0xFF;
 13225  004C36  6974               	setf	116,b	;volatile
 13226                           
 13227                           ;mcc_generated_files/pin_manager.c: 134:     INLVLE = 0x0F;
 13228  004C38  0E0F               	movlw	15
 13229  004C3A  6F84               	movwf	132,b	;volatile
 13230                           
 13231                           ; BSR set to: 58
 13232                           ;mcc_generated_files/pin_manager.c: 135:     INLVLF = 0xFF;
 13233  004C3C  6994               	setf	148,b	;volatile
 13234                           
 13235                           ;mcc_generated_files/pin_manager.c: 144:     SPI1SCKPPS = 0x13;
 13236  004C3E  0E13               	movlw	19
 13237  004C40  6FDE               	movwf	222,b	;volatile
 13238                           
 13239                           ;mcc_generated_files/pin_manager.c: 145:     RC3PPS = 0x1E;
 13240  004C42  0E1E               	movlw	30
 13241  004C44  6F13               	movwf	19,b	;volatile
 13242                           
 13243                           ;mcc_generated_files/pin_manager.c: 146:     RC5PPS = 0x1F;
 13244  004C46  0E1F               	movlw	31
 13245  004C48  6F15               	movwf	21,b	;volatile
 13246                           
 13247                           ;mcc_generated_files/pin_manager.c: 147:     RC6PPS = 0x13;
 13248  004C4A  0E13               	movlw	19
 13249  004C4C  6F16               	movwf	22,b	;volatile
 13250                           
 13251                           ;mcc_generated_files/pin_manager.c: 148:     U1RXPPS = 0x17;
 13252  004C4E  0E17               	movlw	23
 13253  004C50  6FE5               	movwf	229,b	;volatile
 13254                           
 13255                           ;mcc_generated_files/pin_manager.c: 149:     SPI1SDIPPS = 0x14;
 13256  004C52  0E14               	movlw	20
 13257  004C54  6FDF               	movwf	223,b	;volatile
 13258                           
 13259                           ; BSR set to: 58
 13260  004C56  0012               	return		;funcret
 13261  004C58                     __end_of_PIN_MANAGER_Initialize:
 13262                           	callstack 0
 13263                           
 13264 ;; *************** function _OSCILLATOR_Initialize *****************
 13265 ;; Defined at:
 13266 ;;		line 64 in file "mcc_generated_files/mcc.c"
 13267 ;; Parameters:    Size  Location     Type
 13268 ;;		None
 13269 ;; Auto vars:     Size  Location     Type
 13270 ;;		None
 13271 ;; Return value:  Size  Location     Type
 13272 ;;                  1    wreg      void 
 13273 ;; Registers used:
 13274 ;;		wreg, status,2
 13275 ;; Tracked objects:
 13276 ;;		On entry : 3F/3A
 13277 ;;		On exit  : 3F/39
 13278 ;;		Unchanged: 0/0
 13279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13284 ;;Total ram usage:        0 bytes
 13285 ;; Hardware stack levels used: 1
 13286 ;; Hardware stack levels required when called: 4
 13287 ;; This function calls:
 13288 ;;		Nothing
 13289 ;; This function is called by:
 13290 ;;		_SYSTEM_Initialize
 13291 ;; This function uses a non-reentrant model
 13292 ;;
 13293                           
 13294                           	psect	text65
 13295  005BDE                     __ptext65:
 13296                           	callstack 0
 13297  005BDE                     _OSCILLATOR_Initialize:
 13298                           	callstack 25
 13299                           
 13300                           ; BSR set to: 58
 13301                           ;mcc_generated_files/mcc.c: 67:     OSCCON1 = 0x20;
 13302                           
 13303                           ; BSR set to: 58
 13304                           ;incstack = 0
 13305  005BDE  0E20               	movlw	32
 13306  005BE0  0139               	movlb	57	; () banked
 13307  005BE2  6FD9               	movwf	217,b	;volatile
 13308                           
 13309                           ;mcc_generated_files/mcc.c: 69:     OSCCON3 = 0x00;
 13310  005BE4  0E00               	movlw	0
 13311  005BE6  6FDB               	movwf	219,b	;volatile
 13312                           
 13313                           ;mcc_generated_files/mcc.c: 71:     OSCEN = 0x00;
 13314  005BE8  0E00               	movlw	0
 13315  005BEA  6FDD               	movwf	221,b	;volatile
 13316                           
 13317                           ;mcc_generated_files/mcc.c: 73:     OSCFRQ = 0x05;
 13318  005BEC  0E05               	movlw	5
 13319  005BEE  6FDF               	movwf	223,b	;volatile
 13320                           
 13321                           ;mcc_generated_files/mcc.c: 75:     OSCTUNE = 0x00;
 13322  005BF0  0E00               	movlw	0
 13323  005BF2  6FDE               	movwf	222,b	;volatile
 13324  005BF4                     l185:
 13325                           
 13326                           ; BSR set to: 57
 13327                           ;mcc_generated_files/mcc.c: 77:     while(PLLR == 0)
 13328  005BF4  B1DC               	btfsc	220,0,b	;volatile
 13329  005BF6  0012               	return	
 13330  005BF8  D7FD               	goto	l185
 13331  005BFA                     __end_of_OSCILLATOR_Initialize:
 13332                           	callstack 0
 13333                           
 13334 ;; *************** function _INTERRUPT_Initialize *****************
 13335 ;; Defined at:
 13336 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 13337 ;; Parameters:    Size  Location     Type
 13338 ;;		None
 13339 ;; Auto vars:     Size  Location     Type
 13340 ;;  state           1   20[COMRAM] _Bool 
 13341 ;; Return value:  Size  Location     Type
 13342 ;;                  1    wreg      void 
 13343 ;; Registers used:
 13344 ;;		wreg, status,2
 13345 ;; Tracked objects:
 13346 ;;		On entry : 3F/0
 13347 ;;		On exit  : 3F/39
 13348 ;;		Unchanged: 0/0
 13349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13351 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13353 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13354 ;;Total ram usage:        1 bytes
 13355 ;; Hardware stack levels used: 1
 13356 ;; Hardware stack levels required when called: 4
 13357 ;; This function calls:
 13358 ;;		Nothing
 13359 ;; This function is called by:
 13360 ;;		_SYSTEM_Initialize
 13361 ;; This function uses a non-reentrant model
 13362 ;;
 13363                           
 13364                           	psect	text66
 13365  00570C                     __ptext66:
 13366                           	callstack 0
 13367  00570C                     _INTERRUPT_Initialize:
 13368                           	callstack 25
 13369                           
 13370                           ; BSR set to: 0
 13371                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 13372                           
 13373                           ; BSR set to: 57
 13374                           ;incstack = 0
 13375  00570C  8AD2               	bsf	210,5,c	;volatile
 13376                           
 13377                           ; BSR set to: 0
 13378                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 13379  00570E  0E00               	movlw	0
 13380  005710  BED2               	btfsc	16338,7,c	;volatile
 13381  005712  0E01               	movlw	1
 13382  005714  6E15               	movwf	INTERRUPT_Initialize@state^0,c
 13383                           
 13384                           ; BSR set to: 0
 13385                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 13386  005716  9ED2               	bcf	16338,7,c	;volatile
 13387                           
 13388                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 13389  005718  0E55               	movlw	85
 13390  00571A  6ED4               	movwf	212,c	;volatile
 13391                           
 13392                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 13393  00571C  0EAA               	movlw	170
 13394  00571E  6ED4               	movwf	212,c	;volatile
 13395                           
 13396                           ; BSR set to: 0
 13397                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 13398  005720  90D4               	bcf	212,0,c	;volatile
 13399                           
 13400                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTBASEU = 0;
 13401  005722  0E00               	movlw	0
 13402  005724  6ED7               	movwf	215,c	;volatile
 13403                           
 13404                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTBASEH = 0;
 13405  005726  0E00               	movlw	0
 13406  005728  6ED6               	movwf	214,c	;volatile
 13407                           
 13408                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTBASEL = 8;
 13409  00572A  0E08               	movlw	8
 13410  00572C  6ED5               	movwf	213,c	;volatile
 13411                           
 13412                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 13413  00572E  0E55               	movlw	85
 13414  005730  6ED4               	movwf	212,c	;volatile
 13415                           
 13416                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 13417  005732  0EAA               	movlw	170
 13418  005734  6ED4               	movwf	212,c	;volatile
 13419                           
 13420                           ; BSR set to: 0
 13421                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 13422  005736  80D4               	bsf	212,0,c	;volatile
 13423                           
 13424                           ; BSR set to: 0
 13425                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 13426  005738  B015               	btfsc	INTERRUPT_Initialize@state^0,0,c
 13427  00573A  D002               	bra	u12145
 13428  00573C  9ED2               	bcf	16338,7,c	;volatile
 13429  00573E  D001               	bra	u12146
 13430  005740                     u12145:
 13431  005740  8ED2               	bsf	16338,7,c	;volatile
 13432  005742                     u12146:
 13433                           
 13434                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR3bits.U1TXIP = 1;
 13435  005742  0139               	movlb	57	; () banked
 13436  005744  8983               	bsf	131,4,b	;volatile
 13437                           
 13438                           ; BSR set to: 57
 13439                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR3bits.U1RXIP = 1;
 13440  005746  8783               	bsf	131,3,b	;volatile
 13441                           
 13442                           ; BSR set to: 57
 13443                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR9bits.TMR6IP = 1;
 13444  005748  8189               	bsf	137,0,b	;volatile
 13445                           
 13446                           ; BSR set to: 57
 13447                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR8bits.TMR5IP = 1;
 13448  00574A  8D88               	bsf	136,6,b	;volatile
 13449                           
 13450                           ; BSR set to: 57
 13451                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR1bits.ADIP = 1;
 13452  00574C  8581               	bsf	129,2,b	;volatile
 13453                           
 13454                           ; BSR set to: 57
 13455  00574E  0012               	return		;funcret
 13456  005750                     __end_of_INTERRUPT_Initialize:
 13457                           	callstack 0
 13458                           
 13459 ;; *************** function _DAC1_Initialize *****************
 13460 ;; Defined at:
 13461 ;;		line 58 in file "mcc_generated_files/dac1.c"
 13462 ;; Parameters:    Size  Location     Type
 13463 ;;		None
 13464 ;; Auto vars:     Size  Location     Type
 13465 ;;		None
 13466 ;; Return value:  Size  Location     Type
 13467 ;;                  1    wreg      void 
 13468 ;; Registers used:
 13469 ;;		wreg, status,2
 13470 ;; Tracked objects:
 13471 ;;		On entry : 3B/39
 13472 ;;		On exit  : 3F/3E
 13473 ;;		Unchanged: 0/0
 13474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13479 ;;Total ram usage:        0 bytes
 13480 ;; Hardware stack levels used: 1
 13481 ;; Hardware stack levels required when called: 4
 13482 ;; This function calls:
 13483 ;;		Nothing
 13484 ;; This function is called by:
 13485 ;;		_SYSTEM_Initialize
 13486 ;; This function uses a non-reentrant model
 13487 ;;
 13488                           
 13489                           	psect	text67
 13490  005D18                     __ptext67:
 13491                           	callstack 0
 13492  005D18                     _DAC1_Initialize:
 13493                           	callstack 25
 13494                           
 13495                           ;mcc_generated_files/dac1.c: 61:     DAC1CON0 = 0xA4;
 13496                           
 13497                           ; BSR set to: 57
 13498                           ;incstack = 0
 13499  005D18  0EA4               	movlw	164
 13500  005D1A  013E               	movlb	62	; () banked
 13501  005D1C  6F9E               	movwf	158,b	;volatile
 13502                           
 13503                           ;mcc_generated_files/dac1.c: 63:     DAC1CON1 = 0x1F;
 13504  005D1E  0E1F               	movlw	31
 13505  005D20  6F9C               	movwf	156,b	;volatile
 13506                           
 13507                           ; BSR set to: 62
 13508  005D22  0012               	return		;funcret
 13509  005D24                     __end_of_DAC1_Initialize:
 13510                           	callstack 0
 13511                           
 13512 ;; *************** function _ADCC_Initialize *****************
 13513 ;; Defined at:
 13514 ;;		line 64 in file "mcc_generated_files/adcc.c"
 13515 ;; Parameters:    Size  Location     Type
 13516 ;;		None
 13517 ;; Auto vars:     Size  Location     Type
 13518 ;;		None
 13519 ;; Return value:  Size  Location     Type
 13520 ;;                  1    wreg      void 
 13521 ;; Registers used:
 13522 ;;		wreg, status,2, status,0, cstack
 13523 ;; Tracked objects:
 13524 ;;		On entry : 3B/39
 13525 ;;		On exit  : 3B/39
 13526 ;;		Unchanged: 0/0
 13527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13532 ;;Total ram usage:        0 bytes
 13533 ;; Hardware stack levels used: 1
 13534 ;; Hardware stack levels required when called: 5
 13535 ;; This function calls:
 13536 ;;		_ADCC_SetADIInterruptHandler
 13537 ;; This function is called by:
 13538 ;;		_SYSTEM_Initialize
 13539 ;; This function uses a non-reentrant model
 13540 ;;
 13541                           
 13542                           	psect	text68
 13543  005348                     __ptext68:
 13544                           	callstack 0
 13545  005348                     _ADCC_Initialize:
 13546                           	callstack 24
 13547                           
 13548                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 13549                           
 13550                           ; BSR set to: 62
 13551                           ;incstack = 0
 13552  005348  0E00               	movlw	0
 13553  00534A  013E               	movlb	62	; () banked
 13554  00534C  6FDE               	movwf	222,b	;volatile
 13555                           
 13556                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 13557  00534E  0E00               	movlw	0
 13558  005350  6FDF               	movwf	223,b	;volatile
 13559                           
 13560                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 13561  005352  0E00               	movlw	0
 13562  005354  6FE0               	movwf	224,b	;volatile
 13563                           
 13564                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 13565  005356  0E00               	movlw	0
 13566  005358  6FE1               	movwf	225,b	;volatile
 13567                           
 13568                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 13569  00535A  0E00               	movlw	0
 13570  00535C  6FE4               	movwf	228,b	;volatile
 13571                           
 13572                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 13573  00535E  0E00               	movlw	0
 13574  005360  6FE5               	movwf	229,b	;volatile
 13575                           
 13576                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 13577  005362  0E00               	movlw	0
 13578  005364  6FEA               	movwf	234,b	;volatile
 13579                           
 13580                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 13581  005366  0E00               	movlw	0
 13582  005368  6FEC               	movwf	236,b	;volatile
 13583                           
 13584                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 13585  00536A  0E00               	movlw	0
 13586  00536C  6FF1               	movwf	241,b	;volatile
 13587                           
 13588                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x10;
 13589  00536E  0E10               	movlw	16
 13590  005370  6FF3               	movwf	243,b	;volatile
 13591                           
 13592                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 13593  005372  0E00               	movlw	0
 13594  005374  6FF4               	movwf	244,b	;volatile
 13595                           
 13596                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 13597  005376  0E00               	movlw	0
 13598  005378  6FF5               	movwf	245,b	;volatile
 13599                           
 13600                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 13601  00537A  0E00               	movlw	0
 13602  00537C  6FF6               	movwf	246,b	;volatile
 13603                           
 13604                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 13605  00537E  0E00               	movlw	0
 13606  005380  6FF7               	movwf	247,b	;volatile
 13607                           
 13608                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 13609  005382  0E00               	movlw	0
 13610  005384  6FF9               	movwf	249,b	;volatile
 13611                           
 13612                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x00;
 13613  005386  0E00               	movlw	0
 13614  005388  6FFA               	movwf	250,b	;volatile
 13615                           
 13616                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x00;
 13617  00538A  0E00               	movlw	0
 13618  00538C  6FFB               	movwf	251,b	;volatile
 13619                           
 13620                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 13621  00538E  0E00               	movlw	0
 13622  005390  6FFC               	movwf	252,b	;volatile
 13623                           
 13624                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x02;
 13625  005392  0E02               	movlw	2
 13626  005394  6FFD               	movwf	253,b	;volatile
 13627                           
 13628                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x07;
 13629  005396  0E07               	movlw	7
 13630  005398  6FFE               	movwf	254,b	;volatile
 13631                           
 13632                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
 13633  00539A  0E00               	movlw	0
 13634  00539C  6FFF               	movwf	255,b	;volatile
 13635                           
 13636                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0x94;
 13637  00539E  0E94               	movlw	148
 13638  0053A0  6FF8               	movwf	248,b	;volatile
 13639                           
 13640                           ; BSR set to: 62
 13641                           ;mcc_generated_files/adcc.c: 113:     PIR1bits.ADIF = 0;
 13642  0053A2  0139               	movlb	57	; () banked
 13643  0053A4  95A1               	bcf	161,2,b	;volatile
 13644                           
 13645                           ; BSR set to: 57
 13646                           ;mcc_generated_files/adcc.c: 115:     PIE1bits.ADIE = 1;
 13647  0053A6  8591               	bsf	145,2,b	;volatile
 13648                           
 13649                           ; BSR set to: 57
 13650                           ;mcc_generated_files/adcc.c: 117:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 13651  0053A8  0E48               	movlw	low _ADCC_DefaultInterruptHandler
 13652  0053AA  6E15               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler^0,c
 13653  0053AC  0E5D               	movlw	high _ADCC_DefaultInterruptHandler
 13654  0053AE  6E16               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)^0,c
 13655  0053B0  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 13656  0053B2  6E17               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+2)^0,c
 13657  0053B4  EC85  F02E         	call	_ADCC_SetADIInterruptHandler	;wreg free
 13658  0053B8  0012               	return		;funcret
 13659  0053BA                     __end_of_ADCC_Initialize:
 13660                           	callstack 0
 13661                           
 13662 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 13663 ;; Defined at:
 13664 ;;		line 316 in file "mcc_generated_files/adcc.c"
 13665 ;; Parameters:    Size  Location     Type
 13666 ;;  InterruptHan    3   20[COMRAM] PTR FTN()void 
 13667 ;;		 -> Adc_Isr(1), ADCC_DefaultInterruptHandler(1), 
 13668 ;; Auto vars:     Size  Location     Type
 13669 ;;		None
 13670 ;; Return value:  Size  Location     Type
 13671 ;;                  1    wreg      void 
 13672 ;; Registers used:
 13673 ;;		wreg, status,2, status,0
 13674 ;; Tracked objects:
 13675 ;;		On entry : 3B/3D
 13676 ;;		On exit  : 3B/39
 13677 ;;		Unchanged: 3A/0
 13678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13679 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13682 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13683 ;;Total ram usage:        3 bytes
 13684 ;; Hardware stack levels used: 1
 13685 ;; Hardware stack levels required when called: 4
 13686 ;; This function calls:
 13687 ;;		Nothing
 13688 ;; This function is called by:
 13689 ;;		_ADCC_Initialize
 13690 ;;		_main
 13691 ;; This function uses a non-reentrant model
 13692 ;;
 13693                           
 13694                           	psect	text69
 13695  005D0A                     __ptext69:
 13696                           	callstack 0
 13697  005D0A                     _ADCC_SetADIInterruptHandler:
 13698                           	callstack 24
 13699                           
 13700                           ;mcc_generated_files/adcc.c: 317:     ADCC_ADI_InterruptHandler = InterruptHandler;
 13701                           
 13702                           ;incstack = 0
 13703  005D0A  C015  F0EC         	movff	ADCC_SetADIInterruptHandler@InterruptHandler,_ADCC_ADI_InterruptHandler
 13704  005D0E  C016  F0ED         	movff	ADCC_SetADIInterruptHandler@InterruptHandler+1,_ADCC_ADI_InterruptHandler+1
 13705  005D12  C017  F0EE         	movff	ADCC_SetADIInterruptHandler@InterruptHandler+2,_ADCC_ADI_InterruptHandler+2
 13706  005D16  0012               	return		;funcret
 13707  005D18                     __end_of_ADCC_SetADIInterruptHandler:
 13708                           	callstack 0
 13709                           
 13710 ;; *************** function _DAC1_SetOutput *****************
 13711 ;; Defined at:
 13712 ;;		line 66 in file "mcc_generated_files/dac1.c"
 13713 ;; Parameters:    Size  Location     Type
 13714 ;;  inputData       1    wreg     unsigned char 
 13715 ;; Auto vars:     Size  Location     Type
 13716 ;;  inputData       1   20[COMRAM] unsigned char 
 13717 ;; Return value:  Size  Location     Type
 13718 ;;                  1    wreg      void 
 13719 ;; Registers used:
 13720 ;;		wreg
 13721 ;; Tracked objects:
 13722 ;;		On entry : 0/3D
 13723 ;;		On exit  : 0/0
 13724 ;;		Unchanged: 0/0
 13725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13727 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13729 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13730 ;;Total ram usage:        1 bytes
 13731 ;; Hardware stack levels used: 1
 13732 ;; Hardware stack levels required when called: 4
 13733 ;; This function calls:
 13734 ;;		Nothing
 13735 ;; This function is called by:
 13736 ;;		_main
 13737 ;; This function uses a non-reentrant model
 13738 ;;
 13739                           
 13740                           	psect	text70
 13741  005D2E                     __ptext70:
 13742                           	callstack 0
 13743  005D2E                     _DAC1_SetOutput:
 13744                           	callstack 26
 13745                           
 13746                           ;incstack = 0
 13747                           ;DAC1_SetOutput@inputData stored from wreg
 13748  005D2E  6E15               	movwf	DAC1_SetOutput@inputData^0,c
 13749                           
 13750                           ;mcc_generated_files/dac1.c: 66: void DAC1_SetOutput(uint8_t inputData);mcc_generated_fi
      +                          les/dac1.c: 67: {;mcc_generated_files/dac1.c: 68:     DAC1CON1 = inputData;
 13751  005D30  0060  F057  FE9C   	movff	DAC1_SetOutput@inputData,16028	;volatile
 13752  005D36  0012               	return		;funcret
 13753  005D38                     __end_of_DAC1_SetOutput:
 13754                           	callstack 0
 13755                           
 13756 ;; *************** function _DAC1_GetOutput *****************
 13757 ;; Defined at:
 13758 ;;		line 71 in file "mcc_generated_files/dac1.c"
 13759 ;; Parameters:    Size  Location     Type
 13760 ;;		None
 13761 ;; Auto vars:     Size  Location     Type
 13762 ;;		None
 13763 ;; Return value:  Size  Location     Type
 13764 ;;                  1    wreg      unsigned char 
 13765 ;; Registers used:
 13766 ;;		wreg, status,2
 13767 ;; Tracked objects:
 13768 ;;		On entry : 3F/2
 13769 ;;		On exit  : 3F/3E
 13770 ;;		Unchanged: 0/0
 13771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13776 ;;Total ram usage:        0 bytes
 13777 ;; Hardware stack levels used: 1
 13778 ;; Hardware stack levels required when called: 4
 13779 ;; This function calls:
 13780 ;;		Nothing
 13781 ;; This function is called by:
 13782 ;;		_main
 13783 ;; This function uses a non-reentrant model
 13784 ;;
 13785                           
 13786                           	psect	text71
 13787  005D38                     __ptext71:
 13788                           	callstack 0
 13789  005D38                     _DAC1_GetOutput:
 13790                           	callstack 26
 13791                           
 13792                           ; BSR set to: 2
 13793                           ;mcc_generated_files/dac1.c: 73:     return DAC1CON1;
 13794                           
 13795                           ;incstack = 0
 13796  005D38  013E               	movlb	62	; () banked
 13797  005D3A  519C               	movf	156,w,b	;volatile
 13798                           
 13799                           ; BSR set to: 62
 13800  005D3C  0012               	return		;funcret
 13801  005D3E                     __end_of_DAC1_GetOutput:
 13802                           	callstack 0
 13803                           
 13804 ;; *************** function _ADCC_ISR *****************
 13805 ;; Defined at:
 13806 ;;		line 307 in file "mcc_generated_files/adcc.c"
 13807 ;; Parameters:    Size  Location     Type
 13808 ;;		None
 13809 ;; Auto vars:     Size  Location     Type
 13810 ;;		None
 13811 ;; Return value:  Size  Location     Type
 13812 ;;                  1    wreg      void 
 13813 ;; Registers used:
 13814 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 13815 ;; Tracked objects:
 13816 ;;		On entry : 0/0
 13817 ;;		On exit  : 0/0
 13818 ;;		Unchanged: 0/0
 13819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13822 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13823 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13824 ;;Total ram usage:        2 bytes
 13825 ;; Hardware stack levels used: 1
 13826 ;; Hardware stack levels required when called: 2
 13827 ;; This function calls:
 13828 ;;		Absolute function
 13829 ;;		_ADCC_DefaultInterruptHandler
 13830 ;;		_Adc_Isr
 13831 ;; This function is called by:
 13832 ;;		Interrupt level 2
 13833 ;; This function uses a non-reentrant model
 13834 ;;
 13835                           
 13836                           	psect	text72
 13837  005750                     __ptext72:
 13838                           	callstack 0
 13839  005750                     _ADCC_ISR:
 13840                           	callstack 17
 13841                           
 13842                           ; BSR set to: 62
 13843                           ;incstack = 0
 13844  005750  006F FFE8  F006    	movff	pclath,??_ADCC_ISR
 13845  005756  006F FFEC  F007    	movff	pclatu,??_ADCC_ISR+1
 13846                           
 13847                           ;mcc_generated_files/adcc.c: 310:     PIR1bits.ADIF = 0;
 13848  00575C  0139               	movlb	57	; () banked
 13849  00575E  95A1               	bcf	161,2,b	;volatile
 13850                           
 13851                           ; BSR set to: 57
 13852                           ;mcc_generated_files/adcc.c: 312:     if (ADCC_ADI_InterruptHandler)
 13853  005760  0100               	movlb	0	; () banked
 13854  005762  51EC               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 13855  005764  11ED               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 13856  005766  11EE               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 13857  005768  B4D8               	btfsc	status,2,c
 13858  00576A  D00C               	goto	i2u630_49
 13859                           
 13860                           ; BSR set to: 0
 13861                           ;mcc_generated_files/adcc.c: 313:             ADCC_ADI_InterruptHandler();
 13862  00576C  D801               	call	i2u630_48
 13863  00576E  D00A               	goto	i2u630_49
 13864  005770                     i2u630_48:
 13865  005770  0005               	push	
 13866  005772  6EFA               	movwf	pclath,c
 13867  005774  51EC               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 13868  005776  6EFD               	movwf	tosl,c
 13869  005778  51ED               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 13870  00577A  6EFE               	movwf	tosh,c
 13871  00577C  51EE               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 13872  00577E  6EFF               	movwf	tosu,c
 13873  005780  50FA               	movf	pclath,w,c
 13874  005782  0012               	return		;indir
 13875  005784                     i2u630_49:
 13876  005784  0060  F01F  FFFB   	movff	??_ADCC_ISR+1,pclatu
 13877  00578A  0060  F01B  FFFA   	movff	??_ADCC_ISR,pclath
 13878  005790  0011               	retfie		f
 13879  005792                     __end_of_ADCC_ISR:
 13880                           	callstack 0
 13881                           
 13882 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 13883 ;; Defined at:
 13884 ;;		line 320 in file "mcc_generated_files/adcc.c"
 13885 ;; Parameters:    Size  Location     Type
 13886 ;;		None
 13887 ;; Auto vars:     Size  Location     Type
 13888 ;;		None
 13889 ;; Return value:  Size  Location     Type
 13890 ;;                  1    wreg      void 
 13891 ;; Registers used:
 13892 ;;		None
 13893 ;; Tracked objects:
 13894 ;;		On entry : 3F/0
 13895 ;;		On exit  : 3F/0
 13896 ;;		Unchanged: 3F/0
 13897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13902 ;;Total ram usage:        0 bytes
 13903 ;; Hardware stack levels used: 1
 13904 ;; This function calls:
 13905 ;;		Nothing
 13906 ;; This function is called by:
 13907 ;;		_ADCC_Initialize
 13908 ;;		_ADCC_ISR
 13909 ;; This function uses a non-reentrant model
 13910 ;;
 13911                           
 13912                           	psect	text73
 13913  005D48                     __ptext73:
 13914                           	callstack 0
 13915  005D48                     _ADCC_DefaultInterruptHandler:
 13916                           	callstack 18
 13917                           
 13918                           ; BSR set to: 0
 13919                           
 13920                           ;incstack = 0
 13921  005D48  0012               	return		;funcret
 13922  005D4A                     __end_of_ADCC_DefaultInterruptHandler:
 13923                           	callstack 0
 13924                           
 13925 ;; *************** function _Adc_Isr *****************
 13926 ;; Defined at:
 13927 ;;		line 82 in file "main.c"
 13928 ;; Parameters:    Size  Location     Type
 13929 ;;		None
 13930 ;; Auto vars:     Size  Location     Type
 13931 ;;		None
 13932 ;; Return value:  Size  Location     Type
 13933 ;;                  1    wreg      void 
 13934 ;; Registers used:
 13935 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13936 ;; Tracked objects:
 13937 ;;		On entry : 3F/0
 13938 ;;		On exit  : 3F/0
 13939 ;;		Unchanged: 0/0
 13940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13943 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13944 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13945 ;;Total ram usage:        1 bytes
 13946 ;; Hardware stack levels used: 1
 13947 ;; Hardware stack levels required when called: 1
 13948 ;; This function calls:
 13949 ;;		_ADCC_GetConversionResult
 13950 ;; This function is called by:
 13951 ;;		_main
 13952 ;;		_ADCC_ISR
 13953 ;; This function uses a non-reentrant model
 13954 ;;
 13955                           
 13956                           	psect	text74
 13957  00593E                     __ptext74:
 13958                           	callstack 0
 13959  00593E                     _Adc_Isr:
 13960                           	callstack 17
 13961                           
 13962                           ; BSR set to: 0
 13963                           ;main.c: 83:     ana[adc_chan] = ADCC_GetConversionResult();
 13964                           
 13965                           ; BSR set to: 0
 13966                           ;incstack = 0
 13967  00593E  EC22  F02E         	call	_ADCC_GetConversionResult	;wreg free
 13968  005942  5044               	movf	_adc_chan^0,w,c
 13969  005944  0D02               	mullw	2
 13970  005946  50F3               	movf	243,w,c
 13971  005948  0F39               	addlw	low _ana
 13972  00594A  6ED9               	movwf	fsr2l,c
 13973  00594C  6ADA               	clrf	fsr2h,c
 13974  00594E  0060  F007  FFDE   	movff	?_ADCC_GetConversionResult,postinc2
 13975  005954  0060  F00B  FFDD   	movff	?_ADCC_GetConversionResult+1,postdec2
 13976                           
 13977                           ; BSR set to: 62
 13978                           ;main.c: 84:     if (adc_chan++ >= 2) {
 13979  00595A  2A44               	incf	_adc_chan^0,f,c	;volatile
 13980  00595C  0444               	decf	_adc_chan^0,w,c	;volatile
 13981  00595E  6E05               	movwf	??_Adc_Isr^0,c
 13982  005960  0E01               	movlw	1
 13983  005962  6405               	cpfsgt	??_Adc_Isr^0,c
 13984  005964  D002               	goto	i2l6228
 13985                           
 13986                           ; BSR set to: 62
 13987                           ;main.c: 85:         adc_chan = 0;
 13988  005966  0E00               	movlw	0
 13989  005968  6E44               	movwf	_adc_chan^0,c	;volatile
 13990  00596A                     i2l6228:
 13991                           
 13992                           ; BSR set to: 62
 13993                           ;main.c: 87:     ADPCH = adc_chan;
 13994  00596A  0060  F113  FEF1   	movff	_adc_chan,16113	;volatile
 13995                           
 13996                           ;main.c: 91:     adc_tick = 1;
 13997  005970  0E01               	movlw	1
 13998  005972  0100               	movlb	0	; () banked
 13999  005974  6FFB               	movwf	_adc_tick& (0+255),b	;volatile
 14000                           
 14001                           ; BSR set to: 0
 14002  005976  0012               	return		;funcret
 14003  005978                     __end_of_Adc_Isr:
 14004                           	callstack 0
 14005                           
 14006 ;; *************** function _ADCC_GetConversionResult *****************
 14007 ;; Defined at:
 14008 ;;		line 139 in file "mcc_generated_files/adcc.c"
 14009 ;; Parameters:    Size  Location     Type
 14010 ;;		None
 14011 ;; Auto vars:     Size  Location     Type
 14012 ;;		None
 14013 ;; Return value:  Size  Location     Type
 14014 ;;                  2    0[COMRAM] unsigned short 
 14015 ;; Registers used:
 14016 ;;		wreg, status,2, status,0
 14017 ;; Tracked objects:
 14018 ;;		On entry : 3F/0
 14019 ;;		On exit  : 3F/3E
 14020 ;;		Unchanged: 0/0
 14021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14022 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14024 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14025 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14026 ;;Total ram usage:        4 bytes
 14027 ;; Hardware stack levels used: 1
 14028 ;; This function calls:
 14029 ;;		Nothing
 14030 ;; This function is called by:
 14031 ;;		_Adc_Isr
 14032 ;; This function uses a non-reentrant model
 14033 ;;
 14034                           
 14035                           	psect	text75
 14036  005C44                     __ptext75:
 14037                           	callstack 0
 14038  005C44                     _ADCC_GetConversionResult:
 14039                           	callstack 17
 14040                           
 14041                           ; BSR set to: 0
 14042                           ;mcc_generated_files/adcc.c: 142:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 14043                           
 14044                           ; BSR set to: 0
 14045                           ;incstack = 0
 14046  005C44  013E               	movlb	62	; () banked
 14047  005C46  51F0               	movf	240,w,b	;volatile
 14048  005C48  6E04               	movwf	(??_ADCC_GetConversionResult+1)^0,c
 14049  005C4A  6A03               	clrf	??_ADCC_GetConversionResult^0,c
 14050  005C4C  51EF               	movf	239,w,b	;volatile
 14051  005C4E  2403               	addwf	??_ADCC_GetConversionResult^0,w,c
 14052  005C50  6E01               	movwf	?_ADCC_GetConversionResult^0,c
 14053  005C52  0E00               	movlw	0
 14054  005C54  2004               	addwfc	(??_ADCC_GetConversionResult+1)^0,w,c
 14055  005C56  6E02               	movwf	(?_ADCC_GetConversionResult+1)^0,c
 14056                           
 14057                           ; BSR set to: 62
 14058  005C58  0012               	return		;funcret
 14059  005C5A                     __end_of_ADCC_GetConversionResult:
 14060                           	callstack 0
 14061                           
 14062 ;; *************** function _TMR6_ISR *****************
 14063 ;; Defined at:
 14064 ;;		line 166 in file "mcc_generated_files/tmr6.c"
 14065 ;; Parameters:    Size  Location     Type
 14066 ;;		None
 14067 ;; Auto vars:     Size  Location     Type
 14068 ;;		None
 14069 ;; Return value:  Size  Location     Type
 14070 ;;                  1    wreg      void 
 14071 ;; Registers used:
 14072 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 14073 ;; Tracked objects:
 14074 ;;		On entry : 0/0
 14075 ;;		On exit  : 0/0
 14076 ;;		Unchanged: 0/0
 14077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14080 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14081 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14082 ;;Total ram usage:        2 bytes
 14083 ;; Hardware stack levels used: 1
 14084 ;; Hardware stack levels required when called: 2
 14085 ;; This function calls:
 14086 ;;		_TMR6_CallBack
 14087 ;; This function is called by:
 14088 ;;		Interrupt level 2
 14089 ;; This function uses a non-reentrant model
 14090 ;;
 14091                           
 14092                           	psect	text76
 14093  005978                     __ptext76:
 14094                           	callstack 0
 14095  005978                     _TMR6_ISR:
 14096                           	callstack 17
 14097                           
 14098                           ; BSR set to: 62
 14099                           ;incstack = 0
 14100  005978  006F FFE8  F009    	movff	pclath,??_TMR6_ISR
 14101  00597E  006F FFEC  F00A    	movff	pclatu,??_TMR6_ISR+1
 14102                           
 14103                           ;mcc_generated_files/tmr6.c: 168:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr6.c: 171:     PIR9bits.TMR6IF = 0;
 14104  005984  0139               	movlb	57	; () banked
 14105  005986  91A9               	bcf	169,0,b	;volatile
 14106                           
 14107                           ; BSR set to: 57
 14108                           ;mcc_generated_files/tmr6.c: 174:     if (++CountCallBack >= 23)
 14109  005988  4A41               	infsnz	TMR6_ISR@CountCallBack^0,f,c	;volatile
 14110  00598A  2A42               	incf	(TMR6_ISR@CountCallBack+1)^0,f,c	;volatile
 14111  00598C  5042               	movf	(TMR6_ISR@CountCallBack+1)^0,w,c	;volatile
 14112  00598E  E104               	bnz	i2u631_40
 14113  005990  0E17               	movlw	23
 14114  005992  5C41               	subwf	TMR6_ISR@CountCallBack^0,w,c	;volatile
 14115  005994  A0D8               	btfss	status,0,c
 14116  005996  D006               	goto	i2l454
 14117  005998                     i2u631_40:
 14118                           
 14119                           ; BSR set to: 57
 14120                           ;mcc_generated_files/tmr6.c: 175:     {;mcc_generated_files/tmr6.c: 177:         TMR6_Ca
      +                          llBack();
 14121  005998  EC89  F02D         	call	_TMR6_CallBack	;wreg free
 14122                           
 14123                           ;mcc_generated_files/tmr6.c: 180:         CountCallBack = 0;
 14124  00599C  0E00               	movlw	0
 14125  00599E  6E42               	movwf	(TMR6_ISR@CountCallBack+1)^0,c	;volatile
 14126  0059A0  0E00               	movlw	0
 14127  0059A2  6E41               	movwf	TMR6_ISR@CountCallBack^0,c	;volatile
 14128  0059A4                     i2l454:
 14129  0059A4  0060  F02B  FFFB   	movff	??_TMR6_ISR+1,pclatu
 14130  0059AA  0060  F027  FFFA   	movff	??_TMR6_ISR,pclath
 14131  0059B0  0011               	retfie		f
 14132  0059B2                     __end_of_TMR6_ISR:
 14133                           	callstack 0
 14134                           
 14135 ;; *************** function _TMR6_CallBack *****************
 14136 ;; Defined at:
 14137 ;;		line 184 in file "mcc_generated_files/tmr6.c"
 14138 ;; Parameters:    Size  Location     Type
 14139 ;;		None
 14140 ;; Auto vars:     Size  Location     Type
 14141 ;;		None
 14142 ;; Return value:  Size  Location     Type
 14143 ;;                  1    wreg      void 
 14144 ;; Registers used:
 14145 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 14146 ;; Tracked objects:
 14147 ;;		On entry : 3F/39
 14148 ;;		On exit  : 0/0
 14149 ;;		Unchanged: 0/0
 14150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14155 ;;Total ram usage:        0 bytes
 14156 ;; Hardware stack levels used: 1
 14157 ;; Hardware stack levels required when called: 1
 14158 ;; This function calls:
 14159 ;;		Absolute function
 14160 ;;		_Led_Blink
 14161 ;;		_TMR6_DefaultInterruptHandler
 14162 ;; This function is called by:
 14163 ;;		_TMR6_ISR
 14164 ;; This function uses a non-reentrant model
 14165 ;;
 14166                           
 14167                           	psect	text77
 14168  005B12                     __ptext77:
 14169                           	callstack 0
 14170  005B12                     _TMR6_CallBack:
 14171                           	callstack 17
 14172                           
 14173                           ; BSR set to: 57
 14174                           ;mcc_generated_files/tmr6.c: 188:     if(TMR6_InterruptHandler)
 14175                           
 14176                           ;incstack = 0
 14177  005B12  0100               	movlb	0	; () banked
 14178  005B14  51E9               	movf	_TMR6_InterruptHandler& (0+255),w,b
 14179  005B16  11EA               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 14180  005B18  11EB               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 14181  005B1A  B4D8               	btfsc	status,2,c
 14182  005B1C  0012               	return	
 14183                           
 14184                           ; BSR set to: 0
 14185                           ;mcc_generated_files/tmr6.c: 189:     {;mcc_generated_files/tmr6.c: 190:         TMR6_In
      +                          terruptHandler();
 14186  005B1E  D801               	call	i2u603_48
 14187  005B20  0012               	return	
 14188  005B22                     i2u603_48:
 14189  005B22  0005               	push	
 14190  005B24  6EFA               	movwf	pclath,c
 14191  005B26  51E9               	movf	_TMR6_InterruptHandler& (0+255),w,b
 14192  005B28  6EFD               	movwf	tosl,c
 14193  005B2A  51EA               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 14194  005B2C  6EFE               	movwf	tosh,c
 14195  005B2E  51EB               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 14196  005B30  6EFF               	movwf	tosu,c
 14197  005B32  50FA               	movf	pclath,w,c
 14198  005B34  0012               	return		;indir
 14199  005B36                     __end_of_TMR6_CallBack:
 14200                           	callstack 0
 14201                           
 14202 ;; *************** function _Led_Blink *****************
 14203 ;; Defined at:
 14204 ;;		line 67 in file "main.c"
 14205 ;; Parameters:    Size  Location     Type
 14206 ;;		None
 14207 ;; Auto vars:     Size  Location     Type
 14208 ;;		None
 14209 ;; Return value:  Size  Location     Type
 14210 ;;                  1    wreg      void 
 14211 ;; Registers used:
 14212 ;;		wreg, status,2, status,0
 14213 ;; Tracked objects:
 14214 ;;		On entry : 3F/0
 14215 ;;		On exit  : 3F/0
 14216 ;;		Unchanged: 0/0
 14217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14220 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14221 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14222 ;;Total ram usage:        1 bytes
 14223 ;; Hardware stack levels used: 1
 14224 ;; This function calls:
 14225 ;;		Nothing
 14226 ;; This function is called by:
 14227 ;;		_main
 14228 ;;		_TMR6_CallBack
 14229 ;; This function uses a non-reentrant model
 14230 ;;
 14231                           
 14232                           	psect	text78
 14233  005BC0                     __ptext78:
 14234                           	callstack 0
 14235  005BC0                     _Led_Blink:
 14236                           	callstack 17
 14237                           
 14238                           ; BSR set to: 0
 14239                           
 14240                           ; BSR set to: 0
 14241                           
 14242                           ;incstack = 0
 14243                           ;main.c: 68:     do { LATEbits.LATE0 = ~LATEbits.LATE0; } while(0);
 14244  005BC0  A0BE               	btfss	190,0,c	;volatile
 14245  005BC2  D002               	goto	i2u594_40
 14246  005BC4  0E01               	movlw	1
 14247  005BC6  D001               	goto	i2u594_46
 14248  005BC8                     i2u594_40:
 14249  005BC8  0E00               	movlw	0
 14250  005BCA                     i2u594_46:
 14251  005BCA  0AFF               	xorlw	255
 14252  005BCC  6E08               	movwf	??_Led_Blink^0,c
 14253  005BCE  50BE               	movf	190,w,c	;volatile
 14254  005BD0  1808               	xorwf	??_Led_Blink^0,w,c
 14255  005BD2  0BFE               	andlw	-2
 14256  005BD4  1808               	xorwf	??_Led_Blink^0,w,c
 14257  005BD6  6EBE               	movwf	190,c	;volatile
 14258                           
 14259                           ; BSR set to: 0
 14260                           ;main.c: 72:     disp_tick = 1;
 14261  005BD8  0E01               	movlw	1
 14262  005BDA  6FFC               	movwf	_disp_tick& (0+255),b	;volatile
 14263                           
 14264                           ; BSR set to: 0
 14265  005BDC  0012               	return		;funcret
 14266  005BDE                     __end_of_Led_Blink:
 14267                           	callstack 0
 14268                           
 14269 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 14270 ;; Defined at:
 14271 ;;		line 198 in file "mcc_generated_files/tmr6.c"
 14272 ;; Parameters:    Size  Location     Type
 14273 ;;		None
 14274 ;; Auto vars:     Size  Location     Type
 14275 ;;		None
 14276 ;; Return value:  Size  Location     Type
 14277 ;;                  1    wreg      void 
 14278 ;; Registers used:
 14279 ;;		None
 14280 ;; Tracked objects:
 14281 ;;		On entry : 3F/0
 14282 ;;		On exit  : 3F/0
 14283 ;;		Unchanged: 3F/0
 14284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14289 ;;Total ram usage:        0 bytes
 14290 ;; Hardware stack levels used: 1
 14291 ;; This function calls:
 14292 ;;		Nothing
 14293 ;; This function is called by:
 14294 ;;		_TMR6_Initialize
 14295 ;;		_TMR6_CallBack
 14296 ;; This function uses a non-reentrant model
 14297 ;;
 14298                           
 14299                           	psect	text79
 14300  005D4A                     __ptext79:
 14301                           	callstack 0
 14302  005D4A                     _TMR6_DefaultInterruptHandler:
 14303                           	callstack 17
 14304                           
 14305                           ; BSR set to: 0
 14306                           
 14307                           ; BSR set to: 0
 14308                           ;incstack = 0
 14309  005D4A  0012               	return		;funcret
 14310  005D4C                     __end_of_TMR6_DefaultInterruptHandler:
 14311                           	callstack 0
 14312                           
 14313 ;; *************** function _Default_ISR *****************
 14314 ;; Defined at:
 14315 ;;		line 79 in file "mcc_generated_files/interrupt_manager.c"
 14316 ;; Parameters:    Size  Location     Type
 14317 ;;		None
 14318 ;; Auto vars:     Size  Location     Type
 14319 ;;		None
 14320 ;; Return value:  Size  Location     Type
 14321 ;;                  1    wreg      void 
 14322 ;; Registers used:
 14323 ;;		None
 14324 ;; Tracked objects:
 14325 ;;		On entry : 0/0
 14326 ;;		On exit  : 0/0
 14327 ;;		Unchanged: 0/0
 14328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14333 ;;Total ram usage:        0 bytes
 14334 ;; Hardware stack levels used: 1
 14335 ;; This function calls:
 14336 ;;		Nothing
 14337 ;; This function is called by:
 14338 ;;		Interrupt level 2
 14339 ;; This function uses a non-reentrant model
 14340 ;;
 14341                           
 14342                           	psect	text80
 14343  005D4C                     __ptext80:
 14344                           	callstack 0
 14345  005D4C                     _Default_ISR:
 14346                           	callstack 19
 14347                           
 14348                           ; BSR set to: 0
 14349                           ;incstack = 0
 14350  005D4C  0011               	retfie		f
 14351  005D4E                     __end_of_Default_ISR:
 14352                           	callstack 0
 14353                           
 14354 ;; *************** function _UART1_tx_vect_isr *****************
 14355 ;; Defined at:
 14356 ;;		line 235 in file "mcc_generated_files/uart1.c"
 14357 ;; Parameters:    Size  Location     Type
 14358 ;;		None
 14359 ;; Auto vars:     Size  Location     Type
 14360 ;;		None
 14361 ;; Return value:  Size  Location     Type
 14362 ;;                  1    wreg      void 
 14363 ;; Registers used:
 14364 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 14365 ;; Tracked objects:
 14366 ;;		On entry : 0/0
 14367 ;;		On exit  : 0/0
 14368 ;;		Unchanged: 0/0
 14369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14372 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14373 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14374 ;;Total ram usage:        2 bytes
 14375 ;; Hardware stack levels used: 1
 14376 ;; Hardware stack levels required when called: 1
 14377 ;; This function calls:
 14378 ;;		Absolute function
 14379 ;;		_UART1_Transmit_ISR
 14380 ;; This function is called by:
 14381 ;;		Interrupt level 2
 14382 ;; This function uses a non-reentrant model
 14383 ;;
 14384                           
 14385                           	psect	text81
 14386  005810                     __ptext81:
 14387                           	callstack 0
 14388  005810                     _UART1_tx_vect_isr:
 14389                           	callstack 18
 14390                           
 14391                           ;incstack = 0
 14392  005810  006F FFE8  F00B    	movff	pclath,??_UART1_tx_vect_isr
 14393  005816  006F FFEC  F00C    	movff	pclatu,??_UART1_tx_vect_isr+1
 14394                           
 14395                           ;mcc_generated_files/uart1.c: 237:     if(UART1_TxInterruptHandler)
 14396  00581C  0100               	movlb	0	; () banked
 14397  00581E  51EF               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 14398  005820  11F0               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 14399  005822  11F1               	iorwf	(_UART1_TxInterruptHandler+2)& (0+255),w,b
 14400  005824  B4D8               	btfsc	status,2,c
 14401  005826  D00C               	goto	i2u633_49
 14402                           
 14403                           ; BSR set to: 0
 14404                           ;mcc_generated_files/uart1.c: 238:     {;mcc_generated_files/uart1.c: 239:         UART1
      +                          _TxInterruptHandler();
 14405  005828  D801               	call	i2u633_48
 14406  00582A  D00A               	goto	i2u633_49
 14407  00582C                     i2u633_48:
 14408  00582C  0005               	push	
 14409  00582E  6EFA               	movwf	pclath,c
 14410  005830  51EF               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 14411  005832  6EFD               	movwf	tosl,c
 14412  005834  51F0               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 14413  005836  6EFE               	movwf	tosh,c
 14414  005838  51F1               	movf	(_UART1_TxInterruptHandler+2)& (0+255),w,b
 14415  00583A  6EFF               	movwf	tosu,c
 14416  00583C  50FA               	movf	pclath,w,c
 14417  00583E  0012               	return		;indir
 14418  005840                     i2u633_49:
 14419  005840  0060  F033  FFFB   	movff	??_UART1_tx_vect_isr+1,pclatu
 14420  005846  0060  F02F  FFFA   	movff	??_UART1_tx_vect_isr,pclath
 14421  00584C  0011               	retfie		f
 14422  00584E                     __end_of_UART1_tx_vect_isr:
 14423                           	callstack 0
 14424                           
 14425 ;; *************** function _UART1_Transmit_ISR *****************
 14426 ;; Defined at:
 14427 ;;		line 253 in file "mcc_generated_files/uart1.c"
 14428 ;; Parameters:    Size  Location     Type
 14429 ;;		None
 14430 ;; Auto vars:     Size  Location     Type
 14431 ;;		None
 14432 ;; Return value:  Size  Location     Type
 14433 ;;                  1    wreg      void 
 14434 ;; Registers used:
 14435 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14436 ;; Tracked objects:
 14437 ;;		On entry : 3F/0
 14438 ;;		On exit  : 3B/39
 14439 ;;		Unchanged: 0/0
 14440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14445 ;;Total ram usage:        0 bytes
 14446 ;; Hardware stack levels used: 1
 14447 ;; This function calls:
 14448 ;;		Nothing
 14449 ;; This function is called by:
 14450 ;;		_UART1_Initialize
 14451 ;;		_UART1_tx_vect_isr
 14452 ;; This function uses a non-reentrant model
 14453 ;;
 14454                           
 14455                           	psect	text82
 14456  005A40                     __ptext82:
 14457                           	callstack 0
 14458  005A40                     _UART1_Transmit_ISR:
 14459                           	callstack 18
 14460                           
 14461                           ; BSR set to: 0
 14462                           ;mcc_generated_files/uart1.c: 256:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
 14463                           
 14464                           ;incstack = 0
 14465  005A40  0E40               	movlw	64
 14466  005A42  6049               	cpfslt	_uart1TxBufferRemaining^0,c
 14467  005A44  D011               	goto	i2l640
 14468                           
 14469                           ; BSR set to: 0
 14470                           ;mcc_generated_files/uart1.c: 257:     {;mcc_generated_files/uart1.c: 258:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
 14471  005A46  0E40               	movlw	low _uart1TxBuffer
 14472  005A48  244A               	addwf	_uart1TxTail^0,w,c	;volatile
 14473  005A4A  6ED9               	movwf	fsr2l,c
 14474  005A4C  6ADA               	clrf	fsr2h,c
 14475  005A4E  0E01               	movlw	high _uart1TxBuffer
 14476  005A50  22DA               	addwfc	fsr2h,f,c
 14477  005A52  50DF               	movf	indf2,w,c
 14478  005A54  013D               	movlb	61	; () banked
 14479  005A56  6FEA               	movwf	234,b	;volatile
 14480                           
 14481                           ; BSR set to: 61
 14482  005A58  2A4A               	incf	_uart1TxTail^0,f,c	;volatile
 14483                           
 14484                           ; BSR set to: 61
 14485                           ;mcc_generated_files/uart1.c: 259:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
 14486  005A5A  0E3F               	movlw	63
 14487  005A5C  644A               	cpfsgt	_uart1TxTail^0,c
 14488  005A5E  D002               	goto	i2l6196
 14489                           
 14490                           ; BSR set to: 61
 14491                           ;mcc_generated_files/uart1.c: 260:         {;mcc_generated_files/uart1.c: 261:          
      +                             uart1TxTail = 0;
 14492  005A60  0E00               	movlw	0
 14493  005A62  6E4A               	movwf	_uart1TxTail^0,c	;volatile
 14494  005A64                     i2l6196:
 14495                           
 14496                           ; BSR set to: 61
 14497                           ;mcc_generated_files/uart1.c: 263:         uart1TxBufferRemaining++;
 14498  005A64  2A49               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 14499                           
 14500                           ;mcc_generated_files/uart1.c: 264:     }
 14501  005A66  0012               	return	
 14502  005A68                     i2l640:
 14503                           
 14504                           ; BSR set to: 0
 14505                           ;mcc_generated_files/uart1.c: 266:     {;mcc_generated_files/uart1.c: 267:         PIE3b
      +                          its.U1TXIE = 0;
 14506  005A68  0139               	movlb	57	; () banked
 14507  005A6A  9993               	bcf	147,4,b	;volatile
 14508  005A6C  0012               	return		;funcret
 14509  005A6E                     __end_of_UART1_Transmit_ISR:
 14510                           	callstack 0
 14511                           
 14512 ;; *************** function _UART1_rx_vect_isr *****************
 14513 ;; Defined at:
 14514 ;;		line 243 in file "mcc_generated_files/uart1.c"
 14515 ;; Parameters:    Size  Location     Type
 14516 ;;		None
 14517 ;; Auto vars:     Size  Location     Type
 14518 ;;		None
 14519 ;; Return value:  Size  Location     Type
 14520 ;;                  1    wreg      void 
 14521 ;; Registers used:
 14522 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 14523 ;; Tracked objects:
 14524 ;;		On entry : 0/0
 14525 ;;		On exit  : 0/0
 14526 ;;		Unchanged: 0/0
 14527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14530 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14531 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14532 ;;Total ram usage:        2 bytes
 14533 ;; Hardware stack levels used: 1
 14534 ;; Hardware stack levels required when called: 3
 14535 ;; This function calls:
 14536 ;;		Absolute function
 14537 ;;		_UART1_Receive_ISR
 14538 ;; This function is called by:
 14539 ;;		Interrupt level 2
 14540 ;; This function uses a non-reentrant model
 14541 ;;
 14542                           
 14543                           	psect	text83
 14544  005850                     __ptext83:
 14545                           	callstack 0
 14546  005850                     _UART1_rx_vect_isr:
 14547                           	callstack 16
 14548                           
 14549                           ;incstack = 0
 14550  005850  006F FFE8  F00D    	movff	pclath,??_UART1_rx_vect_isr
 14551  005856  006F FFEC  F00E    	movff	pclatu,??_UART1_rx_vect_isr+1
 14552                           
 14553                           ;mcc_generated_files/uart1.c: 245:     if(UART1_RxInterruptHandler)
 14554  00585C  0100               	movlb	0	; () banked
 14555  00585E  51F2               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 14556  005860  11F3               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 14557  005862  11F4               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 14558  005864  B4D8               	btfsc	status,2,c
 14559  005866  D00C               	goto	i2u635_49
 14560                           
 14561                           ; BSR set to: 0
 14562                           ;mcc_generated_files/uart1.c: 246:     {;mcc_generated_files/uart1.c: 247:         UART1
      +                          _RxInterruptHandler();
 14563  005868  D801               	call	i2u635_48
 14564  00586A  D00A               	goto	i2u635_49
 14565  00586C                     i2u635_48:
 14566  00586C  0005               	push	
 14567  00586E  6EFA               	movwf	pclath,c
 14568  005870  51F2               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 14569  005872  6EFD               	movwf	tosl,c
 14570  005874  51F3               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 14571  005876  6EFE               	movwf	tosh,c
 14572  005878  51F4               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 14573  00587A  6EFF               	movwf	tosu,c
 14574  00587C  50FA               	movf	pclath,w,c
 14575  00587E  0012               	return		;indir
 14576  005880                     i2u635_49:
 14577  005880  0060  F03B  FFFB   	movff	??_UART1_rx_vect_isr+1,pclatu
 14578  005886  0060  F037  FFFA   	movff	??_UART1_rx_vect_isr,pclath
 14579  00588C  0011               	retfie		f
 14580  00588E                     __end_of_UART1_rx_vect_isr:
 14581                           	callstack 0
 14582                           
 14583 ;; *************** function _UART1_Receive_ISR *****************
 14584 ;; Defined at:
 14585 ;;		line 273 in file "mcc_generated_files/uart1.c"
 14586 ;; Parameters:    Size  Location     Type
 14587 ;;		None
 14588 ;; Auto vars:     Size  Location     Type
 14589 ;;		None
 14590 ;; Return value:  Size  Location     Type
 14591 ;;                  1    wreg      void 
 14592 ;; Registers used:
 14593 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 14594 ;; Tracked objects:
 14595 ;;		On entry : 3F/0
 14596 ;;		On exit  : 0/0
 14597 ;;		Unchanged: 0/0
 14598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14603 ;;Total ram usage:        0 bytes
 14604 ;; Hardware stack levels used: 1
 14605 ;; Hardware stack levels required when called: 2
 14606 ;; This function calls:
 14607 ;;		Absolute function
 14608 ;;		_UART1_DefaultErrorHandler
 14609 ;;		_UART1_DefaultFramingErrorHandler
 14610 ;;		_UART1_DefaultOverrunErrorHandler
 14611 ;;		_UART1_RxDataHandler
 14612 ;; This function is called by:
 14613 ;;		_UART1_Initialize
 14614 ;;		_UART1_rx_vect_isr
 14615 ;; This function uses a non-reentrant model
 14616 ;;
 14617                           
 14618                           	psect	text84
 14619  004FE2                     __ptext84:
 14620                           	callstack 0
 14621  004FE2                     _UART1_Receive_ISR:
 14622                           	callstack 16
 14623                           
 14624                           ; BSR set to: 0
 14625                           ;mcc_generated_files/uart1.c: 276:     uart1RxStatusBuffer[uart1RxHead].status = 0;
 14626                           
 14627                           ;incstack = 0
 14628  004FE2  0E00               	movlw	low _uart1RxStatusBuffer
 14629  004FE4  2448               	addwf	_uart1RxHead^0,w,c	;volatile
 14630  004FE6  6ED9               	movwf	fsr2l,c
 14631  004FE8  6ADA               	clrf	fsr2h,c
 14632  004FEA  0E01               	movlw	high _uart1RxStatusBuffer
 14633  004FEC  22DA               	addwfc	fsr2h,f,c
 14634  004FEE  0E00               	movlw	0
 14635  004FF0  6EDF               	movwf	indf2,c
 14636                           
 14637                           ; BSR set to: 0
 14638                           ;mcc_generated_files/uart1.c: 278:     if(U1ERRIRbits.FERIF){
 14639  004FF2  013D               	movlb	61	; () banked
 14640  004FF4  A7F9               	btfss	249,3,b	;volatile
 14641  004FF6  D015               	goto	i2u607_49
 14642                           
 14643                           ; BSR set to: 61
 14644                           ;mcc_generated_files/uart1.c: 279:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
 14645  004FF8  0E00               	movlw	low _uart1RxStatusBuffer
 14646  004FFA  2448               	addwf	_uart1RxHead^0,w,c	;volatile
 14647  004FFC  6ED9               	movwf	fsr2l,c
 14648  004FFE  6ADA               	clrf	fsr2h,c
 14649  005000  0E01               	movlw	high _uart1RxStatusBuffer
 14650  005002  22DA               	addwfc	fsr2h,f,c
 14651  005004  0101               	movlb	1	; () banked
 14652  005006  82DF               	bsf	indf2,1,c
 14653                           
 14654                           ; BSR set to: 1
 14655                           ;mcc_generated_files/uart1.c: 280:         UART1_FramingErrorHandler();
 14656  005008  D801               	call	i2u607_48
 14657  00500A  D00B               	goto	i2u607_49
 14658  00500C                     i2u607_48:
 14659  00500C  0005               	push	
 14660  00500E  6EFA               	movwf	pclath,c
 14661  005010  0100               	movlb	0	; () banked
 14662  005012  51E6               	movf	_UART1_FramingErrorHandler& (0+255),w,b
 14663  005014  6EFD               	movwf	tosl,c
 14664  005016  51E7               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
 14665  005018  6EFE               	movwf	tosh,c
 14666  00501A  51E8               	movf	(_UART1_FramingErrorHandler+2)& (0+255),w,b
 14667  00501C  6EFF               	movwf	tosu,c
 14668  00501E  50FA               	movf	pclath,w,c
 14669  005020  0012               	return		;indir
 14670  005022                     i2u607_49:
 14671                           
 14672                           ;mcc_generated_files/uart1.c: 283:     if(U1ERRIRbits.RXFOIF){
 14673  005022  013D               	movlb	61	; () banked
 14674  005024  A3F9               	btfss	249,1,b	;volatile
 14675  005026  D015               	goto	i2u609_49
 14676                           
 14677                           ; BSR set to: 61
 14678                           ;mcc_generated_files/uart1.c: 284:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
 14679  005028  0E00               	movlw	low _uart1RxStatusBuffer
 14680  00502A  2448               	addwf	_uart1RxHead^0,w,c	;volatile
 14681  00502C  6ED9               	movwf	fsr2l,c
 14682  00502E  6ADA               	clrf	fsr2h,c
 14683  005030  0E01               	movlw	high _uart1RxStatusBuffer
 14684  005032  22DA               	addwfc	fsr2h,f,c
 14685  005034  0101               	movlb	1	; () banked
 14686  005036  84DF               	bsf	indf2,2,c
 14687                           
 14688                           ; BSR set to: 1
 14689                           ;mcc_generated_files/uart1.c: 285:         UART1_OverrunErrorHandler();
 14690  005038  D801               	call	i2u609_48
 14691  00503A  D00B               	goto	i2u609_49
 14692  00503C                     i2u609_48:
 14693  00503C  0005               	push	
 14694  00503E  6EFA               	movwf	pclath,c
 14695  005040  0100               	movlb	0	; () banked
 14696  005042  51E3               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
 14697  005044  6EFD               	movwf	tosl,c
 14698  005046  51E4               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
 14699  005048  6EFE               	movwf	tosh,c
 14700  00504A  51E5               	movf	(_UART1_OverrunErrorHandler+2)& (0+255),w,b
 14701  00504C  6EFF               	movwf	tosu,c
 14702  00504E  50FA               	movf	pclath,w,c
 14703  005050  0012               	return		;indir
 14704  005052                     i2u609_49:
 14705                           
 14706                           ;mcc_generated_files/uart1.c: 288:     if(uart1RxStatusBuffer[uart1RxHead].status){
 14707  005052  0E00               	movlw	low _uart1RxStatusBuffer
 14708  005054  2448               	addwf	_uart1RxHead^0,w,c	;volatile
 14709  005056  6ED9               	movwf	fsr2l,c
 14710  005058  6ADA               	clrf	fsr2h,c
 14711  00505A  0E01               	movlw	high _uart1RxStatusBuffer
 14712  00505C  22DA               	addwfc	fsr2h,f,c
 14713  00505E  50DF               	movf	indf2,w,c
 14714  005060  B4D8               	btfsc	status,2,c
 14715  005062  D00D               	goto	i2l6216
 14716                           
 14717                           ;mcc_generated_files/uart1.c: 289:         UART1_ErrorHandler();
 14718  005064  D801               	call	i2u611_48
 14719  005066  0012               	return	
 14720  005068                     i2u611_48:
 14721  005068  0005               	push	
 14722  00506A  6EFA               	movwf	pclath,c
 14723  00506C  0100               	movlb	0	; () banked
 14724  00506E  51E0               	movf	_UART1_ErrorHandler& (0+255),w,b
 14725  005070  6EFD               	movwf	tosl,c
 14726  005072  51E1               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
 14727  005074  6EFE               	movwf	tosh,c
 14728  005076  51E2               	movf	(_UART1_ErrorHandler+2)& (0+255),w,b
 14729  005078  6EFF               	movwf	tosu,c
 14730  00507A  50FA               	movf	pclath,w,c
 14731  00507C  0012               	return		;indir
 14732  00507E                     i2l6216:
 14733                           
 14734                           ;mcc_generated_files/uart1.c: 291:         UART1_RxDataHandler();
 14735  00507E  ECCF  F02D         	call	_UART1_RxDataHandler	;wreg free
 14736  005082  0012               	return		;funcret
 14737  005084                     __end_of_UART1_Receive_ISR:
 14738                           	callstack 0
 14739                           
 14740 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
 14741 ;; Defined at:
 14742 ;;		line 309 in file "mcc_generated_files/uart1.c"
 14743 ;; Parameters:    Size  Location     Type
 14744 ;;		None
 14745 ;; Auto vars:     Size  Location     Type
 14746 ;;		None
 14747 ;; Return value:  Size  Location     Type
 14748 ;;                  1    wreg      void 
 14749 ;; Registers used:
 14750 ;;		None
 14751 ;; Tracked objects:
 14752 ;;		On entry : 3F/0
 14753 ;;		On exit  : 3F/0
 14754 ;;		Unchanged: 3F/0
 14755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14760 ;;Total ram usage:        0 bytes
 14761 ;; Hardware stack levels used: 1
 14762 ;; This function calls:
 14763 ;;		Nothing
 14764 ;; This function is called by:
 14765 ;;		_UART1_Initialize
 14766 ;;		_UART1_Receive_ISR
 14767 ;; This function uses a non-reentrant model
 14768 ;;
 14769                           
 14770                           	psect	text85
 14771  005D4E                     __ptext85:
 14772                           	callstack 0
 14773  005D4E                     _UART1_DefaultOverrunErrorHandler:
 14774                           	callstack 17
 14775                           
 14776                           ; BSR set to: 0
 14777                           
 14778                           ;incstack = 0
 14779  005D4E  0012               	return		;funcret
 14780  005D50                     __end_of_UART1_DefaultOverrunErrorHandler:
 14781                           	callstack 0
 14782                           
 14783 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
 14784 ;; Defined at:
 14785 ;;		line 307 in file "mcc_generated_files/uart1.c"
 14786 ;; Parameters:    Size  Location     Type
 14787 ;;		None
 14788 ;; Auto vars:     Size  Location     Type
 14789 ;;		None
 14790 ;; Return value:  Size  Location     Type
 14791 ;;                  1    wreg      void 
 14792 ;; Registers used:
 14793 ;;		None
 14794 ;; Tracked objects:
 14795 ;;		On entry : 3F/0
 14796 ;;		On exit  : 3F/0
 14797 ;;		Unchanged: 3F/0
 14798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14803 ;;Total ram usage:        0 bytes
 14804 ;; Hardware stack levels used: 1
 14805 ;; This function calls:
 14806 ;;		Nothing
 14807 ;; This function is called by:
 14808 ;;		_UART1_Initialize
 14809 ;;		_UART1_Receive_ISR
 14810 ;; This function uses a non-reentrant model
 14811 ;;
 14812                           
 14813                           	psect	text86
 14814  005D50                     __ptext86:
 14815                           	callstack 0
 14816  005D50                     _UART1_DefaultFramingErrorHandler:
 14817                           	callstack 17
 14818                           
 14819                           ; BSR set to: 0
 14820                           
 14821                           ; BSR set to: 0
 14822                           ;incstack = 0
 14823  005D50  0012               	return		;funcret
 14824  005D52                     __end_of_UART1_DefaultFramingErrorHandler:
 14825                           	callstack 0
 14826                           
 14827 ;; *************** function _UART1_DefaultErrorHandler *****************
 14828 ;; Defined at:
 14829 ;;		line 311 in file "mcc_generated_files/uart1.c"
 14830 ;; Parameters:    Size  Location     Type
 14831 ;;		None
 14832 ;; Auto vars:     Size  Location     Type
 14833 ;;		None
 14834 ;; Return value:  Size  Location     Type
 14835 ;;                  1    wreg      void 
 14836 ;; Registers used:
 14837 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14838 ;; Tracked objects:
 14839 ;;		On entry : 3F/0
 14840 ;;		On exit  : 0/0
 14841 ;;		Unchanged: 0/0
 14842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14847 ;;Total ram usage:        0 bytes
 14848 ;; Hardware stack levels used: 1
 14849 ;; Hardware stack levels required when called: 1
 14850 ;; This function calls:
 14851 ;;		_UART1_RxDataHandler
 14852 ;; This function is called by:
 14853 ;;		_UART1_Initialize
 14854 ;;		_UART1_Receive_ISR
 14855 ;; This function uses a non-reentrant model
 14856 ;;
 14857                           
 14858                           	psect	text87
 14859  005D3E                     __ptext87:
 14860                           	callstack 0
 14861  005D3E                     _UART1_DefaultErrorHandler:
 14862                           	callstack 16
 14863                           
 14864                           ; BSR set to: 0
 14865                           ;mcc_generated_files/uart1.c: 312:     UART1_RxDataHandler();
 14866                           
 14867                           ; BSR set to: 0
 14868                           ;incstack = 0
 14869  005D3E  ECCF  F02D         	call	_UART1_RxDataHandler	;wreg free
 14870  005D42  0012               	return		;funcret
 14871  005D44                     __end_of_UART1_DefaultErrorHandler:
 14872                           	callstack 0
 14873                           
 14874 ;; *************** function _UART1_RxDataHandler *****************
 14875 ;; Defined at:
 14876 ;;		line 297 in file "mcc_generated_files/uart1.c"
 14877 ;; Parameters:    Size  Location     Type
 14878 ;;		None
 14879 ;; Auto vars:     Size  Location     Type
 14880 ;;		None
 14881 ;; Return value:  Size  Location     Type
 14882 ;;                  1    wreg      void 
 14883 ;; Registers used:
 14884 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14885 ;; Tracked objects:
 14886 ;;		On entry : 0/3D
 14887 ;;		On exit  : 0/0
 14888 ;;		Unchanged: 0/0
 14889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14894 ;;Total ram usage:        0 bytes
 14895 ;; Hardware stack levels used: 1
 14896 ;; This function calls:
 14897 ;;		Nothing
 14898 ;; This function is called by:
 14899 ;;		_UART1_Receive_ISR
 14900 ;;		_UART1_DefaultErrorHandler
 14901 ;; This function uses a non-reentrant model
 14902 ;;
 14903                           
 14904                           	psect	text88
 14905  005B9E                     __ptext88:
 14906                           	callstack 0
 14907  005B9E                     _UART1_RxDataHandler:
 14908                           	callstack 17
 14909                           
 14910                           ;mcc_generated_files/uart1.c: 299:     uart1RxBuffer[uart1RxHead++] = U1RXB;
 14911                           
 14912                           ;incstack = 0
 14913  005B9E  0E00               	movlw	low _uart1RxBuffer
 14914  005BA0  2448               	addwf	_uart1RxHead^0,w,c	;volatile
 14915  005BA2  6ED9               	movwf	fsr2l,c
 14916  005BA4  6ADA               	clrf	fsr2h,c
 14917  005BA6  0E02               	movlw	high _uart1RxBuffer
 14918  005BA8  22DA               	addwfc	fsr2h,f,c
 14919  005BAA  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 14920  005BB0  2A48               	incf	_uart1RxHead^0,f,c	;volatile
 14921                           
 14922                           ;mcc_generated_files/uart1.c: 300:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 14923  005BB2  0E3F               	movlw	63
 14924  005BB4  6448               	cpfsgt	_uart1RxHead^0,c
 14925  005BB6  D002               	goto	i2l5916
 14926                           
 14927                           ;mcc_generated_files/uart1.c: 301:     {;mcc_generated_files/uart1.c: 302:         uart1
      +                          RxHead = 0;
 14928  005BB8  0E00               	movlw	0
 14929  005BBA  6E48               	movwf	_uart1RxHead^0,c	;volatile
 14930  005BBC                     i2l5916:
 14931                           
 14932                           ;mcc_generated_files/uart1.c: 304:     uart1RxCount++;
 14933  005BBC  2A46               	incf	_uart1RxCount^0,f,c	;volatile
 14934  005BBE  0012               	return		;funcret
 14935  005BC0                     __end_of_UART1_RxDataHandler:
 14936                           	callstack 0
 14937                           
 14938 ;; *************** function _TMR5_ISR *****************
 14939 ;; Defined at:
 14940 ;;		line 165 in file "mcc_generated_files/tmr5.c"
 14941 ;; Parameters:    Size  Location     Type
 14942 ;;		None
 14943 ;; Auto vars:     Size  Location     Type
 14944 ;;		None
 14945 ;; Return value:  Size  Location     Type
 14946 ;;                  1    wreg      void 
 14947 ;; Registers used:
 14948 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 14949 ;; Tracked objects:
 14950 ;;		On entry : 0/0
 14951 ;;		On exit  : 0/0
 14952 ;;		Unchanged: 0/0
 14953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14956 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14957 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14958 ;;Total ram usage:        2 bytes
 14959 ;; Hardware stack levels used: 1
 14960 ;; Hardware stack levels required when called: 1
 14961 ;; This function calls:
 14962 ;;		Absolute function
 14963 ;;		_TMR5_DefaultInterruptHandler
 14964 ;;		_TMR5_WriteTimer
 14965 ;;		_Timers_Isr
 14966 ;; This function is called by:
 14967 ;;		Interrupt level 2
 14968 ;; This function uses a non-reentrant model
 14969 ;;
 14970                           
 14971                           	psect	text89
 14972  0055E4                     __ptext89:
 14973                           	callstack 0
 14974  0055E4                     _TMR5_ISR:
 14975                           	callstack 18
 14976                           
 14977                           ;incstack = 0
 14978  0055E4  006F FFE8  F013    	movff	pclath,??_TMR5_ISR
 14979  0055EA  006F FFEC  F014    	movff	pclatu,??_TMR5_ISR+1
 14980                           
 14981                           ;mcc_generated_files/tmr5.c: 169:     PIR8bits.TMR5IF = 0;
 14982  0055F0  0139               	movlb	57	; () banked
 14983  0055F2  9DA8               	bcf	168,6,b	;volatile
 14984                           
 14985                           ; BSR set to: 57
 14986                           ;mcc_generated_files/tmr5.c: 170:     TMR5_WriteTimer(timer5ReloadVal);
 14987  0055F4  C03F  F00F         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 14988  0055F8  C040  F010         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 14989  0055FC  EC9B  F02D         	call	_TMR5_WriteTimer	;wreg free
 14990                           
 14991                           ; BSR set to: 57
 14992                           ;mcc_generated_files/tmr5.c: 172:     if(TMR5_InterruptHandler)
 14993  005600  0100               	movlb	0	; () banked
 14994  005602  51DD               	movf	_TMR5_InterruptHandler& (0+255),w,b
 14995  005604  11DE               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 14996  005606  11DF               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 14997  005608  B4D8               	btfsc	status,2,c
 14998  00560A  D00C               	goto	i2u637_49
 14999                           
 15000                           ; BSR set to: 0
 15001                           ;mcc_generated_files/tmr5.c: 173:     {;mcc_generated_files/tmr5.c: 174:         TMR5_In
      +                          terruptHandler();
 15002  00560C  D801               	call	i2u637_48
 15003  00560E  D00A               	goto	i2u637_49
 15004  005610                     i2u637_48:
 15005  005610  0005               	push	
 15006  005612  6EFA               	movwf	pclath,c
 15007  005614  51DD               	movf	_TMR5_InterruptHandler& (0+255),w,b
 15008  005616  6EFD               	movwf	tosl,c
 15009  005618  51DE               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 15010  00561A  6EFE               	movwf	tosh,c
 15011  00561C  51DF               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 15012  00561E  6EFF               	movwf	tosu,c
 15013  005620  50FA               	movf	pclath,w,c
 15014  005622  0012               	return		;indir
 15015  005624                     i2u637_49:
 15016  005624  0060  F053  FFFB   	movff	??_TMR5_ISR+1,pclatu
 15017  00562A  0060  F04F  FFFA   	movff	??_TMR5_ISR,pclath
 15018  005630  0011               	retfie		f
 15019  005632                     __end_of_TMR5_ISR:
 15020                           	callstack 0
 15021                           
 15022 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 15023 ;; Defined at:
 15024 ;;		line 183 in file "mcc_generated_files/tmr5.c"
 15025 ;; Parameters:    Size  Location     Type
 15026 ;;		None
 15027 ;; Auto vars:     Size  Location     Type
 15028 ;;		None
 15029 ;; Return value:  Size  Location     Type
 15030 ;;                  1    wreg      void 
 15031 ;; Registers used:
 15032 ;;		None
 15033 ;; Tracked objects:
 15034 ;;		On entry : 3F/0
 15035 ;;		On exit  : 3F/0
 15036 ;;		Unchanged: 3F/0
 15037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15042 ;;Total ram usage:        0 bytes
 15043 ;; Hardware stack levels used: 1
 15044 ;; This function calls:
 15045 ;;		Nothing
 15046 ;; This function is called by:
 15047 ;;		_TMR5_Initialize
 15048 ;;		_TMR5_ISR
 15049 ;; This function uses a non-reentrant model
 15050 ;;
 15051                           
 15052                           	psect	text90
 15053  005D52                     __ptext90:
 15054                           	callstack 0
 15055  005D52                     _TMR5_DefaultInterruptHandler:
 15056                           	callstack 18
 15057                           
 15058                           ; BSR set to: 0
 15059                           
 15060                           ;incstack = 0
 15061  005D52  0012               	return		;funcret
 15062  005D54                     __end_of_TMR5_DefaultInterruptHandler:
 15063                           	callstack 0
 15064                           
 15065 ;; *************** function _Timers_Isr *****************
 15066 ;; Defined at:
 15067 ;;		line 48 in file "timers.c"
 15068 ;; Parameters:    Size  Location     Type
 15069 ;;		None
 15070 ;; Auto vars:     Size  Location     Type
 15071 ;;  i               2   16[COMRAM] int 
 15072 ;; Return value:  Size  Location     Type
 15073 ;;                  1    wreg      void 
 15074 ;; Registers used:
 15075 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15076 ;; Tracked objects:
 15077 ;;		On entry : 3F/0
 15078 ;;		On exit  : 3F/0
 15079 ;;		Unchanged: 3F/0
 15080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15082 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15083 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15084 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15085 ;;Total ram usage:        4 bytes
 15086 ;; Hardware stack levels used: 1
 15087 ;; This function calls:
 15088 ;;		Nothing
 15089 ;; This function is called by:
 15090 ;;		_main
 15091 ;;		_TMR5_ISR
 15092 ;; This function uses a non-reentrant model
 15093 ;;
 15094                           
 15095                           	psect	text91
 15096  005544                     __ptext91:
 15097                           	callstack 0
 15098  005544                     _Timers_Isr:
 15099                           	callstack 18
 15100                           
 15101                           ; BSR set to: 0
 15102                           ;timers.c: 51:  for (int i = 0; i < TMR_COUNT; i++) {
 15103                           
 15104                           ; BSR set to: 0
 15105                           ;incstack = 0
 15106  005544  0E00               	movlw	0
 15107  005546  6E12               	movwf	(Timers_Isr@i+1)^0,c
 15108  005548  0E00               	movlw	0
 15109  00554A  6E11               	movwf	Timers_Isr@i^0,c
 15110  00554C                     i2l6288:
 15111                           
 15112                           ; BSR set to: 0
 15113                           ;timers.c: 52:   if (tickCount[i] != 0) {
 15114  00554C  90D8               	bcf	status,0,c
 15115  00554E  3411               	rlcf	Timers_Isr@i^0,w,c
 15116  005550  6ED9               	movwf	fsr2l,c
 15117  005552  3412               	rlcf	(Timers_Isr@i+1)^0,w,c
 15118  005554  6EDA               	movwf	fsr2h,c
 15119  005556  0E80               	movlw	low _tickCount
 15120  005558  26D9               	addwf	fsr2l,f,c
 15121  00555A  0E01               	movlw	high _tickCount
 15122  00555C  22DA               	addwfc	fsr2h,f,c
 15123  00555E  50DE               	movf	postinc2,w,c
 15124  005560  10DE               	iorwf	postinc2,w,c
 15125  005562  B4D8               	btfsc	status,2,c
 15126  005564  D00C               	goto	i2l6292
 15127                           
 15128                           ; BSR set to: 0
 15129                           ;timers.c: 53:    tickCount[i]--;
 15130  005566  90D8               	bcf	status,0,c
 15131  005568  3411               	rlcf	Timers_Isr@i^0,w,c
 15132  00556A  6ED9               	movwf	fsr2l,c
 15133  00556C  3412               	rlcf	(Timers_Isr@i+1)^0,w,c
 15134  00556E  6EDA               	movwf	fsr2h,c
 15135  005570  0E80               	movlw	low _tickCount
 15136  005572  26D9               	addwf	fsr2l,f,c
 15137  005574  0E01               	movlw	high _tickCount
 15138  005576  22DA               	addwfc	fsr2h,f,c
 15139  005578  06DE               	decf	postinc2,f,c
 15140  00557A  0E00               	movlw	0
 15141  00557C  5ADD               	subwfb	postdec2,f,c
 15142  00557E                     i2l6292:
 15143                           
 15144                           ; BSR set to: 0
 15145                           ;timers.c: 55:  }
 15146  00557E  4A11               	infsnz	Timers_Isr@i^0,f,c
 15147  005580  2A12               	incf	(Timers_Isr@i+1)^0,f,c
 15148                           
 15149                           ; BSR set to: 0
 15150  005582  BE12               	btfsc	(Timers_Isr@i+1)^0,7,c
 15151  005584  D7E3               	goto	i2l6288
 15152  005586  5012               	movf	(Timers_Isr@i+1)^0,w,c
 15153  005588  E105               	bnz	i2u618_40
 15154  00558A  0E06               	movlw	6
 15155  00558C  5C11               	subwf	Timers_Isr@i^0,w,c
 15156  00558E  B0D8               	btfsc	status,0,c
 15157  005590  0012               	return	
 15158  005592  D7DC               	goto	i2l6288
 15159  005594                     i2u618_40:
 15160                           
 15161                           ; BSR set to: 0
 15162  005594  0012               	return		;funcret
 15163  005596                     __end_of_Timers_Isr:
 15164                           	callstack 0
 15165                           
 15166 ;; *************** function _TMR5_WriteTimer *****************
 15167 ;; Defined at:
 15168 ;;		line 128 in file "mcc_generated_files/tmr5.c"
 15169 ;; Parameters:    Size  Location     Type
 15170 ;;  timerVal        2   14[COMRAM] unsigned short 
 15171 ;; Auto vars:     Size  Location     Type
 15172 ;;		None
 15173 ;; Return value:  Size  Location     Type
 15174 ;;                  1    wreg      void 
 15175 ;; Registers used:
 15176 ;;		None
 15177 ;; Tracked objects:
 15178 ;;		On entry : 3F/39
 15179 ;;		On exit  : 3F/39
 15180 ;;		Unchanged: 3E/0
 15181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15182 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15185 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15186 ;;Total ram usage:        2 bytes
 15187 ;; Hardware stack levels used: 1
 15188 ;; This function calls:
 15189 ;;		Nothing
 15190 ;; This function is called by:
 15191 ;;		_TMR5_ISR
 15192 ;; This function uses a non-reentrant model
 15193 ;;
 15194                           
 15195                           	psect	text92
 15196  005B36                     __ptext92:
 15197                           	callstack 0
 15198  005B36                     _TMR5_WriteTimer:
 15199                           	callstack 18
 15200                           
 15201                           ; BSR set to: 57
 15202                           ;mcc_generated_files/tmr5.c: 128: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 129: {;mcc_generated_files/tmr5.c: 130:     if (T5CONbits.NOT_SYNC == 1)
 15203                           
 15204                           ; BSR set to: 0
 15205                           ;incstack = 0
 15206  005B36  A49A               	btfss	154,2,c	;volatile
 15207  005B38  D009               	goto	i2l721
 15208                           
 15209                           ; BSR set to: 57
 15210                           ;mcc_generated_files/tmr5.c: 131:     {;mcc_generated_files/tmr5.c: 133:         T5CONbi
      +                          ts.TMR5ON = 0;
 15211  005B3A  909A               	bcf	154,0,c	;volatile
 15212                           
 15213                           ;mcc_generated_files/tmr5.c: 136:         TMR5H = (uint8_t)(timerVal >> 8);
 15214  005B3C  0060  F043  FF99   	movff	TMR5_WriteTimer@timerVal+1,16281	;volatile
 15215                           
 15216                           ;mcc_generated_files/tmr5.c: 137:         TMR5L = (uint8_t)timerVal;
 15217  005B42  0060  F03F  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 15218                           
 15219                           ;mcc_generated_files/tmr5.c: 140:         T5CONbits.TMR5ON =1;
 15220  005B48  809A               	bsf	154,0,c	;volatile
 15221                           
 15222                           ;mcc_generated_files/tmr5.c: 141:     }
 15223  005B4A  0012               	return	
 15224  005B4C                     i2l721:
 15225                           
 15226                           ; BSR set to: 57
 15227                           ;mcc_generated_files/tmr5.c: 143:     {;mcc_generated_files/tmr5.c: 145:         TMR5H =
      +                           (uint8_t)(timerVal >> 8);
 15228  005B4C  0060  F043  FF99   	movff	TMR5_WriteTimer@timerVal+1,16281	;volatile
 15229                           
 15230                           ;mcc_generated_files/tmr5.c: 146:         TMR5L = (uint8_t)timerVal;
 15231  005B52  0060  F03F  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 15232                           
 15233                           ; BSR set to: 57
 15234  005B58  0012               	return		;funcret
 15235  005B5A                     __end_of_TMR5_WriteTimer:
 15236                           	callstack 0
 15237                           
 15238                           ;
 15239                           ; Interrupt Vector Table @ 0x8
 15240                           ;
 15241                           
 15242                           	psect	ivt0x8
 15243  000008                     __pivt0x8:
 15244                           	callstack 0
 15245  000008                     ivt0x8_base:
 15246                           	callstack 0
 15247                           
 15248                           ; Vector 0 : SWINT
 15249  000008  1753               	dw	_Default_ISR shr (0+2)
 15250                           
 15251                           ; Vector 1 : HLVD
 15252  00000A  1753               	dw	_Default_ISR shr (0+2)
 15253                           
 15254                           ; Vector 2 : OSF
 15255  00000C  1753               	dw	_Default_ISR shr (0+2)
 15256                           
 15257                           ; Vector 3 : CSW
 15258  00000E  1753               	dw	_Default_ISR shr (0+2)
 15259                           
 15260                           ; Vector 4 : NVM
 15261  000010  1753               	dw	_Default_ISR shr (0+2)
 15262                           
 15263                           ; Vector 5 : SCAN
 15264  000012  1753               	dw	_Default_ISR shr (0+2)
 15265                           
 15266                           ; Vector 6 : CRC
 15267  000014  1753               	dw	_Default_ISR shr (0+2)
 15268                           
 15269                           ; Vector 7 : IOC
 15270  000016  1753               	dw	_Default_ISR shr (0+2)
 15271                           
 15272                           ; Vector 8 : INT0
 15273  000018  1753               	dw	_Default_ISR shr (0+2)
 15274                           
 15275                           ; Vector 9 : ZCD
 15276  00001A  1753               	dw	_Default_ISR shr (0+2)
 15277                           
 15278                           ; Vector 10 : AD
 15279  00001C  15D4               	dw	_ADCC_ISR shr (0+2)
 15280                           
 15281                           ; Vector 11 : ADT
 15282  00001E  1753               	dw	_Default_ISR shr (0+2)
 15283                           
 15284                           ; Vector 12 : CMP1
 15285  000020  1753               	dw	_Default_ISR shr (0+2)
 15286                           
 15287                           ; Vector 13 : SMT1
 15288  000022  1753               	dw	_Default_ISR shr (0+2)
 15289                           
 15290                           ; Vector 14 : SMT1PRA
 15291  000024  1753               	dw	_Default_ISR shr (0+2)
 15292                           
 15293                           ; Vector 15 : SMT1PRW
 15294  000026  1753               	dw	_Default_ISR shr (0+2)
 15295                           
 15296                           ; Vector 16 : DMA1SCNT
 15297  000028  1753               	dw	_Default_ISR shr (0+2)
 15298                           
 15299                           ; Vector 17 : DMA1DCNT
 15300  00002A  1753               	dw	_Default_ISR shr (0+2)
 15301                           
 15302                           ; Vector 18 : DMA1OR
 15303  00002C  1753               	dw	_Default_ISR shr (0+2)
 15304                           
 15305                           ; Vector 19 : DMA1A
 15306  00002E  1753               	dw	_Default_ISR shr (0+2)
 15307                           
 15308                           ; Vector 20 : SPI1RX
 15309  000030  1753               	dw	_Default_ISR shr (0+2)
 15310                           
 15311                           ; Vector 21 : SPI1TX
 15312  000032  1753               	dw	_Default_ISR shr (0+2)
 15313                           
 15314                           ; Vector 22 : SPI1
 15315  000034  1753               	dw	_Default_ISR shr (0+2)
 15316                           
 15317                           ; Vector 23 : I2C1RX
 15318  000036  1753               	dw	_Default_ISR shr (0+2)
 15319                           
 15320                           ; Vector 24 : I2C1TX
 15321  000038  1753               	dw	_Default_ISR shr (0+2)
 15322                           
 15323                           ; Vector 25 : I2C1
 15324  00003A  1753               	dw	_Default_ISR shr (0+2)
 15325                           
 15326                           ; Vector 26 : I2C1E
 15327  00003C  1753               	dw	_Default_ISR shr (0+2)
 15328                           
 15329                           ; Vector 27 : U1RX
 15330  00003E  1614               	dw	_UART1_rx_vect_isr shr (0+2)
 15331                           
 15332                           ; Vector 28 : U1TX
 15333  000040  1604               	dw	_UART1_tx_vect_isr shr (0+2)
 15334                           
 15335                           ; Vector 29 : U1E
 15336  000042  1753               	dw	_Default_ISR shr (0+2)
 15337                           
 15338                           ; Vector 30 : U1
 15339  000044  1753               	dw	_Default_ISR shr (0+2)
 15340                           
 15341                           ; Vector 31 : TMR0
 15342  000046  1753               	dw	_Default_ISR shr (0+2)
 15343                           
 15344                           ; Vector 32 : TMR1
 15345  000048  1753               	dw	_Default_ISR shr (0+2)
 15346                           
 15347                           ; Vector 33 : TMR1G
 15348  00004A  1753               	dw	_Default_ISR shr (0+2)
 15349                           
 15350                           ; Vector 34 : TMR2
 15351  00004C  1753               	dw	_Default_ISR shr (0+2)
 15352                           
 15353                           ; Vector 35 : CCP1
 15354  00004E  1753               	dw	_Default_ISR shr (0+2)
 15355                           
 15356                           ; Vector 36 : Undefined
 15357  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 15358                           
 15359                           ; Vector 37 : NCO1
 15360  000052  1753               	dw	_Default_ISR shr (0+2)
 15361                           
 15362                           ; Vector 38 : CWG1
 15363  000054  1753               	dw	_Default_ISR shr (0+2)
 15364                           
 15365                           ; Vector 39 : CLC1
 15366  000056  1753               	dw	_Default_ISR shr (0+2)
 15367                           
 15368                           ; Vector 40 : INT1
 15369  000058  1753               	dw	_Default_ISR shr (0+2)
 15370                           
 15371                           ; Vector 41 : CMP2
 15372  00005A  1753               	dw	_Default_ISR shr (0+2)
 15373                           
 15374                           ; Vector 42 : DMA2SCNT
 15375  00005C  1753               	dw	_Default_ISR shr (0+2)
 15376                           
 15377                           ; Vector 43 : DMA2DCNT
 15378  00005E  1753               	dw	_Default_ISR shr (0+2)
 15379                           
 15380                           ; Vector 44 : DMA2OR
 15381  000060  1753               	dw	_Default_ISR shr (0+2)
 15382                           
 15383                           ; Vector 45 : DMA2A
 15384  000062  1753               	dw	_Default_ISR shr (0+2)
 15385                           
 15386                           ; Vector 46 : I2C2RX
 15387  000064  1753               	dw	_Default_ISR shr (0+2)
 15388                           
 15389                           ; Vector 47 : I2C2TX
 15390  000066  1753               	dw	_Default_ISR shr (0+2)
 15391                           
 15392                           ; Vector 48 : I2C2
 15393  000068  1753               	dw	_Default_ISR shr (0+2)
 15394                           
 15395                           ; Vector 49 : I2C2E
 15396  00006A  1753               	dw	_Default_ISR shr (0+2)
 15397                           
 15398                           ; Vector 50 : U2RX
 15399  00006C  1753               	dw	_Default_ISR shr (0+2)
 15400                           
 15401                           ; Vector 51 : U2TX
 15402  00006E  1753               	dw	_Default_ISR shr (0+2)
 15403                           
 15404                           ; Vector 52 : U2E
 15405  000070  1753               	dw	_Default_ISR shr (0+2)
 15406                           
 15407                           ; Vector 53 : U2
 15408  000072  1753               	dw	_Default_ISR shr (0+2)
 15409                           
 15410                           ; Vector 54 : TMR3
 15411  000074  1753               	dw	_Default_ISR shr (0+2)
 15412                           
 15413                           ; Vector 55 : TMR3G
 15414  000076  1753               	dw	_Default_ISR shr (0+2)
 15415                           
 15416                           ; Vector 56 : TMR4
 15417  000078  1753               	dw	_Default_ISR shr (0+2)
 15418                           
 15419                           ; Vector 57 : CCP2
 15420  00007A  1753               	dw	_Default_ISR shr (0+2)
 15421                           
 15422                           ; Vector 58 : Undefined
 15423  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 15424                           
 15425                           ; Vector 59 : CWG2
 15426  00007E  1753               	dw	_Default_ISR shr (0+2)
 15427                           
 15428                           ; Vector 60 : CLC2
 15429  000080  1753               	dw	_Default_ISR shr (0+2)
 15430                           
 15431                           ; Vector 61 : INT2
 15432  000082  1753               	dw	_Default_ISR shr (0+2)
 15433                           
 15434                           ; Vector 62 : Undefined
 15435  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 15436                           
 15437                           ; Vector 63 : Undefined
 15438  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 15439                           
 15440                           ; Vector 64 : Undefined
 15441  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 15442                           
 15443                           ; Vector 65 : Undefined
 15444  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 15445                           
 15446                           ; Vector 66 : Undefined
 15447  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 15448                           
 15449                           ; Vector 67 : Undefined
 15450  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 15451                           
 15452                           ; Vector 68 : Undefined
 15453  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 15454                           
 15455                           ; Vector 69 : Undefined
 15456  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 15457                           
 15458                           ; Vector 70 : TMR5
 15459  000094  1579               	dw	_TMR5_ISR shr (0+2)
 15460                           
 15461                           ; Vector 71 : TMR5G
 15462  000096  1753               	dw	_Default_ISR shr (0+2)
 15463                           
 15464                           ; Vector 72 : TMR6
 15465  000098  165E               	dw	_TMR6_ISR shr (0+2)
 15466                           
 15467                           ; Vector 73 : CCP3
 15468  00009A  1753               	dw	_Default_ISR shr (0+2)
 15469                           
 15470                           ; Vector 74 : CWG3
 15471  00009C  1753               	dw	_Default_ISR shr (0+2)
 15472                           
 15473                           ; Vector 75 : CLC3
 15474  00009E  1753               	dw	_Default_ISR shr (0+2)
 15475                           
 15476                           ; Vector 76 : Undefined
 15477  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 15478                           
 15479                           ; Vector 77 : Undefined
 15480  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 15481                           
 15482                           ; Vector 78 : Undefined
 15483  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 15484                           
 15485                           ; Vector 79 : Undefined
 15486  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 15487                           
 15488                           ; Vector 80 : CCP4
 15489  0000A8  1753               	dw	_Default_ISR shr (0+2)
 15490                           
 15491                           ; Vector 81 : CLC4
 15492  0000AA  1753               	dw	_Default_ISR shr (0+2)
 15493  0000AC                     ivt0x8_undefint:
 15494                           	callstack 0
 15495  0000AC  00FF               	reset	
 15496                           
 15497                           	psect	text93
 15498  000000                     __ptext93:
 15499                           	callstack 0
 15500                           
 15501                           	psect	rparam
 15502  0000                     
 15503                           	psect	idloc
 15504                           
 15505                           ;Config register IDLOC0 @ 0x200000
 15506                           ;	unspecified, using default values
 15507  200000                     	org	2097152
 15508  200000  0FFF               	dw	4095
 15509                           
 15510                           ;Config register IDLOC1 @ 0x200002
 15511                           ;	unspecified, using default values
 15512  200002                     	org	2097154
 15513  200002  0FFF               	dw	4095
 15514                           
 15515                           ;Config register IDLOC2 @ 0x200004
 15516                           ;	unspecified, using default values
 15517  200004                     	org	2097156
 15518  200004  0FFF               	dw	4095
 15519                           
 15520                           ;Config register IDLOC3 @ 0x200006
 15521                           ;	unspecified, using default values
 15522  200006                     	org	2097158
 15523  200006  0FFF               	dw	4095
 15524                           
 15525                           ;Config register IDLOC4 @ 0x200008
 15526                           ;	unspecified, using default values
 15527  200008                     	org	2097160
 15528  200008  0FFF               	dw	4095
 15529                           
 15530                           ;Config register IDLOC5 @ 0x20000A
 15531                           ;	unspecified, using default values
 15532  20000A                     	org	2097162
 15533  20000A  0FFF               	dw	4095
 15534                           
 15535                           ;Config register IDLOC6 @ 0x20000C
 15536                           ;	unspecified, using default values
 15537  20000C                     	org	2097164
 15538  20000C  0FFF               	dw	4095
 15539                           
 15540                           ;Config register IDLOC7 @ 0x20000E
 15541                           ;	unspecified, using default values
 15542  20000E                     	org	2097166
 15543  20000E  0FFF               	dw	4095
 15544                           
 15545                           	psect	config
 15546                           
 15547                           ;Config register CONFIG1L @ 0x300000
 15548                           ;	External Oscillator Selection
 15549                           ;	FEXTOSC = ECH, EC (external clock) above 8 MHz; PFM set to high power
 15550                           ;	Reset Oscillator Selection
 15551                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 15552  300000                     	org	3145728
 15553  300000  AF                 	db	175
 15554                           
 15555                           ;Config register CONFIG1H @ 0x300001
 15556                           ;	Clock out Enable bit
 15557                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 15558                           ;	PRLOCKED One-Way Set Enable bit
 15559                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
 15560                           ;	Clock Switch Enable bit
 15561                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 15562                           ;	Fail-Safe Clock Monitor Enable bit
 15563                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 15564  300001                     	org	3145729
 15565  300001  FF                 	db	255
 15566                           
 15567                           ;Config register CONFIG2L @ 0x300002
 15568                           ;	MCLR Enable bit
 15569                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 15570                           ;	Power-up timer selection bits
 15571                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 15572                           ;	Multi-vector enable bit
 15573                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 15574                           ;	IVTLOCK bit One-way set enable bit
 15575                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 15576                           ;	Low Power BOR Enable bit
 15577                           ;	LPBOREN = OFF, ULPBOR disabled
 15578                           ;	Brown-out Reset Enable bits
 15579                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 15580  300002                     	org	3145730
 15581  300002  FF                 	db	255
 15582                           
 15583                           ;Config register CONFIG2H @ 0x300003
 15584                           ;	Brown-out Reset Voltage Selection bits
 15585                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 15586                           ;	ZCD Disable bit
 15587                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 15588                           ;	PPSLOCK bit One-Way Set Enable bit
 15589                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 15590                           ;	Stack Full/Underflow Reset Enable bit
 15591                           ;	STVREN = ON, Stack full/underflow will cause Reset
 15592                           ;	Debugger Enable bit
 15593                           ;	DEBUG = OFF, Background debugger disabled
 15594                           ;	Extended Instruction Set Enable bit
 15595                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 15596  300003                     	org	3145731
 15597  300003  FF                 	db	255
 15598                           
 15599                           ;Config register CONFIG3L @ 0x300004
 15600                           ;	WDT Period selection bits
 15601                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 15602                           ;	WDT operating mode
 15603                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 15604  300004                     	org	3145732
 15605  300004  9F                 	db	159
 15606                           
 15607                           ;Config register CONFIG3H @ 0x300005
 15608                           ;	WDT Window Select bits
 15609                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 15610                           ;	WDT input clock selector
 15611                           ;	WDTCCS = SC, Software Control
 15612  300005                     	org	3145733
 15613  300005  FF                 	db	255
 15614                           
 15615                           ;Config register CONFIG4L @ 0x300006
 15616                           ;	Boot Block Size selection bits
 15617                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 15618                           ;	Boot Block enable bit
 15619                           ;	BBEN = OFF, Boot block disabled
 15620                           ;	Storage Area Flash enable bit
 15621                           ;	SAFEN = OFF, SAF disabled
 15622                           ;	Application Block write protection bit
 15623                           ;	WRTAPP = OFF, Application Block not write protected
 15624  300006                     	org	3145734
 15625  300006  FF                 	db	255
 15626                           
 15627                           ;Config register CONFIG4H @ 0x300007
 15628                           ;	Boot Block Write Protection bit
 15629                           ;	WRTB = OFF, Boot Block not write-protected
 15630                           ;	Configuration Register Write Protection bit
 15631                           ;	WRTC = OFF, Configuration registers not write-protected
 15632                           ;	Data EEPROM Write Protection bit
 15633                           ;	WRTD = OFF, Data EEPROM not write-protected
 15634                           ;	SAF Write protection bit
 15635                           ;	WRTSAF = OFF, SAF not Write Protected
 15636                           ;	Low Voltage Programming Enable bit
 15637                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 15638  300007                     	org	3145735
 15639  300007  FF                 	db	255
 15640                           
 15641                           ;Config register CONFIG5L @ 0x300008
 15642                           ;	PFM and Data EEPROM Code Protection bit
 15643                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 15644  300008                     	org	3145736
 15645  300008  FF                 	db	255
 15646                           
 15647                           ;Config register CONFIG5H @ 0x300009
 15648                           ;	unspecified, using default values
 15649  300009                     	org	3145737
 15650  300009  FF                 	db	255
 15651                           tosu	equ	0x3FFF
 15652                           tosh	equ	0x3FFE
 15653                           tosl	equ	0x3FFD
 15654                           stkptr	equ	0x3FFC
 15655                           pclatu	equ	0x3FFB
 15656                           pclath	equ	0x3FFA
 15657                           pcl	equ	0x3FF9
 15658                           tblptru	equ	0x3FF8
 15659                           tblptrh	equ	0x3FF7
 15660                           tblptrl	equ	0x3FF6
 15661                           tablat	equ	0x3FF5
 15662                           prodh	equ	0x3FF4
 15663                           prodl	equ	0x3FF3
 15664                           indf0	equ	0x3FEF
 15665                           postinc0	equ	0x3FEE
 15666                           postdec0	equ	0x3FED
 15667                           preinc0	equ	0x3FEC
 15668                           plusw0	equ	0x3FEB
 15669                           fsr0h	equ	0x3FEA
 15670                           fsr0l	equ	0x3FE9
 15671                           wreg	equ	0x3FE8
 15672                           indf1	equ	0x3FE7
 15673                           postinc1	equ	0x3FE6
 15674                           postdec1	equ	0x3FE5
 15675                           preinc1	equ	0x3FE4
 15676                           plusw1	equ	0x3FE3
 15677                           fsr1h	equ	0x3FE2
 15678                           fsr1l	equ	0x3FE1
 15679                           bsr	equ	0x3FE0
 15680                           indf2	equ	0x3FDF
 15681                           postinc2	equ	0x3FDE
 15682                           postdec2	equ	0x3FDD
 15683                           preinc2	equ	0x3FDC
 15684                           plusw2	equ	0x3FDB
 15685                           fsr2h	equ	0x3FDA
 15686                           fsr2l	equ	0x3FD9
 15687                           status	equ	0x3FD8

Data Sizes:
    Strings     168
    Constant    33
    Data        26
    BSS         737
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     56      75
    BANK0           160    121     160
    BANK1           256      0     255
    BANK2           256     24     219
    BANK3           256      0     255
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    cli_ctx.cmds.fh	PTR FTN(PTR void ,)void  size(3) Largest target is 0
		 -> fh_ho(), fh_hi(), fh_hw(), Absolute function(), 

    cli_ctx.cmds.cmd	PTR const unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[3]), 

    fh_hi@a_data	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    fh_ho@a_data	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    S1822$1$0	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 132
		 -> cli_ctx.cmd(BANK2[128]), STR_26(CODE[4]), STR_21(CODE[3]), cli_ctx(BANK2[131]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 132
		 -> cli_ctx.cmd(BANK2[128]), STR_26(CODE[4]), STR_21(CODE[3]), cli_ctx(BANK2[131]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 74
		 -> vfpfcnvrt@ct(BANK0[3]), STR_9(CODE[21]), NULL(NULL[0]), STR_8(CODE[3]), 
		 -> STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[74]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 74
		 -> vfpfcnvrt@ct(BANK0[3]), STR_9(CODE[21]), NULL(NULL[0]), STR_8(CODE[3]), 
		 -> STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[74]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 132
		 -> cli_ctx.cmd(BANK2[128]), ?_printf(BANK2[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[80]), 
		 -> ?_sprintf(BANK2[2]), NULL(NULL[0]), STR_8(CODE[3]), STR_7(CODE[3]), 
		 -> STR_6(CODE[3]), cli_ctx(BANK2[131]), STR_2(CODE[9]), STR_1(CODE[12]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 132
		 -> cli_ctx.cmd(BANK2[128]), ?_printf(BANK2[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[80]), 
		 -> ?_sprintf(BANK2[2]), NULL(NULL[0]), STR_8(CODE[3]), STR_7(CODE[3]), 
		 -> STR_6(CODE[3]), cli_ctx(BANK2[131]), STR_2(CODE[9]), STR_1(CODE[12]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_16(CODE[4]), STR_15(CODE[4]), STR_12(CODE[4]), STR_11(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_16(CODE[4]), STR_15(CODE[4]), STR_12(CODE[4]), STR_11(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    puts@s	PTR const unsigned char  size(2) Largest target is 132
		 -> cli_ctx.cmd(BANK2[128]), STR_10(CODE[3]), cli_read@i(BANK0[1]), cmdm(CODE[28]), 
		 -> cli_ctx(BANK2[131]), STR_4(CODE[10]), STR_3(CODE[10]), 

    printf@fmt	PTR const unsigned char  size(1) Largest target is 74
		 -> STR_5(CODE[74]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK2[2]), ?_sprintf(BANK2[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 132
		 -> cli_ctx.cmd(BANK2[128]), dbuf(BANK1[80]), STR_10(CODE[3]), cli_read@i(BANK0[1]), 
		 -> cmdm(CODE[28]), cli_ctx(BANK2[131]), STR_4(CODE[10]), STR_3(CODE[10]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 74
		 -> STR_9(CODE[21]), STR_5(CODE[74]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 1
		 -> printf@ap(BANK0[2]), sprintf@ap(BANK2[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 74
		 -> STR_9(CODE[21]), STR_5(CODE[74]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 74
		 -> STR_9(CODE[21]), STR_5(CODE[74]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK2[2]), ?_sprintf(BANK2[2]), STR_2(CODE[9]), STR_1(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 1
		 -> printf@ap(BANK0[2]), sprintf@ap(BANK2[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK2[2]), ?_sprintf(BANK2[2]), STR_2(CODE[9]), STR_1(CODE[12]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK2[2]), stoa@nuls(COMRAM[7]), ?_sprintf(BANK2[2]), STR_2(CODE[9]), 
		 -> STR_1(CODE[12]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK2[11]), NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_9(CODE[21]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK2[2]), ?_sprintf(BANK2[2]), 

    S2598$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2598$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memset@dest	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    memset@s	PTR unsigned char  size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    cli_read@a_ctx.cmds	PTR struct _t_cmd size(2) Largest target is 24
		 -> g_cmds(BANK1[16]), 

    cli_read@a_ctx	PTR struct _t_cli_ctx size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    _cli_interpret_cmd@a_ctx.cmds.fh	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> fh_ho(), fh_hi(), fh_hw(), Absolute function(), 

    _cli_interpret_cmd@a_ctx.cmds.cmd	PTR const unsigned char  size(1) Largest target is 3
		 -> NULL(NULL[0]), STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[3]), 

    _cli_interpret_cmd@a_ctx.cmds	PTR struct _t_cmd size(2) Largest target is 24
		 -> g_cmds(BANK1[16]), 

    _cli_interpret_cmd@a_ctx	PTR struct _t_cli_ctx size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    linux_putc@data	PTR unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), cli_read@i(BANK0[1]), 

    linux_getc@a_data	PTR unsigned char  size(1) Largest target is 1
		 -> cli_read@i(BANK0[1]), 

    cli_init@a_ctx.cmds.fh	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> fh_ho(), fh_hi(), fh_hw(), Absolute function(), 

    cli_init@a_ctx.cmds.cmd	PTR const unsigned char  size(1) Largest target is 3
		 -> NULL(NULL[0]), STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[3]), 

    cli_init@a_ctx.cmds	PTR struct _t_cmd size(2) Largest target is 24
		 -> g_cmds(BANK1[16]), 

    cli_init@a_cmds	PTR struct _t_cmd size(2) Largest target is 24
		 -> g_cmds(BANK1[16]), 

    sp__memset	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    cli_init@a_ctx	PTR struct _t_cli_ctx size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    S1822_t_cmd$fh	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> fh_ho(), fh_hi(), fh_hw(), Absolute function(), 

    g_cmds.fh	PTR FTN(PTR void ,)void  size(3) Largest target is 1
		 -> fh_ho(), fh_hi(), fh_hw(), Absolute function(), 

    S1822_t_cmd$cmd	PTR const unsigned char  size(1) Largest target is 3
		 -> NULL(NULL[0]), STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[3]), 

    g_cmds.cmd	PTR const unsigned char  size(1) Largest target is 3
		 -> NULL(NULL[0]), STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[3]), 

    fh_hw@a_data	PTR void  size(2) Largest target is 132
		 -> cli_ctx(BANK2[131]), 

    build_time	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_2(CODE[9]), 

    build_date	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_1(CODE[12]), 

    S1829_t_cli_ctx$cmds	PTR struct _t_cmd size(2) Largest target is 24
		 -> g_cmds(BANK1[16]), 

    cli_ctx.cmds	PTR struct _t_cmd size(2) Largest target is 24
		 -> g_cmds(BANK1[16]), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Timers_Isr(), TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Timers_Isr(), TMR5_DefaultInterruptHandler(), Absolute function(), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultErrorHandler(), Absolute function(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), Absolute function(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), Absolute function(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Led_Blink(), TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Led_Blink(), TMR6_DefaultInterruptHandler(), Absolute function(), 

    ADCC_SetADIInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Adc_Isr(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Adc_Isr(), Absolute function(), ADCC_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _printf->_vfprintf
    _utoa->_pad
    _stoa->_fputc
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    _atoi->_isspace
    _cli_read->__cli_interpret_cmd
    _linux_putc->_puts
    _linux_getc->_UART1_Read
    __cli_interpret_cmd->_fh_hi
    __cli_interpret_cmd->_fh_ho
    __cli_interpret_cmd->_fh_hw
    _strncmp->_strlen
    _fh_hw->_puts
    _fh_ho->_puts
    _fh_hi->_puts
    _puts->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_UART1_Write
    _SYSTEM_Initialize->_TMR5_Initialize
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _ADCC_Initialize->_ADCC_SetADIInterruptHandler

Critical Paths under _ADCC_ISR in COMRAM

    _ADCC_ISR->_Adc_Isr
    _Adc_Isr->_ADCC_GetConversionResult

Critical Paths under _TMR6_ISR in COMRAM

    _TMR6_CallBack->_Led_Blink

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    _TMR5_ISR->_Timers_Isr

Critical Paths under _main in BANK0

    _main->_printf
    _sprintf->_vfprintf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    ___flsub->___flmul
    ___flge->___flmul
    _cli_read->__cli_interpret_cmd

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    _scmd_init->_cli_init
    _cli_init->_sprintf

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  187007
                                            117 BANK0      4     4      0
        _ADCC_SetADIInterruptHandler
                     _DAC1_GetOutput
                     _DAC1_SetOutput
                  _SYSTEM_Initialize
           _TMR5_SetInterruptHandler
           _TMR6_SetInterruptHandler
                            ___flmul
                           ___xxtofl
                           _cli_read
                        _display_led
                             _printf
                          _scmd_init
 ---------------------------------------------------------------------------------
 (1) _scmd_init                                            0     0      0   78043
                           _cli_init
 ---------------------------------------------------------------------------------
 (2) _cli_init                                             4     0      4   78043
                                             20 BANK2      4     0      4
                             _memset
                               _puts
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             22    15      7   69423
                                              0 BANK2     20    13      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _printf                                              21     4     17   68987
                                            115 BANK0      2     2      0
                                              0 BANK2     17     0     17
                     _DAC1_GetOutput (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             6     1      5   68693
                                             55 COMRAM     1     1      0
                                            110 BANK0      5     0      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           44    39      5   67481
                                             79 BANK0     31    26      5
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
 ---------------------------------------------------------------------------------
 (6) _utoa                                                32    22     10    9760
                                              0 BANK0     32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (7) ___lomod                                             17     1     16     536
                                             20 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (7) ___lodiv                                             25     9     16     554
                                             20 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (6) _stoa                                                22    18      4    4144
                                             31 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              62    55      7   41977
                                             17 BANK0     62    55      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _tolower                                              6     4      2    1318
                                             26 COMRAM     6     4      2
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     649
                                             20 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _strcpy                                              10     6      4    1248
                                             20 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    7900
                                             40 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     890
                                             45 COMRAM    10     6      4
                                              0 BANK0     10    10      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       14    10      4     482
                                             20 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (7) ___fltol                                             10     6      4     686
                                             20 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    5410
                                             46 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fladd                                             16     8      8    4742
                                             20 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     196
                                             20 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             25    17      8    5194
                                             34 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8    1220
                                             46 COMRAM     8     0      8
                                             13 BANK0      4     4      0
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     912
                                             20 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (7) ___fldiv                                             25    17      8    3620
                                             20 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     818
                                             20 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     842
                                             20 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _atoi                                                10     8      2    2172
                                             27 COMRAM    10     8      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     321
                                             20 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     437
                                             20 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     698
                                             20 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _display_led                                          3     3      0      42
                                             20 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _cli_read                                             8     6      2   31209
                                             49 COMRAM     5     3      2
                                             10 BANK0      3     3      0
                 __cli_interpret_cmd
                         _linux_getc
                         _linux_putc
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                              12     6      6    2020
                                             20 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) _linux_putc                                           3     0      3    6644
                                             43 COMRAM     3     0      3
                               _puts
 ---------------------------------------------------------------------------------
 (2) _linux_getc                                           2     1      1     202
                                             21 COMRAM     2     1      1
                         _UART1_Read
                  _UART1_is_rx_ready
 ---------------------------------------------------------------------------------
 (3) _UART1_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART1_Read                                           1     1      0      54
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) __cli_interpret_cmd                                  14    12      2   21529
                                             45 COMRAM     4     2      2
                                              0 BANK0     10    10      0
                   Absolute function *
                              _fh_hi *
                              _fh_ho *
                              _fh_hw *
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             12     6      6    1404
                                             24 COMRAM    12     6      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     710
                                             20 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _fh_hw                                                2     0      2    6220
                                             43 COMRAM     2     0      2
                               _puts
 ---------------------------------------------------------------------------------
 (3) _fh_ho                                                2     0      2    6257
                                             43 COMRAM     2     0      2
                               _puts
 ---------------------------------------------------------------------------------
 (3) _fh_hi                                                2     0      2    6178
                                             43 COMRAM     2     0      2
                               _puts
 ---------------------------------------------------------------------------------
 (3) _puts                                                 5     3      2    6178
                                             40 COMRAM     3     1      2
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (8) _fputs                                                9     5      4    3148
                                             31 COMRAM     9     5      4
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4    2284
                                             22 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0     126
                                             21 COMRAM     1     1      0
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (11) _UART1_Write                                         1     1      0      84
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     884
                                             20 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1550
                    _ADCC_Initialize
                    _DAC1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     740
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3     148
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3     148
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         3     0      3     148
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         3     0      3     148
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                3     0      3     148
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     254
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR6_SetInterruptHandler                             3     0      3     254
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0     254
                                             23 COMRAM     2     2      0
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR5_SetInterruptHandler                             3     0      3     254
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      48
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _DAC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     254
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3     254
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _DAC1_SetOutput                                       1     1      0      42
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DAC1_GetOutput                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _ADCC_ISR                                            2     2      0       0
                                              5 COMRAM     2     2      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                            _Adc_Isr *
 ---------------------------------------------------------------------------------
 (13) _Adc_Isr                                             1     1      0       0
                                              4 COMRAM     1     1      0
           _ADCC_GetConversionResult
 ---------------------------------------------------------------------------------
 (14) _ADCC_GetConversionResult                            4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (13) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR6_ISR                                            2     2      0       0
                                              8 COMRAM     2     2      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR6_CallBack                                       0     0      0       0
                   Absolute function *
                          _Led_Blink *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR6_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _Led_Blink                                           1     1      0       0
                                              7 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_tx_vect_isr                                   2     2      0       0
                                             10 COMRAM     2     2      0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_rx_vect_isr                                   2     2      0       0
                                             12 COMRAM     2     2      0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultErrorHandler                           0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _UART1_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR5_ISR                                            2     2      0     319
                                             18 COMRAM     2     2      0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
                    _TMR5_WriteTimer
                         _Timers_Isr *
 ---------------------------------------------------------------------------------
 (13) _Timers_Isr                                          4     4      0      90
                                             14 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (13) _TMR5_WriteTimer                                     2     0      2     229
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_SetADIInterruptHandler
   _DAC1_GetOutput
   _DAC1_SetOutput
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _DAC1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
   _TMR5_SetInterruptHandler
   _TMR6_SetInterruptHandler
   ___flmul
     ___xxtofl (ARG)
   ___xxtofl
   _cli_read
     __cli_interpret_cmd
       Absolute function(Fake) *
       _fh_hi *
         _puts
           _fputc
             _putch
               _UART1_Write
           _fputs
             _fputc
       _fh_ho *
         _puts
       _fh_hw *
         _puts
       _strlen *
       _strncmp *
         _strlen (ARG)
     _linux_getc
       _UART1_Read
       _UART1_is_rx_ready
     _linux_putc
       _puts
     _memset
   _display_led
   _printf
     _DAC1_GetOutput (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
             _fputs
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
         _isdigit
         _isupper
         _stoa
           _fputc
           _strlen
         _strncmp
         _tolower
         _utoa
           ___lodiv
           ___lomod
           _pad
   _scmd_init
     _cli_init
       _memset
       _puts
       _sprintf
         _vfprintf

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _Adc_Isr *
     _ADCC_GetConversionResult

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _Led_Blink *
     _TMR6_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *

 _TMR5_ISR (ROOT)
   Absolute function(Fake) *
   _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer *
   _Timers_Isr *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0     111        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRllhhhh    22A      0       0      85        0.0%
BITBIGSFRllllll    181      0       0     109        0.0%
BITBANK31          100      0       0      66        0.0%
BANK31             100      0       0      67        0.0%
BITBANK30          100      0       0      64        0.0%
BANK30             100      0       0      65        0.0%
BITBANK29          100      0       0      62        0.0%
BANK29             100      0       0      63        0.0%
BITBANK28          100      0       0      60        0.0%
BANK28             100      0       0      61        0.0%
BITBANK27          100      0       0      58        0.0%
BANK27             100      0       0      59        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      FF      11       99.6%
BITBANK2           100      0       0       8        0.0%
BANK2              100     18      DB       9       85.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FF       7       99.6%
BITBIGSFRllhhhh     CB      0       0      81        0.0%
BITBIGSFRllhhhh     A1      0       0      78        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     79      A0       5      100.0%
BITBIGSFRllhhhh     92      0       0      74        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     38      4B       1       78.9%
BITBIGSFRllhhhl     49      0       0      87        0.0%
BITBIGSFRllhhhh     3F      0       0      76        0.0%
BITBIGSFRllllll     33      0       0      98        0.0%
BITBIGSFRllllll     29      0       0      96        0.0%
BITBIGSFRhhhhh      28      0       0      68        0.0%
BITBIGSFRllhhhh     1C      0       0      73        0.0%
BITBIGSFRllllll     16      0       0     101        0.0%
BITBIGSFRllllll     11      0       0     100        0.0%
BITBIGSFRlllllh      B      0       0      95        0.0%
BITBIGSFRllhhl       B      0       0      88        0.0%
BITBIGSFRllllll      7      0       0     106        0.0%
BITBIGSFRllllll      7      0       0     103        0.0%
BITBIGSFRhhlh        6      0       0      70        0.0%
BITBIGSFRllllll      5      0       0     102        0.0%
BITBIGSFRllhhhh      5      0       0      86        0.0%
BITBIGSFRllllhl      5      0       0      94        0.0%
BITBIGSFRlllhl       5      0       0      92        0.0%
BITBIGSFRllhll       5      0       0      90        0.0%
BITBIGSFRllllll      4      0       0     104        0.0%
BITBIGSFRllllll      4      0       0     107        0.0%
BITBIGSFRllhlh       4      0       0      89        0.0%
BITBIGSFRlllhh       4      0       0      91        0.0%
BITBIGSFRllllhh      4      0       0      93        0.0%
BITBIGSFRllhhhh      2      0       0      82        0.0%
BITBIGSFRllhhhh      2      0       0      83        0.0%
BITBIGSFRhhll        2      0       0      71        0.0%
BITBIGSFRhll         2      0       0      72        0.0%
BITBIGSFRllhhhh      1      0       0      84        0.0%
BITBIGSFRllhhhh      1      0       0      80        0.0%
BITBIGSFRllhhhh      1      0       0      79        0.0%
BITBIGSFRllllll      1      0       0     108        0.0%
BITBIGSFRhhhl        1      0       0      69        0.0%
BITBIGSFRllllll      1      0       0     105        0.0%
BITBIGSFRllhhhh      1      0       0      75        0.0%
BITBIGSFRllllll      1      0       0      99        0.0%
BITBIGSFRllhhhh      1      0       0      77        0.0%
BITBIGSFRllllll      1      0       0      97        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3C4     110        0.0%
DATA                 0      0     3C4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Mar  9 08:36:22 2022

                                ___fldiv@aexp 002D                                  ___fldiv@bexp 002C  
            __end_of_TMR5_SetInterruptHandler 5D0A                                  ___fldiv@sign 0025  
                                ?_display_led 0001                                  ___awdiv@sign 001A  
                         ___wmul@multiplicand 0017                             ??_TMR5_WriteTimer 0011  
                             _DAC1_Initialize 5D18                                           l185 5BF4  
                                         l616 58A4                                           l983 4D16  
                                         l994 4D22                                           _GIE 01FE97  
                                         l989 4D1C                                           l999 4D28  
                                         _ana 0039                                           _pad 5120  
                                         _res 0043                                  ___awmod@sign 001A  
                                         tosl 003FFD                                           wreg 003FE8  
                              _DAC1_SetOutput 5D2E                                  ___flmul@aexp 0061  
                                ___flmul@bexp 0062                  ?_ADCC_SetADIInterruptHandler 0015  
                          _UART1_Transmit_ISR 5A40                                  ___flmul@sign 0060  
                                ___flmul@temp 006B                                  ___flmul@prod 0067  
                      __end_of_DAC1_GetOutput 5D3E                                  ___fltol@exp1 001E  
                                        l1004 4D2E                                          l1014 4D3A  
                                        l1120 3E0C                                          l1024 4D46  
                                        l1009 4D34                                          l1034 4D52  
                                        l1019 4D40                                          l1044 4D5E  
                                        l1029 4D4C                                          l1134 4328  
                                        l1039 4D58                                          l1404 49BC  
                                        l2086 491E                                          l2184 58FA  
                                        l1801 4772                                          l2098 40D2  
                                        l1723 38E0                                          l1734 394E  
                                        l1735 394A                                          l1753 3192  
                                        l1905 23EA                                          l1577 4AA4  
                                        l1770 342E                                          l1762 33A8  
                                        l1763 33A4                                          l1587 4FC0  
                                        l1684 3676                                          l1668 35A4  
                                        l1693 36DC                                          l1669 3582  
                                        l1933 274E                                          l1694 36D8  
                                        l1794 46F4                                          l1868 514E  
                                        l1990 3E34                                          ?_pad 0029  
                                        l1969 45D4                                          l1988 3E2C  
                                        l9000 37DA                                          l9012 3812  
                                        l9004 37DE                                          l9120 3142  
                                        l9050 38DE                                          l9026 3840  
                                        l9018 3828                                          l9122 3152  
                                        l9044 38B8                                          l9036 3890  
                                        l9310 5408                                          l9302 53E8  
                                        l9062 3914                                          l9230 344C  
                                        l9214 33EC                                          l9118 313E  
                                        l9304 53F0                                          l9056 38F6  
                                        l9136 317E                                          l9400 4CD8  
                                        l9250 52D8                                          l9314 5412  
                                        l9090 39E0                                          l9082 3992  
                                        l9330 521E                                          l9218 340A  
                                        l9146 31B0                                          l9138 3182  
                                        l9402 4CE4                                          l9420 4A32  
                                        l8702 5890                                          l9262 52FE  
                                        l9318 5420                                          l9086 39B6  
                                        l9334 523C                                          l9326 51EA  
                                        l9350 49A6                                          l9342 495C  
                                        l9430 4A8E                                          l9264 5306  
                                        l9256 52E8                                          l9096 39EC  
                                        l9408 4D00                                          l9440 4F62  
                                        l9282 533E                                          l9274 5326  
                                        l9098 39EE                                          l9346 4990  
                                        l9194 336E                                          l9514 4038  
                                        l9602 2156                                          l9418 4A1E  
                                        l8716 58C4                                          l8740 563C  
                                        l9356 49F4                                          l9188 3350  
                                        l9364 5A2E                                          l8900 36B0  
                                        l9532 4158                                          l9524 40F4  
                                        l9460 5158                                          l9612 21B4  
                                        l9620 2200                                          l8718 58C6  
                                        l8734 4F2C                                          l8742 5640  
                                        l9278 5330                                          l9294 53CE  
                                        l9390 4CC0                                          l9374 4C76  
                                        l9454 5138                                          l9702 2488  
                                        l9630 225E                                          l9614 21D0  
                                        l9446 4FAA                                          l9438 4F4E  
                                        l8728 4E98                                          l9560 41A2  
                                        l8840 3594                                          l8760 348E  
                                        l9480 4B3E                                          l9528 412A  
                                        l9464 5170                                          l9712 24C2  
                                        l9720 25B6                                          l9616 21DA  
                                        l9298 53DA                                          l8906 36BA  
                                        l8826 3536                                          l9394 4CD0  
                                        l9490 4B88                                          l9458 5146  
                                        l9802 28F0                                          l9706 2498  
                                        l9650 2346                                          l9548 57C8  
                                        l8940 3752                                          l8764 3492  
                                        l9484 4B48                                          l9468 519C  
                                        l9644 22C0                                          l9900 4602  
                                        l9558 4194                                          l8934 3748  
                                        l8926 3722                                          l8862 35EA  
                                        l8854 35C8                                          l8838 3590  
                                        l9830 297E                                          l9814 2932  
                                        l9734 2660                                          l9670 23F4  
                                        l9654 2380                                          l9638 227C  
                                        l9582 2114                                          l9910 4666  
                                        l8952 5434                                          l8864 35EE  
                                        l8872 3600                                          l8784 34D6  
                                        l9496 54A2                                          l9832 2988  
                                        l9752 2746                                          l9648 22F8  
                                        l9904 4620                                          l8938 3750  
                                        l8890 369A                                          l8882 3666  
                                        l9842 29DC                                          l9754 2768  
                                        l9746 2724                                          l9666 23D2  
                                        l9594 2140                                          l9914 4680  
                                        l8956 544A                                          l8980 379A  
                                        l8796 34FA                                          l8788 34DA  
                                        l9852 2A08                                          l9684 2442  
                                        l9676 23FA                                          l9932 3E6C  
                                        l9766 27E8                                          l9686 2446  
                                        l9918 4698                                          l9942 3F58  
                                        STR_1 2081                                          l8984 379E  
                                        l9696 2464                                          STR_2 20A1  
                                        STR_3 208D                                          l9970 4862  
                                        l9962 480A                                          l9866 2A58  
                                        l9778 2816                                          l9786 2836  
                                        l9794 285A                                          STR_4 2097  
                                        STR_5 2022                                          l9972 4890  
                                        STR_6 20C7                                          STR_7 20C1  
                                        l9966 4856                                          l9958 4808  
                                        l9886 4598                                          STR_8 20C4  
                                        STR_9 206C                                          l9968 485E  
                                        l9896 45EA                                          l9978 48CA  
                                        _LATA 003FBA                                          _LATB 003FBB  
                                        _LATC 003FBC                                          _LATD 003FBD  
                                        _LATE 003FBE                                          _LATF 003FBF  
                                        _T6PR 003F93                                          _PMD0 0039C0  
                                        _PMD1 0039C1                                          _PMD2 0039C2  
                                        _PMD3 0039C3                                          _PMD4 0039C4  
                                        _PMD5 0039C5                                          _PMD6 0039C6  
                                        _PMD7 0039C7                                          u9520 4E90  
                                        u9540 4ED8                                          u9550 566A  
                                        u9710 35AC                                          _PLLR 01CEE0  
                                        u9660 3558                                          u9557 565C  
                                        u9670 3568                                          u9920 372E  
                                        u9840 36BE                                          u9680 356A  
                                        u9860 36D2                                          u9960 5480  
                                        u9980 59DA                                          u9990 59DC  
                                        u9967 5472                                          _WPUA 003A41  
                                        _WPUB 003A51                                          _WPUC 003A61  
                                        _WPUD 003A71                                          _WPUE 003A81  
                                        _WPUF 003A91                              __end_of_ADCC_ISR 5792  
                                 main@mode_sw 00D7                           ?_UART1_Transmit_ISR 0001  
                                        _dbuf 0198                                          _cmdm 2006  
                                        _atoi 47F6                                          _main 39F6  
                                        _ival 0194                                          _mode 00FD  
                             __end_of_Adc_Isr 5978                                          _prec 00F9  
                                        _nout 00F5                                          pad@i 0030  
                                        pad@p 002D                                          fsr1h 003FE2  
                                        fsr2h 003FDA                                          indf1 003FE7  
                                        indf2 003FDF                                          fsr1l 003FE1  
                                        pad@w 0032                                          fsr2l 003FD9  
                                        _stoa 456E                                          _puts 5904  
                                        _vval 00D9                                          _utoa 3E10  
                               ___fpclassifyf 4AC6                                          prodh 003FF4  
                                        prodl 003FF3                                          start 00AE  
                             _timer5ReloadVal 003F                               ___fldiv@new_exp 0026  
               ??_UART1_SetTxInterruptHandler 0018                             _UART1_rx_vect_isr 5850  
                                ___param_bank 000000                                   ?_UART1_Read 0001  
                          ?_UART1_rx_vect_isr 0001                                         ??_pad 002F  
                        ??_UART1_Transmit_ISR 000B                 __end_of_OSCILLATOR_Initialize 5BFA  
                                       l10000 2ADA                                         l10002 2ADC  
                                       l10020 2AF6                                         l10012 2AEE  
                                       l10004 2AE6                                         l10112 2F72  
                                       l10104 2EF4                                         l10040 2BD8  
                                       l10024 2B00                                         l10016 2AF2  
                                       l10008 2AEA                                         l10130 3084  
                                       l10122 2FDA                                         l10026 2B46  
                                       l10140 30CA                                         l10044 2BE0  
                                       l10206 5802                                         l10062 2CC8  
                                       l10038 2BC0                                         l10240 44DA  
                                       l10136 30BE                                         l10056 2CA8  
                                       l10234 446E                                         l10082 2DFA  
                                       l10074 2D8A                                         l10058 2CC0  
                                       l10146 30DC                                         l10172 5500  
                                       l10254 4564                                         l10246 4516  
                                       l10086 2E24                                         l10174 5522  
                                       l10440 3C90                                         l10248 4548  
                                       l10096 2EA4                                         l10530 4704  
                                       l10434 3C70                                         l10418 5B0E  
                                       l10602 3A7A                                         l10540 4734  
                                       l10444 3D8E                                         l10508 4398  
                                       l10516 43F6                                         l10620 3AC0  
                                       l10612 3AA8                                         l10604 3A80  
                                       l10550 47A4                                         l10542 475A  
                                       l10446 3D90                                         l10622 3AC6  
                                       l10614 3AAE                                         l10536 4722  
                                       l10608 3A94                                         l10538 4728  
                                       l10642 3BD2                                         l10634 3BBE  
                                       l10626 3AD2                                         l10548 4798  
                                       l10476 4D70                                         l10652 3BE4  
                                       l10644 3BD6                                         l10628 3AD8  
                                       l10566 47E4                                         l10494 42E2  
                                       l10638 3BC8                                         l10662 3BF8  
                                       l10648 3BE0                                         l10664 3C1C  
                                       l10592 3A4A                                         l10498 430C  
                                       l10678 3C44                                         l10598 3A66  
                               ___fltol@sign1 001D                                         _ADACT 003EFE  
                                       _ADCAP 003EF5                                         ?_atoi 001C  
                             __end_of___fladd 376E                                         ?_main 0001  
                                       _ADCLK 003EFF                                         _ADCNT 003EEB  
                                       _ADPCH 003EF1                               __end_of___fldiv 39F6  
                                       _ADREF 003EFD                               __end_of___awdiv 5348  
                             __end_of___flneg 5A40                                         STR_10 2069  
                                       STR_11 20AA                                         STR_12 20B2  
                                       STR_21 20BE                                         STR_15 20AE  
                                       STR_24 20BA                                         STR_16 20B6  
                                       STR_26 20BA                                         STR_19 20BE  
                             __end_of___awmod 542A                                         _ADRPT 003EEC  
                             __end_of___flmul 3462                               __end_of___flsub 570C  
                             __end_of___fltol 4D12                                         ?_stoa 0020  
                                       ?_puts 0029                                         ?_utoa 0060  
                                       u11000 5A0A                                         u10200 39A0  
                                       u11010 5A0C                                         u10210 39C4  
                                       u11100 4234                                         u10300 319E  
                                       u11110 4266                                         u11030 57C4  
                                       u11120 4290                                         u10160 3944  
                                       u11130 42BC                                         u11050 41CC  
                                       u11115 4260                                         u11107 4226  
                                       u10500 53F4                                         u10340 339E  
                                       u11300 2412                                         u11117 4252  
                                       u11070 41FC                                         u11127 4282  
                                       u10440 530A                                         u11240 23A8  
                                       u11160 2130                                         u11137 42AE  
                                       u11057 41BE                                         u12210 3DCC  
                                       u12050 5C96                                         u11410 2650  
                             __end_of___lodiv 4AC6                                         u10380 33FA  
                                       u10620 4C64                                         u11340 2460  
                             ___awdiv@divisor 0017                                         u11077 41EE  
                                       u10550 5238                                         u10390 3418  
                                       u10630 4C94                                         u11270 23E0  
                                       u10710 4A36                                         u12320 47AE  
                                       u12208 3D7A                                         u10800 4B04  
                                       u12400 3AA0                                         u12145 5740  
                                       u12146 5742                                         u11610 2A50  
                                       u11530 2914                                         _U1P1H 003DED  
                                       u10635 4C8A                                         u10900 4006  
                                       u10740 4F66                                         _U1P2H 003DEF  
                                       u12181 3C8A                                         u10805 4AFA  
                                       u11621 4578                                         u10670 4CEA  
                                       u10910 4026                                         u11710 46AC  
                                       _U1P3H 003DF1                                         _U1P1L 003DEC  
                                       _U1P2L 003DEE                                         u10905 3FFC  
                                       u11810 48FC                                         u10850 4B80  
                                       u11730 3E22                                         _U1P3L 003DF0  
                                       u10691 49FE                                         u10860 4B82  
                                       u10845 4B62                                         u10950 40B8  
                                       u10870 54E8                                         u11590 29F2  
                                       u11670 4616                                         u11910 2D02  
                                       u10935 4050                                         u10936 4056  
                                       u11680 464A                                         u11760 3F84  
                                       u10937 4064                                         u11761 3F82  
                                       u10970 4112                                         u11770 3F92  
                                       u10955 40AE                                         u11780 3F96  
                                       u10877 54DA                                         u10975 4108  
                                       u11687 463C                                         _T5CLK 003F9D  
                                       u11880 2C1A                               __end_of___lomod 4FE2  
                                       u11980 2F4A                                         _T5CON 003F9A  
                                       _T6CON 003F94                                         _T6HLT 003F95  
                                       _U1UIR 003DF8                                         _U1RXB 003DE8  
                                       _U1TXB 003DEA                        __end_of_DAC1_SetOutput 5D38  
                                       _T6TMR 003F92                                         i2l454 59A4  
                                       i2l640 5A68                                         i2l721 5B4C  
                                       _T6RST 003F97                           ??_UART1_rx_vect_isr 000D  
                             ___awdiv@counter 0019                                         _OSCEN 0039DD  
                                vfpfcnvrt@fmt 00B1                                  vfpfcnvrt@llu 00B8  
                                       _TMR5H 003F99                                         _TMR5L 003F98  
                                       _TRISA 003FC2                                         _TRISB 003FC3  
                                       _TRISC 003FC4                                         _TRISD 003FC5  
                                       _TRISE 003FC6                                         _TRISF 003FC7  
                                 _Default_ISR 5D4C                     ?_TMR6_SetInterruptHandler 0015  
                           _UART1_tx_vect_isr 5810                              __end_of_TMR5_ISR 5632  
                            __end_of_TMR6_ISR 59B2                                         _fh_hi 5C6C  
                                       _fh_ho 5C5A                                         _buff1 0300  
                                       _fh_hw 5C9A                                         _flags 003D  
                                       _fputc 4E80                                         _fputs 542A  
                             __end_of_isdigit 5A12                               ?_DAC1_GetOutput 0001  
                          ?_UART1_tx_vect_isr 0001                                         atoi@n 0024  
                                       pad@fp 0029                                         atoi@s 001C  
                                       _width 00F7                                         _putch 5D24  
                             __end_of_isspace 57D0                               __end_of_isupper 59E2  
                                       pclath 003FFA                                         pclatu 003FFB  
                                       tablat 003FF5                                         plusw1 003FE3  
                                       plusw2 003FDB                                         stoa@i 002C  
                                       stoa@l 0034                                         stoa@p 0032  
                                       stoa@s 0022                                         stoa@w 002E  
                                       puts@s 0029                                         utoa@d 0062  
                                       utoa@i 007E                                         utoa@n 0076  
                                       utoa@p 0072                                         utoa@w 0074  
                                       status 003FD8           __end_of_UART1_SetRxInterruptHandler 5CC4  
                 _UART1_SetRxInterruptHandler 5CB6                               __end_of_sprintf 55E4  
                              ?___fpclassifyf 0015                               __end_of_tolower 5904  
                             __end_of_strncmp 42CC                              ___lodiv@dividend 0015  
    __end_of_UART1_DefaultFramingErrorHandler 5D52            ??_UART1_DefaultFramingErrorHandler 000D  
           ?_UART1_DefaultFramingErrorHandler 0001              _UART1_DefaultFramingErrorHandler 5D50  
                         ??_UART1_tx_vect_isr 000B                     __end_of_UART1_rx_vect_isr 588E  
              ??_TMR6_DefaultInterruptHandler 0008                               _TMR5_Initialize 567E  
                             __initialization 5084                                  __end_of_cmdm 2022  
                                __end_of_atoi 4928                                  __end_of_main 3C4C  
                     __end_of_DAC1_Initialize 5D24                                  __end_of_stoa 46B6  
                                __end_of_puts 593E                                  __end_of_utoa 3FC0  
                 ??_UART1_DefaultErrorHandler 000D                                  ?_UART1_Write 0001  
                                      ??_atoi 001E                                        ??_main 00D5  
                    _TMR5_SetInterruptHandler 5CFC                                        ??_stoa 0024  
                                      ??_puts 002B                                        ??_utoa 006A  
                               __activetblptr 000003                               ?_DAC1_SetOutput 0001  
                   __end_of_UART1_tx_vect_isr 584E                              ___lodiv@quotient 0025  
                             _TMR6_Initialize 5A6E                              _UART1_Initialize 4DCA  
                                      ?_fh_hi 002C                                        ?_fh_ho 002C  
                                      _ADACCH 003EE9                                        ?_fh_hw 002C  
                                      _ADACCL 003EE8                                        _ADACCU 003EEA  
                                      _ADACQH 003EF4                                        _ADACQL 003EF3  
                                      _ADCON0 003EF8                                        _ADCON1 003EF9  
                                      _ADCON2 003EFA                                        _ADCON3 003EFB  
                                      _ADERRH 003EE3                                        _ADERRL 003EE2  
                                   ??_Adc_Isr 0005                                        ?_fputc 0017  
                                      _ADLTHH 003EDF                                        _ADLTHL 003EDE  
                                      ?_fputs 0020                                        _ADRESH 003EF0  
                                      _ADRESL 003EEF                                        _ADPREH 003EF7  
                                      _ADPREL 003EF6                                        _ADSTAT 003EFC  
                                      _ADUTHH 003EE1                              ___awdiv@dividend 0015  
                                      _ADUTHL 003EE0                                        _ANSELA 003A40  
                                      ?_putch 0001                                        _ANSELB 003A50  
                                      _ANSELC 003A60                                        _ANSELD 003A70  
                                      _ANSELE 003A80                                        _ANSELF 003A90  
                                      _RB1I2C 003A5A                                        _RB2I2C 003A5B  
                                      _RD0I2C 003A7A                                        _U1CON0 003DF2  
                                      _U1CON1 003DF3                                        _U1CON2 003DF4  
                                      _RD1I2C 003A7B                                        _RC3I2C 003A6A  
                                      _RC4I2C 003A6B                                        _U1BRGH 003DF6  
                                      _U1FIFO 003DF7                                        _U1BRGL 003DF5  
                                      _T5GATE 003F9C                                        _T5GCON 003F9B  
                          __cli_interpret_cmd 3C4C                                        _RC3PPS 003A13  
                                      _RC5PPS 003A15                                        _ODCONA 003A42  
                                      _ODCONB 003A52                                        _RC6PPS 003A16  
                                      _ODCONC 003A62                                        _ODCOND 003A72  
                                      _ODCONE 003A82                                        _ODCONF 003A92  
                                      i2l6216 507E                                        _INLVLA 003A44  
                                      _INLVLB 003A54                                        _INLVLC 003A64  
                                      i2l6228 596A                                        _INLVLD 003A74  
                                      _INLVLE 003A84                                        _INLVLF 003A94  
                                      i2l6292 557E                                        i2l6196 5A64  
                                      i2l6288 554C                                        i2l5916 5BBC  
                                      _OSCFRQ 0039DF                                 vfpfcnvrt@done 00C2  
                       _UART1_SetErrorHandler 5CE0                              __end_of___xxtofl 47F6  
                  ??_ADCC_GetConversionResult 0003                           ?__cli_interpret_cmd 002E  
                            __end_of_cli_init 52C4                              __end_of_cli_read 4422  
                     DAC1_SetOutput@inputData 0015                                  vfprintf@cfmt 0038  
                                      ___flge 4928                                        ___fleq 51B6  
                                   ??___fladd 001D                                        ___wmul 5A9A  
                                   ??___fldiv 001D                                     ??___awdiv 0019  
                                   ??___flneg 0019                                     ??___awmod 0019  
                                      _g_cmds 01EF                                     ??___flmul 002B  
                                   ??___flsub 0037                                     ??___fltol 0019  
                                   ??___lodiv 0025                                     ??___lomod 0025  
                                      _efgtoa 20CC                                        _floorf 3FC0  
                                      _memset 4422                                        clear_0 50D2  
                                      clear_1 50E4                                        clear_2 50F0  
                                      clear_3 50FC                                        clear_4 5108  
                            ___awdiv@quotient 001B                               ___awmod@divisor 0017  
                                  _Timers_Isr 5544                                        isa$std 000001  
                             ___awmod@counter 0019                                        _printf 5B5A  
                                      pad@buf 002B                                        _strcpy 5492  
                                   ?_ADCC_ISR 0001                                        _strlen 5632  
                             _ADCC_Initialize 5348                                        fputc@c 0017  
                              _PMD_Initialize 5B7C                          ??__cli_interpret_cmd 0060  
                                      fputs@c 0026                                        fputs@i 0027  
                                      fputs@s 0020                                     ??_isdigit 0017  
                             ___fpclassifyf@e 001D                               ___fpclassifyf@u 001F  
                             ___fpclassifyf@x 0015                                  __mediumconst 0000  
                                   ??_isspace 0017                                        tblptrh 003FF7  
                                   ??_isupper 0017                                        tblptrl 003FF6  
                                      tblptru 003FF8                                        stoa@cp 0030  
                                      stoa@fp 0020                              __end_of_vfprintf 5544  
                                      utoa@fp 0060      TMR5_SetInterruptHandler@InterruptHandler 0015  
 UART1_SetTxInterruptHandler@InterruptHandler 0015   UART1_SetRxInterruptHandler@InterruptHandler 0015  
    TMR6_SetInterruptHandler@InterruptHandler 0015   ADCC_SetADIInterruptHandler@InterruptHandler 0015  
        __end_of_UART1_SetOverrunErrorHandler 5CD2                  _UART1_SetOverrunErrorHandler 5CC4  
                   _UART1_DefaultErrorHandler 5D3E                                     ??_sprintf 0039  
                                   ??_tolower 001D                                     ??_strncmp 001F  
                                  ___flge@ff1 002F                                    ___flge@ff2 0033  
                             ??___fpclassifyf 0019                       __end_of_TMR5_Initialize 56C6  
                                ___xxtofl@arg 001F                                  ___xxtofl@exp 001E  
                           _SYSTEM_Initialize 5AC4                                  ___xxtofl@val 0015  
                                  ___fleq@ff1 0015                                    ___fleq@ff2 0019  
                                  __accesstop 0060                       __end_of__initialization 511A  
                                  ___flneg@f1 0015                            ?_SYSTEM_Initialize 0001  
                               ___rparam_used 000001                                    ___fltol@f1 0015  
                             _TMR5_WriteTimer 5B36                             __end_of_Led_Blink 5BDE  
                              __pcstackCOMRAM 0001                                  __pidataBANK0 5D44  
                                __pidataBANK1 5C2C                           ??_SYSTEM_Initialize 001A  
                            ?_DAC1_Initialize 0001                                 __end_of_fh_hi 5C7E  
                               __end_of_fh_ho 5C6C                                 __end_of_fh_hw 5CA8  
                                   ?_TMR5_ISR 0001                                     ?_TMR6_ISR 0001  
                              ivt0x8_undefint 00AC                                 __end_of_fputc 4F34  
                               __end_of_fputs 5492                             ??_SPI1_Initialize 0015  
                               __end_of_putch 5D2E                       __end_of_TMR6_Initialize 5A9A  
                      __end_of_PMD_Initialize 5B9E                                    ??_ADCC_ISR 0006  
                       __end_of_TMR6_CallBack 5B36                            _spi1_configuration 2001  
                       TMR6_ISR@CountCallBack 0041                     _UART1_FramingErrorHandler 00E6  
                                     ??_fh_hi 002E                                       ??_fh_ho 002E  
                                     ??_fh_hw 002E                                       ??_fputc 001B  
                   __end_of_SYSTEM_Initialize 5AEE                                       ??_fputs 0024  
                             linux_putc@a_len 002E                                       ??_putch 0016  
                                  __pbssBANK0 00D9                                    __pbssBANK1 0100  
                                  __pbssBANK2 0200                                    __pbssBANK3 0300  
               ?_UART1_SetOverrunErrorHandler 0015                        ?_UART1_SetErrorHandler 0015  
                                     IVTBASEH 003FD6                                       IVTBASEL 003FD5  
                                     IVTBASEU 003FD7                              linux_getc@a_data 0016  
                              cli_init@a_cmds 02D9                                       ?___flge 002F  
                                     ?___fleq 0015                                  ??_UART1_Read 0015  
                                     ?___wmul 0015              __end_of_TMR6_SetInterruptHandler 5CFC  
                     __end_of_ADCC_Initialize 53BA                                    ??_TMR5_ISR 0013  
                                  ??_TMR6_ISR 0009                                       ?_efgtoa 0071  
                                     _ADFLTRH 003EE7                                       ?_floorf 002E  
                                     _ADFLTRL 003EE6                                       ?_memset 0015  
                                     _ADPREVH 003EEE                                       _ADPREVL 003EED  
                                 ?_Timers_Isr 0001                                       _ADSTPTH 003EE5  
                                     _ADSTPTL 003EE4                                       ?_printf 02C3  
                             ?_PMD_Initialize 0001                             _UART1_Receive_ISR 4FE2  
                                     ?_strcpy 0015                                       ?_strlen 0015  
                                     _U1ERRIE 003DFA                                       _U1ERRIR 003DF9  
                            ??_DAC1_GetOutput 0015                                  ?_Default_ISR 0001  
                          ?_UART1_Receive_ISR 0001                                       _U1RXPPS 003AE5  
                                   ?___xxtofl 0015                                       _OSCCON1 0039D9  
                                     _OSCCON3 0039DB                                       _IVTLOCK 003FD4  
                                     _SPI1CLK 003D1C                                     ?_cli_init 02D7  
                                   ?_cli_read 0032                                       _SPI1RXB 003D10  
                                     _SPI1TXB 003D11                                       _OSCTUNE 0039DE  
                                     _SLRCONA 003A43                                       _SLRCONB 003A53  
                                     _SLRCONC 003A63                                       _SLRCOND 003A73  
                                     _SLRCONE 003A83                                       _SLRCONF 003A93  
                                     _Adc_Isr 593E                                    _build_date 00FF  
                         ??_UART1_Receive_ISR 000D                                    _build_time 00FE  
                            ___lomod@dividend 0015                       __end_of_TMR5_WriteTimer 5B5A  
                          __end_of_UART1_Read 580E                              ?_TMR5_Initialize 0001  
                   INTERRUPT_Initialize@state 0015                                       __Hparam 0000  
                                     __Lparam 0000                      __end_of_UART1_Initialize 4E80  
                  ??_TMR5_SetInterruptHandler 0018                      __cli_interpret_cmd@a_ctx 002E  
                                     ___fladd 3462                                       ___fldiv 376E  
                                     ___awdiv 52C4                                       ___flneg 5A12  
                                     ___awmod 53BA                                       ___flmul 3110  
                                     ___flsub 56C6                                       ___fltol 4C58  
                                     ___lodiv 49F8                                       ___lomod 4F34  
                            ??_DAC1_SetOutput 0015                     __end_of_UART1_Receive_ISR 5084  
                                   ?_vfprintf 00CE                                  __psmallconst 2000  
                                     __pcinit 5084                              ?_TMR6_Initialize 0001  
                                     __ramtop 2000                                       _cli_ctx 0240  
                                     __ptext0 39F6                                       __ptext1 5C14  
                                     __ptext2 5240                                       __ptext3 5596  
                                     __ptext4 5B5A                                       __ptext5 54F2  
                                     __ptext6 2A98                                       __ptext7 3E10  
                                     __ptext8 4F34                                       __ptext9 49F8  
                       _OSCILLATOR_Initialize 5BDE                                       _isdigit 59E2  
                                  ??___xxtofl 0019                              ___awmod@dividend 0015  
                    ??_PIN_MANAGER_Initialize 0015                                       _isspace 5792  
                                 Timers_Isr@i 0011                                     _T5CONbits 003F9A  
                                     _isupper 59B2                                       efgtoa@c 0077  
                                     efgtoa@d 008F                                       efgtoa@e 00A7  
                                     efgtoa@f 0073                                       efgtoa@g 00A1  
                                     efgtoa@h 0099                                       efgtoa@i 00A5  
                                     efgtoa@l 009D                                       efgtoa@m 0089  
                                     efgtoa@n 00A9                                       efgtoa@p 0093  
                                     efgtoa@t 0083                                       efgtoa@u 00AB  
                                     efgtoa@w 0096                                    ??_cli_init 0039  
                                  ??_cli_read 0034                                       atoi@neg 0022  
                                  _linux_getc 5AEE                                       _sprintf 5596  
                                     _tolower 58CA                                    _linux_putc 5C7E  
                           __end_of_scmd_init 5C2C                                       _strncmp 416A  
                        end_of_initialization 511A                                       floorf@e 0064  
                                     floorf@m 0060                                       floorf@u 0066  
                                     floorf@x 002E                                       fputc@fp 0019  
                                     memset@c 0017                                       memset@k 001D  
                                     memset@n 0019                                       memset@s 001F  
         __end_of_UART1_SetTxInterruptHandler 5CB6                   _UART1_SetTxInterruptHandler 5CA8  
                                     fputs@fp 0022                                display_led@led 0017  
              ??_UART1_SetOverrunErrorHandler 0018                             __end_of_vfpfcnvrt 3110  
                                  efgtoa@mode 0098                                    efgtoa@sign 0091  
                                   _SPI1TCNTL 003D12                                       postdec1 003FE5  
                                     postdec2 003FDD                                       postinc0 003FEE  
                                     postinc1 003FE6                                       postinc2 003FDE  
                            ?_ADCC_Initialize 0001                                    ??_vfprintf 0038  
                           UART1_Write@txData 0015                           _UART1_RxDataHandler 5B9E  
                                     strcpy@d 001D                                       strlen@a 0017  
                                     strcpy@s 001B                                       strlen@s 0015  
                                   _PORTAbits 003FCA                                     _PORTBbits 003FCB  
                    _TMR6_SetInterruptHandler 5CEE                         _TMR5_InterruptHandler 00DD  
                                 ___fladd@grs 0024           __end_of_ADCC_SetADIInterruptHandler 5D18  
                 _ADCC_SetADIInterruptHandler 5D0A                                 ___xxtofl@sign 001D  
                                   _TRISCbits 003FC4                                   ___fldiv@grs 0028  
                                 ___fldiv@rem 0021                          ?_UART1_RxDataHandler 0001  
                            ?_TMR5_WriteTimer 000F                       TMR5_WriteTimer@timerVal 000F  
                                 ___flmul@grs 0063                 ??_ADCC_SetADIInterruptHandler 0018  
                             _SPI1_Initialize 5BFA                  __end_of_INTERRUPT_Initialize 5750  
                                   _Led_Blink 5BC0                                 ??_display_led 0015  
              ??_ADCC_DefaultInterruptHandler 0001                                __end_of___flge 49F8  
                              __end_of___fleq 5240                                   vfpfcnvrt@ap 00B2  
                                 vfpfcnvrt@cp 00C0                                   vfpfcnvrt@ct 00CB  
                                 vfpfcnvrt@fp 00AF                                __end_of___wmul 5AC4  
                              __end_of_efgtoa 2A98                                __end_of_floorf 416A  
                      ?_OSCILLATOR_Initialize 0001                                    floorf@F526 018C  
                              __end_of_memset 456E                     ?_ADCC_GetConversionResult 0001  
                              __end_of_printf 5B7C                                __end_of_strcpy 54F2  
                              __end_of_strlen 567E                           start_initialization 5084  
                             ___lodiv@divisor 001D                               ___lodiv@counter 002D  
        __end_of_TMR5_DefaultInterruptHandler 5D54                  _TMR5_DefaultInterruptHandler 5D52  
                                 __end_of_pad 51B6                       ??_UART1_SetErrorHandler 0018  
                                 ?_linux_getc 0016                                   ?_linux_putc 002C  
                       ??_UART1_RxDataHandler 000D                                   putch@txData 0016  
                                  ivt0x8_base 0008                                 _uart1RxBuffer 0200  
                       __end_of___fpclassifyf 4B92                                 _uart1TxBuffer 0140  
                                 vfprintf@fmt 00D0                                      ??___flge 006D  
                                    ??___fleq 001D                              ??_PMD_Initialize 0015  
                                    ??___wmul 0019                                    ?_Led_Blink 0001  
                                    ??_efgtoa 0078                                   __pdataBANK0 00FD  
                                 __pdataBANK1 01E8                                      ??_floorf 0032  
                                    ??_memset 001B                                  ??_Timers_Isr 000F  
                                  memset@dest 0015                                      ??_printf 0039  
                                    ??_strcpy 0019                                      ??_strlen 0017  
                                   ___fladd@a 0019                                     ___fladd@b 0015  
                                   ___fldiv@a 0019                                     ___fldiv@b 0015  
                         __end_of_display_led 4DCA                                     ___flmul@a 0027  
                                   ___flmul@b 0023                                   __pbssCOMRAM 0039  
                                   ___flsub@a 0033                                     ___flsub@b 002F  
                          _UART1_ErrorHandler 00E0                                 __pcstackBANK0 0060  
                               __pcstackBANK2 02C3                       __end_of_SPI1_Initialize 5C14  
                    _UART1_RxInterruptHandler 00F2                 ?_TMR5_DefaultInterruptHandler 0001  
                                    ?_Adc_Isr 0001                                linux_putc@data 002C  
                ?_UART1_SetRxInterruptHandler 0015                            __end_of_Timers_Isr 5596  
                       _TMR6_InterruptHandler 00E9                                   _efgtoa$2730 007F  
                                 _efgtoa$2722 007D                                   _efgtoa$2731 0081  
                      _PIN_MANAGER_Initialize 4B92                                 cli_init@a_ctx 02D7  
                           ?_UART1_Initialize 0001          __end_of_UART1_SetFramingErrorHandler 5CE0  
                _UART1_SetFramingErrorHandler 5CD2                                 cli_read@a_ctx 0032  
                                    ?___fladd 0015                           UART1_Read@readValue 0015  
                                    ?___fldiv 0015                                      ?___awdiv 0015  
                                    ?___flneg 0015                                      ?___awmod 0015  
                                    ?___flmul 0023                                      ?___flsub 002F  
                                    ?___fltol 0015                                      ?___lodiv 0015  
                                    ?___lomod 0015                            ??_UART1_Initialize 0018  
                            _uart1RxLastError 0045                                 _cli_read$2150 006A  
                               ??_UART1_Write 0015                                      _DAC1CON0 003E9E  
                                    _DAC1CON1 003E9C                                     _disp_tick 00FC  
                                    _ADCC_ISR 5750                               ___lomod@divisor 001D  
                                 __smallconst 2000                               ___lomod@counter 0025  
    __end_of_UART1_DefaultOverrunErrorHandler 5D50            ??_UART1_DefaultOverrunErrorHandler 000D  
           ?_UART1_DefaultOverrunErrorHandler 0001              _UART1_DefaultOverrunErrorHandler 5D4E  
                                    ?_isdigit 0015                                      ?_isspace 0015  
                                    ?_isupper 0015                                      ?_sprintf 02C3  
                                    ?_tolower 001B                                      ?_strncmp 0019  
                                 _U1ERRIRbits 003DF9                          _INTERRUPT_Initialize 570C  
                                    _T6CLKCON 003F96                          __cli_interpret_cmd@i 0031  
                              ___wmul@product 0019                                      _LATAbits 003FBA  
       UART1_SetErrorHandler@interruptHandler 0015                                      _LATDbits 003FBD  
                                    _LATEbits 003FBE                                     _scmd_init 5C14  
                                    _LATFbits 003FBF                                      _IPR1bits 003981  
                                    _PIE1bits 003991                                      _IPR3bits 003983  
                                    _PIE3bits 003993                                     _tickCount 0180  
                                    _IPR8bits 003988                                      _IPR9bits 003989  
                                    _PIE8bits 003998                                      _PIE9bits 003999  
                                    _IVTBASEH 003FD6                                      _IVTBASEL 003FD5  
                                    _IVTBASEU 003FD7                                     cli_read@i 006C  
               ??_UART1_SetRxInterruptHandler 0018                                      _PIR1bits 0039A1  
                                    _PIR2bits 0039A2                                      _SPI1BAUD 003D19  
                                    i2u611_48 5068                                      i2u603_48 5B22  
                                    i2u631_40 5998                                      i2u630_48 5770  
                                    i2u630_49 5784                                      _SPI1CON0 003D14  
                                    _SPI1CON1 003D15                                      _SPI1CON2 003D16  
                                    i2u607_48 500C                                      i2u607_49 5022  
                                   _puts$2913 002B                                      i2u618_40 5594  
                                    i2u609_48 503C                                      i2u633_48 582C  
                                    i2u609_49 5052                                      i2u633_49 5840  
                                    i2u635_48 586C                                      i2u635_49 5880  
                                    i2u637_48 5610                                      i2u637_49 5624  
                                    _PIR8bits 0039A8                                      _PIR9bits 0039A9  
                                    i2u594_40 5BC8                                      i2u594_46 5BCA  
                  ??_TMR6_SetInterruptHandler 0018                                   ??_Led_Blink 0008  
                  __end_of_UART1_Transmit_ISR 5A6E                                      _TMR5_ISR 55E4  
                                    _TMR6_ISR 5978                 ?_UART1_SetFramingErrorHandler 0015  
                                 _display_led 4D12                                     _vfpfcnvrt 2A98  
                           ___wmul@multiplier 0015                                     main@dac_v 00D8  
                               _TMR6_CallBack 5B12                     ?_TMR5_SetInterruptHandler 0015  
                         __end_of_UART1_Write 58CA                                  _isspace$2834 001B  
                                  vfpfcnvrt@c 00C6                                    vfpfcnvrt@f 00C7  
                            ?_SPI1_Initialize 0001                                   _INTCON0bits 003FD2  
                                   copy_data0 5098                         ?_INTERRUPT_Initialize 0001  
                           ??_DAC1_Initialize 0015                        _uart1TxBufferRemaining 0049  
              ??_TMR5_DefaultInterruptHandler 000F                                    ?_scmd_init 0001  
                                _uart1RxCount 0046                                      __Hrparam 0000  
            __end_of_ADCC_GetConversionResult 5C5A                                    vfprintf@ap 00D1  
                                    __Lrparam 0000                                    vfprintf@fp 00CE  
                     ??_OSCILLATOR_Initialize 0015                                    ?_vfpfcnvrt 00AF  
                                    _adc_chan 0044                                      _adc_tick 00FB  
                              ?_TMR6_CallBack 0001                            ___fpclassifyf@F465 0190  
                                  sprintf@fmt 02C5                                      ___xxtofl 46B6  
                                    __pivt0x8 0008                                      _cli_init 5240  
                                    _cli_read 42CC                                      __ptext10 456E  
                                    __ptext11 20CC                                      __ptext20 3462  
                                    __ptext12 58CA                                      __ptext21 5A12  
                                    __ptext13 59B2                                      __ptext30 59E2  
                                    __ptext22 3110                                      __ptext14 5492  
                                    __ptext31 5A9A                                      __ptext23 4928  
                                    __ptext15 5120                                      __ptext40 416A  
                                    __ptext32 4D12                                      __ptext24 51B6  
                                    __ptext16 3FC0                                      __ptext41 5632  
                                    __ptext33 42CC                                      __ptext25 376E  
                                    __ptext17 4AC6                                      __ptext50 46B6  
                                    __ptext42 5C5A                                      __ptext34 4422  
                                    __ptext26 53BA                                      __ptext18 4C58  
                                    __ptext51 5AC4                                      __ptext43 5C6C  
                                    __ptext35 5C7E                                      __ptext27 52C4  
                                    __ptext19 56C6                                      __ptext60 567E  
                                    __ptext52 4DCA                                      __ptext44 5C9A  
                                    __ptext36 5AEE                                      __ptext28 47F6  
                                    __ptext61 5CFC                                      __ptext53 5CA8  
                                    __ptext45 5904                                      __ptext37 5C8C  
                                    __ptext29 5792                                      __ptext70 5D2E  
                                    __ptext62 5BFA                                      __ptext54 5CB6  
                                    __ptext46 542A                                      __ptext38 57D0  
                                    __ptext71 5D38                                      __ptext63 5B7C  
                                    __ptext55 5CC4                                      __ptext47 4E80  
                                    __ptext39 3C4C                                      __ptext80 5D4C  
                                    __ptext72 5750                                      __ptext64 4B92  
                                    __ptext56 5CD2                                      __ptext48 5D24  
                                    __ptext81 5810                                      __ptext73 5D48  
                                    __ptext65 5BDE                                      __ptext57 5CE0  
                                    __ptext49 588E                                      __ptext90 5D52  
                                    __ptext82 5A40                                      __ptext74 593E  
                                    __ptext66 570C                                      __ptext58 5A6E  
                                    __ptext91 5544                                      __ptext83 5850  
                                    __ptext75 5C44                                      __ptext67 5D18  
                                    __ptext59 5CEE                                      __ptext92 5B36  
                                    __ptext84 4FE2                                      __ptext76 5978  
                                    __ptext68 5348                                      __ptext93 0000  
                                    __ptext85 5D4E                                      __ptext77 5B12  
                                    __ptext69 5D0A                                      __ptext86 5D50  
                                    __ptext78 5BC0                                      __ptext87 5D3E  
                                    __ptext79 5D4A                                      __ptext88 5B9E  
                                    __ptext89 55E4                                  ??_linux_getc 0017  
                                ??_linux_putc 002F                 __end_of_UART1_SetErrorHandler 5CEE  
                                  strcpy@dest 0015                                   fh_hi@a_data 002C  
                      __cli_interpret_cmd@ret 0030                                   _IVTLOCKbits 003FD4  
                                 fh_ho@a_data 002C                                      efgtoa@fp 0071  
                                    efgtoa@ne 0087                                      efgtoa@pp 0085  
                                    efgtoa@ou 008B                     _UART1_OverrunErrorHandler 00E3  
                   _ADCC_ADI_InterruptHandler 00EC                                     stoa@F1164 01E8  
UART1_SetOverrunErrorHandler@interruptHandler 0015                                      isa$xinst 000000  
                  ?_UART1_DefaultErrorHandler 0001                                      _vfprintf 54F2  
                                   printf@fmt 02C3                            __end_of_linux_getc 5B12  
                                 fh_hw@a_data 002C                             _UART1_is_rx_ready 5C8C  
                          __end_of_linux_putc 5C8C                                   _UART1_Write 588E  
                  __end_of__cli_interpret_cmd 3E10                             ??_TMR5_Initialize 0018  
                          ?_UART1_is_rx_ready 0001                                 ??_Default_ISR 000B  
              ??_UART1_SetFramingErrorHandler 0018                                _vfpfcnvrt$2769 00C4  
                 __end_of_UART1_RxDataHandler 5BC0                                   _uart1RxHead 0048  
                                 _uart1TxHead 004B                                   _uart1RxTail 0047  
                                 _uart1TxTail 004A                                      isdigit@c 0015  
                      ??_INTERRUPT_Initialize 0015                           ??_UART1_is_rx_ready 0015  
        __end_of_TMR6_DefaultInterruptHandler 5D4C                  _TMR6_DefaultInterruptHandler 5D4A  
        __end_of_ADCC_DefaultInterruptHandler 5D4A                  _ADCC_DefaultInterruptHandler 5D48  
                                    intlevel2 0000                                     sprintf@ap 02CA  
                                    isspace@c 0015                       ?_PIN_MANAGER_Initialize 0001  
                           ??_TMR6_Initialize 0018                                   ??_scmd_init 0039  
                                   strcpy@src 0017                                      isupper@c 0015  
                                   strncmp@_l 0019                                     strncmp@_r 001B  
                         _uart1RxStatusBuffer 0100                                   efgtoa@nmode 0095  
                                  _SPI1SDIPPS 003ADF                                    _SPI1SCKPPS 003ADE  
                                    printf@ap 00D3                     __end_of_UART1_is_rx_ready 5C9A  
                                  _UART1_Read 57D0  UART1_SetFramingErrorHandler@interruptHandler 0015  
                    _ADCC_GetConversionResult 5C44             __end_of_UART1_DefaultErrorHandler 5D44  
                                 ??_vfpfcnvrt 00B4                                      stoa@nuls 0025  
                             ??_TMR6_CallBack 0009                                      sprintf@f 02CC  
                                    tolower@c 001B                                      sprintf@s 02C3  
                                    strncmp@l 0021                                      strncmp@n 001D  
                                    strncmp@r 0023                      _UART1_TxInterruptHandler 00EF  
                               ___fladd@signs 0021                           __end_of_Default_ISR 5D4E  
              __end_of_PIN_MANAGER_Initialize 4C58                             ??_ADCC_Initialize 0018  
                              _DAC1_GetOutput 5D38                 ?_TMR6_DefaultInterruptHandler 0001  
                                ___fladd@aexp 0022                                  ___fladd@bexp 0023  
               ?_ADCC_DefaultInterruptHandler 0001                  ?_UART1_SetTxInterruptHandler 0015  
                  __end_of_spi1_configuration 2006  
